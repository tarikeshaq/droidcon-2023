abi:
(__TEXT,__text) section
__ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17he51dc1444b523769E:
0000000100003cc0	pushq	%rbp
0000000100003cc1	movq	%rsp, %rbp
0000000100003cc4	callq	__ZN4core3ops8function6FnOnce9call_once17h162d4daae95ed747E ## core::ops::function::FnOnce::call_once::h162d4daae95ed747
0000000100003cc9	popq	%rbp
0000000100003cca	retq
0000000100003ccb	nopl	(%rax,%rax)
__ZN3std2rt10lang_start17h1c2e16d44dc07b4dE:
0000000100003cd0	pushq	%rbp
0000000100003cd1	movq	%rsp, %rbp
0000000100003cd4	subq	$0x10, %rsp
0000000100003cd8	movl	%ecx, %eax
0000000100003cda	movq	%rdx, %rcx
0000000100003cdd	movq	%rsi, %rdx
0000000100003ce0	movq	%rdi, -0x8(%rbp)
0000000100003ce4	leaq	-0x8(%rbp), %rdi
0000000100003ce8	leaq	0x44529(%rip), %rsi
0000000100003cef	movzbl	%al, %r8d
0000000100003cf3	callq	__ZN3std2rt19lang_start_internal17h4f6dde0e5153fc54E ## std::rt::lang_start_internal::h4f6dde0e5153fc54
0000000100003cf8	movq	%rax, -0x10(%rbp)
0000000100003cfc	movq	-0x10(%rbp), %rax
0000000100003d00	addq	$0x10, %rsp
0000000100003d04	popq	%rbp
0000000100003d05	retq
0000000100003d06	nopw	%cs:(%rax,%rax)
__ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17he8a8526e002a9152E:
0000000100003d10	pushq	%rbp
0000000100003d11	movq	%rsp, %rbp
0000000100003d14	subq	$0x10, %rsp
0000000100003d18	movq	(%rdi), %rdi
0000000100003d1b	callq	__ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17he51dc1444b523769E ## std::sys_common::backtrace::__rust_begin_short_backtrace::he51dc1444b523769
0000000100003d20	callq	__ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h7a1faa68b1614b71E ## _$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$::report::h7a1faa68b1614b71
0000000100003d25	movb	%al, -0x1(%rbp)
0000000100003d28	movzbl	-0x1(%rbp), %eax
0000000100003d2c	addq	$0x10, %rsp
0000000100003d30	popq	%rbp
0000000100003d31	retq
0000000100003d32	nopw	%cs:(%rax,%rax)
0000000100003d3c	nopl	(%rax)
__ZN4core3fmt9Arguments6new_v117hf87e5e3f3172916fE:
0000000100003d40	pushq	%rbp
0000000100003d41	movq	%rsp, %rbp
0000000100003d44	subq	$0x90, %rsp
0000000100003d4b	movq	%r8, -0x88(%rbp)
0000000100003d52	movq	%rcx, -0x80(%rbp)
0000000100003d56	movq	%rdx, -0x78(%rbp)
0000000100003d5a	movq	%rsi, -0x70(%rbp)
0000000100003d5e	movq	%rdi, -0x68(%rbp)
0000000100003d62	movq	%rdi, -0x60(%rbp)
0000000100003d66	cmpq	%r8, %rdx
0000000100003d69	jb	0x100003d87
0000000100003d6b	movq	-0x78(%rbp), %rax
0000000100003d6f	movq	-0x88(%rbp), %rcx
0000000100003d76	addq	$0x1, %rcx
0000000100003d7a	cmpq	%rcx, %rax
0000000100003d7d	seta	%al
0000000100003d80	andb	$0x1, %al
0000000100003d82	movb	%al, -0x51(%rbp)
0000000100003d85	jmp	0x100003d8b
0000000100003d87	movb	$0x1, -0x51(%rbp)
0000000100003d8b	testb	$0x1, -0x51(%rbp)
0000000100003d8f	jne	0x100003ddc
0000000100003d91	movq	-0x60(%rbp), %rax
0000000100003d95	movq	-0x68(%rbp), %rcx
0000000100003d99	movq	-0x88(%rbp), %rdx
0000000100003da0	movq	-0x80(%rbp), %rsi
0000000100003da4	movq	-0x78(%rbp), %rdi
0000000100003da8	movq	-0x70(%rbp), %r8
0000000100003dac	movq	$0x0, -0x20(%rbp)
0000000100003db4	movq	%r8, (%rcx)
0000000100003db7	movq	%rdi, 0x8(%rcx)
0000000100003dbb	movq	-0x20(%rbp), %r8
0000000100003dbf	movq	-0x18(%rbp), %rdi
0000000100003dc3	movq	%r8, 0x20(%rcx)
0000000100003dc7	movq	%rdi, 0x28(%rcx)
0000000100003dcb	movq	%rsi, 0x10(%rcx)
0000000100003dcf	movq	%rdx, 0x18(%rcx)
0000000100003dd3	addq	$0x90, %rsp
0000000100003dda	popq	%rbp
0000000100003ddb	retq
0000000100003ddc	movq	$0x0, -0x10(%rbp)
0000000100003de4	leaq	0x4445d(%rip), %rax
0000000100003deb	movq	%rax, -0x50(%rbp)
0000000100003def	movq	$0x1, -0x48(%rbp)
0000000100003df7	movq	-0x10(%rbp), %rcx
0000000100003dfb	movq	-0x8(%rbp), %rax
0000000100003dff	movq	%rcx, -0x30(%rbp)
0000000100003e03	movq	%rax, -0x28(%rbp)
0000000100003e07	leaq	0x3fd92(%rip), %rax
0000000100003e0e	movq	%rax, -0x40(%rbp)
0000000100003e12	movq	$0x0, -0x38(%rbp)
0000000100003e1a	leaq	0x44437(%rip), %rsi
0000000100003e21	leaq	-0x50(%rbp), %rdi
0000000100003e25	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100003e2a	nopw	(%rax,%rax)
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h9a79de0796b62ec1E:
0000000100003e30	pushq	%rbp
0000000100003e31	movq	%rsp, %rbp
0000000100003e34	subq	$0x10, %rsp
0000000100003e38	movq	(%rdi), %rdi
0000000100003e3b	callq	__ZN4core3ops8function6FnOnce9call_once17hd9086f7bdf342acbE ## core::ops::function::FnOnce::call_once::hd9086f7bdf342acb
0000000100003e40	addq	$0x10, %rsp
0000000100003e44	popq	%rbp
0000000100003e45	retq
0000000100003e46	nopw	%cs:(%rax,%rax)
__ZN4core3ops8function6FnOnce9call_once17h162d4daae95ed747E:
0000000100003e50	pushq	%rbp
0000000100003e51	movq	%rsp, %rbp
0000000100003e54	subq	$0x10, %rsp
0000000100003e58	callq	*%rdi
0000000100003e5a	addq	$0x10, %rsp
0000000100003e5e	popq	%rbp
0000000100003e5f	retq
__ZN4core3ops8function6FnOnce9call_once17hd9086f7bdf342acbE:
0000000100003e60	pushq	%rbp
0000000100003e61	movq	%rsp, %rbp
0000000100003e64	subq	$0x30, %rsp
0000000100003e68	movq	%rdi, -0x20(%rbp)
0000000100003e6c	leaq	-0x20(%rbp), %rdi
0000000100003e70	callq	__ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17he8a8526e002a9152E ## std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he8a8526e002a9152
0000000100003e75	movl	%eax, -0x24(%rbp)
0000000100003e78	jmp	0x100003e91
0000000100003e7a	movq	-0x10(%rbp), %rdi
0000000100003e7e	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100003e83	movq	%rax, %rcx
0000000100003e86	movl	%edx, %eax
0000000100003e88	movq	%rcx, -0x10(%rbp)
0000000100003e8c	movl	%eax, -0x8(%rbp)
0000000100003e8f	jmp	0x100003e7a
0000000100003e91	movl	-0x24(%rbp), %eax
0000000100003e94	addq	$0x30, %rsp
0000000100003e98	popq	%rbp
0000000100003e99	retq
0000000100003e9a	nopw	(%rax,%rax)
__ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hc05604f6620e9127E:
0000000100003ea0	pushq	%rbp
0000000100003ea1	movq	%rsp, %rbp
0000000100003ea4	popq	%rbp
0000000100003ea5	retq
0000000100003ea6	nopw	%cs:(%rax,%rax)
__ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h7a1faa68b1614b71E:
0000000100003eb0	pushq	%rbp
0000000100003eb1	movq	%rsp, %rbp
0000000100003eb4	xorl	%eax, %eax
0000000100003eb6	popq	%rbp
0000000100003eb7	retq
0000000100003eb8	nopl	(%rax,%rax)
_add:
0000000100003ec0	pushq	%rbp
0000000100003ec1	movq	%rsp, %rbp
0000000100003ec4	subq	$0x10, %rsp
0000000100003ec8	addl	%esi, %edi
0000000100003eca	movl	%edi, -0x4(%rbp)
0000000100003ecd	setb	%al
0000000100003ed0	testb	$0x1, %al
0000000100003ed2	jne	0x100003edd
0000000100003ed4	movl	-0x4(%rbp), %eax
0000000100003ed7	addq	$0x10, %rsp
0000000100003edb	popq	%rbp
0000000100003edc	retq
0000000100003edd	leaq	_str.0(%rip), %rdi
0000000100003ee4	leaq	0x44385(%rip), %rdx
0000000100003eeb	movl	$0x1c, %esi
0000000100003ef0	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100003ef5	nopw	%cs:(%rax,%rax)
0000000100003eff	nop
_caller:
0000000100003f00	pushq	%rbp
0000000100003f01	movq	%rsp, %rbp
0000000100003f04	subq	$0x60, %rsp
0000000100003f08	movl	$0x1, %edi
0000000100003f0d	movl	$0x2, %esi
0000000100003f12	callq	_add
0000000100003f17	movl	%eax, -0x54(%rbp)
0000000100003f1a	leaq	-0x54(%rbp), %rax
0000000100003f1e	movq	%rax, -0x10(%rbp)
0000000100003f22	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
0000000100003f29	movq	%rax, -0x8(%rbp)
0000000100003f2d	movq	-0x10(%rbp), %rcx
0000000100003f31	movq	-0x8(%rbp), %rax
0000000100003f35	movq	%rcx, -0x20(%rbp)
0000000100003f39	movq	%rax, -0x18(%rbp)
0000000100003f3d	leaq	-0x50(%rbp), %rdi
0000000100003f41	leaq	0x44340(%rip), %rsi
0000000100003f48	movl	$0x2, %edx
0000000100003f4d	leaq	-0x20(%rbp), %rcx
0000000100003f51	movl	$0x1, %r8d
0000000100003f57	callq	__ZN4core3fmt9Arguments6new_v117hf87e5e3f3172916fE ## core::fmt::Arguments::new_v1::hf87e5e3f3172916f
0000000100003f5c	leaq	-0x50(%rbp), %rdi
0000000100003f60	callq	__ZN3std2io5stdio6_print17h14e4a658f0d1dd1dE ## std::io::stdio::_print::h14e4a658f0d1dd1d
0000000100003f65	addq	$0x60, %rsp
0000000100003f69	popq	%rbp
0000000100003f6a	retq
0000000100003f6b	nopl	(%rax,%rax)
__ZN3abi4main17h4049fb60692834aaE:
0000000100003f70	pushq	%rbp
0000000100003f71	movq	%rsp, %rbp
0000000100003f74	callq	_caller
0000000100003f79	popq	%rbp
0000000100003f7a	retq
0000000100003f7b	nopl	(%rax,%rax)
_main:
0000000100003f80	pushq	%rbp
0000000100003f81	movq	%rsp, %rbp
0000000100003f84	movq	%rsi, %rdx
0000000100003f87	movslq	%edi, %rsi
0000000100003f8a	leaq	__ZN3abi4main17h4049fb60692834aaE(%rip), %rdi ## abi::main::h4049fb60692834aa
0000000100003f91	xorl	%ecx, %ecx
0000000100003f93	callq	__ZN3std2rt10lang_start17h1c2e16d44dc07b4dE ## std::rt::lang_start::h1c2e16d44dc07b4d
0000000100003f98	popq	%rbp
0000000100003f99	retq
0000000100003f9a	nop
0000000100003f9b	nop
0000000100003f9c	nop
0000000100003f9d	nop
0000000100003f9e	nop
0000000100003f9f	nop
___rust_alloc:
0000000100003fa0	jmp	___rdl_alloc
0000000100003fa5	nopw	%cs:(%rax,%rax)
0000000100003faf	nop
___rust_dealloc:
0000000100003fb0	jmp	___rdl_dealloc
0000000100003fb5	nopw	%cs:(%rax,%rax)
0000000100003fbf	nop
___rust_realloc:
0000000100003fc0	jmp	___rdl_realloc
0000000100003fc5	nopw	%cs:(%rax,%rax)
0000000100003fcf	nop
___rust_alloc_error_handler:
0000000100003fd0	jmp	___rg_oom
0000000100003fd5	nop
0000000100003fd6	nop
0000000100003fd7	nop
0000000100003fd8	nop
0000000100003fd9	nop
0000000100003fda	nop
0000000100003fdb	nop
0000000100003fdc	nop
0000000100003fdd	nop
0000000100003fde	nop
0000000100003fdf	nop
__ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h87de40a7f599f31eE:
0000000100003fe0	pushq	%rbp
0000000100003fe1	movq	%rsp, %rbp
0000000100003fe4	movq	%rsi, %r9
0000000100003fe7	subq	%rdi, %r9
0000000100003fea	jb	0x100003ffc
0000000100003fec	cmpq	%rcx, %rsi
0000000100003fef	ja	0x100004004
0000000100003ff1	addq	%rdi, %rdx
0000000100003ff4	movq	%rdx, %rax
0000000100003ff7	movq	%r9, %rdx
0000000100003ffa	popq	%rbp
0000000100003ffb	retq
0000000100003ffc	movq	%r8, %rdx
0000000100003fff	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
0000000100004004	movq	%rsi, %rdi
0000000100004007	movq	%rcx, %rsi
000000010000400a	movq	%r8, %rdx
000000010000400d	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100004012	nopw	%cs:(%rax,%rax)
000000010000401c	nopl	(%rax)
__ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h400d1fa734c3ca5dE:
0000000100004020	pushq	%rbp
0000000100004021	movq	%rsp, %rbp
0000000100004024	movabsq	$-0x3e5d376332e1843f, %rax      ## imm = 0xC1A2C89CCD1E7BC1
000000010000402e	movabsq	$-0x243e97eff4e109c, %rdx       ## imm = 0xFDBC168100B1EF64
0000000100004038	popq	%rbp
0000000100004039	retq
000000010000403a	nopw	(%rax,%rax)
__ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hc11d5504ea9de126E:
0000000100004040	pushq	%rbp
0000000100004041	movq	%rsp, %rbp
0000000100004044	movabsq	$-0x2b5ed91ee92b041f, %rax      ## imm = 0xD4A126E116D4FBE1
000000010000404e	movabsq	$0x2695eb7b66cc2182, %rdx       ## imm = 0x2695EB7B66CC2182
0000000100004058	popq	%rbp
0000000100004059	retq
000000010000405a	nopw	(%rax,%rax)
__ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hddfd74386e92d030E:
0000000100004060	pushq	%rbp
0000000100004061	movq	%rsp, %rbp
0000000100004064	movabsq	$-0x6c21651b7d3b4eb4, %rax      ## imm = 0x93DE9AE482C4B14C
000000010000406e	movabsq	$0x4ad571a26cddb860, %rdx       ## imm = 0x4AD571A26CDDB860
0000000100004078	popq	%rbp
0000000100004079	retq
000000010000407a	nopw	(%rax,%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h111a6a40b4e38ae2E:
0000000100004080	pushq	%rbp
0000000100004081	movq	%rsp, %rbp
0000000100004084	movq	%rsi, %rdi
0000000100004087	leaq	0x3fd0e(%rip), %rsi
000000010000408e	movl	$0x2, %edx
0000000100004093	popq	%rbp
0000000100004094	jmp	__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE ## core::fmt::Formatter::pad::h699bd9f3561ce56c
0000000100004099	nopl	(%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1eabe6f071de4626E:
00000001000040a0	pushq	%rbp
00000001000040a1	movq	%rsp, %rbp
00000001000040a4	movq	%rsi, %rdx
00000001000040a7	movq	(%rdi), %rax
00000001000040aa	movq	0x8(%rdi), %rsi
00000001000040ae	movq	%rax, %rdi
00000001000040b1	popq	%rbp
00000001000040b2	jmp	__ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad51f5198b8b56bE ## _$LT$str$u20$as$u20$core..fmt..Debug$GT$::fmt::h9ad51f5198b8b56b
00000001000040b7	nopw	(%rax,%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4057eaa9922519c0E:
00000001000040c0	pushq	%rbp
00000001000040c1	movq	%rsp, %rbp
00000001000040c4	movq	(%rdi), %rax
00000001000040c7	movq	(%rax), %rdi
00000001000040ca	movq	0x8(%rax), %rax
00000001000040ce	movq	0x18(%rax), %rax
00000001000040d2	popq	%rbp
00000001000040d3	jmpq	*%rax
00000001000040d5	nopw	%cs:(%rax,%rax)
00000001000040df	nop
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h536cab9d6ead056dE:
00000001000040e0	pushq	%rbp
00000001000040e1	movq	%rsp, %rbp
00000001000040e4	movq	(%rdi), %rax
00000001000040e7	movq	(%rax), %rdi
00000001000040ea	popq	%rbp
00000001000040eb	jmp	__ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hb8a03741e38fbdb5E ## _$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$::fmt::hb8a03741e38fbdb5
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h746c3f84193f96b6E:
00000001000040f0	pushq	%rbp
00000001000040f1	movq	%rsp, %rbp
00000001000040f4	pushq	%r14
00000001000040f6	pushq	%rbx
00000001000040f7	movq	%rsi, %rbx
00000001000040fa	movq	(%rdi), %r14
00000001000040fd	movq	%rsi, %rdi
0000000100004100	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
0000000100004105	testb	%al, %al
0000000100004107	je	0x100004118
0000000100004109	movq	%r14, %rdi
000000010000410c	movq	%rbx, %rsi
000000010000410f	popq	%rbx
0000000100004110	popq	%r14
0000000100004112	popq	%rbp
0000000100004113	jmp	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$3fmt17hdccece5688b0c434E ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$::fmt::hdccece5688b0c434
0000000100004118	movq	%rbx, %rdi
000000010000411b	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
0000000100004120	movq	%r14, %rdi
0000000100004123	movq	%rbx, %rsi
0000000100004126	testb	%al, %al
0000000100004128	je	0x100004133
000000010000412a	popq	%rbx
000000010000412b	popq	%r14
000000010000412d	popq	%rbp
000000010000412e	jmp	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h6243124a4619f577E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$::fmt::h6243124a4619f577
0000000100004133	popq	%rbx
0000000100004134	popq	%r14
0000000100004136	popq	%rbp
0000000100004137	jmp	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010000413c	nopl	(%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hacbc0d049793973fE:
0000000100004140	pushq	%rbp
0000000100004141	movq	%rsp, %rbp
0000000100004144	pushq	%r14
0000000100004146	pushq	%rbx
0000000100004147	movq	%rsi, %rbx
000000010000414a	movq	(%rdi), %r14
000000010000414d	movq	%rsi, %rdi
0000000100004150	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
0000000100004155	testb	%al, %al
0000000100004157	je	0x100004168
0000000100004159	movq	%r14, %rdi
000000010000415c	movq	%rbx, %rsi
000000010000415f	popq	%rbx
0000000100004160	popq	%r14
0000000100004162	popq	%rbp
0000000100004163	jmp	__ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hf5351be80c8a3767E ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$::fmt::hf5351be80c8a3767
0000000100004168	movq	%rbx, %rdi
000000010000416b	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
0000000100004170	movq	%r14, %rdi
0000000100004173	movq	%rbx, %rsi
0000000100004176	testb	%al, %al
0000000100004178	je	0x100004183
000000010000417a	popq	%rbx
000000010000417b	popq	%r14
000000010000417d	popq	%rbp
000000010000417e	jmp	__ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h9bf3f388e43276e4E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$::fmt::h9bf3f388e43276e4
0000000100004183	popq	%rbx
0000000100004184	popq	%r14
0000000100004186	popq	%rbp
0000000100004187	jmp	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h4b5ed76a5f3e8336E ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$::fmt::h4b5ed76a5f3e8336
000000010000418c	nopl	(%rax)
__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E:
0000000100004190	pushq	%rbp
0000000100004191	movq	%rsp, %rbp
0000000100004194	movq	%rsi, %rdx
0000000100004197	movq	(%rdi), %rax
000000010000419a	movq	0x8(%rdi), %rsi
000000010000419e	movq	%rax, %rdi
00000001000041a1	popq	%rbp
00000001000041a2	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000041a7	nopw	(%rax,%rax)
__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65f36ad186248bf3E:
00000001000041b0	pushq	%rbp
00000001000041b1	movq	%rsp, %rbp
00000001000041b4	movq	(%rdi), %rdi
00000001000041b7	popq	%rbp
00000001000041b8	jmp	__ZN70_$LT$core..panic..location..Location$u20$as$u20$core..fmt..Display$GT$3fmt17h591d3a0c76b306bfE ## _$LT$core..panic..location..Location$u20$as$u20$core..fmt..Display$GT$::fmt::h591d3a0c76b306bf
00000001000041bd	nopl	(%rax)
__ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h39f715977d295410E:
00000001000041c0	pushq	%rbp
00000001000041c1	movq	%rsp, %rbp
00000001000041c4	pushq	%r14
00000001000041c6	pushq	%rbx
00000001000041c7	movq	%rsi, %rbx
00000001000041ca	movq	%rdi, %r14
00000001000041cd	movq	%rsi, %rdi
00000001000041d0	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
00000001000041d5	testb	%al, %al
00000001000041d7	je	0x1000041e8
00000001000041d9	movq	%r14, %rdi
00000001000041dc	movq	%rbx, %rsi
00000001000041df	popq	%rbx
00000001000041e0	popq	%r14
00000001000041e2	popq	%rbp
00000001000041e3	jmp	__ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hf5351be80c8a3767E ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$::fmt::hf5351be80c8a3767
00000001000041e8	movq	%rbx, %rdi
00000001000041eb	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
00000001000041f0	movq	%r14, %rdi
00000001000041f3	movq	%rbx, %rsi
00000001000041f6	testb	%al, %al
00000001000041f8	je	0x100004203
00000001000041fa	popq	%rbx
00000001000041fb	popq	%r14
00000001000041fd	popq	%rbp
00000001000041fe	jmp	__ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h9bf3f388e43276e4E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$::fmt::h9bf3f388e43276e4
0000000100004203	popq	%rbx
0000000100004204	popq	%r14
0000000100004206	popq	%rbp
0000000100004207	jmp	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h4b5ed76a5f3e8336E ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$::fmt::h4b5ed76a5f3e8336
000000010000420c	nopl	(%rax)
__ZN4core3fmt5Write10write_char17h76d52b92492ee6e3E:
0000000100004210	pushq	%rbp
0000000100004211	movq	%rsp, %rbp
0000000100004214	pushq	%r15
0000000100004216	pushq	%r14
0000000100004218	pushq	%rbx
0000000100004219	pushq	%rax
000000010000421a	movl	$0x0, -0x1c(%rbp)
0000000100004221	cmpl	$0x80, %esi
0000000100004227	jae	0x100004237
0000000100004229	movb	%sil, -0x1c(%rbp)
000000010000422d	movl	$0x1, %ebx
0000000100004232	jmp	0x1000042be
0000000100004237	movl	%esi, %eax
0000000100004239	cmpl	$0x800, %esi                    ## imm = 0x800
000000010000423f	jae	0x10000425c
0000000100004241	shrl	$0x6, %eax
0000000100004244	orb	$-0x40, %al
0000000100004246	movb	%al, -0x1c(%rbp)
0000000100004249	andb	$0x3f, %sil
000000010000424d	orb	$-0x80, %sil
0000000100004251	movb	%sil, -0x1b(%rbp)
0000000100004255	movl	$0x2, %ebx
000000010000425a	jmp	0x1000042be
000000010000425c	cmpl	$0x10000, %esi                  ## imm = 0x10000
0000000100004262	jae	0x10000428b
0000000100004264	shrl	$0xc, %eax
0000000100004267	orb	$-0x20, %al
0000000100004269	movb	%al, -0x1c(%rbp)
000000010000426c	movl	%esi, %eax
000000010000426e	shrl	$0x6, %eax
0000000100004271	andb	$0x3f, %al
0000000100004273	orb	$-0x80, %al
0000000100004275	movb	%al, -0x1b(%rbp)
0000000100004278	andb	$0x3f, %sil
000000010000427c	orb	$-0x80, %sil
0000000100004280	movb	%sil, -0x1a(%rbp)
0000000100004284	movl	$0x3, %ebx
0000000100004289	jmp	0x1000042be
000000010000428b	shrl	$0x12, %eax
000000010000428e	andb	$0x7, %al
0000000100004290	orb	$-0x10, %al
0000000100004292	movb	%al, -0x1c(%rbp)
0000000100004295	movl	%esi, %eax
0000000100004297	shrl	$0xc, %eax
000000010000429a	andb	$0x3f, %al
000000010000429c	orb	$-0x80, %al
000000010000429e	movb	%al, -0x1b(%rbp)
00000001000042a1	movl	%esi, %eax
00000001000042a3	shrl	$0x6, %eax
00000001000042a6	andb	$0x3f, %al
00000001000042a8	orb	$-0x80, %al
00000001000042aa	movb	%al, -0x1a(%rbp)
00000001000042ad	andb	$0x3f, %sil
00000001000042b1	orb	$-0x80, %sil
00000001000042b5	movb	%sil, -0x19(%rbp)
00000001000042b9	movl	$0x4, %ebx
00000001000042be	movq	(%rdi), %r14
00000001000042c1	movq	0x8(%r14), %rax
00000001000042c5	movq	0x10(%r14), %r15
00000001000042c9	subq	%r15, %rax
00000001000042cc	cmpq	%rbx, %rax
00000001000042cf	jb	0x1000042f7
00000001000042d1	movq	(%r14), %rdi
00000001000042d4	addq	%r15, %rdi
00000001000042d7	leaq	-0x1c(%rbp), %rsi
00000001000042db	movq	%rbx, %rdx
00000001000042de	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000042e3	addq	%rbx, %r15
00000001000042e6	movq	%r15, 0x10(%r14)
00000001000042ea	xorl	%eax, %eax
00000001000042ec	addq	$0x8, %rsp
00000001000042f0	popq	%rbx
00000001000042f1	popq	%r14
00000001000042f3	popq	%r15
00000001000042f5	popq	%rbp
00000001000042f6	retq
00000001000042f7	movq	%r14, %rdi
00000001000042fa	movq	%r15, %rsi
00000001000042fd	movq	%rbx, %rdx
0000000100004300	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
0000000100004305	movq	0x10(%r14), %r15
0000000100004309	jmp	0x1000042d1
000000010000430b	nopl	(%rax,%rax)
__ZN4core3fmt5Write10write_char17hd17809ffe3bea507E:
0000000100004310	pushq	%rbp
0000000100004311	movq	%rsp, %rbp
0000000100004314	subq	$0x10, %rsp
0000000100004318	movl	$0x0, -0x4(%rbp)
000000010000431f	cmpl	$0x80, %esi
0000000100004325	jae	0x100004335
0000000100004327	movb	%sil, -0x4(%rbp)
000000010000432b	movl	$0x1, %edx
0000000100004330	jmp	0x1000043bc
0000000100004335	movl	%esi, %eax
0000000100004337	cmpl	$0x800, %esi                    ## imm = 0x800
000000010000433d	jae	0x10000435a
000000010000433f	shrl	$0x6, %eax
0000000100004342	orb	$-0x40, %al
0000000100004344	movb	%al, -0x4(%rbp)
0000000100004347	andb	$0x3f, %sil
000000010000434b	orb	$-0x80, %sil
000000010000434f	movb	%sil, -0x3(%rbp)
0000000100004353	movl	$0x2, %edx
0000000100004358	jmp	0x1000043bc
000000010000435a	cmpl	$0x10000, %esi                  ## imm = 0x10000
0000000100004360	jae	0x100004389
0000000100004362	shrl	$0xc, %eax
0000000100004365	orb	$-0x20, %al
0000000100004367	movb	%al, -0x4(%rbp)
000000010000436a	movl	%esi, %eax
000000010000436c	shrl	$0x6, %eax
000000010000436f	andb	$0x3f, %al
0000000100004371	orb	$-0x80, %al
0000000100004373	movb	%al, -0x3(%rbp)
0000000100004376	andb	$0x3f, %sil
000000010000437a	orb	$-0x80, %sil
000000010000437e	movb	%sil, -0x2(%rbp)
0000000100004382	movl	$0x3, %edx
0000000100004387	jmp	0x1000043bc
0000000100004389	shrl	$0x12, %eax
000000010000438c	andb	$0x7, %al
000000010000438e	orb	$-0x10, %al
0000000100004390	movb	%al, -0x4(%rbp)
0000000100004393	movl	%esi, %eax
0000000100004395	shrl	$0xc, %eax
0000000100004398	andb	$0x3f, %al
000000010000439a	orb	$-0x80, %al
000000010000439c	movb	%al, -0x3(%rbp)
000000010000439f	movl	%esi, %eax
00000001000043a1	shrl	$0x6, %eax
00000001000043a4	andb	$0x3f, %al
00000001000043a6	orb	$-0x80, %al
00000001000043a8	movb	%al, -0x2(%rbp)
00000001000043ab	andb	$0x3f, %sil
00000001000043af	orb	$-0x80, %sil
00000001000043b3	movb	%sil, -0x1(%rbp)
00000001000043b7	movl	$0x4, %edx
00000001000043bc	leaq	-0x4(%rbp), %rsi
00000001000043c0	callq	__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h424af07061250d47E ## _$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::h424af07061250d47
00000001000043c5	addq	$0x10, %rsp
00000001000043c9	popq	%rbp
00000001000043ca	retq
00000001000043cb	nopl	(%rax,%rax)
__ZN4core3fmt5Write10write_char17he191dbc4c09a4ec1E:
00000001000043d0	pushq	%rbp
00000001000043d1	movq	%rsp, %rbp
00000001000043d4	subq	$0x10, %rsp
00000001000043d8	movl	$0x0, -0x4(%rbp)
00000001000043df	cmpl	$0x80, %esi
00000001000043e5	jae	0x1000043f5
00000001000043e7	movb	%sil, -0x4(%rbp)
00000001000043eb	movl	$0x1, %edx
00000001000043f0	jmp	0x10000447c
00000001000043f5	movl	%esi, %eax
00000001000043f7	cmpl	$0x800, %esi                    ## imm = 0x800
00000001000043fd	jae	0x10000441a
00000001000043ff	shrl	$0x6, %eax
0000000100004402	orb	$-0x40, %al
0000000100004404	movb	%al, -0x4(%rbp)
0000000100004407	andb	$0x3f, %sil
000000010000440b	orb	$-0x80, %sil
000000010000440f	movb	%sil, -0x3(%rbp)
0000000100004413	movl	$0x2, %edx
0000000100004418	jmp	0x10000447c
000000010000441a	cmpl	$0x10000, %esi                  ## imm = 0x10000
0000000100004420	jae	0x100004449
0000000100004422	shrl	$0xc, %eax
0000000100004425	orb	$-0x20, %al
0000000100004427	movb	%al, -0x4(%rbp)
000000010000442a	movl	%esi, %eax
000000010000442c	shrl	$0x6, %eax
000000010000442f	andb	$0x3f, %al
0000000100004431	orb	$-0x80, %al
0000000100004433	movb	%al, -0x3(%rbp)
0000000100004436	andb	$0x3f, %sil
000000010000443a	orb	$-0x80, %sil
000000010000443e	movb	%sil, -0x2(%rbp)
0000000100004442	movl	$0x3, %edx
0000000100004447	jmp	0x10000447c
0000000100004449	shrl	$0x12, %eax
000000010000444c	andb	$0x7, %al
000000010000444e	orb	$-0x10, %al
0000000100004450	movb	%al, -0x4(%rbp)
0000000100004453	movl	%esi, %eax
0000000100004455	shrl	$0xc, %eax
0000000100004458	andb	$0x3f, %al
000000010000445a	orb	$-0x80, %al
000000010000445c	movb	%al, -0x3(%rbp)
000000010000445f	movl	%esi, %eax
0000000100004461	shrl	$0x6, %eax
0000000100004464	andb	$0x3f, %al
0000000100004466	orb	$-0x80, %al
0000000100004468	movb	%al, -0x2(%rbp)
000000010000446b	andb	$0x3f, %sil
000000010000446f	orb	$-0x80, %sil
0000000100004473	movb	%sil, -0x1(%rbp)
0000000100004477	movl	$0x4, %edx
000000010000447c	leaq	-0x4(%rbp), %rsi
0000000100004480	callq	__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc9ede58f8971c9a4E ## _$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::hc9ede58f8971c9a4
0000000100004485	addq	$0x10, %rsp
0000000100004489	popq	%rbp
000000010000448a	retq
000000010000448b	nopl	(%rax,%rax)
__ZN4core3fmt5Write9write_fmt17h165b7e4532cda848E:
0000000100004490	pushq	%rbp
0000000100004491	movq	%rsp, %rbp
0000000100004494	subq	$0x40, %rsp
0000000100004498	movq	%rdi, -0x8(%rbp)
000000010000449c	movq	0x28(%rsi), %rax
00000001000044a0	movq	%rax, -0x10(%rbp)
00000001000044a4	movq	0x20(%rsi), %rax
00000001000044a8	movq	%rax, -0x18(%rbp)
00000001000044ac	movq	0x18(%rsi), %rax
00000001000044b0	movq	%rax, -0x20(%rbp)
00000001000044b4	movq	0x10(%rsi), %rax
00000001000044b8	movq	%rax, -0x28(%rbp)
00000001000044bc	movq	(%rsi), %rax
00000001000044bf	movq	0x8(%rsi), %rcx
00000001000044c3	movq	%rcx, -0x30(%rbp)
00000001000044c7	movq	%rax, -0x38(%rbp)
00000001000044cb	leaq	0x43de6(%rip), %rsi
00000001000044d2	leaq	-0x8(%rbp), %rdi
00000001000044d6	leaq	-0x38(%rbp), %rdx
00000001000044da	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
00000001000044df	addq	$0x40, %rsp
00000001000044e3	popq	%rbp
00000001000044e4	retq
00000001000044e5	nopw	%cs:(%rax,%rax)
00000001000044ef	nop
__ZN4core3fmt5Write9write_fmt17hd8ca8842a4748fabE:
00000001000044f0	pushq	%rbp
00000001000044f1	movq	%rsp, %rbp
00000001000044f4	subq	$0x40, %rsp
00000001000044f8	movq	%rdi, -0x8(%rbp)
00000001000044fc	movq	0x28(%rsi), %rax
0000000100004500	movq	%rax, -0x10(%rbp)
0000000100004504	movq	0x20(%rsi), %rax
0000000100004508	movq	%rax, -0x18(%rbp)
000000010000450c	movq	0x18(%rsi), %rax
0000000100004510	movq	%rax, -0x20(%rbp)
0000000100004514	movq	0x10(%rsi), %rax
0000000100004518	movq	%rax, -0x28(%rbp)
000000010000451c	movq	(%rsi), %rax
000000010000451f	movq	0x8(%rsi), %rcx
0000000100004523	movq	%rcx, -0x30(%rbp)
0000000100004527	movq	%rax, -0x38(%rbp)
000000010000452b	leaq	0x43de6(%rip), %rsi
0000000100004532	leaq	-0x8(%rbp), %rdi
0000000100004536	leaq	-0x38(%rbp), %rdx
000000010000453a	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010000453f	addq	$0x40, %rsp
0000000100004543	popq	%rbp
0000000100004544	retq
0000000100004545	nopw	%cs:(%rax,%rax)
000000010000454f	nop
__ZN4core3fmt5Write9write_fmt17he3a808f788a85ffcE:
0000000100004550	pushq	%rbp
0000000100004551	movq	%rsp, %rbp
0000000100004554	subq	$0x40, %rsp
0000000100004558	movq	%rdi, -0x8(%rbp)
000000010000455c	movq	0x28(%rsi), %rax
0000000100004560	movq	%rax, -0x10(%rbp)
0000000100004564	movq	0x20(%rsi), %rax
0000000100004568	movq	%rax, -0x18(%rbp)
000000010000456c	movq	0x18(%rsi), %rax
0000000100004570	movq	%rax, -0x20(%rbp)
0000000100004574	movq	0x10(%rsi), %rax
0000000100004578	movq	%rax, -0x28(%rbp)
000000010000457c	movq	(%rsi), %rax
000000010000457f	movq	0x8(%rsi), %rcx
0000000100004583	movq	%rcx, -0x30(%rbp)
0000000100004587	movq	%rax, -0x38(%rbp)
000000010000458b	leaq	0x43db6(%rip), %rsi
0000000100004592	leaq	-0x8(%rbp), %rdi
0000000100004596	leaq	-0x38(%rbp), %rdx
000000010000459a	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010000459f	addq	$0x40, %rsp
00000001000045a3	popq	%rbp
00000001000045a4	retq
00000001000045a5	nopw	%cs:(%rax,%rax)
00000001000045af	nop
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h226b12d8688da6b1E:
00000001000045b0	pushq	%rbp
00000001000045b1	movq	%rsp, %rbp
00000001000045b4	movq	(%rdi), %rax
00000001000045b7	movq	(%rax), %rdi
00000001000045ba	popq	%rbp
00000001000045bb	jmp	0x10004270c                     ## symbol stub for: __Unwind_GetDataRelBase
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h72b339ce1a23ded0E:
00000001000045c0	pushq	%rbp
00000001000045c1	movq	%rsp, %rbp
00000001000045c4	popq	%rbp
00000001000045c5	jmp	__ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2eb0bb03554a9286E ## std::sys_common::backtrace::_print_fmt::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h2eb0bb03554a9286
00000001000045ca	nopw	(%rax,%rax)
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h72c2a88872ebf5fbE:
00000001000045d0	pushq	%rbp
00000001000045d1	movq	%rsp, %rbp
00000001000045d4	subq	$0x10, %rsp
00000001000045d8	movq	(%rdi), %rax
00000001000045db	movq	%rax, -0x8(%rbp)
00000001000045df	leaq	-0x8(%rbp), %rdi
00000001000045e3	callq	__ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h333b6b74bb192f0dE ## std::sync::once::Once::call_once::_$u7b$$u7b$closure$u7d$$u7d$::h333b6b74bb192f0d
00000001000045e8	addq	$0x10, %rsp
00000001000045ec	popq	%rbp
00000001000045ed	retq
00000001000045ee	nop
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h7cb0087fa36c8217E:
00000001000045f0	pushq	%rbp
00000001000045f1	movq	%rsp, %rbp
00000001000045f4	movq	(%rdi), %rdx
00000001000045f7	movq	(%rdx), %rcx
00000001000045fa	movq	0x8(%rdx), %rax
00000001000045fe	movq	$0x0, (%rdx)
0000000100004605	testq	%rcx, %rcx
0000000100004608	je	0x100004649
000000010000460a	movb	$0x1, (%rcx)
000000010000460d	movq	$0x0, 0x10(%rax)
0000000100004615	movq	$0x0, 0x8(%rax)
000000010000461d	movq	$0x0, (%rax)
0000000100004624	movq	$0x1, 0x18(%rax)
000000010000462c	movq	$0x0, 0x20(%rax)
0000000100004634	movq	$0x0, 0x28(%rax)
000000010000463c	movb	$0x0, 0x30(%rax)
0000000100004640	movl	$0x0, 0x38(%rax)
0000000100004647	popq	%rbp
0000000100004648	retq
0000000100004649	leaq	0x3f6a1(%rip), %rdi
0000000100004650	leaq	0x44819(%rip), %rdx
0000000100004657	movl	$0x2b, %esi
000000010000465c	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100004661	nopw	%cs:(%rax,%rax)
000000010000466b	nopl	(%rax,%rax)
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h9a7aabb0a1cfd9c0E:
0000000100004670	pushq	%rbp
0000000100004671	movq	%rsp, %rbp
0000000100004674	pushq	%r14
0000000100004676	pushq	%rbx
0000000100004677	subq	$0x20, %rsp
000000010000467b	movq	%rsi, %rax
000000010000467e	movq	%rdi, %rbx
0000000100004681	leaq	-0x28(%rbp), %rsi
0000000100004685	movq	0x10(%rdx), %rcx
0000000100004689	movq	%rcx, -0x18(%rbp)
000000010000468d	movq	(%rdx), %rcx
0000000100004690	movq	0x8(%rdx), %rdx
0000000100004694	movq	%rdx, -0x20(%rbp)
0000000100004698	movq	%rcx, -0x28(%rbp)
000000010000469c	movq	%rax, -0x30(%rbp)
00000001000046a0	movq	(%rdi), %rcx
00000001000046a3	testq	%rcx, %rcx
00000001000046a6	cmovneq	%rdi, %rcx
00000001000046aa	movl	0x18(%rdi), %edx
00000001000046ad	movq	%rax, %rdi
00000001000046b0	callq	__ZN3std10sys_common9backtrace15output_filename17hca0ea309d85a075fE ## std::sys_common::backtrace::output_filename::hca0ea309d85a075f
00000001000046b5	movl	%eax, %r14d
00000001000046b8	movq	(%rbx), %rdi
00000001000046bb	testq	%rdi, %rdi
00000001000046be	je	0x1000046d3
00000001000046c0	movq	0x8(%rbx), %rsi
00000001000046c4	testq	%rsi, %rsi
00000001000046c7	je	0x1000046d3
00000001000046c9	movl	$0x1, %edx
00000001000046ce	callq	___rust_dealloc
00000001000046d3	movl	%r14d, %eax
00000001000046d6	addq	$0x20, %rsp
00000001000046da	popq	%rbx
00000001000046db	popq	%r14
00000001000046dd	popq	%rbp
00000001000046de	retq
00000001000046df	movq	%rax, %r14
00000001000046e2	movq	%rbx, %rdi
00000001000046e5	callq	__ZN4core3ptr88drop_in_place$LT$std..sys_common..backtrace.._print_fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$17hf85a53bdd826fa87E ## core::ptr::drop_in_place$LT$std..sys_common..backtrace.._print_fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$::hf85a53bdd826fa87
00000001000046ea	movq	%r14, %rdi
00000001000046ed	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000046f2	nopw	%cs:(%rax,%rax)
00000001000046fc	nopl	(%rax)
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hb0c4c6516e73bf9bE:
0000000100004700	pushq	%rbp
0000000100004701	movq	%rsp, %rbp
0000000100004704	popq	%rbp
0000000100004705	jmp	__ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17hc92fc457acaa3ee5E ## std::sys_common::backtrace::_print_fmt::_$u7b$$u7b$closure$u7d$$u7d$::hc92fc457acaa3ee5
000000010000470a	nopw	(%rax,%rax)
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd15cb9ee12016015E:
0000000100004710	pushq	%rbp
0000000100004711	movq	%rsp, %rbp
0000000100004714	pushq	%rbx
0000000100004715	pushq	%rax
0000000100004716	movq	(%rdi), %rax
0000000100004719	movq	(%rax), %rbx
000000010000471c	movq	$0x0, (%rax)
0000000100004723	testq	%rbx, %rbx
0000000100004726	je	0x100004783
0000000100004728	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010000472f	movzbl	(%rax), %eax
0000000100004732	movl	$0x400, %edi                    ## imm = 0x400
0000000100004737	movl	$0x1, %esi
000000010000473c	callq	___rust_alloc
0000000100004741	testq	%rax, %rax
0000000100004744	je	0x10000479b
0000000100004746	movq	$0x0, 0x10(%rbx)
000000010000474e	movq	$0x0, 0x8(%rbx)
0000000100004756	movq	$0x0, (%rbx)
000000010000475d	movq	%rax, 0x18(%rbx)
0000000100004761	movq	$0x400, 0x20(%rbx)              ## imm = 0x400
0000000100004769	movq	$0x0, 0x28(%rbx)
0000000100004771	movb	$0x0, 0x30(%rbx)
0000000100004775	movl	$0x0, 0x38(%rbx)
000000010000477c	addq	$0x8, %rsp
0000000100004780	popq	%rbx
0000000100004781	popq	%rbp
0000000100004782	retq
0000000100004783	leaq	0x3f567(%rip), %rdi
000000010000478a	leaq	0x446df(%rip), %rdx
0000000100004791	movl	$0x2b, %esi
0000000100004796	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010000479b	movl	$0x1, %edi
00000001000047a0	movl	$0x400, %esi                    ## imm = 0x400
00000001000047a5	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000047aa	nopw	(%rax,%rax)
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd62d03f4b74f6314E:
00000001000047b0	pushq	%rbp
00000001000047b1	movq	%rsp, %rbp
00000001000047b4	movq	(%rdi), %rax
00000001000047b7	movq	(%rax), %rdi
00000001000047ba	popq	%rbp
00000001000047bb	jmp	0x10004272a                     ## symbol stub for: __Unwind_GetTextRelBase
__ZN4core3ops8function6FnOnce9call_once17h2c867f3c33f16eccE:
00000001000047c0	pushq	%rbp
00000001000047c1	movq	%rsp, %rbp
00000001000047c4	callq	__ZN3std2rt19lang_start_internal28_$u7b$$u7b$closure$u7d$$u7d$17hed88a2ac8af3b822E ## std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::hed88a2ac8af3b822
00000001000047c9	nopl	(%rax)
__ZN4core3ptr100drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hdf51a9a5a33cda07E:
00000001000047d0	pushq	%rbp
00000001000047d1	movq	%rsp, %rbp
00000001000047d4	popq	%rbp
00000001000047d5	retq
00000001000047d6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr101drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h230a050644404e8bE:
00000001000047e0	pushq	%rbp
00000001000047e1	movq	%rsp, %rbp
00000001000047e4	lock
00000001000047e5	decq	(%rdi)
00000001000047e8	jne	0x1000047f0
00000001000047ea	popq	%rbp
00000001000047eb	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
00000001000047f0	popq	%rbp
00000001000047f1	retq
00000001000047f2	nopw	%cs:(%rax,%rax)
00000001000047fc	nopl	(%rax)
__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE:
0000000100004800	pushq	%rbp
0000000100004801	movq	%rsp, %rbp
0000000100004804	shlq	$0x4, %rsi
0000000100004808	movl	$0x8, %edx
000000010000480d	popq	%rbp
000000010000480e	jmp	___rust_dealloc
0000000100004813	nopw	%cs:(%rax,%rax)
000000010000481d	nopl	(%rax)
__ZN4core3ptr104drop_in_place$LT$alloc..vec..Vec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$17hc862c7dd52a825cdE:
0000000100004820	pushq	%rbp
0000000100004821	movq	%rsp, %rbp
0000000100004824	pushq	%r15
0000000100004826	pushq	%r14
0000000100004828	pushq	%r13
000000010000482a	pushq	%r12
000000010000482c	pushq	%rbx
000000010000482d	pushq	%rax
000000010000482e	movq	%rdi, %r14
0000000100004831	movq	(%rdi), %rbx
0000000100004834	movq	0x10(%rdi), %r13
0000000100004838	incq	%r13
000000010000483b	movq	%rbx, %r15
000000010000483e	nop
0000000100004840	cmpq	$0x1, %r13
0000000100004844	je	0x10000485b
0000000100004846	leaq	0x8(%r15), %rdi
000000010000484a	addq	$0x250, %r15                    ## imm = 0x250
0000000100004851	decq	%r13
0000000100004854	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
0000000100004859	jmp	0x100004840
000000010000485b	movq	0x8(%r14), %rax
000000010000485f	testq	%rax, %rax
0000000100004862	je	0x100004886
0000000100004864	imulq	$0x250, %rax, %rsi              ## imm = 0x250
000000010000486b	movl	$0x8, %edx
0000000100004870	movq	%rbx, %rdi
0000000100004873	addq	$0x8, %rsp
0000000100004877	popq	%rbx
0000000100004878	popq	%r12
000000010000487a	popq	%r13
000000010000487c	popq	%r14
000000010000487e	popq	%r15
0000000100004880	popq	%rbp
0000000100004881	jmp	___rust_dealloc
0000000100004886	addq	$0x8, %rsp
000000010000488a	popq	%rbx
000000010000488b	popq	%r12
000000010000488d	popq	%r13
000000010000488f	popq	%r14
0000000100004891	popq	%r15
0000000100004893	popq	%rbp
0000000100004894	retq
0000000100004895	movq	%rax, -0x30(%rbp)
0000000100004899	nopl	(%rax)
00000001000048a0	decq	%r13
00000001000048a3	je	0x1000048b9
00000001000048a5	leaq	0x250(%r15), %r12
00000001000048ac	movq	%r15, %rdi
00000001000048af	callq	__ZN4core3ptr81drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$17h0551552d0710d049E ## core::ptr::drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$::h0551552d0710d049
00000001000048b4	movq	%r12, %r15
00000001000048b7	jmp	0x1000048a0
00000001000048b9	movq	0x8(%r14), %rsi
00000001000048bd	movq	%rbx, %rdi
00000001000048c0	callq	__ZN4core3ptr111drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$17h9957532a1787f69eE ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$::h9957532a1787f69e
00000001000048c5	movq	-0x30(%rbp), %rdi
00000001000048c9	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000048ce	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000048d3	nopw	%cs:(%rax,%rax)
00000001000048dd	nopl	(%rax)
__ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17hb9a156d2c28948abE:
00000001000048e0	pushq	%rbp
00000001000048e1	movq	%rsp, %rbp
00000001000048e4	movq	%rdi, %rax
00000001000048e7	movq	(%rdi), %rdi
00000001000048ea	testq	%rdi, %rdi
00000001000048ed	je	0x100004903
00000001000048ef	movq	0x8(%rax), %rsi
00000001000048f3	testq	%rsi, %rsi
00000001000048f6	je	0x100004913
00000001000048f8	movl	$0x1, %edx
00000001000048fd	popq	%rbp
00000001000048fe	jmp	___rust_dealloc
0000000100004903	movq	0x8(%rax), %rdi
0000000100004907	movb	$0x0, (%rdi)
000000010000490a	movq	0x10(%rax), %rsi
000000010000490e	testq	%rsi, %rsi
0000000100004911	jne	0x1000048f8
0000000100004913	popq	%rbp
0000000100004914	retq
0000000100004915	nopw	%cs:(%rax,%rax)
000000010000491f	nop
__ZN4core3ptr107drop_in_place$LT$alloc..sync..Arc$LT$core..mem..maybe_uninit..MaybeUninit$LT$std..thread..Inner$GT$$GT$$GT$17h44a1d2a8ab827230E:
0000000100004920	pushq	%rbp
0000000100004921	movq	%rsp, %rbp
0000000100004924	lock
0000000100004925	decq	(%rdi)
0000000100004928	jne	0x100004930
000000010000492a	popq	%rbp
000000010000492b	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h15eb3a8850fcc87cE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h15eb3a8850fcc87c
0000000100004930	popq	%rbp
0000000100004931	retq
0000000100004932	nopw	%cs:(%rax,%rax)
000000010000493c	nopl	(%rax)
__ZN4core3ptr108drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$17hbf8894e36be46d86E:
0000000100004940	pushq	%rbp
0000000100004941	movq	%rsp, %rbp
0000000100004944	pushq	%r14
0000000100004946	pushq	%rbx
0000000100004947	subq	$0x60, %rsp
000000010000494b	movq	(%rdi), %rcx
000000010000494e	testq	%rcx, %rcx
0000000100004951	je	0x100004982
0000000100004953	movq	0x8(%rdi), %rdx
0000000100004957	movq	0x10(%rdi), %rax
000000010000495b	movq	$0x0, -0x68(%rbp)
0000000100004963	movq	%rcx, -0x60(%rbp)
0000000100004967	movq	%rdx, -0x58(%rbp)
000000010000496b	movq	$0x0, -0x48(%rbp)
0000000100004973	movq	%rcx, -0x40(%rbp)
0000000100004977	movq	%rdx, -0x38(%rbp)
000000010000497b	movl	$0x1, %ecx
0000000100004980	jmp	0x100004986
0000000100004982	xorl	%ecx, %ecx
0000000100004984	xorl	%eax, %eax
0000000100004986	movq	%rcx, -0x70(%rbp)
000000010000498a	movq	%rcx, -0x50(%rbp)
000000010000498e	movq	%rax, -0x30(%rbp)
0000000100004992	leaq	-0x28(%rbp), %rdi
0000000100004996	leaq	-0x70(%rbp), %rsi
000000010000499a	callq	__ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h398177d02bce51b1E ## alloc::collections::btree::map::IntoIter$LT$K$C$V$C$A$GT$::dying_next::h398177d02bce51b1
000000010000499f	movq	-0x28(%rbp), %rax
00000001000049a3	testq	%rax, %rax
00000001000049a6	je	0x100004a00
00000001000049a8	leaq	-0x28(%rbp), %rbx
00000001000049ac	leaq	-0x70(%rbp), %r14
00000001000049b0	jmp	0x1000049d4
00000001000049b2	nopw	%cs:(%rax,%rax)
00000001000049bc	nopl	(%rax)
00000001000049c0	movq	%rbx, %rdi
00000001000049c3	movq	%r14, %rsi
00000001000049c6	callq	__ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h398177d02bce51b1E ## alloc::collections::btree::map::IntoIter$LT$K$C$V$C$A$GT$::dying_next::h398177d02bce51b1
00000001000049cb	movq	-0x28(%rbp), %rax
00000001000049cf	testq	%rax, %rax
00000001000049d2	je	0x100004a00
00000001000049d4	imulq	$0x70, -0x18(%rbp), %rcx
00000001000049d9	cmpq	$0x0, (%rax,%rcx)
00000001000049de	je	0x1000049c0
00000001000049e0	addq	%rcx, %rax
00000001000049e3	movq	0x10(%rax), %rsi
00000001000049e7	testq	%rsi, %rsi
00000001000049ea	je	0x1000049c0
00000001000049ec	movq	0x8(%rax), %rdi
00000001000049f0	shlq	$0x4, %rsi
00000001000049f4	movl	$0x8, %edx
00000001000049f9	callq	___rust_dealloc
00000001000049fe	jmp	0x1000049c0
0000000100004a00	addq	$0x60, %rsp
0000000100004a04	popq	%rbx
0000000100004a05	popq	%r14
0000000100004a07	popq	%rbp
0000000100004a08	retq
0000000100004a09	nopl	(%rax)
__ZN4core3ptr111drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$17h9957532a1787f69eE:
0000000100004a10	pushq	%rbp
0000000100004a11	movq	%rsp, %rbp
0000000100004a14	testq	%rsi, %rsi
0000000100004a17	je	0x100004a2b
0000000100004a19	imulq	$0x250, %rsi, %rsi              ## imm = 0x250
0000000100004a20	movl	$0x8, %edx
0000000100004a25	popq	%rbp
0000000100004a26	jmp	___rust_dealloc
0000000100004a2b	popq	%rbp
0000000100004a2c	retq
0000000100004a2d	nopl	(%rax)
__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E:
0000000100004a30	pushq	%rbp
0000000100004a31	movq	%rsp, %rbp
0000000100004a34	incq	(%rdi)
0000000100004a37	popq	%rbp
0000000100004a38	retq
0000000100004a39	nopl	(%rax)
__ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$17h36757e8e1ef2511bE:
0000000100004a40	pushq	%rbp
0000000100004a41	movq	%rsp, %rbp
0000000100004a44	testq	%rsi, %rsi
0000000100004a47	je	0x100004a58
0000000100004a49	shlq	$0x4, %rsi
0000000100004a4d	movl	$0x8, %edx
0000000100004a52	popq	%rbp
0000000100004a53	jmp	___rust_dealloc
0000000100004a58	popq	%rbp
0000000100004a59	retq
0000000100004a5a	nopw	(%rax,%rax)
__ZN4core3ptr119drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$$GT$17h449fc6b70cbbea52E:
0000000100004a60	pushq	%rbp
0000000100004a61	movq	%rsp, %rbp
0000000100004a64	cmpq	$0x0, (%rdi)
0000000100004a68	je	0x100004a74
0000000100004a6a	addq	$0x8, %rdi
0000000100004a6e	popq	%rbp
0000000100004a6f	jmp	__ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$17hdd078504879d0965E ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$::hdd078504879d0965
0000000100004a74	popq	%rbp
0000000100004a75	retq
0000000100004a76	nopw	%cs:(%rax,%rax)
__ZN4core3ptr121drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$17h84583e8e7bfe39d1E:
0000000100004a80	pushq	%rbp
0000000100004a81	movq	%rsp, %rbp
0000000100004a84	cmpb	$0x2, 0x240(%rdi)
0000000100004a8b	jae	0x100004a93
0000000100004a8d	popq	%rbp
0000000100004a8e	jmp	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
0000000100004a93	popq	%rbp
0000000100004a94	retq
0000000100004a95	nopw	%cs:(%rax,%rax)
0000000100004a9f	nop
__ZN4core3ptr123drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h70ca90901d829ad9E:
0000000100004aa0	pushq	%rbp
0000000100004aa1	movq	%rsp, %rbp
0000000100004aa4	pushq	%r15
0000000100004aa6	pushq	%r14
0000000100004aa8	pushq	%r13
0000000100004aaa	pushq	%r12
0000000100004aac	pushq	%rbx
0000000100004aad	subq	$0x18, %rsp
0000000100004ab1	movq	%rdi, %rbx
0000000100004ab4	movq	(%rdi), %rax
0000000100004ab7	lock
0000000100004ab8	decq	(%rax)
0000000100004abb	jne	0x100004ac5
0000000100004abd	movq	%rbx, %rdi
0000000100004ac0	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
0000000100004ac5	movq	0x10(%rbx), %rsi
0000000100004ac9	testq	%rsi, %rsi
0000000100004acc	je	0x100004ae0
0000000100004ace	movq	0x8(%rbx), %rdi
0000000100004ad2	shlq	$0x5, %rsi
0000000100004ad6	movl	$0x8, %edx
0000000100004adb	callq	___rust_dealloc
0000000100004ae0	movq	0x18(%rbx), %r15
0000000100004ae4	movq	0x20(%rbx), %r12
0000000100004ae8	movl	$0x1, %r14d
0000000100004aee	movq	%r15, %rdi
0000000100004af1	nopw	%cs:(%rax,%rax)
0000000100004afb	nopl	(%rax,%rax)
0000000100004b00	leaq	(%r12,%r14), %rax
0000000100004b04	cmpq	$0x1, %rax
0000000100004b08	je	0x100004b1e
0000000100004b0a	leaq	0x218(%rdi), %r13
0000000100004b11	decq	%r14
0000000100004b14	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100004b19	movq	%r13, %rdi
0000000100004b1c	jmp	0x100004b00
0000000100004b1e	testq	%r12, %r12
0000000100004b21	je	0x100004b37
0000000100004b23	imulq	$0x218, %r12, %rsi              ## imm = 0x218
0000000100004b2a	movl	$0x8, %edx
0000000100004b2f	movq	%r15, %rdi
0000000100004b32	callq	___rust_dealloc
0000000100004b37	addq	$0x28, %rbx
0000000100004b3b	movq	%rbx, %rdi
0000000100004b3e	addq	$0x18, %rsp
0000000100004b42	popq	%rbx
0000000100004b43	popq	%r12
0000000100004b45	popq	%r13
0000000100004b47	popq	%r14
0000000100004b49	popq	%r15
0000000100004b4b	popq	%rbp
0000000100004b4c	jmp	__ZN4core3ptr158drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17h06f7e19fe933f51aE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$::h06f7e19fe933f51a
0000000100004b51	movq	%rax, -0x30(%rbp)
0000000100004b55	movq	0x8(%rbx), %rdi
0000000100004b59	movq	0x10(%rbx), %rsi
0000000100004b5d	callq	__ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..UnitRange$u5d$$GT$$GT$17he409253e0c3f65c4E ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..UnitRange$u5d$$GT$$GT$::he409253e0c3f65c4
0000000100004b62	movq	0x18(%rbx), %rdi
0000000100004b66	movq	0x20(%rbx), %rsi
0000000100004b6a	callq	__ZN4core3ptr158drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17hfb90c38316d4aa18E ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$::hfb90c38316d4aa18
0000000100004b6f	jmp	0x100004ba8
0000000100004b71	movq	%r15, -0x38(%rbp)
0000000100004b75	movq	%rax, -0x30(%rbp)
0000000100004b79	negq	%r14
0000000100004b7c	nopl	(%rax)
0000000100004b80	incq	%r14
0000000100004b83	cmpq	%r14, %r12
0000000100004b86	je	0x100004b9c
0000000100004b88	leaq	0x218(%r13), %r15
0000000100004b8f	movq	%r13, %rdi
0000000100004b92	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100004b97	movq	%r15, %r13
0000000100004b9a	jmp	0x100004b80
0000000100004b9c	movq	-0x38(%rbp), %rdi
0000000100004ba0	movq	%r12, %rsi
0000000100004ba3	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e2b32ebe9794e26E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h2e2b32ebe9794e26
0000000100004ba8	addq	$0x28, %rbx
0000000100004bac	movq	%rbx, %rdi
0000000100004baf	callq	__ZN4core3ptr158drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17h06f7e19fe933f51aE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$::h06f7e19fe933f51a
0000000100004bb4	movq	-0x30(%rbp), %rdi
0000000100004bb8	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004bbd	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100004bc2	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100004bc7	nopw	(%rax,%rax)
__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E:
0000000100004bd0	pushq	%rbp
0000000100004bd1	movq	%rsp, %rbp
0000000100004bd4	pushq	%r14
0000000100004bd6	pushq	%rbx
0000000100004bd7	movq	%rdi, %rbx
0000000100004bda	movq	0x158(%rdi), %rdi
0000000100004be1	lock
0000000100004be2	decq	(%rdi)
0000000100004be5	jne	0x100004bec
0000000100004be7	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100004bec	leaq	0x60(%rbx), %rdi
0000000100004bf0	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004bf5	cmpq	$0x0, 0x1b0(%rbx)
0000000100004bfd	je	0x100004c0b
0000000100004bff	leaq	0x1b8(%rbx), %rdi
0000000100004c06	callq	__ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$17hdd078504879d0965E ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$::hdd078504879d0965
0000000100004c0b	cmpq	$0x0, 0x1d8(%rbx)
0000000100004c13	je	0x100004c21
0000000100004c15	leaq	0x1e0(%rbx), %rdi
0000000100004c1c	callq	__ZN4core3ptr184drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$17h5ca54a23d3e8471bE ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$::h5ca54a23d3e8471b
0000000100004c21	movzbl	0x200(%rbx), %eax
0000000100004c28	cmpb	$0x4c, %al
0000000100004c2a	jne	0x100004c31
0000000100004c2c	popq	%rbx
0000000100004c2d	popq	%r14
0000000100004c2f	popq	%rbp
0000000100004c30	retq
0000000100004c31	movq	0x208(%rbx), %rsi
0000000100004c38	movzbl	%al, %edi
0000000100004c3b	popq	%rbx
0000000100004c3c	popq	%r14
0000000100004c3e	popq	%rbp
0000000100004c3f	jmp	__ZN4core3ptr383drop_in_place$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$17hf12079e1fa526dd8E ## core::ptr::drop_in_place$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$::hf12079e1fa526dd8
0000000100004c44	movq	%rax, %r14
0000000100004c47	leaq	0x60(%rbx), %rdi
0000000100004c4b	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004c50	leaq	0x1b0(%rbx), %rdi
0000000100004c57	callq	__ZN4core3ptr119drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$$GT$17h449fc6b70cbbea52E ## core::ptr::drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$$GT$::h449fc6b70cbbea52
0000000100004c5c	leaq	0x1d8(%rbx), %rdi
0000000100004c63	callq	__ZN4core3ptr217drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$GT$17h9ff0568603693115E ## core::ptr::drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$GT$::h9ff0568603693115
0000000100004c68	movq	0x208(%rbx), %rsi
0000000100004c6f	movl	0x200(%rbx), %edi
0000000100004c75	callq	__ZN4core3ptr416drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$$GT$17hfaaf3a92287fe604E ## core::ptr::drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$$GT$::hfaaf3a92287fe604
0000000100004c7a	movq	%r14, %rdi
0000000100004c7d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004c82	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100004c87	nopw	(%rax,%rax)
__ZN4core3ptr123drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17hbe4a353a387b4526E:
0000000100004c90	pushq	%rbp
0000000100004c91	movq	%rsp, %rbp
0000000100004c94	pushq	%r14
0000000100004c96	pushq	%rbx
0000000100004c97	movq	%rdi, %rbx
0000000100004c9a	movq	0x158(%rdi), %rdi
0000000100004ca1	lock
0000000100004ca2	decq	(%rdi)
0000000100004ca5	jne	0x100004cac
0000000100004ca7	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100004cac	addq	$0x60, %rbx
0000000100004cb0	movq	%rbx, %rdi
0000000100004cb3	popq	%rbx
0000000100004cb4	popq	%r14
0000000100004cb6	popq	%rbp
0000000100004cb7	jmp	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004cbc	movq	%rax, %r14
0000000100004cbf	addq	$0x60, %rbx
0000000100004cc3	movq	%rbx, %rdi
0000000100004cc6	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004ccb	movq	%r14, %rdi
0000000100004cce	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004cd3	nopw	%cs:(%rax,%rax)
0000000100004cdd	nopl	(%rax)
__ZN4core3ptr125drop_in_place$LT$addr2line..FrameIter$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h3e355dae3e377447E:
0000000100004ce0	pushq	%rbp
0000000100004ce1	movq	%rsp, %rbp
0000000100004ce4	movl	(%rdi), %eax
0000000100004ce6	addl	$-0x3, %eax
0000000100004ce9	cmpl	$0x2, %eax
0000000100004cec	jb	0x100004d0a
0000000100004cee	movq	0x40(%rdi), %rsi
0000000100004cf2	testq	%rsi, %rsi
0000000100004cf5	je	0x100004d0a
0000000100004cf7	movq	0x38(%rdi), %rdi
0000000100004cfb	shlq	$0x3, %rsi
0000000100004cff	movl	$0x8, %edx
0000000100004d04	popq	%rbp
0000000100004d05	jmp	___rust_dealloc
0000000100004d0a	popq	%rbp
0000000100004d0b	retq
0000000100004d0c	nopl	(%rax)
__ZN4core3ptr130drop_in_place$LT$addr2line..SplitDwarfLoad$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h83a3ab6b07dc3c8aE:
0000000100004d10	pushq	%rbp
0000000100004d11	movq	%rsp, %rbp
0000000100004d14	movq	(%rdi), %rax
0000000100004d17	lock
0000000100004d18	decq	(%rax)
0000000100004d1b	jne	0x100004d23
0000000100004d1d	popq	%rbp
0000000100004d1e	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
0000000100004d23	popq	%rbp
0000000100004d24	retq
0000000100004d25	nopw	%cs:(%rax,%rax)
0000000100004d2f	nop
__ZN4core3ptr130drop_in_place$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h44c58db3bed7332eE:
0000000100004d30	pushq	%rbp
0000000100004d31	movq	%rsp, %rbp
0000000100004d34	pushq	%r14
0000000100004d36	pushq	%rbx
0000000100004d37	movq	%rdi, %rbx
0000000100004d3a	movq	0xd0(%rdi), %rax
0000000100004d41	testq	%rax, %rax
0000000100004d44	je	0x100004d58
0000000100004d46	lock
0000000100004d47	decq	(%rax)
0000000100004d4a	jne	0x100004d58
0000000100004d4c	leaq	0xd0(%rbx), %rdi
0000000100004d53	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
0000000100004d58	movq	0xd8(%rbx), %rdi
0000000100004d5f	testq	%rdi, %rdi
0000000100004d62	je	0x100004d78
0000000100004d64	lock
0000000100004d65	decq	-0x10(%rdi)
0000000100004d69	jne	0x100004d78
0000000100004d6b	addq	$-0x10, %rdi
0000000100004d6f	popq	%rbx
0000000100004d70	popq	%r14
0000000100004d72	popq	%rbp
0000000100004d73	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100004d78	popq	%rbx
0000000100004d79	popq	%r14
0000000100004d7b	popq	%rbp
0000000100004d7c	retq
0000000100004d7d	movq	%rax, %r14
0000000100004d80	addq	$0xd8, %rbx
0000000100004d87	movq	%rbx, %rdi
0000000100004d8a	callq	__ZN4core3ptr60drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$17h8149c1ec4ca523f5E ## core::ptr::drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$::h8149c1ec4ca523f5
0000000100004d8f	movq	%r14, %rdi
0000000100004d92	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004d97	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100004d9c	nopl	(%rax)
__ZN4core3ptr137drop_in_place$LT$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$17h88c5f38d25ea6ccbE:
0000000100004da0	pushq	%rbp
0000000100004da1	movq	%rsp, %rbp
0000000100004da4	pushq	%r14
0000000100004da6	pushq	%rbx
0000000100004da7	movq	%rdi, %rbx
0000000100004daa	movq	0x158(%rdi), %rdi
0000000100004db1	lock
0000000100004db2	decq	(%rdi)
0000000100004db5	jne	0x100004dbc
0000000100004db7	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100004dbc	addq	$0x60, %rbx
0000000100004dc0	movq	%rbx, %rdi
0000000100004dc3	popq	%rbx
0000000100004dc4	popq	%r14
0000000100004dc6	popq	%rbp
0000000100004dc7	jmp	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004dcc	movq	%rax, %r14
0000000100004dcf	addq	$0x60, %rbx
0000000100004dd3	movq	%rbx, %rdi
0000000100004dd6	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004ddb	movq	%r14, %rdi
0000000100004dde	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004de3	nopw	%cs:(%rax,%rax)
0000000100004ded	nopl	(%rax)
__ZN4core3ptr144drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$17h9e38532c775e3fa5E:
0000000100004df0	pushq	%rbp
0000000100004df1	movq	%rsp, %rbp
0000000100004df4	pushq	%r15
0000000100004df6	pushq	%r14
0000000100004df8	pushq	%r13
0000000100004dfa	pushq	%r12
0000000100004dfc	pushq	%rbx
0000000100004dfd	pushq	%rax
0000000100004dfe	movq	%rdi, %r14
0000000100004e01	movq	(%rdi), %rbx
0000000100004e04	movq	0x10(%rdi), %r13
0000000100004e08	testq	%r13, %r13
0000000100004e0b	je	0x100004e41
0000000100004e0d	leaq	0x248(%rbx), %r15
0000000100004e14	jmp	0x100004e2c
0000000100004e16	nopw	%cs:(%rax,%rax)
0000000100004e20	addq	$0x248, %r15                    ## imm = 0x248
0000000100004e27	decq	%r13
0000000100004e2a	je	0x100004e41
0000000100004e2c	cmpb	$0x1, -0x8(%r15)
0000000100004e31	ja	0x100004e20
0000000100004e33	leaq	-0x248(%r15), %rdi
0000000100004e3a	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
0000000100004e3f	jmp	0x100004e20
0000000100004e41	movq	0x8(%r14), %rax
0000000100004e45	testq	%rax, %rax
0000000100004e48	je	0x100004e6c
0000000100004e4a	imulq	$0x248, %rax, %rsi              ## imm = 0x248
0000000100004e51	movl	$0x8, %edx
0000000100004e56	movq	%rbx, %rdi
0000000100004e59	addq	$0x8, %rsp
0000000100004e5d	popq	%rbx
0000000100004e5e	popq	%r12
0000000100004e60	popq	%r13
0000000100004e62	popq	%r14
0000000100004e64	popq	%r15
0000000100004e66	popq	%rbp
0000000100004e67	jmp	___rust_dealloc
0000000100004e6c	addq	$0x8, %rsp
0000000100004e70	popq	%rbx
0000000100004e71	popq	%r12
0000000100004e73	popq	%r13
0000000100004e75	popq	%r14
0000000100004e77	popq	%r15
0000000100004e79	popq	%rbp
0000000100004e7a	retq
0000000100004e7b	movq	%rax, -0x30(%rbp)
0000000100004e7f	nop
0000000100004e80	decq	%r13
0000000100004e83	je	0x100004e99
0000000100004e85	leaq	0x248(%r15), %r12
0000000100004e8c	movq	%r15, %rdi
0000000100004e8f	callq	__ZN4core3ptr121drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$17h84583e8e7bfe39d1E ## core::ptr::drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$::h84583e8e7bfe39d1
0000000100004e94	movq	%r12, %r15
0000000100004e97	jmp	0x100004e80
0000000100004e99	movq	0x8(%r14), %rsi
0000000100004e9d	movq	%rbx, %rdi
0000000100004ea0	callq	__ZN4core3ptr151drop_in_place$LT$alloc..raw_vec..RawVec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$17h16278bd37b83db14E ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$::h16278bd37b83db14
0000000100004ea5	movq	-0x30(%rbp), %rdi
0000000100004ea9	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004eae	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100004eb3	nopw	%cs:(%rax,%rax)
0000000100004ebd	nopl	(%rax)
__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h12ce664ccb0e7880E:
0000000100004ec0	pushq	%rbp
0000000100004ec1	movq	%rsp, %rbp
0000000100004ec4	pushq	%r15
0000000100004ec6	pushq	%r14
0000000100004ec8	pushq	%r13
0000000100004eca	pushq	%r12
0000000100004ecc	pushq	%rbx
0000000100004ecd	pushq	%rax
0000000100004ece	movq	%rdi, %r14
0000000100004ed1	movq	(%rdi), %rbx
0000000100004ed4	movq	0x10(%rdi), %r13
0000000100004ed8	incq	%r13
0000000100004edb	movq	%rbx, %rdi
0000000100004ede	nop
0000000100004ee0	cmpq	$0x1, %r13
0000000100004ee4	je	0x100004efa
0000000100004ee6	leaq	0x218(%rdi), %r15
0000000100004eed	decq	%r13
0000000100004ef0	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100004ef5	movq	%r15, %rdi
0000000100004ef8	jmp	0x100004ee0
0000000100004efa	movq	0x8(%r14), %rax
0000000100004efe	testq	%rax, %rax
0000000100004f01	je	0x100004f25
0000000100004f03	imulq	$0x218, %rax, %rsi              ## imm = 0x218
0000000100004f0a	movl	$0x8, %edx
0000000100004f0f	movq	%rbx, %rdi
0000000100004f12	addq	$0x8, %rsp
0000000100004f16	popq	%rbx
0000000100004f17	popq	%r12
0000000100004f19	popq	%r13
0000000100004f1b	popq	%r14
0000000100004f1d	popq	%r15
0000000100004f1f	popq	%rbp
0000000100004f20	jmp	___rust_dealloc
0000000100004f25	addq	$0x8, %rsp
0000000100004f29	popq	%rbx
0000000100004f2a	popq	%r12
0000000100004f2c	popq	%r13
0000000100004f2e	popq	%r14
0000000100004f30	popq	%r15
0000000100004f32	popq	%rbp
0000000100004f33	retq
0000000100004f34	movq	%rax, -0x30(%rbp)
0000000100004f38	nopl	(%rax,%rax)
0000000100004f40	decq	%r13
0000000100004f43	je	0x100004f59
0000000100004f45	leaq	0x218(%r15), %r12
0000000100004f4c	movq	%r15, %rdi
0000000100004f4f	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100004f54	movq	%r12, %r15
0000000100004f57	jmp	0x100004f40
0000000100004f59	movq	0x8(%r14), %rsi
0000000100004f5d	movq	%rbx, %rdi
0000000100004f60	callq	__ZN4core3ptr153drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb262c9005a16cc52E ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb262c9005a16cc52
0000000100004f65	movq	-0x30(%rbp), %rdi
0000000100004f69	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100004f6e	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100004f73	nopw	%cs:(%rax,%rax)
0000000100004f7d	nopl	(%rax)
__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb24d96b5772f44c0E:
0000000100004f80	pushq	%rbp
0000000100004f81	movq	%rsp, %rbp
0000000100004f84	pushq	%r15
0000000100004f86	pushq	%r14
0000000100004f88	pushq	%r13
0000000100004f8a	pushq	%r12
0000000100004f8c	pushq	%rbx
0000000100004f8d	pushq	%rax
0000000100004f8e	movq	%rdi, %r14
0000000100004f91	movq	(%rdi), %rbx
0000000100004f94	movq	0x10(%rdi), %r13
0000000100004f98	testq	%r13, %r13
0000000100004f9b	je	0x100004fd9
0000000100004f9d	leaq	0x1b0(%rbx), %r15
0000000100004fa4	jmp	0x100004fc8
0000000100004fa6	nopw	%cs:(%rax,%rax)
0000000100004fb0	leaq	-0x150(%r15), %rdi
0000000100004fb7	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100004fbc	addq	$0x1b0, %r15                    ## imm = 0x1B0
0000000100004fc3	decq	%r13
0000000100004fc6	je	0x100004fd9
0000000100004fc8	movq	-0x58(%r15), %rdi
0000000100004fcc	lock
0000000100004fcd	decq	(%rdi)
0000000100004fd0	jne	0x100004fb0
0000000100004fd2	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100004fd7	jmp	0x100004fb0
0000000100004fd9	movq	0x8(%r14), %rax
0000000100004fdd	testq	%rax, %rax
0000000100004fe0	je	0x100005004
0000000100004fe2	imulq	$0x1b0, %rax, %rsi              ## imm = 0x1B0
0000000100004fe9	movl	$0x8, %edx
0000000100004fee	movq	%rbx, %rdi
0000000100004ff1	addq	$0x8, %rsp
0000000100004ff5	popq	%rbx
0000000100004ff6	popq	%r12
0000000100004ff8	popq	%r13
0000000100004ffa	popq	%r14
0000000100004ffc	popq	%r15
0000000100004ffe	popq	%rbp
0000000100004fff	jmp	___rust_dealloc
0000000100005004	addq	$0x8, %rsp
0000000100005008	popq	%rbx
0000000100005009	popq	%r12
000000010000500b	popq	%r13
000000010000500d	popq	%r14
000000010000500f	popq	%r15
0000000100005011	popq	%rbp
0000000100005012	retq
0000000100005013	movq	%rax, -0x30(%rbp)
0000000100005017	leaq	-0x150(%r15), %rdi
000000010000501e	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100005023	nopw	%cs:(%rax,%rax)
000000010000502d	nopl	(%rax)
0000000100005030	decq	%r13
0000000100005033	je	0x100005049
0000000100005035	leaq	0x1b0(%r15), %r12
000000010000503c	movq	%r15, %rdi
000000010000503f	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17hbe4a353a387b4526E ## core::ptr::drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::hbe4a353a387b4526
0000000100005044	movq	%r12, %r15
0000000100005047	jmp	0x100005030
0000000100005049	movq	0x8(%r14), %rsi
000000010000504d	movq	%rbx, %rdi
0000000100005050	callq	__ZN4core3ptr153drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h118943397c8b1633E ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::h118943397c8b1633
0000000100005055	movq	-0x30(%rbp), %rdi
0000000100005059	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000505e	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100005063	nopw	%cs:(%rax,%rax)
000000010000506d	nopl	(%rax)
__ZN4core3ptr151drop_in_place$LT$alloc..raw_vec..RawVec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$17h16278bd37b83db14E:
0000000100005070	pushq	%rbp
0000000100005071	movq	%rsp, %rbp
0000000100005074	testq	%rsi, %rsi
0000000100005077	je	0x10000508b
0000000100005079	imulq	$0x248, %rsi, %rsi              ## imm = 0x248
0000000100005080	movl	$0x8, %edx
0000000100005085	popq	%rbp
0000000100005086	jmp	___rust_dealloc
000000010000508b	popq	%rbp
000000010000508c	retq
000000010000508d	nopl	(%rax)
__ZN4core3ptr153drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb262c9005a16cc52E:
0000000100005090	pushq	%rbp
0000000100005091	movq	%rsp, %rbp
0000000100005094	testq	%rsi, %rsi
0000000100005097	je	0x1000050ab
0000000100005099	imulq	$0x218, %rsi, %rsi              ## imm = 0x218
00000001000050a0	movl	$0x8, %edx
00000001000050a5	popq	%rbp
00000001000050a6	jmp	___rust_dealloc
00000001000050ab	popq	%rbp
00000001000050ac	retq
00000001000050ad	nopl	(%rax)
__ZN4core3ptr153drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h118943397c8b1633E:
00000001000050b0	pushq	%rbp
00000001000050b1	movq	%rsp, %rbp
00000001000050b4	testq	%rsi, %rsi
00000001000050b7	je	0x1000050cb
00000001000050b9	imulq	$0x1b0, %rsi, %rsi              ## imm = 0x1B0
00000001000050c0	movl	$0x8, %edx
00000001000050c5	popq	%rbp
00000001000050c6	jmp	___rust_dealloc
00000001000050cb	popq	%rbp
00000001000050cc	retq
00000001000050cd	nopl	(%rax)
__ZN4core3ptr154drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hfe09f9d02d369e04E:
00000001000050d0	pushq	%rbp
00000001000050d1	movq	%rsp, %rbp
00000001000050d4	movq	(%rdi), %rax
00000001000050d7	lock
00000001000050d8	decq	(%rax)
00000001000050db	jne	0x1000050e3
00000001000050dd	popq	%rbp
00000001000050de	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
00000001000050e3	popq	%rbp
00000001000050e4	retq
00000001000050e5	nopw	%cs:(%rax,%rax)
00000001000050ef	nop
__ZN4core3ptr158drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17hfb90c38316d4aa18E:
00000001000050f0	pushq	%rbp
00000001000050f1	movq	%rsp, %rbp
00000001000050f4	pushq	%r15
00000001000050f6	pushq	%r14
00000001000050f8	pushq	%r13
00000001000050fa	pushq	%r12
00000001000050fc	pushq	%rbx
00000001000050fd	pushq	%rax
00000001000050fe	movq	%rsi, %r14
0000000100005101	movq	%rdi, %rbx
0000000100005104	movl	$0x1, %r13d
000000010000510a	nopw	(%rax,%rax)
0000000100005110	leaq	(%r14,%r13), %rax
0000000100005114	cmpq	$0x1, %rax
0000000100005118	je	0x10000512e
000000010000511a	leaq	0x218(%rdi), %r15
0000000100005121	decq	%r13
0000000100005124	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100005129	movq	%r15, %rdi
000000010000512c	jmp	0x100005110
000000010000512e	testq	%r14, %r14
0000000100005131	je	0x100005155
0000000100005133	imulq	$0x218, %r14, %rsi              ## imm = 0x218
000000010000513a	movl	$0x8, %edx
000000010000513f	movq	%rbx, %rdi
0000000100005142	addq	$0x8, %rsp
0000000100005146	popq	%rbx
0000000100005147	popq	%r12
0000000100005149	popq	%r13
000000010000514b	popq	%r14
000000010000514d	popq	%r15
000000010000514f	popq	%rbp
0000000100005150	jmp	___rust_dealloc
0000000100005155	addq	$0x8, %rsp
0000000100005159	popq	%rbx
000000010000515a	popq	%r12
000000010000515c	popq	%r13
000000010000515e	popq	%r14
0000000100005160	popq	%r15
0000000100005162	popq	%rbp
0000000100005163	retq
0000000100005164	movq	%rax, -0x30(%rbp)
0000000100005168	negq	%r13
000000010000516b	nopl	(%rax,%rax)
0000000100005170	incq	%r13
0000000100005173	cmpq	%r13, %r14
0000000100005176	je	0x10000518c
0000000100005178	leaq	0x218(%r15), %r12
000000010000517f	movq	%r15, %rdi
0000000100005182	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100005187	movq	%r12, %r15
000000010000518a	jmp	0x100005170
000000010000518c	movq	%rbx, %rdi
000000010000518f	movq	%r14, %rsi
0000000100005192	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e2b32ebe9794e26E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h2e2b32ebe9794e26
0000000100005197	movq	-0x30(%rbp), %rdi
000000010000519b	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000051a0	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000051a5	nopw	%cs:(%rax,%rax)
00000001000051af	nop
__ZN4core3ptr158drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17h06f7e19fe933f51aE:
00000001000051b0	pushq	%rbp
00000001000051b1	movq	%rsp, %rbp
00000001000051b4	pushq	%r15
00000001000051b6	pushq	%r14
00000001000051b8	pushq	%r13
00000001000051ba	pushq	%r12
00000001000051bc	pushq	%rbx
00000001000051bd	pushq	%rax
00000001000051be	movq	0x8(%rdi), %r13
00000001000051c2	testq	%r13, %r13
00000001000051c5	je	0x100005234
00000001000051c7	movq	%rdi, %r14
00000001000051ca	movq	(%rdi), %rbx
00000001000051cd	leaq	0x1b0(%rbx), %r15
00000001000051d4	jmp	0x1000051f8
00000001000051d6	nopw	%cs:(%rax,%rax)
00000001000051e0	leaq	-0x150(%r15), %rdi
00000001000051e7	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
00000001000051ec	addq	$0x1b0, %r15                    ## imm = 0x1B0
00000001000051f3	decq	%r13
00000001000051f6	je	0x100005209
00000001000051f8	movq	-0x58(%r15), %rdi
00000001000051fc	lock
00000001000051fd	decq	(%rdi)
0000000100005200	jne	0x1000051e0
0000000100005202	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100005207	jmp	0x1000051e0
0000000100005209	movq	0x8(%r14), %rax
000000010000520d	testq	%rax, %rax
0000000100005210	je	0x100005234
0000000100005212	imulq	$0x1b0, %rax, %rsi              ## imm = 0x1B0
0000000100005219	movl	$0x8, %edx
000000010000521e	movq	%rbx, %rdi
0000000100005221	addq	$0x8, %rsp
0000000100005225	popq	%rbx
0000000100005226	popq	%r12
0000000100005228	popq	%r13
000000010000522a	popq	%r14
000000010000522c	popq	%r15
000000010000522e	popq	%rbp
000000010000522f	jmp	___rust_dealloc
0000000100005234	addq	$0x8, %rsp
0000000100005238	popq	%rbx
0000000100005239	popq	%r12
000000010000523b	popq	%r13
000000010000523d	popq	%r14
000000010000523f	popq	%r15
0000000100005241	popq	%rbp
0000000100005242	retq
0000000100005243	movq	%rax, -0x30(%rbp)
0000000100005247	leaq	-0x150(%r15), %rdi
000000010000524e	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
0000000100005253	nopw	%cs:(%rax,%rax)
000000010000525d	nopl	(%rax)
0000000100005260	decq	%r13
0000000100005263	je	0x100005279
0000000100005265	leaq	0x1b0(%r15), %r12
000000010000526c	movq	%r15, %rdi
000000010000526f	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17hbe4a353a387b4526E ## core::ptr::drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::hbe4a353a387b4526
0000000100005274	movq	%r12, %r15
0000000100005277	jmp	0x100005260
0000000100005279	movq	0x8(%r14), %rsi
000000010000527d	movq	%rbx, %rdi
0000000100005280	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbe65bc4eb4aba103E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::hbe65bc4eb4aba103
0000000100005285	movq	-0x30(%rbp), %rdi
0000000100005289	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000528e	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100005293	nopw	%cs:(%rax,%rax)
000000010000529d	nopl	(%rax)
__ZN4core3ptr159drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hcdb60ff04c7672edE:
00000001000052a0	pushq	%rbp
00000001000052a1	movq	%rsp, %rbp
00000001000052a4	pushq	%r14
00000001000052a6	pushq	%rbx
00000001000052a7	movq	%rdi, %rbx
00000001000052aa	movq	0xe0(%rdi), %rax
00000001000052b1	testq	%rax, %rax
00000001000052b4	je	0x1000052c8
00000001000052b6	lock
00000001000052b7	decq	(%rax)
00000001000052ba	jne	0x1000052c8
00000001000052bc	leaq	0xe0(%rbx), %rdi
00000001000052c3	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
00000001000052c8	movq	0xe8(%rbx), %rdi
00000001000052cf	testq	%rdi, %rdi
00000001000052d2	je	0x1000052e8
00000001000052d4	lock
00000001000052d5	decq	-0x10(%rdi)
00000001000052d9	jne	0x1000052e8
00000001000052db	addq	$-0x10, %rdi
00000001000052df	popq	%rbx
00000001000052e0	popq	%r14
00000001000052e2	popq	%rbp
00000001000052e3	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
00000001000052e8	popq	%rbx
00000001000052e9	popq	%r14
00000001000052eb	popq	%rbp
00000001000052ec	retq
00000001000052ed	movq	%rax, %r14
00000001000052f0	addq	$0xe8, %rbx
00000001000052f7	movq	%rbx, %rdi
00000001000052fa	callq	__ZN4core3ptr60drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$17h8149c1ec4ca523f5E ## core::ptr::drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$::h8149c1ec4ca523f5
00000001000052ff	movq	%r14, %rdi
0000000100005302	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100005307	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010000530c	nopl	(%rax)
__ZN4core3ptr164drop_in_place$LT$alloc..vec..Vec$LT$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17ha60371883fd67644E:
0000000100005310	pushq	%rbp
0000000100005311	movq	%rsp, %rbp
0000000100005314	testq	%rsi, %rsi
0000000100005317	je	0x10000532c
0000000100005319	shlq	$0x4, %rsi
000000010000531d	leaq	(%rsi,%rsi,2), %rsi
0000000100005321	movl	$0x8, %edx
0000000100005326	popq	%rbp
0000000100005327	jmp	___rust_dealloc
000000010000532c	popq	%rbp
000000010000532d	retq
000000010000532e	nop
__ZN4core3ptr164drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntry$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h397f6eb20c316c74E:
0000000100005330	pushq	%rbp
0000000100005331	movq	%rsp, %rbp
0000000100005334	testq	%rsi, %rsi
0000000100005337	je	0x100005348
0000000100005339	shlq	$0x6, %rsi
000000010000533d	movl	$0x8, %edx
0000000100005342	popq	%rbp
0000000100005343	jmp	___rust_dealloc
0000000100005348	popq	%rbp
0000000100005349	retq
000000010000534a	nopw	(%rax,%rax)
__ZN4core3ptr168drop_in_place$LT$alloc..vec..Vec$LT$$RF$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h9efa9e2ff9c85467E:
0000000100005350	pushq	%rbp
0000000100005351	movq	%rsp, %rbp
0000000100005354	testq	%rsi, %rsi
0000000100005357	je	0x100005368
0000000100005359	shlq	$0x3, %rsi
000000010000535d	movl	$0x8, %edx
0000000100005362	popq	%rbp
0000000100005363	jmp	___rust_dealloc
0000000100005368	popq	%rbp
0000000100005369	retq
000000010000536a	nopw	(%rax,%rax)
__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E:
0000000100005370	pushq	%rbp
0000000100005371	movq	%rsp, %rbp
0000000100005374	testq	%rsi, %rsi
0000000100005377	je	0x10000538c
0000000100005379	shlq	$0x3, %rsi
000000010000537d	leaq	(%rsi,%rsi,2), %rsi
0000000100005381	movl	$0x8, %edx
0000000100005386	popq	%rbp
0000000100005387	jmp	___rust_dealloc
000000010000538c	popq	%rbp
000000010000538d	retq
000000010000538e	nop
__ZN4core3ptr169drop_in_place$LT$std..sync..remutex..ReentrantMutexGuard$LT$core..cell..RefCell$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$$GT$$GT$17h5ea03d896a7878bdE:
0000000100005390	pushq	%rbp
0000000100005391	movq	%rsp, %rbp
0000000100005394	decl	0x38(%rdi)
0000000100005397	je	0x10000539b
0000000100005399	popq	%rbp
000000010000539a	retq
000000010000539b	movq	$0x0, 0x8(%rdi)
00000001000053a3	movq	(%rdi), %rax
00000001000053a6	testq	%rax, %rax
00000001000053a9	je	0x1000053b4
00000001000053ab	movq	%rax, %rdi
00000001000053ae	popq	%rbp
00000001000053af	jmp	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
00000001000053b4	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
00000001000053b9	movq	%rax, %rdi
00000001000053bc	popq	%rbp
00000001000053bd	jmp	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
00000001000053c2	nopw	%cs:(%rax,%rax)
00000001000053cc	nopl	(%rax)
__ZN4core3ptr174drop_in_place$LT$core..result..Result$LT$addr2line..FrameIter$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$17h25617f43e283586bE:
00000001000053d0	pushq	%rbp
00000001000053d1	movq	%rsp, %rbp
00000001000053d4	movl	(%rdi), %eax
00000001000053d6	cmpl	$0x5, %eax
00000001000053d9	je	0x1000053ff
00000001000053db	addl	$-0x3, %eax
00000001000053de	cmpl	$0x2, %eax
00000001000053e1	jb	0x1000053ff
00000001000053e3	movq	0x40(%rdi), %rsi
00000001000053e7	testq	%rsi, %rsi
00000001000053ea	je	0x1000053ff
00000001000053ec	movq	0x38(%rdi), %rdi
00000001000053f0	shlq	$0x3, %rsi
00000001000053f4	movl	$0x8, %edx
00000001000053f9	popq	%rbp
00000001000053fa	jmp	___rust_dealloc
00000001000053ff	popq	%rbp
0000000100005400	retq
0000000100005401	nopw	%cs:(%rax,%rax)
000000010000540b	nopl	(%rax,%rax)
__ZN4core3ptr176drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17h5b33b3f9513a959fE:
0000000100005410	pushq	%rbp
0000000100005411	movq	%rsp, %rbp
0000000100005414	testq	%rsi, %rsi
0000000100005417	je	0x10000542c
0000000100005419	shlq	$0x4, %rsi
000000010000541d	leaq	(%rsi,%rsi,2), %rsi
0000000100005421	movl	$0x8, %edx
0000000100005426	popq	%rbp
0000000100005427	jmp	___rust_dealloc
000000010000542c	popq	%rbp
000000010000542d	retq
000000010000542e	nop
__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE:
0000000100005430	pushq	%rbp
0000000100005431	movq	%rsp, %rbp
0000000100005434	pushq	%rbx
0000000100005435	pushq	%rax
0000000100005436	cmpl	$0x2f, (%rdi)
0000000100005439	je	0x1000054c4
000000010000543f	movq	%rdi, %rbx
0000000100005442	movq	0x58(%rdi), %rsi
0000000100005446	testq	%rsi, %rsi
0000000100005449	je	0x10000545d
000000010000544b	movq	0x50(%rbx), %rdi
000000010000544f	shlq	$0x2, %rsi
0000000100005453	movl	$0x2, %edx
0000000100005458	callq	___rust_dealloc
000000010000545d	movq	0x70(%rbx), %rax
0000000100005461	testq	%rax, %rax
0000000100005464	je	0x10000547c
0000000100005466	movq	0x68(%rbx), %rdi
000000010000546a	shlq	$0x3, %rax
000000010000546e	leaq	(%rax,%rax,2), %rsi
0000000100005472	movl	$0x8, %edx
0000000100005477	callq	___rust_dealloc
000000010000547c	movq	0x88(%rbx), %rsi
0000000100005483	testq	%rsi, %rsi
0000000100005486	je	0x10000549d
0000000100005488	movq	0x80(%rbx), %rdi
000000010000548f	shlq	$0x2, %rsi
0000000100005493	movl	$0x2, %edx
0000000100005498	callq	___rust_dealloc
000000010000549d	movq	0xa0(%rbx), %rsi
00000001000054a4	testq	%rsi, %rsi
00000001000054a7	je	0x1000054c4
00000001000054a9	movq	0x98(%rbx), %rdi
00000001000054b0	shlq	$0x6, %rsi
00000001000054b4	movl	$0x8, %edx
00000001000054b9	addq	$0x8, %rsp
00000001000054bd	popq	%rbx
00000001000054be	popq	%rbp
00000001000054bf	jmp	___rust_dealloc
00000001000054c4	addq	$0x8, %rsp
00000001000054c8	popq	%rbx
00000001000054c9	popq	%rbp
00000001000054ca	retq
00000001000054cb	nopl	(%rax,%rax)
__ZN4core3ptr182drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$$GT$17ha9ecffcb95d69437E:
00000001000054d0	pushq	%rbp
00000001000054d1	movq	%rsp, %rbp
00000001000054d4	movq	(%rdi), %rax
00000001000054d7	testq	%rax, %rax
00000001000054da	je	0x1000054e8
00000001000054dc	lock
00000001000054dd	decq	(%rax)
00000001000054e0	jne	0x1000054e8
00000001000054e2	popq	%rbp
00000001000054e3	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
00000001000054e8	popq	%rbp
00000001000054e9	retq
00000001000054ea	nopw	(%rax,%rax)
__ZN4core3ptr184drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$17h5ca54a23d3e8471bE:
00000001000054f0	pushq	%rbp
00000001000054f1	movq	%rsp, %rbp
00000001000054f4	pushq	%r15
00000001000054f6	pushq	%r14
00000001000054f8	pushq	%r13
00000001000054fa	pushq	%r12
00000001000054fc	pushq	%rbx
00000001000054fd	pushq	%rax
00000001000054fe	movq	(%rdi), %r14
0000000100005501	testq	%r14, %r14
0000000100005504	je	0x1000055b7
000000010000550a	movq	%rdi, %rbx
000000010000550d	movq	0x8(%rdi), %r15
0000000100005511	testq	%r15, %r15
0000000100005514	je	0x10000558a
0000000100005516	leaq	0x28(%r14), %r12
000000010000551a	movq	%r15, %r13
000000010000551d	jmp	0x100005529
000000010000551f	nop
0000000100005520	addq	$0x48, %r12
0000000100005524	decq	%r13
0000000100005527	je	0x100005575
0000000100005529	cmpq	$0x0, -0x20(%r12)
000000010000552f	je	0x100005520
0000000100005531	movq	-0x18(%r12), %rdi
0000000100005536	testq	%rdi, %rdi
0000000100005539	je	0x100005520
000000010000553b	movq	-0x10(%r12), %rax
0000000100005540	testq	%rax, %rax
0000000100005543	je	0x100005557
0000000100005545	shlq	$0x4, %rax
0000000100005549	leaq	(%rax,%rax,2), %rsi
000000010000554d	movl	$0x8, %edx
0000000100005552	callq	___rust_dealloc
0000000100005557	movq	(%r12), %rsi
000000010000555b	testq	%rsi, %rsi
000000010000555e	je	0x100005520
0000000100005560	movq	-0x8(%r12), %rdi
0000000100005565	shlq	$0x5, %rsi
0000000100005569	movl	$0x8, %edx
000000010000556e	callq	___rust_dealloc
0000000100005573	jmp	0x100005520
0000000100005575	shlq	$0x3, %r15
0000000100005579	leaq	(%r15,%r15,8), %rsi
000000010000557d	movl	$0x8, %edx
0000000100005582	movq	%r14, %rdi
0000000100005585	callq	___rust_dealloc
000000010000558a	movq	0x18(%rbx), %rax
000000010000558e	testq	%rax, %rax
0000000100005591	je	0x1000055b7
0000000100005593	movq	0x10(%rbx), %rdi
0000000100005597	shlq	$0x3, %rax
000000010000559b	leaq	(%rax,%rax,2), %rsi
000000010000559f	movl	$0x8, %edx
00000001000055a4	addq	$0x8, %rsp
00000001000055a8	popq	%rbx
00000001000055a9	popq	%r12
00000001000055ab	popq	%r13
00000001000055ad	popq	%r14
00000001000055af	popq	%r15
00000001000055b1	popq	%rbp
00000001000055b2	jmp	___rust_dealloc
00000001000055b7	addq	$0x8, %rsp
00000001000055bb	popq	%rbx
00000001000055bc	popq	%r12
00000001000055be	popq	%r13
00000001000055c0	popq	%r14
00000001000055c2	popq	%r15
00000001000055c4	popq	%rbp
00000001000055c5	retq
00000001000055c6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr217drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$GT$17h9ff0568603693115E:
00000001000055d0	pushq	%rbp
00000001000055d1	movq	%rsp, %rbp
00000001000055d4	cmpq	$0x0, (%rdi)
00000001000055d8	je	0x1000055e4
00000001000055da	addq	$0x8, %rdi
00000001000055de	popq	%rbp
00000001000055df	jmp	__ZN4core3ptr184drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$17h5ca54a23d3e8471bE ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$::h5ca54a23d3e8471b
00000001000055e4	popq	%rbp
00000001000055e5	retq
00000001000055e6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr23drop_in_place$LT$u8$GT$17h75ef8519043a18ccE:
00000001000055f0	pushq	%rbp
00000001000055f1	movq	%rsp, %rbp
00000001000055f4	popq	%rbp
00000001000055f5	retq
00000001000055f6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr24drop_in_place$LT$i32$GT$17h1a37d48d252ba35aE:
0000000100005600	pushq	%rbp
0000000100005601	movq	%rsp, %rbp
0000000100005604	popq	%rbp
0000000100005605	retq
0000000100005606	nopw	%cs:(%rax,%rax)
__ZN4core3ptr250drop_in_place$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$17hc56b8e0996976d9fE:
0000000100005610	pushq	%rbp
0000000100005611	movq	%rsp, %rbp
0000000100005614	pushq	%rbx
0000000100005615	pushq	%rax
0000000100005616	cmpq	$0x0, 0x8(%rdi)
000000010000561b	je	0x100005665
000000010000561d	movq	%rdi, %rbx
0000000100005620	movq	0x10(%rdi), %rdi
0000000100005624	testq	%rdi, %rdi
0000000100005627	je	0x100005665
0000000100005629	movq	0x18(%rbx), %rax
000000010000562d	testq	%rax, %rax
0000000100005630	je	0x100005644
0000000100005632	shlq	$0x4, %rax
0000000100005636	leaq	(%rax,%rax,2), %rsi
000000010000563a	movl	$0x8, %edx
000000010000563f	callq	___rust_dealloc
0000000100005644	movq	0x28(%rbx), %rsi
0000000100005648	testq	%rsi, %rsi
000000010000564b	je	0x100005665
000000010000564d	movq	0x20(%rbx), %rdi
0000000100005651	shlq	$0x5, %rsi
0000000100005655	movl	$0x8, %edx
000000010000565a	addq	$0x8, %rsp
000000010000565e	popq	%rbx
000000010000565f	popq	%rbp
0000000100005660	jmp	___rust_dealloc
0000000100005665	addq	$0x8, %rsp
0000000100005669	popq	%rbx
000000010000566a	popq	%rbp
000000010000566b	retq
000000010000566c	nopl	(%rax)
__ZN4core3ptr273drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$$GT$17h22b9114a695bc432E:
0000000100005670	pushq	%rbp
0000000100005671	movq	%rsp, %rbp
0000000100005674	pushq	%r15
0000000100005676	pushq	%r14
0000000100005678	pushq	%r12
000000010000567a	pushq	%rbx
000000010000567b	movq	%rdi, %r14
000000010000567e	movq	(%rdi), %rbx
0000000100005681	movq	0x10(%rdi), %r15
0000000100005685	testq	%r15, %r15
0000000100005688	je	0x1000056e5
000000010000568a	leaq	0x28(%rbx), %r12
000000010000568e	jmp	0x100005699
0000000100005690	addq	$0x48, %r12
0000000100005694	decq	%r15
0000000100005697	je	0x1000056e5
0000000100005699	cmpq	$0x0, -0x20(%r12)
000000010000569f	je	0x100005690
00000001000056a1	movq	-0x18(%r12), %rdi
00000001000056a6	testq	%rdi, %rdi
00000001000056a9	je	0x100005690
00000001000056ab	movq	-0x10(%r12), %rax
00000001000056b0	testq	%rax, %rax
00000001000056b3	je	0x1000056c7
00000001000056b5	shlq	$0x4, %rax
00000001000056b9	leaq	(%rax,%rax,2), %rsi
00000001000056bd	movl	$0x8, %edx
00000001000056c2	callq	___rust_dealloc
00000001000056c7	movq	(%r12), %rsi
00000001000056cb	testq	%rsi, %rsi
00000001000056ce	je	0x100005690
00000001000056d0	movq	-0x8(%r12), %rdi
00000001000056d5	shlq	$0x5, %rsi
00000001000056d9	movl	$0x8, %edx
00000001000056de	callq	___rust_dealloc
00000001000056e3	jmp	0x100005690
00000001000056e5	movq	0x8(%r14), %rax
00000001000056e9	testq	%rax, %rax
00000001000056ec	je	0x10000570b
00000001000056ee	shlq	$0x3, %rax
00000001000056f2	leaq	(%rax,%rax,8), %rsi
00000001000056f6	movl	$0x8, %edx
00000001000056fb	movq	%rbx, %rdi
00000001000056fe	popq	%rbx
00000001000056ff	popq	%r12
0000000100005701	popq	%r14
0000000100005703	popq	%r15
0000000100005705	popq	%rbp
0000000100005706	jmp	___rust_dealloc
000000010000570b	popq	%rbx
000000010000570c	popq	%r12
000000010000570e	popq	%r14
0000000100005710	popq	%r15
0000000100005712	popq	%rbp
0000000100005713	retq
0000000100005714	nopw	%cs:(%rax,%rax)
000000010000571e	nop
__ZN4core3ptr275drop_in_place$LT$gimli..read..line..LineRows$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$C$usize$GT$$GT$17h77e6324a62f4e013E:
0000000100005720	pushq	%rbp
0000000100005721	movq	%rsp, %rbp
0000000100005724	pushq	%rbx
0000000100005725	pushq	%rax
0000000100005726	movq	%rdi, %rbx
0000000100005729	movq	0x58(%rdi), %rsi
000000010000572d	testq	%rsi, %rsi
0000000100005730	je	0x100005744
0000000100005732	movq	0x50(%rbx), %rdi
0000000100005736	shlq	$0x2, %rsi
000000010000573a	movl	$0x2, %edx
000000010000573f	callq	___rust_dealloc
0000000100005744	movq	0x70(%rbx), %rax
0000000100005748	testq	%rax, %rax
000000010000574b	je	0x100005763
000000010000574d	movq	0x68(%rbx), %rdi
0000000100005751	shlq	$0x3, %rax
0000000100005755	leaq	(%rax,%rax,2), %rsi
0000000100005759	movl	$0x8, %edx
000000010000575e	callq	___rust_dealloc
0000000100005763	movq	0x88(%rbx), %rsi
000000010000576a	testq	%rsi, %rsi
000000010000576d	je	0x100005784
000000010000576f	movq	0x80(%rbx), %rdi
0000000100005776	shlq	$0x2, %rsi
000000010000577a	movl	$0x2, %edx
000000010000577f	callq	___rust_dealloc
0000000100005784	movq	0xa0(%rbx), %rsi
000000010000578b	testq	%rsi, %rsi
000000010000578e	je	0x1000057ab
0000000100005790	movq	0x98(%rbx), %rdi
0000000100005797	shlq	$0x6, %rsi
000000010000579b	movl	$0x8, %edx
00000001000057a0	addq	$0x8, %rsp
00000001000057a4	popq	%rbx
00000001000057a5	popq	%rbp
00000001000057a6	jmp	___rust_dealloc
00000001000057ab	addq	$0x8, %rsp
00000001000057af	popq	%rbx
00000001000057b0	popq	%rbp
00000001000057b1	retq
00000001000057b2	nopw	%cs:(%rax,%rax)
00000001000057bc	nopl	(%rax)
__ZN4core3ptr285drop_in_place$LT$alloc..boxed..Box$LT$$u5b$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$u5d$$GT$$GT$17hf61a34d3a54905a3E:
00000001000057c0	testq	%rsi, %rsi
00000001000057c3	je	0x10000585d
00000001000057c9	pushq	%rbp
00000001000057ca	movq	%rsp, %rbp
00000001000057cd	pushq	%r15
00000001000057cf	pushq	%r14
00000001000057d1	pushq	%r12
00000001000057d3	pushq	%rbx
00000001000057d4	movq	%rsi, %r14
00000001000057d7	movq	%rdi, %rbx
00000001000057da	leaq	0x28(%rdi), %r15
00000001000057de	movq	%rsi, %r12
00000001000057e1	jmp	0x1000057f9
00000001000057e3	nopw	%cs:(%rax,%rax)
00000001000057ed	nopl	(%rax)
00000001000057f0	addq	$0x48, %r15
00000001000057f4	decq	%r12
00000001000057f7	je	0x100005840
00000001000057f9	cmpq	$0x0, -0x20(%r15)
00000001000057fe	je	0x1000057f0
0000000100005800	movq	-0x18(%r15), %rdi
0000000100005804	testq	%rdi, %rdi
0000000100005807	je	0x1000057f0
0000000100005809	movq	-0x10(%r15), %rax
000000010000580d	testq	%rax, %rax
0000000100005810	je	0x100005824
0000000100005812	shlq	$0x4, %rax
0000000100005816	leaq	(%rax,%rax,2), %rsi
000000010000581a	movl	$0x8, %edx
000000010000581f	callq	___rust_dealloc
0000000100005824	movq	(%r15), %rsi
0000000100005827	testq	%rsi, %rsi
000000010000582a	je	0x1000057f0
000000010000582c	movq	-0x8(%r15), %rdi
0000000100005830	shlq	$0x5, %rsi
0000000100005834	movl	$0x8, %edx
0000000100005839	callq	___rust_dealloc
000000010000583e	jmp	0x1000057f0
0000000100005840	shlq	$0x3, %r14
0000000100005844	leaq	(%r14,%r14,8), %rsi
0000000100005848	movl	$0x8, %edx
000000010000584d	movq	%rbx, %rdi
0000000100005850	popq	%rbx
0000000100005851	popq	%r12
0000000100005853	popq	%r14
0000000100005855	popq	%r15
0000000100005857	popq	%rbp
0000000100005858	jmp	___rust_dealloc
000000010000585d	retq
000000010000585e	nop
__ZN4core3ptr29drop_in_place$LT$$LP$$RP$$GT$17ha47b0ecd5c0abd76E:
0000000100005860	pushq	%rbp
0000000100005861	movq	%rsp, %rbp
0000000100005864	popq	%rbp
0000000100005865	retq
0000000100005866	nopw	%cs:(%rax,%rax)
__ZN4core3ptr37drop_in_place$LT$std..fs..ReadDir$GT$17h35e65e90ca323d62E:
0000000100005870	pushq	%rbp
0000000100005871	movq	%rsp, %rbp
0000000100005874	lock
0000000100005875	decq	(%rdi)
0000000100005878	jne	0x100005880
000000010000587a	popq	%rbp
000000010000587b	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
0000000100005880	popq	%rbp
0000000100005881	retq
0000000100005882	nopw	%cs:(%rax,%rax)
000000010000588c	nopl	(%rax)
__ZN4core3ptr383drop_in_place$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$17hf12079e1fa526dd8E:
0000000100005890	pushq	%rbp
0000000100005891	movq	%rsp, %rbp
0000000100005894	pushq	%r14
0000000100005896	pushq	%rbx
0000000100005897	cmpb	$0x4b, %dil
000000010000589b	jne	0x1000058e7
000000010000589d	movq	%rsi, %rbx
00000001000058a0	testq	%rsi, %rsi
00000001000058a3	je	0x1000058e7
00000001000058a5	movq	(%rbx), %rax
00000001000058a8	lock
00000001000058a9	decq	(%rax)
00000001000058ac	jne	0x1000058b6
00000001000058ae	movq	%rbx, %rdi
00000001000058b1	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
00000001000058b6	movq	0x160(%rbx), %rdi
00000001000058bd	lock
00000001000058be	decq	(%rdi)
00000001000058c1	jne	0x1000058c8
00000001000058c3	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
00000001000058c8	leaq	0x68(%rbx), %rdi
00000001000058cc	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
00000001000058d1	movl	$0x1b0, %esi                    ## imm = 0x1B0
00000001000058d6	movl	$0x8, %edx
00000001000058db	movq	%rbx, %rdi
00000001000058de	popq	%rbx
00000001000058df	popq	%r14
00000001000058e1	popq	%rbp
00000001000058e2	jmp	___rust_dealloc
00000001000058e7	popq	%rbx
00000001000058e8	popq	%r14
00000001000058ea	popq	%rbp
00000001000058eb	retq
00000001000058ec	movq	%rax, %r14
00000001000058ef	leaq	0x68(%rbx), %rdi
00000001000058f3	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
00000001000058f8	jmp	0x100005906
00000001000058fa	movq	%rax, %r14
00000001000058fd	leaq	0x8(%rbx), %rdi
0000000100005901	callq	__ZN4core3ptr137drop_in_place$LT$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$17h88c5f38d25ea6ccbE ## core::ptr::drop_in_place$LT$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$::h88c5f38d25ea6ccb
0000000100005906	movq	%rbx, %rdi
0000000100005909	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc41a4999f22d4ed3E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::hc41a4999f22d4ed3
000000010000590e	movq	%r14, %rdi
0000000100005911	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100005916	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010000591b	nopl	(%rax,%rax)
__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE:
0000000100005920	pushq	%rbp
0000000100005921	movq	%rsp, %rbp
0000000100005924	movq	0x8(%rdi), %rsi
0000000100005928	testq	%rsi, %rsi
000000010000592b	je	0x10000593b
000000010000592d	movq	(%rdi), %rdi
0000000100005930	movl	$0x1, %edx
0000000100005935	popq	%rbp
0000000100005936	jmp	___rust_dealloc
000000010000593b	popq	%rbp
000000010000593c	retq
000000010000593d	nopl	(%rax)
__ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hee704b1b50093296E:
0000000100005940	pushq	%rbp
0000000100005941	movq	%rsp, %rbp
0000000100005944	movq	(%rdi), %rdi
0000000100005947	lock
0000000100005948	decq	(%rdi)
000000010000594b	jne	0x100005953
000000010000594d	popq	%rbp
000000010000594e	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100005953	popq	%rbp
0000000100005954	retq
0000000100005955	nopw	%cs:(%rax,%rax)
000000010000595f	nop
__ZN4core3ptr416drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$$GT$17hfaaf3a92287fe604E:
0000000100005960	pushq	%rbp
0000000100005961	movq	%rsp, %rbp
0000000100005964	cmpb	$0x4c, %dil
0000000100005968	jne	0x10000596c
000000010000596a	popq	%rbp
000000010000596b	retq
000000010000596c	movzbl	%dil, %edi
0000000100005970	popq	%rbp
0000000100005971	jmp	__ZN4core3ptr383drop_in_place$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$17hf12079e1fa526dd8E ## core::ptr::drop_in_place$LT$core..result..Result$LT$core..option..Option$LT$alloc..boxed..Box$LT$$LP$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$C$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$RP$$GT$$GT$$C$gimli..read..Error$GT$$GT$::hf12079e1fa526dd8
0000000100005976	nopw	%cs:(%rax,%rax)
__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE:
0000000100005980	pushq	%rbp
0000000100005981	movq	%rsp, %rbp
0000000100005984	pushq	%r15
0000000100005986	pushq	%r14
0000000100005988	pushq	%r12
000000010000598a	pushq	%rbx
000000010000598b	movq	(%rdi), %rax
000000010000598e	movl	%eax, %ecx
0000000100005990	andl	$0x3, %ecx
0000000100005993	leaq	-0x2(%rcx), %rdx
0000000100005997	cmpq	$0x2, %rdx
000000010000599b	jb	0x1000059a2
000000010000599d	testq	%rcx, %rcx
00000001000059a0	jne	0x1000059ab
00000001000059a2	popq	%rbx
00000001000059a3	popq	%r12
00000001000059a5	popq	%r14
00000001000059a7	popq	%r15
00000001000059a9	popq	%rbp
00000001000059aa	retq
00000001000059ab	leaq	-0x1(%rax), %rbx
00000001000059af	movq	-0x1(%rax), %r14
00000001000059b3	movq	0x7(%rax), %r15
00000001000059b7	movq	%r14, %rdi
00000001000059ba	callq	*(%r15)
00000001000059bd	movq	0x8(%r15), %rsi
00000001000059c1	testq	%rsi, %rsi
00000001000059c4	je	0x1000059d2
00000001000059c6	movq	0x10(%r15), %rdx
00000001000059ca	movq	%r14, %rdi
00000001000059cd	callq	___rust_dealloc
00000001000059d2	movl	$0x18, %esi
00000001000059d7	movl	$0x8, %edx
00000001000059dc	movq	%rbx, %rdi
00000001000059df	popq	%rbx
00000001000059e0	popq	%r12
00000001000059e2	popq	%r14
00000001000059e4	popq	%r15
00000001000059e6	popq	%rbp
00000001000059e7	jmp	___rust_dealloc
00000001000059ec	movq	%rax, %r12
00000001000059ef	movq	%r14, %rdi
00000001000059f2	movq	%r15, %rsi
00000001000059f5	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
00000001000059fa	movq	%rbx, %rdi
00000001000059fd	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100005a02	movq	%r12, %rdi
0000000100005a05	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100005a0a	nopw	(%rax,%rax)
__ZN4core3ptr437drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h0b7ec5dfbeae34faE:
0000000100005a10	pushq	%rbp
0000000100005a11	movq	%rsp, %rbp
0000000100005a14	shlq	$0x5, %rsi
0000000100005a18	movl	$0x8, %edx
0000000100005a1d	popq	%rbp
0000000100005a1e	jmp	___rust_dealloc
0000000100005a23	nopw	%cs:(%rax,%rax)
0000000100005a2d	nopl	(%rax)
__ZN4core3ptr44drop_in_place$LT$addr2line..LineSequence$GT$17h4ea072f64cce4f0dE:
0000000100005a30	pushq	%rbp
0000000100005a31	movq	%rsp, %rbp
0000000100005a34	testq	%rsi, %rsi
0000000100005a37	je	0x100005a4c
0000000100005a39	shlq	$0x3, %rsi
0000000100005a3d	leaq	(%rsi,%rsi,2), %rsi
0000000100005a41	movl	$0x8, %edx
0000000100005a46	popq	%rbp
0000000100005a47	jmp	___rust_dealloc
0000000100005a4c	popq	%rbp
0000000100005a4d	retq
0000000100005a4e	nop
__ZN4core3ptr44drop_in_place$LT$object..read..ObjectMap$GT$17h2a15bb8a5f698078E:
0000000100005a50	pushq	%rbp
0000000100005a51	movq	%rsp, %rbp
0000000100005a54	pushq	%rbx
0000000100005a55	pushq	%rax
0000000100005a56	movq	%rdi, %rbx
0000000100005a59	movq	0x8(%rdi), %rax
0000000100005a5d	testq	%rax, %rax
0000000100005a60	je	0x100005a77
0000000100005a62	movq	(%rbx), %rdi
0000000100005a65	shlq	$0x3, %rax
0000000100005a69	leaq	(%rax,%rax,4), %rsi
0000000100005a6d	movl	$0x8, %edx
0000000100005a72	callq	___rust_dealloc
0000000100005a77	movq	0x20(%rbx), %rsi
0000000100005a7b	testq	%rsi, %rsi
0000000100005a7e	je	0x100005a98
0000000100005a80	movq	0x18(%rbx), %rdi
0000000100005a84	shlq	$0x4, %rsi
0000000100005a88	movl	$0x8, %edx
0000000100005a8d	addq	$0x8, %rsp
0000000100005a91	popq	%rbx
0000000100005a92	popq	%rbp
0000000100005a93	jmp	___rust_dealloc
0000000100005a98	addq	$0x8, %rsp
0000000100005a9c	popq	%rbx
0000000100005a9d	popq	%rbp
0000000100005a9e	retq
0000000100005a9f	nop
__ZN4core3ptr44drop_in_place$LT$std..thread..PanicGuard$GT$17he4ed8af8217f1c16E:
0000000100005aa0	pushq	%rbp
0000000100005aa1	movq	%rsp, %rbp
0000000100005aa4	subq	$0x40, %rsp
0000000100005aa8	leaq	0x42ec9(%rip), %rax
0000000100005aaf	movq	%rax, -0x38(%rbp)
0000000100005ab3	movq	$0x1, -0x30(%rbp)
0000000100005abb	movq	$0x0, -0x18(%rbp)
0000000100005ac3	leaq	-0x8(%rbp), %rdi
0000000100005ac7	movq	%rdi, -0x28(%rbp)
0000000100005acb	movq	$0x0, -0x20(%rbp)
0000000100005ad3	leaq	-0x38(%rbp), %rsi
0000000100005ad7	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100005adc	movq	%rax, %rdi
0000000100005adf	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
0000000100005ae4	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
0000000100005ae9	nopl	(%rax)
__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9ac2a42193cc6e4aE:
0000000100005af0	pushq	%rbp
0000000100005af1	movq	%rsp, %rbp
0000000100005af4	movq	0x8(%rdi), %rsi
0000000100005af8	testq	%rsi, %rsi
0000000100005afb	je	0x100005b0b
0000000100005afd	movq	(%rdi), %rdi
0000000100005b00	movl	$0x1, %edx
0000000100005b05	popq	%rbp
0000000100005b06	jmp	___rust_dealloc
0000000100005b0b	popq	%rbp
0000000100005b0c	retq
0000000100005b0d	nopl	(%rax)
__ZN4core3ptr46drop_in_place$LT$std..io..stdio..StdinLock$GT$17h1f998272c9deb625E:
0000000100005b10	pushq	%rbp
0000000100005b11	movq	%rsp, %rbp
0000000100005b14	pushq	%rbx
0000000100005b15	pushq	%rax
0000000100005b16	movq	%rdi, %rbx
0000000100005b19	testb	%sil, %sil
0000000100005b1c	jne	0x100005b2e
0000000100005b1e	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rax ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
0000000100005b25	shlq	$0x1, %rax
0000000100005b29	testq	%rax, %rax
0000000100005b2c	jne	0x100005b57
0000000100005b2e	movq	(%rbx), %rdi
0000000100005b31	testq	%rdi, %rdi
0000000100005b34	je	0x100005b41
0000000100005b36	addq	$0x8, %rsp
0000000100005b3a	popq	%rbx
0000000100005b3b	popq	%rbp
0000000100005b3c	jmp	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
0000000100005b41	movq	%rbx, %rdi
0000000100005b44	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
0000000100005b49	movq	%rax, %rdi
0000000100005b4c	addq	$0x8, %rsp
0000000100005b50	popq	%rbx
0000000100005b51	popq	%rbp
0000000100005b52	jmp	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
0000000100005b57	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
0000000100005b5c	testb	%al, %al
0000000100005b5e	jne	0x100005b2e
0000000100005b60	movb	$0x1, 0x8(%rbx)
0000000100005b64	jmp	0x100005b2e
0000000100005b66	nopw	%cs:(%rax,%rax)
__ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h2a334d9c2fc48269E:
0000000100005b70	pushq	%rbp
0000000100005b71	movq	%rsp, %rbp
0000000100005b74	movq	%rdi, %rax
0000000100005b77	movq	(%rdi), %rdi
0000000100005b7a	movb	$0x0, (%rdi)
0000000100005b7d	movq	0x8(%rax), %rsi
0000000100005b81	testq	%rsi, %rsi
0000000100005b84	je	0x100005b91
0000000100005b86	movl	$0x1, %edx
0000000100005b8b	popq	%rbp
0000000100005b8c	jmp	___rust_dealloc
0000000100005b91	popq	%rbp
0000000100005b92	retq
0000000100005b93	nopw	%cs:(%rax,%rax)
0000000100005b9d	nopl	(%rax)
__ZN4core3ptr491drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..function..FunctionAddress$C$alloc..slice..stable_sort$LT$addr2line..function..FunctionAddress$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..function..FunctionAddress$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h2bf9b039d291e1b0E:
0000000100005ba0	pushq	%rbp
0000000100005ba1	movq	%rsp, %rbp
0000000100005ba4	shlq	$0x3, %rsi
0000000100005ba8	leaq	(%rsi,%rsi,2), %rsi
0000000100005bac	movl	$0x8, %edx
0000000100005bb1	popq	%rbp
0000000100005bb2	jmp	___rust_dealloc
0000000100005bb7	nopw	(%rax,%rax)
__ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h2ceb93c56e0c66b8E:
0000000100005bc0	pushq	%rbp
0000000100005bc1	movq	%rsp, %rbp
0000000100005bc4	testq	%rdi, %rdi
0000000100005bc7	je	0x100005bd9
0000000100005bc9	testq	%rsi, %rsi
0000000100005bcc	je	0x100005bd9
0000000100005bce	movl	$0x1, %edx
0000000100005bd3	popq	%rbp
0000000100005bd4	jmp	___rust_dealloc
0000000100005bd9	popq	%rbp
0000000100005bda	retq
0000000100005bdb	nopl	(%rax,%rax)
__ZN4core3ptr52drop_in_place$LT$gimli..read..abbrev..Attributes$GT$17hf058af016265b4d8E:
0000000100005be0	pushq	%rbp
0000000100005be1	movq	%rsp, %rbp
0000000100005be4	cmpq	$0x0, (%rdi)
0000000100005be8	je	0x100005c06
0000000100005bea	movq	0x10(%rdi), %rsi
0000000100005bee	testq	%rsi, %rsi
0000000100005bf1	je	0x100005c06
0000000100005bf3	movq	0x8(%rdi), %rdi
0000000100005bf7	shlq	$0x4, %rsi
0000000100005bfb	movl	$0x8, %edx
0000000100005c00	popq	%rbp
0000000100005c01	jmp	___rust_dealloc
0000000100005c06	popq	%rbp
0000000100005c07	retq
0000000100005c08	nopl	(%rax,%rax)
__ZN4core3ptr55drop_in_place$LT$gimli..read..abbrev..Abbreviations$GT$17h514df26e731d6726E:
0000000100005c10	pushq	%rbp
0000000100005c11	movq	%rsp, %rbp
0000000100005c14	pushq	%r15
0000000100005c16	pushq	%r14
0000000100005c18	pushq	%r12
0000000100005c1a	pushq	%rbx
0000000100005c1b	movq	%rdi, %rbx
0000000100005c1e	movq	(%rdi), %r14
0000000100005c21	movq	0x10(%rdi), %r15
0000000100005c25	testq	%r15, %r15
0000000100005c28	je	0x100005c5f
0000000100005c2a	leaq	0x10(%r14), %r12
0000000100005c2e	jmp	0x100005c39
0000000100005c30	addq	$0x70, %r12
0000000100005c34	decq	%r15
0000000100005c37	je	0x100005c5f
0000000100005c39	cmpq	$0x0, -0x10(%r12)
0000000100005c3f	je	0x100005c30
0000000100005c41	movq	(%r12), %rsi
0000000100005c45	testq	%rsi, %rsi
0000000100005c48	je	0x100005c30
0000000100005c4a	movq	-0x8(%r12), %rdi
0000000100005c4f	shlq	$0x4, %rsi
0000000100005c53	movl	$0x8, %edx
0000000100005c58	callq	___rust_dealloc
0000000100005c5d	jmp	0x100005c30
0000000100005c5f	movq	0x8(%rbx), %rax
0000000100005c63	testq	%rax, %rax
0000000100005c66	je	0x100005c79
0000000100005c68	imulq	$0x70, %rax, %rsi
0000000100005c6c	movl	$0x8, %edx
0000000100005c71	movq	%r14, %rdi
0000000100005c74	callq	___rust_dealloc
0000000100005c79	addq	$0x18, %rbx
0000000100005c7d	movq	%rbx, %rdi
0000000100005c80	popq	%rbx
0000000100005c81	popq	%r12
0000000100005c83	popq	%r14
0000000100005c85	popq	%r15
0000000100005c87	popq	%rbp
0000000100005c88	jmp	__ZN4core3ptr108drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$17hbf8894e36be46d86E ## core::ptr::drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$::hbf8894e36be46d86
0000000100005c8d	nopl	(%rax)
__ZN4core3ptr60drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$17h8149c1ec4ca523f5E:
0000000100005c90	pushq	%rbp
0000000100005c91	movq	%rsp, %rbp
0000000100005c94	movq	(%rdi), %rdi
0000000100005c97	testq	%rdi, %rdi
0000000100005c9a	je	0x100005cad
0000000100005c9c	lock
0000000100005c9d	decq	-0x10(%rdi)
0000000100005ca1	jne	0x100005cad
0000000100005ca3	addq	$-0x10, %rdi
0000000100005ca7	popq	%rbp
0000000100005ca8	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100005cad	popq	%rbp
0000000100005cae	retq
0000000100005caf	nop
__ZN4core3ptr62drop_in_place$LT$std..sys_common..once..queue..WaiterQueue$GT$17h7fdd495ccc3176caE:
0000000100005cb0	pushq	%rbp
0000000100005cb1	movq	%rsp, %rbp
0000000100005cb4	popq	%rbp
0000000100005cb5	jmp	__ZN83_$LT$std..sys_common..once..queue..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6e0e7f1101c340a0E ## _$LT$std..sys_common..once..queue..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$::drop::h6e0e7f1101c340a0
0000000100005cba	nopw	(%rax,%rax)
__ZN4core3ptr64drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$17haa5433b9df65ff99E:
0000000100005cc0	pushq	%rbp
0000000100005cc1	movq	%rsp, %rbp
0000000100005cc4	testq	%rsi, %rsi
0000000100005cc7	je	0x100005cd8
0000000100005cc9	shlq	$0x5, %rsi
0000000100005ccd	movl	$0x8, %edx
0000000100005cd2	popq	%rbp
0000000100005cd3	jmp	___rust_dealloc
0000000100005cd8	popq	%rbp
0000000100005cd9	retq
0000000100005cda	nopw	(%rax,%rax)
__ZN4core3ptr64drop_in_place$LT$std..backtrace_rs..print..BacktraceFrameFmt$GT$17h276211c160656cbaE:
0000000100005ce0	pushq	%rbp
0000000100005ce1	movq	%rsp, %rbp
0000000100005ce4	incq	0x18(%rdi)
0000000100005ce8	popq	%rbp
0000000100005ce9	retq
0000000100005cea	nopw	(%rax,%rax)
__ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e4caf9edc689ef1E:
0000000100005cf0	pushq	%rbp
0000000100005cf1	movq	%rsp, %rbp
0000000100005cf4	pushq	%r15
0000000100005cf6	pushq	%r14
0000000100005cf8	pushq	%r12
0000000100005cfa	pushq	%rbx
0000000100005cfb	movq	%rdi, %r14
0000000100005cfe	movq	(%rdi), %rbx
0000000100005d01	movq	0x10(%rdi), %r15
0000000100005d05	testq	%r15, %r15
0000000100005d08	je	0x100005d33
0000000100005d0a	leaq	0x8(%rbx), %r12
0000000100005d0e	jmp	0x100005d19
0000000100005d10	addq	$0x18, %r12
0000000100005d14	decq	%r15
0000000100005d17	je	0x100005d33
0000000100005d19	movq	(%r12), %rsi
0000000100005d1d	testq	%rsi, %rsi
0000000100005d20	je	0x100005d10
0000000100005d22	movq	-0x8(%r12), %rdi
0000000100005d27	movl	$0x1, %edx
0000000100005d2c	callq	___rust_dealloc
0000000100005d31	jmp	0x100005d10
0000000100005d33	movq	0x8(%r14), %rax
0000000100005d37	testq	%rax, %rax
0000000100005d3a	je	0x100005d59
0000000100005d3c	shlq	$0x3, %rax
0000000100005d40	leaq	(%rax,%rax,2), %rsi
0000000100005d44	movl	$0x8, %edx
0000000100005d49	movq	%rbx, %rdi
0000000100005d4c	popq	%rbx
0000000100005d4d	popq	%r12
0000000100005d4f	popq	%r14
0000000100005d51	popq	%r15
0000000100005d53	popq	%rbp
0000000100005d54	jmp	___rust_dealloc
0000000100005d59	popq	%rbx
0000000100005d5a	popq	%r12
0000000100005d5c	popq	%r14
0000000100005d5e	popq	%r15
0000000100005d60	popq	%rbp
0000000100005d61	retq
0000000100005d62	nopw	%cs:(%rax,%rax)
0000000100005d6c	nopl	(%rax)
__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE:
0000000100005d70	pushq	%rbp
0000000100005d71	movq	%rsp, %rbp
0000000100005d74	pushq	%r14
0000000100005d76	pushq	%rbx
0000000100005d77	movq	%rdi, %rbx
0000000100005d7a	addq	$0x190, %rdi                    ## imm = 0x190
0000000100005d81	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h70ca90901d829ad9E ## core::ptr::drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h70ca90901d829ad9
0000000100005d86	leaq	0x1c8(%rbx), %rdi
0000000100005d8d	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
0000000100005d92	movq	(%rbx), %rdi
0000000100005d95	movq	0x8(%rbx), %rsi
0000000100005d99	callq	0x1000427de                     ## symbol stub for: _munmap
0000000100005d9e	addq	$0x10, %rbx
0000000100005da2	movq	%rbx, %rdi
0000000100005da5	popq	%rbx
0000000100005da6	popq	%r14
0000000100005da8	popq	%rbp
0000000100005da9	jmp	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
0000000100005dae	movq	%rax, %r14
0000000100005db1	jmp	0x100005dc2
0000000100005db3	movq	%rax, %r14
0000000100005db6	leaq	0x1c8(%rbx), %rdi
0000000100005dbd	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
0000000100005dc2	movq	(%rbx), %rdi
0000000100005dc5	movq	0x8(%rbx), %rsi
0000000100005dc9	callq	__ZN4core3ptr68drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$17ha89d14fd8604304eE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$::ha89d14fd8604304e
0000000100005dce	addq	$0x10, %rbx
0000000100005dd2	movq	%rbx, %rdi
0000000100005dd5	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
0000000100005dda	movq	%r14, %rdi
0000000100005ddd	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100005de2	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100005de7	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100005dec	nopl	(%rax)
__ZN4core3ptr67drop_in_place$LT$alloc..vec..Vec$LT$addr2line..LineSequence$GT$$GT$17h1b328d54e7d1bbf1E:
0000000100005df0	pushq	%rbp
0000000100005df1	movq	%rsp, %rbp
0000000100005df4	pushq	%r15
0000000100005df6	pushq	%r14
0000000100005df8	pushq	%r12
0000000100005dfa	pushq	%rbx
0000000100005dfb	movq	%rdi, %r14
0000000100005dfe	movq	(%rdi), %rbx
0000000100005e01	movq	0x10(%rdi), %r15
0000000100005e05	testq	%r15, %r15
0000000100005e08	je	0x100005e3b
0000000100005e0a	leaq	0x8(%rbx), %r12
0000000100005e0e	jmp	0x100005e19
0000000100005e10	addq	$0x20, %r12
0000000100005e14	decq	%r15
0000000100005e17	je	0x100005e3b
0000000100005e19	movq	(%r12), %rax
0000000100005e1d	testq	%rax, %rax
0000000100005e20	je	0x100005e10
0000000100005e22	movq	-0x8(%r12), %rdi
0000000100005e27	shlq	$0x3, %rax
0000000100005e2b	leaq	(%rax,%rax,2), %rsi
0000000100005e2f	movl	$0x8, %edx
0000000100005e34	callq	___rust_dealloc
0000000100005e39	jmp	0x100005e10
0000000100005e3b	movq	0x8(%r14), %rsi
0000000100005e3f	testq	%rsi, %rsi
0000000100005e42	je	0x100005e5d
0000000100005e44	shlq	$0x5, %rsi
0000000100005e48	movl	$0x8, %edx
0000000100005e4d	movq	%rbx, %rdi
0000000100005e50	popq	%rbx
0000000100005e51	popq	%r12
0000000100005e53	popq	%r14
0000000100005e55	popq	%r15
0000000100005e57	popq	%rbp
0000000100005e58	jmp	___rust_dealloc
0000000100005e5d	popq	%rbx
0000000100005e5e	popq	%r12
0000000100005e60	popq	%r14
0000000100005e62	popq	%r15
0000000100005e64	popq	%rbp
0000000100005e65	retq
0000000100005e66	nopw	%cs:(%rax,%rax)
__ZN4core3ptr68drop_in_place$LT$core..option..Option$LT$std..thread..Thread$GT$$GT$17h8fae294146e4bedfE:
0000000100005e70	testq	%rdi, %rdi
0000000100005e73	je	0x100005e85
0000000100005e75	pushq	%rbp
0000000100005e76	movq	%rsp, %rbp
0000000100005e79	lock
0000000100005e7a	decq	(%rdi)
0000000100005e7d	popq	%rbp
0000000100005e7e	jne	0x100005e85
0000000100005e80	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100005e85	retq
0000000100005e86	nopw	%cs:(%rax,%rax)
__ZN4core3ptr68drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$17ha89d14fd8604304eE:
0000000100005e90	pushq	%rbp
0000000100005e91	movq	%rsp, %rbp
0000000100005e94	popq	%rbp
0000000100005e95	jmp	0x1000427de                     ## symbol stub for: _munmap
0000000100005e9a	nopw	(%rax,%rax)
__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE:
0000000100005ea0	pushq	%rbp
0000000100005ea1	movq	%rsp, %rbp
0000000100005ea4	pushq	%r15
0000000100005ea6	pushq	%r14
0000000100005ea8	pushq	%r12
0000000100005eaa	pushq	%rbx
0000000100005eab	movq	%rdi, %rbx
0000000100005eae	movq	(%rdi), %r14
0000000100005eb1	movq	0x10(%rdi), %r15
0000000100005eb5	testq	%r15, %r15
0000000100005eb8	je	0x100005ee3
0000000100005eba	leaq	0x8(%r14), %r12
0000000100005ebe	jmp	0x100005ec9
0000000100005ec0	addq	$0x18, %r12
0000000100005ec4	decq	%r15
0000000100005ec7	je	0x100005ee3
0000000100005ec9	movq	(%r12), %rsi
0000000100005ecd	testq	%rsi, %rsi
0000000100005ed0	je	0x100005ec0
0000000100005ed2	movq	-0x8(%r12), %rdi
0000000100005ed7	movl	$0x1, %edx
0000000100005edc	callq	___rust_dealloc
0000000100005ee1	jmp	0x100005ec0
0000000100005ee3	movq	0x8(%rbx), %rax
0000000100005ee7	testq	%rax, %rax
0000000100005eea	je	0x100005f01
0000000100005eec	shlq	$0x3, %rax
0000000100005ef0	leaq	(%rax,%rax,2), %rsi
0000000100005ef4	movl	$0x8, %edx
0000000100005ef9	movq	%r14, %rdi
0000000100005efc	callq	___rust_dealloc
0000000100005f01	movq	0x18(%rbx), %r14
0000000100005f05	movq	0x28(%rbx), %r15
0000000100005f09	testq	%r15, %r15
0000000100005f0c	je	0x100005f37
0000000100005f0e	leaq	0x8(%r14), %r12
0000000100005f12	nopw	%cs:(%rax,%rax)
0000000100005f1c	nopl	(%rax)
0000000100005f20	movq	-0x8(%r12), %rdi
0000000100005f25	movq	(%r12), %rsi
0000000100005f29	callq	0x1000427de                     ## symbol stub for: _munmap
0000000100005f2e	addq	$0x10, %r12
0000000100005f32	decq	%r15
0000000100005f35	jne	0x100005f20
0000000100005f37	movq	0x20(%rbx), %rsi
0000000100005f3b	testq	%rsi, %rsi
0000000100005f3e	je	0x100005f59
0000000100005f40	shlq	$0x4, %rsi
0000000100005f44	movl	$0x8, %edx
0000000100005f49	movq	%r14, %rdi
0000000100005f4c	popq	%rbx
0000000100005f4d	popq	%r12
0000000100005f4f	popq	%r14
0000000100005f51	popq	%r15
0000000100005f53	popq	%rbp
0000000100005f54	jmp	___rust_dealloc
0000000100005f59	popq	%rbx
0000000100005f5a	popq	%r12
0000000100005f5c	popq	%r14
0000000100005f5e	popq	%r15
0000000100005f60	popq	%rbp
0000000100005f61	retq
0000000100005f62	nopw	%cs:(%rax,%rax)
0000000100005f6c	nopl	(%rax)
__ZN4core3ptr70drop_in_place$LT$std..panicking..begin_panic_handler..PanicPayload$GT$17h3825b29a191eb780E:
0000000100005f70	pushq	%rbp
0000000100005f71	movq	%rsp, %rbp
0000000100005f74	movq	%rdi, %rax
0000000100005f77	movq	0x8(%rdi), %rdi
0000000100005f7b	testq	%rdi, %rdi
0000000100005f7e	je	0x100005f94
0000000100005f80	movq	0x10(%rax), %rsi
0000000100005f84	testq	%rsi, %rsi
0000000100005f87	je	0x100005f94
0000000100005f89	movl	$0x1, %edx
0000000100005f8e	popq	%rbp
0000000100005f8f	jmp	___rust_dealloc
0000000100005f94	popq	%rbp
0000000100005f95	retq
0000000100005f96	nopw	%cs:(%rax,%rax)
__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE:
0000000100005fa0	pushq	%rbp
0000000100005fa1	movq	%rsp, %rbp
0000000100005fa4	pushq	%r15
0000000100005fa6	pushq	%r14
0000000100005fa8	pushq	%r13
0000000100005faa	pushq	%r12
0000000100005fac	pushq	%rbx
0000000100005fad	pushq	%rax
0000000100005fae	movq	%rdi, %r14
0000000100005fb1	movq	0x18(%rdi), %rax
0000000100005fb5	testq	%rax, %rax
0000000100005fb8	je	0x100005fd0
0000000100005fba	movq	0x10(%r14), %rdi
0000000100005fbe	shlq	$0x3, %rax
0000000100005fc2	leaq	(%rax,%rax,2), %rsi
0000000100005fc6	movl	$0x8, %edx
0000000100005fcb	callq	___rust_dealloc
0000000100005fd0	movq	0x48(%r14), %rdi
0000000100005fd4	testq	%rdi, %rdi
0000000100005fd7	je	0x10000600f
0000000100005fd9	movq	0x50(%r14), %rax
0000000100005fdd	testq	%rax, %rax
0000000100005fe0	je	0x100005ff4
0000000100005fe2	shlq	$0x3, %rax
0000000100005fe6	leaq	(%rax,%rax,4), %rsi
0000000100005fea	movl	$0x8, %edx
0000000100005fef	callq	___rust_dealloc
0000000100005ff4	movq	0x68(%r14), %rsi
0000000100005ff8	testq	%rsi, %rsi
0000000100005ffb	je	0x10000600f
0000000100005ffd	movq	0x60(%r14), %rdi
0000000100006001	shlq	$0x4, %rsi
0000000100006005	movl	$0x8, %edx
000000010000600a	callq	___rust_dealloc
000000010000600f	movq	0x30(%r14), %rbx
0000000100006013	testq	%rbx, %rbx
0000000100006016	je	0x100006073
0000000100006018	movq	0x28(%r14), %r14
000000010000601c	leaq	0x248(%r14), %r15
0000000100006023	movq	%rbx, %r13
0000000100006026	jmp	0x10000603c
0000000100006028	nopl	(%rax,%rax)
0000000100006030	addq	$0x248, %r15                    ## imm = 0x248
0000000100006037	decq	%r13
000000010000603a	je	0x100006051
000000010000603c	cmpb	$0x1, -0x8(%r15)
0000000100006041	ja	0x100006030
0000000100006043	leaq	-0x248(%r15), %rdi
000000010000604a	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010000604f	jmp	0x100006030
0000000100006051	imulq	$0x248, %rbx, %rsi              ## imm = 0x248
0000000100006058	movl	$0x8, %edx
000000010000605d	movq	%r14, %rdi
0000000100006060	addq	$0x8, %rsp
0000000100006064	popq	%rbx
0000000100006065	popq	%r12
0000000100006067	popq	%r13
0000000100006069	popq	%r14
000000010000606b	popq	%r15
000000010000606d	popq	%rbp
000000010000606e	jmp	___rust_dealloc
0000000100006073	addq	$0x8, %rsp
0000000100006077	popq	%rbx
0000000100006078	popq	%r12
000000010000607a	popq	%r13
000000010000607c	popq	%r14
000000010000607e	popq	%r15
0000000100006080	popq	%rbp
0000000100006081	retq
0000000100006082	movq	%rax, -0x30(%rbp)
0000000100006086	nopw	%cs:(%rax,%rax)
0000000100006090	decq	%r13
0000000100006093	je	0x1000060a9
0000000100006095	leaq	0x248(%r15), %r12
000000010000609c	movq	%r15, %rdi
000000010000609f	callq	__ZN4core3ptr121drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$17h84583e8e7bfe39d1E ## core::ptr::drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$::h84583e8e7bfe39d1
00000001000060a4	movq	%r12, %r15
00000001000060a7	jmp	0x100006090
00000001000060a9	movq	%r14, %rdi
00000001000060ac	movq	%rbx, %rsi
00000001000060af	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h953d96a85387b32fE ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h953d96a85387b32f
00000001000060b4	movq	-0x30(%rbp), %rdi
00000001000060b8	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000060bd	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000060c2	nopw	%cs:(%rax,%rax)
00000001000060cc	nopl	(%rax)
__ZN4core3ptr71drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$$LP$$RP$$GT$$GT$17h7e7d248397c4241aE:
00000001000060d0	pushq	%rbp
00000001000060d1	movq	%rsp, %rbp
00000001000060d4	movq	0x8(%rdi), %rax
00000001000060d8	movq	(%rax), %rdi
00000001000060db	testq	%rdi, %rdi
00000001000060de	je	0x1000060ee
00000001000060e0	lock
00000001000060e1	decq	0xc8(%rdi)
00000001000060e8	popq	%rbp
00000001000060e9	jmp	0x10004283e                     ## symbol stub for: _pthread_rwlock_unlock
00000001000060ee	movq	%rax, %rdi
00000001000060f1	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h90e0eaa82f4e03f2E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h90e0eaa82f4e03f2
00000001000060f6	movq	%rax, %rdi
00000001000060f9	lock
00000001000060fa	decq	0xc8(%rdi)
0000000100006101	popq	%rbp
0000000100006102	jmp	0x10004283e                     ## symbol stub for: _pthread_rwlock_unlock
0000000100006107	nopw	(%rax,%rax)
__ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17hc65cbfd2057fc601E:
0000000100006110	pushq	%rbp
0000000100006111	movq	%rsp, %rbp
0000000100006114	popq	%rbp
0000000100006115	jmp	__ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf6ce6a0ffec90dfaE ## _$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$::drop::hf6ce6a0ffec90dfa
000000010000611a	nopw	(%rax,%rax)
__ZN4core3ptr72drop_in_place$LT$alloc..vec..Vec$LT$object..read..ObjectMapEntry$GT$$GT$17ha9074bed35ef5743E:
0000000100006120	pushq	%rbp
0000000100006121	movq	%rsp, %rbp
0000000100006124	testq	%rsi, %rsi
0000000100006127	je	0x10000613c
0000000100006129	shlq	$0x3, %rsi
000000010000612d	leaq	(%rsi,%rsi,4), %rsi
0000000100006131	movl	$0x8, %edx
0000000100006136	popq	%rbp
0000000100006137	jmp	___rust_dealloc
000000010000613c	popq	%rbp
000000010000613d	retq
000000010000613e	nop
__ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$object..read..ObjectMap$GT$$GT$17h3d0ca9f8ef03d1a6E:
0000000100006140	pushq	%rbp
0000000100006141	movq	%rsp, %rbp
0000000100006144	pushq	%rbx
0000000100006145	pushq	%rax
0000000100006146	movq	%rdi, %rbx
0000000100006149	movq	(%rdi), %rdi
000000010000614c	testq	%rdi, %rdi
000000010000614f	je	0x10000618d
0000000100006151	movq	0x8(%rbx), %rax
0000000100006155	testq	%rax, %rax
0000000100006158	je	0x10000616c
000000010000615a	shlq	$0x3, %rax
000000010000615e	leaq	(%rax,%rax,4), %rsi
0000000100006162	movl	$0x8, %edx
0000000100006167	callq	___rust_dealloc
000000010000616c	movq	0x20(%rbx), %rsi
0000000100006170	testq	%rsi, %rsi
0000000100006173	je	0x10000618d
0000000100006175	movq	0x18(%rbx), %rdi
0000000100006179	shlq	$0x4, %rsi
000000010000617d	movl	$0x8, %edx
0000000100006182	addq	$0x8, %rsp
0000000100006186	popq	%rbx
0000000100006187	popq	%rbp
0000000100006188	jmp	___rust_dealloc
000000010000618d	addq	$0x8, %rsp
0000000100006191	popq	%rbx
0000000100006192	popq	%rbp
0000000100006193	retq
0000000100006194	nopw	%cs:(%rax,%rax)
000000010000619e	nop
__ZN4core3ptr73drop_in_place$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$GT$17hb8f9a1966da7b753E:
00000001000061a0	pushq	%rbp
00000001000061a1	movq	%rsp, %rbp
00000001000061a4	popq	%rbp
00000001000061a5	jmp	0x100042802                     ## symbol stub for: _pthread_mutex_destroy
00000001000061aa	nopw	(%rax,%rax)
__ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h98e97f0838c8df4cE:
00000001000061b0	pushq	%rbp
00000001000061b1	movq	%rsp, %rbp
00000001000061b4	movq	%rdi, %rax
00000001000061b7	movq	(%rdi), %rdi
00000001000061ba	testq	%rdi, %rdi
00000001000061bd	je	0x1000061d6
00000001000061bf	movb	$0x0, (%rdi)
00000001000061c2	movq	0x8(%rax), %rsi
00000001000061c6	testq	%rsi, %rsi
00000001000061c9	je	0x1000061d6
00000001000061cb	movl	$0x1, %edx
00000001000061d0	popq	%rbp
00000001000061d1	jmp	___rust_dealloc
00000001000061d6	popq	%rbp
00000001000061d7	retq
00000001000061d8	nopl	(%rax,%rax)
__ZN4core3ptr75drop_in_place$LT$std..sys..unix..locks..pthread_mutex..PthreadMutexAttr$GT$17h81eb9abf5a270324E:
00000001000061e0	pushq	%rbp
00000001000061e1	movq	%rsp, %rbp
00000001000061e4	popq	%rbp
00000001000061e5	jmp	0x100042820                     ## symbol stub for: _pthread_mutexattr_destroy
00000001000061ea	nopw	(%rax,%rax)
__ZN4core3ptr75drop_in_place$LT$std..sys..unix..locks..pthread_rwlock..AllocatedRwLock$GT$17h61b3f77fa84dc5cbE:
00000001000061f0	pushq	%rbp
00000001000061f1	movq	%rsp, %rbp
00000001000061f4	popq	%rbp
00000001000061f5	jmp	0x100042832                     ## symbol stub for: _pthread_rwlock_destroy
00000001000061fa	nopw	(%rax,%rax)
__ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..UnitRange$u5d$$GT$$GT$17he409253e0c3f65c4E:
0000000100006200	pushq	%rbp
0000000100006201	movq	%rsp, %rbp
0000000100006204	testq	%rsi, %rsi
0000000100006207	je	0x100006218
0000000100006209	shlq	$0x5, %rsi
000000010000620d	movl	$0x8, %edx
0000000100006212	popq	%rbp
0000000100006213	jmp	___rust_dealloc
0000000100006218	popq	%rbp
0000000100006219	retq
000000010000621a	nopw	(%rax,%rax)
__ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$$u5b$alloc..string..String$u5d$$GT$$GT$17h3867f5b1c43d19faE:
0000000100006220	testq	%rsi, %rsi
0000000100006223	je	0x10000627e
0000000100006225	pushq	%rbp
0000000100006226	movq	%rsp, %rbp
0000000100006229	pushq	%r15
000000010000622b	pushq	%r14
000000010000622d	pushq	%r12
000000010000622f	pushq	%rbx
0000000100006230	movq	%rsi, %r14
0000000100006233	movq	%rdi, %rbx
0000000100006236	leaq	0x8(%rdi), %r15
000000010000623a	movq	%rsi, %r12
000000010000623d	jmp	0x100006249
000000010000623f	nop
0000000100006240	addq	$0x18, %r15
0000000100006244	decq	%r12
0000000100006247	je	0x100006261
0000000100006249	movq	(%r15), %rsi
000000010000624c	testq	%rsi, %rsi
000000010000624f	je	0x100006240
0000000100006251	movq	-0x8(%r15), %rdi
0000000100006255	movl	$0x1, %edx
000000010000625a	callq	___rust_dealloc
000000010000625f	jmp	0x100006240
0000000100006261	shlq	$0x3, %r14
0000000100006265	leaq	(%r14,%r14,2), %rsi
0000000100006269	movl	$0x8, %edx
000000010000626e	movq	%rbx, %rdi
0000000100006271	popq	%rbx
0000000100006272	popq	%r12
0000000100006274	popq	%r14
0000000100006276	popq	%r15
0000000100006278	popq	%rbp
0000000100006279	jmp	___rust_dealloc
000000010000627e	retq
000000010000627f	nop
__ZN4core3ptr78drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$17h7ee9bd556cd3de62E:
0000000100006280	pushq	%rbp
0000000100006281	movq	%rsp, %rbp
0000000100006284	testq	%rsi, %rsi
0000000100006287	je	0x100006298
0000000100006289	shlq	$0x2, %rsi
000000010000628d	movl	$0x2, %edx
0000000100006292	popq	%rbp
0000000100006293	jmp	___rust_dealloc
0000000100006298	popq	%rbp
0000000100006299	retq
000000010000629a	nopw	(%rax,%rax)
__ZN4core3ptr79drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..abbrev..Abbreviations$GT$$GT$17h6af3b0185b4ce8d8E:
00000001000062a0	pushq	%rbp
00000001000062a1	movq	%rsp, %rbp
00000001000062a4	lock
00000001000062a5	decq	(%rdi)
00000001000062a8	jne	0x1000062b0
00000001000062aa	popq	%rbp
00000001000062ab	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
00000001000062b0	popq	%rbp
00000001000062b1	retq
00000001000062b2	nopw	%cs:(%rax,%rax)
00000001000062bc	nopl	(%rax)
__ZN4core3ptr81drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$17h0551552d0710d049E:
00000001000062c0	pushq	%rbp
00000001000062c1	movq	%rsp, %rbp
00000001000062c4	addq	$0x8, %rdi
00000001000062c8	popq	%rbp
00000001000062c9	jmp	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
00000001000062ce	nop
__ZN4core3ptr81drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mpmc..context..Inner$GT$$GT$17h6099fd9cab272d1cE:
00000001000062d0	pushq	%rbp
00000001000062d1	movq	%rsp, %rbp
00000001000062d4	lock
00000001000062d5	decq	(%rdi)
00000001000062d8	jne	0x1000062e0
00000001000062da	popq	%rbp
00000001000062db	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
00000001000062e0	popq	%rbp
00000001000062e1	retq
00000001000062e2	nopw	%cs:(%rax,%rax)
00000001000062ec	nopl	(%rax)
__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E:
00000001000062f0	pushq	%rbp
00000001000062f1	movq	%rsp, %rbp
00000001000062f4	pushq	%r15
00000001000062f6	pushq	%r14
00000001000062f8	pushq	%r12
00000001000062fa	pushq	%rbx
00000001000062fb	testq	%rdi, %rdi
00000001000062fe	je	0x100006314
0000000100006300	movl	%edi, %eax
0000000100006302	andl	$0x3, %eax
0000000100006305	leaq	-0x2(%rax), %rcx
0000000100006309	cmpq	$0x2, %rcx
000000010000630d	jb	0x100006314
000000010000630f	testq	%rax, %rax
0000000100006312	jne	0x10000631d
0000000100006314	popq	%rbx
0000000100006315	popq	%r12
0000000100006317	popq	%r14
0000000100006319	popq	%r15
000000010000631b	popq	%rbp
000000010000631c	retq
000000010000631d	leaq	-0x1(%rdi), %rbx
0000000100006321	movq	-0x1(%rdi), %r14
0000000100006325	movq	0x7(%rdi), %r15
0000000100006329	movq	%r14, %rdi
000000010000632c	callq	*(%r15)
000000010000632f	movq	0x8(%r15), %rsi
0000000100006333	testq	%rsi, %rsi
0000000100006336	je	0x100006344
0000000100006338	movq	0x10(%r15), %rdx
000000010000633c	movq	%r14, %rdi
000000010000633f	callq	___rust_dealloc
0000000100006344	movl	$0x18, %esi
0000000100006349	movl	$0x8, %edx
000000010000634e	movq	%rbx, %rdi
0000000100006351	popq	%rbx
0000000100006352	popq	%r12
0000000100006354	popq	%r14
0000000100006356	popq	%r15
0000000100006358	popq	%rbp
0000000100006359	jmp	___rust_dealloc
000000010000635e	movq	%rax, %r12
0000000100006361	movq	%r14, %rdi
0000000100006364	movq	%r15, %rsi
0000000100006367	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010000636c	movq	%rbx, %rdi
000000010000636f	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100006374	movq	%r12, %rdi
0000000100006377	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000637c	nopl	(%rax)
__ZN4core3ptr82drop_in_place$LT$alloc..sync..ArcInner$LT$std..sys..unix..fs..InnerReadDir$GT$$GT$17hd9d04299696c77b2E:
0000000100006380	pushq	%rbp
0000000100006381	movq	%rsp, %rbp
0000000100006384	pushq	%r14
0000000100006386	pushq	%rbx
0000000100006387	movq	%rdi, %r14
000000010000638a	leaq	0x10(%rdi), %rbx
000000010000638e	addq	$0x28, %rdi
0000000100006392	callq	__ZN65_$LT$std..sys..unix..fs..Dir$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0d39f6eaa3518a61E ## _$LT$std..sys..unix..fs..Dir$u20$as$u20$core..ops..drop..Drop$GT$::drop::h0d39f6eaa3518a61
0000000100006397	movq	0x18(%r14), %rsi
000000010000639b	testq	%rsi, %rsi
000000010000639e	je	0x1000063b1
00000001000063a0	movq	(%rbx), %rdi
00000001000063a3	movl	$0x1, %edx
00000001000063a8	popq	%rbx
00000001000063a9	popq	%r14
00000001000063ab	popq	%rbp
00000001000063ac	jmp	___rust_dealloc
00000001000063b1	popq	%rbx
00000001000063b2	popq	%r14
00000001000063b4	popq	%rbp
00000001000063b5	retq
00000001000063b6	movq	%rax, %r14
00000001000063b9	movq	%rbx, %rdi
00000001000063bc	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
00000001000063c1	movq	%r14, %rdi
00000001000063c4	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000063c9	nopl	(%rax)
__ZN4core3ptr84drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..abbrev..Abbreviations$GT$$GT$17h82522fe520984983E:
00000001000063d0	pushq	%rbp
00000001000063d1	movq	%rsp, %rbp
00000001000063d4	pushq	%r15
00000001000063d6	pushq	%r14
00000001000063d8	pushq	%r12
00000001000063da	pushq	%rbx
00000001000063db	movq	%rdi, %rbx
00000001000063de	movq	0x10(%rdi), %r14
00000001000063e2	movq	0x20(%rdi), %r15
00000001000063e6	testq	%r15, %r15
00000001000063e9	je	0x10000642f
00000001000063eb	leaq	0x10(%r14), %r12
00000001000063ef	jmp	0x100006409
00000001000063f1	nopw	%cs:(%rax,%rax)
00000001000063fb	nopl	(%rax,%rax)
0000000100006400	addq	$0x70, %r12
0000000100006404	decq	%r15
0000000100006407	je	0x10000642f
0000000100006409	cmpq	$0x0, -0x10(%r12)
000000010000640f	je	0x100006400
0000000100006411	movq	(%r12), %rsi
0000000100006415	testq	%rsi, %rsi
0000000100006418	je	0x100006400
000000010000641a	movq	-0x8(%r12), %rdi
000000010000641f	shlq	$0x4, %rsi
0000000100006423	movl	$0x8, %edx
0000000100006428	callq	___rust_dealloc
000000010000642d	jmp	0x100006400
000000010000642f	movq	0x18(%rbx), %rax
0000000100006433	testq	%rax, %rax
0000000100006436	je	0x100006449
0000000100006438	imulq	$0x70, %rax, %rsi
000000010000643c	movl	$0x8, %edx
0000000100006441	movq	%r14, %rdi
0000000100006444	callq	___rust_dealloc
0000000100006449	addq	$0x28, %rbx
000000010000644d	movq	%rbx, %rdi
0000000100006450	popq	%rbx
0000000100006451	popq	%r12
0000000100006453	popq	%r14
0000000100006455	popq	%r15
0000000100006457	popq	%rbp
0000000100006458	jmp	__ZN4core3ptr108drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$17hbf8894e36be46d86E ## core::ptr::drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$::hbf8894e36be46d86
000000010000645d	nopl	(%rax)
__ZN4core3ptr84drop_in_place$LT$std..io..stdio..set_output_capture..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5262300040a0af7cE:
0000000100006460	testq	%rdi, %rdi
0000000100006463	je	0x100006475
0000000100006465	pushq	%rbp
0000000100006466	movq	%rsp, %rbp
0000000100006469	lock
000000010000646a	decq	(%rdi)
000000010000646d	popq	%rbp
000000010000646e	jne	0x100006475
0000000100006470	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
0000000100006475	retq
0000000100006476	nopw	%cs:(%rax,%rax)
__ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$17hdd078504879d0965E:
0000000100006480	pushq	%rbp
0000000100006481	movq	%rsp, %rbp
0000000100006484	pushq	%r15
0000000100006486	pushq	%r14
0000000100006488	pushq	%r13
000000010000648a	pushq	%r12
000000010000648c	pushq	%rbx
000000010000648d	pushq	%rax
000000010000648e	movq	(%rdi), %r14
0000000100006491	testq	%r14, %r14
0000000100006494	je	0x100006529
000000010000649a	movq	%rdi, %rbx
000000010000649d	movq	0x8(%rdi), %r15
00000001000064a1	testq	%r15, %r15
00000001000064a4	je	0x1000064e8
00000001000064a6	leaq	0x8(%r14), %r12
00000001000064aa	movq	%r15, %r13
00000001000064ad	jmp	0x1000064b9
00000001000064af	nop
00000001000064b0	addq	$0x18, %r12
00000001000064b4	decq	%r13
00000001000064b7	je	0x1000064d3
00000001000064b9	movq	(%r12), %rsi
00000001000064bd	testq	%rsi, %rsi
00000001000064c0	je	0x1000064b0
00000001000064c2	movq	-0x8(%r12), %rdi
00000001000064c7	movl	$0x1, %edx
00000001000064cc	callq	___rust_dealloc
00000001000064d1	jmp	0x1000064b0
00000001000064d3	shlq	$0x3, %r15
00000001000064d7	leaq	(%r15,%r15,2), %rsi
00000001000064db	movl	$0x8, %edx
00000001000064e0	movq	%r14, %rdi
00000001000064e3	callq	___rust_dealloc
00000001000064e8	movq	0x18(%rbx), %r14
00000001000064ec	testq	%r14, %r14
00000001000064ef	je	0x100006529
00000001000064f1	movq	0x10(%rbx), %rbx
00000001000064f5	leaq	0x8(%rbx), %r15
00000001000064f9	movq	%r14, %r12
00000001000064fc	jmp	0x100006509
00000001000064fe	nop
0000000100006500	addq	$0x20, %r15
0000000100006504	decq	%r12
0000000100006507	je	0x100006538
0000000100006509	movq	(%r15), %rax
000000010000650c	testq	%rax, %rax
000000010000650f	je	0x100006500
0000000100006511	movq	-0x8(%r15), %rdi
0000000100006515	shlq	$0x3, %rax
0000000100006519	leaq	(%rax,%rax,2), %rsi
000000010000651d	movl	$0x8, %edx
0000000100006522	callq	___rust_dealloc
0000000100006527	jmp	0x100006500
0000000100006529	addq	$0x8, %rsp
000000010000652d	popq	%rbx
000000010000652e	popq	%r12
0000000100006530	popq	%r13
0000000100006532	popq	%r14
0000000100006534	popq	%r15
0000000100006536	popq	%rbp
0000000100006537	retq
0000000100006538	shlq	$0x5, %r14
000000010000653c	movl	$0x8, %edx
0000000100006541	movq	%rbx, %rdi
0000000100006544	movq	%r14, %rsi
0000000100006547	addq	$0x8, %rsp
000000010000654b	popq	%rbx
000000010000654c	popq	%r12
000000010000654e	popq	%r13
0000000100006550	popq	%r14
0000000100006552	popq	%r15
0000000100006554	popq	%rbp
0000000100006555	jmp	___rust_dealloc
000000010000655a	nopw	(%rax,%rax)
__ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$std..backtrace_rs..symbolize..gimli..Library$GT$$GT$17h26fa6ebf89ebc43aE:
0000000100006560	pushq	%rbp
0000000100006561	movq	%rsp, %rbp
0000000100006564	pushq	%r15
0000000100006566	pushq	%r14
0000000100006568	pushq	%r12
000000010000656a	pushq	%rbx
000000010000656b	movq	%rdi, %r14
000000010000656e	movq	(%rdi), %rbx
0000000100006571	movq	0x10(%rdi), %r15
0000000100006575	testq	%r15, %r15
0000000100006578	je	0x1000065c0
000000010000657a	leaq	0x20(%rbx), %r12
000000010000657e	jmp	0x100006589
0000000100006580	addq	$0x38, %r12
0000000100006584	decq	%r15
0000000100006587	je	0x1000065c0
0000000100006589	movq	-0x18(%r12), %rsi
000000010000658e	testq	%rsi, %rsi
0000000100006591	je	0x1000065a2
0000000100006593	movq	-0x20(%r12), %rdi
0000000100006598	movl	$0x1, %edx
000000010000659d	callq	___rust_dealloc
00000001000065a2	movq	(%r12), %rsi
00000001000065a6	testq	%rsi, %rsi
00000001000065a9	je	0x100006580
00000001000065ab	movq	-0x8(%r12), %rdi
00000001000065b0	shlq	$0x4, %rsi
00000001000065b4	movl	$0x8, %edx
00000001000065b9	callq	___rust_dealloc
00000001000065be	jmp	0x100006580
00000001000065c0	movq	0x8(%r14), %rax
00000001000065c4	testq	%rax, %rax
00000001000065c7	je	0x1000065e2
00000001000065c9	imulq	$0x38, %rax, %rsi
00000001000065cd	movl	$0x8, %edx
00000001000065d2	movq	%rbx, %rdi
00000001000065d5	popq	%rbx
00000001000065d6	popq	%r12
00000001000065d8	popq	%r14
00000001000065da	popq	%r15
00000001000065dc	popq	%rbp
00000001000065dd	jmp	___rust_dealloc
00000001000065e2	popq	%rbx
00000001000065e3	popq	%r12
00000001000065e5	popq	%r14
00000001000065e7	popq	%r15
00000001000065e9	popq	%rbp
00000001000065ea	retq
00000001000065eb	nopl	(%rax,%rax)
__ZN4core3ptr88drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h34ebf8100cc30064E:
00000001000065f0	pushq	%rbp
00000001000065f1	movq	%rsp, %rbp
00000001000065f4	pushq	%r15
00000001000065f6	pushq	%r14
00000001000065f8	pushq	%r12
00000001000065fa	pushq	%rbx
00000001000065fb	movq	0x8(%rdi), %rax
00000001000065ff	testq	%rax, %rax
0000000100006602	je	0x100006618
0000000100006604	movl	%eax, %ecx
0000000100006606	andl	$0x3, %ecx
0000000100006609	leaq	-0x2(%rcx), %rdx
000000010000660d	cmpq	$0x2, %rdx
0000000100006611	jb	0x100006618
0000000100006613	testq	%rcx, %rcx
0000000100006616	jne	0x100006621
0000000100006618	popq	%rbx
0000000100006619	popq	%r12
000000010000661b	popq	%r14
000000010000661d	popq	%r15
000000010000661f	popq	%rbp
0000000100006620	retq
0000000100006621	leaq	-0x1(%rax), %rbx
0000000100006625	movq	-0x1(%rax), %r14
0000000100006629	movq	0x7(%rax), %r15
000000010000662d	movq	%r14, %rdi
0000000100006630	callq	*(%r15)
0000000100006633	movq	0x8(%r15), %rsi
0000000100006637	testq	%rsi, %rsi
000000010000663a	je	0x100006648
000000010000663c	movq	0x10(%r15), %rdx
0000000100006640	movq	%r14, %rdi
0000000100006643	callq	___rust_dealloc
0000000100006648	movl	$0x18, %esi
000000010000664d	movl	$0x8, %edx
0000000100006652	movq	%rbx, %rdi
0000000100006655	popq	%rbx
0000000100006656	popq	%r12
0000000100006658	popq	%r14
000000010000665a	popq	%r15
000000010000665c	popq	%rbp
000000010000665d	jmp	___rust_dealloc
0000000100006662	movq	%rax, %r12
0000000100006665	movq	%r14, %rdi
0000000100006668	movq	%r15, %rsi
000000010000666b	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100006670	movq	%rbx, %rdi
0000000100006673	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100006678	movq	%r12, %rdi
000000010000667b	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
__ZN4core3ptr88drop_in_place$LT$std..sys_common..backtrace.._print_fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$17hf85a53bdd826fa87E:
0000000100006680	pushq	%rbp
0000000100006681	movq	%rsp, %rbp
0000000100006684	movq	%rdi, %rax
0000000100006687	movq	(%rdi), %rdi
000000010000668a	testq	%rdi, %rdi
000000010000668d	je	0x1000066a3
000000010000668f	movq	0x8(%rax), %rsi
0000000100006693	testq	%rsi, %rsi
0000000100006696	je	0x1000066a3
0000000100006698	movl	$0x1, %edx
000000010000669d	popq	%rbp
000000010000669e	jmp	___rust_dealloc
00000001000066a3	popq	%rbp
00000001000066a4	retq
00000001000066a5	nopw	%cs:(%rax,%rax)
00000001000066af	nop
__ZN4core3ptr89drop_in_place$LT$core..slice..sort..InsertionHole$LT$object..read..ObjectMapEntry$GT$$GT$17h8a590e2526e0c478E:
00000001000066b0	pushq	%rbp
00000001000066b1	movq	%rsp, %rbp
00000001000066b4	movq	0x20(%rdi), %rax
00000001000066b8	movq	%rax, 0x20(%rsi)
00000001000066bc	movq	0x18(%rdi), %rax
00000001000066c0	movq	%rax, 0x18(%rsi)
00000001000066c4	movq	0x10(%rdi), %rax
00000001000066c8	movq	%rax, 0x10(%rsi)
00000001000066cc	movq	(%rdi), %rax
00000001000066cf	movq	0x8(%rdi), %rcx
00000001000066d3	movq	%rcx, 0x8(%rsi)
00000001000066d7	movq	%rax, (%rsi)
00000001000066da	popq	%rbp
00000001000066db	retq
00000001000066dc	nopl	(%rax)
__ZN4core3ptr90drop_in_place$LT$std..io..buffered..bufwriter..BufWriter$LT$W$GT$..flush_buf..BufGuard$GT$17h483e5f5a6c6e2d95E:
00000001000066e0	pushq	%rbp
00000001000066e1	movq	%rsp, %rbp
00000001000066e4	pushq	%r14
00000001000066e6	pushq	%rbx
00000001000066e7	testq	%rsi, %rsi
00000001000066ea	je	0x100006717
00000001000066ec	movq	%rdi, %rbx
00000001000066ef	movq	0x10(%rdi), %rax
00000001000066f3	movq	%rax, %r14
00000001000066f6	subq	%rsi, %r14
00000001000066f9	jb	0x10000671c
00000001000066fb	movq	$0x0, 0x10(%rbx)
0000000100006703	je	0x100006717
0000000100006705	movq	(%rbx), %rdi
0000000100006708	addq	%rdi, %rsi
000000010000670b	movq	%r14, %rdx
000000010000670e	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100006713	movq	%r14, 0x10(%rbx)
0000000100006717	popq	%rbx
0000000100006718	popq	%r14
000000010000671a	popq	%rbp
000000010000671b	retq
000000010000671c	leaq	0x41f95(%rip), %rdx
0000000100006723	movq	%rsi, %rdi
0000000100006726	movq	%rax, %rsi
0000000100006729	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010000672e	nop
__ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$std..path..PathBuf$C$std..io..error..Error$GT$$GT$17hd6d246a6125c6f66E:
0000000100006730	pushq	%rbp
0000000100006731	movq	%rsp, %rbp
0000000100006734	pushq	%r15
0000000100006736	pushq	%r14
0000000100006738	pushq	%r12
000000010000673a	pushq	%rbx
000000010000673b	movq	%rdi, %rax
000000010000673e	movq	(%rdi), %rdi
0000000100006741	testq	%rdi, %rdi
0000000100006744	je	0x100006761
0000000100006746	movq	0x8(%rax), %rsi
000000010000674a	testq	%rsi, %rsi
000000010000674d	je	0x100006779
000000010000674f	movl	$0x1, %edx
0000000100006754	popq	%rbx
0000000100006755	popq	%r12
0000000100006757	popq	%r14
0000000100006759	popq	%r15
000000010000675b	popq	%rbp
000000010000675c	jmp	___rust_dealloc
0000000100006761	movq	0x8(%rax), %rax
0000000100006765	movl	%eax, %ecx
0000000100006767	andl	$0x3, %ecx
000000010000676a	leaq	-0x2(%rcx), %rdx
000000010000676e	cmpq	$0x2, %rdx
0000000100006772	jb	0x100006779
0000000100006774	testq	%rcx, %rcx
0000000100006777	jne	0x100006782
0000000100006779	popq	%rbx
000000010000677a	popq	%r12
000000010000677c	popq	%r14
000000010000677e	popq	%r15
0000000100006780	popq	%rbp
0000000100006781	retq
0000000100006782	leaq	-0x1(%rax), %rbx
0000000100006786	movq	-0x1(%rax), %r14
000000010000678a	movq	0x7(%rax), %r15
000000010000678e	movq	%r14, %rdi
0000000100006791	callq	*(%r15)
0000000100006794	movq	0x8(%r15), %rsi
0000000100006798	testq	%rsi, %rsi
000000010000679b	je	0x1000067a9
000000010000679d	movq	0x10(%r15), %rdx
00000001000067a1	movq	%r14, %rdi
00000001000067a4	callq	___rust_dealloc
00000001000067a9	movl	$0x18, %esi
00000001000067ae	movl	$0x8, %edx
00000001000067b3	movq	%rbx, %rdi
00000001000067b6	jmp	0x100006754
00000001000067b8	movq	%rax, %r12
00000001000067bb	movq	%r14, %rdi
00000001000067be	movq	%r15, %rsi
00000001000067c1	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
00000001000067c6	movq	%rbx, %rdi
00000001000067c9	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
00000001000067ce	movq	%r12, %rdi
00000001000067d1	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000067d6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr91drop_in_place$LT$core..slice..sort..InsertionHole$LT$$LP$$RF$$u5b$u8$u5d$$C$u64$RP$$GT$$GT$17h3c738500cfccff0fE:
00000001000067e0	pushq	%rbp
00000001000067e1	movq	%rsp, %rbp
00000001000067e4	movq	0x10(%rdi), %rax
00000001000067e8	movq	%rax, 0x10(%rsi)
00000001000067ec	movq	(%rdi), %rax
00000001000067ef	movq	0x8(%rdi), %rcx
00000001000067f3	movq	%rcx, 0x8(%rsi)
00000001000067f7	movq	%rax, (%rsi)
00000001000067fa	popq	%rbp
00000001000067fb	retq
00000001000067fc	nopl	(%rax)
__ZN4core3ptr95drop_in_place$LT$core..option..IntoIter$LT$std..backtrace_rs..symbolize..gimli..Library$GT$$GT$17h922bea2e76874aaeE:
0000000100006800	pushq	%rbp
0000000100006801	movq	%rsp, %rbp
0000000100006804	pushq	%rbx
0000000100006805	pushq	%rax
0000000100006806	movq	%rdi, %rbx
0000000100006809	movq	(%rdi), %rdi
000000010000680c	testq	%rdi, %rdi
000000010000680f	je	0x100006845
0000000100006811	movq	0x8(%rbx), %rsi
0000000100006815	testq	%rsi, %rsi
0000000100006818	je	0x100006824
000000010000681a	movl	$0x1, %edx
000000010000681f	callq	___rust_dealloc
0000000100006824	movq	0x20(%rbx), %rsi
0000000100006828	testq	%rsi, %rsi
000000010000682b	je	0x100006845
000000010000682d	movq	0x18(%rbx), %rdi
0000000100006831	shlq	$0x4, %rsi
0000000100006835	movl	$0x8, %edx
000000010000683a	addq	$0x8, %rsp
000000010000683e	popq	%rbx
000000010000683f	popq	%rbp
0000000100006840	jmp	___rust_dealloc
0000000100006845	addq	$0x8, %rsp
0000000100006849	popq	%rbx
000000010000684a	popq	%rbp
000000010000684b	retq
000000010000684c	nopl	(%rax)
__ZN4core3ptr95drop_in_place$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$17hca91fb376b2cfe6cE:
0000000100006850	pushq	%rbp
0000000100006851	movq	%rsp, %rbp
0000000100006854	pushq	%r15
0000000100006856	pushq	%r14
0000000100006858	pushq	%r13
000000010000685a	pushq	%r12
000000010000685c	pushq	%rbx
000000010000685d	pushq	%rax
000000010000685e	movq	%rdi, %rbx
0000000100006861	cmpb	$0x0, 0x18(%rdi)
0000000100006865	je	0x10000688b
0000000100006867	movq	0x8(%rbx), %rsi
000000010000686b	testq	%rsi, %rsi
000000010000686e	je	0x1000068ed
0000000100006870	movq	(%rbx), %rdi
0000000100006873	movl	$0x1, %edx
0000000100006878	addq	$0x8, %rsp
000000010000687c	popq	%rbx
000000010000687d	popq	%r12
000000010000687f	popq	%r13
0000000100006881	popq	%r14
0000000100006883	popq	%r15
0000000100006885	popq	%rbp
0000000100006886	jmp	___rust_dealloc
000000010000688b	movq	%rbx, %rdi
000000010000688e	callq	__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$9flush_buf17h427c3bc684e5dfc1E ## std::io::buffered::bufwriter::BufWriter$LT$W$GT$::flush_buf::h427c3bc684e5dfc1
0000000100006893	testq	%rax, %rax
0000000100006896	je	0x100006867
0000000100006898	movl	%eax, %ecx
000000010000689a	andl	$0x3, %ecx
000000010000689d	leaq	-0x2(%rcx), %rdx
00000001000068a1	cmpq	$0x2, %rdx
00000001000068a5	jb	0x100006867
00000001000068a7	testq	%rcx, %rcx
00000001000068aa	je	0x100006867
00000001000068ac	movq	%rax, %r14
00000001000068af	decq	%r14
00000001000068b2	movq	-0x1(%rax), %r12
00000001000068b6	movq	0x7(%rax), %r13
00000001000068ba	movq	%r12, %rdi
00000001000068bd	callq	*(%r13)
00000001000068c1	movq	0x8(%r13), %rsi
00000001000068c5	testq	%rsi, %rsi
00000001000068c8	je	0x1000068d6
00000001000068ca	movq	0x10(%r13), %rdx
00000001000068ce	movq	%r12, %rdi
00000001000068d1	callq	___rust_dealloc
00000001000068d6	movl	$0x18, %esi
00000001000068db	movl	$0x8, %edx
00000001000068e0	movq	%r14, %rdi
00000001000068e3	callq	___rust_dealloc
00000001000068e8	jmp	0x100006867
00000001000068ed	addq	$0x8, %rsp
00000001000068f1	popq	%rbx
00000001000068f2	popq	%r12
00000001000068f4	popq	%r13
00000001000068f6	popq	%r14
00000001000068f8	popq	%r15
00000001000068fa	popq	%rbp
00000001000068fb	retq
00000001000068fc	movq	%rax, %r15
00000001000068ff	movq	%r12, %rdi
0000000100006902	movq	%r13, %rsi
0000000100006905	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010000690a	movq	%r14, %rdi
000000010000690d	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100006912	jmp	0x100006917
0000000100006914	movq	%rax, %r15
0000000100006917	movq	%rbx, %rdi
000000010000691a	callq	__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9ac2a42193cc6e4aE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$::h9ac2a42193cc6e4a
000000010000691f	movq	%r15, %rdi
0000000100006922	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100006927	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010000692c	nopl	(%rax)
__ZN4core3ptr98drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$GT$$GT$17h6ad273f69b8efddcE:
0000000100006930	pushq	%rbp
0000000100006931	movq	%rsp, %rbp
0000000100006934	pushq	%rbx
0000000100006935	pushq	%rax
0000000100006936	movq	%rdi, %rbx
0000000100006939	callq	0x100042802                     ## symbol stub for: _pthread_mutex_destroy
000000010000693e	movl	$0x40, %esi
0000000100006943	movl	$0x8, %edx
0000000100006948	movq	%rbx, %rdi
000000010000694b	addq	$0x8, %rsp
000000010000694f	popq	%rbx
0000000100006950	popq	%rbp
0000000100006951	jmp	___rust_dealloc
0000000100006956	nopw	%cs:(%rax,%rax)
__ZN4core3str7pattern14TwoWaySearcher4next17hfa90786d61c92b5cE:
0000000100006960	pushq	%rbp
0000000100006961	movq	%rsp, %rbp
0000000100006964	pushq	%r15
0000000100006966	pushq	%r14
0000000100006968	pushq	%r13
000000010000696a	pushq	%r12
000000010000696c	pushq	%rbx
000000010000696d	subq	$0x38, %rsp
0000000100006971	movq	0x20(%rsi), %rax
0000000100006975	leaq	-0x1(%rax,%r9), %r10
000000010000697a	cmpq	%rcx, %r10
000000010000697d	jae	0x100006b88
0000000100006983	movzbl	0x10(%rbp), %r15d
0000000100006988	movq	0x18(%rsi), %rbx
000000010000698c	movq	(%rsi), %r11
000000010000698f	movq	0x10(%rsi), %r14
0000000100006993	movq	%r9, %r12
0000000100006996	movq	%r14, -0x60(%rbp)
000000010000699a	subq	%r14, %r12
000000010000699d	movq	%r12, -0x58(%rbp)
00000001000069a1	movq	0x30(%rsi), %r12
00000001000069a5	leaq	(%r9,%r9), %r14
00000001000069a9	movq	%r14, -0x50(%rbp)
00000001000069ad	leaq	-0x1(%r9), %r13
00000001000069b1	movl	$0x1, %r14d
00000001000069b7	movq	%r11, -0x40(%rbp)
00000001000069bb	subq	%r11, %r14
00000001000069be	movq	%r14, -0x48(%rbp)
00000001000069c2	movq	%rdi, -0x30(%rbp)
00000001000069c6	testb	%r15b, %r15b
00000001000069c9	je	0x100006a00
00000001000069cb	movq	%rax, %r11
00000001000069ce	nop
00000001000069d0	movzbl	(%rdx,%r10), %eax
00000001000069d5	btq	%rax, %rbx
00000001000069d9	jb	0x100006a20
00000001000069db	addq	%r9, %r11
00000001000069de	movq	%r11, 0x20(%rsi)
00000001000069e2	leaq	-0x1(%r9,%r11), %r10
00000001000069e7	leaq	(%r13,%r11), %rax
00000001000069ec	cmpq	%rcx, %rax
00000001000069ef	jb	0x1000069d0
00000001000069f1	jmp	0x100006b88
00000001000069f6	nopw	%cs:(%rax,%rax)
0000000100006a00	movzbl	(%rdx,%r10), %r10d
0000000100006a05	btq	%r10, %rbx
0000000100006a09	jae	0x100006a28
0000000100006a0b	movl	%r15d, %r14d
0000000100006a0e	movq	%r12, %r15
0000000100006a11	movq	%rax, %r11
0000000100006a14	jmp	0x100006a90
0000000100006a16	nopw	%cs:(%rax,%rax)
0000000100006a20	movl	%r15d, %r14d
0000000100006a23	xorl	%r15d, %r15d
0000000100006a26	jmp	0x100006a90
0000000100006a28	leaq	(%rax,%r9), %r11
0000000100006a2c	movq	%r11, 0x20(%rsi)
0000000100006a30	movq	$0x0, 0x30(%rsi)
0000000100006a38	leaq	-0x1(%r9,%r11), %r10
0000000100006a3d	cmpq	%rcx, %r10
0000000100006a40	jae	0x100006b88
0000000100006a46	addq	-0x50(%rbp), %rax
0000000100006a4a	nopw	(%rax,%rax)
0000000100006a50	movzbl	-0x1(%rdx,%rax), %r10d
0000000100006a56	btq	%r10, %rbx
0000000100006a5a	jb	0x100006a7d
0000000100006a5c	addq	%r9, %r11
0000000100006a5f	movq	%rax, 0x20(%rsi)
0000000100006a63	movq	$0x0, 0x30(%rsi)
0000000100006a6b	leaq	-0x1(%rax,%r9), %r10
0000000100006a70	addq	%r9, %rax
0000000100006a73	cmpq	%rcx, %r10
0000000100006a76	jb	0x100006a50
0000000100006a78	jmp	0x100006b88
0000000100006a7d	movl	%r15d, %r14d
0000000100006a80	xorl	%r15d, %r15d
0000000100006a83	xorl	%r12d, %r12d
0000000100006a86	nopw	%cs:(%rax,%rax)
0000000100006a90	movq	-0x40(%rbp), %rdi
0000000100006a94	cmpq	%r12, %rdi
0000000100006a97	movq	%r12, -0x38(%rbp)
0000000100006a9b	movq	%r12, %rax
0000000100006a9e	cmovaq	%rdi, %rax
0000000100006aa2	testb	%r14b, %r14b
0000000100006aa5	cmovneq	%rdi, %rax
0000000100006aa9	cmpq	%r9, %rax
0000000100006aac	jae	0x100006ae0
0000000100006aae	leaq	(%rdx,%r11), %r12
0000000100006ab2	movq	%rax, %r10
0000000100006ab5	nopw	%cs:(%rax,%rax)
0000000100006abf	nop
0000000100006ac0	leaq	(%r11,%r10), %rdi
0000000100006ac4	cmpq	%rcx, %rdi
0000000100006ac7	jae	0x100006beb
0000000100006acd	movzbl	(%r8,%r10), %edi
0000000100006ad2	cmpb	(%r12,%r10), %dil
0000000100006ad6	jne	0x100006b3e
0000000100006ad8	incq	%r10
0000000100006adb	cmpq	%r10, %r9
0000000100006ade	jne	0x100006ac0
0000000100006ae0	movq	-0x40(%rbp), %rax
0000000100006ae4	nopw	%cs:(%rax,%rax)
0000000100006aee	nop
0000000100006af0	cmpq	%rax, %r15
0000000100006af3	jae	0x100006b90
0000000100006af9	decq	%rax
0000000100006afc	cmpq	%r9, %rax
0000000100006aff	jae	0x100006bc7
0000000100006b05	leaq	(%rax,%r11), %r10
0000000100006b09	cmpq	%rcx, %r10
0000000100006b0c	jae	0x100006bd9
0000000100006b12	movzbl	(%r8,%rax), %r12d
0000000100006b17	cmpb	(%rdx,%r10), %r12b
0000000100006b1b	je	0x100006af0
0000000100006b1d	addq	-0x60(%rbp), %r11
0000000100006b21	movq	%r11, 0x20(%rsi)
0000000100006b25	movq	-0x58(%rbp), %r10
0000000100006b29	movq	%r11, %rax
0000000100006b2c	movl	%r14d, %r15d
0000000100006b2f	testb	%r14b, %r14b
0000000100006b32	movq	-0x30(%rbp), %rdi
0000000100006b36	movq	-0x38(%rbp), %r12
0000000100006b3a	jne	0x100006b5c
0000000100006b3c	jmp	0x100006b73
0000000100006b3e	addq	-0x48(%rbp), %r11
0000000100006b42	movq	%r11, %rax
0000000100006b45	addq	%r10, %rax
0000000100006b48	movq	%rax, 0x20(%rsi)
0000000100006b4c	movl	%r14d, %r15d
0000000100006b4f	testb	%r14b, %r14b
0000000100006b52	je	0x100006b6c
0000000100006b54	movq	-0x30(%rbp), %rdi
0000000100006b58	movq	-0x38(%rbp), %r12
0000000100006b5c	leaq	-0x1(%rax,%r9), %r10
0000000100006b61	cmpq	%rcx, %r10
0000000100006b64	jb	0x1000069c6
0000000100006b6a	jmp	0x100006b88
0000000100006b6c	xorl	%r10d, %r10d
0000000100006b6f	movq	-0x30(%rbp), %rdi
0000000100006b73	movq	%r10, 0x30(%rsi)
0000000100006b77	movq	%r10, %r12
0000000100006b7a	leaq	-0x1(%rax,%r9), %r10
0000000100006b7f	cmpq	%rcx, %r10
0000000100006b82	jb	0x1000069c6
0000000100006b88	movq	%rcx, 0x20(%rsi)
0000000100006b8c	xorl	%eax, %eax
0000000100006b8e	jmp	0x100006bb5
0000000100006b90	addq	%r11, %r9
0000000100006b93	movq	%r9, 0x20(%rsi)
0000000100006b97	testb	%r14b, %r14b
0000000100006b9a	jne	0x100006ba4
0000000100006b9c	movq	$0x0, 0x30(%rsi)
0000000100006ba4	movq	-0x30(%rbp), %rdi
0000000100006ba8	movq	%r11, 0x8(%rdi)
0000000100006bac	movq	%r9, 0x10(%rdi)
0000000100006bb0	movl	$0x1, %eax
0000000100006bb5	movq	%rax, (%rdi)
0000000100006bb8	addq	$0x38, %rsp
0000000100006bbc	popq	%rbx
0000000100006bbd	popq	%r12
0000000100006bbf	popq	%r13
0000000100006bc1	popq	%r14
0000000100006bc3	popq	%r15
0000000100006bc5	popq	%rbp
0000000100006bc6	retq
0000000100006bc7	leaq	0x417da(%rip), %rdx
0000000100006bce	movq	%rax, %rdi
0000000100006bd1	movq	%r9, %rsi
0000000100006bd4	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100006bd9	leaq	0x417e0(%rip), %rdx
0000000100006be0	movq	%r10, %rdi
0000000100006be3	movq	%rcx, %rsi
0000000100006be6	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100006beb	addq	%r11, %rax
0000000100006bee	cmpq	%rax, %rcx
0000000100006bf1	cmovaq	%rcx, %rax
0000000100006bf5	leaq	0x417dc(%rip), %rdx
0000000100006bfc	movq	%rax, %rdi
0000000100006bff	movq	%rcx, %rsi
0000000100006c02	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100006c07	nopw	(%rax,%rax)
__ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7566cefabaca64ceE:
0000000100006c10	pushq	%rbp
0000000100006c11	movq	%rsp, %rbp
0000000100006c14	pushq	%r15
0000000100006c16	pushq	%r14
0000000100006c18	pushq	%r13
0000000100006c1a	pushq	%r12
0000000100006c1c	pushq	%rbx
0000000100006c1d	subq	$0x48, %rsp
0000000100006c21	movq	%rcx, -0x68(%rbp)
0000000100006c25	movq	%rdi, %r14
0000000100006c28	movq	0x8(%rdi), %r15
0000000100006c2c	movq	%rdx, -0x40(%rbp)
0000000100006c30	movq	(%rdx), %rax
0000000100006c33	movq	%rax, -0x30(%rbp)
0000000100006c37	leaq	(%rax,%rax,2), %rax
0000000100006c3b	movq	%rsi, -0x48(%rbp)
0000000100006c3f	movq	(%rsi), %rcx
0000000100006c42	movq	%rcx, -0x38(%rbp)
0000000100006c46	leaq	(%rcx,%rcx,2), %r12
0000000100006c4a	movq	(%r15,%rax,8), %rdi
0000000100006c4e	movq	0x8(%r15,%rax,8), %r13
0000000100006c53	movq	(%r15,%r12,8), %rsi
0000000100006c57	movq	0x8(%r15,%r12,8), %rdx
0000000100006c5c	movq	%r13, %rbx
0000000100006c5f	subq	%rdx, %rbx
0000000100006c62	cmovbq	%r13, %rdx
0000000100006c66	movq	%rdi, -0x50(%rbp)
0000000100006c6a	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100006c6f	cltq
0000000100006c71	testl	%eax, %eax
0000000100006c73	cmovneq	%rax, %rbx
0000000100006c77	testq	%rbx, %rbx
0000000100006c7a	movq	%r14, -0x58(%rbp)
0000000100006c7e	js	0x100006c96
0000000100006c80	movq	-0x38(%rbp), %rax
0000000100006c84	movq	%rax, -0x60(%rbp)
0000000100006c88	movq	-0x30(%rbp), %rax
0000000100006c8c	movq	%rax, -0x38(%rbp)
0000000100006c90	movq	-0x50(%rbp), %rsi
0000000100006c94	jmp	0x100006cc4
0000000100006c96	movq	-0x30(%rbp), %rcx
0000000100006c9a	movq	-0x48(%rbp), %rax
0000000100006c9e	movq	%rcx, (%rax)
0000000100006ca1	movq	-0x40(%rbp), %rax
0000000100006ca5	movq	-0x38(%rbp), %rdx
0000000100006ca9	movq	%rdx, (%rax)
0000000100006cac	movq	0x18(%r14), %rax
0000000100006cb0	incq	(%rax)
0000000100006cb3	movq	0x8(%r14), %r15
0000000100006cb7	movq	(%r15,%r12,8), %rsi
0000000100006cbb	movq	0x8(%r15,%r12,8), %r13
0000000100006cc0	movq	%rcx, -0x60(%rbp)
0000000100006cc4	movq	-0x68(%rbp), %rax
0000000100006cc8	movq	(%rax), %r14
0000000100006ccb	leaq	(%r14,%r14,2), %r12
0000000100006ccf	movq	(%r15,%r12,8), %rdi
0000000100006cd3	movq	0x8(%r15,%r12,8), %rdx
0000000100006cd8	movq	%rdx, %rbx
0000000100006cdb	subq	%r13, %rbx
0000000100006cde	cmovaeq	%r13, %rdx
0000000100006ce2	movq	%rsi, -0x50(%rbp)
0000000100006ce6	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100006ceb	cltq
0000000100006ced	testl	%eax, %eax
0000000100006cef	cmovneq	%rax, %rbx
0000000100006cf3	testq	%rbx, %rbx
0000000100006cf6	js	0x100006d0a
0000000100006cf8	movq	-0x38(%rbp), %rax
0000000100006cfc	movq	%rax, -0x30(%rbp)
0000000100006d00	movq	-0x48(%rbp), %r12
0000000100006d04	movq	-0x50(%rbp), %rdi
0000000100006d08	jmp	0x100006d3c
0000000100006d0a	movq	-0x40(%rbp), %rax
0000000100006d0e	movq	%r14, -0x30(%rbp)
0000000100006d12	movq	%r14, (%rax)
0000000100006d15	movq	-0x38(%rbp), %rax
0000000100006d19	movq	-0x68(%rbp), %rcx
0000000100006d1d	movq	%rax, (%rcx)
0000000100006d20	movq	-0x58(%rbp), %rcx
0000000100006d24	movq	0x18(%rcx), %rax
0000000100006d28	incq	(%rax)
0000000100006d2b	movq	0x8(%rcx), %r15
0000000100006d2f	movq	(%r15,%r12,8), %rdi
0000000100006d33	movq	0x8(%r15,%r12,8), %r13
0000000100006d38	movq	-0x48(%rbp), %r12
0000000100006d3c	movq	-0x60(%rbp), %r14
0000000100006d40	leaq	(%r14,%r14,2), %rax
0000000100006d44	movq	(%r15,%rax,8), %rsi
0000000100006d48	movq	0x8(%r15,%rax,8), %rdx
0000000100006d4d	movq	%r13, %rbx
0000000100006d50	subq	%rdx, %rbx
0000000100006d53	cmovbq	%r13, %rdx
0000000100006d57	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100006d5c	cltq
0000000100006d5e	testl	%eax, %eax
0000000100006d60	cmovneq	%rax, %rbx
0000000100006d64	testq	%rbx, %rbx
0000000100006d67	jns	0x100006d83
0000000100006d69	movq	-0x30(%rbp), %rax
0000000100006d6d	movq	%rax, (%r12)
0000000100006d71	movq	-0x40(%rbp), %rax
0000000100006d75	movq	%r14, (%rax)
0000000100006d78	movq	-0x58(%rbp), %rax
0000000100006d7c	movq	0x18(%rax), %rax
0000000100006d80	incq	(%rax)
0000000100006d83	addq	$0x48, %rsp
0000000100006d87	popq	%rbx
0000000100006d88	popq	%r12
0000000100006d8a	popq	%r13
0000000100006d8c	popq	%r14
0000000100006d8e	popq	%r15
0000000100006d90	popq	%rbp
0000000100006d91	retq
0000000100006d92	nopw	%cs:(%rax,%rax)
0000000100006d9c	nopl	(%rax)
__ZN4core5slice4sort25insertion_sort_shift_left17h0ace9b42637cb7a4E:
0000000100006da0	pushq	%rbp
0000000100006da1	movq	%rsp, %rbp
0000000100006da4	pushq	%r14
0000000100006da6	pushq	%rbx
0000000100006da7	subq	$0x20, %rsp
0000000100006dab	leaq	-0x1(%rdx), %rax
0000000100006daf	cmpq	%rsi, %rax
0000000100006db2	jae	0x100006eb8
0000000100006db8	cmpq	%rsi, %rdx
0000000100006dbb	jae	0x100006eaf
0000000100006dc1	movq	%rdx, %rax
0000000100006dc4	shlq	$0x5, %rax
0000000100006dc8	leaq	-0x20(%rax,%rdi), %rax
0000000100006dcd	jmp	0x100006dfb
0000000100006dcf	nop
0000000100006dd0	movq	%r8, (%r9)
0000000100006dd3	movq	-0x28(%rbp), %rdx
0000000100006dd7	movq	-0x20(%rbp), %r8
0000000100006ddb	movq	%rdx, 0x8(%r9)
0000000100006ddf	movq	%r8, 0x10(%r9)
0000000100006de3	movq	-0x18(%rbp), %rdx
0000000100006de7	movq	%rdx, 0x18(%r9)
0000000100006deb	addq	$0x20, %rax
0000000100006def	movq	%rcx, %rdx
0000000100006df2	cmpq	%rsi, %rcx
0000000100006df5	je	0x100006eaf
0000000100006dfb	leaq	0x1(%rdx), %rcx
0000000100006dff	movq	%rdx, %r9
0000000100006e02	shlq	$0x5, %r9
0000000100006e06	movq	(%rdi,%r9), %r8
0000000100006e0a	cmpq	-0x20(%rdi,%r9), %r8
0000000100006e0f	jae	0x100006deb
0000000100006e11	leaq	(%rdi,%r9), %r10
0000000100006e15	leaq	-0x20(%rdi,%r9), %r9
0000000100006e1a	movq	0x18(%r10), %r11
0000000100006e1e	movq	%r11, -0x18(%rbp)
0000000100006e22	movq	0x8(%r10), %r11
0000000100006e26	movq	0x10(%r10), %rbx
0000000100006e2a	movq	%rbx, -0x20(%rbp)
0000000100006e2e	movq	%r11, -0x28(%rbp)
0000000100006e32	movq	(%r9), %r11
0000000100006e35	movq	0x8(%r9), %rbx
0000000100006e39	movq	%r11, (%r10)
0000000100006e3c	movq	%rbx, 0x8(%r10)
0000000100006e40	movq	0x10(%r9), %r11
0000000100006e44	movq	%r11, 0x10(%r10)
0000000100006e48	movq	0x18(%r9), %r11
0000000100006e4c	movq	%r11, 0x18(%r10)
0000000100006e50	cmpq	$0x1, %rdx
0000000100006e54	je	0x100006dd0
0000000100006e5a	movl	$0x1, %r10d
0000000100006e60	movq	%rax, %r9
0000000100006e63	nopw	%cs:(%rax,%rax)
0000000100006e6d	nopl	(%rax)
0000000100006e70	cmpq	-0x20(%r9), %r8
0000000100006e74	jae	0x100006dd0
0000000100006e7a	leaq	-0x20(%r9), %r11
0000000100006e7e	movq	0x18(%r11), %rbx
0000000100006e82	movq	%rbx, 0x18(%r9)
0000000100006e86	movq	0x10(%r11), %rbx
0000000100006e8a	movq	%rbx, 0x10(%r9)
0000000100006e8e	movq	(%r11), %rbx
0000000100006e91	movq	0x8(%r11), %r14
0000000100006e95	movq	%r14, 0x8(%r9)
0000000100006e99	movq	%rbx, (%r9)
0000000100006e9c	incq	%r10
0000000100006e9f	movq	%r11, %r9
0000000100006ea2	cmpq	%r10, %rdx
0000000100006ea5	jne	0x100006e70
0000000100006ea7	movq	%rdi, %r9
0000000100006eaa	jmp	0x100006dd0
0000000100006eaf	addq	$0x20, %rsp
0000000100006eb3	popq	%rbx
0000000100006eb4	popq	%r14
0000000100006eb6	popq	%rbp
0000000100006eb7	retq
0000000100006eb8	leaq	0x3cfe4(%rip), %rdi
0000000100006ebf	leaq	0x41632(%rip), %rdx
0000000100006ec6	movl	$0x2e, %esi
0000000100006ecb	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
__ZN4core5slice4sort25insertion_sort_shift_left17h1cd1223c79b25d4fE:
0000000100006ed0	pushq	%rbp
0000000100006ed1	movq	%rsp, %rbp
0000000100006ed4	pushq	%r14
0000000100006ed6	pushq	%rbx
0000000100006ed7	subq	$0x10, %rsp
0000000100006edb	leaq	-0x1(%rdx), %rax
0000000100006edf	cmpq	%rsi, %rax
0000000100006ee2	jae	0x100006fc0
0000000100006ee8	cmpq	%rsi, %rdx
0000000100006eeb	jae	0x100006fb7
0000000100006ef1	leaq	(%rdx,%rdx,2), %rax
0000000100006ef5	leaq	-0x18(%rdi,%rax,8), %rax
0000000100006efa	jmp	0x100006f23
0000000100006efc	nopl	(%rax)
0000000100006f00	movq	%r8, (%r9)
0000000100006f03	movq	-0x20(%rbp), %rdx
0000000100006f07	movq	-0x18(%rbp), %r8
0000000100006f0b	movq	%rdx, 0x8(%r9)
0000000100006f0f	movq	%r8, 0x10(%r9)
0000000100006f13	addq	$0x18, %rax
0000000100006f17	movq	%rcx, %rdx
0000000100006f1a	cmpq	%rsi, %rcx
0000000100006f1d	je	0x100006fb7
0000000100006f23	leaq	0x1(%rdx), %rcx
0000000100006f27	leaq	(%rdx,%rdx,2), %r9
0000000100006f2b	movq	(%rdi,%r9,8), %r8
0000000100006f2f	cmpq	-0x18(%rdi,%r9,8), %r8
0000000100006f34	jae	0x100006f13
0000000100006f36	leaq	(%rdi,%r9,8), %r10
0000000100006f3a	leaq	-0x18(%rdi,%r9,8), %r9
0000000100006f3f	movq	0x8(%r10), %r11
0000000100006f43	movq	0x10(%r10), %rbx
0000000100006f47	movq	%rbx, -0x18(%rbp)
0000000100006f4b	movq	%r11, -0x20(%rbp)
0000000100006f4f	movq	(%r9), %r11
0000000100006f52	movq	0x8(%r9), %rbx
0000000100006f56	movq	%r11, (%r10)
0000000100006f59	movq	%rbx, 0x8(%r10)
0000000100006f5d	movq	0x10(%r9), %r11
0000000100006f61	movq	%r11, 0x10(%r10)
0000000100006f65	cmpq	$0x1, %rdx
0000000100006f69	je	0x100006f00
0000000100006f6b	movl	$0x1, %r10d
0000000100006f71	movq	%rax, %r9
0000000100006f74	nopw	%cs:(%rax,%rax)
0000000100006f7e	nop
0000000100006f80	cmpq	-0x18(%r9), %r8
0000000100006f84	jae	0x100006f00
0000000100006f8a	leaq	-0x18(%r9), %r11
0000000100006f8e	movq	0x10(%r11), %rbx
0000000100006f92	movq	%rbx, 0x10(%r9)
0000000100006f96	movq	(%r11), %rbx
0000000100006f99	movq	0x8(%r11), %r14
0000000100006f9d	movq	%r14, 0x8(%r9)
0000000100006fa1	movq	%rbx, (%r9)
0000000100006fa4	incq	%r10
0000000100006fa7	movq	%r11, %r9
0000000100006faa	cmpq	%r10, %rdx
0000000100006fad	jne	0x100006f80
0000000100006faf	movq	%rdi, %r9
0000000100006fb2	jmp	0x100006f00
0000000100006fb7	addq	$0x10, %rsp
0000000100006fbb	popq	%rbx
0000000100006fbc	popq	%r14
0000000100006fbe	popq	%rbp
0000000100006fbf	retq
0000000100006fc0	leaq	0x3cedc(%rip), %rdi
0000000100006fc7	leaq	0x4152a(%rip), %rdx
0000000100006fce	movl	$0x2e, %esi
0000000100006fd3	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100006fd8	nopl	(%rax,%rax)
__ZN4core5slice4sort25insertion_sort_shift_left17h417182299c8f35e2E:
0000000100006fe0	pushq	%rbp
0000000100006fe1	movq	%rsp, %rbp
0000000100006fe4	pushq	%r15
0000000100006fe6	pushq	%r14
0000000100006fe8	pushq	%r13
0000000100006fea	pushq	%r12
0000000100006fec	pushq	%rbx
0000000100006fed	pushq	%rax
0000000100006fee	leaq	-0x1(%rdx), %rax
0000000100006ff2	cmpq	%rsi, %rax
0000000100006ff5	jae	0x100007116
0000000100006ffb	cmpq	%rsi, %rdx
0000000100006ffe	jae	0x100007107
0000000100007004	movq	%rdx, %rax
0000000100007007	shlq	$0x5, %rax
000000010000700b	leaq	-0x20(%rax,%rdi), %rax
0000000100007010	jmp	0x10000703f
0000000100007012	nopw	%cs:(%rax,%rax)
000000010000701c	nopl	(%rax)
0000000100007020	movq	%rdi, %rbx
0000000100007023	movq	%r9, (%rbx)
0000000100007026	movq	%r11, 0x8(%rbx)
000000010000702a	movq	%rcx, 0x10(%rbx)
000000010000702e	movq	%r10, 0x18(%rbx)
0000000100007032	addq	$0x20, %rax
0000000100007036	cmpq	%rsi, %rdx
0000000100007039	je	0x100007107
000000010000703f	movq	%rdx, %r8
0000000100007042	incq	%rdx
0000000100007045	movq	%r8, %r10
0000000100007048	shlq	$0x5, %r10
000000010000704c	leaq	(%rdi,%r10), %r14
0000000100007050	movq	0x10(%rdi,%r10), %rcx
0000000100007055	cmpq	-0x10(%rdi,%r10), %rcx
000000010000705a	jae	0x100007070
000000010000705c	movq	(%r14), %r9
000000010000705f	jmp	0x10000707b
0000000100007061	nopw	%cs:(%rax,%rax)
000000010000706b	nopl	(%rax,%rax)
0000000100007070	ja	0x100007032
0000000100007072	movq	(%r14), %r9
0000000100007075	cmpq	-0x20(%r14), %r9
0000000100007079	jae	0x100007032
000000010000707b	leaq	-0x20(%rdi,%r10), %rbx
0000000100007080	movq	0x8(%r14), %r11
0000000100007084	movq	0x18(%r14), %r10
0000000100007088	movq	(%rbx), %r15
000000010000708b	movq	0x8(%rbx), %r12
000000010000708f	movq	%r15, (%r14)
0000000100007092	movq	%r12, 0x8(%r14)
0000000100007096	movq	0x10(%rbx), %r15
000000010000709a	movq	%r15, 0x10(%r14)
000000010000709e	movq	0x18(%rbx), %r15
00000001000070a2	movq	%r15, 0x18(%r14)
00000001000070a6	cmpq	$0x1, %r8
00000001000070aa	je	0x100007023
00000001000070b0	movl	$0x1, %r14d
00000001000070b6	movq	%rax, %rbx
00000001000070b9	jmp	0x1000070ed
00000001000070bb	nopl	(%rax,%rax)
00000001000070c0	movq	0x18(%r15), %r12
00000001000070c4	movq	%r12, 0x18(%rbx)
00000001000070c8	movq	0x10(%r15), %r12
00000001000070cc	movq	%r12, 0x10(%rbx)
00000001000070d0	movq	(%r15), %r12
00000001000070d3	movq	0x8(%r15), %r13
00000001000070d7	movq	%r13, 0x8(%rbx)
00000001000070db	movq	%r12, (%rbx)
00000001000070de	incq	%r14
00000001000070e1	movq	%r15, %rbx
00000001000070e4	cmpq	%r14, %r8
00000001000070e7	je	0x100007020
00000001000070ed	leaq	-0x20(%rbx), %r15
00000001000070f1	cmpq	-0x10(%rbx), %rcx
00000001000070f5	jb	0x1000070c0
00000001000070f7	ja	0x100007023
00000001000070fd	cmpq	(%r15), %r9
0000000100007100	jb	0x1000070c0
0000000100007102	jmp	0x100007023
0000000100007107	addq	$0x8, %rsp
000000010000710b	popq	%rbx
000000010000710c	popq	%r12
000000010000710e	popq	%r13
0000000100007110	popq	%r14
0000000100007112	popq	%r15
0000000100007114	popq	%rbp
0000000100007115	retq
0000000100007116	leaq	0x3cd86(%rip), %rdi
000000010000711d	leaq	0x413d4(%rip), %rdx
0000000100007124	movl	$0x2e, %esi
0000000100007129	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010000712e	nop
__ZN4core5slice4sort25insertion_sort_shift_left17h4cf9c9fb15d0f1bcE:
0000000100007130	pushq	%rbp
0000000100007131	movq	%rsp, %rbp
0000000100007134	pushq	%r15
0000000100007136	pushq	%r14
0000000100007138	pushq	%rbx
0000000100007139	subq	$0x18, %rsp
000000010000713d	leaq	-0x1(%rdx), %rax
0000000100007141	cmpq	%rsi, %rax
0000000100007144	jae	0x10000724a
000000010000714a	cmpq	%rsi, %rdx
000000010000714d	jae	0x10000723f
0000000100007153	movq	%rdx, %rax
0000000100007156	shlq	$0x5, %rax
000000010000715a	leaq	-0x20(%rax,%rdi), %rax
000000010000715f	jmp	0x100007197
0000000100007161	nopw	%cs:(%rax,%rax)
000000010000716b	nopl	(%rax,%rax)
0000000100007170	movq	-0x28(%rbp), %rdx
0000000100007174	movq	-0x20(%rbp), %r11
0000000100007178	movq	%r11, 0x8(%r10)
000000010000717c	movq	%rdx, (%r10)
000000010000717f	movq	%r8, 0x10(%r10)
0000000100007183	movq	%r9, 0x18(%r10)
0000000100007187	addq	$0x20, %rax
000000010000718b	movq	%rcx, %rdx
000000010000718e	cmpq	%rsi, %rcx
0000000100007191	je	0x10000723f
0000000100007197	leaq	0x1(%rdx), %rcx
000000010000719b	movq	%rdx, %r9
000000010000719e	shlq	$0x5, %r9
00000001000071a2	movq	0x10(%rdi,%r9), %r8
00000001000071a7	cmpq	-0x10(%rdi,%r9), %r8
00000001000071ac	jae	0x100007187
00000001000071ae	leaq	(%rdi,%r9), %r11
00000001000071b2	leaq	-0x20(%rdi,%r9), %r10
00000001000071b7	movq	(%r11), %r9
00000001000071ba	movq	0x8(%r11), %rbx
00000001000071be	movq	%rbx, -0x20(%rbp)
00000001000071c2	movq	%r9, -0x28(%rbp)
00000001000071c6	movq	0x18(%r11), %r9
00000001000071ca	movq	0x18(%r10), %rbx
00000001000071ce	movq	%rbx, 0x18(%r11)
00000001000071d2	movq	(%r10), %rbx
00000001000071d5	movq	0x8(%r10), %r14
00000001000071d9	movq	%rbx, (%r11)
00000001000071dc	movq	%r14, 0x8(%r11)
00000001000071e0	movq	0x10(%r10), %rbx
00000001000071e4	movq	%rbx, 0x10(%r11)
00000001000071e8	cmpq	$0x1, %rdx
00000001000071ec	je	0x100007170
00000001000071ee	movl	$0x1, %r11d
00000001000071f4	movq	%rax, %r10
00000001000071f7	nopw	(%rax,%rax)
0000000100007200	cmpq	-0x10(%r10), %r8
0000000100007204	jae	0x100007170
000000010000720a	leaq	-0x20(%r10), %rbx
000000010000720e	movq	0x18(%rbx), %r14
0000000100007212	movq	%r14, 0x18(%r10)
0000000100007216	movq	0x10(%rbx), %r14
000000010000721a	movq	%r14, 0x10(%r10)
000000010000721e	movq	(%rbx), %r14
0000000100007221	movq	0x8(%rbx), %r15
0000000100007225	movq	%r15, 0x8(%r10)
0000000100007229	movq	%r14, (%r10)
000000010000722c	incq	%r11
000000010000722f	movq	%rbx, %r10
0000000100007232	cmpq	%r11, %rdx
0000000100007235	jne	0x100007200
0000000100007237	movq	%rdi, %r10
000000010000723a	jmp	0x100007170
000000010000723f	addq	$0x18, %rsp
0000000100007243	popq	%rbx
0000000100007244	popq	%r14
0000000100007246	popq	%r15
0000000100007248	popq	%rbp
0000000100007249	retq
000000010000724a	leaq	0x3cc52(%rip), %rdi
0000000100007251	leaq	0x412a0(%rip), %rdx
0000000100007258	movl	$0x2e, %esi
000000010000725d	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100007262	nopw	%cs:(%rax,%rax)
000000010000726c	nopl	(%rax)
__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E:
0000000100007270	pushq	%rbp
0000000100007271	movq	%rsp, %rbp
0000000100007274	pushq	%r14
0000000100007276	pushq	%rbx
0000000100007277	subq	$0x10, %rsp
000000010000727b	leaq	-0x1(%rdx), %rax
000000010000727f	cmpq	%rsi, %rax
0000000100007282	jae	0x100007360
0000000100007288	cmpq	%rsi, %rdx
000000010000728b	jae	0x100007357
0000000100007291	leaq	(%rdx,%rdx,2), %rax
0000000100007295	leaq	-0x18(%rdi,%rax,8), %rax
000000010000729a	jmp	0x1000072c3
000000010000729c	nopl	(%rax)
00000001000072a0	movq	-0x20(%rbp), %rdx
00000001000072a4	movq	-0x18(%rbp), %r10
00000001000072a8	movq	%r10, 0x8(%r9)
00000001000072ac	movq	%rdx, (%r9)
00000001000072af	movq	%r8, 0x10(%r9)
00000001000072b3	addq	$0x18, %rax
00000001000072b7	movq	%rcx, %rdx
00000001000072ba	cmpq	%rsi, %rcx
00000001000072bd	je	0x100007357
00000001000072c3	leaq	0x1(%rdx), %rcx
00000001000072c7	leaq	(%rdx,%rdx,2), %r9
00000001000072cb	movq	0x10(%rdi,%r9,8), %r8
00000001000072d0	cmpq	-0x8(%rdi,%r9,8), %r8
00000001000072d5	jae	0x1000072b3
00000001000072d7	leaq	(%rdi,%r9,8), %r10
00000001000072db	leaq	-0x18(%rdi,%r9,8), %r9
00000001000072e0	movq	(%r10), %r11
00000001000072e3	movq	0x8(%r10), %rbx
00000001000072e7	movq	%rbx, -0x18(%rbp)
00000001000072eb	movq	%r11, -0x20(%rbp)
00000001000072ef	movq	(%r9), %r11
00000001000072f2	movq	0x8(%r9), %rbx
00000001000072f6	movq	%r11, (%r10)
00000001000072f9	movq	%rbx, 0x8(%r10)
00000001000072fd	movq	0x10(%r9), %r11
0000000100007301	movq	%r11, 0x10(%r10)
0000000100007305	cmpq	$0x1, %rdx
0000000100007309	je	0x1000072a0
000000010000730b	movl	$0x1, %r10d
0000000100007311	movq	%rax, %r9
0000000100007314	nopw	%cs:(%rax,%rax)
000000010000731e	nop
0000000100007320	cmpq	-0x8(%r9), %r8
0000000100007324	jae	0x1000072a0
000000010000732a	leaq	-0x18(%r9), %r11
000000010000732e	movq	0x10(%r11), %rbx
0000000100007332	movq	%rbx, 0x10(%r9)
0000000100007336	movq	(%r11), %rbx
0000000100007339	movq	0x8(%r11), %r14
000000010000733d	movq	%r14, 0x8(%r9)
0000000100007341	movq	%rbx, (%r9)
0000000100007344	incq	%r10
0000000100007347	movq	%r11, %r9
000000010000734a	cmpq	%r10, %rdx
000000010000734d	jne	0x100007320
000000010000734f	movq	%rdi, %r9
0000000100007352	jmp	0x1000072a0
0000000100007357	addq	$0x10, %rsp
000000010000735b	popq	%rbx
000000010000735c	popq	%r14
000000010000735e	popq	%rbp
000000010000735f	retq
0000000100007360	leaq	0x3cb3c(%rip), %rdi
0000000100007367	leaq	0x4118a(%rip), %rdx
000000010000736e	movl	$0x2e, %esi
0000000100007373	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100007378	nopl	(%rax,%rax)
__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E:
0000000100007380	pushq	%rbp
0000000100007381	movq	%rsp, %rbp
0000000100007384	pushq	%r15
0000000100007386	pushq	%r14
0000000100007388	pushq	%r13
000000010000738a	pushq	%r12
000000010000738c	pushq	%rbx
000000010000738d	subq	$0x38, %rsp
0000000100007391	movq	%rdi, -0x30(%rbp)
0000000100007395	leaq	-0x1(%rdx), %rax
0000000100007399	cmpq	%rsi, %rax
000000010000739c	jae	0x1000074f1
00000001000073a2	movq	%rdx, %r15
00000001000073a5	cmpq	%rsi, %rdx
00000001000073a8	jae	0x1000074e2
00000001000073ae	leaq	(%r15,%r15,2), %rax
00000001000073b2	movq	-0x30(%rbp), %rcx
00000001000073b6	leaq	-0x18(%rcx,%rax,8), %rax
00000001000073bb	movq	%rax, -0x48(%rbp)
00000001000073bf	movq	%rsi, -0x38(%rbp)
00000001000073c3	jmp	0x1000073f1
00000001000073c5	movq	-0x38(%rbp), %rsi
00000001000073c9	movq	%r15, %rdi
00000001000073cc	movq	-0x40(%rbp), %r8
00000001000073d0	movq	%rdi, (%r13)
00000001000073d4	movq	%r12, 0x8(%r13)
00000001000073d8	movq	%r8, 0x10(%r13)
00000001000073dc	movq	-0x50(%rbp), %rbx
00000001000073e0	addq	$0x18, -0x48(%rbp)
00000001000073e5	movq	%rbx, %r15
00000001000073e8	cmpq	%rsi, %rbx
00000001000073eb	je	0x1000074e2
00000001000073f1	leaq	0x1(%r15), %rbx
00000001000073f5	leaq	(%r15,%r15,2), %r14
00000001000073f9	movq	-0x30(%rbp), %rax
00000001000073fd	movq	(%rax,%r14,8), %rdi
0000000100007401	movq	0x8(%rax,%r14,8), %r12
0000000100007406	movq	-0x18(%rax,%r14,8), %rsi
000000010000740b	movq	-0x10(%rax,%r14,8), %rdx
0000000100007410	movq	%r12, %r13
0000000100007413	subq	%rdx, %r13
0000000100007416	cmovbq	%r12, %rdx
000000010000741a	movq	%rdi, -0x58(%rbp)
000000010000741e	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100007423	movq	-0x38(%rbp), %rsi
0000000100007427	cltq
0000000100007429	testl	%eax, %eax
000000010000742b	cmovneq	%rax, %r13
000000010000742f	testq	%r13, %r13
0000000100007432	jns	0x1000073e0
0000000100007434	movq	%rbx, -0x50(%rbp)
0000000100007438	movq	-0x30(%rbp), %rcx
000000010000743c	leaq	(%rcx,%r14,8), %rax
0000000100007440	leaq	-0x18(%rcx,%r14,8), %r13
0000000100007445	movq	0x10(%rax), %r8
0000000100007449	movq	(%r13), %rcx
000000010000744d	movq	0x8(%r13), %rdx
0000000100007451	movq	%rcx, (%rax)
0000000100007454	movq	%rdx, 0x8(%rax)
0000000100007458	movq	0x10(%r13), %rcx
000000010000745c	movq	%rcx, 0x10(%rax)
0000000100007460	cmpq	$0x1, %r15
0000000100007464	movq	-0x58(%rbp), %rdi
0000000100007468	je	0x1000073d0
000000010000746e	movq	%r8, -0x40(%rbp)
0000000100007472	movq	%r15, -0x60(%rbp)
0000000100007476	movl	$0x1, %r14d
000000010000747c	movq	-0x48(%rbp), %r13
0000000100007480	movq	-0x18(%r13), %rsi
0000000100007484	movq	-0x10(%r13), %rdx
0000000100007488	movq	%r12, %rbx
000000010000748b	subq	%rdx, %rbx
000000010000748e	cmovbq	%r12, %rdx
0000000100007492	movq	%rdi, %r15
0000000100007495	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000749a	cltq
000000010000749c	testl	%eax, %eax
000000010000749e	cmovneq	%rax, %rbx
00000001000074a2	testq	%rbx, %rbx
00000001000074a5	jns	0x1000073c5
00000001000074ab	leaq	-0x18(%r13), %rax
00000001000074af	movq	0x10(%rax), %rcx
00000001000074b3	movq	%rcx, 0x10(%r13)
00000001000074b7	movq	(%rax), %rcx
00000001000074ba	movq	0x8(%rax), %rdx
00000001000074be	movq	%rdx, 0x8(%r13)
00000001000074c2	movq	%rcx, (%r13)
00000001000074c6	incq	%r14
00000001000074c9	movq	%rax, %r13
00000001000074cc	cmpq	%r14, -0x60(%rbp)
00000001000074d0	movq	%r15, %rdi
00000001000074d3	jne	0x100007480
00000001000074d5	movq	-0x30(%rbp), %r13
00000001000074d9	movq	-0x38(%rbp), %rsi
00000001000074dd	jmp	0x1000073cc
00000001000074e2	addq	$0x38, %rsp
00000001000074e6	popq	%rbx
00000001000074e7	popq	%r12
00000001000074e9	popq	%r13
00000001000074eb	popq	%r14
00000001000074ed	popq	%r15
00000001000074ef	popq	%rbp
00000001000074f0	retq
00000001000074f1	leaq	0x3c9ab(%rip), %rdi
00000001000074f8	leaq	0x40ff9(%rip), %rdx
00000001000074ff	movl	$0x2e, %esi
0000000100007504	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100007509	nopl	(%rax)
__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E:
0000000100007510	pushq	%rbp
0000000100007511	movq	%rsp, %rbp
0000000100007514	pushq	%r14
0000000100007516	pushq	%rbx
0000000100007517	subq	$0x20, %rsp
000000010000751b	leaq	-0x1(%rdx), %rax
000000010000751f	cmpq	%rsi, %rax
0000000100007522	jae	0x100007640
0000000100007528	cmpq	%rsi, %rdx
000000010000752b	jae	0x100007637
0000000100007531	leaq	(%rdx,%rdx,4), %rax
0000000100007535	leaq	-0x28(%rdi,%rax,8), %rax
000000010000753a	jmp	0x100007573
000000010000753c	nopl	(%rax)
0000000100007540	movq	-0x30(%rbp), %rdx
0000000100007544	movq	-0x28(%rbp), %r10
0000000100007548	movq	%r10, 0x8(%r9)
000000010000754c	movq	%rdx, (%r9)
000000010000754f	movq	%r8, 0x10(%r9)
0000000100007553	movq	-0x20(%rbp), %rdx
0000000100007557	movq	-0x18(%rbp), %r8
000000010000755b	movq	%rdx, 0x18(%r9)
000000010000755f	movq	%r8, 0x20(%r9)
0000000100007563	addq	$0x28, %rax
0000000100007567	movq	%rcx, %rdx
000000010000756a	cmpq	%rsi, %rcx
000000010000756d	je	0x100007637
0000000100007573	leaq	0x1(%rdx), %rcx
0000000100007577	leaq	(%rdx,%rdx,4), %r9
000000010000757b	movq	0x10(%rdi,%r9,8), %r8
0000000100007580	cmpq	-0x18(%rdi,%r9,8), %r8
0000000100007585	jae	0x100007563
0000000100007587	leaq	(%rdi,%r9,8), %r10
000000010000758b	leaq	-0x28(%rdi,%r9,8), %r9
0000000100007590	movq	(%r10), %r11
0000000100007593	movq	0x8(%r10), %rbx
0000000100007597	movq	%rbx, -0x28(%rbp)
000000010000759b	movq	%r11, -0x30(%rbp)
000000010000759f	movq	0x18(%r10), %r11
00000001000075a3	movq	0x20(%r10), %rbx
00000001000075a7	movq	%rbx, -0x18(%rbp)
00000001000075ab	movq	%r11, -0x20(%rbp)
00000001000075af	movq	0x18(%r9), %r11
00000001000075b3	movq	%r11, 0x18(%r10)
00000001000075b7	movq	0x10(%r9), %r11
00000001000075bb	movq	%r11, 0x10(%r10)
00000001000075bf	movq	(%r9), %r11
00000001000075c2	movq	0x8(%r9), %rbx
00000001000075c6	movq	%rbx, 0x8(%r10)
00000001000075ca	movq	%r11, (%r10)
00000001000075cd	movq	0x20(%r9), %r11
00000001000075d1	movq	%r11, 0x20(%r10)
00000001000075d5	cmpq	$0x1, %rdx
00000001000075d9	je	0x100007540
00000001000075df	movl	$0x1, %r10d
00000001000075e5	movq	%rax, %r9
00000001000075e8	nopl	(%rax,%rax)
00000001000075f0	cmpq	-0x18(%r9), %r8
00000001000075f4	jae	0x100007540
00000001000075fa	leaq	-0x28(%r9), %r11
00000001000075fe	movq	0x20(%r11), %rbx
0000000100007602	movq	%rbx, 0x20(%r9)
0000000100007606	movq	0x18(%r11), %rbx
000000010000760a	movq	%rbx, 0x18(%r9)
000000010000760e	movq	0x10(%r11), %rbx
0000000100007612	movq	%rbx, 0x10(%r9)
0000000100007616	movq	(%r11), %rbx
0000000100007619	movq	0x8(%r11), %r14
000000010000761d	movq	%r14, 0x8(%r9)
0000000100007621	movq	%rbx, (%r9)
0000000100007624	incq	%r10
0000000100007627	movq	%r11, %r9
000000010000762a	cmpq	%r10, %rdx
000000010000762d	jne	0x1000075f0
000000010000762f	movq	%rdi, %r9
0000000100007632	jmp	0x100007540
0000000100007637	addq	$0x20, %rsp
000000010000763b	popq	%rbx
000000010000763c	popq	%r14
000000010000763e	popq	%rbp
000000010000763f	retq
0000000100007640	leaq	0x3c85c(%rip), %rdi
0000000100007647	leaq	0x40eaa(%rip), %rdx
000000010000764e	movl	$0x2e, %esi
0000000100007653	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100007658	nopl	(%rax,%rax)
__ZN4core5slice4sort25insertion_sort_shift_left17hef352169c08618acE:
0000000100007660	pushq	%rbp
0000000100007661	movq	%rsp, %rbp
0000000100007664	pushq	%r15
0000000100007666	pushq	%r14
0000000100007668	pushq	%rbx
0000000100007669	pushq	%rax
000000010000766a	leaq	-0x1(%rdx), %rax
000000010000766e	cmpq	%rsi, %rax
0000000100007671	jae	0x100007726
0000000100007677	cmpq	%rsi, %rdx
000000010000767a	jae	0x10000771b
0000000100007680	movq	%rdx, %rax
0000000100007683	shlq	$0x4, %rax
0000000100007687	leaq	-0x10(%rax,%rdi), %rax
000000010000768c	jmp	0x1000076a3
000000010000768e	nop
0000000100007690	movq	%r8, (%r10)
0000000100007693	movq	%r9, 0x8(%r10)
0000000100007697	addq	$0x10, %rax
000000010000769b	movq	%rcx, %rdx
000000010000769e	cmpq	%rsi, %rcx
00000001000076a1	je	0x10000771b
00000001000076a3	leaq	0x1(%rdx), %rcx
00000001000076a7	movq	%rdx, %r9
00000001000076aa	shlq	$0x4, %r9
00000001000076ae	movq	(%rdi,%r9), %r8
00000001000076b2	cmpq	-0x10(%rdi,%r9), %r8
00000001000076b7	jae	0x100007697
00000001000076b9	leaq	(%rdi,%r9), %r11
00000001000076bd	leaq	-0x10(%rdi,%r9), %r10
00000001000076c2	movq	0x8(%rdi,%r9), %r9
00000001000076c7	movq	(%r10), %rbx
00000001000076ca	movq	0x8(%r10), %r14
00000001000076ce	movq	%r14, 0x8(%r11)
00000001000076d2	movq	%rbx, (%r11)
00000001000076d5	cmpq	$0x1, %rdx
00000001000076d9	je	0x100007690
00000001000076db	movl	$0x1, %r11d
00000001000076e1	movq	%rax, %r10
00000001000076e4	nopw	%cs:(%rax,%rax)
00000001000076ee	nop
00000001000076f0	cmpq	-0x10(%r10), %r8
00000001000076f4	jae	0x100007690
00000001000076f6	leaq	-0x10(%r10), %rbx
00000001000076fa	movq	(%rbx), %r14
00000001000076fd	movq	0x8(%rbx), %r15
0000000100007701	movq	%r15, 0x8(%r10)
0000000100007705	movq	%r14, (%r10)
0000000100007708	incq	%r11
000000010000770b	movq	%rbx, %r10
000000010000770e	cmpq	%r11, %rdx
0000000100007711	jne	0x1000076f0
0000000100007713	movq	%rdi, %r10
0000000100007716	jmp	0x100007690
000000010000771b	addq	$0x8, %rsp
000000010000771f	popq	%rbx
0000000100007720	popq	%r14
0000000100007722	popq	%r15
0000000100007724	popq	%rbp
0000000100007725	retq
0000000100007726	leaq	0x3c776(%rip), %rdi
000000010000772d	leaq	0x40dc4(%rip), %rdx
0000000100007734	movl	$0x2e, %esi
0000000100007739	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010000773e	nop
__ZN4core5slice4sort26insertion_sort_shift_right17h12707e027ba23ba1E:
0000000100007740	pushq	%rbp
0000000100007741	movq	%rsp, %rbp
0000000100007744	pushq	%r15
0000000100007746	pushq	%r14
0000000100007748	pushq	%r13
000000010000774a	pushq	%r12
000000010000774c	pushq	%rbx
000000010000774d	subq	$0x18, %rsp
0000000100007751	cmpq	$0x1, %rsi
0000000100007755	jbe	0x10000787e
000000010000775b	movq	%rsi, %r14
000000010000775e	movq	%rdi, %r15
0000000100007761	movq	0x18(%rdi), %rdi
0000000100007765	movq	0x20(%r15), %rdx
0000000100007769	movq	(%r15), %r12
000000010000776c	movq	0x8(%r15), %rbx
0000000100007770	movq	%rdx, %r13
0000000100007773	subq	%rbx, %r13
0000000100007776	cmovaeq	%rbx, %rdx
000000010000777a	movq	%r12, %rsi
000000010000777d	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100007782	cltq
0000000100007784	testl	%eax, %eax
0000000100007786	cmovneq	%rax, %r13
000000010000778a	testq	%r13, %r13
000000010000778d	jns	0x10000786f
0000000100007793	movq	%rbx, -0x30(%rbp)
0000000100007797	leaq	0x18(%r15), %r13
000000010000779b	movq	0x10(%r15), %rax
000000010000779f	movq	%rax, -0x40(%rbp)
00000001000077a3	movq	(%r13), %rax
00000001000077a7	movq	0x8(%r13), %rcx
00000001000077ab	movq	%rax, (%r15)
00000001000077ae	movq	%rcx, 0x8(%r15)
00000001000077b2	movq	0x10(%r13), %rax
00000001000077b6	movq	%rax, 0x10(%r15)
00000001000077ba	cmpq	$0x3, %r14
00000001000077be	movq	%r12, -0x38(%rbp)
00000001000077c2	jb	0x100007857
00000001000077c8	movq	0x30(%r15), %rdi
00000001000077cc	movq	0x38(%r15), %rdx
00000001000077d0	movq	%rdx, %rbx
00000001000077d3	movq	-0x30(%rbp), %rax
00000001000077d7	subq	%rax, %rbx
00000001000077da	cmovaeq	%rax, %rdx
00000001000077de	movq	%r12, %rsi
00000001000077e1	callq	0x1000427c0                     ## symbol stub for: _memcmp
00000001000077e6	cltq
00000001000077e8	testl	%eax, %eax
00000001000077ea	cmovneq	%rax, %rbx
00000001000077ee	testq	%rbx, %rbx
00000001000077f1	jns	0x100007857
00000001000077f3	addq	$0x30, %r15
00000001000077f7	addq	$-0x2, %r14
00000001000077fb	nopl	(%rax,%rax)
0000000100007800	movq	0x10(%r15), %rax
0000000100007804	movq	%rax, -0x8(%r15)
0000000100007808	movq	(%r15), %rax
000000010000780b	movq	0x8(%r15), %rcx
000000010000780f	movq	%rcx, -0x10(%r15)
0000000100007813	movq	%rax, -0x18(%r15)
0000000100007817	decq	%r14
000000010000781a	je	0x100007854
000000010000781c	leaq	0x18(%r15), %rbx
0000000100007820	movq	0x18(%r15), %rdi
0000000100007824	movq	0x20(%r15), %rdx
0000000100007828	movq	%rdx, %r12
000000010000782b	movq	-0x30(%rbp), %rax
000000010000782f	subq	%rax, %r12
0000000100007832	cmovaeq	%rax, %rdx
0000000100007836	movq	-0x38(%rbp), %rsi
000000010000783a	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000783f	cltq
0000000100007841	testl	%eax, %eax
0000000100007843	cmovneq	%rax, %r12
0000000100007847	movq	%r15, %r13
000000010000784a	movq	%rbx, %r15
000000010000784d	testq	%r12, %r12
0000000100007850	js	0x100007800
0000000100007852	jmp	0x100007857
0000000100007854	movq	%r15, %r13
0000000100007857	movq	-0x38(%rbp), %rax
000000010000785b	movq	%rax, (%r13)
000000010000785f	movq	-0x30(%rbp), %rax
0000000100007863	movq	%rax, 0x8(%r13)
0000000100007867	movq	-0x40(%rbp), %rax
000000010000786b	movq	%rax, 0x10(%r13)
000000010000786f	addq	$0x18, %rsp
0000000100007873	popq	%rbx
0000000100007874	popq	%r12
0000000100007876	popq	%r13
0000000100007878	popq	%r14
000000010000787a	popq	%r15
000000010000787c	popq	%rbp
000000010000787d	retq
000000010000787e	leaq	0x3c64c(%rip), %rdi
0000000100007885	leaq	0x40c84(%rip), %rdx
000000010000788c	movl	$0x3a, %esi
0000000100007891	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100007896	nopw	%cs:(%rax,%rax)
__ZN4core5slice4sort26insertion_sort_shift_right17h219fc72bc6ad259bE:
00000001000078a0	pushq	%rbp
00000001000078a1	movq	%rsp, %rbp
00000001000078a4	subq	$0x20, %rsp
00000001000078a8	cmpq	$0x1, %rsi
00000001000078ac	jbe	0x10000798a
00000001000078b2	movq	0x10(%rdi), %rax
00000001000078b6	cmpq	%rax, 0x38(%rdi)
00000001000078ba	jae	0x100007984
00000001000078c0	leaq	0x28(%rdi), %rcx
00000001000078c4	movq	(%rdi), %rdx
00000001000078c7	movq	0x8(%rdi), %r8
00000001000078cb	movq	%r8, -0x18(%rbp)
00000001000078cf	movq	%rdx, -0x20(%rbp)
00000001000078d3	movq	0x18(%rdi), %rdx
00000001000078d7	movq	0x20(%rdi), %r8
00000001000078db	movq	%r8, -0x8(%rbp)
00000001000078df	movq	%rdx, -0x10(%rbp)
00000001000078e3	movq	0x40(%rdi), %rdx
00000001000078e7	movq	%rdx, 0x18(%rdi)
00000001000078eb	movq	0x38(%rdi), %rdx
00000001000078ef	movq	%rdx, 0x10(%rdi)
00000001000078f3	movq	0x28(%rdi), %rdx
00000001000078f7	movq	0x30(%rdi), %r8
00000001000078fb	movq	%r8, 0x8(%rdi)
00000001000078ff	movq	%rdx, (%rdi)
0000000100007902	movq	0x48(%rdi), %rdx
0000000100007906	movq	%rdx, 0x20(%rdi)
000000010000790a	cmpq	$0x3, %rsi
000000010000790e	jb	0x100007961
0000000100007910	cmpq	%rax, 0x60(%rdi)
0000000100007914	jae	0x100007961
0000000100007916	addq	$0x50, %rdi
000000010000791a	addq	$-0x2, %rsi
000000010000791e	nop
0000000100007920	movq	0x20(%rdi), %rcx
0000000100007924	movq	%rcx, -0x8(%rdi)
0000000100007928	movq	0x18(%rdi), %rcx
000000010000792c	movq	%rcx, -0x10(%rdi)
0000000100007930	movq	0x10(%rdi), %rcx
0000000100007934	movq	%rcx, -0x18(%rdi)
0000000100007938	movq	(%rdi), %rcx
000000010000793b	movq	0x8(%rdi), %rdx
000000010000793f	movq	%rdx, -0x20(%rdi)
0000000100007943	movq	%rcx, -0x28(%rdi)
0000000100007947	decq	%rsi
000000010000794a	je	0x10000795e
000000010000794c	movq	%rdi, %rcx
000000010000794f	leaq	0x28(%rdi), %rdx
0000000100007953	cmpq	%rax, 0x38(%rdi)
0000000100007957	movq	%rdx, %rdi
000000010000795a	jb	0x100007920
000000010000795c	jmp	0x100007961
000000010000795e	movq	%rdi, %rcx
0000000100007961	movq	-0x20(%rbp), %rdx
0000000100007965	movq	-0x18(%rbp), %rsi
0000000100007969	movq	%rsi, 0x8(%rcx)
000000010000796d	movq	%rdx, (%rcx)
0000000100007970	movq	%rax, 0x10(%rcx)
0000000100007974	movq	-0x10(%rbp), %rax
0000000100007978	movq	-0x8(%rbp), %rdx
000000010000797c	movq	%rax, 0x18(%rcx)
0000000100007980	movq	%rdx, 0x20(%rcx)
0000000100007984	addq	$0x20, %rsp
0000000100007988	popq	%rbp
0000000100007989	retq
000000010000798a	leaq	0x3c540(%rip), %rdi
0000000100007991	leaq	0x40b78(%rip), %rdx
0000000100007998	movl	$0x3a, %esi
000000010000799d	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
00000001000079a2	nopw	%cs:(%rax,%rax)
00000001000079ac	nopl	(%rax)
__ZN4core5slice4sort26insertion_sort_shift_right17h28dabbdd4ee424f5E:
00000001000079b0	pushq	%rbp
00000001000079b1	movq	%rsp, %rbp
00000001000079b4	subq	$0x10, %rsp
00000001000079b8	cmpq	$0x1, %rsi
00000001000079bc	jbe	0x100007a5a
00000001000079c2	movq	0x10(%rdi), %rax
00000001000079c6	cmpq	%rax, 0x28(%rdi)
00000001000079ca	jae	0x100007a54
00000001000079d0	leaq	0x18(%rdi), %rcx
00000001000079d4	movq	(%rdi), %rdx
00000001000079d7	movq	0x8(%rdi), %r8
00000001000079db	movq	%r8, -0x8(%rbp)
00000001000079df	movq	%rdx, -0x10(%rbp)
00000001000079e3	movq	0x18(%rdi), %rdx
00000001000079e7	movq	0x20(%rdi), %r8
00000001000079eb	movq	%rdx, (%rdi)
00000001000079ee	movq	%r8, 0x8(%rdi)
00000001000079f2	movq	0x28(%rdi), %rdx
00000001000079f6	movq	%rdx, 0x10(%rdi)
00000001000079fa	cmpq	$0x3, %rsi
00000001000079fe	jb	0x100007a41
0000000100007a00	cmpq	%rax, 0x40(%rdi)
0000000100007a04	jae	0x100007a41
0000000100007a06	addq	$0x30, %rdi
0000000100007a0a	addq	$-0x2, %rsi
0000000100007a0e	nop
0000000100007a10	movq	0x10(%rdi), %rcx
0000000100007a14	movq	%rcx, -0x8(%rdi)
0000000100007a18	movq	(%rdi), %rcx
0000000100007a1b	movq	0x8(%rdi), %rdx
0000000100007a1f	movq	%rdx, -0x10(%rdi)
0000000100007a23	movq	%rcx, -0x18(%rdi)
0000000100007a27	decq	%rsi
0000000100007a2a	je	0x100007a3e
0000000100007a2c	movq	%rdi, %rcx
0000000100007a2f	leaq	0x18(%rdi), %rdx
0000000100007a33	cmpq	%rax, 0x28(%rdi)
0000000100007a37	movq	%rdx, %rdi
0000000100007a3a	jb	0x100007a10
0000000100007a3c	jmp	0x100007a41
0000000100007a3e	movq	%rdi, %rcx
0000000100007a41	movq	-0x10(%rbp), %rdx
0000000100007a45	movq	-0x8(%rbp), %rsi
0000000100007a49	movq	%rsi, 0x8(%rcx)
0000000100007a4d	movq	%rdx, (%rcx)
0000000100007a50	movq	%rax, 0x10(%rcx)
0000000100007a54	addq	$0x10, %rsp
0000000100007a58	popq	%rbp
0000000100007a59	retq
0000000100007a5a	leaq	0x3c470(%rip), %rdi
0000000100007a61	leaq	0x40aa8(%rip), %rdx
0000000100007a68	movl	$0x3a, %esi
0000000100007a6d	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100007a72	nopw	%cs:(%rax,%rax)
0000000100007a7c	nopl	(%rax)
__ZN4core5slice4sort7recurse17h1d743a76ec258b0eE:
0000000100007a80	pushq	%rbp
0000000100007a81	movq	%rsp, %rbp
0000000100007a84	pushq	%r15
0000000100007a86	pushq	%r14
0000000100007a88	pushq	%r13
0000000100007a8a	pushq	%r12
0000000100007a8c	pushq	%rbx
0000000100007a8d	subq	$0x198, %rsp                    ## imm = 0x198
0000000100007a94	movl	%ecx, -0x54(%rbp)
0000000100007a97	movq	%rdx, -0x88(%rbp)
0000000100007a9e	cmpq	$0x15, %rsi
0000000100007aa2	jae	0x100007ad2
0000000100007aa4	movq	%rsi, %r14
0000000100007aa7	movq	%rdi, %r13
0000000100007aaa	cmpq	$0x1, %r14
0000000100007aae	jbe	0x100007ac0
0000000100007ab0	movl	$0x1, %edx
0000000100007ab5	movq	%r13, %rdi
0000000100007ab8	movq	%r14, %rsi
0000000100007abb	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E ## core::slice::sort::insertion_sort_shift_left::he675f3b01b9c50b8
0000000100007ac0	addq	$0x198, %rsp                    ## imm = 0x198
0000000100007ac7	popq	%rbx
0000000100007ac8	popq	%r12
0000000100007aca	popq	%r13
0000000100007acc	popq	%r14
0000000100007ace	popq	%r15
0000000100007ad0	popq	%rbp
0000000100007ad1	retq
0000000100007ad2	movq	%rsi, -0x78(%rbp)
0000000100007ad6	movq	%rdi, -0x60(%rbp)
0000000100007ada	movb	$0x1, -0x68(%rbp)
0000000100007ade	movb	$0x1, %cl
0000000100007ae0	cmpb	$0x0, -0x68(%rbp)
0000000100007ae4	sete	%al
0000000100007ae7	testb	%cl, %cl
0000000100007ae9	sete	%cl
0000000100007aec	orb	%al, %cl
0000000100007aee	movb	%cl, -0x90(%rbp)
0000000100007af4	movq	-0x60(%rbp), %r13
0000000100007af8	movq	-0x78(%rbp), %rbx
0000000100007afc	nopl	(%rax)
0000000100007b00	cmpl	$0x0, -0x54(%rbp)
0000000100007b04	je	0x100008baf
0000000100007b0a	cmpb	$0x0, -0x68(%rbp)
0000000100007b0e	je	0x100007fe3
0000000100007b14	movq	%rbx, %rcx
0000000100007b17	shrq	$0x2, %rcx
0000000100007b1b	leaq	(%rcx,%rcx), %r14
0000000100007b1f	leaq	(%rcx,%rcx,2), %rax
0000000100007b23	cmpq	$0x31, %rbx
0000000100007b27	jbe	0x100007b60
0000000100007b29	leaq	-0x1(%rcx), %rsi
0000000100007b2d	leaq	0x1(%rcx), %rdi
0000000100007b31	leaq	(%rcx,%rcx,4), %r8
0000000100007b35	movq	-0x18(%r13,%r8,8), %rdx
0000000100007b3a	movq	0x10(%r13,%r8,8), %r8
0000000100007b3f	cmpq	%rdx, %r8
0000000100007b42	jae	0x100007b70
0000000100007b44	movl	$0x1, %r10d
0000000100007b4a	movq	%r8, %r9
0000000100007b4d	movq	%rsi, %r11
0000000100007b50	movq	%rcx, %rsi
0000000100007b53	movq	%rdx, %r8
0000000100007b56	jmp	0x100007b79
0000000100007b58	nopl	(%rax,%rax)
0000000100007b60	xorl	%edx, %edx
0000000100007b62	jmp	0x100007c62
0000000100007b67	nopw	(%rax,%rax)
0000000100007b70	movq	%rdx, %r9
0000000100007b73	xorl	%r10d, %r10d
0000000100007b76	movq	%rcx, %r11
0000000100007b79	leaq	(%rdi,%rdi,4), %rcx
0000000100007b7d	movq	0x10(%r13,%rcx,8), %rcx
0000000100007b82	xorl	%edx, %edx
0000000100007b84	cmpq	%r8, %rcx
0000000100007b87	cmovbq	%rdi, %r11
0000000100007b8b	cmovbq	%rcx, %r8
0000000100007b8f	setb	%dl
0000000100007b92	cmpq	%r9, %r8
0000000100007b95	adcq	%r10, %rdx
0000000100007b98	cmpq	%r9, %r8
0000000100007b9b	movq	%r11, %rcx
0000000100007b9e	cmovbq	%rsi, %rcx
0000000100007ba2	leaq	-0x1(%r14), %rsi
0000000100007ba6	movq	%r14, %rdi
0000000100007ba9	orq	$0x1, %rdi
0000000100007bad	leaq	(%r14,%r14,4), %r9
0000000100007bb1	movq	-0x18(%r13,%r9,8), %r8
0000000100007bb6	movq	0x10(%r13,%r9,8), %r11
0000000100007bbb	cmpq	%r8, %r11
0000000100007bbe	jae	0x100007bd0
0000000100007bc0	incq	%rdx
0000000100007bc3	movq	%r11, %r9
0000000100007bc6	movq	%rsi, %r10
0000000100007bc9	jmp	0x100007bdc
0000000100007bcb	nopl	(%rax,%rax)
0000000100007bd0	movq	%r8, %r9
0000000100007bd3	movq	%r14, %r10
0000000100007bd6	movq	%rsi, %r14
0000000100007bd9	movq	%r11, %r8
0000000100007bdc	movq	%r14, %r11
0000000100007bdf	leaq	(%rdi,%rdi,4), %rsi
0000000100007be3	movq	0x10(%r13,%rsi,8), %r14
0000000100007be8	xorl	%esi, %esi
0000000100007bea	cmpq	%r8, %r14
0000000100007bed	cmovbq	%rdi, %r10
0000000100007bf1	setb	%sil
0000000100007bf5	cmovbq	%r14, %r8
0000000100007bf9	cmpq	%r9, %r8
0000000100007bfc	adcq	%rdx, %rsi
0000000100007bff	cmpq	%r9, %r8
0000000100007c02	movq	%r10, %r14
0000000100007c05	cmovbq	%r11, %r14
0000000100007c09	leaq	-0x1(%rax), %rdx
0000000100007c0d	leaq	0x1(%rax), %rdi
0000000100007c11	leaq	(%rax,%rax,4), %r9
0000000100007c15	movq	-0x18(%r13,%r9,8), %r8
0000000100007c1a	movq	0x10(%r13,%r9,8), %r11
0000000100007c1f	cmpq	%r8, %r11
0000000100007c22	jae	0x100007c30
0000000100007c24	incq	%rsi
0000000100007c27	movq	%r11, %r9
0000000100007c2a	movq	%rdx, %r10
0000000100007c2d	jmp	0x100007c3c
0000000100007c2f	nop
0000000100007c30	movq	%r8, %r9
0000000100007c33	movq	%rax, %r10
0000000100007c36	movq	%rdx, %rax
0000000100007c39	movq	%r11, %r8
0000000100007c3c	leaq	(%rdi,%rdi,4), %rdx
0000000100007c40	movq	0x10(%r13,%rdx,8), %r11
0000000100007c45	xorl	%edx, %edx
0000000100007c47	cmpq	%r8, %r11
0000000100007c4a	cmovbq	%rdi, %r10
0000000100007c4e	cmovbq	%r11, %r8
0000000100007c52	setb	%dl
0000000100007c55	cmpq	%r9, %r8
0000000100007c58	adcq	%rsi, %rdx
0000000100007c5b	cmpq	%r9, %r8
0000000100007c5e	cmovaeq	%r10, %rax
0000000100007c62	leaq	(%r14,%r14,4), %rsi
0000000100007c66	movq	0x10(%r13,%rsi,8), %r9
0000000100007c6b	leaq	(%rcx,%rcx,4), %rsi
0000000100007c6f	movq	0x10(%r13,%rsi,8), %rsi
0000000100007c74	cmpq	%rsi, %r9
0000000100007c77	jae	0x100007c90
0000000100007c79	incq	%rdx
0000000100007c7c	movq	%r9, %rdi
0000000100007c7f	movq	%rcx, %r8
0000000100007c82	jmp	0x100007c9c
0000000100007c84	nopw	%cs:(%rax,%rax)
0000000100007c8e	nop
0000000100007c90	movq	%rsi, %rdi
0000000100007c93	movq	%r14, %r8
0000000100007c96	movq	%rcx, %r14
0000000100007c99	movq	%r9, %rsi
0000000100007c9c	leaq	(%rax,%rax,4), %rcx
0000000100007ca0	movq	0x10(%r13,%rcx,8), %rcx
0000000100007ca5	cmpq	%rsi, %rcx
0000000100007ca8	adcq	$0x0, %rdx
0000000100007cac	cmpq	%rsi, %rcx
0000000100007caf	cmovbq	%rax, %r8
0000000100007cb3	cmovbq	%rcx, %rsi
0000000100007cb7	cmpq	%rdi, %rsi
0000000100007cba	jae	0x100007cd0
0000000100007cbc	cmpq	$0xb, %rdx
0000000100007cc0	jae	0x100007cf0
0000000100007cc2	incq	%rdx
0000000100007cc5	jmp	0x100007cd3
0000000100007cc7	nopw	(%rax,%rax)
0000000100007cd0	movq	%r8, %r14
0000000100007cd3	testq	%rdx, %rdx
0000000100007cd6	sete	%al
0000000100007cd9	testb	%al, %al
0000000100007cdb	sete	%al
0000000100007cde	orb	-0x90(%rbp), %al
0000000100007ce4	jne	0x100007d62
0000000100007ce6	jmp	0x100007ff6
0000000100007ceb	nopl	(%rax,%rax)
0000000100007cf0	movq	%rbx, %rax
0000000100007cf3	shrq	%rax
0000000100007cf6	leaq	0x20(%r13), %rcx
0000000100007cfa	leaq	(%rbx,%rbx,4), %rdx
0000000100007cfe	leaq	-0x8(%r13,%rdx,8), %rdx
0000000100007d03	nopw	%cs:(%rax,%rax)
0000000100007d0d	nopl	(%rax)
0000000100007d10	movups	-0x20(%rcx), %xmm0
0000000100007d14	movups	-0x20(%rdx), %xmm1
0000000100007d18	movups	%xmm1, -0x20(%rcx)
0000000100007d1c	movups	%xmm0, -0x20(%rdx)
0000000100007d20	movups	-0x10(%rcx), %xmm0
0000000100007d24	movups	-0x10(%rdx), %xmm1
0000000100007d28	movups	%xmm1, -0x10(%rcx)
0000000100007d2c	movups	%xmm0, -0x10(%rdx)
0000000100007d30	movq	(%rcx), %rsi
0000000100007d33	movq	(%rdx), %rdi
0000000100007d36	movq	%rdi, (%rcx)
0000000100007d39	movq	%rsi, (%rdx)
0000000100007d3c	addq	$0x28, %rcx
0000000100007d40	addq	$-0x28, %rdx
0000000100007d44	decq	%rax
0000000100007d47	jne	0x100007d10
0000000100007d49	notq	%r14
0000000100007d4c	addq	%rbx, %r14
0000000100007d4f	movb	$0x1, %al
0000000100007d51	testb	%al, %al
0000000100007d53	sete	%al
0000000100007d56	orb	-0x90(%rbp), %al
0000000100007d5c	je	0x100007ff6
0000000100007d62	cmpq	$0x0, -0x88(%rbp)
0000000100007d6a	je	0x100008010
0000000100007d70	cmpq	%rbx, %r14
0000000100007d73	jae	0x100008bbf
0000000100007d79	leaq	(%r14,%r14,4), %rax
0000000100007d7d	movq	-0x88(%rbp), %rcx
0000000100007d84	movq	0x10(%rcx), %rcx
0000000100007d88	cmpq	0x10(%r13,%rax,8), %rcx
0000000100007d8d	jb	0x100008020
0000000100007d93	leaq	(%r13,%rax,8), %rcx
0000000100007d98	movq	0x20(%r13), %rax
0000000100007d9c	movq	%rax, -0xf8(%rbp)
0000000100007da3	movq	0x18(%r13), %rax
0000000100007da7	movq	%rax, -0x100(%rbp)
0000000100007dae	movq	0x10(%r13), %rax
0000000100007db2	movq	%rax, -0x108(%rbp)
0000000100007db9	movq	(%r13), %rax
0000000100007dbd	movq	0x8(%r13), %rdx
0000000100007dc1	movq	%rdx, -0x110(%rbp)
0000000100007dc8	movq	%rax, -0x118(%rbp)
0000000100007dcf	leaq	0x18(%r13), %rax
0000000100007dd3	movq	0x20(%rcx), %rdx
0000000100007dd7	movq	0x18(%rcx), %rsi
0000000100007ddb	movq	0x10(%rcx), %rdi
0000000100007ddf	movq	(%rcx), %r8
0000000100007de2	movq	0x8(%rcx), %r9
0000000100007de6	movq	%r8, (%r13)
0000000100007dea	movq	%r9, 0x8(%r13)
0000000100007dee	movq	%rdi, 0x10(%r13)
0000000100007df2	movq	%rsi, 0x18(%r13)
0000000100007df6	movq	%rdx, 0x20(%r13)
0000000100007dfa	movq	-0xf8(%rbp), %rdx
0000000100007e01	movq	%rdx, 0x20(%rcx)
0000000100007e05	movq	-0x100(%rbp), %rdx
0000000100007e0c	movq	%rdx, 0x18(%rcx)
0000000100007e10	movq	-0x108(%rbp), %rdx
0000000100007e17	movq	%rdx, 0x10(%rcx)
0000000100007e1b	movq	-0x118(%rbp), %rdx
0000000100007e22	movq	-0x110(%rbp), %rsi
0000000100007e29	movq	%rsi, 0x8(%rcx)
0000000100007e2d	movq	%rdx, (%rcx)
0000000100007e30	leaq	0x28(%r13), %rdx
0000000100007e34	movq	(%r13), %rcx
0000000100007e38	movq	0x8(%r13), %rsi
0000000100007e3c	movq	%rcx, -0x1c0(%rbp)
0000000100007e43	movq	%rsi, -0x1b8(%rbp)
0000000100007e4a	movq	0x10(%r13), %rcx
0000000100007e4e	movq	0x18(%r13), %rsi
0000000100007e52	movq	0x20(%r13), %rdi
0000000100007e56	movq	%rdi, -0x48(%rbp)
0000000100007e5a	movq	%rsi, -0x50(%rbp)
0000000100007e5e	leaq	0x38(%r13), %rsi
0000000100007e62	movq	%rbx, %r8
0000000100007e65	xorl	%edi, %edi
0000000100007e67	leaq	-0x1(%r8), %r9
0000000100007e6b	cmpq	%r9, %rdi
0000000100007e6e	jae	0x100007e94
0000000100007e70	leaq	(%rdi,%rdi,4), %r10
0000000100007e74	leaq	(%rsi,%r10,8), %r10
0000000100007e78	nopl	(%rax,%rax)
0000000100007e80	cmpq	(%r10), %rcx
0000000100007e83	jb	0x100007e94
0000000100007e85	incq	%rdi
0000000100007e88	addq	$0x28, %r10
0000000100007e8c	cmpq	%rdi, %r9
0000000100007e8f	jne	0x100007e80
0000000100007e91	movq	%r9, %rdi
0000000100007e94	leaq	(%r8,%r8,4), %r9
0000000100007e98	leaq	(%r13,%r9,8), %r10
0000000100007e9d	nopl	(%rax)
0000000100007ea0	decq	%r8
0000000100007ea3	cmpq	%r8, %rdi
0000000100007ea6	jae	0x100007f90
0000000100007eac	leaq	-0x28(%r10), %r9
0000000100007eb0	cmpq	-0x18(%r10), %rcx
0000000100007eb4	movq	%r9, %r10
0000000100007eb7	jb	0x100007ea0
0000000100007eb9	leaq	(%rdi,%rdi,4), %r10
0000000100007ebd	movq	0x20(%rdx,%r10,8), %r11
0000000100007ec2	movq	%r11, -0xf8(%rbp)
0000000100007ec9	movq	0x18(%rdx,%r10,8), %r11
0000000100007ece	movq	%r11, -0x100(%rbp)
0000000100007ed5	movq	0x10(%rdx,%r10,8), %r11
0000000100007eda	movq	%r11, -0x108(%rbp)
0000000100007ee1	movq	(%rdx,%r10,8), %r11
0000000100007ee5	movq	0x8(%rdx,%r10,8), %r14
0000000100007eea	movq	%r14, -0x110(%rbp)
0000000100007ef1	movq	%r11, -0x118(%rbp)
0000000100007ef8	movq	0x20(%r9), %r12
0000000100007efc	movq	0x18(%r9), %r14
0000000100007f00	movq	0x10(%r9), %r15
0000000100007f04	movq	%rax, %r11
0000000100007f07	movq	%rbx, %rax
0000000100007f0a	movq	(%r9), %rbx
0000000100007f0d	movq	%rsi, -0x70(%rbp)
0000000100007f11	movq	0x8(%r9), %rsi
0000000100007f15	movq	%rbx, (%rdx,%r10,8)
0000000100007f19	movq	%rax, %rbx
0000000100007f1c	movq	%r11, %rax
0000000100007f1f	movq	%rsi, 0x8(%rdx,%r10,8)
0000000100007f24	movq	%r15, 0x10(%rdx,%r10,8)
0000000100007f29	movq	%r14, 0x18(%rdx,%r10,8)
0000000100007f2e	movq	%r12, 0x20(%rdx,%r10,8)
0000000100007f33	movq	-0xf8(%rbp), %rsi
0000000100007f3a	movq	%rsi, 0x20(%r9)
0000000100007f3e	movq	-0x100(%rbp), %rsi
0000000100007f45	movq	%rsi, 0x18(%r9)
0000000100007f49	movq	-0x108(%rbp), %rsi
0000000100007f50	movq	%rsi, 0x10(%r9)
0000000100007f54	movq	-0x118(%rbp), %rsi
0000000100007f5b	movq	-0x110(%rbp), %r10
0000000100007f62	movq	%r10, 0x8(%r9)
0000000100007f66	movq	%rsi, (%r9)
0000000100007f69	movq	-0x70(%rbp), %rsi
0000000100007f6d	incq	%rdi
0000000100007f70	leaq	-0x1(%r8), %r9
0000000100007f74	cmpq	%r9, %rdi
0000000100007f77	jb	0x100007e70
0000000100007f7d	jmp	0x100007e94
0000000100007f82	nopw	%cs:(%rax,%rax)
0000000100007f8c	nopl	(%rax)
0000000100007f90	incq	%rdi
0000000100007f93	movq	-0x1c0(%rbp), %rdx
0000000100007f9a	movq	-0x1b8(%rbp), %rsi
0000000100007fa1	movq	%rsi, 0x8(%r13)
0000000100007fa5	movq	%rdx, (%r13)
0000000100007fa9	movq	%rcx, 0x10(%r13)
0000000100007fad	movq	-0x50(%rbp), %rcx
0000000100007fb1	movq	-0x48(%rbp), %rdx
0000000100007fb5	movq	%rdx, 0x8(%rax)
0000000100007fb9	movq	%rcx, (%rax)
0000000100007fbc	movq	%rbx, %r14
0000000100007fbf	subq	%rdi, %r14
0000000100007fc2	jb	0x100008bf2
0000000100007fc8	leaq	(%rdi,%rdi,4), %rax
0000000100007fcc	leaq	(%r13,%rax,8), %r13
0000000100007fd1	movq	%r14, %rbx
0000000100007fd4	cmpq	$0x15, %r14
0000000100007fd8	jae	0x100007b00
0000000100007fde	jmp	0x100007aaa
0000000100007fe3	movq	%r13, %rdi
0000000100007fe6	movq	%rbx, %rsi
0000000100007fe9	callq	__ZN4core5slice4sort14break_patterns17h27c3d1772f214318E ## core::slice::sort::break_patterns::h27c3d1772f214318
0000000100007fee	decl	-0x54(%rbp)
0000000100007ff1	jmp	0x100007b14
0000000100007ff6	movq	%r13, %rdi
0000000100007ff9	movq	%rbx, %rsi
0000000100007ffc	callq	__ZN4core5slice4sort22partial_insertion_sort17h1f2b59ab48fe7820E ## core::slice::sort::partial_insertion_sort::h1f2b59ab48fe7820
0000000100008001	testb	%al, %al
0000000100008003	je	0x100007d62
0000000100008009	jmp	0x100007ac0
000000010000800e	nop
0000000100008010	movq	-0x60(%rbp), %r13
0000000100008014	movq	-0x78(%rbp), %r12
0000000100008018	jmp	0x100008023
000000010000801a	nopw	(%rax,%rax)
0000000100008020	movq	%rbx, %r12
0000000100008023	cmpq	%r12, %r14
0000000100008026	jae	0x100008bd1
000000010000802c	leaq	(%r14,%r14,4), %rax
0000000100008030	movq	0x20(%r13), %rcx
0000000100008034	movq	%rcx, -0xf8(%rbp)
000000010000803b	movq	0x18(%r13), %rcx
000000010000803f	movq	%rcx, -0x100(%rbp)
0000000100008046	movq	0x10(%r13), %rcx
000000010000804a	movq	%rcx, -0x108(%rbp)
0000000100008051	movq	(%r13), %rcx
0000000100008055	movq	0x8(%r13), %rdx
0000000100008059	movq	%rdx, -0x110(%rbp)
0000000100008060	movq	%rcx, -0x118(%rbp)
0000000100008067	movq	0x20(%r13,%rax,8), %rcx
000000010000806c	movq	0x18(%r13,%rax,8), %rdx
0000000100008071	movq	0x10(%r13,%rax,8), %rsi
0000000100008076	movq	(%r13,%rax,8), %rdi
000000010000807b	movq	0x8(%r13,%rax,8), %r8
0000000100008080	movq	%rdi, (%r13)
0000000100008084	movq	%r8, 0x8(%r13)
0000000100008088	movq	%rsi, 0x10(%r13)
000000010000808c	movq	%rdx, 0x18(%r13)
0000000100008090	movq	%rcx, 0x20(%r13)
0000000100008094	movq	-0xf8(%rbp), %rcx
000000010000809b	movq	%rcx, 0x20(%r13,%rax,8)
00000001000080a0	movq	-0x100(%rbp), %rcx
00000001000080a7	movq	%rcx, 0x18(%r13,%rax,8)
00000001000080ac	movq	-0x108(%rbp), %rcx
00000001000080b3	movq	%rcx, 0x10(%r13,%rax,8)
00000001000080b8	movq	-0x118(%rbp), %rcx
00000001000080bf	movq	-0x110(%rbp), %rdx
00000001000080c6	movq	%rdx, 0x8(%r13,%rax,8)
00000001000080cb	movq	%rcx, (%r13,%rax,8)
00000001000080d0	movq	%r12, %rsi
00000001000080d3	movq	0x20(%r13), %rax
00000001000080d7	movq	%rax, -0x120(%rbp)
00000001000080de	movq	0x18(%r13), %rax
00000001000080e2	movq	%rax, -0x128(%rbp)
00000001000080e9	movq	0x10(%r13), %r15
00000001000080ed	movq	%r15, -0x130(%rbp)
00000001000080f4	movq	(%r13), %rax
00000001000080f8	movq	0x8(%r13), %rcx
00000001000080fc	movq	%rcx, -0x138(%rbp)
0000000100008103	movq	%rax, -0x140(%rbp)
000000010000810a	decq	%rsi
000000010000810d	je	0x100008140
000000010000810f	leaq	0x38(%r13), %rax
0000000100008113	xorl	%edi, %edi
0000000100008115	nopw	%cs:(%rax,%rax)
000000010000811f	nop
0000000100008120	cmpq	%r15, (%rax)
0000000100008123	jae	0x100008142
0000000100008125	incq	%rdi
0000000100008128	addq	$0x28, %rax
000000010000812c	cmpq	%rdi, %rsi
000000010000812f	jne	0x100008120
0000000100008131	movq	%rsi, %rdi
0000000100008134	jmp	0x100008142
0000000100008136	nopw	%cs:(%rax,%rax)
0000000100008140	xorl	%edi, %edi
0000000100008142	cmpq	%rsi, %rdi
0000000100008145	movq	%rsi, %rcx
0000000100008148	cmovbq	%rdi, %rcx
000000010000814c	leaq	0x28(%r13), %rax
0000000100008150	leaq	(%r12,%r12,4), %rdx
0000000100008154	leaq	-0x18(%r13,%rdx,8), %rdx
0000000100008159	movq	%r12, %r9
000000010000815c	nopl	(%rax)
0000000100008160	decq	%r9
0000000100008163	cmpq	%rdi, %r9
0000000100008166	jbe	0x100008180
0000000100008168	leaq	-0x28(%rdx), %r8
000000010000816c	cmpq	%r15, (%rdx)
000000010000816f	movq	%r8, %rdx
0000000100008172	jae	0x100008160
0000000100008174	jmp	0x100008183
0000000100008176	nopw	%cs:(%rax,%rax)
0000000100008180	movq	%rcx, %r9
0000000100008183	movq	%r9, %rcx
0000000100008186	subq	%rdi, %rcx
0000000100008189	movq	%r13, -0x60(%rbp)
000000010000818d	jb	0x100008c16
0000000100008193	movq	%r12, -0x78(%rbp)
0000000100008197	movq	%r9, -0x98(%rbp)
000000010000819e	cmpq	%rsi, %r9
00000001000081a1	ja	0x100008c01
00000001000081a7	movq	%rdi, -0x90(%rbp)
00000001000081ae	leaq	(%rdi,%rdi,4), %rdx
00000001000081b2	leaq	(%rax,%rdx,8), %rdx
00000001000081b6	leaq	(%rcx,%rcx,4), %rax
00000001000081ba	leaq	(%rdx,%rax,8), %r13
00000001000081be	movl	$0x80, %r8d
00000001000081c4	xorl	%r9d, %r9d
00000001000081c7	xorl	%r11d, %r11d
00000001000081ca	xorl	%r10d, %r10d
00000001000081cd	xorl	%ebx, %ebx
00000001000081cf	movl	$0x80, %r12d
00000001000081d5	movq	%rdx, -0x80(%rbp)
00000001000081d9	movq	%rdx, %rax
00000001000081dc	jmp	0x10000826b
00000001000081e1	nopw	%cs:(%rax,%rax)
00000001000081eb	nopl	(%rax,%rax)
00000001000081f0	leaq	(%r8,%r8,4), %rcx
00000001000081f4	movq	-0x30(%rbp), %rdx
00000001000081f8	movq	%rdx, 0x20(%r13,%rcx,8)
00000001000081fd	movq	-0x38(%rbp), %rdx
0000000100008201	movq	%rdx, 0x18(%r13,%rcx,8)
0000000100008206	movq	-0x40(%rbp), %rdx
000000010000820a	movq	%rdx, 0x10(%r13,%rcx,8)
000000010000820f	movq	-0x50(%rbp), %rdx
0000000100008213	movq	-0x48(%rbp), %rsi
0000000100008217	movq	%rsi, 0x8(%r13,%rcx,8)
000000010000821c	movq	%rdx, (%r13,%rcx,8)
0000000100008221	incq	%rbx
0000000100008224	incq	%r11
0000000100008227	cmpq	%r10, %rbx
000000010000822a	movl	$0x0, %ecx
000000010000822f	movq	-0x68(%rbp), %r12
0000000100008233	cmoveq	%r12, %rcx
0000000100008237	movq	-0x70(%rbp), %r8
000000010000823b	movq	%r8, %rdx
000000010000823e	negq	%rdx
0000000100008241	cmpq	%r9, %r11
0000000100008244	movl	$0x0, %esi
0000000100008249	cmovneq	%rsi, %rdx
000000010000824d	leaq	(%rcx,%rcx,4), %rcx
0000000100008251	leaq	(%rax,%rcx,8), %rax
0000000100008255	leaq	(%rdx,%rdx,4), %rcx
0000000100008259	leaq	(%r13,%rcx,8), %r13
000000010000825e	cmpq	$0x2828, %r14                   ## imm = 0x2828
0000000100008265	jb	0x100008600
000000010000826b	movq	%r13, %r14
000000010000826e	subq	%rax, %r14
0000000100008271	cmpq	$0x2828, %r14                   ## imm = 0x2828
0000000100008278	jae	0x1000082be
000000010000827a	movzwl	%r14w, %ecx
000000010000827e	imull	$0xcccd, %ecx, %esi             ## imm = 0xCCCD
0000000100008284	shrl	$0x15, %esi
0000000100008287	cmpq	%r10, %rbx
000000010000828a	setb	%cl
000000010000828d	cmpq	%r9, %r11
0000000100008290	setb	%dil
0000000100008294	orb	%cl, %dil
0000000100008297	leaq	-0x80(%rsi), %rcx
000000010000829b	testb	%dil, %dil
000000010000829e	cmoveq	%rsi, %rcx
00000001000082a2	cmpq	%r10, %rbx
00000001000082a5	cmovbq	%rcx, %r8
00000001000082a9	cmovaeq	%rcx, %r12
00000001000082ad	testb	%dil, %dil
00000001000082b0	jne	0x1000082be
00000001000082b2	movq	%rcx, %r12
00000001000082b5	shrq	%r12
00000001000082b8	subq	%r12, %rcx
00000001000082bb	movq	%rcx, %r8
00000001000082be	movq	%r12, -0x68(%rbp)
00000001000082c2	movq	%r8, -0x70(%rbp)
00000001000082c6	cmpq	%r10, %rbx
00000001000082c9	je	0x100008420
00000001000082cf	cmpq	%r9, %r11
00000001000082d2	je	0x100008460
00000001000082d8	movq	%r10, %rcx
00000001000082db	subq	%rbx, %rcx
00000001000082de	movq	%r9, %r12
00000001000082e1	subq	%r11, %r12
00000001000082e4	cmpq	%r12, %rcx
00000001000082e7	cmovbq	%rcx, %r12
00000001000082eb	testq	%r12, %r12
00000001000082ee	je	0x100008227
00000001000082f4	movzbl	(%rbx), %ecx
00000001000082f7	leaq	(%rcx,%rcx,4), %rcx
00000001000082fb	movq	0x20(%rax,%rcx,8), %rdx
0000000100008300	movq	%rdx, -0x30(%rbp)
0000000100008304	movq	0x18(%rax,%rcx,8), %rdx
0000000100008309	movq	%rdx, -0x38(%rbp)
000000010000830d	movq	0x10(%rax,%rcx,8), %rdx
0000000100008312	movq	%rdx, -0x40(%rbp)
0000000100008316	movq	(%rax,%rcx,8), %rdx
000000010000831a	movq	0x8(%rax,%rcx,8), %rcx
000000010000831f	movq	%rcx, -0x48(%rbp)
0000000100008323	movq	%rdx, -0x50(%rbp)
0000000100008327	movzbl	(%r11), %ecx
000000010000832b	movq	%rcx, %r8
000000010000832e	notq	%r8
0000000100008331	leaq	(%r8,%r8,4), %rdx
0000000100008335	movzbl	(%rbx), %esi
0000000100008338	leaq	(%rsi,%rsi,4), %rsi
000000010000833c	movq	0x20(%r13,%rdx,8), %rdi
0000000100008341	movq	%rdi, 0x20(%rax,%rsi,8)
0000000100008346	movq	0x18(%r13,%rdx,8), %rdi
000000010000834b	movq	%rdi, 0x18(%rax,%rsi,8)
0000000100008350	movq	0x10(%r13,%rdx,8), %rdi
0000000100008355	movq	%rdi, 0x10(%rax,%rsi,8)
000000010000835a	movq	(%r13,%rdx,8), %rdi
000000010000835f	movq	0x8(%r13,%rdx,8), %rdx
0000000100008364	movq	%rdx, 0x8(%rax,%rsi,8)
0000000100008369	movq	%rdi, (%rax,%rsi,8)
000000010000836d	cmpq	$0x1, %r12
0000000100008371	je	0x1000081f0
0000000100008377	decq	%r12
000000010000837a	nopw	(%rax,%rax)
0000000100008380	movzbl	0x1(%rbx), %edx
0000000100008384	incq	%rbx
0000000100008387	leaq	(%rdx,%rdx,4), %rsi
000000010000838b	movzbl	%cl, %ecx
000000010000838e	notq	%rcx
0000000100008391	leaq	(%rcx,%rcx,4), %rcx
0000000100008395	movq	0x20(%rax,%rsi,8), %rdx
000000010000839a	movq	%rdx, 0x20(%r13,%rcx,8)
000000010000839f	movq	0x18(%rax,%rsi,8), %rdx
00000001000083a4	movq	%rdx, 0x18(%r13,%rcx,8)
00000001000083a9	movq	0x10(%rax,%rsi,8), %rdx
00000001000083ae	movq	%rdx, 0x10(%r13,%rcx,8)
00000001000083b3	movq	(%rax,%rsi,8), %rdx
00000001000083b7	movq	0x8(%rax,%rsi,8), %rdi
00000001000083bc	movq	%rdi, 0x8(%r13,%rcx,8)
00000001000083c1	movq	%rdx, (%r13,%rcx,8)
00000001000083c6	movzbl	0x1(%r11), %ecx
00000001000083cb	incq	%r11
00000001000083ce	movq	%rcx, %r8
00000001000083d1	notq	%r8
00000001000083d4	leaq	(%r8,%r8,4), %rdx
00000001000083d8	movq	0x20(%r13,%rdx,8), %rdi
00000001000083dd	movq	%rdi, 0x20(%rax,%rsi,8)
00000001000083e2	movq	0x18(%r13,%rdx,8), %rdi
00000001000083e7	movq	%rdi, 0x18(%rax,%rsi,8)
00000001000083ec	movq	0x10(%r13,%rdx,8), %rdi
00000001000083f1	movq	%rdi, 0x10(%rax,%rsi,8)
00000001000083f6	movq	(%r13,%rdx,8), %rdi
00000001000083fb	movq	0x8(%r13,%rdx,8), %rdx
0000000100008400	movq	%rdx, 0x8(%rax,%rsi,8)
0000000100008405	movq	%rdi, (%rax,%rsi,8)
0000000100008409	decq	%r12
000000010000840c	jne	0x100008380
0000000100008412	jmp	0x1000081f0
0000000100008417	nopw	(%rax,%rax)
0000000100008420	movq	-0x68(%rbp), %rsi
0000000100008424	testq	%rsi, %rsi
0000000100008427	je	0x10000848b
0000000100008429	movl	%esi, %r12d
000000010000842c	andl	$0x3, %r12d
0000000100008430	cmpq	$0x4, %rsi
0000000100008434	leaq	-0x1c0(%rbp), %rbx
000000010000843b	jae	0x1000084a9
000000010000843d	movq	%rbx, %r10
0000000100008440	movq	%rax, %r8
0000000100008443	xorl	%ecx, %ecx
0000000100008445	testq	%r12, %r12
0000000100008448	jne	0x100008520
000000010000844e	jmp	0x1000082cf
0000000100008453	nopw	%cs:(%rax,%rax)
000000010000845d	nopl	(%rax)
0000000100008460	movq	-0x70(%rbp), %r8
0000000100008464	testq	%r8, %r8
0000000100008467	je	0x10000849a
0000000100008469	movl	%r8d, %ecx
000000010000846c	andl	$0x3, %ecx
000000010000846f	cmpq	$0x4, %r8
0000000100008473	jae	0x100008542
0000000100008479	leaq	-0x118(%rbp), %r9
0000000100008480	xorl	%r12d, %r12d
0000000100008483	movq	%r13, %rsi
0000000100008486	jmp	0x1000085b1
000000010000848b	leaq	-0x1c0(%rbp), %rbx
0000000100008492	movq	%rbx, %r10
0000000100008495	jmp	0x1000082cf
000000010000849a	leaq	-0x118(%rbp), %r11
00000001000084a1	movq	%r11, %r9
00000001000084a4	jmp	0x1000082d8
00000001000084a9	andq	$-0x4, %rsi
00000001000084ad	movq	%rbx, %r10
00000001000084b0	movq	%rax, %r8
00000001000084b3	xorl	%ecx, %ecx
00000001000084b5	nopw	%cs:(%rax,%rax)
00000001000084bf	nop
00000001000084c0	movl	%ecx, %edi
00000001000084c2	movb	%cl, (%r10)
00000001000084c5	cmpq	%r15, 0x10(%r8)
00000001000084c9	sbbq	$-0x1, %r10
00000001000084cd	leal	0x1(%rdi), %ebx
00000001000084d0	movb	%bl, (%r10)
00000001000084d3	cmpq	%r15, 0x38(%r8)
00000001000084d7	sbbq	$-0x1, %r10
00000001000084db	leal	0x2(%rdi), %ebx
00000001000084de	cmpq	%r15, 0x60(%r8)
00000001000084e2	movb	%bl, (%r10)
00000001000084e5	sbbq	$-0x1, %r10
00000001000084e9	addq	$0x4, %rcx
00000001000084ed	addl	$0x3, %edi
00000001000084f0	movb	%dil, (%r10)
00000001000084f3	cmpq	%r15, 0x88(%r8)
00000001000084fa	sbbq	$-0x1, %r10
00000001000084fe	addq	$0xa0, %r8
0000000100008505	cmpq	%rcx, %rsi
0000000100008508	jne	0x1000084c0
000000010000850a	leaq	-0x1c0(%rbp), %rbx
0000000100008511	testq	%r12, %r12
0000000100008514	je	0x1000082cf
000000010000851a	nopw	(%rax,%rax)
0000000100008520	movb	%cl, (%r10)
0000000100008523	cmpq	%r15, 0x10(%r8)
0000000100008527	sbbq	$-0x1, %r10
000000010000852b	incb	%cl
000000010000852d	addq	$0x28, %r8
0000000100008531	decq	%r12
0000000100008534	jne	0x100008520
0000000100008536	leaq	-0x1c0(%rbp), %rbx
000000010000853d	jmp	0x1000082cf
0000000100008542	andq	$-0x4, %r8
0000000100008546	leaq	-0x118(%rbp), %r9
000000010000854d	xorl	%edi, %edi
000000010000854f	movq	%r13, %r11
0000000100008552	xorl	%r12d, %r12d
0000000100008555	nopw	%cs:(%rax,%rax)
000000010000855f	nop
0000000100008560	movb	%dil, (%r9)
0000000100008563	xorl	%esi, %esi
0000000100008565	cmpq	%r15, -0x18(%r11)
0000000100008569	setb	%sil
000000010000856d	leal	0x1(%rdi), %edx
0000000100008570	cmpq	%r15, -0x40(%r11)
0000000100008574	movb	%dl, (%r9,%rsi)
0000000100008578	adcq	%rsi, %r9
000000010000857b	leal	0x2(%rdi), %edx
000000010000857e	movb	%dl, (%r9)
0000000100008581	xorl	%edx, %edx
0000000100008583	cmpq	%r15, -0x68(%r11)
0000000100008587	setb	%dl
000000010000858a	addq	$0x4, %r12
000000010000858e	leal	0x3(%rdi), %esi
0000000100008591	movb	%sil, (%r9,%rdx)
0000000100008595	cmpq	%r15, -0x90(%r11)
000000010000859c	adcq	%rdx, %r9
000000010000859f	leaq	-0xa0(%r11), %rsi
00000001000085a6	movq	%r12, %rdi
00000001000085a9	movq	%rsi, %r11
00000001000085ac	cmpq	%r12, %r8
00000001000085af	jne	0x100008560
00000001000085b1	leaq	-0x118(%rbp), %r11
00000001000085b8	testq	%rcx, %rcx
00000001000085bb	je	0x1000082d8
00000001000085c1	shlq	$0x3, %rcx
00000001000085c5	leaq	(%rcx,%rcx,4), %rcx
00000001000085c9	xorl	%edi, %edi
00000001000085cb	nopl	(%rax,%rax)
00000001000085d0	movb	%r12b, (%r9)
00000001000085d3	cmpq	%r15, -0x18(%rsi,%rdi)
00000001000085d8	adcq	$0x0, %r9
00000001000085dc	incb	%r12b
00000001000085df	addq	$-0x28, %rdi
00000001000085e3	movq	%rcx, %r8
00000001000085e6	addq	%rdi, %r8
00000001000085e9	jne	0x1000085d0
00000001000085eb	leaq	-0x118(%rbp), %r11
00000001000085f2	jmp	0x1000082d8
00000001000085f7	nopw	(%rax,%rax)
0000000100008600	cmpq	%r10, %rbx
0000000100008603	jae	0x100008620
0000000100008605	movl	%r10d, %ecx
0000000100008608	subl	%ebx, %ecx
000000010000860a	testb	$0x1, %cl
000000010000860d	jne	0x100008653
000000010000860f	movq	%r10, %r9
0000000100008612	jmp	0x1000086e7
0000000100008617	nopw	(%rax,%rax)
0000000100008620	cmpq	%r9, %r11
0000000100008623	jae	0x10000882b
0000000100008629	movl	%r9d, %ecx
000000010000862c	subl	%r11d, %ecx
000000010000862f	testb	$0x1, %cl
0000000100008632	movq	-0x80(%rbp), %r14
0000000100008636	jne	0x100008837
000000010000863c	movq	%r9, %r10
000000010000863f	movq	%r11, %rcx
0000000100008642	notq	%rcx
0000000100008645	addq	%r9, %rcx
0000000100008648	jne	0x1000088e0
000000010000864e	jmp	0x100008a10
0000000100008653	leaq	-0x1(%r10), %r9
0000000100008657	movzbl	-0x1(%r10), %ecx
000000010000865c	leaq	(%rcx,%rcx,4), %rcx
0000000100008660	leaq	-0x28(%r13), %rdx
0000000100008664	movq	0x20(%rax,%rcx,8), %rsi
0000000100008669	movq	%rsi, -0x30(%rbp)
000000010000866d	movq	0x18(%rax,%rcx,8), %rsi
0000000100008672	movq	%rsi, -0x38(%rbp)
0000000100008676	movq	0x10(%rax,%rcx,8), %rsi
000000010000867b	movq	%rsi, -0x40(%rbp)
000000010000867f	movq	(%rax,%rcx,8), %rsi
0000000100008683	movq	0x8(%rax,%rcx,8), %rdi
0000000100008688	movq	%rdi, -0x48(%rbp)
000000010000868c	movq	%rsi, -0x50(%rbp)
0000000100008690	movq	-0x8(%r13), %rsi
0000000100008694	movq	-0x10(%r13), %rdi
0000000100008698	movq	-0x18(%r13), %r8
000000010000869c	movq	-0x28(%r13), %r11
00000001000086a0	movq	-0x20(%r13), %r14
00000001000086a4	movq	%r11, (%rax,%rcx,8)
00000001000086a8	movq	%r14, 0x8(%rax,%rcx,8)
00000001000086ad	movq	%r8, 0x10(%rax,%rcx,8)
00000001000086b2	movq	%rdi, 0x18(%rax,%rcx,8)
00000001000086b7	movq	%rsi, 0x20(%rax,%rcx,8)
00000001000086bc	movq	-0x30(%rbp), %rcx
00000001000086c0	movq	%rcx, -0x8(%r13)
00000001000086c4	movq	-0x38(%rbp), %rcx
00000001000086c8	movq	%rcx, -0x10(%r13)
00000001000086cc	movq	-0x40(%rbp), %rcx
00000001000086d0	movq	%rcx, -0x18(%r13)
00000001000086d4	movq	-0x50(%rbp), %rcx
00000001000086d8	movq	-0x48(%rbp), %rsi
00000001000086dc	movq	%rsi, -0x20(%r13)
00000001000086e0	movq	%rcx, -0x28(%r13)
00000001000086e4	movq	%rdx, %r13
00000001000086e7	movq	-0x80(%rbp), %r14
00000001000086eb	movq	%rbx, %rcx
00000001000086ee	notq	%rcx
00000001000086f1	addq	%r10, %rcx
00000001000086f4	je	0x100008a10
00000001000086fa	nopw	(%rax,%rax)
0000000100008700	movzbl	-0x1(%r9), %ecx
0000000100008705	leaq	(%rcx,%rcx,4), %rcx
0000000100008709	movq	0x20(%rax,%rcx,8), %rdx
000000010000870e	movq	%rdx, -0x30(%rbp)
0000000100008712	movq	0x18(%rax,%rcx,8), %rdx
0000000100008717	movq	%rdx, -0x38(%rbp)
000000010000871b	movq	0x10(%rax,%rcx,8), %rdx
0000000100008720	movq	%rdx, -0x40(%rbp)
0000000100008724	movq	(%rax,%rcx,8), %rdx
0000000100008728	movq	0x8(%rax,%rcx,8), %rsi
000000010000872d	movq	%rsi, -0x48(%rbp)
0000000100008731	movq	%rdx, -0x50(%rbp)
0000000100008735	movq	-0x8(%r13), %rdx
0000000100008739	movq	-0x10(%r13), %rsi
000000010000873d	movq	-0x18(%r13), %rdi
0000000100008741	movq	-0x28(%r13), %r8
0000000100008745	movq	-0x20(%r13), %r10
0000000100008749	movq	%r8, (%rax,%rcx,8)
000000010000874d	movq	%r10, 0x8(%rax,%rcx,8)
0000000100008752	movq	%rdi, 0x10(%rax,%rcx,8)
0000000100008757	movq	%rsi, 0x18(%rax,%rcx,8)
000000010000875c	movq	%rdx, 0x20(%rax,%rcx,8)
0000000100008761	movq	-0x30(%rbp), %rcx
0000000100008765	movq	%rcx, -0x8(%r13)
0000000100008769	movq	-0x38(%rbp), %rcx
000000010000876d	movq	%rcx, -0x10(%r13)
0000000100008771	movq	-0x40(%rbp), %rcx
0000000100008775	movq	%rcx, -0x18(%r13)
0000000100008779	movq	-0x50(%rbp), %rcx
000000010000877d	movq	-0x48(%rbp), %rdx
0000000100008781	movq	%rdx, -0x20(%r13)
0000000100008785	movq	%rcx, -0x28(%r13)
0000000100008789	movzbl	-0x2(%r9), %ecx
000000010000878e	addq	$-0x2, %r9
0000000100008792	leaq	(%rcx,%rcx,4), %rcx
0000000100008796	leaq	-0x50(%r13), %rdx
000000010000879a	movq	0x20(%rax,%rcx,8), %rsi
000000010000879f	movq	%rsi, -0x30(%rbp)
00000001000087a3	movq	0x18(%rax,%rcx,8), %rsi
00000001000087a8	movq	%rsi, -0x38(%rbp)
00000001000087ac	movq	0x10(%rax,%rcx,8), %rsi
00000001000087b1	movq	%rsi, -0x40(%rbp)
00000001000087b5	movq	(%rax,%rcx,8), %rsi
00000001000087b9	movq	0x8(%rax,%rcx,8), %rdi
00000001000087be	movq	%rdi, -0x48(%rbp)
00000001000087c2	movq	%rsi, -0x50(%rbp)
00000001000087c6	movq	-0x30(%r13), %rsi
00000001000087ca	movq	-0x38(%r13), %rdi
00000001000087ce	movq	-0x40(%r13), %r8
00000001000087d2	movq	-0x50(%r13), %r10
00000001000087d6	movq	-0x48(%r13), %r11
00000001000087da	movq	%r10, (%rax,%rcx,8)
00000001000087de	movq	%r11, 0x8(%rax,%rcx,8)
00000001000087e3	movq	%r8, 0x10(%rax,%rcx,8)
00000001000087e8	movq	%rdi, 0x18(%rax,%rcx,8)
00000001000087ed	movq	%rsi, 0x20(%rax,%rcx,8)
00000001000087f2	movq	-0x30(%rbp), %rcx
00000001000087f6	movq	%rcx, -0x30(%r13)
00000001000087fa	movq	-0x38(%rbp), %rcx
00000001000087fe	movq	%rcx, -0x38(%r13)
0000000100008802	movq	-0x40(%rbp), %rcx
0000000100008806	movq	%rcx, -0x40(%r13)
000000010000880a	movq	-0x50(%rbp), %rcx
000000010000880e	movq	-0x48(%rbp), %rsi
0000000100008812	movq	%rsi, -0x48(%r13)
0000000100008816	movq	%rcx, -0x50(%r13)
000000010000881a	movq	%rdx, %r13
000000010000881d	cmpq	%r9, %rbx
0000000100008820	jb	0x100008700
0000000100008826	jmp	0x100008a10
000000010000882b	movq	%rax, %rdx
000000010000882e	movq	-0x80(%rbp), %r14
0000000100008832	jmp	0x100008a10
0000000100008837	leaq	-0x1(%r9), %r10
000000010000883b	movzbl	-0x1(%r9), %ecx
0000000100008840	notq	%rcx
0000000100008843	leaq	(%rcx,%rcx,4), %rcx
0000000100008847	movq	0x20(%rax), %rdx
000000010000884b	movq	%rdx, -0x30(%rbp)
000000010000884f	movq	0x18(%rax), %rdx
0000000100008853	movq	%rdx, -0x38(%rbp)
0000000100008857	movq	0x10(%rax), %rdx
000000010000885b	movq	%rdx, -0x40(%rbp)
000000010000885f	movq	(%rax), %rdx
0000000100008862	movq	0x8(%rax), %rsi
0000000100008866	movq	%rsi, -0x48(%rbp)
000000010000886a	movq	%rdx, -0x50(%rbp)
000000010000886e	movq	0x20(%r13,%rcx,8), %rdx
0000000100008873	movq	0x18(%r13,%rcx,8), %rsi
0000000100008878	movq	0x10(%r13,%rcx,8), %rdi
000000010000887d	movq	(%r13,%rcx,8), %r8
0000000100008882	movq	0x8(%r13,%rcx,8), %rbx
0000000100008887	movq	%r8, (%rax)
000000010000888a	movq	%rbx, 0x8(%rax)
000000010000888e	movq	%rdi, 0x10(%rax)
0000000100008892	movq	%rsi, 0x18(%rax)
0000000100008896	movq	%rdx, 0x20(%rax)
000000010000889a	movq	-0x30(%rbp), %rdx
000000010000889e	movq	%rdx, 0x20(%r13,%rcx,8)
00000001000088a3	movq	-0x38(%rbp), %rdx
00000001000088a7	movq	%rdx, 0x18(%r13,%rcx,8)
00000001000088ac	movq	-0x40(%rbp), %rdx
00000001000088b0	movq	%rdx, 0x10(%r13,%rcx,8)
00000001000088b5	movq	-0x50(%rbp), %rdx
00000001000088b9	movq	-0x48(%rbp), %rsi
00000001000088bd	movq	%rsi, 0x8(%r13,%rcx,8)
00000001000088c2	movq	%rdx, (%r13,%rcx,8)
00000001000088c7	addq	$0x28, %rax
00000001000088cb	movq	%rax, %rdx
00000001000088ce	movq	%r11, %rcx
00000001000088d1	notq	%rcx
00000001000088d4	addq	%r9, %rcx
00000001000088d7	je	0x100008a10
00000001000088dd	nopl	(%rax)
00000001000088e0	movzbl	-0x1(%r10), %ecx
00000001000088e5	notq	%rcx
00000001000088e8	leaq	(%rcx,%rcx,4), %rcx
00000001000088ec	movq	0x20(%rax), %rdx
00000001000088f0	movq	%rdx, -0x30(%rbp)
00000001000088f4	movq	0x18(%rax), %rdx
00000001000088f8	movq	%rdx, -0x38(%rbp)
00000001000088fc	movq	0x10(%rax), %rdx
0000000100008900	movq	%rdx, -0x40(%rbp)
0000000100008904	movq	(%rax), %rdx
0000000100008907	movq	0x8(%rax), %rsi
000000010000890b	movq	%rsi, -0x48(%rbp)
000000010000890f	movq	%rdx, -0x50(%rbp)
0000000100008913	movq	0x20(%r13,%rcx,8), %rdx
0000000100008918	movq	0x18(%r13,%rcx,8), %rsi
000000010000891d	movq	0x10(%r13,%rcx,8), %rdi
0000000100008922	movq	(%r13,%rcx,8), %r8
0000000100008927	movq	0x8(%r13,%rcx,8), %r9
000000010000892c	movq	%r8, (%rax)
000000010000892f	movq	%r9, 0x8(%rax)
0000000100008933	movq	%rdi, 0x10(%rax)
0000000100008937	movq	%rsi, 0x18(%rax)
000000010000893b	movq	%rdx, 0x20(%rax)
000000010000893f	movq	-0x30(%rbp), %rdx
0000000100008943	movq	%rdx, 0x20(%r13,%rcx,8)
0000000100008948	movq	-0x38(%rbp), %rdx
000000010000894c	movq	%rdx, 0x18(%r13,%rcx,8)
0000000100008951	movq	-0x40(%rbp), %rdx
0000000100008955	movq	%rdx, 0x10(%r13,%rcx,8)
000000010000895a	movq	-0x50(%rbp), %rdx
000000010000895e	movq	-0x48(%rbp), %rsi
0000000100008962	movq	%rsi, 0x8(%r13,%rcx,8)
0000000100008967	movq	%rdx, (%r13,%rcx,8)
000000010000896c	movzbl	-0x2(%r10), %ecx
0000000100008971	addq	$-0x2, %r10
0000000100008975	notq	%rcx
0000000100008978	leaq	(%rcx,%rcx,4), %rcx
000000010000897c	movq	0x48(%rax), %rdx
0000000100008980	movq	%rdx, -0x30(%rbp)
0000000100008984	movq	0x40(%rax), %rdx
0000000100008988	movq	%rdx, -0x38(%rbp)
000000010000898c	movq	0x38(%rax), %rdx
0000000100008990	movq	%rdx, -0x40(%rbp)
0000000100008994	movq	0x28(%rax), %rdx
0000000100008998	movq	0x30(%rax), %rsi
000000010000899c	movq	%rsi, -0x48(%rbp)
00000001000089a0	movq	%rdx, -0x50(%rbp)
00000001000089a4	movq	0x20(%r13,%rcx,8), %rdx
00000001000089a9	movq	0x18(%r13,%rcx,8), %rsi
00000001000089ae	movq	0x10(%r13,%rcx,8), %rdi
00000001000089b3	movq	(%r13,%rcx,8), %r8
00000001000089b8	movq	0x8(%r13,%rcx,8), %r9
00000001000089bd	movq	%r8, 0x28(%rax)
00000001000089c1	movq	%r9, 0x30(%rax)
00000001000089c5	movq	%rdi, 0x38(%rax)
00000001000089c9	movq	%rsi, 0x40(%rax)
00000001000089cd	movq	%rdx, 0x48(%rax)
00000001000089d1	movq	-0x30(%rbp), %rdx
00000001000089d5	movq	%rdx, 0x20(%r13,%rcx,8)
00000001000089da	movq	-0x38(%rbp), %rdx
00000001000089de	movq	%rdx, 0x18(%r13,%rcx,8)
00000001000089e3	movq	-0x40(%rbp), %rdx
00000001000089e7	movq	%rdx, 0x10(%r13,%rcx,8)
00000001000089ec	movq	-0x50(%rbp), %rdx
00000001000089f0	movq	-0x48(%rbp), %rsi
00000001000089f4	movq	%rsi, 0x8(%r13,%rcx,8)
00000001000089f9	movq	%rdx, (%r13,%rcx,8)
00000001000089fe	addq	$0x50, %rax
0000000100008a02	cmpq	%r10, %r11
0000000100008a05	jb	0x1000088e0
0000000100008a0b	movq	%rax, %rdx
0000000100008a0e	nop
0000000100008a10	subq	%r14, %rdx
0000000100008a13	movq	%rdx, %rax
0000000100008a16	movabsq	$-0x3333333333333333, %rcx      ## imm = 0xCCCCCCCCCCCCCCCD
0000000100008a20	mulq	%rcx
0000000100008a23	movq	%rdx, %r14
0000000100008a26	shrq	$0x5, %r14
0000000100008a2a	movq	-0x90(%rbp), %rdx
0000000100008a31	addq	%rdx, %r14
0000000100008a34	movq	-0x120(%rbp), %rax
0000000100008a3b	movq	-0x60(%rbp), %r15
0000000100008a3f	movq	%rax, 0x20(%r15)
0000000100008a43	movq	-0x128(%rbp), %rax
0000000100008a4a	movq	%rax, 0x18(%r15)
0000000100008a4e	movq	-0x130(%rbp), %rax
0000000100008a55	movq	%rax, 0x10(%r15)
0000000100008a59	movq	-0x140(%rbp), %rax
0000000100008a60	movq	-0x138(%rbp), %rcx
0000000100008a67	movq	%rcx, 0x8(%r15)
0000000100008a6b	movq	%rax, (%r15)
0000000100008a6e	movq	-0x78(%rbp), %rsi
0000000100008a72	movq	%rsi, %r12
0000000100008a75	subq	%r14, %r12
0000000100008a78	jbe	0x100008be3
0000000100008a7e	cmpq	%rdx, -0x98(%rbp)
0000000100008a85	setbe	-0x70(%rbp)
0000000100008a89	leaq	(%r14,%r14,4), %rax
0000000100008a8d	leaq	(%r15,%rax,8), %r13
0000000100008a91	movq	0x20(%r15), %rcx
0000000100008a95	movq	%rcx, -0xf8(%rbp)
0000000100008a9c	movq	0x18(%r15), %rcx
0000000100008aa0	movq	%rcx, -0x100(%rbp)
0000000100008aa7	movq	0x10(%r15), %rcx
0000000100008aab	movq	%rcx, -0x108(%rbp)
0000000100008ab2	movq	(%r15), %rcx
0000000100008ab5	movq	0x8(%r15), %rdx
0000000100008ab9	movq	%rdx, -0x110(%rbp)
0000000100008ac0	movq	%rcx, -0x118(%rbp)
0000000100008ac7	movq	0x20(%r15,%rax,8), %rcx
0000000100008acc	movq	0x18(%r15,%rax,8), %rdx
0000000100008ad1	movq	0x10(%r15,%rax,8), %r9
0000000100008ad6	movq	(%r15,%rax,8), %rdi
0000000100008ada	movq	0x8(%r15,%rax,8), %r8
0000000100008adf	movq	%rdi, (%r15)
0000000100008ae2	movq	%r8, 0x8(%r15)
0000000100008ae6	movq	%r9, 0x10(%r15)
0000000100008aea	movq	%rdx, 0x18(%r15)
0000000100008aee	movq	%rcx, 0x20(%r15)
0000000100008af2	movq	-0xf8(%rbp), %rcx
0000000100008af9	movq	%rcx, 0x20(%r15,%rax,8)
0000000100008afe	movq	-0x100(%rbp), %rcx
0000000100008b05	movq	%rcx, 0x18(%r15,%rax,8)
0000000100008b0a	movq	-0x108(%rbp), %rcx
0000000100008b11	movq	%rcx, 0x10(%r15,%rax,8)
0000000100008b16	movq	-0x118(%rbp), %rcx
0000000100008b1d	movq	-0x110(%rbp), %rdx
0000000100008b24	movq	%rdx, 0x8(%r15,%rax,8)
0000000100008b29	movq	%rcx, (%r15,%rax,8)
0000000100008b2d	cmpq	%r12, %r14
0000000100008b30	movq	%r12, %rcx
0000000100008b33	cmovbq	%r14, %rcx
0000000100008b37	shrq	$0x3, %rsi
0000000100008b3b	cmpq	%rsi, %rcx
0000000100008b3e	setae	-0x68(%rbp)
0000000100008b42	leaq	0x28(%r15,%rax,8), %rbx
0000000100008b47	decq	%r12
0000000100008b4a	cmpq	%r12, %r14
0000000100008b4d	jae	0x100008b80
0000000100008b4f	movq	%r15, %rdi
0000000100008b52	movq	%r14, %rsi
0000000100008b55	movq	-0x88(%rbp), %rdx
0000000100008b5c	movl	-0x54(%rbp), %ecx
0000000100008b5f	callq	__ZN4core5slice4sort7recurse17h1d743a76ec258b0eE ## core::slice::sort::recurse::h1d743a76ec258b0e
0000000100008b64	movq	%r13, -0x88(%rbp)
0000000100008b6b	movq	%r12, %r14
0000000100008b6e	movq	%rbx, %r13
0000000100008b71	jmp	0x100008b94
0000000100008b73	nopw	%cs:(%rax,%rax)
0000000100008b7d	nopl	(%rax)
0000000100008b80	movq	%rbx, %rdi
0000000100008b83	movq	%r12, %rsi
0000000100008b86	movq	%r13, %rdx
0000000100008b89	movl	-0x54(%rbp), %ecx
0000000100008b8c	callq	__ZN4core5slice4sort7recurse17h1d743a76ec258b0eE ## core::slice::sort::recurse::h1d743a76ec258b0e
0000000100008b91	movq	%r15, %r13
0000000100008b94	movq	%r14, -0x78(%rbp)
0000000100008b98	movq	%r13, -0x60(%rbp)
0000000100008b9c	cmpq	$0x15, %r14
0000000100008ba0	movzbl	-0x70(%rbp), %ecx
0000000100008ba4	jae	0x100007ae0
0000000100008baa	jmp	0x100007aaa
0000000100008baf	movq	%r13, %rdi
0000000100008bb2	movq	%rbx, %rsi
0000000100008bb5	callq	__ZN4core5slice4sort8heapsort17hbf70ec74e8aafa1cE ## core::slice::sort::heapsort::hbf70ec74e8aafa1c
0000000100008bba	jmp	0x100007ac0
0000000100008bbf	leaq	0x3f962(%rip), %rdx
0000000100008bc6	movq	%r14, %rdi
0000000100008bc9	movq	%rbx, %rsi
0000000100008bcc	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100008bd1	leaq	0x3f9c8(%rip), %rdx
0000000100008bd8	movq	%r14, %rdi
0000000100008bdb	movq	%r12, %rsi
0000000100008bde	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100008be3	leaq	0x3f9e6(%rip), %rdx
0000000100008bea	movq	%r14, %rdi
0000000100008bed	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100008bf2	leaq	0x3f947(%rip), %rdx
0000000100008bf9	movq	%rbx, %rsi
0000000100008bfc	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100008c01	leaq	0x3f9b0(%rip), %rdx
0000000100008c08	movq	-0x98(%rbp), %rdi
0000000100008c0f	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100008c14	jmp	0x100008c25
0000000100008c16	leaq	0x3f99b(%rip), %rdx
0000000100008c1d	movq	%r9, %rsi
0000000100008c20	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
0000000100008c25	ud2
0000000100008c27	movq	%rax, %rbx
0000000100008c2a	leaq	-0x140(%rbp), %rdi
0000000100008c31	movq	-0x60(%rbp), %rsi
0000000100008c35	callq	__ZN4core3ptr89drop_in_place$LT$core..slice..sort..InsertionHole$LT$object..read..ObjectMapEntry$GT$$GT$17h8a590e2526e0c478E ## core::ptr::drop_in_place$LT$core..slice..sort..InsertionHole$LT$object..read..ObjectMapEntry$GT$$GT$::h8a590e2526e0c478
0000000100008c3a	movq	%rbx, %rdi
0000000100008c3d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100008c42	nopw	%cs:(%rax,%rax)
0000000100008c4c	nopl	(%rax)
__ZN4core5slice4sort7recurse17h6e6d81cd3b2631beE:
0000000100008c50	pushq	%rbp
0000000100008c51	movq	%rsp, %rbp
0000000100008c54	pushq	%r15
0000000100008c56	pushq	%r14
0000000100008c58	pushq	%r13
0000000100008c5a	pushq	%r12
0000000100008c5c	pushq	%rbx
0000000100008c5d	subq	$0x178, %rsp                    ## imm = 0x178
0000000100008c64	movl	%ecx, -0x44(%rbp)
0000000100008c67	movq	%rdx, -0x60(%rbp)
0000000100008c6b	cmpq	$0x15, %rsi
0000000100008c6f	jae	0x100008c9f
0000000100008c71	movq	%rsi, %r14
0000000100008c74	movq	%rdi, %r13
0000000100008c77	cmpq	$0x1, %r14
0000000100008c7b	jbe	0x100008c8d
0000000100008c7d	movl	$0x1, %edx
0000000100008c82	movq	%r13, %rdi
0000000100008c85	movq	%r14, %rsi
0000000100008c88	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E ## core::slice::sort::insertion_sort_shift_left::h567b21521a376ea8
0000000100008c8d	addq	$0x178, %rsp                    ## imm = 0x178
0000000100008c94	popq	%rbx
0000000100008c95	popq	%r12
0000000100008c97	popq	%r13
0000000100008c99	popq	%r14
0000000100008c9b	popq	%r15
0000000100008c9d	popq	%rbp
0000000100008c9e	retq
0000000100008c9f	movq	%rsi, -0x58(%rbp)
0000000100008ca3	movq	%rdi, -0x50(%rbp)
0000000100008ca7	movb	$0x1, %r15b
0000000100008caa	movb	$0x1, %cl
0000000100008cac	testb	%r15b, %r15b
0000000100008caf	sete	%al
0000000100008cb2	testb	%cl, %cl
0000000100008cb4	sete	%bl
0000000100008cb7	orb	%al, %bl
0000000100008cb9	movq	-0x50(%rbp), %r13
0000000100008cbd	movq	-0x58(%rbp), %r12
0000000100008cc1	nopw	%cs:(%rax,%rax)
0000000100008ccb	nopl	(%rax,%rax)
0000000100008cd0	cmpl	$0x0, -0x44(%rbp)
0000000100008cd4	je	0x100009a6c
0000000100008cda	testb	%r15b, %r15b
0000000100008cdd	je	0x100009114
0000000100008ce3	movq	%r12, %rcx
0000000100008ce6	shrq	$0x2, %rcx
0000000100008cea	leaq	(%rcx,%rcx), %r14
0000000100008cee	leaq	(%rcx,%rcx,2), %rax
0000000100008cf2	cmpq	$0x31, %r12
0000000100008cf6	jbe	0x100008d30
0000000100008cf8	leaq	-0x1(%rcx), %rsi
0000000100008cfc	leaq	0x1(%rcx), %rdi
0000000100008d00	leaq	(%rcx,%rcx,2), %r8
0000000100008d04	movq	-0x8(%r13,%r8,8), %rdx
0000000100008d09	movq	0x10(%r13,%r8,8), %r8
0000000100008d0e	cmpq	%rdx, %r8
0000000100008d11	jae	0x100008d40
0000000100008d13	movl	$0x1, %r10d
0000000100008d19	movq	%r8, %r9
0000000100008d1c	movq	%rsi, %r11
0000000100008d1f	movq	%rcx, %rsi
0000000100008d22	movq	%rdx, %r8
0000000100008d25	jmp	0x100008d49
0000000100008d27	nopw	(%rax,%rax)
0000000100008d30	xorl	%edx, %edx
0000000100008d32	jmp	0x100008e32
0000000100008d37	nopw	(%rax,%rax)
0000000100008d40	movq	%rdx, %r9
0000000100008d43	xorl	%r10d, %r10d
0000000100008d46	movq	%rcx, %r11
0000000100008d49	leaq	(%rdi,%rdi,2), %rcx
0000000100008d4d	movq	0x10(%r13,%rcx,8), %rcx
0000000100008d52	xorl	%edx, %edx
0000000100008d54	cmpq	%r8, %rcx
0000000100008d57	cmovbq	%rdi, %r11
0000000100008d5b	cmovbq	%rcx, %r8
0000000100008d5f	setb	%dl
0000000100008d62	cmpq	%r9, %r8
0000000100008d65	adcq	%r10, %rdx
0000000100008d68	cmpq	%r9, %r8
0000000100008d6b	movq	%r11, %rcx
0000000100008d6e	cmovbq	%rsi, %rcx
0000000100008d72	leaq	-0x1(%r14), %rsi
0000000100008d76	movq	%r14, %rdi
0000000100008d79	orq	$0x1, %rdi
0000000100008d7d	leaq	(%r14,%r14,2), %r9
0000000100008d81	movq	-0x8(%r13,%r9,8), %r8
0000000100008d86	movq	0x10(%r13,%r9,8), %r11
0000000100008d8b	cmpq	%r8, %r11
0000000100008d8e	jae	0x100008da0
0000000100008d90	incq	%rdx
0000000100008d93	movq	%r11, %r9
0000000100008d96	movq	%rsi, %r10
0000000100008d99	jmp	0x100008dac
0000000100008d9b	nopl	(%rax,%rax)
0000000100008da0	movq	%r8, %r9
0000000100008da3	movq	%r14, %r10
0000000100008da6	movq	%rsi, %r14
0000000100008da9	movq	%r11, %r8
0000000100008dac	movq	%r14, %r11
0000000100008daf	leaq	(%rdi,%rdi,2), %rsi
0000000100008db3	movq	0x10(%r13,%rsi,8), %r14
0000000100008db8	xorl	%esi, %esi
0000000100008dba	cmpq	%r8, %r14
0000000100008dbd	cmovbq	%rdi, %r10
0000000100008dc1	setb	%sil
0000000100008dc5	cmovbq	%r14, %r8
0000000100008dc9	cmpq	%r9, %r8
0000000100008dcc	adcq	%rdx, %rsi
0000000100008dcf	cmpq	%r9, %r8
0000000100008dd2	movq	%r10, %r14
0000000100008dd5	cmovbq	%r11, %r14
0000000100008dd9	leaq	-0x1(%rax), %rdx
0000000100008ddd	leaq	0x1(%rax), %rdi
0000000100008de1	leaq	(%rax,%rax,2), %r9
0000000100008de5	movq	-0x8(%r13,%r9,8), %r8
0000000100008dea	movq	0x10(%r13,%r9,8), %r11
0000000100008def	cmpq	%r8, %r11
0000000100008df2	jae	0x100008e00
0000000100008df4	incq	%rsi
0000000100008df7	movq	%r11, %r9
0000000100008dfa	movq	%rdx, %r10
0000000100008dfd	jmp	0x100008e0c
0000000100008dff	nop
0000000100008e00	movq	%r8, %r9
0000000100008e03	movq	%rax, %r10
0000000100008e06	movq	%rdx, %rax
0000000100008e09	movq	%r11, %r8
0000000100008e0c	leaq	(%rdi,%rdi,2), %rdx
0000000100008e10	movq	0x10(%r13,%rdx,8), %r11
0000000100008e15	xorl	%edx, %edx
0000000100008e17	cmpq	%r8, %r11
0000000100008e1a	cmovbq	%rdi, %r10
0000000100008e1e	cmovbq	%r11, %r8
0000000100008e22	setb	%dl
0000000100008e25	cmpq	%r9, %r8
0000000100008e28	adcq	%rsi, %rdx
0000000100008e2b	cmpq	%r9, %r8
0000000100008e2e	cmovaeq	%r10, %rax
0000000100008e32	leaq	(%r14,%r14,2), %rsi
0000000100008e36	movq	0x10(%r13,%rsi,8), %r9
0000000100008e3b	leaq	(%rcx,%rcx,2), %rsi
0000000100008e3f	movq	0x10(%r13,%rsi,8), %rsi
0000000100008e44	cmpq	%rsi, %r9
0000000100008e47	jae	0x100008e60
0000000100008e49	incq	%rdx
0000000100008e4c	movq	%r9, %rdi
0000000100008e4f	movq	%rcx, %r8
0000000100008e52	jmp	0x100008e6c
0000000100008e54	nopw	%cs:(%rax,%rax)
0000000100008e5e	nop
0000000100008e60	movq	%rsi, %rdi
0000000100008e63	movq	%r14, %r8
0000000100008e66	movq	%rcx, %r14
0000000100008e69	movq	%r9, %rsi
0000000100008e6c	leaq	(%rax,%rax,2), %rcx
0000000100008e70	movq	0x10(%r13,%rcx,8), %rcx
0000000100008e75	cmpq	%rsi, %rcx
0000000100008e78	adcq	$0x0, %rdx
0000000100008e7c	cmpq	%rsi, %rcx
0000000100008e7f	cmovbq	%rax, %r8
0000000100008e83	cmovbq	%rcx, %rsi
0000000100008e87	cmpq	%rdi, %rsi
0000000100008e8a	jae	0x100008ea0
0000000100008e8c	cmpq	$0xb, %rdx
0000000100008e90	jae	0x100008ec0
0000000100008e92	incq	%rdx
0000000100008e95	jmp	0x100008ea3
0000000100008e97	nopw	(%rax,%rax)
0000000100008ea0	movq	%r8, %r14
0000000100008ea3	testq	%rdx, %rdx
0000000100008ea6	sete	%al
0000000100008ea9	testb	%al, %al
0000000100008eab	sete	%al
0000000100008eae	orb	%bl, %al
0000000100008eb0	jne	0x100008f58
0000000100008eb6	jmp	0x100009127
0000000100008ebb	nopl	(%rax,%rax)
0000000100008ec0	movq	%r12, %rax
0000000100008ec3	shrq	%rax
0000000100008ec6	leaq	(%r12,%r12,2), %rcx
0000000100008eca	leaq	-0x18(%r13,%rcx,8), %rcx
0000000100008ecf	movq	%r13, %rdx
0000000100008ed2	nopw	%cs:(%rax,%rax)
0000000100008edc	nopl	(%rax)
0000000100008ee0	movq	0x10(%rdx), %rsi
0000000100008ee4	movq	%rsi, -0x100(%rbp)
0000000100008eeb	movq	(%rdx), %rsi
0000000100008eee	movq	0x8(%rdx), %rdi
0000000100008ef2	movq	%rdi, -0x108(%rbp)
0000000100008ef9	movq	%rsi, -0x110(%rbp)
0000000100008f00	movq	0x10(%rcx), %rsi
0000000100008f04	movq	%rsi, 0x10(%rdx)
0000000100008f08	movq	(%rcx), %rsi
0000000100008f0b	movq	0x8(%rcx), %rdi
0000000100008f0f	movq	%rdi, 0x8(%rdx)
0000000100008f13	movq	%rsi, (%rdx)
0000000100008f16	movq	-0x100(%rbp), %rsi
0000000100008f1d	movq	%rsi, 0x10(%rcx)
0000000100008f21	movq	-0x110(%rbp), %rsi
0000000100008f28	movq	-0x108(%rbp), %rdi
0000000100008f2f	movq	%rdi, 0x8(%rcx)
0000000100008f33	movq	%rsi, (%rcx)
0000000100008f36	addq	$0x18, %rdx
0000000100008f3a	addq	$-0x18, %rcx
0000000100008f3e	decq	%rax
0000000100008f41	jne	0x100008ee0
0000000100008f43	notq	%r14
0000000100008f46	addq	%r12, %r14
0000000100008f49	movb	$0x1, %al
0000000100008f4b	testb	%al, %al
0000000100008f4d	sete	%al
0000000100008f50	orb	%bl, %al
0000000100008f52	je	0x100009127
0000000100008f58	cmpq	$0x0, -0x60(%rbp)
0000000100008f5d	je	0x100009140
0000000100008f63	cmpq	%r12, %r14
0000000100008f66	jae	0x100009a7c
0000000100008f6c	leaq	(%r14,%r14,2), %rax
0000000100008f70	movq	-0x60(%rbp), %rcx
0000000100008f74	movq	0x10(%rcx), %rcx
0000000100008f78	cmpq	0x10(%r13,%rax,8), %rcx
0000000100008f7d	jb	0x100009148
0000000100008f83	leaq	(%r13,%rax,8), %rax
0000000100008f88	movq	0x10(%r13), %rcx
0000000100008f8c	movq	%rcx, -0x100(%rbp)
0000000100008f93	movq	(%r13), %rcx
0000000100008f97	movq	0x8(%r13), %rdx
0000000100008f9b	movq	%rdx, -0x108(%rbp)
0000000100008fa2	movq	%rcx, -0x110(%rbp)
0000000100008fa9	movq	0x10(%rax), %rcx
0000000100008fad	movq	(%rax), %rdx
0000000100008fb0	movq	0x8(%rax), %rsi
0000000100008fb4	movq	%rdx, (%r13)
0000000100008fb8	movq	%rsi, 0x8(%r13)
0000000100008fbc	movq	%rcx, 0x10(%r13)
0000000100008fc0	movq	-0x100(%rbp), %rcx
0000000100008fc7	movq	%rcx, 0x10(%rax)
0000000100008fcb	movq	-0x110(%rbp), %rcx
0000000100008fd2	movq	-0x108(%rbp), %rdx
0000000100008fd9	movq	%rdx, 0x8(%rax)
0000000100008fdd	movq	%rcx, (%rax)
0000000100008fe0	leaq	0x18(%r13), %rcx
0000000100008fe4	movq	(%r13), %rax
0000000100008fe8	movq	0x8(%r13), %rdx
0000000100008fec	movq	%rdx, -0x198(%rbp)
0000000100008ff3	movq	%rax, -0x1a0(%rbp)
0000000100008ffa	movq	0x10(%r13), %rax
0000000100008ffe	leaq	0x28(%r13), %rdx
0000000100009002	movq	%r12, %rsi
0000000100009005	xorl	%edi, %edi
0000000100009007	leaq	-0x1(%rsi), %r8
000000010000900b	cmpq	%r8, %rdi
000000010000900e	jae	0x100009034
0000000100009010	leaq	(%rdi,%rdi,2), %r9
0000000100009014	leaq	(%rdx,%r9,8), %r9
0000000100009018	nopl	(%rax,%rax)
0000000100009020	cmpq	(%r9), %rax
0000000100009023	jb	0x100009034
0000000100009025	incq	%rdi
0000000100009028	addq	$0x18, %r9
000000010000902c	cmpq	%rdi, %r8
000000010000902f	jne	0x100009020
0000000100009031	movq	%r8, %rdi
0000000100009034	leaq	(%rsi,%rsi,2), %r8
0000000100009038	leaq	(%r13,%r8,8), %r9
000000010000903d	nopl	(%rax)
0000000100009040	decq	%rsi
0000000100009043	cmpq	%rsi, %rdi
0000000100009046	jae	0x1000090d0
000000010000904c	leaq	-0x18(%r9), %r8
0000000100009050	cmpq	-0x8(%r9), %rax
0000000100009054	movq	%r8, %r9
0000000100009057	jb	0x100009040
0000000100009059	leaq	(%rdi,%rdi,2), %r9
000000010000905d	movq	0x10(%rcx,%r9,8), %r10
0000000100009062	movq	%r10, -0x100(%rbp)
0000000100009069	movq	(%rcx,%r9,8), %r10
000000010000906d	movq	0x8(%rcx,%r9,8), %r11
0000000100009072	movq	%r11, -0x108(%rbp)
0000000100009079	movq	%r10, -0x110(%rbp)
0000000100009080	movq	0x10(%r8), %r10
0000000100009084	movq	(%r8), %r11
0000000100009087	movq	0x8(%r8), %r14
000000010000908b	movq	%r11, (%rcx,%r9,8)
000000010000908f	movq	%r14, 0x8(%rcx,%r9,8)
0000000100009094	movq	%r10, 0x10(%rcx,%r9,8)
0000000100009099	movq	-0x100(%rbp), %r9
00000001000090a0	movq	%r9, 0x10(%r8)
00000001000090a4	movq	-0x110(%rbp), %r9
00000001000090ab	movq	-0x108(%rbp), %r10
00000001000090b2	movq	%r10, 0x8(%r8)
00000001000090b6	movq	%r9, (%r8)
00000001000090b9	incq	%rdi
00000001000090bc	leaq	-0x1(%rsi), %r8
00000001000090c0	cmpq	%r8, %rdi
00000001000090c3	jb	0x100009010
00000001000090c9	jmp	0x100009034
00000001000090ce	nop
00000001000090d0	incq	%rdi
00000001000090d3	movq	-0x1a0(%rbp), %rcx
00000001000090da	movq	-0x198(%rbp), %rdx
00000001000090e1	movq	%rdx, 0x8(%r13)
00000001000090e5	movq	%rcx, (%r13)
00000001000090e9	movq	%rax, 0x10(%r13)
00000001000090ed	movq	%r12, %r14
00000001000090f0	subq	%rdi, %r14
00000001000090f3	jb	0x100009ab2
00000001000090f9	leaq	(%rdi,%rdi,2), %rax
00000001000090fd	leaq	(%r13,%rax,8), %r13
0000000100009102	movq	%r14, %r12
0000000100009105	cmpq	$0x15, %r14
0000000100009109	jae	0x100008cd0
000000010000910f	jmp	0x100008c77
0000000100009114	movq	%r13, %rdi
0000000100009117	movq	%r12, %rsi
000000010000911a	callq	__ZN4core5slice4sort14break_patterns17he887c7f229d3696eE ## core::slice::sort::break_patterns::he887c7f229d3696e
000000010000911f	decl	-0x44(%rbp)
0000000100009122	jmp	0x100008ce3
0000000100009127	movq	%r13, %rdi
000000010000912a	movq	%r12, %rsi
000000010000912d	callq	__ZN4core5slice4sort22partial_insertion_sort17hd9b1e9bffe4e61b1E ## core::slice::sort::partial_insertion_sort::hd9b1e9bffe4e61b1
0000000100009132	testb	%al, %al
0000000100009134	je	0x100008f58
000000010000913a	jmp	0x100008c8d
000000010000913f	nop
0000000100009140	movq	-0x50(%rbp), %r13
0000000100009144	movq	-0x58(%rbp), %r12
0000000100009148	cmpq	%r12, %r14
000000010000914b	jae	0x100009a8e
0000000100009151	leaq	(%r14,%r14,2), %rax
0000000100009155	movq	0x10(%r13), %rcx
0000000100009159	movq	%rcx, -0x100(%rbp)
0000000100009160	movq	(%r13), %rcx
0000000100009164	movq	0x8(%r13), %rdx
0000000100009168	movq	%rdx, -0x108(%rbp)
000000010000916f	movq	%rcx, -0x110(%rbp)
0000000100009176	movq	0x10(%r13,%rax,8), %rcx
000000010000917b	movq	(%r13,%rax,8), %rdx
0000000100009180	movq	0x8(%r13,%rax,8), %rsi
0000000100009185	movq	%rdx, (%r13)
0000000100009189	movq	%rsi, 0x8(%r13)
000000010000918d	movq	%rcx, 0x10(%r13)
0000000100009191	movq	-0x100(%rbp), %rcx
0000000100009198	movq	%rcx, 0x10(%r13,%rax,8)
000000010000919d	movq	-0x110(%rbp), %rcx
00000001000091a4	movq	-0x108(%rbp), %rdx
00000001000091ab	movq	%rdx, 0x8(%r13,%rax,8)
00000001000091b0	movq	%rcx, (%r13,%rax,8)
00000001000091b5	movq	%r12, %rsi
00000001000091b8	movq	0x10(%r13), %rax
00000001000091bc	movq	%rax, -0x80(%rbp)
00000001000091c0	movq	(%r13), %rcx
00000001000091c4	movq	0x8(%r13), %rdx
00000001000091c8	movq	%rdx, -0x88(%rbp)
00000001000091cf	movq	%rcx, -0x90(%rbp)
00000001000091d6	decq	%rsi
00000001000091d9	je	0x100009210
00000001000091db	leaq	0x28(%r13), %rcx
00000001000091df	xorl	%edi, %edi
00000001000091e1	nopw	%cs:(%rax,%rax)
00000001000091eb	nopl	(%rax,%rax)
00000001000091f0	cmpq	%rax, (%rcx)
00000001000091f3	jae	0x100009212
00000001000091f5	incq	%rdi
00000001000091f8	addq	$0x18, %rcx
00000001000091fc	cmpq	%rdi, %rsi
00000001000091ff	jne	0x1000091f0
0000000100009201	movq	%rsi, %rdi
0000000100009204	jmp	0x100009212
0000000100009206	nopw	%cs:(%rax,%rax)
0000000100009210	xorl	%edi, %edi
0000000100009212	cmpq	%rsi, %rdi
0000000100009215	movq	%rsi, %rdx
0000000100009218	cmovbq	%rdi, %rdx
000000010000921c	leaq	0x18(%r13), %rcx
0000000100009220	leaq	(%r12,%r12,2), %r8
0000000100009224	leaq	-0x8(%r13,%r8,8), %r9
0000000100009229	movq	%r12, %r10
000000010000922c	nopl	(%rax)
0000000100009230	decq	%r10
0000000100009233	cmpq	%rdi, %r10
0000000100009236	jbe	0x100009250
0000000100009238	leaq	-0x18(%r9), %r8
000000010000923c	cmpq	%rax, (%r9)
000000010000923f	movq	%r8, %r9
0000000100009242	jae	0x100009230
0000000100009244	jmp	0x100009253
0000000100009246	nopw	%cs:(%rax,%rax)
0000000100009250	movq	%rdx, %r10
0000000100009253	movq	%r10, %rdx
0000000100009256	subq	%rdi, %rdx
0000000100009259	movq	%r13, -0x50(%rbp)
000000010000925d	jb	0x100009ad3
0000000100009263	movq	%r12, -0x58(%rbp)
0000000100009267	movq	%r10, -0x78(%rbp)
000000010000926b	cmpq	%rsi, %r10
000000010000926e	ja	0x100009ac1
0000000100009274	movq	%rdi, -0x120(%rbp)
000000010000927b	leaq	(%rdi,%rdi,2), %rsi
000000010000927f	leaq	(%rcx,%rsi,8), %rsi
0000000100009283	leaq	(%rdx,%rdx,2), %rcx
0000000100009287	leaq	(%rsi,%rcx,8), %r12
000000010000928b	movl	$0x80, %r15d
0000000100009291	xorl	%r9d, %r9d
0000000100009294	xorl	%r11d, %r11d
0000000100009297	xorl	%r10d, %r10d
000000010000929a	xorl	%r14d, %r14d
000000010000929d	movl	$0x80, %r8d
00000001000092a3	movq	%rsi, -0x118(%rbp)
00000001000092aa	movq	%rsi, %rdx
00000001000092ad	jmp	0x100009317
00000001000092af	nop
00000001000092b0	leaq	(%rsi,%rsi,2), %rcx
00000001000092b4	movq	-0x30(%rbp), %rsi
00000001000092b8	movq	%rsi, 0x10(%r12,%rcx,8)
00000001000092bd	movq	-0x40(%rbp), %rsi
00000001000092c1	movq	-0x38(%rbp), %rdi
00000001000092c5	movq	%rdi, 0x8(%r12,%rcx,8)
00000001000092ca	movq	%rsi, (%r12,%rcx,8)
00000001000092ce	incq	%r14
00000001000092d1	incq	%r11
00000001000092d4	movq	-0x70(%rbp), %r15
00000001000092d8	cmpq	%r10, %r14
00000001000092db	movl	$0x0, %ecx
00000001000092e0	movq	-0x68(%rbp), %r8
00000001000092e4	cmoveq	%r8, %rcx
00000001000092e8	movq	%r15, %rsi
00000001000092eb	negq	%rsi
00000001000092ee	cmpq	%r9, %r11
00000001000092f1	movl	$0x0, %edi
00000001000092f6	cmovneq	%rdi, %rsi
00000001000092fa	leaq	(%rcx,%rcx,2), %rcx
00000001000092fe	leaq	(%rdx,%rcx,8), %rdx
0000000100009302	leaq	(%rsi,%rsi,2), %rcx
0000000100009306	leaq	(%r12,%rcx,8), %r12
000000010000930a	cmpq	$0x1818, %rbx                   ## imm = 0x1818
0000000100009311	jb	0x100009650
0000000100009317	movq	%r12, %rbx
000000010000931a	subq	%rdx, %rbx
000000010000931d	cmpq	$0x1818, %rbx                   ## imm = 0x1818
0000000100009324	jae	0x100009369
0000000100009326	movzwl	%bx, %ecx
0000000100009329	imull	$0xaaab, %ecx, %esi             ## imm = 0xAAAB
000000010000932f	shrl	$0x14, %esi
0000000100009332	cmpq	%r10, %r14
0000000100009335	setb	%cl
0000000100009338	cmpq	%r9, %r11
000000010000933b	setb	%dil
000000010000933f	orb	%cl, %dil
0000000100009342	leaq	-0x80(%rsi), %rcx
0000000100009346	testb	%dil, %dil
0000000100009349	cmoveq	%rsi, %rcx
000000010000934d	cmpq	%r10, %r14
0000000100009350	cmovbq	%rcx, %r15
0000000100009354	cmovaeq	%rcx, %r8
0000000100009358	testb	%dil, %dil
000000010000935b	jne	0x100009369
000000010000935d	movq	%rcx, %r8
0000000100009360	shrq	%r8
0000000100009363	subq	%r8, %rcx
0000000100009366	movq	%rcx, %r15
0000000100009369	movq	%r8, -0x68(%rbp)
000000010000936d	cmpq	%r10, %r14
0000000100009370	je	0x100009470
0000000100009376	cmpq	%r9, %r11
0000000100009379	je	0x1000094b0
000000010000937f	movq	%r10, %rsi
0000000100009382	subq	%r14, %rsi
0000000100009385	movq	%r9, %rcx
0000000100009388	subq	%r11, %rcx
000000010000938b	cmpq	%rcx, %rsi
000000010000938e	cmovbq	%rsi, %rcx
0000000100009392	testq	%rcx, %rcx
0000000100009395	je	0x1000092d8
000000010000939b	movq	%r15, -0x70(%rbp)
000000010000939f	movzbl	(%r14), %esi
00000001000093a3	leaq	(%rsi,%rsi,2), %rsi
00000001000093a7	movq	0x10(%rdx,%rsi,8), %rdi
00000001000093ac	movq	%rdi, -0x30(%rbp)
00000001000093b0	movq	(%rdx,%rsi,8), %rdi
00000001000093b4	movq	0x8(%rdx,%rsi,8), %rsi
00000001000093b9	movq	%rsi, -0x38(%rbp)
00000001000093bd	movq	%rdi, -0x40(%rbp)
00000001000093c1	movzbl	(%r11), %r8d
00000001000093c5	movq	%r8, %rsi
00000001000093c8	notq	%rsi
00000001000093cb	leaq	(%rsi,%rsi,2), %rdi
00000001000093cf	movzbl	(%r14), %r15d
00000001000093d3	leaq	(%r15,%r15,2), %r15
00000001000093d7	movq	0x10(%r12,%rdi,8), %r13
00000001000093dc	movq	%r13, 0x10(%rdx,%r15,8)
00000001000093e1	movq	(%r12,%rdi,8), %r13
00000001000093e5	movq	0x8(%r12,%rdi,8), %rdi
00000001000093ea	movq	%rdi, 0x8(%rdx,%r15,8)
00000001000093ef	movq	%r13, (%rdx,%r15,8)
00000001000093f3	cmpq	$0x1, %rcx
00000001000093f7	je	0x1000092b0
00000001000093fd	decq	%rcx
0000000100009400	movzbl	0x1(%r14), %esi
0000000100009405	incq	%r14
0000000100009408	leaq	(%rsi,%rsi,2), %rdi
000000010000940c	movzbl	%r8b, %esi
0000000100009410	notq	%rsi
0000000100009413	leaq	(%rsi,%rsi,2), %rsi
0000000100009417	movq	0x10(%rdx,%rdi,8), %r8
000000010000941c	movq	%r8, 0x10(%r12,%rsi,8)
0000000100009421	movq	(%rdx,%rdi,8), %r8
0000000100009425	movq	0x8(%rdx,%rdi,8), %r15
000000010000942a	movq	%r15, 0x8(%r12,%rsi,8)
000000010000942f	movq	%r8, (%r12,%rsi,8)
0000000100009433	movzbl	0x1(%r11), %r8d
0000000100009438	incq	%r11
000000010000943b	movq	%r8, %rsi
000000010000943e	notq	%rsi
0000000100009441	leaq	(%rsi,%rsi,2), %r15
0000000100009445	movq	0x10(%r12,%r15,8), %r13
000000010000944a	movq	%r13, 0x10(%rdx,%rdi,8)
000000010000944f	movq	(%r12,%r15,8), %r13
0000000100009453	movq	0x8(%r12,%r15,8), %r15
0000000100009458	movq	%r15, 0x8(%rdx,%rdi,8)
000000010000945d	movq	%r13, (%rdx,%rdi,8)
0000000100009461	decq	%rcx
0000000100009464	jne	0x100009400
0000000100009466	jmp	0x1000092b0
000000010000946b	nopl	(%rax,%rax)
0000000100009470	movq	-0x68(%rbp), %rsi
0000000100009474	testq	%rsi, %rsi
0000000100009477	je	0x1000094db
0000000100009479	movl	%esi, %r13d
000000010000947c	andl	$0x3, %r13d
0000000100009480	cmpq	$0x4, %rsi
0000000100009484	leaq	-0x1a0(%rbp), %r14
000000010000948b	jae	0x1000094f9
000000010000948d	movq	%r14, %r10
0000000100009490	movq	%rdx, %r8
0000000100009493	xorl	%ecx, %ecx
0000000100009495	testq	%r13, %r13
0000000100009498	jne	0x100009570
000000010000949e	jmp	0x100009376
00000001000094a3	nopw	%cs:(%rax,%rax)
00000001000094ad	nopl	(%rax)
00000001000094b0	testq	%r15, %r15
00000001000094b3	je	0x1000094ea
00000001000094b5	movl	%r15d, %ecx
00000001000094b8	andl	$0x3, %ecx
00000001000094bb	cmpq	$0x4, %r15
00000001000094bf	movq	%r15, -0x70(%rbp)
00000001000094c3	jae	0x100009592
00000001000094c9	leaq	-0x110(%rbp), %r9
00000001000094d0	xorl	%r13d, %r13d
00000001000094d3	movq	%r12, %rsi
00000001000094d6	jmp	0x1000095fd
00000001000094db	leaq	-0x1a0(%rbp), %r14
00000001000094e2	movq	%r14, %r10
00000001000094e5	jmp	0x100009376
00000001000094ea	leaq	-0x110(%rbp), %r11
00000001000094f1	movq	%r11, %r9
00000001000094f4	jmp	0x10000937f
00000001000094f9	andq	$-0x4, %rsi
00000001000094fd	movq	%r14, %r10
0000000100009500	movq	%rdx, %r8
0000000100009503	xorl	%ecx, %ecx
0000000100009505	nopw	%cs:(%rax,%rax)
000000010000950f	nop
0000000100009510	movl	%ecx, %edi
0000000100009512	movb	%cl, (%r10)
0000000100009515	cmpq	%rax, 0x10(%r8)
0000000100009519	sbbq	$-0x1, %r10
000000010000951d	leal	0x1(%rdi), %r14d
0000000100009521	movb	%r14b, (%r10)
0000000100009524	cmpq	%rax, 0x28(%r8)
0000000100009528	sbbq	$-0x1, %r10
000000010000952c	leal	0x2(%rdi), %r14d
0000000100009530	cmpq	%rax, 0x40(%r8)
0000000100009534	movb	%r14b, (%r10)
0000000100009537	sbbq	$-0x1, %r10
000000010000953b	addq	$0x4, %rcx
000000010000953f	addl	$0x3, %edi
0000000100009542	movb	%dil, (%r10)
0000000100009545	cmpq	%rax, 0x58(%r8)
0000000100009549	sbbq	$-0x1, %r10
000000010000954d	addq	$0x60, %r8
0000000100009551	cmpq	%rcx, %rsi
0000000100009554	jne	0x100009510
0000000100009556	leaq	-0x1a0(%rbp), %r14
000000010000955d	testq	%r13, %r13
0000000100009560	je	0x100009376
0000000100009566	nopw	%cs:(%rax,%rax)
0000000100009570	movb	%cl, (%r10)
0000000100009573	cmpq	%rax, 0x10(%r8)
0000000100009577	sbbq	$-0x1, %r10
000000010000957b	incb	%cl
000000010000957d	addq	$0x18, %r8
0000000100009581	decq	%r13
0000000100009584	jne	0x100009570
0000000100009586	leaq	-0x1a0(%rbp), %r14
000000010000958d	jmp	0x100009376
0000000100009592	movq	%r15, %r8
0000000100009595	andq	$-0x4, %r8
0000000100009599	leaq	-0x110(%rbp), %r9
00000001000095a0	xorl	%edi, %edi
00000001000095a2	movq	%r12, %r11
00000001000095a5	xorl	%r13d, %r13d
00000001000095a8	nopl	(%rax,%rax)
00000001000095b0	movb	%dil, (%r9)
00000001000095b3	xorl	%esi, %esi
00000001000095b5	cmpq	%rax, -0x8(%r11)
00000001000095b9	setb	%sil
00000001000095bd	leal	0x1(%rdi), %r15d
00000001000095c1	cmpq	%rax, -0x20(%r11)
00000001000095c5	movb	%r15b, (%r9,%rsi)
00000001000095c9	adcq	%rsi, %r9
00000001000095cc	leal	0x2(%rdi), %esi
00000001000095cf	movb	%sil, (%r9)
00000001000095d2	xorl	%esi, %esi
00000001000095d4	cmpq	%rax, -0x38(%r11)
00000001000095d8	setb	%sil
00000001000095dc	addq	$0x4, %r13
00000001000095e0	addl	$0x3, %edi
00000001000095e3	movb	%dil, (%r9,%rsi)
00000001000095e7	cmpq	%rax, -0x50(%r11)
00000001000095eb	adcq	%rsi, %r9
00000001000095ee	leaq	-0x60(%r11), %rsi
00000001000095f2	movq	%r13, %rdi
00000001000095f5	movq	%rsi, %r11
00000001000095f8	cmpq	%r13, %r8
00000001000095fb	jne	0x1000095b0
00000001000095fd	leaq	-0x110(%rbp), %r11
0000000100009604	testq	%rcx, %rcx
0000000100009607	movq	-0x70(%rbp), %r15
000000010000960b	je	0x10000937f
0000000100009611	shlq	$0x3, %rcx
0000000100009615	leaq	(%rcx,%rcx,2), %rcx
0000000100009619	xorl	%edi, %edi
000000010000961b	nopl	(%rax,%rax)
0000000100009620	movb	%r13b, (%r9)
0000000100009623	cmpq	%rax, -0x8(%rsi,%rdi)
0000000100009628	adcq	$0x0, %r9
000000010000962c	incb	%r13b
000000010000962f	addq	$-0x18, %rdi
0000000100009633	movq	%rcx, %r8
0000000100009636	addq	%rdi, %r8
0000000100009639	jne	0x100009620
000000010000963b	leaq	-0x110(%rbp), %r11
0000000100009642	jmp	0x10000937f
0000000100009647	nopw	(%rax,%rax)
0000000100009650	cmpq	%r10, %r14
0000000100009653	jae	0x100009680
0000000100009655	movl	%r10d, %eax
0000000100009658	subl	%r14d, %eax
000000010000965b	testb	$0x1, %al
000000010000965d	movq	-0x50(%rbp), %r13
0000000100009661	movq	-0x58(%rbp), %rbx
0000000100009665	jne	0x1000096b6
0000000100009667	movq	%r10, %r9
000000010000966a	movq	%r14, %rcx
000000010000966d	notq	%rcx
0000000100009670	addq	%r10, %rcx
0000000100009673	jne	0x100009730
0000000100009679	jmp	0x100009932
000000010000967e	nop
0000000100009680	cmpq	%r9, %r11
0000000100009683	movq	-0x50(%rbp), %r13
0000000100009687	movq	-0x58(%rbp), %rbx
000000010000968b	jae	0x10000992f
0000000100009691	movl	%r9d, %eax
0000000100009694	subl	%r11d, %eax
0000000100009697	testb	$0x1, %al
0000000100009699	jne	0x100009800
000000010000969f	movq	%r9, %r10
00000001000096a2	movq	%r11, %rcx
00000001000096a5	notq	%rcx
00000001000096a8	addq	%r9, %rcx
00000001000096ab	jne	0x100009870
00000001000096b1	jmp	0x100009932
00000001000096b6	leaq	-0x1(%r10), %r9
00000001000096ba	movzbl	-0x1(%r10), %eax
00000001000096bf	leaq	(%rax,%rax,2), %rcx
00000001000096c3	leaq	-0x18(%r12), %rax
00000001000096c8	movq	0x10(%rdx,%rcx,8), %rsi
00000001000096cd	movq	%rsi, -0x30(%rbp)
00000001000096d1	movq	(%rdx,%rcx,8), %rsi
00000001000096d5	movq	0x8(%rdx,%rcx,8), %rdi
00000001000096da	movq	%rdi, -0x38(%rbp)
00000001000096de	movq	%rsi, -0x40(%rbp)
00000001000096e2	movq	-0x8(%r12), %rsi
00000001000096e7	movq	-0x18(%r12), %rdi
00000001000096ec	movq	-0x10(%r12), %r8
00000001000096f1	movq	%rdi, (%rdx,%rcx,8)
00000001000096f5	movq	%r8, 0x8(%rdx,%rcx,8)
00000001000096fa	movq	%rsi, 0x10(%rdx,%rcx,8)
00000001000096ff	movq	-0x30(%rbp), %rcx
0000000100009703	movq	%rcx, -0x8(%r12)
0000000100009708	movq	-0x40(%rbp), %rcx
000000010000970c	movq	-0x38(%rbp), %rsi
0000000100009710	movq	%rsi, -0x10(%r12)
0000000100009715	movq	%rcx, -0x18(%r12)
000000010000971a	movq	%rax, %r12
000000010000971d	movq	%r14, %rcx
0000000100009720	notq	%rcx
0000000100009723	addq	%r10, %rcx
0000000100009726	je	0x100009932
000000010000972c	nopl	(%rax)
0000000100009730	movzbl	-0x1(%r9), %eax
0000000100009735	leaq	(%rax,%rax,2), %rax
0000000100009739	movq	0x10(%rdx,%rax,8), %rcx
000000010000973e	movq	%rcx, -0x30(%rbp)
0000000100009742	movq	(%rdx,%rax,8), %rcx
0000000100009746	movq	0x8(%rdx,%rax,8), %rsi
000000010000974b	movq	%rsi, -0x38(%rbp)
000000010000974f	movq	%rcx, -0x40(%rbp)
0000000100009753	movq	-0x8(%r12), %rcx
0000000100009758	movq	-0x18(%r12), %rsi
000000010000975d	movq	-0x10(%r12), %rdi
0000000100009762	movq	%rsi, (%rdx,%rax,8)
0000000100009766	movq	%rdi, 0x8(%rdx,%rax,8)
000000010000976b	movq	%rcx, 0x10(%rdx,%rax,8)
0000000100009770	movq	-0x30(%rbp), %rax
0000000100009774	movq	%rax, -0x8(%r12)
0000000100009779	movq	-0x40(%rbp), %rax
000000010000977d	movq	-0x38(%rbp), %rcx
0000000100009781	movq	%rcx, -0x10(%r12)
0000000100009786	movq	%rax, -0x18(%r12)
000000010000978b	movzbl	-0x2(%r9), %eax
0000000100009790	addq	$-0x2, %r9
0000000100009794	leaq	(%rax,%rax,2), %rcx
0000000100009798	leaq	-0x30(%r12), %rax
000000010000979d	movq	0x10(%rdx,%rcx,8), %rsi
00000001000097a2	movq	%rsi, -0x30(%rbp)
00000001000097a6	movq	(%rdx,%rcx,8), %rsi
00000001000097aa	movq	0x8(%rdx,%rcx,8), %rdi
00000001000097af	movq	%rdi, -0x38(%rbp)
00000001000097b3	movq	%rsi, -0x40(%rbp)
00000001000097b7	movq	-0x20(%r12), %rsi
00000001000097bc	movq	-0x30(%r12), %rdi
00000001000097c1	movq	-0x28(%r12), %r8
00000001000097c6	movq	%rdi, (%rdx,%rcx,8)
00000001000097ca	movq	%r8, 0x8(%rdx,%rcx,8)
00000001000097cf	movq	%rsi, 0x10(%rdx,%rcx,8)
00000001000097d4	movq	-0x30(%rbp), %rcx
00000001000097d8	movq	%rcx, -0x20(%r12)
00000001000097dd	movq	-0x40(%rbp), %rcx
00000001000097e1	movq	-0x38(%rbp), %rsi
00000001000097e5	movq	%rsi, -0x28(%r12)
00000001000097ea	movq	%rcx, -0x30(%r12)
00000001000097ef	movq	%rax, %r12
00000001000097f2	cmpq	%r9, %r14
00000001000097f5	jb	0x100009730
00000001000097fb	jmp	0x100009932
0000000100009800	leaq	-0x1(%r9), %r10
0000000100009804	movzbl	-0x1(%r9), %eax
0000000100009809	notq	%rax
000000010000980c	leaq	(%rax,%rax,2), %rax
0000000100009810	movq	0x10(%rdx), %rcx
0000000100009814	movq	%rcx, -0x30(%rbp)
0000000100009818	movq	(%rdx), %rcx
000000010000981b	movq	0x8(%rdx), %rsi
000000010000981f	movq	%rsi, -0x38(%rbp)
0000000100009823	movq	%rcx, -0x40(%rbp)
0000000100009827	movq	0x10(%r12,%rax,8), %rcx
000000010000982c	movq	(%r12,%rax,8), %rsi
0000000100009830	movq	0x8(%r12,%rax,8), %rdi
0000000100009835	movq	%rsi, (%rdx)
0000000100009838	movq	%rdi, 0x8(%rdx)
000000010000983c	movq	%rcx, 0x10(%rdx)
0000000100009840	movq	-0x30(%rbp), %rcx
0000000100009844	movq	%rcx, 0x10(%r12,%rax,8)
0000000100009849	movq	-0x40(%rbp), %rcx
000000010000984d	movq	-0x38(%rbp), %rsi
0000000100009851	movq	%rsi, 0x8(%r12,%rax,8)
0000000100009856	movq	%rcx, (%r12,%rax,8)
000000010000985a	addq	$0x18, %rdx
000000010000985e	movq	%rdx, %rax
0000000100009861	movq	%r11, %rcx
0000000100009864	notq	%rcx
0000000100009867	addq	%r9, %rcx
000000010000986a	je	0x100009932
0000000100009870	movzbl	-0x1(%r10), %eax
0000000100009875	notq	%rax
0000000100009878	leaq	(%rax,%rax,2), %rax
000000010000987c	movq	0x10(%rdx), %rcx
0000000100009880	movq	%rcx, -0x30(%rbp)
0000000100009884	movq	(%rdx), %rcx
0000000100009887	movq	0x8(%rdx), %rsi
000000010000988b	movq	%rsi, -0x38(%rbp)
000000010000988f	movq	%rcx, -0x40(%rbp)
0000000100009893	movq	0x10(%r12,%rax,8), %rcx
0000000100009898	movq	(%r12,%rax,8), %rsi
000000010000989c	movq	0x8(%r12,%rax,8), %rdi
00000001000098a1	movq	%rsi, (%rdx)
00000001000098a4	movq	%rdi, 0x8(%rdx)
00000001000098a8	movq	%rcx, 0x10(%rdx)
00000001000098ac	movq	-0x30(%rbp), %rcx
00000001000098b0	movq	%rcx, 0x10(%r12,%rax,8)
00000001000098b5	movq	-0x40(%rbp), %rcx
00000001000098b9	movq	-0x38(%rbp), %rsi
00000001000098bd	movq	%rsi, 0x8(%r12,%rax,8)
00000001000098c2	movq	%rcx, (%r12,%rax,8)
00000001000098c6	movzbl	-0x2(%r10), %eax
00000001000098cb	addq	$-0x2, %r10
00000001000098cf	notq	%rax
00000001000098d2	leaq	(%rax,%rax,2), %rax
00000001000098d6	movq	0x28(%rdx), %rcx
00000001000098da	movq	%rcx, -0x30(%rbp)
00000001000098de	movq	0x18(%rdx), %rcx
00000001000098e2	movq	0x20(%rdx), %rsi
00000001000098e6	movq	%rsi, -0x38(%rbp)
00000001000098ea	movq	%rcx, -0x40(%rbp)
00000001000098ee	movq	0x10(%r12,%rax,8), %rcx
00000001000098f3	movq	(%r12,%rax,8), %rsi
00000001000098f7	movq	0x8(%r12,%rax,8), %rdi
00000001000098fc	movq	%rsi, 0x18(%rdx)
0000000100009900	movq	%rdi, 0x20(%rdx)
0000000100009904	movq	%rcx, 0x28(%rdx)
0000000100009908	movq	-0x30(%rbp), %rcx
000000010000990c	movq	%rcx, 0x10(%r12,%rax,8)
0000000100009911	movq	-0x40(%rbp), %rcx
0000000100009915	movq	-0x38(%rbp), %rsi
0000000100009919	movq	%rsi, 0x8(%r12,%rax,8)
000000010000991e	movq	%rcx, (%r12,%rax,8)
0000000100009922	addq	$0x30, %rdx
0000000100009926	cmpq	%r10, %r11
0000000100009929	jb	0x100009870
000000010000992f	movq	%rdx, %rax
0000000100009932	subq	-0x118(%rbp), %rax
0000000100009939	movabsq	$-0x5555555555555555, %rcx      ## imm = 0xAAAAAAAAAAAAAAAB
0000000100009943	mulq	%rcx
0000000100009946	movq	%rdx, %r14
0000000100009949	shrq	$0x4, %r14
000000010000994d	movq	-0x120(%rbp), %rdx
0000000100009954	addq	%rdx, %r14
0000000100009957	movq	-0x80(%rbp), %rax
000000010000995b	movq	%rax, 0x10(%r13)
000000010000995f	movq	-0x90(%rbp), %rax
0000000100009966	movq	-0x88(%rbp), %rcx
000000010000996d	movq	%rcx, 0x8(%r13)
0000000100009971	movq	%rax, (%r13)
0000000100009975	movq	%rbx, %r12
0000000100009978	subq	%r14, %r12
000000010000997b	jbe	0x100009aa0
0000000100009981	cmpq	%rdx, -0x78(%rbp)
0000000100009985	setbe	-0x68(%rbp)
0000000100009989	leaq	(%r14,%r14,2), %rax
000000010000998d	leaq	(%r13,%rax,8), %r8
0000000100009992	movq	0x10(%r13), %rcx
0000000100009996	movq	%rcx, -0x100(%rbp)
000000010000999d	movq	(%r13), %rcx
00000001000099a1	movq	0x8(%r13), %rdx
00000001000099a5	movq	%rdx, -0x108(%rbp)
00000001000099ac	movq	%rcx, -0x110(%rbp)
00000001000099b3	movq	0x10(%r13,%rax,8), %rcx
00000001000099b8	movq	(%r13,%rax,8), %rdx
00000001000099bd	movq	0x8(%r13,%rax,8), %rsi
00000001000099c2	movq	%rdx, (%r13)
00000001000099c6	movq	%rsi, 0x8(%r13)
00000001000099ca	movq	%rcx, 0x10(%r13)
00000001000099ce	movq	-0x100(%rbp), %rcx
00000001000099d5	movq	%rcx, 0x10(%r13,%rax,8)
00000001000099da	movq	-0x110(%rbp), %rcx
00000001000099e1	movq	-0x108(%rbp), %rdx
00000001000099e8	movq	%rdx, 0x8(%r13,%rax,8)
00000001000099ed	movq	%rcx, (%r13,%rax,8)
00000001000099f2	cmpq	%r12, %r14
00000001000099f5	movq	%r12, %rcx
00000001000099f8	cmovbq	%r14, %rcx
00000001000099fc	shrq	$0x3, %rbx
0000000100009a00	cmpq	%rbx, %rcx
0000000100009a03	setae	%r15b
0000000100009a07	leaq	0x18(%r13,%rax,8), %rbx
0000000100009a0c	decq	%r12
0000000100009a0f	cmpq	%r12, %r14
0000000100009a12	jae	0x100009a40
0000000100009a14	movq	%r13, %rdi
0000000100009a17	movq	%r14, %rsi
0000000100009a1a	movq	-0x60(%rbp), %rdx
0000000100009a1e	movl	-0x44(%rbp), %ecx
0000000100009a21	movq	%r8, %r14
0000000100009a24	callq	__ZN4core5slice4sort7recurse17h6e6d81cd3b2631beE ## core::slice::sort::recurse::h6e6d81cd3b2631be
0000000100009a29	movq	%r14, -0x60(%rbp)
0000000100009a2d	movq	%r12, %r14
0000000100009a30	movq	%rbx, %r13
0000000100009a33	jmp	0x100009a51
0000000100009a35	nopw	%cs:(%rax,%rax)
0000000100009a3f	nop
0000000100009a40	movq	%rbx, %rdi
0000000100009a43	movq	%r12, %rsi
0000000100009a46	movq	%r8, %rdx
0000000100009a49	movl	-0x44(%rbp), %ecx
0000000100009a4c	callq	__ZN4core5slice4sort7recurse17h6e6d81cd3b2631beE ## core::slice::sort::recurse::h6e6d81cd3b2631be
0000000100009a51	movq	%r14, -0x58(%rbp)
0000000100009a55	movq	%r13, -0x50(%rbp)
0000000100009a59	cmpq	$0x15, %r14
0000000100009a5d	movzbl	-0x68(%rbp), %ecx
0000000100009a61	jae	0x100008cac
0000000100009a67	jmp	0x100008c77
0000000100009a6c	movq	%r13, %rdi
0000000100009a6f	movq	%r12, %rsi
0000000100009a72	callq	__ZN4core5slice4sort8heapsort17h448528fd0e467ce8E ## core::slice::sort::heapsort::h448528fd0e467ce8
0000000100009a77	jmp	0x100008c8d
0000000100009a7c	leaq	0x3eaa5(%rip), %rdx
0000000100009a83	movq	%r14, %rdi
0000000100009a86	movq	%r12, %rsi
0000000100009a89	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100009a8e	leaq	0x3eb0b(%rip), %rdx
0000000100009a95	movq	%r14, %rdi
0000000100009a98	movq	%r12, %rsi
0000000100009a9b	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100009aa0	leaq	0x3eb29(%rip), %rdx
0000000100009aa7	movq	%r14, %rdi
0000000100009aaa	movq	%rbx, %rsi
0000000100009aad	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100009ab2	leaq	0x3ea87(%rip), %rdx
0000000100009ab9	movq	%r12, %rsi
0000000100009abc	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100009ac1	leaq	0x3eaf0(%rip), %rdx
0000000100009ac8	movq	-0x78(%rbp), %rdi
0000000100009acc	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100009ad1	jmp	0x100009ae2
0000000100009ad3	leaq	0x3eade(%rip), %rdx
0000000100009ada	movq	%r10, %rsi
0000000100009add	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
0000000100009ae2	ud2
0000000100009ae4	movq	%rax, %rbx
0000000100009ae7	leaq	-0x90(%rbp), %rdi
0000000100009aee	movq	-0x50(%rbp), %rsi
0000000100009af2	callq	__ZN4core3ptr91drop_in_place$LT$core..slice..sort..InsertionHole$LT$$LP$$RF$$u5b$u8$u5d$$C$u64$RP$$GT$$GT$17h3c738500cfccff0fE ## core::ptr::drop_in_place$LT$core..slice..sort..InsertionHole$LT$$LP$$RF$$u5b$u8$u5d$$C$u64$RP$$GT$$GT$::h3c738500cfccff0f
0000000100009af7	movq	%rbx, %rdi
0000000100009afa	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100009aff	nop
__ZN4core5slice4sort7recurse17hfe605e3d12d2a1d8E:
0000000100009b00	pushq	%rbp
0000000100009b01	movq	%rsp, %rbp
0000000100009b04	pushq	%r15
0000000100009b06	pushq	%r14
0000000100009b08	pushq	%r13
0000000100009b0a	pushq	%r12
0000000100009b0c	pushq	%rbx
0000000100009b0d	subq	$0x1d8, %rsp                    ## imm = 0x1D8
0000000100009b14	movl	%r8d, -0x5c(%rbp)
0000000100009b18	movq	%rdx, -0x88(%rbp)
0000000100009b1f	cmpq	$0x15, %rsi
0000000100009b23	jae	0x100009b5f
0000000100009b25	movq	%rsi, %r13
0000000100009b28	movq	%rdi, -0x30(%rbp)
0000000100009b2c	cmpq	$0x1, %r13
0000000100009b30	movq	-0x30(%rbp), %rdi
0000000100009b34	jbe	0x100009b4d
0000000100009b36	movq	-0x88(%rbp), %rax
0000000100009b3d	movq	(%rax), %rcx
0000000100009b40	movl	$0x1, %edx
0000000100009b45	movq	%r13, %rsi
0000000100009b48	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E ## core::slice::sort::insertion_sort_shift_left::he249994ee084fbf8
0000000100009b4d	addq	$0x1d8, %rsp                    ## imm = 0x1D8
0000000100009b54	popq	%rbx
0000000100009b55	popq	%r12
0000000100009b57	popq	%r13
0000000100009b59	popq	%r14
0000000100009b5b	popq	%r15
0000000100009b5d	popq	%rbp
0000000100009b5e	retq
0000000100009b5f	movq	%rsi, -0x68(%rbp)
0000000100009b63	movq	%rcx, -0xd8(%rbp)
0000000100009b6a	movq	%rdi, -0x50(%rbp)
0000000100009b6e	movb	$0x1, -0x70(%rbp)
0000000100009b72	movb	$0x1, %r12b
0000000100009b75	cmpb	$0x0, -0x70(%rbp)
0000000100009b79	sete	%al
0000000100009b7c	testb	%r12b, %r12b
0000000100009b7f	sete	%cl
0000000100009b82	orb	%al, %cl
0000000100009b84	movb	%cl, -0x90(%rbp)
0000000100009b8a	movq	-0x50(%rbp), %rax
0000000100009b8e	movq	%rax, -0x30(%rbp)
0000000100009b92	movq	-0x68(%rbp), %rax
0000000100009b96	movq	%rax, -0x58(%rbp)
0000000100009b9a	nopw	(%rax,%rax)
0000000100009ba0	cmpl	$0x0, -0x5c(%rbp)
0000000100009ba4	je	0x10000aa04
0000000100009baa	cmpb	$0x0, -0x70(%rbp)
0000000100009bae	movq	-0x30(%rbp), %r12
0000000100009bb2	movq	-0x58(%rbp), %r13
0000000100009bb6	je	0x10000a008
0000000100009bbc	movq	%r13, %rax
0000000100009bbf	shrq	$0x2, %rax
0000000100009bc3	movq	%rax, -0xe8(%rbp)
0000000100009bca	leaq	(%rax,%rax), %r14
0000000100009bce	movq	%r14, -0xa8(%rbp)
0000000100009bd5	leaq	(%rax,%rax,2), %rbx
0000000100009bd9	movq	%rbx, -0xf0(%rbp)
0000000100009be0	movq	$0x0, -0xc0(%rbp)
0000000100009beb	movq	-0x88(%rbp), %rcx
0000000100009bf2	movq	%rcx, -0x170(%rbp)
0000000100009bf9	movq	%r12, -0x168(%rbp)
0000000100009c00	movq	%r13, -0x160(%rbp)
0000000100009c07	leaq	-0xc0(%rbp), %rcx
0000000100009c0e	movq	%rcx, -0x158(%rbp)
0000000100009c15	cmpq	$0x31, %r13
0000000100009c19	movq	-0xd8(%rbp), %r15
0000000100009c20	jbe	0x100009cba
0000000100009c26	leaq	-0x1(%rax), %rcx
0000000100009c2a	movq	%rcx, -0x48(%rbp)
0000000100009c2e	incq	%rax
0000000100009c31	movq	%rax, -0x1f8(%rbp)
0000000100009c38	leaq	-0x170(%rbp), %r13
0000000100009c3f	movq	%r13, %rdi
0000000100009c42	leaq	-0x48(%rbp), %r12
0000000100009c46	movq	%r12, %rsi
0000000100009c49	leaq	-0xe8(%rbp), %rdx
0000000100009c50	leaq	-0x1f8(%rbp), %rcx
0000000100009c57	callq	__ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7566cefabaca64ceE ## core::slice::sort::choose_pivot::_$u7b$$u7b$closure$u7d$$u7d$::h7566cefabaca64ce
0000000100009c5c	leaq	-0x1(%r14), %rax
0000000100009c60	movq	%rax, -0x48(%rbp)
0000000100009c64	orq	$0x1, %r14
0000000100009c68	movq	%r14, -0x1f8(%rbp)
0000000100009c6f	movq	%r13, %rdi
0000000100009c72	movq	%r12, %rsi
0000000100009c75	leaq	-0xa8(%rbp), %rdx
0000000100009c7c	leaq	-0x1f8(%rbp), %r14
0000000100009c83	movq	%r14, %rcx
0000000100009c86	callq	__ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7566cefabaca64ceE ## core::slice::sort::choose_pivot::_$u7b$$u7b$closure$u7d$$u7d$::h7566cefabaca64ce
0000000100009c8b	leaq	-0x1(%rbx), %rax
0000000100009c8f	movq	%rax, -0x48(%rbp)
0000000100009c93	incq	%rbx
0000000100009c96	movq	%rbx, -0x1f8(%rbp)
0000000100009c9d	movq	%r13, %rdi
0000000100009ca0	movq	-0x58(%rbp), %r13
0000000100009ca4	movq	%r12, %rsi
0000000100009ca7	movq	-0x30(%rbp), %r12
0000000100009cab	leaq	-0xf0(%rbp), %rdx
0000000100009cb2	movq	%r14, %rcx
0000000100009cb5	callq	__ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7566cefabaca64ceE ## core::slice::sort::choose_pivot::_$u7b$$u7b$closure$u7d$$u7d$::h7566cefabaca64ce
0000000100009cba	leaq	-0x170(%rbp), %rdi
0000000100009cc1	leaq	-0xe8(%rbp), %rsi
0000000100009cc8	leaq	-0xa8(%rbp), %rdx
0000000100009ccf	leaq	-0xf0(%rbp), %rcx
0000000100009cd6	callq	__ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7566cefabaca64ceE ## core::slice::sort::choose_pivot::_$u7b$$u7b$closure$u7d$$u7d$::h7566cefabaca64ce
0000000100009cdb	movq	-0xc0(%rbp), %rax
0000000100009ce2	cmpq	$0xc, %rax
0000000100009ce6	jae	0x100009d10
0000000100009ce8	movq	-0xa8(%rbp), %rbx
0000000100009cef	testq	%rax, %rax
0000000100009cf2	sete	%al
0000000100009cf5	testb	%al, %al
0000000100009cf7	sete	%al
0000000100009cfa	orb	-0x90(%rbp), %al
0000000100009d00	jne	0x100009db3
0000000100009d06	jmp	0x10000a01b
0000000100009d0b	nopl	(%rax,%rax)
0000000100009d10	movq	%r13, %rax
0000000100009d13	shrq	%rax
0000000100009d16	leaq	(%r13,%r13,2), %rcx
0000000100009d1b	leaq	-0x18(%r12,%rcx,8), %rcx
0000000100009d20	movq	%r12, %rdx
0000000100009d23	nopw	%cs:(%rax,%rax)
0000000100009d2d	nopl	(%rax)
0000000100009d30	movq	0x10(%rdx), %rsi
0000000100009d34	movq	%rsi, -0x160(%rbp)
0000000100009d3b	movq	(%rdx), %rsi
0000000100009d3e	movq	0x8(%rdx), %rdi
0000000100009d42	movq	%rdi, -0x168(%rbp)
0000000100009d49	movq	%rsi, -0x170(%rbp)
0000000100009d50	movq	0x10(%rcx), %rsi
0000000100009d54	movq	%rsi, 0x10(%rdx)
0000000100009d58	movq	(%rcx), %rsi
0000000100009d5b	movq	0x8(%rcx), %rdi
0000000100009d5f	movq	%rdi, 0x8(%rdx)
0000000100009d63	movq	%rsi, (%rdx)
0000000100009d66	movq	-0x160(%rbp), %rsi
0000000100009d6d	movq	%rsi, 0x10(%rcx)
0000000100009d71	movq	-0x170(%rbp), %rsi
0000000100009d78	movq	-0x168(%rbp), %rdi
0000000100009d7f	movq	%rdi, 0x8(%rcx)
0000000100009d83	movq	%rsi, (%rcx)
0000000100009d86	addq	$0x18, %rdx
0000000100009d8a	addq	$-0x18, %rcx
0000000100009d8e	decq	%rax
0000000100009d91	jne	0x100009d30
0000000100009d93	movq	-0xa8(%rbp), %rbx
0000000100009d9a	notq	%rbx
0000000100009d9d	addq	%r13, %rbx
0000000100009da0	movb	$0x1, %al
0000000100009da2	testb	%al, %al
0000000100009da4	sete	%al
0000000100009da7	orb	-0x90(%rbp), %al
0000000100009dad	je	0x10000a01b
0000000100009db3	testq	%r15, %r15
0000000100009db6	je	0x10000a040
0000000100009dbc	cmpq	%r13, %rbx
0000000100009dbf	jae	0x10000aa1d
0000000100009dc5	leaq	(%rbx,%rbx,2), %r14
0000000100009dc9	movq	(%r15), %rdi
0000000100009dcc	movq	0x8(%r15), %rax
0000000100009dd0	movq	(%r12,%r14,8), %rsi
0000000100009dd4	movq	0x8(%r12,%r14,8), %rdx
0000000100009dd9	movq	%rax, %r15
0000000100009ddc	subq	%rdx, %r15
0000000100009ddf	cmovbq	%rax, %rdx
0000000100009de3	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100009de8	cltq
0000000100009dea	testl	%eax, %eax
0000000100009dec	cmovneq	%rax, %r15
0000000100009df0	testq	%r15, %r15
0000000100009df3	js	0x10000a051
0000000100009df9	leaq	(%r12,%r14,8), %rax
0000000100009dfd	movq	0x10(%r12), %rcx
0000000100009e02	movq	%rcx, -0x160(%rbp)
0000000100009e09	movq	(%r12), %rcx
0000000100009e0d	movq	0x8(%r12), %rdx
0000000100009e12	movq	%rdx, -0x168(%rbp)
0000000100009e19	movq	%rcx, -0x170(%rbp)
0000000100009e20	movq	0x10(%rax), %rcx
0000000100009e24	movq	(%rax), %rdx
0000000100009e27	movq	0x8(%rax), %rsi
0000000100009e2b	movq	%rdx, (%r12)
0000000100009e2f	movq	%rsi, 0x8(%r12)
0000000100009e34	movq	%rcx, 0x10(%r12)
0000000100009e39	movq	-0x160(%rbp), %rcx
0000000100009e40	movq	%rcx, 0x10(%rax)
0000000100009e44	movq	-0x170(%rbp), %rcx
0000000100009e4b	movq	-0x168(%rbp), %rdx
0000000100009e52	movq	%rdx, 0x8(%rax)
0000000100009e56	movq	%rcx, (%rax)
0000000100009e59	leaq	0x18(%r12), %rax
0000000100009e5e	movq	%rax, -0x98(%rbp)
0000000100009e65	movq	(%r12), %rax
0000000100009e69	movq	%rax, -0x80(%rbp)
0000000100009e6d	movq	%r13, %rax
0000000100009e70	movq	0x8(%r12), %r13
0000000100009e75	movups	0x8(%r12), %xmm0
0000000100009e7b	movaps	%xmm0, -0xd0(%rbp)
0000000100009e82	leaq	0x20(%r12), %rcx
0000000100009e87	movq	%rcx, -0x78(%rbp)
0000000100009e8b	movq	%rax, %r12
0000000100009e8e	xorl	%ebx, %ebx
0000000100009e90	leaq	-0x1(%r12), %rax
0000000100009e95	movq	%rax, -0xa0(%rbp)
0000000100009e9c	cmpq	%rax, %rbx
0000000100009e9f	jae	0x100009eee
0000000100009ea1	leaq	(%rbx,%rbx,2), %rax
0000000100009ea5	movq	-0x78(%rbp), %rcx
0000000100009ea9	leaq	(%rcx,%rax,8), %r14
0000000100009ead	nopl	(%rax)
0000000100009eb0	movq	-0x8(%r14), %rsi
0000000100009eb4	movq	(%r14), %rdx
0000000100009eb7	movq	%r13, %r15
0000000100009eba	subq	%rdx, %r15
0000000100009ebd	cmovbq	%r13, %rdx
0000000100009ec1	movq	-0x80(%rbp), %rdi
0000000100009ec5	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100009eca	cltq
0000000100009ecc	testl	%eax, %eax
0000000100009ece	cmovneq	%rax, %r15
0000000100009ed2	testq	%r15, %r15
0000000100009ed5	js	0x100009eee
0000000100009ed7	incq	%rbx
0000000100009eda	addq	$0x18, %r14
0000000100009ede	cmpq	%rbx, -0xa0(%rbp)
0000000100009ee5	jne	0x100009eb0
0000000100009ee7	movq	-0xa0(%rbp), %rbx
0000000100009eee	leaq	(%r12,%r12,2), %rax
0000000100009ef2	movq	-0x30(%rbp), %rcx
0000000100009ef6	leaq	(%rcx,%rax,8), %rax
0000000100009efa	nopw	(%rax,%rax)
0000000100009f00	decq	%r12
0000000100009f03	cmpq	%r12, %rbx
0000000100009f06	jae	0x100009fc0
0000000100009f0c	leaq	-0x18(%rax), %r14
0000000100009f10	movq	-0x18(%rax), %rsi
0000000100009f14	movq	-0x10(%rax), %rdx
0000000100009f18	movq	%r13, %r15
0000000100009f1b	subq	%rdx, %r15
0000000100009f1e	cmovbq	%r13, %rdx
0000000100009f22	movq	-0x80(%rbp), %rdi
0000000100009f26	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100009f2b	cltq
0000000100009f2d	testl	%eax, %eax
0000000100009f2f	cmovneq	%rax, %r15
0000000100009f33	movq	%r14, %rax
0000000100009f36	testq	%r15, %r15
0000000100009f39	js	0x100009f00
0000000100009f3b	leaq	(%rbx,%rbx,2), %rax
0000000100009f3f	movq	-0x98(%rbp), %rdi
0000000100009f46	movq	0x10(%rdi,%rax,8), %rcx
0000000100009f4b	movq	%rcx, -0x160(%rbp)
0000000100009f52	movq	(%rdi,%rax,8), %rcx
0000000100009f56	movq	0x8(%rdi,%rax,8), %rdx
0000000100009f5b	movq	%rdx, -0x168(%rbp)
0000000100009f62	movq	%rcx, -0x170(%rbp)
0000000100009f69	movq	0x10(%r14), %rcx
0000000100009f6d	movq	(%r14), %rdx
0000000100009f70	movq	0x8(%r14), %rsi
0000000100009f74	movq	%rdx, (%rdi,%rax,8)
0000000100009f78	movq	%rsi, 0x8(%rdi,%rax,8)
0000000100009f7d	movq	%rcx, 0x10(%rdi,%rax,8)
0000000100009f82	movq	-0x160(%rbp), %rax
0000000100009f89	movq	%rax, 0x10(%r14)
0000000100009f8d	movq	-0x170(%rbp), %rax
0000000100009f94	movq	-0x168(%rbp), %rcx
0000000100009f9b	movq	%rcx, 0x8(%r14)
0000000100009f9f	movq	%rax, (%r14)
0000000100009fa2	incq	%rbx
0000000100009fa5	leaq	-0x1(%r12), %rax
0000000100009faa	movq	%rax, -0xa0(%rbp)
0000000100009fb1	cmpq	%rax, %rbx
0000000100009fb4	jb	0x100009ea1
0000000100009fba	jmp	0x100009eee
0000000100009fbf	nop
0000000100009fc0	incq	%rbx
0000000100009fc3	movq	-0x30(%rbp), %rcx
0000000100009fc7	movq	-0x80(%rbp), %rax
0000000100009fcb	movq	%rax, (%rcx)
0000000100009fce	movaps	-0xd0(%rbp), %xmm0
0000000100009fd5	movups	%xmm0, 0x8(%rcx)
0000000100009fd9	movq	-0x58(%rbp), %rsi
0000000100009fdd	movq	%rsi, %r13
0000000100009fe0	subq	%rbx, %r13
0000000100009fe3	jb	0x10000aa63
0000000100009fe9	leaq	(%rbx,%rbx,2), %rax
0000000100009fed	leaq	(%rcx,%rax,8), %rcx
0000000100009ff1	movq	%rcx, -0x30(%rbp)
0000000100009ff5	movq	%r13, -0x58(%rbp)
0000000100009ff9	cmpq	$0x15, %r13
0000000100009ffd	jae	0x100009ba0
000000010000a003	jmp	0x100009b2c
000000010000a008	movq	%r12, %rdi
000000010000a00b	movq	%r13, %rsi
000000010000a00e	callq	__ZN4core5slice4sort14break_patterns17he887c7f229d3696eE ## core::slice::sort::break_patterns::he887c7f229d3696e
000000010000a013	decl	-0x5c(%rbp)
000000010000a016	jmp	0x100009bbc
000000010000a01b	movq	-0x88(%rbp), %rax
000000010000a022	movq	(%rax), %rdx
000000010000a025	movq	%r12, %rdi
000000010000a028	movq	%r13, %rsi
000000010000a02b	callq	__ZN4core5slice4sort22partial_insertion_sort17h86d6969c3415af64E ## core::slice::sort::partial_insertion_sort::h86d6969c3415af64
000000010000a030	testb	%al, %al
000000010000a032	je	0x100009db3
000000010000a038	jmp	0x100009b4d
000000010000a03d	nopl	(%rax)
000000010000a040	movq	-0x68(%rbp), %r13
000000010000a044	testq	%r13, %r13
000000010000a047	movq	-0x50(%rbp), %r12
000000010000a04b	je	0x10000aa53
000000010000a051	cmpq	%r13, %rbx
000000010000a054	jae	0x10000aa2f
000000010000a05a	leaq	(%rbx,%rbx,2), %rax
000000010000a05e	movq	0x10(%r12), %rcx
000000010000a063	movq	%rcx, -0x160(%rbp)
000000010000a06a	movq	(%r12), %rcx
000000010000a06e	movq	0x8(%r12), %rdx
000000010000a073	movq	%rdx, -0x168(%rbp)
000000010000a07a	movq	%rcx, -0x170(%rbp)
000000010000a081	movq	0x10(%r12,%rax,8), %rcx
000000010000a086	movq	(%r12,%rax,8), %rdx
000000010000a08a	movq	0x8(%r12,%rax,8), %rsi
000000010000a08f	movq	%rdx, (%r12)
000000010000a093	movq	%rsi, 0x8(%r12)
000000010000a098	movq	%rcx, 0x10(%r12)
000000010000a09d	movq	-0x160(%rbp), %rcx
000000010000a0a4	movq	%rcx, 0x10(%r12,%rax,8)
000000010000a0a9	movq	-0x170(%rbp), %rcx
000000010000a0b0	movq	-0x168(%rbp), %rdx
000000010000a0b7	movq	%rdx, 0x8(%r12,%rax,8)
000000010000a0bc	movq	%rcx, (%r12,%rax,8)
000000010000a0c0	movq	%r13, -0x68(%rbp)
000000010000a0c4	movq	%r13, %r15
000000010000a0c7	movq	0x10(%r12), %rax
000000010000a0cc	movq	%rax, -0xb0(%rbp)
000000010000a0d3	movq	(%r12), %rax
000000010000a0d7	movq	0x8(%r12), %rcx
000000010000a0dc	movq	%rcx, -0xb8(%rbp)
000000010000a0e3	movq	%rax, -0xc0(%rbp)
000000010000a0ea	decq	%r15
000000010000a0ed	movq	%r15, -0x30(%rbp)
000000010000a0f1	movq	%r12, -0x50(%rbp)
000000010000a0f5	je	0x10000a160
000000010000a0f7	movq	-0xc0(%rbp), %rsi
000000010000a0fe	movq	-0xb8(%rbp), %rbx
000000010000a105	leaq	0x20(%r12), %r14
000000010000a10a	xorl	%r13d, %r13d
000000010000a10d	nopl	(%rax)
000000010000a110	movq	-0x8(%r14), %rdi
000000010000a114	movq	(%r14), %rdx
000000010000a117	movq	%rdx, %r15
000000010000a11a	subq	%rbx, %r15
000000010000a11d	movq	%rbx, %r12
000000010000a120	cmovaeq	%rbx, %rdx
000000010000a124	movq	%rsi, %rbx
000000010000a127	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000a12c	cltq
000000010000a12e	testl	%eax, %eax
000000010000a130	cmovneq	%rax, %r15
000000010000a134	testq	%r15, %r15
000000010000a137	jns	0x10000a180
000000010000a139	incq	%r13
000000010000a13c	addq	$0x18, %r14
000000010000a140	movq	-0x30(%rbp), %r15
000000010000a144	cmpq	%r13, %r15
000000010000a147	movq	%rbx, %rsi
000000010000a14a	movq	%r12, %rbx
000000010000a14d	jne	0x10000a110
000000010000a14f	movq	%r15, %r13
000000010000a152	movq	-0x50(%rbp), %r12
000000010000a156	jmp	0x10000a18e
000000010000a158	nopl	(%rax,%rax)
000000010000a160	movq	-0xc0(%rbp), %rsi
000000010000a167	movq	-0xb8(%rbp), %rbx
000000010000a16e	xorl	%r13d, %r13d
000000010000a171	jmp	0x10000a18e
000000010000a173	nopw	%cs:(%rax,%rax)
000000010000a17d	nopl	(%rax)
000000010000a180	movq	%rbx, %rsi
000000010000a183	movq	%r12, %rbx
000000010000a186	movq	-0x50(%rbp), %r12
000000010000a18a	movq	-0x30(%rbp), %r15
000000010000a18e	movq	%r13, -0x90(%rbp)
000000010000a195	cmpq	%r15, %r13
000000010000a198	cmovbq	%r13, %r15
000000010000a19c	leaq	0x18(%r12), %rax
000000010000a1a1	movq	%rax, -0x58(%rbp)
000000010000a1a5	movq	-0x68(%rbp), %r14
000000010000a1a9	leaq	(%r14,%r14,2), %rax
000000010000a1ad	leaq	-0x10(%r12,%rax,8), %r12
000000010000a1b2	movq	-0x90(%rbp), %rdi
000000010000a1b9	movq	%rsi, -0x80(%rbp)
000000010000a1bd	nopl	(%rax)
000000010000a1c0	decq	%r14
000000010000a1c3	cmpq	%rdi, %r14
000000010000a1c6	jbe	0x10000a200
000000010000a1c8	movq	-0x8(%r12), %rdi
000000010000a1cd	movq	(%r12), %rdx
000000010000a1d1	movq	%rdx, %r13
000000010000a1d4	subq	%rbx, %r13
000000010000a1d7	cmovaeq	%rbx, %rdx
000000010000a1db	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000a1e0	movq	-0x80(%rbp), %rsi
000000010000a1e4	movq	-0x90(%rbp), %rdi
000000010000a1eb	cltq
000000010000a1ed	testl	%eax, %eax
000000010000a1ef	cmovneq	%rax, %r13
000000010000a1f3	addq	$-0x18, %r12
000000010000a1f7	testq	%r13, %r13
000000010000a1fa	jns	0x10000a1c0
000000010000a1fc	jmp	0x10000a203
000000010000a1fe	nop
000000010000a200	movq	%r15, %r14
000000010000a203	movq	%r14, %rax
000000010000a206	subq	%rdi, %rax
000000010000a209	jb	0x10000aa8a
000000010000a20f	movq	%r14, -0xe0(%rbp)
000000010000a216	movq	-0x30(%rbp), %r8
000000010000a21a	cmpq	%r8, %r14
000000010000a21d	ja	0x10000aa72
000000010000a223	leaq	(%rdi,%rdi,2), %rcx
000000010000a227	movq	-0x58(%rbp), %rdx
000000010000a22b	leaq	(%rdx,%rcx,8), %rcx
000000010000a22f	leaq	(%rax,%rax,2), %rax
000000010000a233	leaq	(%rcx,%rax,8), %r11
000000010000a237	movl	$0x80, %edi
000000010000a23c	xorl	%r15d, %r15d
000000010000a23f	xorl	%r14d, %r14d
000000010000a242	xorl	%r12d, %r12d
000000010000a245	xorl	%r10d, %r10d
000000010000a248	movl	$0x80, %r8d
000000010000a24e	movq	%rcx, -0x178(%rbp)
000000010000a255	movq	%rcx, %r13
000000010000a258	movq	%rbx, -0xa0(%rbp)
000000010000a25f	jmp	0x10000a2dc
000000010000a261	nopw	%cs:(%rax,%rax)
000000010000a26b	nopl	(%rax,%rax)
000000010000a270	leaq	(%rdx,%rdx,2), %rax
000000010000a274	movq	-0x38(%rbp), %rcx
000000010000a278	movq	%rcx, 0x10(%r11,%rax,8)
000000010000a27d	movq	-0x48(%rbp), %rcx
000000010000a281	movq	-0x40(%rbp), %rdx
000000010000a285	movq	%rdx, 0x8(%r11,%rax,8)
000000010000a28a	movq	%rcx, (%r11,%rax,8)
000000010000a28e	incq	%r10
000000010000a291	incq	%r14
000000010000a294	movq	-0xd0(%rbp), %rdi
000000010000a29b	movq	-0x78(%rbp), %r8
000000010000a29f	cmpq	%r12, %r10
000000010000a2a2	movl	$0x0, %eax
000000010000a2a7	cmoveq	%r8, %rax
000000010000a2ab	movq	%rdi, %rcx
000000010000a2ae	negq	%rcx
000000010000a2b1	cmpq	%r15, %r14
000000010000a2b4	movl	$0x0, %edx
000000010000a2b9	cmovneq	%rdx, %rcx
000000010000a2bd	leaq	(%rax,%rax,2), %rax
000000010000a2c1	leaq	(%r13,%rax,8), %r13
000000010000a2c6	leaq	(%rcx,%rcx,2), %rax
000000010000a2ca	leaq	(%r11,%rax,8), %r11
000000010000a2ce	cmpq	$0x1818, -0x58(%rbp)            ## imm = 0x1818
000000010000a2d6	jb	0x10000a5b0
000000010000a2dc	movq	%r11, %rax
000000010000a2df	subq	%r13, %rax
000000010000a2e2	cmpq	$0x1818, %rax                   ## imm = 0x1818
000000010000a2e8	movq	%rax, -0x58(%rbp)
000000010000a2ec	jae	0x10000a32d
000000010000a2ee	movzwl	%ax, %eax
000000010000a2f1	imull	$0xaaab, %eax, %ecx             ## imm = 0xAAAB
000000010000a2f7	shrl	$0x14, %ecx
000000010000a2fa	cmpq	%r12, %r10
000000010000a2fd	setb	%al
000000010000a300	cmpq	%r15, %r14
000000010000a303	setb	%dl
000000010000a306	orb	%al, %dl
000000010000a308	leaq	-0x80(%rcx), %rax
000000010000a30c	testb	%dl, %dl
000000010000a30e	cmoveq	%rcx, %rax
000000010000a312	cmpq	%r12, %r10
000000010000a315	cmovbq	%rax, %rdi
000000010000a319	cmovaeq	%rax, %r8
000000010000a31d	testb	%dl, %dl
000000010000a31f	jne	0x10000a32d
000000010000a321	movq	%rax, %r8
000000010000a324	shrq	%r8
000000010000a327	subq	%r8, %rax
000000010000a32a	movq	%rax, %rdi
000000010000a32d	cmpq	%r12, %r10
000000010000a330	jne	0x10000a3d6
000000010000a336	testq	%r8, %r8
000000010000a339	je	0x10000a483
000000010000a33f	movq	%rdi, -0xd0(%rbp)
000000010000a346	movq	%r14, -0x78(%rbp)
000000010000a34a	movq	%r11, -0x98(%rbp)
000000010000a351	leaq	-0x1f8(%rbp), %r12
000000010000a358	movq	%r13, -0x70(%rbp)
000000010000a35c	xorl	%eax, %eax
000000010000a35e	nop
000000010000a360	movq	%r12, %r14
000000010000a363	leaq	0x1(%rax), %rcx
000000010000a367	movq	%rcx, -0x30(%rbp)
000000010000a36b	movb	%al, (%r12)
000000010000a36f	movq	(%r13), %rdi
000000010000a373	movq	0x8(%r13), %rdx
000000010000a377	movq	%rdx, %r12
000000010000a37a	movq	-0xa0(%rbp), %rax
000000010000a381	subq	%rax, %r12
000000010000a384	cmovaeq	%rax, %rdx
000000010000a388	movq	%r8, %rbx
000000010000a38b	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000a390	movq	%rbx, %r8
000000010000a393	movq	-0x80(%rbp), %rsi
000000010000a397	cltq
000000010000a399	testl	%eax, %eax
000000010000a39b	cmovneq	%rax, %r12
000000010000a39f	notq	%r12
000000010000a3a2	shrq	$0x3f, %r12
000000010000a3a6	addq	%r14, %r12
000000010000a3a9	addq	$0x18, %r13
000000010000a3ad	movq	-0x30(%rbp), %rcx
000000010000a3b1	movq	%rcx, %rax
000000010000a3b4	cmpq	%rcx, %rbx
000000010000a3b7	jne	0x10000a360
000000010000a3b9	leaq	-0x1f8(%rbp), %r10
000000010000a3c0	movq	-0x98(%rbp), %r11
000000010000a3c7	movq	-0x70(%rbp), %r13
000000010000a3cb	movq	-0x78(%rbp), %r14
000000010000a3cf	movq	-0xd0(%rbp), %rdi
000000010000a3d6	cmpq	%r15, %r14
000000010000a3d9	jne	0x10000a4b0
000000010000a3df	testq	%rdi, %rdi
000000010000a3e2	je	0x10000a49a
000000010000a3e8	movq	%r8, -0x78(%rbp)
000000010000a3ec	movq	%r10, -0xd0(%rbp)
000000010000a3f3	movq	%r13, -0x70(%rbp)
000000010000a3f7	movq	%r11, -0x98(%rbp)
000000010000a3fe	leaq	-0x10(%r11), %r14
000000010000a402	leaq	-0x170(%rbp), %r15
000000010000a409	xorl	%eax, %eax
000000010000a40b	nopl	(%rax,%rax)
000000010000a410	movq	%r15, %r13
000000010000a413	leaq	0x1(%rax), %rcx
000000010000a417	movq	%rcx, -0x30(%rbp)
000000010000a41b	movb	%al, (%r15)
000000010000a41e	movq	%rdi, %rbx
000000010000a421	movq	-0x8(%r14), %rdi
000000010000a425	movq	(%r14), %rdx
000000010000a428	movq	%rdx, %r15
000000010000a42b	movq	-0xa0(%rbp), %rax
000000010000a432	subq	%rax, %r15
000000010000a435	cmovaeq	%rax, %rdx
000000010000a439	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000a43e	movq	%rbx, %rdi
000000010000a441	movq	-0x80(%rbp), %rsi
000000010000a445	cltq
000000010000a447	testl	%eax, %eax
000000010000a449	cmovneq	%rax, %r15
000000010000a44d	shrq	$0x3f, %r15
000000010000a451	addq	%r13, %r15
000000010000a454	addq	$-0x18, %r14
000000010000a458	movq	-0x30(%rbp), %rcx
000000010000a45c	movq	%rcx, %rax
000000010000a45f	cmpq	%rcx, %rbx
000000010000a462	jne	0x10000a410
000000010000a464	leaq	-0x170(%rbp), %r14
000000010000a46b	movq	-0x98(%rbp), %r11
000000010000a472	movq	-0x70(%rbp), %r13
000000010000a476	movq	-0xd0(%rbp), %r10
000000010000a47d	movq	-0x78(%rbp), %r8
000000010000a481	jmp	0x10000a4b0
000000010000a483	leaq	-0x1f8(%rbp), %rax
000000010000a48a	movq	%rax, %r12
000000010000a48d	movq	%rax, %r10
000000010000a490	cmpq	%r15, %r14
000000010000a493	jne	0x10000a4b0
000000010000a495	jmp	0x10000a3df
000000010000a49a	leaq	-0x170(%rbp), %rax
000000010000a4a1	movq	%rax, %r15
000000010000a4a4	movq	%rax, %r14
000000010000a4a7	nopw	(%rax,%rax)
000000010000a4b0	movq	%r12, %rcx
000000010000a4b3	subq	%r10, %rcx
000000010000a4b6	movq	%r15, %rax
000000010000a4b9	subq	%r14, %rax
000000010000a4bc	cmpq	%rax, %rcx
000000010000a4bf	cmovbq	%rcx, %rax
000000010000a4c3	testq	%rax, %rax
000000010000a4c6	je	0x10000a29f
000000010000a4cc	movq	%r8, -0x78(%rbp)
000000010000a4d0	movq	%rdi, -0xd0(%rbp)
000000010000a4d7	movzbl	(%r10), %ecx
000000010000a4db	leaq	(%rcx,%rcx,2), %rcx
000000010000a4df	movq	0x10(%r13,%rcx,8), %rdx
000000010000a4e4	movq	%rdx, -0x38(%rbp)
000000010000a4e8	movq	(%r13,%rcx,8), %rdx
000000010000a4ed	movq	0x8(%r13,%rcx,8), %rcx
000000010000a4f2	movq	%rcx, -0x40(%rbp)
000000010000a4f6	movq	%rdx, -0x48(%rbp)
000000010000a4fa	movzbl	(%r14), %ecx
000000010000a4fe	movq	%rcx, %rdx
000000010000a501	notq	%rdx
000000010000a504	leaq	(%rdx,%rdx,2), %r9
000000010000a508	movzbl	(%r10), %edi
000000010000a50c	leaq	(%rdi,%rdi,2), %rdi
000000010000a510	movq	0x10(%r11,%r9,8), %r8
000000010000a515	movq	%r8, 0x10(%r13,%rdi,8)
000000010000a51a	movq	(%r11,%r9,8), %r8
000000010000a51e	movq	0x8(%r11,%r9,8), %r9
000000010000a523	movq	%r9, 0x8(%r13,%rdi,8)
000000010000a528	movq	%r8, (%r13,%rdi,8)
000000010000a52d	cmpq	$0x1, %rax
000000010000a531	je	0x10000a270
000000010000a537	decq	%rax
000000010000a53a	nopw	(%rax,%rax)
000000010000a540	movzbl	0x1(%r10), %edx
000000010000a545	incq	%r10
000000010000a548	leaq	(%rdx,%rdx,2), %r9
000000010000a54c	movzbl	%cl, %ecx
000000010000a54f	notq	%rcx
000000010000a552	leaq	(%rcx,%rcx,2), %rcx
000000010000a556	movq	0x10(%r13,%r9,8), %rdx
000000010000a55b	movq	%rdx, 0x10(%r11,%rcx,8)
000000010000a560	movq	(%r13,%r9,8), %rdx
000000010000a565	movq	0x8(%r13,%r9,8), %rdi
000000010000a56a	movq	%rdi, 0x8(%r11,%rcx,8)
000000010000a56f	movq	%rdx, (%r11,%rcx,8)
000000010000a573	movzbl	0x1(%r14), %ecx
000000010000a578	incq	%r14
000000010000a57b	movq	%rcx, %rdx
000000010000a57e	notq	%rdx
000000010000a581	leaq	(%rdx,%rdx,2), %rdi
000000010000a585	movq	0x10(%r11,%rdi,8), %r8
000000010000a58a	movq	%r8, 0x10(%r13,%r9,8)
000000010000a58f	movq	(%r11,%rdi,8), %r8
000000010000a593	movq	0x8(%r11,%rdi,8), %rdi
000000010000a598	movq	%rdi, 0x8(%r13,%r9,8)
000000010000a59d	movq	%r8, (%r13,%r9,8)
000000010000a5a2	decq	%rax
000000010000a5a5	jne	0x10000a540
000000010000a5a7	jmp	0x10000a270
000000010000a5ac	nopl	(%rax)
000000010000a5b0	cmpq	%r12, %r10
000000010000a5b3	jae	0x10000a5d0
000000010000a5b5	movl	%r12d, %eax
000000010000a5b8	subl	%r10d, %eax
000000010000a5bb	testb	$0x1, %al
000000010000a5bd	jne	0x10000a606
000000010000a5bf	movq	%r12, %rcx
000000010000a5c2	jmp	0x10000a66a
000000010000a5c7	nopw	(%rax,%rax)
000000010000a5d0	cmpq	%r15, %r14
000000010000a5d3	jae	0x10000a755
000000010000a5d9	movl	%r15d, %eax
000000010000a5dc	subl	%r14d, %eax
000000010000a5df	testb	$0x1, %al
000000010000a5e1	movq	-0x50(%rbp), %r9
000000010000a5e5	movq	-0x68(%rbp), %r10
000000010000a5e9	jne	0x10000a765
000000010000a5ef	movq	%r15, %rcx
000000010000a5f2	movq	%r14, %rdx
000000010000a5f5	notq	%rdx
000000010000a5f8	addq	%r15, %rdx
000000010000a5fb	jne	0x10000a7e0
000000010000a601	jmp	0x10000a8b0
000000010000a606	leaq	-0x1(%r12), %rcx
000000010000a60b	movzbl	-0x1(%r12), %eax
000000010000a611	leaq	(%rax,%rax,2), %rdx
000000010000a615	leaq	-0x18(%r11), %rax
000000010000a619	movq	0x10(%r13,%rdx,8), %rsi
000000010000a61e	movq	%rsi, -0x38(%rbp)
000000010000a622	movq	(%r13,%rdx,8), %rsi
000000010000a627	movq	0x8(%r13,%rdx,8), %rdi
000000010000a62c	movq	%rdi, -0x40(%rbp)
000000010000a630	movq	%rsi, -0x48(%rbp)
000000010000a634	movq	-0x8(%r11), %rsi
000000010000a638	movq	-0x18(%r11), %rdi
000000010000a63c	movq	-0x10(%r11), %r8
000000010000a640	movq	%rdi, (%r13,%rdx,8)
000000010000a645	movq	%r8, 0x8(%r13,%rdx,8)
000000010000a64a	movq	%rsi, 0x10(%r13,%rdx,8)
000000010000a64f	movq	-0x38(%rbp), %rdx
000000010000a653	movq	%rdx, -0x8(%r11)
000000010000a657	movq	-0x48(%rbp), %rdx
000000010000a65b	movq	-0x40(%rbp), %rsi
000000010000a65f	movq	%rsi, -0x10(%r11)
000000010000a663	movq	%rdx, -0x18(%r11)
000000010000a667	movq	%rax, %r11
000000010000a66a	movq	%r10, %rdx
000000010000a66d	notq	%rdx
000000010000a670	addq	%r12, %rdx
000000010000a673	movq	-0x50(%rbp), %r9
000000010000a677	movq	%r10, %rbx
000000010000a67a	movq	-0x68(%rbp), %r10
000000010000a67e	je	0x10000a8b0
000000010000a684	nopw	%cs:(%rax,%rax)
000000010000a68e	nop
000000010000a690	movzbl	-0x1(%rcx), %eax
000000010000a694	leaq	(%rax,%rax,2), %rax
000000010000a698	movq	0x10(%r13,%rax,8), %rdx
000000010000a69d	movq	%rdx, -0x38(%rbp)
000000010000a6a1	movq	(%r13,%rax,8), %rdx
000000010000a6a6	movq	0x8(%r13,%rax,8), %rsi
000000010000a6ab	movq	%rsi, -0x40(%rbp)
000000010000a6af	movq	%rdx, -0x48(%rbp)
000000010000a6b3	movq	-0x8(%r11), %rdx
000000010000a6b7	movq	-0x18(%r11), %rsi
000000010000a6bb	movq	-0x10(%r11), %rdi
000000010000a6bf	movq	%rsi, (%r13,%rax,8)
000000010000a6c4	movq	%rdi, 0x8(%r13,%rax,8)
000000010000a6c9	movq	%rdx, 0x10(%r13,%rax,8)
000000010000a6ce	movq	-0x38(%rbp), %rax
000000010000a6d2	movq	%rax, -0x8(%r11)
000000010000a6d6	movq	-0x48(%rbp), %rax
000000010000a6da	movq	-0x40(%rbp), %rdx
000000010000a6de	movq	%rdx, -0x10(%r11)
000000010000a6e2	movq	%rax, -0x18(%r11)
000000010000a6e6	movzbl	-0x2(%rcx), %eax
000000010000a6ea	addq	$-0x2, %rcx
000000010000a6ee	leaq	(%rax,%rax,2), %rdx
000000010000a6f2	leaq	-0x30(%r11), %rax
000000010000a6f6	movq	0x10(%r13,%rdx,8), %rsi
000000010000a6fb	movq	%rsi, -0x38(%rbp)
000000010000a6ff	movq	(%r13,%rdx,8), %rsi
000000010000a704	movq	0x8(%r13,%rdx,8), %rdi
000000010000a709	movq	%rdi, -0x40(%rbp)
000000010000a70d	movq	%rsi, -0x48(%rbp)
000000010000a711	movq	-0x20(%r11), %rsi
000000010000a715	movq	-0x30(%r11), %rdi
000000010000a719	movq	-0x28(%r11), %r8
000000010000a71d	movq	%rdi, (%r13,%rdx,8)
000000010000a722	movq	%r8, 0x8(%r13,%rdx,8)
000000010000a727	movq	%rsi, 0x10(%r13,%rdx,8)
000000010000a72c	movq	-0x38(%rbp), %rdx
000000010000a730	movq	%rdx, -0x20(%r11)
000000010000a734	movq	-0x48(%rbp), %rdx
000000010000a738	movq	-0x40(%rbp), %rsi
000000010000a73c	movq	%rsi, -0x28(%r11)
000000010000a740	movq	%rdx, -0x30(%r11)
000000010000a744	movq	%rax, %r11
000000010000a747	cmpq	%rcx, %rbx
000000010000a74a	jb	0x10000a690
000000010000a750	jmp	0x10000a8b0
000000010000a755	movq	%r13, %rax
000000010000a758	movq	-0x50(%rbp), %r9
000000010000a75c	movq	-0x68(%rbp), %r10
000000010000a760	jmp	0x10000a8b0
000000010000a765	leaq	-0x1(%r15), %rcx
000000010000a769	movzbl	-0x1(%r15), %eax
000000010000a76e	notq	%rax
000000010000a771	leaq	(%rax,%rax,2), %rax
000000010000a775	movq	0x10(%r13), %rdx
000000010000a779	movq	%rdx, -0x38(%rbp)
000000010000a77d	movq	(%r13), %rdx
000000010000a781	movq	0x8(%r13), %rsi
000000010000a785	movq	%rsi, -0x40(%rbp)
000000010000a789	movq	%rdx, -0x48(%rbp)
000000010000a78d	movq	0x10(%r11,%rax,8), %rdx
000000010000a792	movq	(%r11,%rax,8), %rsi
000000010000a796	movq	0x8(%r11,%rax,8), %rdi
000000010000a79b	movq	%rsi, (%r13)
000000010000a79f	movq	%rdi, 0x8(%r13)
000000010000a7a3	movq	%rdx, 0x10(%r13)
000000010000a7a7	movq	-0x38(%rbp), %rdx
000000010000a7ab	movq	%rdx, 0x10(%r11,%rax,8)
000000010000a7b0	movq	-0x48(%rbp), %rdx
000000010000a7b4	movq	-0x40(%rbp), %rsi
000000010000a7b8	movq	%rsi, 0x8(%r11,%rax,8)
000000010000a7bd	movq	%rdx, (%r11,%rax,8)
000000010000a7c1	addq	$0x18, %r13
000000010000a7c5	movq	%r13, %rax
000000010000a7c8	movq	%r14, %rdx
000000010000a7cb	notq	%rdx
000000010000a7ce	addq	%r15, %rdx
000000010000a7d1	je	0x10000a8b0
000000010000a7d7	nopw	(%rax,%rax)
000000010000a7e0	movzbl	-0x1(%rcx), %eax
000000010000a7e4	notq	%rax
000000010000a7e7	leaq	(%rax,%rax,2), %rax
000000010000a7eb	movq	0x10(%r13), %rdx
000000010000a7ef	movq	%rdx, -0x38(%rbp)
000000010000a7f3	movq	(%r13), %rdx
000000010000a7f7	movq	0x8(%r13), %rsi
000000010000a7fb	movq	%rsi, -0x40(%rbp)
000000010000a7ff	movq	%rdx, -0x48(%rbp)
000000010000a803	movq	0x10(%r11,%rax,8), %rdx
000000010000a808	movq	(%r11,%rax,8), %rsi
000000010000a80c	movq	0x8(%r11,%rax,8), %rdi
000000010000a811	movq	%rsi, (%r13)
000000010000a815	movq	%rdi, 0x8(%r13)
000000010000a819	movq	%rdx, 0x10(%r13)
000000010000a81d	movq	-0x38(%rbp), %rdx
000000010000a821	movq	%rdx, 0x10(%r11,%rax,8)
000000010000a826	movq	-0x48(%rbp), %rdx
000000010000a82a	movq	-0x40(%rbp), %rsi
000000010000a82e	movq	%rsi, 0x8(%r11,%rax,8)
000000010000a833	movq	%rdx, (%r11,%rax,8)
000000010000a837	movzbl	-0x2(%rcx), %eax
000000010000a83b	addq	$-0x2, %rcx
000000010000a83f	notq	%rax
000000010000a842	leaq	(%rax,%rax,2), %rax
000000010000a846	movq	0x28(%r13), %rdx
000000010000a84a	movq	%rdx, -0x38(%rbp)
000000010000a84e	movq	0x18(%r13), %rdx
000000010000a852	movq	0x20(%r13), %rsi
000000010000a856	movq	%rsi, -0x40(%rbp)
000000010000a85a	movq	%rdx, -0x48(%rbp)
000000010000a85e	movq	0x10(%r11,%rax,8), %rdx
000000010000a863	movq	(%r11,%rax,8), %rsi
000000010000a867	movq	0x8(%r11,%rax,8), %rdi
000000010000a86c	movq	%rsi, 0x18(%r13)
000000010000a870	movq	%rdi, 0x20(%r13)
000000010000a874	movq	%rdx, 0x28(%r13)
000000010000a878	movq	-0x38(%rbp), %rdx
000000010000a87c	movq	%rdx, 0x10(%r11,%rax,8)
000000010000a881	movq	-0x48(%rbp), %rdx
000000010000a885	movq	-0x40(%rbp), %rsi
000000010000a889	movq	%rsi, 0x8(%r11,%rax,8)
000000010000a88e	movq	%rdx, (%r11,%rax,8)
000000010000a892	addq	$0x30, %r13
000000010000a896	cmpq	%rcx, %r14
000000010000a899	jb	0x10000a7e0
000000010000a89f	movq	%r13, %rax
000000010000a8a2	nopw	%cs:(%rax,%rax)
000000010000a8ac	nopl	(%rax)
000000010000a8b0	subq	-0x178(%rbp), %rax
000000010000a8b7	movabsq	$-0x5555555555555555, %rcx      ## imm = 0xAAAAAAAAAAAAAAAB
000000010000a8c1	mulq	%rcx
000000010000a8c4	movq	%rdx, %r13
000000010000a8c7	shrq	$0x4, %r13
000000010000a8cb	movq	-0x90(%rbp), %rdx
000000010000a8d2	addq	%rdx, %r13
000000010000a8d5	movq	-0xb0(%rbp), %rax
000000010000a8dc	movq	%rax, 0x10(%r9)
000000010000a8e0	movq	-0xc0(%rbp), %rax
000000010000a8e7	movq	-0xb8(%rbp), %rcx
000000010000a8ee	movq	%rcx, 0x8(%r9)
000000010000a8f2	movq	%rax, (%r9)
000000010000a8f5	movq	%r10, %rbx
000000010000a8f8	subq	%r13, %rbx
000000010000a8fb	jbe	0x10000aa41
000000010000a901	cmpq	%rdx, -0xe0(%rbp)
000000010000a908	movq	%r9, %r15
000000010000a90b	setbe	%r12b
000000010000a90f	leaq	(%r13,%r13,2), %rax
000000010000a914	leaq	(%r9,%rax,8), %r8
000000010000a918	movq	0x10(%r9), %rcx
000000010000a91c	movq	%rcx, -0x160(%rbp)
000000010000a923	movq	(%r9), %rcx
000000010000a926	movq	0x8(%r9), %rdx
000000010000a92a	movq	%rdx, -0x168(%rbp)
000000010000a931	movq	%rcx, -0x170(%rbp)
000000010000a938	movq	0x10(%r9,%rax,8), %rcx
000000010000a93d	movq	(%r9,%rax,8), %rdx
000000010000a941	movq	0x8(%r9,%rax,8), %rsi
000000010000a946	movq	%rdx, (%r9)
000000010000a949	movq	%rsi, 0x8(%r9)
000000010000a94d	movq	%rcx, 0x10(%r9)
000000010000a951	movq	-0x160(%rbp), %rcx
000000010000a958	movq	%rcx, 0x10(%r9,%rax,8)
000000010000a95d	movq	-0x170(%rbp), %rcx
000000010000a964	movq	-0x168(%rbp), %rdx
000000010000a96b	movq	%rdx, 0x8(%r9,%rax,8)
000000010000a970	movq	%rcx, (%r9,%rax,8)
000000010000a974	cmpq	%rbx, %r13
000000010000a977	movq	%rbx, %rcx
000000010000a97a	cmovbq	%r13, %rcx
000000010000a97e	shrq	$0x3, %r10
000000010000a982	cmpq	%r10, %rcx
000000010000a985	setae	-0x70(%rbp)
000000010000a989	leaq	0x18(%r9,%rax,8), %r14
000000010000a98e	decq	%rbx
000000010000a991	cmpq	%rbx, %r13
000000010000a994	jae	0x10000a9d0
000000010000a996	movq	%r15, %rdi
000000010000a999	movq	%r13, %rsi
000000010000a99c	movq	-0x88(%rbp), %rdx
000000010000a9a3	movq	-0xd8(%rbp), %rcx
000000010000a9aa	movq	%r8, %r15
000000010000a9ad	movl	-0x5c(%rbp), %r8d
000000010000a9b1	callq	__ZN4core5slice4sort7recurse17hfe605e3d12d2a1d8E ## core::slice::sort::recurse::hfe605e3d12d2a1d8
000000010000a9b6	movq	%r15, -0xd8(%rbp)
000000010000a9bd	movq	%rbx, %r13
000000010000a9c0	movq	%r14, %r15
000000010000a9c3	jmp	0x10000a9e9
000000010000a9c5	nopw	%cs:(%rax,%rax)
000000010000a9cf	nop
000000010000a9d0	movq	%r14, %rdi
000000010000a9d3	movq	%rbx, %rsi
000000010000a9d6	movq	-0x88(%rbp), %rdx
000000010000a9dd	movq	%r8, %rcx
000000010000a9e0	movl	-0x5c(%rbp), %r8d
000000010000a9e4	callq	__ZN4core5slice4sort7recurse17hfe605e3d12d2a1d8E ## core::slice::sort::recurse::hfe605e3d12d2a1d8
000000010000a9e9	movq	%r13, -0x68(%rbp)
000000010000a9ed	movq	%r15, -0x50(%rbp)
000000010000a9f1	movq	%r15, -0x30(%rbp)
000000010000a9f5	cmpq	$0x15, %r13
000000010000a9f9	jae	0x100009b75
000000010000a9ff	jmp	0x100009b2c
000000010000aa04	movq	-0x30(%rbp), %rdi
000000010000aa08	movq	-0x58(%rbp), %rsi
000000010000aa0c	movq	-0x88(%rbp), %rdx
000000010000aa13	callq	__ZN4core5slice4sort8heapsort17h3e754a659d46bfd2E ## core::slice::sort::heapsort::h3e754a659d46bfd2
000000010000aa18	jmp	0x100009b4d
000000010000aa1d	leaq	0x3db04(%rip), %rdx
000000010000aa24	movq	%rbx, %rdi
000000010000aa27	movq	%r13, %rsi
000000010000aa2a	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000aa2f	leaq	0x3db6a(%rip), %rdx
000000010000aa36	movq	%rbx, %rdi
000000010000aa39	movq	%r13, %rsi
000000010000aa3c	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000aa41	leaq	0x3db88(%rip), %rdx
000000010000aa48	movq	%r13, %rdi
000000010000aa4b	movq	%r10, %rsi
000000010000aa4e	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000aa53	leaq	0x3db46(%rip), %rdx
000000010000aa5a	xorl	%edi, %edi
000000010000aa5c	xorl	%esi, %esi
000000010000aa5e	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000aa63	leaq	0x3dad6(%rip), %rdx
000000010000aa6a	movq	%rbx, %rdi
000000010000aa6d	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010000aa72	leaq	0x3db3f(%rip), %rdx
000000010000aa79	movq	-0xe0(%rbp), %rdi
000000010000aa80	movq	%r8, %rsi
000000010000aa83	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010000aa88	jmp	0x10000aa99
000000010000aa8a	leaq	0x3db27(%rip), %rdx
000000010000aa91	movq	%r14, %rsi
000000010000aa94	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010000aa99	ud2
000000010000aa9b	movq	%rax, %rbx
000000010000aa9e	leaq	-0xc0(%rbp), %rdi
000000010000aaa5	movq	-0x50(%rbp), %rsi
000000010000aaa9	callq	__ZN4core3ptr91drop_in_place$LT$core..slice..sort..InsertionHole$LT$$LP$$RF$$u5b$u8$u5d$$C$u64$RP$$GT$$GT$17h3c738500cfccff0fE ## core::ptr::drop_in_place$LT$core..slice..sort..InsertionHole$LT$$LP$$RF$$u5b$u8$u5d$$C$u64$RP$$GT$$GT$::h3c738500cfccff0f
000000010000aaae	movq	%rbx, %rdi
000000010000aab1	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000aab6	nopw	%cs:(%rax,%rax)
__ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h6e671b82acb4afbaE:
000000010000aac0	pushq	%rbp
000000010000aac1	movq	%rsp, %rbp
000000010000aac4	pushq	%r15
000000010000aac6	pushq	%r14
000000010000aac8	pushq	%r13
000000010000aaca	pushq	%r12
000000010000aacc	pushq	%rbx
000000010000aacd	subq	$0x28, %rsp
000000010000aad1	leaq	0x1(%rcx,%rcx), %r13
000000010000aad6	cmpq	%rdx, %r13
000000010000aad9	jae	0x10000abf0
000000010000aadf	movq	%rcx, %r12
000000010000aae2	movq	%rdx, %rbx
000000010000aae5	movq	%rsi, %r14
000000010000aae8	leaq	(%rcx,%rcx), %rax
000000010000aaec	movq	%rdx, -0x30(%rbp)
000000010000aaf0	addq	$0x2, %rax
000000010000aaf4	cmpq	%rbx, %rax
000000010000aaf7	jae	0x10000ab40
000000010000aaf9	leaq	(%r13,%r13,2), %rcx
000000010000aafe	leaq	(%rax,%rax,2), %rax
000000010000ab02	movq	(%r14,%rcx,8), %rdi
000000010000ab06	movq	0x8(%r14,%rcx,8), %rcx
000000010000ab0b	movq	(%r14,%rax,8), %rsi
000000010000ab0f	movq	0x8(%r14,%rax,8), %rdx
000000010000ab14	movq	%rcx, %r15
000000010000ab17	subq	%rdx, %r15
000000010000ab1a	cmovbq	%rcx, %rdx
000000010000ab1e	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000ab23	cltq
000000010000ab25	testl	%eax, %eax
000000010000ab27	cmovneq	%rax, %r15
000000010000ab2b	shrq	$0x3f, %r15
000000010000ab2f	addq	%r13, %r15
000000010000ab32	jmp	0x10000ab43
000000010000ab34	nopw	%cs:(%rax,%rax)
000000010000ab3e	nop
000000010000ab40	movq	%r13, %r15
000000010000ab43	cmpq	%rbx, %r12
000000010000ab46	jae	0x10000abff
000000010000ab4c	cmpq	%rbx, %r15
000000010000ab4f	jae	0x10000ac11
000000010000ab55	leaq	(%r12,%r12,2), %r12
000000010000ab59	leaq	(%r15,%r15,2), %r13
000000010000ab5d	movq	(%r14,%r12,8), %rdi
000000010000ab61	movq	0x8(%r14,%r12,8), %rax
000000010000ab66	movq	(%r14,%r13,8), %rsi
000000010000ab6a	movq	0x8(%r14,%r13,8), %rdx
000000010000ab6f	movq	%rax, %rbx
000000010000ab72	subq	%rdx, %rbx
000000010000ab75	cmovbq	%rax, %rdx
000000010000ab79	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000ab7e	cltq
000000010000ab80	testl	%eax, %eax
000000010000ab82	cmovneq	%rax, %rbx
000000010000ab86	testq	%rbx, %rbx
000000010000ab89	movq	-0x30(%rbp), %rbx
000000010000ab8d	jns	0x10000abf0
000000010000ab8f	leaq	(%r14,%r12,8), %rax
000000010000ab93	leaq	(%r14,%r13,8), %rcx
000000010000ab97	movq	0x10(%rax), %rdx
000000010000ab9b	movq	%rdx, -0x38(%rbp)
000000010000ab9f	movq	(%rax), %rdx
000000010000aba2	movq	0x8(%rax), %rsi
000000010000aba6	movq	%rsi, -0x40(%rbp)
000000010000abaa	movq	%rdx, -0x48(%rbp)
000000010000abae	movq	0x10(%rcx), %rdx
000000010000abb2	movq	(%rcx), %rsi
000000010000abb5	movq	0x8(%rcx), %rdi
000000010000abb9	movq	%rsi, (%rax)
000000010000abbc	movq	%rdi, 0x8(%rax)
000000010000abc0	movq	%rdx, 0x10(%rax)
000000010000abc4	movq	-0x38(%rbp), %rax
000000010000abc8	movq	%rax, 0x10(%rcx)
000000010000abcc	movq	-0x48(%rbp), %rax
000000010000abd0	movq	-0x40(%rbp), %rdx
000000010000abd4	movq	%rdx, 0x8(%rcx)
000000010000abd8	movq	%rax, (%rcx)
000000010000abdb	leaq	(%r15,%r15), %rax
000000010000abdf	leaq	0x1(%r15,%r15), %r13
000000010000abe4	movq	%r15, %r12
000000010000abe7	cmpq	%rbx, %r13
000000010000abea	jb	0x10000aaf0
000000010000abf0	addq	$0x28, %rsp
000000010000abf4	popq	%rbx
000000010000abf5	popq	%r12
000000010000abf7	popq	%r13
000000010000abf9	popq	%r14
000000010000abfb	popq	%r15
000000010000abfd	popq	%rbp
000000010000abfe	retq
000000010000abff	leaq	0x3d96a(%rip), %rdx
000000010000ac06	movq	%r12, %rdi
000000010000ac09	movq	%rbx, %rsi
000000010000ac0c	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000ac11	leaq	0x3d970(%rip), %rdx
000000010000ac18	movq	%r15, %rdi
000000010000ac1b	movq	%rbx, %rsi
000000010000ac1e	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000ac23	nopw	%cs:(%rax,%rax)
000000010000ac2d	nopl	(%rax)
__ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd73dfa743ab7413dE:
000000010000ac30	pushq	%rbp
000000010000ac31	movq	%rsp, %rbp
000000010000ac34	movq	(%rdi), %rdi
000000010000ac37	popq	%rbp
000000010000ac38	jmp	__ZN4core3fmt17pointer_fmt_inner17h0b3b0e8b0f148988E ## core::fmt::pointer_fmt_inner::h0b3b0e8b0f148988
000000010000ac3d	nopl	(%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h9de439af2f5ac2a5E:
000000010000ac40	pushq	%rbp
000000010000ac41	movq	%rsp, %rbp
000000010000ac44	subq	$0x10, %rsp
000000010000ac48	movq	(%rdi), %rdi
000000010000ac4b	movl	$0x0, -0x4(%rbp)
000000010000ac52	cmpl	$0x80, %esi
000000010000ac58	jae	0x10000ac68
000000010000ac5a	movb	%sil, -0x4(%rbp)
000000010000ac5e	movl	$0x1, %edx
000000010000ac63	jmp	0x10000acef
000000010000ac68	movl	%esi, %eax
000000010000ac6a	cmpl	$0x800, %esi                    ## imm = 0x800
000000010000ac70	jae	0x10000ac8d
000000010000ac72	shrl	$0x6, %eax
000000010000ac75	orb	$-0x40, %al
000000010000ac77	movb	%al, -0x4(%rbp)
000000010000ac7a	andb	$0x3f, %sil
000000010000ac7e	orb	$-0x80, %sil
000000010000ac82	movb	%sil, -0x3(%rbp)
000000010000ac86	movl	$0x2, %edx
000000010000ac8b	jmp	0x10000acef
000000010000ac8d	cmpl	$0x10000, %esi                  ## imm = 0x10000
000000010000ac93	jae	0x10000acbc
000000010000ac95	shrl	$0xc, %eax
000000010000ac98	orb	$-0x20, %al
000000010000ac9a	movb	%al, -0x4(%rbp)
000000010000ac9d	movl	%esi, %eax
000000010000ac9f	shrl	$0x6, %eax
000000010000aca2	andb	$0x3f, %al
000000010000aca4	orb	$-0x80, %al
000000010000aca6	movb	%al, -0x3(%rbp)
000000010000aca9	andb	$0x3f, %sil
000000010000acad	orb	$-0x80, %sil
000000010000acb1	movb	%sil, -0x2(%rbp)
000000010000acb5	movl	$0x3, %edx
000000010000acba	jmp	0x10000acef
000000010000acbc	shrl	$0x12, %eax
000000010000acbf	andb	$0x7, %al
000000010000acc1	orb	$-0x10, %al
000000010000acc3	movb	%al, -0x4(%rbp)
000000010000acc6	movl	%esi, %eax
000000010000acc8	shrl	$0xc, %eax
000000010000accb	andb	$0x3f, %al
000000010000accd	orb	$-0x80, %al
000000010000accf	movb	%al, -0x3(%rbp)
000000010000acd2	movl	%esi, %eax
000000010000acd4	shrl	$0x6, %eax
000000010000acd7	andb	$0x3f, %al
000000010000acd9	orb	$-0x80, %al
000000010000acdb	movb	%al, -0x2(%rbp)
000000010000acde	andb	$0x3f, %sil
000000010000ace2	orb	$-0x80, %sil
000000010000ace6	movb	%sil, -0x1(%rbp)
000000010000acea	movl	$0x4, %edx
000000010000acef	leaq	-0x4(%rbp), %rsi
000000010000acf3	callq	__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc9ede58f8971c9a4E ## _$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::hc9ede58f8971c9a4
000000010000acf8	addq	$0x10, %rsp
000000010000acfc	popq	%rbp
000000010000acfd	retq
000000010000acfe	nop
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hbedfb84e87ffdf51E:
000000010000ad00	pushq	%rbp
000000010000ad01	movq	%rsp, %rbp
000000010000ad04	subq	$0x10, %rsp
000000010000ad08	movq	(%rdi), %rdi
000000010000ad0b	movl	$0x0, -0x4(%rbp)
000000010000ad12	cmpl	$0x80, %esi
000000010000ad18	jae	0x10000ad28
000000010000ad1a	movb	%sil, -0x4(%rbp)
000000010000ad1e	movl	$0x1, %edx
000000010000ad23	jmp	0x10000adaf
000000010000ad28	movl	%esi, %eax
000000010000ad2a	cmpl	$0x800, %esi                    ## imm = 0x800
000000010000ad30	jae	0x10000ad4d
000000010000ad32	shrl	$0x6, %eax
000000010000ad35	orb	$-0x40, %al
000000010000ad37	movb	%al, -0x4(%rbp)
000000010000ad3a	andb	$0x3f, %sil
000000010000ad3e	orb	$-0x80, %sil
000000010000ad42	movb	%sil, -0x3(%rbp)
000000010000ad46	movl	$0x2, %edx
000000010000ad4b	jmp	0x10000adaf
000000010000ad4d	cmpl	$0x10000, %esi                  ## imm = 0x10000
000000010000ad53	jae	0x10000ad7c
000000010000ad55	shrl	$0xc, %eax
000000010000ad58	orb	$-0x20, %al
000000010000ad5a	movb	%al, -0x4(%rbp)
000000010000ad5d	movl	%esi, %eax
000000010000ad5f	shrl	$0x6, %eax
000000010000ad62	andb	$0x3f, %al
000000010000ad64	orb	$-0x80, %al
000000010000ad66	movb	%al, -0x3(%rbp)
000000010000ad69	andb	$0x3f, %sil
000000010000ad6d	orb	$-0x80, %sil
000000010000ad71	movb	%sil, -0x2(%rbp)
000000010000ad75	movl	$0x3, %edx
000000010000ad7a	jmp	0x10000adaf
000000010000ad7c	shrl	$0x12, %eax
000000010000ad7f	andb	$0x7, %al
000000010000ad81	orb	$-0x10, %al
000000010000ad83	movb	%al, -0x4(%rbp)
000000010000ad86	movl	%esi, %eax
000000010000ad88	shrl	$0xc, %eax
000000010000ad8b	andb	$0x3f, %al
000000010000ad8d	orb	$-0x80, %al
000000010000ad8f	movb	%al, -0x3(%rbp)
000000010000ad92	movl	%esi, %eax
000000010000ad94	shrl	$0x6, %eax
000000010000ad97	andb	$0x3f, %al
000000010000ad99	orb	$-0x80, %al
000000010000ad9b	movb	%al, -0x2(%rbp)
000000010000ad9e	andb	$0x3f, %sil
000000010000ada2	orb	$-0x80, %sil
000000010000ada6	movb	%sil, -0x1(%rbp)
000000010000adaa	movl	$0x4, %edx
000000010000adaf	leaq	-0x4(%rbp), %rsi
000000010000adb3	callq	__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h424af07061250d47E ## _$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::h424af07061250d47
000000010000adb8	addq	$0x10, %rsp
000000010000adbc	popq	%rbp
000000010000adbd	retq
000000010000adbe	nop
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hd732906d5b5e6deaE:
000000010000adc0	pushq	%rbp
000000010000adc1	movq	%rsp, %rbp
000000010000adc4	movq	(%rdi), %rdi
000000010000adc7	callq	__ZN4core3fmt5Write10write_char17h76d52b92492ee6e3E ## core::fmt::Write::write_char::h76d52b92492ee6e3
000000010000adcc	xorl	%eax, %eax
000000010000adce	popq	%rbp
000000010000adcf	retq
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hedddf238da673e18E:
000000010000add0	pushq	%rbp
000000010000add1	movq	%rsp, %rbp
000000010000add4	pushq	%r15
000000010000add6	pushq	%r14
000000010000add8	pushq	%rbx
000000010000add9	pushq	%rax
000000010000adda	movl	%esi, %r14d
000000010000addd	movq	(%rdi), %rbx
000000010000ade0	cmpl	$0x80, %esi
000000010000ade6	jae	0x10000ae11
000000010000ade8	movq	0x10(%rbx), %rsi
000000010000adec	cmpq	0x8(%rbx), %rsi
000000010000adf0	jne	0x10000adfe
000000010000adf2	movq	%rbx, %rdi
000000010000adf5	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h9c3d16b86cf15839E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h9c3d16b86cf15839
000000010000adfa	movq	0x10(%rbx), %rsi
000000010000adfe	movq	(%rbx), %rax
000000010000ae01	movb	%r14b, (%rax,%rsi)
000000010000ae05	incq	%rsi
000000010000ae08	movq	%rsi, 0x10(%rbx)
000000010000ae0c	jmp	0x10000aed1
000000010000ae11	movl	$0x0, -0x1c(%rbp)
000000010000ae18	movl	%r14d, %eax
000000010000ae1b	cmpl	$0x800, %r14d                   ## imm = 0x800
000000010000ae22	jae	0x10000ae40
000000010000ae24	shrl	$0x6, %eax
000000010000ae27	orb	$-0x40, %al
000000010000ae29	movb	%al, -0x1c(%rbp)
000000010000ae2c	andb	$0x3f, %r14b
000000010000ae30	orb	$-0x80, %r14b
000000010000ae34	movb	%r14b, -0x1b(%rbp)
000000010000ae38	movl	$0x2, %r14d
000000010000ae3e	jmp	0x10000aea8
000000010000ae40	cmpl	$0x10000, %r14d                 ## imm = 0x10000
000000010000ae47	jae	0x10000ae72
000000010000ae49	shrl	$0xc, %eax
000000010000ae4c	orb	$-0x20, %al
000000010000ae4e	movb	%al, -0x1c(%rbp)
000000010000ae51	movl	%r14d, %eax
000000010000ae54	shrl	$0x6, %eax
000000010000ae57	andb	$0x3f, %al
000000010000ae59	orb	$-0x80, %al
000000010000ae5b	movb	%al, -0x1b(%rbp)
000000010000ae5e	andb	$0x3f, %r14b
000000010000ae62	orb	$-0x80, %r14b
000000010000ae66	movb	%r14b, -0x1a(%rbp)
000000010000ae6a	movl	$0x3, %r14d
000000010000ae70	jmp	0x10000aea8
000000010000ae72	shrl	$0x12, %eax
000000010000ae75	andb	$0x7, %al
000000010000ae77	orb	$-0x10, %al
000000010000ae79	movb	%al, -0x1c(%rbp)
000000010000ae7c	movl	%r14d, %eax
000000010000ae7f	shrl	$0xc, %eax
000000010000ae82	andb	$0x3f, %al
000000010000ae84	orb	$-0x80, %al
000000010000ae86	movb	%al, -0x1b(%rbp)
000000010000ae89	movl	%r14d, %eax
000000010000ae8c	shrl	$0x6, %eax
000000010000ae8f	andb	$0x3f, %al
000000010000ae91	orb	$-0x80, %al
000000010000ae93	movb	%al, -0x1a(%rbp)
000000010000ae96	andb	$0x3f, %r14b
000000010000ae9a	orb	$-0x80, %r14b
000000010000ae9e	movb	%r14b, -0x19(%rbp)
000000010000aea2	movl	$0x4, %r14d
000000010000aea8	movq	0x8(%rbx), %rax
000000010000aeac	movq	0x10(%rbx), %r15
000000010000aeb0	subq	%r15, %rax
000000010000aeb3	cmpq	%r14, %rax
000000010000aeb6	jb	0x10000aede
000000010000aeb8	movq	(%rbx), %rdi
000000010000aebb	addq	%r15, %rdi
000000010000aebe	leaq	-0x1c(%rbp), %rsi
000000010000aec2	movq	%r14, %rdx
000000010000aec5	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010000aeca	addq	%r14, %r15
000000010000aecd	movq	%r15, 0x10(%rbx)
000000010000aed1	xorl	%eax, %eax
000000010000aed3	addq	$0x8, %rsp
000000010000aed7	popq	%rbx
000000010000aed8	popq	%r14
000000010000aeda	popq	%r15
000000010000aedc	popq	%rbp
000000010000aedd	retq
000000010000aede	movq	%rbx, %rdi
000000010000aee1	movq	%r15, %rsi
000000010000aee4	movq	%r14, %rdx
000000010000aee7	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
000000010000aeec	movq	0x10(%rbx), %r15
000000010000aef0	jmp	0x10000aeb8
000000010000aef2	nopw	%cs:(%rax,%rax)
000000010000aefc	nopl	(%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h696489ed3a1172a3E:
000000010000af00	pushq	%rbp
000000010000af01	movq	%rsp, %rbp
000000010000af04	subq	$0x40, %rsp
000000010000af08	movq	(%rdi), %rax
000000010000af0b	movq	0x28(%rsi), %rcx
000000010000af0f	movq	%rcx, -0x10(%rbp)
000000010000af13	movq	0x20(%rsi), %rcx
000000010000af17	movq	%rcx, -0x18(%rbp)
000000010000af1b	movq	0x18(%rsi), %rcx
000000010000af1f	movq	%rcx, -0x20(%rbp)
000000010000af23	movq	0x10(%rsi), %rcx
000000010000af27	movq	%rcx, -0x28(%rbp)
000000010000af2b	movq	(%rsi), %rcx
000000010000af2e	movq	0x8(%rsi), %rdx
000000010000af32	movq	%rdx, -0x30(%rbp)
000000010000af36	movq	%rcx, -0x38(%rbp)
000000010000af3a	movq	%rax, -0x8(%rbp)
000000010000af3e	leaq	0x3d373(%rip), %rsi
000000010000af45	leaq	-0x8(%rbp), %rdi
000000010000af49	leaq	-0x38(%rbp), %rdx
000000010000af4d	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010000af52	addq	$0x40, %rsp
000000010000af56	popq	%rbp
000000010000af57	retq
000000010000af58	nopl	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hb69a968fe09b01f8E:
000000010000af60	pushq	%rbp
000000010000af61	movq	%rsp, %rbp
000000010000af64	subq	$0x40, %rsp
000000010000af68	movq	(%rdi), %rax
000000010000af6b	movq	0x28(%rsi), %rcx
000000010000af6f	movq	%rcx, -0x10(%rbp)
000000010000af73	movq	0x20(%rsi), %rcx
000000010000af77	movq	%rcx, -0x18(%rbp)
000000010000af7b	movq	0x18(%rsi), %rcx
000000010000af7f	movq	%rcx, -0x20(%rbp)
000000010000af83	movq	0x10(%rsi), %rcx
000000010000af87	movq	%rcx, -0x28(%rbp)
000000010000af8b	movq	(%rsi), %rcx
000000010000af8e	movq	0x8(%rsi), %rdx
000000010000af92	movq	%rdx, -0x30(%rbp)
000000010000af96	movq	%rcx, -0x38(%rbp)
000000010000af9a	movq	%rax, -0x8(%rbp)
000000010000af9e	leaq	0x3d343(%rip), %rsi
000000010000afa5	leaq	-0x8(%rbp), %rdi
000000010000afa9	leaq	-0x38(%rbp), %rdx
000000010000afad	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010000afb2	addq	$0x40, %rsp
000000010000afb6	popq	%rbp
000000010000afb7	retq
000000010000afb8	nopl	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hd749144105ed1f7bE:
000000010000afc0	pushq	%rbp
000000010000afc1	movq	%rsp, %rbp
000000010000afc4	subq	$0x40, %rsp
000000010000afc8	movq	(%rdi), %rax
000000010000afcb	movq	0x28(%rsi), %rcx
000000010000afcf	movq	%rcx, -0x10(%rbp)
000000010000afd3	movq	0x20(%rsi), %rcx
000000010000afd7	movq	%rcx, -0x18(%rbp)
000000010000afdb	movq	0x18(%rsi), %rcx
000000010000afdf	movq	%rcx, -0x20(%rbp)
000000010000afe3	movq	0x10(%rsi), %rcx
000000010000afe7	movq	%rcx, -0x28(%rbp)
000000010000afeb	movq	(%rsi), %rcx
000000010000afee	movq	0x8(%rsi), %rdx
000000010000aff2	movq	%rdx, -0x30(%rbp)
000000010000aff6	movq	%rcx, -0x38(%rbp)
000000010000affa	movq	%rax, -0x8(%rbp)
000000010000affe	leaq	0x3d343(%rip), %rsi
000000010000b005	leaq	-0x8(%rbp), %rdi
000000010000b009	leaq	-0x38(%rbp), %rdx
000000010000b00d	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010000b012	addq	$0x40, %rsp
000000010000b016	popq	%rbp
000000010000b017	retq
000000010000b018	nopl	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hf3e996192e5cb83fE:
000000010000b020	pushq	%rbp
000000010000b021	movq	%rsp, %rbp
000000010000b024	subq	$0x40, %rsp
000000010000b028	movq	(%rdi), %rax
000000010000b02b	movq	0x28(%rsi), %rcx
000000010000b02f	movq	%rcx, -0x10(%rbp)
000000010000b033	movq	0x20(%rsi), %rcx
000000010000b037	movq	%rcx, -0x18(%rbp)
000000010000b03b	movq	0x18(%rsi), %rcx
000000010000b03f	movq	%rcx, -0x20(%rbp)
000000010000b043	movq	0x10(%rsi), %rcx
000000010000b047	movq	%rcx, -0x28(%rbp)
000000010000b04b	movq	(%rsi), %rcx
000000010000b04e	movq	0x8(%rsi), %rdx
000000010000b052	movq	%rdx, -0x30(%rbp)
000000010000b056	movq	%rcx, -0x38(%rbp)
000000010000b05a	movq	%rax, -0x8(%rbp)
000000010000b05e	leaq	0x3d2b3(%rip), %rsi
000000010000b065	leaq	-0x8(%rbp), %rdi
000000010000b069	leaq	-0x38(%rbp), %rdx
000000010000b06d	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010000b072	addq	$0x40, %rsp
000000010000b076	popq	%rbp
000000010000b077	retq
000000010000b078	nopl	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h83bcd41b4c0c47a7E:
000000010000b080	pushq	%rbp
000000010000b081	movq	%rsp, %rbp
000000010000b084	pushq	%r15
000000010000b086	pushq	%r14
000000010000b088	pushq	%r12
000000010000b08a	pushq	%rbx
000000010000b08b	movq	%rdx, %rbx
000000010000b08e	movq	%rsi, %r15
000000010000b091	movq	(%rdi), %r14
000000010000b094	movq	0x8(%r14), %rax
000000010000b098	movq	0x10(%r14), %r12
000000010000b09c	subq	%r12, %rax
000000010000b09f	cmpq	%rdx, %rax
000000010000b0a2	jb	0x10000b0c7
000000010000b0a4	movq	(%r14), %rdi
000000010000b0a7	addq	%r12, %rdi
000000010000b0aa	movq	%r15, %rsi
000000010000b0ad	movq	%rbx, %rdx
000000010000b0b0	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010000b0b5	addq	%rbx, %r12
000000010000b0b8	movq	%r12, 0x10(%r14)
000000010000b0bc	xorl	%eax, %eax
000000010000b0be	popq	%rbx
000000010000b0bf	popq	%r12
000000010000b0c1	popq	%r14
000000010000b0c3	popq	%r15
000000010000b0c5	popq	%rbp
000000010000b0c6	retq
000000010000b0c7	movq	%r14, %rdi
000000010000b0ca	movq	%r12, %rsi
000000010000b0cd	movq	%rbx, %rdx
000000010000b0d0	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
000000010000b0d5	movq	0x10(%r14), %r12
000000010000b0d9	jmp	0x10000b0a4
000000010000b0db	nopl	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h89bbc040b4bda732E:
000000010000b0e0	pushq	%rbp
000000010000b0e1	movq	%rsp, %rbp
000000010000b0e4	movq	(%rdi), %rdi
000000010000b0e7	popq	%rbp
000000010000b0e8	jmp	__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc9ede58f8971c9a4E ## _$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::hc9ede58f8971c9a4
000000010000b0ed	nopl	(%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h99d0d137db2dbd1dE:
000000010000b0f0	pushq	%rbp
000000010000b0f1	movq	%rsp, %rbp
000000010000b0f4	movq	(%rdi), %rdi
000000010000b0f7	popq	%rbp
000000010000b0f8	jmp	__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h424af07061250d47E ## _$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::h424af07061250d47
000000010000b0fd	nopl	(%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hb410692a95dca4e6E:
000000010000b100	pushq	%rbp
000000010000b101	movq	%rsp, %rbp
000000010000b104	pushq	%r15
000000010000b106	pushq	%r14
000000010000b108	pushq	%r12
000000010000b10a	pushq	%rbx
000000010000b10b	movq	%rdx, %rbx
000000010000b10e	movq	%rsi, %r15
000000010000b111	movq	(%rdi), %rax
000000010000b114	movq	(%rax), %r14
000000010000b117	movq	0x8(%r14), %rax
000000010000b11b	movq	0x10(%r14), %r12
000000010000b11f	subq	%r12, %rax
000000010000b122	cmpq	%rdx, %rax
000000010000b125	jb	0x10000b14a
000000010000b127	movq	(%r14), %rdi
000000010000b12a	addq	%r12, %rdi
000000010000b12d	movq	%r15, %rsi
000000010000b130	movq	%rbx, %rdx
000000010000b133	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010000b138	addq	%rbx, %r12
000000010000b13b	movq	%r12, 0x10(%r14)
000000010000b13f	xorl	%eax, %eax
000000010000b141	popq	%rbx
000000010000b142	popq	%r12
000000010000b144	popq	%r14
000000010000b146	popq	%r15
000000010000b148	popq	%rbp
000000010000b149	retq
000000010000b14a	movq	%r14, %rdi
000000010000b14d	movq	%r12, %rsi
000000010000b150	movq	%rbx, %rdx
000000010000b153	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
000000010000b158	movq	0x10(%r14), %r12
000000010000b15c	jmp	0x10000b127
000000010000b15e	nop
__ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h58ff23c586846387E:
000000010000b160	pushq	%rbp
000000010000b161	movq	%rsp, %rbp
000000010000b164	pushq	%r15
000000010000b166	pushq	%r14
000000010000b168	pushq	%r13
000000010000b16a	pushq	%r12
000000010000b16c	pushq	%rbx
000000010000b16d	subq	$0x138, %rsp                    ## imm = 0x138
000000010000b174	movq	%rdx, %r14
000000010000b177	movq	%rsi, %r9
000000010000b17a	movq	%rdi, %r15
000000010000b17d	cmpq	%rcx, %rsi
000000010000b180	jae	0x10000b1ce
000000010000b182	testq	%r9, %r9
000000010000b185	je	0x10000b800
000000010000b18b	movq	%rcx, %r8
000000010000b18e	movzbl	(%r15), %eax
000000010000b192	leaq	-0x1(%r9), %rsi
000000010000b196	cmpq	$0x2, %r9
000000010000b19a	movq	%rcx, -0x30(%rbp)
000000010000b19e	movq	%r9, -0x38(%rbp)
000000010000b1a2	jne	0x10000b1e9
000000010000b1a4	cmpq	$0x11, %r8
000000010000b1a8	jb	0x10000b22c
000000010000b1ae	movzbl	%al, %eax
000000010000b1b1	movd	%eax, %xmm2
000000010000b1b5	pxor	%xmm0, %xmm0
000000010000b1b9	pshufb	%xmm0, %xmm2
000000010000b1be	movzbl	0x1(%r15), %ecx
000000010000b1c3	movl	$0x1, %r12d
000000010000b1c9	jmp	0x10000b303
000000010000b1ce	jne	0x10000b231
000000010000b1d0	movq	%r15, %rdi
000000010000b1d3	movq	%r14, %rsi
000000010000b1d6	movq	%r9, %rdx
000000010000b1d9	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000b1de	testl	%eax, %eax
000000010000b1e0	sete	%r13b
000000010000b1e4	jmp	0x10000b69d
000000010000b1e9	xorl	%edx, %edx
000000010000b1eb	movq	%r9, %rcx
000000010000b1ee	subq	$0x4, %rcx
000000010000b1f2	cmovaeq	%rcx, %rdx
000000010000b1f6	movq	%rsi, %r12
000000010000b1f9	nopl	(%rax)
000000010000b200	leaq	0x1(%r12), %rcx
000000010000b205	cmpq	%rcx, %rdx
000000010000b208	jae	0x10000b239
000000010000b20a	cmpq	%r9, %r12
000000010000b20d	jae	0x10000b776
000000010000b213	movzbl	(%r15,%r12), %ecx
000000010000b218	decq	%r12
000000010000b21b	cmpb	%al, %cl
000000010000b21d	je	0x10000b200
000000010000b21f	leaq	0xf(%r9), %rdx
000000010000b223	cmpq	%r8, %rdx
000000010000b226	jbe	0x10000b2f0
000000010000b22c	cmpq	%r8, %r9
000000010000b22f	jbe	0x10000b29c
000000010000b231	xorl	%r13d, %r13d
000000010000b234	jmp	0x10000b69d
000000010000b239	leaq	-0x110(%rbp), %rdi
000000010000b240	movq	%r14, %rsi
000000010000b243	movq	%r8, %rdx
000000010000b246	movq	%r15, %rcx
000000010000b249	movq	%r9, %r8
000000010000b24c	callq	__ZN4core3str7pattern11StrSearcher3new17h056863fc02a6ed7bE ## core::str::pattern::StrSearcher::new::h056863fc02a6ed7b
000000010000b251	cmpq	$0x0, -0x110(%rbp)
000000010000b259	movq	-0xc8(%rbp), %rdx
000000010000b260	movq	-0xc0(%rbp), %rcx
000000010000b267	je	0x10000b665
000000010000b26d	leaq	-0x108(%rbp), %rsi
000000010000b274	movq	-0xb8(%rbp), %r8
000000010000b27b	cmpq	$-0x1, -0xd8(%rbp)
000000010000b283	movq	-0xb0(%rbp), %r9
000000010000b28a	je	0x10000b67e
000000010000b290	movl	$0x0, (%rsp)
000000010000b297	jmp	0x10000b685
000000010000b29c	movq	%r14, %rdi
000000010000b29f	movq	%r15, %rsi
000000010000b2a2	movq	%r9, %rdx
000000010000b2a5	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000b2aa	testl	%eax, %eax
000000010000b2ac	je	0x10000b679
000000010000b2b2	incq	%r14
000000010000b2b5	movq	-0x30(%rbp), %rcx
000000010000b2b9	decq	%rcx
000000010000b2bc	movq	-0x38(%rbp), %r12
000000010000b2c0	cmpq	%r12, %rcx
000000010000b2c3	setae	%r13b
000000010000b2c7	jb	0x10000b69d
000000010000b2cd	movq	%r12, %rdx
000000010000b2d0	movq	%r14, %rdi
000000010000b2d3	movq	%r15, %rsi
000000010000b2d6	movq	%rcx, %rbx
000000010000b2d9	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010000b2de	movq	%rbx, %rcx
000000010000b2e1	incq	%r14
000000010000b2e4	decq	%rcx
000000010000b2e7	testl	%eax, %eax
000000010000b2e9	jne	0x10000b2c0
000000010000b2eb	jmp	0x10000b69d
000000010000b2f0	incq	%r12
000000010000b2f3	movzbl	%al, %eax
000000010000b2f6	movd	%eax, %xmm2
000000010000b2fa	pxor	%xmm0, %xmm0
000000010000b2fe	pshufb	%xmm0, %xmm2
000000010000b303	movzbl	%cl, %eax
000000010000b306	movd	%eax, %xmm3
000000010000b30a	pshufb	%xmm0, %xmm3
000000010000b30f	incq	%r15
000000010000b312	movq	%r14, -0x110(%rbp)
000000010000b319	movq	%r8, -0x108(%rbp)
000000010000b320	movq	%r15, -0x100(%rbp)
000000010000b327	movq	%rsi, -0xa8(%rbp)
000000010000b32e	movq	%rsi, -0xf8(%rbp)
000000010000b335	leaq	0x3f(%r9), %rax
000000010000b339	cmpq	%r8, %rax
000000010000b33c	movdqa	%xmm2, -0x80(%rbp)
000000010000b341	movdqa	%xmm3, -0x70(%rbp)
000000010000b346	jae	0x10000b5ab
000000010000b34c	leaq	0x7f(%r9), %rcx
000000010000b350	leaq	0x30(%r12,%r14), %rbx
000000010000b355	xorl	%r15d, %r15d
000000010000b358	xorl	%r13d, %r13d
000000010000b35b	movq	%rcx, -0x40(%rbp)
000000010000b35f	nop
000000010000b360	movdqu	(%r14,%r15), %xmm0
000000010000b366	movdqu	0x10(%r14,%r15), %xmm8
000000010000b36d	movdqu	0x20(%r14,%r15), %xmm6
000000010000b374	movdqu	0x30(%r14,%r15), %xmm4
000000010000b37b	pcmpeqb	%xmm2, %xmm0
000000010000b37f	movdqu	-0x30(%rbx,%r15), %xmm1
000000010000b386	movdqu	-0x20(%rbx,%r15), %xmm9
000000010000b38d	movdqu	-0x10(%rbx,%r15), %xmm7
000000010000b394	movdqu	(%rbx,%r15), %xmm5
000000010000b39a	pcmpeqb	%xmm3, %xmm1
000000010000b39e	pand	%xmm0, %xmm1
000000010000b3a2	pmovmskb	%xmm1, %edx
000000010000b3a6	testl	%edx, %edx
000000010000b3a8	jne	0x10000b41a
000000010000b3aa	pcmpeqb	%xmm2, %xmm8
000000010000b3af	pcmpeqb	%xmm3, %xmm9
000000010000b3b4	pand	%xmm8, %xmm9
000000010000b3b9	pmovmskb	%xmm9, %edx
000000010000b3be	testw	%dx, %dx
000000010000b3c1	jne	0x10000b4aa
000000010000b3c7	pcmpeqb	%xmm2, %xmm6
000000010000b3cb	pcmpeqb	%xmm3, %xmm7
000000010000b3cf	pand	%xmm6, %xmm7
000000010000b3d3	pmovmskb	%xmm7, %edx
000000010000b3d7	testw	%dx, %dx
000000010000b3da	jne	0x10000b517
000000010000b3e0	pcmpeqb	%xmm2, %xmm4
000000010000b3e4	pcmpeqb	%xmm3, %xmm5
000000010000b3e8	pand	%xmm4, %xmm5
000000010000b3ec	pmovmskb	%xmm5, %edx
000000010000b3f0	testw	%dx, %dx
000000010000b3f3	jne	0x10000b564
000000010000b3f9	leaq	(%rcx,%r15), %rax
000000010000b3fd	addq	$0x40, %r15
000000010000b401	cmpq	%r8, %rax
000000010000b404	jae	0x10000b5b1
000000010000b40a	movl	%r13d, %eax
000000010000b40d	andb	$0x1, %al
000000010000b40f	je	0x10000b360
000000010000b415	jmp	0x10000b5b1
000000010000b41a	andb	$0x1, %r13b
000000010000b41e	movzbl	%r13b, %r13d
000000010000b422	leaq	-0x110(%rbp), %rdi
000000010000b429	movq	%r15, %rsi
000000010000b42c	movl	%r13d, %ecx
000000010000b42f	movdqa	%xmm4, -0x60(%rbp)
000000010000b434	movdqa	%xmm5, -0x50(%rbp)
000000010000b439	movdqa	%xmm6, -0xa0(%rbp)
000000010000b441	movdqa	%xmm7, -0x90(%rbp)
000000010000b449	movdqa	%xmm8, -0x150(%rbp)
000000010000b452	movdqa	%xmm9, -0x140(%rbp)
000000010000b45b	callq	__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E ## core::str::pattern::simd_contains::_$u7b$$u7b$closure$u7d$$u7d$::h0ea9f0c76e788be3
000000010000b460	movdqa	-0x140(%rbp), %xmm9
000000010000b469	movdqa	-0x150(%rbp), %xmm8
000000010000b472	movdqa	-0x90(%rbp), %xmm7
000000010000b47a	movdqa	-0xa0(%rbp), %xmm6
000000010000b482	movdqa	-0x50(%rbp), %xmm5
000000010000b487	movdqa	-0x60(%rbp), %xmm4
000000010000b48c	movq	-0x40(%rbp), %rcx
000000010000b490	movdqa	-0x70(%rbp), %xmm3
000000010000b495	movdqa	-0x80(%rbp), %xmm2
000000010000b49a	movq	-0x38(%rbp), %r9
000000010000b49e	movq	-0x30(%rbp), %r8
000000010000b4a2	orb	%al, %r13b
000000010000b4a5	jmp	0x10000b3aa
000000010000b4aa	leaq	0x10(%r15), %rsi
000000010000b4ae	andb	$0x1, %r13b
000000010000b4b2	movzbl	%r13b, %r13d
000000010000b4b6	leaq	-0x110(%rbp), %rdi
000000010000b4bd	movl	%r13d, %ecx
000000010000b4c0	movdqa	%xmm4, -0x60(%rbp)
000000010000b4c5	movdqa	%xmm5, -0x50(%rbp)
000000010000b4ca	movdqa	%xmm6, -0xa0(%rbp)
000000010000b4d2	movdqa	%xmm7, -0x90(%rbp)
000000010000b4da	callq	__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E ## core::str::pattern::simd_contains::_$u7b$$u7b$closure$u7d$$u7d$::h0ea9f0c76e788be3
000000010000b4df	movdqa	-0x90(%rbp), %xmm7
000000010000b4e7	movdqa	-0xa0(%rbp), %xmm6
000000010000b4ef	movdqa	-0x50(%rbp), %xmm5
000000010000b4f4	movdqa	-0x60(%rbp), %xmm4
000000010000b4f9	movq	-0x40(%rbp), %rcx
000000010000b4fd	movdqa	-0x70(%rbp), %xmm3
000000010000b502	movdqa	-0x80(%rbp), %xmm2
000000010000b507	movq	-0x38(%rbp), %r9
000000010000b50b	movq	-0x30(%rbp), %r8
000000010000b50f	orb	%al, %r13b
000000010000b512	jmp	0x10000b3c7
000000010000b517	leaq	0x20(%r15), %rsi
000000010000b51b	andb	$0x1, %r13b
000000010000b51f	movzbl	%r13b, %r13d
000000010000b523	leaq	-0x110(%rbp), %rdi
000000010000b52a	movl	%r13d, %ecx
000000010000b52d	movdqa	%xmm4, -0x60(%rbp)
000000010000b532	movdqa	%xmm5, -0x50(%rbp)
000000010000b537	callq	__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E ## core::str::pattern::simd_contains::_$u7b$$u7b$closure$u7d$$u7d$::h0ea9f0c76e788be3
000000010000b53c	movdqa	-0x50(%rbp), %xmm5
000000010000b541	movdqa	-0x60(%rbp), %xmm4
000000010000b546	movq	-0x40(%rbp), %rcx
000000010000b54a	movdqa	-0x70(%rbp), %xmm3
000000010000b54f	movdqa	-0x80(%rbp), %xmm2
000000010000b554	movq	-0x38(%rbp), %r9
000000010000b558	movq	-0x30(%rbp), %r8
000000010000b55c	orb	%al, %r13b
000000010000b55f	jmp	0x10000b3e0
000000010000b564	leaq	0x30(%r15), %rsi
000000010000b568	andb	$0x1, %r13b
000000010000b56c	movzbl	%r13b, %r13d
000000010000b570	leaq	-0x110(%rbp), %rdi
000000010000b577	movl	%r13d, %ecx
000000010000b57a	callq	__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E ## core::str::pattern::simd_contains::_$u7b$$u7b$closure$u7d$$u7d$::h0ea9f0c76e788be3
000000010000b57f	movq	-0x40(%rbp), %rcx
000000010000b583	movdqa	-0x70(%rbp), %xmm3
000000010000b588	movdqa	-0x80(%rbp), %xmm2
000000010000b58d	movq	-0x38(%rbp), %r9
000000010000b591	movq	-0x30(%rbp), %r8
000000010000b595	orb	%al, %r13b
000000010000b598	leaq	(%rcx,%r15), %rax
000000010000b59c	addq	$0x40, %r15
000000010000b5a0	cmpq	%r8, %rax
000000010000b5a3	jb	0x10000b40a
000000010000b5a9	jmp	0x10000b5b1
000000010000b5ab	xorl	%r13d, %r13d
000000010000b5ae	xorl	%r15d, %r15d
000000010000b5b1	leaq	0xf(%r9,%r15), %rcx
000000010000b5b6	movl	%r13d, %eax
000000010000b5b9	andb	$0x1, %al
000000010000b5bb	cmpq	%r8, %rcx
000000010000b5be	jae	0x10000b632
000000010000b5c0	testb	%al, %al
000000010000b5c2	jne	0x10000b632
000000010000b5c4	addq	$0x1f, %r9
000000010000b5c8	leaq	(%r14,%r12), %rbx
000000010000b5cc	nopl	(%rax)
000000010000b5d0	movdqu	(%r14,%r15), %xmm0
000000010000b5d6	movdqu	(%rbx,%r15), %xmm1
000000010000b5dc	pcmpeqb	%xmm2, %xmm0
000000010000b5e0	pcmpeqb	%xmm3, %xmm1
000000010000b5e4	pand	%xmm0, %xmm1
000000010000b5e8	pmovmskb	%xmm1, %edx
000000010000b5ec	testl	%edx, %edx
000000010000b5ee	jne	0x10000b608
000000010000b5f0	leaq	(%r9,%r15), %rcx
000000010000b5f4	movl	%r13d, %eax
000000010000b5f7	andb	$0x1, %al
000000010000b5f9	cmpq	%r8, %rcx
000000010000b5fc	jae	0x10000b632
000000010000b5fe	addq	$0x10, %r15
000000010000b602	testb	%al, %al
000000010000b604	je	0x10000b5d0
000000010000b606	jmp	0x10000b632
000000010000b608	leaq	-0x110(%rbp), %rdi
000000010000b60f	movq	%r15, %rsi
000000010000b612	xorl	%ecx, %ecx
000000010000b614	movq	%r9, %r13
000000010000b617	callq	__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E ## core::str::pattern::simd_contains::_$u7b$$u7b$closure$u7d$$u7d$::h0ea9f0c76e788be3
000000010000b61c	movdqa	-0x70(%rbp), %xmm3
000000010000b621	movdqa	-0x80(%rbp), %xmm2
000000010000b626	movq	%r13, %r9
000000010000b629	movq	-0x30(%rbp), %r8
000000010000b62d	movl	%eax, %r13d
000000010000b630	jmp	0x10000b5f0
000000010000b632	subq	-0xa8(%rbp), %r8
000000010000b639	leaq	-0x10(%r14,%r8), %rcx
000000010000b63e	movdqu	-0x10(%r14,%r8), %xmm0
000000010000b645	movdqu	(%r12,%rcx), %xmm1
000000010000b64b	pcmpeqb	%xmm2, %xmm0
000000010000b64f	pcmpeqb	%xmm3, %xmm1
000000010000b653	pand	%xmm0, %xmm1
000000010000b657	pmovmskb	%xmm1, %edx
000000010000b65b	testl	%edx, %edx
000000010000b65d	jne	0x10000b6db
000000010000b65f	andb	$0x1, %r13b
000000010000b663	jmp	0x10000b69d
000000010000b665	cmpb	$0x0, -0xf6(%rbp)
000000010000b66c	je	0x10000b6b2
000000010000b66e	xorl	%eax, %eax
000000010000b670	movq	%rax, -0x128(%rbp)
000000010000b677	jmp	0x10000b691
000000010000b679	movb	$0x1, %r13b
000000010000b67c	jmp	0x10000b69d
000000010000b67e	movl	$0x1, (%rsp)
000000010000b685	leaq	-0x128(%rbp), %rdi
000000010000b68c	callq	__ZN4core3str7pattern14TwoWaySearcher4next17hfa90786d61c92b5cE ## core::str::pattern::TwoWaySearcher::next::hfa90786d61c92b5c
000000010000b691	cmpq	$0x0, -0x128(%rbp)
000000010000b699	setne	%r13b
000000010000b69d	movl	%r13d, %eax
000000010000b6a0	addq	$0x138, %rsp                    ## imm = 0x138
000000010000b6a7	popq	%rbx
000000010000b6a8	popq	%r12
000000010000b6aa	popq	%r13
000000010000b6ac	popq	%r14
000000010000b6ae	popq	%r15
000000010000b6b0	popq	%rbp
000000010000b6b1	retq
000000010000b6b2	movzbl	-0xf8(%rbp), %esi
000000010000b6b9	movq	-0x108(%rbp), %rax
000000010000b6c0	movq	%rcx, %rdi
000000010000b6c3	testq	%rax, %rax
000000010000b6c6	je	0x10000b707
000000010000b6c8	movq	%rcx, %rdi
000000010000b6cb	subq	%rax, %rdi
000000010000b6ce	jbe	0x10000b701
000000010000b6d0	cmpb	$-0x40, (%rdx,%rax)
000000010000b6d4	jge	0x10000b707
000000010000b6d6	jmp	0x10000b810
000000010000b6db	addq	$-0x10, %r8
000000010000b6df	testb	%al, %al
000000010000b6e1	setne	%bl
000000010000b6e4	movzbl	%al, %ecx
000000010000b6e7	leaq	-0x110(%rbp), %rdi
000000010000b6ee	movq	%r8, %rsi
000000010000b6f1	callq	__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E ## core::str::pattern::simd_contains::_$u7b$$u7b$closure$u7d$$u7d$::h0ea9f0c76e788be3
000000010000b6f6	movl	%eax, %r13d
000000010000b6f9	orb	%bl, %r13b
000000010000b6fc	jmp	0x10000b65f
000000010000b701	jne	0x10000b810
000000010000b707	testq	%rdi, %rdi
000000010000b70a	je	0x10000b71b
000000010000b70c	movzbl	(%rdx,%rax), %r8d
000000010000b711	testb	%r8b, %r8b
000000010000b714	js	0x10000b725
000000010000b716	movl	%r8d, %edi
000000010000b719	jmp	0x10000b78e
000000010000b71b	testb	%sil, %sil
000000010000b71e	jne	0x10000b793
000000010000b720	jmp	0x10000b66e
000000010000b725	movl	%r8d, %edi
000000010000b728	andl	$0x1f, %edi
000000010000b72b	movzbl	0x1(%rdx,%rax), %r10d
000000010000b731	andl	$0x3f, %r10d
000000010000b735	cmpb	$-0x20, %r8b
000000010000b739	jb	0x10000b76e
000000010000b73b	movzbl	0x2(%rdx,%rax), %r9d
000000010000b741	shll	$0x6, %r10d
000000010000b745	andl	$0x3f, %r9d
000000010000b749	orl	%r10d, %r9d
000000010000b74c	cmpb	$-0x10, %r8b
000000010000b750	jb	0x10000b788
000000010000b752	movzbl	0x3(%rdx,%rax), %r8d
000000010000b758	andl	$0x7, %edi
000000010000b75b	shll	$0x12, %edi
000000010000b75e	shll	$0x6, %r9d
000000010000b762	andl	$0x3f, %r8d
000000010000b766	orl	%r9d, %r8d
000000010000b769	orl	%r8d, %edi
000000010000b76c	jmp	0x10000b78e
000000010000b76e	shll	$0x6, %edi
000000010000b771	orl	%r10d, %edi
000000010000b774	jmp	0x10000b78e
000000010000b776	leaq	0x3cc13(%rip), %rdx
000000010000b77d	movq	%r12, %rdi
000000010000b780	movq	%r9, %rsi
000000010000b783	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000b788	shll	$0xc, %edi
000000010000b78b	orl	%r9d, %edi
000000010000b78e	testb	%sil, %sil
000000010000b791	je	0x10000b7a4
000000010000b793	movl	$0x1, %eax
000000010000b798	movq	%rax, -0x128(%rbp)
000000010000b79f	jmp	0x10000b691
000000010000b7a4	cmpl	$0x110000, %edi                 ## imm = 0x110000
000000010000b7aa	je	0x10000b66e
000000010000b7b0	movl	$0x1, %esi
000000010000b7b5	cmpl	$0x80, %edi
000000010000b7bb	jb	0x10000b7d9
000000010000b7bd	movl	$0x2, %esi
000000010000b7c2	cmpl	$0x800, %edi                    ## imm = 0x800
000000010000b7c8	jb	0x10000b7d9
000000010000b7ca	cmpl	$0x10000, %edi                  ## imm = 0x10000
000000010000b7d0	movl	$0x4, %esi
000000010000b7d5	sbbq	$0x0, %rsi
000000010000b7d9	addq	%rsi, %rax
000000010000b7dc	je	0x10000b7ee
000000010000b7de	movq	%rcx, %rsi
000000010000b7e1	subq	%rax, %rsi
000000010000b7e4	jbe	0x10000b7f3
000000010000b7e6	cmpb	$-0x40, (%rdx,%rax)
000000010000b7ea	jge	0x10000b7f5
000000010000b7ec	jmp	0x10000b810
000000010000b7ee	movq	%rcx, %rsi
000000010000b7f1	jmp	0x10000b7f5
000000010000b7f3	jne	0x10000b810
000000010000b7f5	testq	%rsi, %rsi
000000010000b7f8	je	0x10000b793
000000010000b7fa	cmpb	$0x0, (%rdx,%rax)
000000010000b7fe	jmp	0x10000b793
000000010000b800	leaq	0x3cb71(%rip), %rdx
000000010000b807	xorl	%edi, %edi
000000010000b809	xorl	%esi, %esi
000000010000b80b	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010000b810	leaq	0x3d001(%rip), %r8
000000010000b817	movq	%rdx, %rdi
000000010000b81a	movq	%rcx, %rsi
000000010000b81d	movq	%rax, %rdx
000000010000b820	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010000b825	nopw	%cs:(%rax,%rax)
000000010000b82f	nop
__ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f9b3466bd49d1adE:
000000010000b830	pushq	%rbp
000000010000b831	movq	%rsp, %rbp
000000010000b834	movq	%rsi, %rdx
000000010000b837	movq	(%rdi), %rax
000000010000b83a	movq	0x10(%rdi), %rsi
000000010000b83e	movq	%rax, %rdi
000000010000b841	popq	%rbp
000000010000b842	jmp	__ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad51f5198b8b56bE ## _$LT$str$u20$as$u20$core..fmt..Debug$GT$::fmt::h9ad51f5198b8b56b
000000010000b847	nopw	(%rax,%rax)
__ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h398177d02bce51b1E:
000000010000b850	pushq	%rbp
000000010000b851	movq	%rsp, %rbp
000000010000b854	pushq	%r15
000000010000b856	pushq	%r14
000000010000b858	pushq	%r13
000000010000b85a	pushq	%r12
000000010000b85c	pushq	%rbx
000000010000b85d	subq	$0x18, %rsp
000000010000b861	movq	%rsi, %r14
000000010000b864	movq	%rdi, %r8
000000010000b867	movq	0x40(%rsi), %rax
000000010000b86b	testq	%rax, %rax
000000010000b86e	je	0x10000b9a3
000000010000b874	decq	%rax
000000010000b877	movq	%rax, 0x40(%r14)
000000010000b87b	movq	(%r14), %rax
000000010000b87e	movq	0x8(%r14), %rdi
000000010000b882	testq	%rax, %rax
000000010000b885	je	0x10000ba4c
000000010000b88b	testq	%rdi, %rdi
000000010000b88e	jne	0x10000ba4c
000000010000b894	leaq	0x10(%r14), %rax
000000010000b898	movq	0x10(%r14), %rdi
000000010000b89c	movq	0x18(%r14), %rcx
000000010000b8a0	testq	%rcx, %rcx
000000010000b8a3	je	0x10000b91e
000000010000b8a5	movq	%rcx, %rdx
000000010000b8a8	andq	$0x7, %rdx
000000010000b8ac	je	0x10000bb83
000000010000b8b2	xorl	%esi, %esi
000000010000b8b4	nopw	%cs:(%rax,%rax)
000000010000b8be	nop
000000010000b8c0	movq	0x538(%rdi), %rdi
000000010000b8c7	incq	%rsi
000000010000b8ca	cmpq	%rsi, %rdx
000000010000b8cd	jne	0x10000b8c0
000000010000b8cf	movq	%rcx, %rdx
000000010000b8d2	subq	%rsi, %rdx
000000010000b8d5	cmpq	$0x8, %rcx
000000010000b8d9	jb	0x10000b91e
000000010000b8db	nopl	(%rax,%rax)
000000010000b8e0	movq	0x538(%rdi), %rcx
000000010000b8e7	movq	0x538(%rcx), %rcx
000000010000b8ee	movq	0x538(%rcx), %rcx
000000010000b8f5	movq	0x538(%rcx), %rcx
000000010000b8fc	movq	0x538(%rcx), %rcx
000000010000b903	movq	0x538(%rcx), %rcx
000000010000b90a	movq	0x538(%rcx), %rcx
000000010000b911	movq	0x538(%rcx), %rdi
000000010000b918	addq	$-0x8, %rdx
000000010000b91c	jne	0x10000b8e0
000000010000b91e	movq	$0x0, 0x8(%rax)
000000010000b926	movq	$0x0, (%rax)
000000010000b92d	movq	$0x1, (%r14)
000000010000b934	movq	%rdi, 0x8(%r14)
000000010000b938	xorl	%r15d, %r15d
000000010000b93b	xorl	%eax, %eax
000000010000b93d	movzwl	0x532(%rdi), %ecx
000000010000b944	cmpq	%rcx, %r15
000000010000b947	jae	0x10000ba6d
000000010000b94d	movq	%rax, %r13
000000010000b950	movq	%rdi, %r12
000000010000b953	testq	%r13, %r13
000000010000b956	je	0x10000bad0
000000010000b95c	movq	0x540(%r12,%r15,8), %rax
000000010000b964	movq	%r13, %rcx
000000010000b967	decq	%rcx
000000010000b96a	je	0x10000b99c
000000010000b96c	leaq	-0x2(%r13), %rdx
000000010000b970	movq	%rcx, %rsi
000000010000b973	andq	$0x7, %rsi
000000010000b977	je	0x10000b992
000000010000b979	xorl	%edi, %edi
000000010000b97b	nopl	(%rax,%rax)
000000010000b980	movq	0x538(%rax), %rax
000000010000b987	incq	%rdi
000000010000b98a	cmpq	%rdi, %rsi
000000010000b98d	jne	0x10000b980
000000010000b98f	subq	%rdi, %rcx
000000010000b992	cmpq	$0x7, %rdx
000000010000b996	jae	0x10000bad9
000000010000b99c	xorl	%edx, %edx
000000010000b99e	jmp	0x10000bb1e
000000010000b9a3	movq	0x8(%r14), %rcx
000000010000b9a7	movq	0x10(%r14), %r15
000000010000b9ab	movq	0x18(%r14), %rax
000000010000b9af	cmpq	$0x0, (%r14)
000000010000b9b3	movq	$0x0, (%r14)
000000010000b9ba	je	0x10000ba40
000000010000b9c0	testq	%rcx, %rcx
000000010000b9c3	je	0x10000bb48
000000010000b9c9	movq	%r15, %r14
000000010000b9cc	movq	%rcx, %r15
000000010000b9cf	movq	0x4d0(%r15), %rax
000000010000b9d6	movq	%r8, %r12
000000010000b9d9	testq	%rax, %rax
000000010000b9dc	je	0x10000ba1f
000000010000b9de	movl	$0x538, %ebx                    ## imm = 0x538
000000010000b9e3	movq	%r15, %rdi
000000010000b9e6	movq	%r14, %rcx
000000010000b9e9	nopl	(%rax)
000000010000b9f0	movq	%rax, %r15
000000010000b9f3	leaq	0x1(%rcx), %r14
000000010000b9f7	testq	%rcx, %rcx
000000010000b9fa	movl	$0x598, %esi                    ## imm = 0x598
000000010000b9ff	cmoveq	%rbx, %rsi
000000010000ba03	movl	$0x8, %edx
000000010000ba08	callq	___rust_dealloc
000000010000ba0d	movq	0x4d0(%r15), %rax
000000010000ba14	movq	%r15, %rdi
000000010000ba17	movq	%r14, %rcx
000000010000ba1a	testq	%rax, %rax
000000010000ba1d	jne	0x10000b9f0
000000010000ba1f	testq	%r14, %r14
000000010000ba22	movl	$0x538, %eax                    ## imm = 0x538
000000010000ba27	movl	$0x598, %esi                    ## imm = 0x598
000000010000ba2c	cmoveq	%rax, %rsi
000000010000ba30	movl	$0x8, %edx
000000010000ba35	movq	%r15, %rdi
000000010000ba38	callq	___rust_dealloc
000000010000ba3d	movq	%r12, %r8
000000010000ba40	movq	$0x0, (%r8)
000000010000ba47	jmp	0x10000bb39
000000010000ba4c	testq	%rax, %rax
000000010000ba4f	je	0x10000bc28
000000010000ba55	movq	0x10(%r14), %rax
000000010000ba59	movq	0x18(%r14), %r15
000000010000ba5d	movzwl	0x532(%rdi), %ecx
000000010000ba64	cmpq	%rcx, %r15
000000010000ba67	jb	0x10000b94d
000000010000ba6d	movq	%r8, -0x38(%rbp)
000000010000ba71	movl	$0x538, %ebx                    ## imm = 0x538
000000010000ba76	nopw	%cs:(%rax,%rax)
000000010000ba80	movq	0x4d0(%rdi), %r12
000000010000ba87	testq	%r12, %r12
000000010000ba8a	je	0x10000bbf3
000000010000ba90	movzwl	0x530(%rdi), %r15d
000000010000ba98	leaq	0x1(%rax), %r13
000000010000ba9c	testq	%rax, %rax
000000010000ba9f	movl	$0x598, %esi                    ## imm = 0x598
000000010000baa4	cmoveq	%rbx, %rsi
000000010000baa8	movl	$0x8, %edx
000000010000baad	callq	___rust_dealloc
000000010000bab2	movq	%r12, %rdi
000000010000bab5	movq	%r13, %rax
000000010000bab8	cmpw	0x532(%r12), %r15w
000000010000bac1	jae	0x10000ba80
000000010000bac3	movq	-0x38(%rbp), %r8
000000010000bac7	testq	%r13, %r13
000000010000baca	jne	0x10000b95c
000000010000bad0	leaq	0x1(%r15), %rdx
000000010000bad4	movq	%r12, %rax
000000010000bad7	jmp	0x10000bb1e
000000010000bad9	xorl	%edx, %edx
000000010000badb	nopl	(%rax,%rax)
000000010000bae0	movq	0x538(%rax), %rax
000000010000bae7	movq	0x538(%rax), %rax
000000010000baee	movq	0x538(%rax), %rax
000000010000baf5	movq	0x538(%rax), %rax
000000010000bafc	movq	0x538(%rax), %rax
000000010000bb03	movq	0x538(%rax), %rax
000000010000bb0a	movq	0x538(%rax), %rax
000000010000bb11	movq	0x538(%rax), %rax
000000010000bb18	addq	$-0x8, %rcx
000000010000bb1c	jne	0x10000bae0
000000010000bb1e	movq	%rax, 0x8(%r14)
000000010000bb22	movq	$0x0, 0x10(%r14)
000000010000bb2a	movq	%rdx, 0x18(%r14)
000000010000bb2e	movq	%r12, (%r8)
000000010000bb31	movq	%r13, 0x8(%r8)
000000010000bb35	movq	%r15, 0x10(%r8)
000000010000bb39	addq	$0x18, %rsp
000000010000bb3d	popq	%rbx
000000010000bb3e	popq	%r12
000000010000bb40	popq	%r13
000000010000bb42	popq	%r14
000000010000bb44	popq	%r15
000000010000bb46	popq	%rbp
000000010000bb47	retq
000000010000bb48	testq	%rax, %rax
000000010000bb4b	je	0x10000bb95
000000010000bb4d	movq	%rax, %rcx
000000010000bb50	andq	$0x7, %rcx
000000010000bb54	je	0x10000bb9d
000000010000bb56	xorl	%edx, %edx
000000010000bb58	nopl	(%rax,%rax)
000000010000bb60	movq	0x538(%r15), %r15
000000010000bb67	incq	%rdx
000000010000bb6a	cmpq	%rdx, %rcx
000000010000bb6d	jne	0x10000bb60
000000010000bb6f	movq	%rax, %rcx
000000010000bb72	subq	%rdx, %rcx
000000010000bb75	xorl	%r14d, %r14d
000000010000bb78	cmpq	$0x8, %rax
000000010000bb7c	jae	0x10000bbb0
000000010000bb7e	jmp	0x10000b9cf
000000010000bb83	movq	%rcx, %rdx
000000010000bb86	cmpq	$0x8, %rcx
000000010000bb8a	jae	0x10000b8e0
000000010000bb90	jmp	0x10000b91e
000000010000bb95	xorl	%r14d, %r14d
000000010000bb98	jmp	0x10000b9cf
000000010000bb9d	movq	%rax, %rcx
000000010000bba0	xorl	%r14d, %r14d
000000010000bba3	cmpq	$0x8, %rax
000000010000bba7	jb	0x10000b9cf
000000010000bbad	nopl	(%rax)
000000010000bbb0	movq	0x538(%r15), %rax
000000010000bbb7	movq	0x538(%rax), %rax
000000010000bbbe	movq	0x538(%rax), %rax
000000010000bbc5	movq	0x538(%rax), %rax
000000010000bbcc	movq	0x538(%rax), %rax
000000010000bbd3	movq	0x538(%rax), %rax
000000010000bbda	movq	0x538(%rax), %rax
000000010000bbe1	movq	0x538(%rax), %r15
000000010000bbe8	addq	$-0x8, %rcx
000000010000bbec	jne	0x10000bbb0
000000010000bbee	jmp	0x10000b9cf
000000010000bbf3	testq	%rax, %rax
000000010000bbf6	movl	$0x538, %eax                    ## imm = 0x538
000000010000bbfb	movl	$0x598, %esi                    ## imm = 0x598
000000010000bc00	cmoveq	%rax, %rsi
000000010000bc04	movl	$0x8, %edx
000000010000bc09	callq	___rust_dealloc
000000010000bc0e	leaq	0x380dc(%rip), %rdi
000000010000bc15	leaq	0x3ca6c(%rip), %rdx
000000010000bc1c	movl	$0x2b, %esi
000000010000bc21	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010000bc26	ud2
000000010000bc28	leaq	0x380c2(%rip), %rdi
000000010000bc2f	leaq	0x3ca6a(%rip), %rdx
000000010000bc36	movl	$0x2b, %esi
000000010000bc3b	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010000bc40	movq	%rax, %rbx
000000010000bc43	leaq	-0x30(%rbp), %rdi
000000010000bc47	callq	__ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17hc65cbfd2057fc601E ## core::ptr::drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$::hc65cbfd2057fc601
000000010000bc4c	movq	%rbx, %rdi
000000010000bc4f	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000bc54	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010000bc59	nopl	(%rax)
__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE:
000000010000bc60	pushq	%rbp
000000010000bc61	movq	%rsp, %rbp
000000010000bc64	pushq	%r15
000000010000bc66	pushq	%r14
000000010000bc68	pushq	%r12
000000010000bc6a	pushq	%rbx
000000010000bc6b	movq	%rdi, %rbx
000000010000bc6e	movq	0x10(%rdi), %r14
000000010000bc72	movq	0x20(%rdi), %r15
000000010000bc76	testq	%r15, %r15
000000010000bc79	je	0x10000bcbf
000000010000bc7b	leaq	0x10(%r14), %r12
000000010000bc7f	jmp	0x10000bc99
000000010000bc81	nopw	%cs:(%rax,%rax)
000000010000bc8b	nopl	(%rax,%rax)
000000010000bc90	addq	$0x70, %r12
000000010000bc94	decq	%r15
000000010000bc97	je	0x10000bcbf
000000010000bc99	cmpq	$0x0, -0x10(%r12)
000000010000bc9f	je	0x10000bc90
000000010000bca1	movq	(%r12), %rsi
000000010000bca5	testq	%rsi, %rsi
000000010000bca8	je	0x10000bc90
000000010000bcaa	movq	-0x8(%r12), %rdi
000000010000bcaf	shlq	$0x4, %rsi
000000010000bcb3	movl	$0x8, %edx
000000010000bcb8	callq	___rust_dealloc
000000010000bcbd	jmp	0x10000bc90
000000010000bcbf	movq	0x18(%rbx), %rax
000000010000bcc3	testq	%rax, %rax
000000010000bcc6	je	0x10000bcd9
000000010000bcc8	imulq	$0x70, %rax, %rsi
000000010000bccc	movl	$0x8, %edx
000000010000bcd1	movq	%r14, %rdi
000000010000bcd4	callq	___rust_dealloc
000000010000bcd9	leaq	0x28(%rbx), %rdi
000000010000bcdd	callq	__ZN4core3ptr108drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$17hbf8894e36be46d86E ## core::ptr::drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$::hbf8894e36be46d86
000000010000bce2	cmpq	$-0x1, %rbx
000000010000bce6	je	0x10000bd09
000000010000bce8	lock
000000010000bce9	decq	0x8(%rbx)
000000010000bced	jne	0x10000bd09
000000010000bcef	movl	$0x40, %esi
000000010000bcf4	movl	$0x8, %edx
000000010000bcf9	movq	%rbx, %rdi
000000010000bcfc	popq	%rbx
000000010000bcfd	popq	%r12
000000010000bcff	popq	%r14
000000010000bd01	popq	%r15
000000010000bd03	popq	%rbp
000000010000bd04	jmp	___rust_dealloc
000000010000bd09	popq	%rbx
000000010000bd0a	popq	%r12
000000010000bd0c	popq	%r14
000000010000bd0e	popq	%r15
000000010000bd10	popq	%rbp
000000010000bd11	retq
000000010000bd12	nopw	%cs:(%rax,%rax)
000000010000bd1c	nopl	(%rax)
__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE:
000000010000bd20	pushq	%rbp
000000010000bd21	movq	%rsp, %rbp
000000010000bd24	pushq	%r14
000000010000bd26	pushq	%rbx
000000010000bd27	movq	%rdi, %rbx
000000010000bd2a	leaq	0x10(%rdi), %r14
000000010000bd2e	addq	$0x28, %rdi
000000010000bd32	callq	__ZN65_$LT$std..sys..unix..fs..Dir$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0d39f6eaa3518a61E ## _$LT$std..sys..unix..fs..Dir$u20$as$u20$core..ops..drop..Drop$GT$::drop::h0d39f6eaa3518a61
000000010000bd37	movq	0x18(%rbx), %rsi
000000010000bd3b	testq	%rsi, %rsi
000000010000bd3e	je	0x10000bd4d
000000010000bd40	movq	(%r14), %rdi
000000010000bd43	movl	$0x1, %edx
000000010000bd48	callq	___rust_dealloc
000000010000bd4d	cmpq	$-0x1, %rbx
000000010000bd51	je	0x10000bd70
000000010000bd53	lock
000000010000bd54	decq	0x8(%rbx)
000000010000bd58	jne	0x10000bd70
000000010000bd5a	movl	$0x30, %esi
000000010000bd5f	movl	$0x8, %edx
000000010000bd64	movq	%rbx, %rdi
000000010000bd67	popq	%rbx
000000010000bd68	popq	%r14
000000010000bd6a	popq	%rbp
000000010000bd6b	jmp	___rust_dealloc
000000010000bd70	popq	%rbx
000000010000bd71	popq	%r14
000000010000bd73	popq	%rbp
000000010000bd74	retq
000000010000bd75	movq	%rax, %rbx
000000010000bd78	movq	%r14, %rdi
000000010000bd7b	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010000bd80	movq	%rbx, %rdi
000000010000bd83	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000bd88	nopl	(%rax,%rax)
__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h15eb3a8850fcc87cE:
000000010000bd90	cmpq	$-0x1, %rdi
000000010000bd94	je	0x10000bdb1
000000010000bd96	pushq	%rbp
000000010000bd97	movq	%rsp, %rbp
000000010000bd9a	lock
000000010000bd9b	decq	0x8(%rdi)
000000010000bd9f	popq	%rbp
000000010000bda0	jne	0x10000bdb1
000000010000bda2	movl	$0x38, %esi
000000010000bda7	movl	$0x8, %edx
000000010000bdac	jmp	___rust_dealloc
000000010000bdb1	retq
000000010000bdb2	nopw	%cs:(%rax,%rax)
000000010000bdbc	nopl	(%rax)
__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E:
000000010000bdc0	pushq	%rbp
000000010000bdc1	movq	%rsp, %rbp
000000010000bdc4	pushq	%r14
000000010000bdc6	pushq	%rbx
000000010000bdc7	movq	(%rdi), %rbx
000000010000bdca	movq	0xe0(%rbx), %rax
000000010000bdd1	testq	%rax, %rax
000000010000bdd4	je	0x10000bde8
000000010000bdd6	lock
000000010000bdd7	decq	(%rax)
000000010000bdda	jne	0x10000bde8
000000010000bddc	leaq	0xe0(%rbx), %rdi
000000010000bde3	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
000000010000bde8	movq	0xe8(%rbx), %rdi
000000010000bdef	testq	%rdi, %rdi
000000010000bdf2	je	0x10000be04
000000010000bdf4	lock
000000010000bdf5	decq	-0x10(%rdi)
000000010000bdf9	jne	0x10000be04
000000010000bdfb	addq	$-0x10, %rdi
000000010000bdff	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
000000010000be04	cmpq	$-0x1, %rbx
000000010000be08	je	0x10000be27
000000010000be0a	lock
000000010000be0b	decq	0x8(%rbx)
000000010000be0f	jne	0x10000be27
000000010000be11	movl	$0xf8, %esi
000000010000be16	movl	$0x8, %edx
000000010000be1b	movq	%rbx, %rdi
000000010000be1e	popq	%rbx
000000010000be1f	popq	%r14
000000010000be21	popq	%rbp
000000010000be22	jmp	___rust_dealloc
000000010000be27	popq	%rbx
000000010000be28	popq	%r14
000000010000be2a	popq	%rbp
000000010000be2b	retq
000000010000be2c	movq	%rax, %r14
000000010000be2f	addq	$0xe8, %rbx
000000010000be36	movq	%rbx, %rdi
000000010000be39	callq	__ZN4core3ptr60drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$17h8149c1ec4ca523f5E ## core::ptr::drop_in_place$LT$gimli..read..abbrev..AbbreviationsCache$GT$::h8149c1ec4ca523f5
000000010000be3e	movq	%r14, %rdi
000000010000be41	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000be46	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010000be4b	nopl	(%rax,%rax)
__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E:
000000010000be50	pushq	%rbp
000000010000be51	movq	%rsp, %rbp
000000010000be54	pushq	%rbx
000000010000be55	pushq	%rax
000000010000be56	movq	%rdi, %rbx
000000010000be59	movq	0x18(%rdi), %rdi
000000010000be5d	testq	%rdi, %rdi
000000010000be60	je	0x10000be78
000000010000be62	movb	$0x0, (%rdi)
000000010000be65	movq	0x20(%rbx), %rsi
000000010000be69	testq	%rsi, %rsi
000000010000be6c	je	0x10000be78
000000010000be6e	movl	$0x1, %edx
000000010000be73	callq	___rust_dealloc
000000010000be78	movq	0x28(%rbx), %rdi
000000010000be7c	callq	0x100042784                     ## symbol stub for: _dispatch_release
000000010000be81	cmpq	$-0x1, %rbx
000000010000be85	je	0x10000bea6
000000010000be87	lock
000000010000be88	decq	0x8(%rbx)
000000010000be8c	jne	0x10000bea6
000000010000be8e	movl	$0x38, %esi
000000010000be93	movl	$0x8, %edx
000000010000be98	movq	%rbx, %rdi
000000010000be9b	addq	$0x8, %rsp
000000010000be9f	popq	%rbx
000000010000bea0	popq	%rbp
000000010000bea1	jmp	___rust_dealloc
000000010000bea6	addq	$0x8, %rsp
000000010000beaa	popq	%rbx
000000010000beab	popq	%rbp
000000010000beac	retq
000000010000bead	nopl	(%rax)
__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E:
000000010000beb0	pushq	%rbp
000000010000beb1	movq	%rsp, %rbp
000000010000beb4	pushq	%r14
000000010000beb6	pushq	%rbx
000000010000beb7	movq	%rdi, %rbx
000000010000beba	movq	0x10(%rdi), %r14
000000010000bebe	testq	%r14, %r14
000000010000bec1	je	0x10000becf
000000010000bec3	movq	%r14, %rdi
000000010000bec6	callq	0x100042814                     ## symbol stub for: _pthread_mutex_trylock
000000010000becb	testl	%eax, %eax
000000010000becd	je	0x10000bf0e
000000010000becf	movq	0x28(%rbx), %rsi
000000010000bed3	testq	%rsi, %rsi
000000010000bed6	je	0x10000bee6
000000010000bed8	movq	0x20(%rbx), %rdi
000000010000bedc	movl	$0x1, %edx
000000010000bee1	callq	___rust_dealloc
000000010000bee6	cmpq	$-0x1, %rbx
000000010000beea	je	0x10000bf09
000000010000beec	lock
000000010000beed	decq	0x8(%rbx)
000000010000bef1	jne	0x10000bf09
000000010000bef3	movl	$0x38, %esi
000000010000bef8	movl	$0x8, %edx
000000010000befd	movq	%rbx, %rdi
000000010000bf00	popq	%rbx
000000010000bf01	popq	%r14
000000010000bf03	popq	%rbp
000000010000bf04	jmp	___rust_dealloc
000000010000bf09	popq	%rbx
000000010000bf0a	popq	%r14
000000010000bf0c	popq	%rbp
000000010000bf0d	retq
000000010000bf0e	movq	%r14, %rdi
000000010000bf11	callq	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
000000010000bf16	movq	%r14, %rdi
000000010000bf19	callq	0x100042802                     ## symbol stub for: _pthread_mutex_destroy
000000010000bf1e	movl	$0x40, %esi
000000010000bf23	movl	$0x8, %edx
000000010000bf28	movq	%r14, %rdi
000000010000bf2b	callq	___rust_dealloc
000000010000bf30	movq	0x28(%rbx), %rsi
000000010000bf34	testq	%rsi, %rsi
000000010000bf37	jne	0x10000bed8
000000010000bf39	jmp	0x10000bee6
000000010000bf3b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E:
000000010000bf40	pushq	%rbp
000000010000bf41	movq	%rsp, %rbp
000000010000bf44	pushq	%r15
000000010000bf46	pushq	%r14
000000010000bf48	pushq	%rbx
000000010000bf49	pushq	%rax
000000010000bf4a	movq	%rdx, %rbx
000000010000bf4d	movq	%rdi, %r14
000000010000bf50	testq	%rsi, %rsi
000000010000bf53	je	0x10000bfa8
000000010000bf55	movq	%rsi, %r15
000000010000bf58	cmpq	$0x0, 0x8(%rcx)
000000010000bf5d	je	0x10000bf81
000000010000bf5f	movq	0x10(%rcx), %rsi
000000010000bf63	testq	%rsi, %rsi
000000010000bf66	je	0x10000bf81
000000010000bf68	movq	(%rcx), %rdi
000000010000bf6b	movq	%r15, %rdx
000000010000bf6e	movq	%rbx, %rcx
000000010000bf71	callq	___rust_realloc
000000010000bf76	testq	%rax, %rax
000000010000bf79	jne	0x10000bfa0
000000010000bf7b	movq	%r15, 0x8(%r14)
000000010000bf7f	jmp	0x10000bfb0
000000010000bf81	testq	%rbx, %rbx
000000010000bf84	je	0x10000bfc7
000000010000bf86	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010000bf8d	movzbl	(%rax), %eax
000000010000bf90	movq	%rbx, %rdi
000000010000bf93	movq	%r15, %rsi
000000010000bf96	callq	___rust_alloc
000000010000bf9b	testq	%rax, %rax
000000010000bf9e	je	0x10000bf7b
000000010000bfa0	movq	%rax, 0x8(%r14)
000000010000bfa4	xorl	%eax, %eax
000000010000bfa6	jmp	0x10000bfb5
000000010000bfa8	movq	$0x0, 0x8(%r14)
000000010000bfb0	movl	$0x1, %eax
000000010000bfb5	movq	%rbx, 0x10(%r14)
000000010000bfb9	movq	%rax, (%r14)
000000010000bfbc	addq	$0x8, %rsp
000000010000bfc0	popq	%rbx
000000010000bfc1	popq	%r14
000000010000bfc3	popq	%r15
000000010000bfc5	popq	%rbp
000000010000bfc6	retq
000000010000bfc7	movq	%r15, %rax
000000010000bfca	testq	%rax, %rax
000000010000bfcd	jne	0x10000bfa0
000000010000bfcf	jmp	0x10000bf7b
000000010000bfd1	nopw	%cs:(%rax,%rax)
000000010000bfdb	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h14d9ad67ad8f2594E:
000000010000bfe0	pushq	%rbp
000000010000bfe1	movq	%rsp, %rbp
000000010000bfe4	pushq	%r14
000000010000bfe6	pushq	%rbx
000000010000bfe7	subq	$0x30, %rsp
000000010000bfeb	incq	%rsi
000000010000bfee	je	0x10000c07e
000000010000bff4	movq	%rdi, %rbx
000000010000bff7	movq	0x8(%rdi), %rax
000000010000bffb	leaq	(%rax,%rax), %rcx
000000010000bfff	cmpq	%rsi, %rcx
000000010000c002	cmovaq	%rcx, %rsi
000000010000c006	cmpq	$0x5, %rsi
000000010000c00a	movl	$0x4, %r14d
000000010000c010	cmovaeq	%rsi, %r14
000000010000c014	xorl	%esi, %esi
000000010000c016	movq	%r14, %rcx
000000010000c019	shrq	$0x3b, %rcx
000000010000c01d	sete	%sil
000000010000c021	movq	%r14, %rdx
000000010000c024	shlq	$0x4, %rdx
000000010000c028	shlq	$0x3, %rsi
000000010000c02c	testq	%rax, %rax
000000010000c02f	je	0x10000c04a
000000010000c031	movq	(%rbx), %rcx
000000010000c034	shlq	$0x4, %rax
000000010000c038	movq	%rcx, -0x28(%rbp)
000000010000c03c	movq	$0x8, -0x20(%rbp)
000000010000c044	movq	%rax, -0x18(%rbp)
000000010000c048	jmp	0x10000c052
000000010000c04a	movq	$0x0, -0x20(%rbp)
000000010000c052	leaq	-0x40(%rbp), %rdi
000000010000c056	leaq	-0x28(%rbp), %rcx
000000010000c05a	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c05f	cmpq	$0x0, -0x40(%rbp)
000000010000c064	movq	-0x38(%rbp), %rdi
000000010000c068	je	0x10000c083
000000010000c06a	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c074	cmpq	%rax, %rdi
000000010000c077	je	0x10000c08a
000000010000c079	testq	%rdi, %rdi
000000010000c07c	jne	0x10000c093
000000010000c07e	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c083	movq	%rdi, (%rbx)
000000010000c086	movq	%r14, 0x8(%rbx)
000000010000c08a	addq	$0x30, %rsp
000000010000c08e	popq	%rbx
000000010000c08f	popq	%r14
000000010000c091	popq	%rbp
000000010000c092	retq
000000010000c093	movq	-0x30(%rbp), %rsi
000000010000c097	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c09c	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h2da4a3ea5354e617E:
000000010000c0a0	pushq	%rbp
000000010000c0a1	movq	%rsp, %rbp
000000010000c0a4	pushq	%r14
000000010000c0a6	pushq	%rbx
000000010000c0a7	subq	$0x30, %rsp
000000010000c0ab	incq	%rsi
000000010000c0ae	je	0x10000c147
000000010000c0b4	movq	%rdi, %rbx
000000010000c0b7	movq	0x8(%rdi), %rax
000000010000c0bb	leaq	(%rax,%rax), %rcx
000000010000c0bf	cmpq	%rsi, %rcx
000000010000c0c2	cmovaq	%rcx, %rsi
000000010000c0c6	cmpq	$0x5, %rsi
000000010000c0ca	movl	$0x4, %r14d
000000010000c0d0	cmovaeq	%rsi, %r14
000000010000c0d4	movabsq	$0x3d226357e16ecf, %rcx         ## imm = 0x3D226357E16ECF
000000010000c0de	xorl	%esi, %esi
000000010000c0e0	cmpq	%rcx, %r14
000000010000c0e3	setb	%sil
000000010000c0e7	imulq	$0x218, %r14, %rdx              ## imm = 0x218
000000010000c0ee	shlq	$0x3, %rsi
000000010000c0f2	testq	%rax, %rax
000000010000c0f5	je	0x10000c113
000000010000c0f7	movq	(%rbx), %rcx
000000010000c0fa	imulq	$0x218, %rax, %rax              ## imm = 0x218
000000010000c101	movq	%rcx, -0x28(%rbp)
000000010000c105	movq	$0x8, -0x20(%rbp)
000000010000c10d	movq	%rax, -0x18(%rbp)
000000010000c111	jmp	0x10000c11b
000000010000c113	movq	$0x0, -0x20(%rbp)
000000010000c11b	leaq	-0x40(%rbp), %rdi
000000010000c11f	leaq	-0x28(%rbp), %rcx
000000010000c123	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c128	cmpq	$0x0, -0x40(%rbp)
000000010000c12d	movq	-0x38(%rbp), %rdi
000000010000c131	je	0x10000c14c
000000010000c133	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c13d	cmpq	%rax, %rdi
000000010000c140	je	0x10000c153
000000010000c142	testq	%rdi, %rdi
000000010000c145	jne	0x10000c15c
000000010000c147	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c14c	movq	%rdi, (%rbx)
000000010000c14f	movq	%r14, 0x8(%rbx)
000000010000c153	addq	$0x30, %rsp
000000010000c157	popq	%rbx
000000010000c158	popq	%r14
000000010000c15a	popq	%rbp
000000010000c15b	retq
000000010000c15c	movq	-0x30(%rbp), %rsi
000000010000c160	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c165	nopw	%cs:(%rax,%rax)
000000010000c16f	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h3522a6f6b7a4a3feE:
000000010000c170	pushq	%rbp
000000010000c171	movq	%rsp, %rbp
000000010000c174	pushq	%r14
000000010000c176	pushq	%rbx
000000010000c177	subq	$0x30, %rsp
000000010000c17b	incq	%rsi
000000010000c17e	je	0x10000c21d
000000010000c184	movq	%rdi, %rbx
000000010000c187	movq	0x8(%rdi), %rax
000000010000c18b	leaq	(%rax,%rax), %rcx
000000010000c18f	cmpq	%rsi, %rcx
000000010000c192	cmovaq	%rcx, %rsi
000000010000c196	cmpq	$0x5, %rsi
000000010000c19a	movl	$0x4, %r14d
000000010000c1a0	cmovaeq	%rsi, %r14
000000010000c1a4	movabsq	$0x1c71c71c71c71c8, %rcx        ## imm = 0x1C71C71C71C71C8
000000010000c1ae	xorl	%esi, %esi
000000010000c1b0	cmpq	%rcx, %r14
000000010000c1b3	setb	%sil
000000010000c1b7	leaq	(,%r14,8), %rcx
000000010000c1bf	leaq	(%rcx,%rcx,8), %rdx
000000010000c1c3	shlq	$0x3, %rsi
000000010000c1c7	testq	%rax, %rax
000000010000c1ca	je	0x10000c1e9
000000010000c1cc	movq	(%rbx), %rcx
000000010000c1cf	shlq	$0x3, %rax
000000010000c1d3	leaq	(%rax,%rax,8), %rax
000000010000c1d7	movq	%rcx, -0x28(%rbp)
000000010000c1db	movq	$0x8, -0x20(%rbp)
000000010000c1e3	movq	%rax, -0x18(%rbp)
000000010000c1e7	jmp	0x10000c1f1
000000010000c1e9	movq	$0x0, -0x20(%rbp)
000000010000c1f1	leaq	-0x40(%rbp), %rdi
000000010000c1f5	leaq	-0x28(%rbp), %rcx
000000010000c1f9	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c1fe	cmpq	$0x0, -0x40(%rbp)
000000010000c203	movq	-0x38(%rbp), %rdi
000000010000c207	je	0x10000c222
000000010000c209	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c213	cmpq	%rax, %rdi
000000010000c216	je	0x10000c229
000000010000c218	testq	%rdi, %rdi
000000010000c21b	jne	0x10000c232
000000010000c21d	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c222	movq	%rdi, (%rbx)
000000010000c225	movq	%r14, 0x8(%rbx)
000000010000c229	addq	$0x30, %rsp
000000010000c22d	popq	%rbx
000000010000c22e	popq	%r14
000000010000c230	popq	%rbp
000000010000c231	retq
000000010000c232	movq	-0x30(%rbp), %rsi
000000010000c236	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c23b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h41e95bb8703263d1E:
000000010000c240	pushq	%rbp
000000010000c241	movq	%rsp, %rbp
000000010000c244	pushq	%r14
000000010000c246	pushq	%rbx
000000010000c247	subq	$0x30, %rsp
000000010000c24b	incq	%rsi
000000010000c24e	je	0x10000c2ec
000000010000c254	movq	%rdi, %rbx
000000010000c257	movq	0x8(%rdi), %rax
000000010000c25b	leaq	(%rax,%rax), %rcx
000000010000c25f	cmpq	%rsi, %rcx
000000010000c262	cmovaq	%rcx, %rsi
000000010000c266	cmpq	$0x5, %rsi
000000010000c26a	movl	$0x4, %r14d
000000010000c270	cmovaeq	%rsi, %r14
000000010000c274	movabsq	$0x2aaaaaaaaaaaaab, %rcx        ## imm = 0x2AAAAAAAAAAAAAB
000000010000c27e	xorl	%esi, %esi
000000010000c280	cmpq	%rcx, %r14
000000010000c283	setb	%sil
000000010000c287	movq	%r14, %rcx
000000010000c28a	shlq	$0x4, %rcx
000000010000c28e	leaq	(%rcx,%rcx,2), %rdx
000000010000c292	shlq	$0x3, %rsi
000000010000c296	testq	%rax, %rax
000000010000c299	je	0x10000c2b8
000000010000c29b	movq	(%rbx), %rcx
000000010000c29e	shlq	$0x4, %rax
000000010000c2a2	leaq	(%rax,%rax,2), %rax
000000010000c2a6	movq	%rcx, -0x28(%rbp)
000000010000c2aa	movq	$0x8, -0x20(%rbp)
000000010000c2b2	movq	%rax, -0x18(%rbp)
000000010000c2b6	jmp	0x10000c2c0
000000010000c2b8	movq	$0x0, -0x20(%rbp)
000000010000c2c0	leaq	-0x40(%rbp), %rdi
000000010000c2c4	leaq	-0x28(%rbp), %rcx
000000010000c2c8	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c2cd	cmpq	$0x0, -0x40(%rbp)
000000010000c2d2	movq	-0x38(%rbp), %rdi
000000010000c2d6	je	0x10000c2f1
000000010000c2d8	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c2e2	cmpq	%rax, %rdi
000000010000c2e5	je	0x10000c2f8
000000010000c2e7	testq	%rdi, %rdi
000000010000c2ea	jne	0x10000c301
000000010000c2ec	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c2f1	movq	%rdi, (%rbx)
000000010000c2f4	movq	%r14, 0x8(%rbx)
000000010000c2f8	addq	$0x30, %rsp
000000010000c2fc	popq	%rbx
000000010000c2fd	popq	%r14
000000010000c2ff	popq	%rbp
000000010000c300	retq
000000010000c301	movq	-0x30(%rbp), %rsi
000000010000c305	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c30a	nopw	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE:
000000010000c310	pushq	%rbp
000000010000c311	movq	%rsp, %rbp
000000010000c314	pushq	%rbx
000000010000c315	subq	$0x38, %rsp
000000010000c319	movq	%rdi, %rcx
000000010000c31c	incq	%rcx
000000010000c31f	je	0x10000c3db
000000010000c325	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
000000010000c32c	callq	*(%rdi)
000000010000c32e	movq	0x8(%rax), %r8
000000010000c332	leaq	(%r8,%r8), %rax
000000010000c336	cmpq	%rcx, %rax
000000010000c339	cmovaq	%rax, %rcx
000000010000c33d	cmpq	$0x5, %rcx
000000010000c341	movl	$0x4, %ebx
000000010000c346	cmovaeq	%rcx, %rbx
000000010000c34a	xorl	%esi, %esi
000000010000c34c	movq	%rbx, %rax
000000010000c34f	shrq	$0x3b, %rax
000000010000c353	sete	%sil
000000010000c357	movq	%rbx, %rdx
000000010000c35a	shlq	$0x4, %rdx
000000010000c35e	shlq	$0x3, %rsi
000000010000c362	testq	%r8, %r8
000000010000c365	je	0x10000c389
000000010000c367	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
000000010000c36e	callq	*(%rdi)
000000010000c370	movq	(%rax), %rax
000000010000c373	shlq	$0x4, %r8
000000010000c377	movq	%rax, -0x20(%rbp)
000000010000c37b	movq	$0x8, -0x18(%rbp)
000000010000c383	movq	%r8, -0x10(%rbp)
000000010000c387	jmp	0x10000c391
000000010000c389	movq	$0x0, -0x18(%rbp)
000000010000c391	leaq	-0x38(%rbp), %rdi
000000010000c395	leaq	-0x20(%rbp), %rcx
000000010000c399	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c39e	cmpq	$0x0, -0x38(%rbp)
000000010000c3a3	movq	-0x30(%rbp), %rcx
000000010000c3a7	je	0x10000c3bf
000000010000c3a9	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c3b3	cmpq	%rax, %rcx
000000010000c3b6	jne	0x10000c3d6
000000010000c3b8	addq	$0x38, %rsp
000000010000c3bc	popq	%rbx
000000010000c3bd	popq	%rbp
000000010000c3be	retq
000000010000c3bf	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
000000010000c3c6	callq	*(%rdi)
000000010000c3c8	movq	%rcx, (%rax)
000000010000c3cb	movq	%rbx, 0x8(%rax)
000000010000c3cf	addq	$0x38, %rsp
000000010000c3d3	popq	%rbx
000000010000c3d4	popq	%rbp
000000010000c3d5	retq
000000010000c3d6	testq	%rcx, %rcx
000000010000c3d9	jne	0x10000c3e0
000000010000c3db	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c3e0	movq	-0x28(%rbp), %rsi
000000010000c3e4	movq	%rcx, %rdi
000000010000c3e7	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c3ec	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h764d5260e2433607E:
000000010000c3f0	pushq	%rbp
000000010000c3f1	movq	%rsp, %rbp
000000010000c3f4	pushq	%r14
000000010000c3f6	pushq	%rbx
000000010000c3f7	subq	$0x30, %rsp
000000010000c3fb	incq	%rsi
000000010000c3fe	je	0x10000c48e
000000010000c404	movq	%rdi, %rbx
000000010000c407	movq	0x8(%rdi), %rax
000000010000c40b	leaq	(%rax,%rax), %rcx
000000010000c40f	cmpq	%rsi, %rcx
000000010000c412	cmovaq	%rcx, %rsi
000000010000c416	cmpq	$0x5, %rsi
000000010000c41a	movl	$0x4, %r14d
000000010000c420	cmovaeq	%rsi, %r14
000000010000c424	xorl	%esi, %esi
000000010000c426	movq	%r14, %rcx
000000010000c429	shrq	$0x39, %rcx
000000010000c42d	sete	%sil
000000010000c431	movq	%r14, %rdx
000000010000c434	shlq	$0x6, %rdx
000000010000c438	shlq	$0x3, %rsi
000000010000c43c	testq	%rax, %rax
000000010000c43f	je	0x10000c45a
000000010000c441	movq	(%rbx), %rcx
000000010000c444	shlq	$0x6, %rax
000000010000c448	movq	%rcx, -0x28(%rbp)
000000010000c44c	movq	$0x8, -0x20(%rbp)
000000010000c454	movq	%rax, -0x18(%rbp)
000000010000c458	jmp	0x10000c462
000000010000c45a	movq	$0x0, -0x20(%rbp)
000000010000c462	leaq	-0x40(%rbp), %rdi
000000010000c466	leaq	-0x28(%rbp), %rcx
000000010000c46a	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c46f	cmpq	$0x0, -0x40(%rbp)
000000010000c474	movq	-0x38(%rbp), %rdi
000000010000c478	je	0x10000c493
000000010000c47a	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c484	cmpq	%rax, %rdi
000000010000c487	je	0x10000c49a
000000010000c489	testq	%rdi, %rdi
000000010000c48c	jne	0x10000c4a3
000000010000c48e	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c493	movq	%rdi, (%rbx)
000000010000c496	movq	%r14, 0x8(%rbx)
000000010000c49a	addq	$0x30, %rsp
000000010000c49e	popq	%rbx
000000010000c49f	popq	%r14
000000010000c4a1	popq	%rbp
000000010000c4a2	retq
000000010000c4a3	movq	-0x30(%rbp), %rsi
000000010000c4a7	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c4ac	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E:
000000010000c4b0	pushq	%rbp
000000010000c4b1	movq	%rsp, %rbp
000000010000c4b4	pushq	%r14
000000010000c4b6	pushq	%rbx
000000010000c4b7	subq	$0x30, %rsp
000000010000c4bb	incq	%rsi
000000010000c4be	je	0x10000c54e
000000010000c4c4	movq	%rdi, %rbx
000000010000c4c7	movq	0x8(%rdi), %rax
000000010000c4cb	leaq	(%rax,%rax), %rcx
000000010000c4cf	cmpq	%rsi, %rcx
000000010000c4d2	cmovaq	%rcx, %rsi
000000010000c4d6	cmpq	$0x5, %rsi
000000010000c4da	movl	$0x4, %r14d
000000010000c4e0	cmovaeq	%rsi, %r14
000000010000c4e4	xorl	%esi, %esi
000000010000c4e6	movq	%r14, %rcx
000000010000c4e9	shrq	$0x3a, %rcx
000000010000c4ed	sete	%sil
000000010000c4f1	movq	%r14, %rdx
000000010000c4f4	shlq	$0x5, %rdx
000000010000c4f8	shlq	$0x3, %rsi
000000010000c4fc	testq	%rax, %rax
000000010000c4ff	je	0x10000c51a
000000010000c501	movq	(%rbx), %rcx
000000010000c504	shlq	$0x5, %rax
000000010000c508	movq	%rcx, -0x28(%rbp)
000000010000c50c	movq	$0x8, -0x20(%rbp)
000000010000c514	movq	%rax, -0x18(%rbp)
000000010000c518	jmp	0x10000c522
000000010000c51a	movq	$0x0, -0x20(%rbp)
000000010000c522	leaq	-0x40(%rbp), %rdi
000000010000c526	leaq	-0x28(%rbp), %rcx
000000010000c52a	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c52f	cmpq	$0x0, -0x40(%rbp)
000000010000c534	movq	-0x38(%rbp), %rdi
000000010000c538	je	0x10000c553
000000010000c53a	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c544	cmpq	%rax, %rdi
000000010000c547	je	0x10000c55a
000000010000c549	testq	%rdi, %rdi
000000010000c54c	jne	0x10000c563
000000010000c54e	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c553	movq	%rdi, (%rbx)
000000010000c556	movq	%r14, 0x8(%rbx)
000000010000c55a	addq	$0x30, %rsp
000000010000c55e	popq	%rbx
000000010000c55f	popq	%r14
000000010000c561	popq	%rbp
000000010000c562	retq
000000010000c563	movq	-0x30(%rbp), %rsi
000000010000c567	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c56c	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h86a8fb43ae9ea87aE:
000000010000c570	pushq	%rbp
000000010000c571	movq	%rsp, %rbp
000000010000c574	pushq	%r14
000000010000c576	pushq	%rbx
000000010000c577	subq	$0x30, %rsp
000000010000c57b	incq	%rsi
000000010000c57e	je	0x10000c60f
000000010000c584	movq	%rdi, %rbx
000000010000c587	movq	0x8(%rdi), %rax
000000010000c58b	leaq	(%rax,%rax), %rcx
000000010000c58f	cmpq	%rsi, %rcx
000000010000c592	cmovaq	%rcx, %rsi
000000010000c596	cmpq	$0x5, %rsi
000000010000c59a	movl	$0x4, %r14d
000000010000c5a0	cmovaeq	%rsi, %r14
000000010000c5a4	xorl	%esi, %esi
000000010000c5a6	movq	%r14, %rcx
000000010000c5a9	shrq	$0x3c, %rcx
000000010000c5ad	sete	%sil
000000010000c5b1	leaq	(,%r14,8), %rdx
000000010000c5b9	shlq	$0x3, %rsi
000000010000c5bd	testq	%rax, %rax
000000010000c5c0	je	0x10000c5db
000000010000c5c2	movq	(%rbx), %rcx
000000010000c5c5	shlq	$0x3, %rax
000000010000c5c9	movq	%rcx, -0x28(%rbp)
000000010000c5cd	movq	$0x8, -0x20(%rbp)
000000010000c5d5	movq	%rax, -0x18(%rbp)
000000010000c5d9	jmp	0x10000c5e3
000000010000c5db	movq	$0x0, -0x20(%rbp)
000000010000c5e3	leaq	-0x40(%rbp), %rdi
000000010000c5e7	leaq	-0x28(%rbp), %rcx
000000010000c5eb	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c5f0	cmpq	$0x0, -0x40(%rbp)
000000010000c5f5	movq	-0x38(%rbp), %rdi
000000010000c5f9	je	0x10000c614
000000010000c5fb	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c605	cmpq	%rax, %rdi
000000010000c608	je	0x10000c61b
000000010000c60a	testq	%rdi, %rdi
000000010000c60d	jne	0x10000c624
000000010000c60f	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c614	movq	%rdi, (%rbx)
000000010000c617	movq	%r14, 0x8(%rbx)
000000010000c61b	addq	$0x30, %rsp
000000010000c61f	popq	%rbx
000000010000c620	popq	%r14
000000010000c622	popq	%rbp
000000010000c623	retq
000000010000c624	movq	-0x30(%rbp), %rsi
000000010000c628	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c62d	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h932db87801972987E:
000000010000c630	pushq	%rbp
000000010000c631	movq	%rsp, %rbp
000000010000c634	pushq	%r14
000000010000c636	pushq	%rbx
000000010000c637	subq	$0x30, %rsp
000000010000c63b	incq	%rsi
000000010000c63e	je	0x10000c6d7
000000010000c644	movq	%rdi, %rbx
000000010000c647	movq	0x8(%rdi), %rax
000000010000c64b	leaq	(%rax,%rax), %rcx
000000010000c64f	cmpq	%rsi, %rcx
000000010000c652	cmovaq	%rcx, %rsi
000000010000c656	cmpq	$0x5, %rsi
000000010000c65a	movl	$0x4, %r14d
000000010000c660	cmovaeq	%rsi, %r14
000000010000c664	movabsq	$0x4bda12f684bda2, %rcx         ## imm = 0x4BDA12F684BDA2
000000010000c66e	xorl	%esi, %esi
000000010000c670	cmpq	%rcx, %r14
000000010000c673	setb	%sil
000000010000c677	imulq	$0x1b0, %r14, %rdx              ## imm = 0x1B0
000000010000c67e	shlq	$0x3, %rsi
000000010000c682	testq	%rax, %rax
000000010000c685	je	0x10000c6a3
000000010000c687	movq	(%rbx), %rcx
000000010000c68a	imulq	$0x1b0, %rax, %rax              ## imm = 0x1B0
000000010000c691	movq	%rcx, -0x28(%rbp)
000000010000c695	movq	$0x8, -0x20(%rbp)
000000010000c69d	movq	%rax, -0x18(%rbp)
000000010000c6a1	jmp	0x10000c6ab
000000010000c6a3	movq	$0x0, -0x20(%rbp)
000000010000c6ab	leaq	-0x40(%rbp), %rdi
000000010000c6af	leaq	-0x28(%rbp), %rcx
000000010000c6b3	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c6b8	cmpq	$0x0, -0x40(%rbp)
000000010000c6bd	movq	-0x38(%rbp), %rdi
000000010000c6c1	je	0x10000c6dc
000000010000c6c3	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c6cd	cmpq	%rax, %rdi
000000010000c6d0	je	0x10000c6e3
000000010000c6d2	testq	%rdi, %rdi
000000010000c6d5	jne	0x10000c6ec
000000010000c6d7	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c6dc	movq	%rdi, (%rbx)
000000010000c6df	movq	%r14, 0x8(%rbx)
000000010000c6e3	addq	$0x30, %rsp
000000010000c6e7	popq	%rbx
000000010000c6e8	popq	%r14
000000010000c6ea	popq	%rbp
000000010000c6eb	retq
000000010000c6ec	movq	-0x30(%rbp), %rsi
000000010000c6f0	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c6f5	nopw	%cs:(%rax,%rax)
000000010000c6ff	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h9c3d16b86cf15839E:
000000010000c700	pushq	%rbp
000000010000c701	movq	%rsp, %rbp
000000010000c704	pushq	%r14
000000010000c706	pushq	%rbx
000000010000c707	subq	$0x30, %rsp
000000010000c70b	incq	%rsi
000000010000c70e	je	0x10000c78b
000000010000c710	movq	%rdi, %rbx
000000010000c713	movq	0x8(%rdi), %rax
000000010000c717	leaq	(%rax,%rax), %rcx
000000010000c71b	cmpq	%rsi, %rcx
000000010000c71e	cmovaq	%rcx, %rsi
000000010000c722	cmpq	$0x9, %rsi
000000010000c726	movl	$0x8, %r14d
000000010000c72c	cmovaeq	%rsi, %r14
000000010000c730	movq	%r14, %rsi
000000010000c733	notq	%rsi
000000010000c736	shrq	$0x3f, %rsi
000000010000c73a	testq	%rax, %rax
000000010000c73d	je	0x10000c754
000000010000c73f	movq	(%rbx), %rcx
000000010000c742	movq	%rcx, -0x28(%rbp)
000000010000c746	movq	$0x1, -0x20(%rbp)
000000010000c74e	movq	%rax, -0x18(%rbp)
000000010000c752	jmp	0x10000c75c
000000010000c754	movq	$0x0, -0x20(%rbp)
000000010000c75c	leaq	-0x40(%rbp), %rdi
000000010000c760	leaq	-0x28(%rbp), %rcx
000000010000c764	movq	%r14, %rdx
000000010000c767	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c76c	cmpq	$0x0, -0x40(%rbp)
000000010000c771	movq	-0x38(%rbp), %rdi
000000010000c775	je	0x10000c790
000000010000c777	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c781	cmpq	%rax, %rdi
000000010000c784	je	0x10000c797
000000010000c786	testq	%rdi, %rdi
000000010000c789	jne	0x10000c7a0
000000010000c78b	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c790	movq	%rdi, (%rbx)
000000010000c793	movq	%r14, 0x8(%rbx)
000000010000c797	addq	$0x30, %rsp
000000010000c79b	popq	%rbx
000000010000c79c	popq	%r14
000000010000c79e	popq	%rbp
000000010000c79f	retq
000000010000c7a0	movq	-0x30(%rbp), %rsi
000000010000c7a4	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c7a9	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hb8d64f4e71853b4cE:
000000010000c7b0	pushq	%rbp
000000010000c7b1	movq	%rsp, %rbp
000000010000c7b4	pushq	%r14
000000010000c7b6	pushq	%rbx
000000010000c7b7	subq	$0x30, %rsp
000000010000c7bb	incq	%rsi
000000010000c7be	je	0x10000c85d
000000010000c7c4	movq	%rdi, %rbx
000000010000c7c7	movq	0x8(%rdi), %rax
000000010000c7cb	leaq	(%rax,%rax), %rcx
000000010000c7cf	cmpq	%rsi, %rcx
000000010000c7d2	cmovaq	%rcx, %rsi
000000010000c7d6	cmpq	$0x5, %rsi
000000010000c7da	movl	$0x4, %r14d
000000010000c7e0	cmovaeq	%rsi, %r14
000000010000c7e4	movabsq	$0x333333333333334, %rcx        ## imm = 0x333333333333334
000000010000c7ee	xorl	%esi, %esi
000000010000c7f0	cmpq	%rcx, %r14
000000010000c7f3	setb	%sil
000000010000c7f7	leaq	(,%r14,8), %rcx
000000010000c7ff	leaq	(%rcx,%rcx,4), %rdx
000000010000c803	shlq	$0x3, %rsi
000000010000c807	testq	%rax, %rax
000000010000c80a	je	0x10000c829
000000010000c80c	movq	(%rbx), %rcx
000000010000c80f	shlq	$0x3, %rax
000000010000c813	leaq	(%rax,%rax,4), %rax
000000010000c817	movq	%rcx, -0x28(%rbp)
000000010000c81b	movq	$0x8, -0x20(%rbp)
000000010000c823	movq	%rax, -0x18(%rbp)
000000010000c827	jmp	0x10000c831
000000010000c829	movq	$0x0, -0x20(%rbp)
000000010000c831	leaq	-0x40(%rbp), %rdi
000000010000c835	leaq	-0x28(%rbp), %rcx
000000010000c839	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c83e	cmpq	$0x0, -0x40(%rbp)
000000010000c843	movq	-0x38(%rbp), %rdi
000000010000c847	je	0x10000c862
000000010000c849	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c853	cmpq	%rax, %rdi
000000010000c856	je	0x10000c869
000000010000c858	testq	%rdi, %rdi
000000010000c85b	jne	0x10000c872
000000010000c85d	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c862	movq	%rdi, (%rbx)
000000010000c865	movq	%r14, 0x8(%rbx)
000000010000c869	addq	$0x30, %rsp
000000010000c86d	popq	%rbx
000000010000c86e	popq	%r14
000000010000c870	popq	%rbp
000000010000c871	retq
000000010000c872	movq	-0x30(%rbp), %rsi
000000010000c876	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c87b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE:
000000010000c880	pushq	%rbp
000000010000c881	movq	%rsp, %rbp
000000010000c884	pushq	%r14
000000010000c886	pushq	%rbx
000000010000c887	subq	$0x30, %rsp
000000010000c88b	incq	%rsi
000000010000c88e	je	0x10000c92d
000000010000c894	movq	%rdi, %rbx
000000010000c897	movq	0x8(%rdi), %rax
000000010000c89b	leaq	(%rax,%rax), %rcx
000000010000c89f	cmpq	%rsi, %rcx
000000010000c8a2	cmovaq	%rcx, %rsi
000000010000c8a6	cmpq	$0x5, %rsi
000000010000c8aa	movl	$0x4, %r14d
000000010000c8b0	cmovaeq	%rsi, %r14
000000010000c8b4	movabsq	$0x555555555555556, %rcx        ## imm = 0x555555555555556
000000010000c8be	xorl	%esi, %esi
000000010000c8c0	cmpq	%rcx, %r14
000000010000c8c3	setb	%sil
000000010000c8c7	leaq	(,%r14,8), %rcx
000000010000c8cf	leaq	(%rcx,%rcx,2), %rdx
000000010000c8d3	shlq	$0x3, %rsi
000000010000c8d7	testq	%rax, %rax
000000010000c8da	je	0x10000c8f9
000000010000c8dc	movq	(%rbx), %rcx
000000010000c8df	shlq	$0x3, %rax
000000010000c8e3	leaq	(%rax,%rax,2), %rax
000000010000c8e7	movq	%rcx, -0x28(%rbp)
000000010000c8eb	movq	$0x8, -0x20(%rbp)
000000010000c8f3	movq	%rax, -0x18(%rbp)
000000010000c8f7	jmp	0x10000c901
000000010000c8f9	movq	$0x0, -0x20(%rbp)
000000010000c901	leaq	-0x40(%rbp), %rdi
000000010000c905	leaq	-0x28(%rbp), %rcx
000000010000c909	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c90e	cmpq	$0x0, -0x40(%rbp)
000000010000c913	movq	-0x38(%rbp), %rdi
000000010000c917	je	0x10000c932
000000010000c919	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c923	cmpq	%rax, %rdi
000000010000c926	je	0x10000c939
000000010000c928	testq	%rdi, %rdi
000000010000c92b	jne	0x10000c942
000000010000c92d	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c932	movq	%rdi, (%rbx)
000000010000c935	movq	%r14, 0x8(%rbx)
000000010000c939	addq	$0x30, %rsp
000000010000c93d	popq	%rbx
000000010000c93e	popq	%r14
000000010000c940	popq	%rbp
000000010000c941	retq
000000010000c942	movq	-0x30(%rbp), %rsi
000000010000c946	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000c94b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hc280d01558062fefE:
000000010000c950	pushq	%rbp
000000010000c951	movq	%rsp, %rbp
000000010000c954	pushq	%r14
000000010000c956	pushq	%rbx
000000010000c957	subq	$0x30, %rsp
000000010000c95b	incq	%rsi
000000010000c95e	je	0x10000c9ee
000000010000c964	movq	%rdi, %rbx
000000010000c967	movq	0x8(%rdi), %rax
000000010000c96b	leaq	(%rax,%rax), %rcx
000000010000c96f	cmpq	%rsi, %rcx
000000010000c972	cmovaq	%rcx, %rsi
000000010000c976	cmpq	$0x5, %rsi
000000010000c97a	movl	$0x4, %r14d
000000010000c980	cmovaeq	%rsi, %r14
000000010000c984	xorl	%esi, %esi
000000010000c986	movq	%r14, %rcx
000000010000c989	shrq	$0x3d, %rcx
000000010000c98d	sete	%sil
000000010000c991	leaq	(,%r14,4), %rdx
000000010000c999	addq	%rsi, %rsi
000000010000c99c	testq	%rax, %rax
000000010000c99f	je	0x10000c9ba
000000010000c9a1	movq	(%rbx), %rcx
000000010000c9a4	shlq	$0x2, %rax
000000010000c9a8	movq	%rcx, -0x28(%rbp)
000000010000c9ac	movq	$0x2, -0x20(%rbp)
000000010000c9b4	movq	%rax, -0x18(%rbp)
000000010000c9b8	jmp	0x10000c9c2
000000010000c9ba	movq	$0x0, -0x20(%rbp)
000000010000c9c2	leaq	-0x40(%rbp), %rdi
000000010000c9c6	leaq	-0x28(%rbp), %rcx
000000010000c9ca	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010000c9cf	cmpq	$0x0, -0x40(%rbp)
000000010000c9d4	movq	-0x38(%rbp), %rdi
000000010000c9d8	je	0x10000c9f3
000000010000c9da	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
000000010000c9e4	cmpq	%rax, %rdi
000000010000c9e7	je	0x10000c9fa
000000010000c9e9	testq	%rdi, %rdi
000000010000c9ec	jne	0x10000ca03
000000010000c9ee	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010000c9f3	movq	%rdi, (%rbx)
000000010000c9f6	movq	%r14, 0x8(%rbx)
000000010000c9fa	addq	$0x30, %rsp
000000010000c9fe	popq	%rbx
000000010000c9ff	popq	%r14
000000010000ca01	popq	%rbp
000000010000ca02	retq
000000010000ca03	movq	-0x30(%rbp), %rsi
000000010000ca07	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000ca0c	nopl	(%rax)
__ZN5gimli4read4line15FileEntryFormat5parse17h95fbca5fe10a6cf9E:
000000010000ca10	pushq	%rbp
000000010000ca11	movq	%rsp, %rbp
000000010000ca14	pushq	%r15
000000010000ca16	pushq	%r14
000000010000ca18	pushq	%r13
000000010000ca1a	pushq	%r12
000000010000ca1c	pushq	%rbx
000000010000ca1d	subq	$0x48, %rsp
000000010000ca21	movq	(%rsi), %rax
000000010000ca24	movq	0x8(%rsi), %r13
000000010000ca28	testq	%r13, %r13
000000010000ca2b	je	0x10000cc83
000000010000ca31	movq	%rsi, %r14
000000010000ca34	decq	%r13
000000010000ca37	leaq	0x1(%rax), %r12
000000010000ca3b	movq	%r12, (%rsi)
000000010000ca3e	movq	%r13, 0x8(%rsi)
000000010000ca42	movzbl	(%rax), %ebx
000000010000ca45	testq	%rbx, %rbx
000000010000ca48	je	0x10000cca6
000000010000ca4e	movq	%rdi, -0x38(%rbp)
000000010000ca52	leaq	(,%rbx,4), %r15
000000010000ca5a	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010000ca61	movzbl	(%rax), %eax
000000010000ca64	movl	$0x2, %esi
000000010000ca69	movq	%r15, %rdi
000000010000ca6c	callq	___rust_alloc
000000010000ca71	testq	%rax, %rax
000000010000ca74	je	0x10000cd8d
000000010000ca7a	movq	%rax, -0x50(%rbp)
000000010000ca7e	movq	%rbx, -0x48(%rbp)
000000010000ca82	movq	$0x0, -0x40(%rbp)
000000010000ca8a	xorl	%esi, %esi
000000010000ca8c	leaq	-0x50(%rbp), %r11
000000010000ca90	movl	$0x0, -0x54(%rbp)
000000010000ca97	xorl	%edx, %edx
000000010000ca99	movl	%ecx, -0x30(%rbp)
000000010000ca9c	movq	%rbx, -0x68(%rbp)
000000010000caa0	testq	%r13, %r13
000000010000caa3	je	0x10000ccf8
000000010000caa9	incq	%rdx
000000010000caac	movq	%rdx, -0x70(%rbp)
000000010000cab0	xorl	%edx, %edx
000000010000cab2	xorl	%r15d, %r15d
000000010000cab5	xorl	%ecx, %ecx
000000010000cab7	nopw	(%rax,%rax)
000000010000cac0	movzbl	(%r12,%rdx), %r8d
000000010000cac5	cmpl	$0x3f, %ecx
000000010000cac8	jne	0x10000cad4
000000010000caca	cmpb	$0x2, %r8b
000000010000cace	jae	0x10000ccd0
000000010000cad4	movzbl	%r8b, %r8d
000000010000cad8	movl	%r8d, %r9d
000000010000cadb	andl	$0x7f, %r9d
000000010000cadf	shlq	%cl, %r9
000000010000cae2	orq	%r9, %r15
000000010000cae5	testb	%r8b, %r8b
000000010000cae8	jns	0x10000cafa
000000010000caea	addl	$0x7, %ecx
000000010000caed	incq	%rdx
000000010000caf0	cmpq	%rdx, %r13
000000010000caf3	jne	0x10000cac0
000000010000caf5	jmp	0x10000ccea
000000010000cafa	leaq	0x1(%r12,%rdx), %rcx
000000010000caff	movq	%rcx, (%r14)
000000010000cb02	movq	%rdx, %rdi
000000010000cb05	notq	%rdi
000000010000cb08	addq	%r13, %rdi
000000010000cb0b	movq	%rdi, 0x8(%r14)
000000010000cb0f	cmpq	$0xffff, %r15                   ## imm = 0xFFFF
000000010000cb16	movl	$0xffff, %edi                   ## imm = 0xFFFF
000000010000cb1b	cmovbq	%r15, %rdi
000000010000cb1f	movq	%rdi, -0x60(%rbp)
000000010000cb23	cmpw	$0x1, %di
000000010000cb27	sete	-0x29(%rbp)
000000010000cb2b	leaq	-0x1(%r13), %rdi
000000010000cb2f	cmpq	%rdx, %rdi
000000010000cb32	je	0x10000cd56
000000010000cb38	movq	%r13, %rcx
000000010000cb3b	subq	%rdx, %rcx
000000010000cb3e	leaq	-0x2(%rcx), %r8
000000010000cb42	leaq	0x2(%r12,%rdx), %r9
000000010000cb47	movq	%r9, (%r14)
000000010000cb4a	movq	%r8, 0x8(%r14)
000000010000cb4e	movzbl	0x1(%r12,%rdx), %r10d
000000010000cb54	movl	%r10d, %edi
000000010000cb57	andl	$0x7f, %edi
000000010000cb5a	testb	%r10b, %r10b
000000010000cb5d	js	0x10000cb77
000000010000cb5f	movq	%r9, %r12
000000010000cb62	movq	%r8, %r13
000000010000cb65	movl	%edi, -0x30(%rbp)
000000010000cb68	cmpq	-0x48(%rbp), %rsi
000000010000cb6c	je	0x10000cc11
000000010000cb72	jmp	0x10000cc27
000000010000cb77	leaq	-0x2(%r13), %r8
000000010000cb7b	cmpq	%rdx, %r8
000000010000cb7e	je	0x10000cd4a
000000010000cb84	movq	%r11, %rbx
000000010000cb87	leaq	-0x3(%rcx), %r8
000000010000cb8b	leaq	0x3(%r12,%rdx), %r9
000000010000cb90	movq	%r9, (%r14)
000000010000cb93	movq	%r8, 0x8(%r14)
000000010000cb97	movzbl	0x2(%r12,%rdx), %r10d
000000010000cb9d	movl	%r10d, %r11d
000000010000cba0	andl	$0x7f, %r11d
000000010000cba4	shll	$0x7, %r11d
000000010000cba8	movzwl	%di, %edi
000000010000cbab	orl	%r11d, %edi
000000010000cbae	testb	%r10b, %r10b
000000010000cbb1	js	0x10000cbc7
000000010000cbb3	movq	%r9, %r12
000000010000cbb6	movq	%r8, %r13
000000010000cbb9	movl	%edi, -0x30(%rbp)
000000010000cbbc	movq	%rbx, %r11
000000010000cbbf	cmpq	-0x48(%rbp), %rsi
000000010000cbc3	je	0x10000cc11
000000010000cbc5	jmp	0x10000cc27
000000010000cbc7	addq	$-0x3, %r13
000000010000cbcb	cmpq	%rdx, %r13
000000010000cbce	je	0x10000cd51
000000010000cbd4	addq	$-0x4, %rcx
000000010000cbd8	leaq	0x4(%r12,%rdx), %r8
000000010000cbdd	movq	%r8, (%r14)
000000010000cbe0	movq	%rcx, 0x8(%r14)
000000010000cbe4	movzbl	0x3(%r12,%rdx), %edx
000000010000cbea	cmpw	$0x3, %dx
000000010000cbee	ja	0x10000cd86
000000010000cbf4	movq	%rbx, %r11
000000010000cbf7	movzwl	%dx, %edx
000000010000cbfa	shll	$0xe, %edx
000000010000cbfd	movzwl	%di, %edi
000000010000cc00	orl	%edx, %edi
000000010000cc02	movl	%edi, -0x30(%rbp)
000000010000cc05	movq	%r8, %r12
000000010000cc08	movq	%rcx, %r13
000000010000cc0b	cmpq	-0x48(%rbp), %rsi
000000010000cc0f	jne	0x10000cc27
000000010000cc11	movq	%r11, %rbx
000000010000cc14	movq	%r11, %rdi
000000010000cc17	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hc280d01558062fefE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hc280d01558062fef
000000010000cc1c	movq	-0x50(%rbp), %rax
000000010000cc20	movq	-0x40(%rbp), %rsi
000000010000cc24	movq	%rbx, %r11
000000010000cc27	xorl	%ecx, %ecx
000000010000cc29	movzbl	-0x29(%rbp), %edx
000000010000cc2d	movb	%dl, %cl
000000010000cc2f	addl	%ecx, -0x54(%rbp)
000000010000cc32	movq	-0x60(%rbp), %rcx
000000010000cc36	movw	%cx, (%rax,%rsi,4)
000000010000cc3a	movl	-0x30(%rbp), %ecx
000000010000cc3d	movw	%cx, 0x2(%rax,%rsi,4)
000000010000cc42	incq	%rsi
000000010000cc45	movq	%rsi, -0x40(%rbp)
000000010000cc49	movq	%r15, %r10
000000010000cc4c	movq	-0x68(%rbp), %rbx
000000010000cc50	movq	-0x70(%rbp), %rdx
000000010000cc54	cmpq	%rbx, %rdx
000000010000cc57	jne	0x10000caa0
000000010000cc5d	cmpl	$0x1, -0x54(%rbp)
000000010000cc61	movq	-0x38(%rbp), %rdi
000000010000cc65	jne	0x10000ccba
000000010000cc67	movq	-0x40(%rbp), %rax
000000010000cc6b	movq	%rax, 0x10(%rdi)
000000010000cc6f	movq	-0x50(%rbp), %rax
000000010000cc73	movq	-0x48(%rbp), %rcx
000000010000cc77	movq	%rcx, 0x8(%rdi)
000000010000cc7b	movq	%rax, (%rdi)
000000010000cc7e	jmp	0x10000cd3b
000000010000cc83	movw	$0x13, 0x8(%rdi)
000000010000cc89	movw	$0x0, 0xe(%rdi)
000000010000cc8f	movl	$0x0, 0xa(%rdi)
000000010000cc96	movq	%rax, 0x10(%rdi)
000000010000cc9a	movq	$0x0, (%rdi)
000000010000cca1	jmp	0x10000cd3b
000000010000cca6	movq	$0x2, -0x50(%rbp)
000000010000ccae	movq	%rbx, -0x48(%rbp)
000000010000ccb2	movq	$0x0, -0x40(%rbp)
000000010000ccba	movb	$0x44, 0x8(%rdi)
000000010000ccbe	movq	$0x0, (%rdi)
000000010000ccc5	movq	-0x48(%rbp), %rsi
000000010000ccc9	testq	%rsi, %rsi
000000010000cccc	jne	0x10000cd29
000000010000ccce	jmp	0x10000cd3b
000000010000ccd0	leaq	0x1(%r12,%rdx), %rax
000000010000ccd5	movq	%rax, (%r14)
000000010000ccd8	notq	%rdx
000000010000ccdb	addq	%r13, %rdx
000000010000ccde	movq	%rdx, 0x8(%r14)
000000010000cce2	movb	$0x6, %al
000000010000cce4	movq	-0x38(%rbp), %rdi
000000010000cce8	jmp	0x10000cd01
000000010000ccea	addq	%r13, %r12
000000010000cced	movq	%r12, (%r14)
000000010000ccf0	movq	$0x0, 0x8(%r14)
000000010000ccf8	movq	-0x38(%rbp), %rdi
000000010000ccfc	movb	$0x13, %al
000000010000ccfe	movq	%r12, %r10
000000010000cd01	movb	%al, 0x8(%rdi)
000000010000cd04	movb	$0x0, 0x9(%rdi)
000000010000cd08	movw	$0x0, 0xe(%rdi)
000000010000cd0e	movl	$0x0, 0xa(%rdi)
000000010000cd15	movq	%r10, 0x10(%rdi)
000000010000cd19	movq	$0x0, (%rdi)
000000010000cd20	movq	-0x48(%rbp), %rsi
000000010000cd24	testq	%rsi, %rsi
000000010000cd27	je	0x10000cd3b
000000010000cd29	movq	-0x50(%rbp), %rdi
000000010000cd2d	shlq	$0x2, %rsi
000000010000cd31	movl	$0x2, %edx
000000010000cd36	callq	___rust_dealloc
000000010000cd3b	addq	$0x48, %rsp
000000010000cd3f	popq	%rbx
000000010000cd40	popq	%r12
000000010000cd42	popq	%r13
000000010000cd44	popq	%r14
000000010000cd46	popq	%r15
000000010000cd48	popq	%rbp
000000010000cd49	retq
000000010000cd4a	leaq	0x2(%r12,%rdx), %rcx
000000010000cd4f	jmp	0x10000cd56
000000010000cd51	leaq	0x3(%r12,%rdx), %rcx
000000010000cd56	movb	$0x13, %al
000000010000cd58	xorl	%edx, %edx
000000010000cd5a	movq	-0x38(%rbp), %rdi
000000010000cd5e	movb	%al, 0x8(%rdi)
000000010000cd61	movb	$0x0, 0x9(%rdi)
000000010000cd65	movw	%dx, 0xa(%rdi)
000000010000cd69	movl	$0x0, 0xc(%rdi)
000000010000cd70	movq	%rcx, 0x10(%rdi)
000000010000cd74	movq	$0x0, (%rdi)
000000010000cd7b	movq	-0x48(%rbp), %rsi
000000010000cd7f	testq	%rsi, %rsi
000000010000cd82	jne	0x10000cd29
000000010000cd84	jmp	0x10000cd3b
000000010000cd86	movb	$0x6, %al
000000010000cd88	movl	-0x30(%rbp), %edx
000000010000cd8b	jmp	0x10000cd5a
000000010000cd8d	movl	$0x2, %edi
000000010000cd92	movq	%r15, %rsi
000000010000cd95	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010000cd9a	movq	%rax, %rbx
000000010000cd9d	movq	-0x50(%rbp), %rdi
000000010000cda1	movq	-0x48(%rbp), %rsi
000000010000cda5	callq	__ZN4core3ptr78drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$17h7ee9bd556cd3de62E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$::h7ee9bd556cd3de62
000000010000cdaa	movq	%rbx, %rdi
000000010000cdad	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010000cdb2	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010000cdb7	nopw	(%rax,%rax)
__ZN5gimli4read4line15parse_attribute17hc027efeaac70e0feE:
000000010000cdc0	pushq	%rbp
000000010000cdc1	movq	%rsp, %rbp
000000010000cdc4	pushq	%rbx
000000010000cdc5	shrl	$0x8, %edx
000000010000cdc8	movzwl	%cx, %eax
000000010000cdcb	leal	-0x3(%rax), %ecx
000000010000cdce	cmpl	$0x25, %ecx
000000010000cdd1	ja	0x10000ce1f
000000010000cdd3	leaq	0xc86(%rip), %rax
000000010000cdda	movslq	(%rax,%rcx,4), %rcx
000000010000cdde	addq	%rax, %rcx
000000010000cde1	jmpq	*%rcx
000000010000cde3	movq	(%rsi), %rcx
000000010000cde6	movq	0x8(%rsi), %r8
000000010000cdea	cmpq	$0x1, %r8
000000010000cdee	jbe	0x10000d46c
000000010000cdf4	addq	$-0x2, %r8
000000010000cdf8	leaq	0x2(%rcx), %rax
000000010000cdfc	movq	%rax, (%rsi)
000000010000cdff	movq	%r8, 0x8(%rsi)
000000010000ce03	movzwl	(%rcx), %edx
000000010000ce06	subq	%rdx, %r8
000000010000ce09	jb	0x10000d2bc
000000010000ce0f	leaq	(%rax,%rdx), %rcx
000000010000ce13	movq	%rcx, (%rsi)
000000010000ce16	movq	%r8, 0x8(%rsi)
000000010000ce1a	jmp	0x10000d0cf
000000010000ce1f	cmpl	$0x1f02, %eax                   ## imm = 0x1F02
000000010000ce24	je	0x10000ce68
000000010000ce26	cmpl	$0x1f21, %eax                   ## imm = 0x1F21
000000010000ce2b	jne	0x10000ced2
000000010000ce31	cmpb	$0x8, %dl
000000010000ce34	jne	0x10000d3ff
000000010000ce3a	movq	(%rsi), %rax
000000010000ce3d	movq	0x8(%rsi), %rcx
000000010000ce41	cmpq	$0x7, %rcx
000000010000ce45	jbe	0x10000d6ab
000000010000ce4b	addq	$-0x8, %rcx
000000010000ce4f	leaq	0x8(%rax), %rdx
000000010000ce53	movq	%rdx, (%rsi)
000000010000ce56	movq	%rcx, 0x8(%rsi)
000000010000ce5a	movq	(%rax), %rax
000000010000ce5d	movq	%rax, -0x21(%rbp)
000000010000ce61	movb	$0x4b, %al
000000010000ce63	jmp	0x10000d6fc
000000010000ce68	movq	(%rsi), %r8
000000010000ce6b	movq	0x8(%rsi), %rax
000000010000ce6f	testq	%rax, %rax
000000010000ce72	je	0x10000d26a
000000010000ce78	leaq	(%r8,%rax), %rdx
000000010000ce7c	movl	$0x1, %r9d
000000010000ce82	subq	%rax, %r9
000000010000ce85	incq	%r8
000000010000ce88	xorl	%eax, %eax
000000010000ce8a	xorl	%ecx, %ecx
000000010000ce8c	nopl	(%rax)
000000010000ce90	movzbl	-0x1(%r8), %r10d
000000010000ce95	cmpl	$0x3f, %ecx
000000010000ce98	jne	0x10000cea4
000000010000ce9a	cmpb	$0x2, %r10b
000000010000ce9e	jae	0x10000d43e
000000010000cea4	movzbl	%r10b, %r10d
000000010000cea8	movl	%r10d, %r11d
000000010000ceab	andl	$0x7f, %r11d
000000010000ceaf	shlq	%cl, %r11
000000010000ceb2	orq	%r11, %rax
000000010000ceb5	testb	%r10b, %r10b
000000010000ceb8	jns	0x10000d776
000000010000cebe	addl	$0x7, %ecx
000000010000cec1	incq	%r9
000000010000cec4	incq	%r8
000000010000cec7	cmpq	$0x1, %r9
000000010000cecb	jne	0x10000ce90
000000010000cecd	jmp	0x10000d25d
000000010000ced2	movb	$0xc, 0x8(%rdi)
000000010000ced6	movq	$0x2e, (%rdi)
000000010000cedd	popq	%rbx
000000010000cede	popq	%rbp
000000010000cedf	retq
000000010000cee0	movq	(%rsi), %rdx
000000010000cee3	movq	0x8(%rsi), %rcx
000000010000cee7	cmpq	$0x3, %rcx
000000010000ceeb	jbe	0x10000d492
000000010000cef1	addq	$-0x4, %rcx
000000010000cef5	leaq	0x4(%rdx), %rax
000000010000cef9	movq	%rax, (%rsi)
000000010000cefc	movq	%rcx, 0x8(%rsi)
000000010000cf00	movzwl	0x1(%rdx), %r8d
000000010000cf05	movzbl	(%rdx), %r9d
000000010000cf09	movzbl	0x3(%rdx), %edx
000000010000cf0d	movb	%r9b, -0x15(%rbp)
000000010000cf11	movb	%dl, -0x12(%rbp)
000000010000cf14	movw	%r8w, -0x14(%rbp)
000000010000cf19	movl	-0x15(%rbp), %edx
000000010000cf1c	jmp	0x10000d0bb
000000010000cf21	movq	(%rsi), %rcx
000000010000cf24	movq	0x8(%rsi), %rax
000000010000cf28	cmpq	$0x1, %rax
000000010000cf2c	jbe	0x10000d4b6
000000010000cf32	addq	$-0x2, %rax
000000010000cf36	leaq	0x2(%rcx), %rdx
000000010000cf3a	movq	%rdx, (%rsi)
000000010000cf3d	movq	%rax, 0x8(%rsi)
000000010000cf41	movzbl	(%rcx), %eax
000000010000cf44	movzbl	0x1(%rcx), %ecx
000000010000cf48	shll	$0x8, %ecx
000000010000cf4b	movl	$0x3, %r9d
000000010000cf51	jmp	0x10000d363
000000010000cf56	movq	(%rsi), %rax
000000010000cf59	movq	0x8(%rsi), %rcx
000000010000cf5d	cmpq	$0x3, %rcx
000000010000cf61	jbe	0x10000d4cd
000000010000cf67	addq	$-0x4, %rcx
000000010000cf6b	leaq	0x4(%rax), %rdx
000000010000cf6f	movq	%rdx, (%rsi)
000000010000cf72	movq	%rcx, 0x8(%rsi)
000000010000cf76	movzwl	0x1(%rax), %ecx
000000010000cf7a	movzbl	(%rax), %edx
000000010000cf7d	movzbl	0x3(%rax), %eax
000000010000cf81	movb	%dl, -0x15(%rbp)
000000010000cf84	movb	%al, -0x12(%rbp)
000000010000cf87	movw	%cx, -0x14(%rbp)
000000010000cf8b	movl	-0x15(%rbp), %eax
000000010000cf8e	movl	%eax, %ecx
000000010000cf90	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000cf96	movl	%eax, %esi
000000010000cf98	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000cf9e	movl	$0x4, %r9d
000000010000cfa4	xorl	%r8d, %r8d
000000010000cfa7	jmp	0x10000da12
000000010000cfac	movq	(%rsi), %rax
000000010000cfaf	movq	0x8(%rsi), %rcx
000000010000cfb3	cmpq	$0x7, %rcx
000000010000cfb7	jbe	0x10000d4f8
000000010000cfbd	addq	$-0x8, %rcx
000000010000cfc1	leaq	0x8(%rax), %rdx
000000010000cfc5	movq	%rdx, (%rsi)
000000010000cfc8	movq	%rcx, 0x8(%rsi)
000000010000cfcc	movq	(%rax), %rax
000000010000cfcf	movl	%eax, %ecx
000000010000cfd1	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000cfd7	movl	%eax, %esi
000000010000cfd9	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000cfdf	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000cfe9	andq	%rax, %r8
000000010000cfec	movl	$0x5, %r9d
000000010000cff2	jmp	0x10000da12
000000010000cff7	movq	(%rsi), %rax
000000010000cffa	movq	0x8(%rsi), %rcx
000000010000cffe	testq	%rcx, %rcx
000000010000d001	je	0x10000d2bc
000000010000d007	xorl	%edx, %edx
000000010000d009	nopl	(%rax)
000000010000d010	cmpb	$0x0, (%rax,%rdx)
000000010000d014	je	0x10000d7bd
000000010000d01a	incq	%rdx
000000010000d01d	cmpq	%rdx, %rcx
000000010000d020	jne	0x10000d010
000000010000d022	jmp	0x10000d2bc
000000010000d027	movq	(%rsi), %r8
000000010000d02a	movq	0x8(%rsi), %r9
000000010000d02e	testq	%r9, %r9
000000010000d031	je	0x10000d7a8
000000010000d037	leaq	(%r8,%r9), %rax
000000010000d03b	xorl	%r10d, %r10d
000000010000d03e	xorl	%edx, %edx
000000010000d040	xorl	%ecx, %ecx
000000010000d042	nopw	%cs:(%rax,%rax)
000000010000d04c	nopl	(%rax)
000000010000d050	movzbl	(%r8,%r10), %r11d
000000010000d055	cmpl	$0x3f, %ecx
000000010000d058	jne	0x10000d064
000000010000d05a	cmpb	$0x2, %r11b
000000010000d05e	jae	0x10000d9af
000000010000d064	movzbl	%r11b, %r11d
000000010000d068	movl	%r11d, %ebx
000000010000d06b	andl	$0x7f, %ebx
000000010000d06e	shlq	%cl, %rbx
000000010000d071	orq	%rbx, %rdx
000000010000d074	testb	%r11b, %r11b
000000010000d077	jns	0x10000da2d
000000010000d07d	addl	$0x7, %ecx
000000010000d080	incq	%r10
000000010000d083	cmpq	%r10, %r9
000000010000d086	jne	0x10000d050
000000010000d088	movq	%rax, (%rsi)
000000010000d08b	movq	$0x0, 0x8(%rsi)
000000010000d093	movb	$0x13, %cl
000000010000d095	jmp	0x10000d9c3
000000010000d09a	movq	(%rsi), %rdx
000000010000d09d	movq	0x8(%rsi), %rcx
000000010000d0a1	testq	%rcx, %rcx
000000010000d0a4	je	0x10000d7b2
000000010000d0aa	decq	%rcx
000000010000d0ad	leaq	0x1(%rdx), %rax
000000010000d0b1	movq	%rax, (%rsi)
000000010000d0b4	movq	%rcx, 0x8(%rsi)
000000010000d0b8	movzbl	(%rdx), %edx
000000010000d0bb	subq	%rdx, %rcx
000000010000d0be	jb	0x10000d2bc
000000010000d0c4	leaq	(%rax,%rdx), %r8
000000010000d0c8	movq	%r8, (%rsi)
000000010000d0cb	movq	%rcx, 0x8(%rsi)
000000010000d0cf	movl	%eax, %ecx
000000010000d0d1	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d0d7	movl	%eax, %esi
000000010000d0d9	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d0df	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d0e9	andq	%rax, %r8
000000010000d0ec	movl	$0x1, %r9d
000000010000d0f2	jmp	0x10000da12
000000010000d0f7	movq	(%rsi), %rax
000000010000d0fa	movq	0x8(%rsi), %rcx
000000010000d0fe	testq	%rcx, %rcx
000000010000d101	je	0x10000d327
000000010000d107	decq	%rcx
000000010000d10a	leaq	0x1(%rax), %rdx
000000010000d10e	movq	%rdx, (%rsi)
000000010000d111	movq	%rcx, 0x8(%rsi)
000000010000d115	movzbl	(%rax), %eax
000000010000d118	movl	$0x2, %r9d
000000010000d11e	jmp	0x10000d323
000000010000d123	movq	(%rsi), %rax
000000010000d126	movq	0x8(%rsi), %rcx
000000010000d12a	testq	%rcx, %rcx
000000010000d12d	je	0x10000d327
000000010000d133	decq	%rcx
000000010000d136	leaq	0x1(%rax), %rdx
000000010000d13a	movq	%rdx, (%rsi)
000000010000d13d	movq	%rcx, 0x8(%rsi)
000000010000d141	cmpb	$0x0, (%rax)
000000010000d144	setne	%al
000000010000d147	movl	$0x9, %r9d
000000010000d14d	jmp	0x10000d323
000000010000d152	movq	(%rsi), %rdx
000000010000d155	movq	0x8(%rsi), %r8
000000010000d159	leaq	0x1(%rdx), %r9
000000010000d15d	decq	%r8
000000010000d160	xorl	%ecx, %ecx
000000010000d162	xorl	%eax, %eax
000000010000d164	jmp	0x10000d192
000000010000d166	nopw	%cs:(%rax,%rax)
000000010000d170	movl	%r10d, %r11d
000000010000d173	andl	$0x7f, %r11d
000000010000d177	shlq	%cl, %r11
000000010000d17a	orq	%r11, %rax
000000010000d17d	addl	$0x7, %ecx
000000010000d180	incq	%rdx
000000010000d183	incq	%r9
000000010000d186	decq	%r8
000000010000d189	testb	%r10b, %r10b
000000010000d18c	jns	0x10000d730
000000010000d192	cmpq	$-0x1, %r8
000000010000d196	je	0x10000d26d
000000010000d19c	movq	%r9, (%rsi)
000000010000d19f	movq	%r8, 0x8(%rsi)
000000010000d1a3	movzbl	-0x1(%r9), %r10d
000000010000d1a8	cmpl	$0x3f, %ecx
000000010000d1ab	jne	0x10000d170
000000010000d1ad	cmpb	$0x7f, %r10b
000000010000d1b1	je	0x10000d170
000000010000d1b3	testl	%r10d, %r10d
000000010000d1b6	je	0x10000d170
000000010000d1b8	movb	$0x7, %al
000000010000d1ba	jmp	0x10000d44a
000000010000d1bf	cmpb	$0x8, %dl
000000010000d1c2	jne	0x10000d552
000000010000d1c8	movq	(%rsi), %rax
000000010000d1cb	movq	0x8(%rsi), %rcx
000000010000d1cf	cmpq	$0x7, %rcx
000000010000d1d3	jbe	0x10000d7fa
000000010000d1d9	addq	$-0x8, %rcx
000000010000d1dd	leaq	0x8(%rax), %rdx
000000010000d1e1	movq	%rdx, (%rsi)
000000010000d1e4	movq	%rcx, 0x8(%rsi)
000000010000d1e8	movq	(%rax), %rax
000000010000d1eb	movq	%rax, -0x21(%rbp)
000000010000d1ef	movb	$0x4b, %al
000000010000d1f1	jmp	0x10000d8ae
000000010000d1f6	movq	(%rsi), %r8
000000010000d1f9	movq	0x8(%rsi), %rax
000000010000d1fd	testq	%rax, %rax
000000010000d200	je	0x10000d26a
000000010000d202	leaq	(%r8,%rax), %rdx
000000010000d206	movl	$0x1, %r9d
000000010000d20c	subq	%rax, %r9
000000010000d20f	incq	%r8
000000010000d212	xorl	%eax, %eax
000000010000d214	xorl	%ecx, %ecx
000000010000d216	nopw	%cs:(%rax,%rax)
000000010000d220	movzbl	-0x1(%r8), %r10d
000000010000d225	cmpl	$0x3f, %ecx
000000010000d228	jne	0x10000d234
000000010000d22a	cmpb	$0x2, %r10b
000000010000d22e	jae	0x10000d43e
000000010000d234	movzbl	%r10b, %r10d
000000010000d238	movl	%r10d, %r11d
000000010000d23b	andl	$0x7f, %r11d
000000010000d23f	shlq	%cl, %r11
000000010000d242	orq	%r11, %rax
000000010000d245	testb	%r10b, %r10b
000000010000d248	jns	0x10000d9e5
000000010000d24e	addl	$0x7, %ecx
000000010000d251	incq	%r9
000000010000d254	incq	%r8
000000010000d257	cmpq	$0x1, %r9
000000010000d25b	jne	0x10000d220
000000010000d25d	movq	%rdx, (%rsi)
000000010000d260	movq	$0x0, 0x8(%rsi)
000000010000d268	jmp	0x10000d26d
000000010000d26a	movq	%r8, %rdx
000000010000d26d	movb	$0x13, %al
000000010000d26f	jmp	0x10000d44a
000000010000d274	cmpb	$0x8, %dl
000000010000d277	jne	0x10000d591
000000010000d27d	movq	(%rsi), %rax
000000010000d280	movq	0x8(%rsi), %rcx
000000010000d284	cmpq	$0x7, %rcx
000000010000d288	jbe	0x10000d82a
000000010000d28e	addq	$-0x8, %rcx
000000010000d292	leaq	0x8(%rax), %rdx
000000010000d296	movq	%rdx, (%rsi)
000000010000d299	movq	%rcx, 0x8(%rsi)
000000010000d29d	movq	(%rax), %rax
000000010000d2a0	movq	%rax, -0x21(%rbp)
000000010000d2a4	movb	$0x4b, %al
000000010000d2a6	jmp	0x10000d906
000000010000d2ab	movq	(%rsi), %rax
000000010000d2ae	movq	0x8(%rsi), %rcx
000000010000d2b2	cmpq	$0x10, %rcx
000000010000d2b6	jae	0x10000d5d0
000000010000d2bc	movq	$0x13, 0x8(%rdi)
000000010000d2c4	jmp	0x10000d9d7
000000010000d2c9	cmpb	$0x8, %dl
000000010000d2cc	jne	0x10000d60c
000000010000d2d2	movq	(%rsi), %rax
000000010000d2d5	movq	0x8(%rsi), %rcx
000000010000d2d9	cmpq	$0x7, %rcx
000000010000d2dd	jbe	0x10000d85a
000000010000d2e3	addq	$-0x8, %rcx
000000010000d2e7	leaq	0x8(%rax), %rdx
000000010000d2eb	movq	%rdx, (%rsi)
000000010000d2ee	movq	%rcx, 0x8(%rsi)
000000010000d2f2	movq	(%rax), %rax
000000010000d2f5	movq	%rax, -0x21(%rbp)
000000010000d2f9	movb	$0x4b, %al
000000010000d2fb	jmp	0x10000d95e
000000010000d300	movq	(%rsi), %rax
000000010000d303	movq	0x8(%rsi), %rcx
000000010000d307	testq	%rcx, %rcx
000000010000d30a	je	0x10000d327
000000010000d30c	decq	%rcx
000000010000d30f	leaq	0x1(%rax), %rdx
000000010000d313	movq	%rdx, (%rsi)
000000010000d316	movq	%rcx, 0x8(%rsi)
000000010000d31a	movzbl	(%rax), %eax
000000010000d31d	movl	$0x1d, %r9d
000000010000d323	xorl	%ecx, %ecx
000000010000d325	jmp	0x10000d363
000000010000d327	movw	$0x13, 0x8(%rdi)
000000010000d32d	jmp	0x10000d9ca
000000010000d332	movq	(%rsi), %rax
000000010000d335	movq	0x8(%rsi), %rcx
000000010000d339	cmpq	$0x1, %rcx
000000010000d33d	jbe	0x10000d64b
000000010000d343	addq	$-0x2, %rcx
000000010000d347	leaq	0x2(%rax), %rdx
000000010000d34b	movq	%rdx, (%rsi)
000000010000d34e	movq	%rcx, 0x8(%rsi)
000000010000d352	movzwl	(%rax), %eax
000000010000d355	movl	%eax, %ecx
000000010000d357	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d35d	movl	$0x1d, %r9d
000000010000d363	xorl	%esi, %esi
000000010000d365	xorl	%r8d, %r8d
000000010000d368	jmp	0x10000da12
000000010000d36d	movq	(%rsi), %rcx
000000010000d370	movq	0x8(%rsi), %rax
000000010000d374	cmpq	$0x2, %rax
000000010000d378	jbe	0x10000d66a
000000010000d37e	addq	$-0x3, %rax
000000010000d382	leaq	0x3(%rcx), %rdx
000000010000d386	movq	%rdx, (%rsi)
000000010000d389	movq	%rax, 0x8(%rsi)
000000010000d38d	movzwl	(%rcx), %eax
000000010000d390	movzbl	0x2(%rcx), %esi
000000010000d394	shll	$0x10, %esi
000000010000d397	orl	%eax, %esi
000000010000d399	movl	%eax, %ecx
000000010000d39b	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d3a1	andl	$0xff0000, %esi                 ## imm = 0xFF0000
000000010000d3a7	jmp	0x10000d3f1
000000010000d3a9	movq	(%rsi), %rax
000000010000d3ac	movq	0x8(%rsi), %rcx
000000010000d3b0	cmpq	$0x3, %rcx
000000010000d3b4	jbe	0x10000d684
000000010000d3ba	addq	$-0x4, %rcx
000000010000d3be	leaq	0x4(%rax), %rdx
000000010000d3c2	movq	%rdx, (%rsi)
000000010000d3c5	movq	%rcx, 0x8(%rsi)
000000010000d3c9	movzwl	0x1(%rax), %ecx
000000010000d3cd	movzbl	(%rax), %edx
000000010000d3d0	movzbl	0x3(%rax), %eax
000000010000d3d4	movb	%dl, -0x15(%rbp)
000000010000d3d7	movb	%al, -0x12(%rbp)
000000010000d3da	movw	%cx, -0x14(%rbp)
000000010000d3de	movl	-0x15(%rbp), %eax
000000010000d3e1	movl	%eax, %ecx
000000010000d3e3	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d3e9	movl	%eax, %esi
000000010000d3eb	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d3f1	movl	$0x1d, %r9d
000000010000d3f7	xorl	%r8d, %r8d
000000010000d3fa	jmp	0x10000da12
000000010000d3ff	movq	(%rsi), %rcx
000000010000d402	movq	0x8(%rsi), %rax
000000010000d406	cmpq	$0x4, %rax
000000010000d40a	jb	0x10000d6d8
000000010000d410	addq	$-0x4, %rax
000000010000d414	leaq	0x4(%rcx), %rdx
000000010000d418	movq	%rdx, (%rsi)
000000010000d41b	movq	%rax, 0x8(%rsi)
000000010000d41f	movzwl	0x1(%rcx), %eax
000000010000d423	movzbl	(%rcx), %edx
000000010000d426	movzbl	0x3(%rcx), %ecx
000000010000d42a	movb	%dl, -0x15(%rbp)
000000010000d42d	movb	%cl, -0x12(%rbp)
000000010000d430	movw	%ax, -0x14(%rbp)
000000010000d434	movl	-0x15(%rbp), %ecx
000000010000d437	movb	$0x4b, %al
000000010000d439	jmp	0x10000d6f8
000000010000d43e	movq	%r8, (%rsi)
000000010000d441	negq	%r9
000000010000d444	movq	%r9, 0x8(%rsi)
000000010000d448	movb	$0x6, %al
000000010000d44a	movb	%al, 0x8(%rdi)
000000010000d44d	movb	$0x0, 0x9(%rdi)
000000010000d451	movw	$0x0, 0xe(%rdi)
000000010000d457	movl	$0x0, 0xa(%rdi)
000000010000d45e	movq	%rdx, 0x10(%rdi)
000000010000d462	movq	$0x2e, (%rdi)
000000010000d469	popq	%rbx
000000010000d46a	popq	%rbp
000000010000d46b	retq
000000010000d46c	movw	$0x0, -0x18(%rbp)
000000010000d472	movb	$0x0, -0x12(%rbp)
000000010000d476	movl	$0x0, -0x16(%rbp)
000000010000d47d	movl	-0x15(%rbp), %eax
000000010000d480	movl	%eax, 0xc(%rdi)
000000010000d483	movl	-0x18(%rbp), %eax
000000010000d486	movl	%eax, 0x9(%rdi)
000000010000d489	movb	$0x13, 0x8(%rdi)
000000010000d48d	jmp	0x10000d9a1
000000010000d492	movl	$0x0, -0x18(%rbp)
000000010000d499	movb	$0x0, -0x12(%rbp)
000000010000d49d	movw	$0x0, -0x14(%rbp)
000000010000d4a3	movl	-0x15(%rbp), %eax
000000010000d4a6	movl	%eax, 0xc(%rdi)
000000010000d4a9	movl	$0x0, 0x9(%rdi)
000000010000d4b0	movb	$0x13, 0x8(%rdi)
000000010000d4b4	jmp	0x10000d45e
000000010000d4b6	movb	$0x13, 0x8(%rdi)
000000010000d4ba	movl	$0x0, 0x9(%rdi)
000000010000d4c1	movl	$0x0, 0xc(%rdi)
000000010000d4c8	jmp	0x10000d9a1
000000010000d4cd	movl	$0x0, -0x18(%rbp)
000000010000d4d4	movzbl	-0x16(%rbp), %ecx
000000010000d4d8	movb	%cl, 0xb(%rdi)
000000010000d4db	movw	$0x0, 0x9(%rdi)
000000010000d4e1	movb	$0x13, 0x8(%rdi)
000000010000d4e5	movb	$0x0, 0xc(%rdi)
000000010000d4e9	movb	$0x0, 0xf(%rdi)
000000010000d4ed	movw	$0x0, 0xd(%rdi)
000000010000d4f3	jmp	0x10000d9d7
000000010000d4f8	movb	$0x0, -0x12(%rbp)
000000010000d4fc	movw	$0x0, -0x14(%rbp)
000000010000d502	movl	$0x0, -0x18(%rbp)
000000010000d509	movq	%rax, -0x11(%rbp)
000000010000d50d	movq	-0x18(%rbp), %rax
000000010000d511	movq	%rax, %xmm0
000000010000d516	movl	-0x10(%rbp), %ecx
000000010000d519	movzwl	-0xc(%rbp), %edx
000000010000d51d	movzbl	-0xa(%rbp), %esi
000000010000d521	movl	%eax, 0x9(%rdi)
000000010000d524	shrq	$0x20, %rax
000000010000d528	movw	%ax, 0xd(%rdi)
000000010000d52c	movdqa	%xmm0, -0x40(%rbp)
000000010000d531	movzwl	-0x3a(%rbp), %eax
000000010000d535	movw	%ax, 0xf(%rdi)
000000010000d539	movb	$0x13, 0x8(%rdi)
000000010000d53d	movb	%sil, 0x17(%rdi)
000000010000d541	movw	%dx, 0x15(%rdi)
000000010000d545	movl	%ecx, 0x11(%rdi)
000000010000d548	movq	$0x2e, (%rdi)
000000010000d54f	popq	%rbx
000000010000d550	popq	%rbp
000000010000d551	retq
000000010000d552	movq	(%rsi), %rcx
000000010000d555	movq	0x8(%rsi), %rax
000000010000d559	cmpq	$0x4, %rax
000000010000d55d	jb	0x10000d88a
000000010000d563	addq	$-0x4, %rax
000000010000d567	leaq	0x4(%rcx), %rdx
000000010000d56b	movq	%rdx, (%rsi)
000000010000d56e	movq	%rax, 0x8(%rsi)
000000010000d572	movzwl	0x1(%rcx), %eax
000000010000d576	movzbl	(%rcx), %edx
000000010000d579	movzbl	0x3(%rcx), %ecx
000000010000d57d	movb	%dl, -0x15(%rbp)
000000010000d580	movb	%cl, -0x12(%rbp)
000000010000d583	movw	%ax, -0x14(%rbp)
000000010000d587	movl	-0x15(%rbp), %ecx
000000010000d58a	movb	$0x4b, %al
000000010000d58c	jmp	0x10000d8aa
000000010000d591	movq	(%rsi), %rcx
000000010000d594	movq	0x8(%rsi), %rax
000000010000d598	cmpq	$0x4, %rax
000000010000d59c	jb	0x10000d8e2
000000010000d5a2	addq	$-0x4, %rax
000000010000d5a6	leaq	0x4(%rcx), %rdx
000000010000d5aa	movq	%rdx, (%rsi)
000000010000d5ad	movq	%rax, 0x8(%rsi)
000000010000d5b1	movzwl	0x1(%rcx), %eax
000000010000d5b5	movzbl	(%rcx), %edx
000000010000d5b8	movzbl	0x3(%rcx), %ecx
000000010000d5bc	movb	%dl, -0x15(%rbp)
000000010000d5bf	movb	%cl, -0x12(%rbp)
000000010000d5c2	movw	%ax, -0x14(%rbp)
000000010000d5c6	movl	-0x15(%rbp), %ecx
000000010000d5c9	movb	$0x4b, %al
000000010000d5cb	jmp	0x10000d902
000000010000d5d0	addq	$-0x10, %rcx
000000010000d5d4	leaq	0x10(%rax), %rdx
000000010000d5d8	movq	%rdx, (%rsi)
000000010000d5db	movq	%rcx, 0x8(%rsi)
000000010000d5df	movl	%eax, %ecx
000000010000d5e1	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d5e7	movl	%eax, %esi
000000010000d5e9	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d5ef	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d5f9	andq	%rax, %r8
000000010000d5fc	movl	$0x1, %r9d
000000010000d602	movl	$0x10, %edx
000000010000d607	jmp	0x10000da12
000000010000d60c	movq	(%rsi), %rcx
000000010000d60f	movq	0x8(%rsi), %rax
000000010000d613	cmpq	$0x4, %rax
000000010000d617	jb	0x10000d93a
000000010000d61d	addq	$-0x4, %rax
000000010000d621	leaq	0x4(%rcx), %rdx
000000010000d625	movq	%rdx, (%rsi)
000000010000d628	movq	%rax, 0x8(%rsi)
000000010000d62c	movzwl	0x1(%rcx), %eax
000000010000d630	movzbl	(%rcx), %edx
000000010000d633	movzbl	0x3(%rcx), %ecx
000000010000d637	movb	%dl, -0x15(%rbp)
000000010000d63a	movb	%cl, -0x12(%rbp)
000000010000d63d	movw	%ax, -0x14(%rbp)
000000010000d641	movl	-0x15(%rbp), %ecx
000000010000d644	movb	$0x4b, %al
000000010000d646	jmp	0x10000d95a
000000010000d64b	movw	$0x0, -0x18(%rbp)
000000010000d651	movb	$0x0, -0x12(%rbp)
000000010000d655	movl	$0x0, -0x16(%rbp)
000000010000d65c	movl	-0x15(%rbp), %ecx
000000010000d65f	movl	%ecx, 0xc(%rdi)
000000010000d662	movl	-0x18(%rbp), %ecx
000000010000d665	movl	%ecx, 0x9(%rdi)
000000010000d668	jmp	0x10000d6a2
000000010000d66a	movb	$0x13, 0x8(%rdi)
000000010000d66e	movb	$0x0, 0xf(%rdi)
000000010000d672	movw	$0x0, 0xd(%rdi)
000000010000d678	movl	$0x0, 0x9(%rdi)
000000010000d67f	jmp	0x10000d9a1
000000010000d684	movl	$0x0, -0x18(%rbp)
000000010000d68b	movb	$0x0, -0x12(%rbp)
000000010000d68f	movw	$0x0, -0x14(%rbp)
000000010000d695	movl	-0x15(%rbp), %ecx
000000010000d698	movl	%ecx, 0xc(%rdi)
000000010000d69b	movl	$0x0, 0x9(%rdi)
000000010000d6a2	movb	$0x13, 0x8(%rdi)
000000010000d6a6	jmp	0x10000d9d7
000000010000d6ab	movb	$0x0, -0x12(%rbp)
000000010000d6af	movw	$0x0, -0x14(%rbp)
000000010000d6b5	movl	$0x0, -0x18(%rbp)
000000010000d6bc	movq	%rax, -0x11(%rbp)
000000010000d6c0	movq	-0x18(%rbp), %rax
000000010000d6c4	movl	-0x10(%rbp), %ecx
000000010000d6c7	movl	-0xd(%rbp), %edx
000000010000d6ca	movl	%ecx, -0x20(%rbp)
000000010000d6cd	movl	%edx, -0x1d(%rbp)
000000010000d6d0	movq	%rax, -0x28(%rbp)
000000010000d6d4	movb	$0x13, %al
000000010000d6d6	jmp	0x10000d6fc
000000010000d6d8	movl	$0x0, -0x18(%rbp)
000000010000d6df	movb	$0x0, -0x12(%rbp)
000000010000d6e3	movw	$0x0, -0x14(%rbp)
000000010000d6e9	movl	-0x15(%rbp), %eax
000000010000d6ec	movl	%eax, -0x25(%rbp)
000000010000d6ef	movl	$0x0, -0x28(%rbp)
000000010000d6f6	movb	$0x13, %al
000000010000d6f8	movq	%rcx, -0x21(%rbp)
000000010000d6fc	cmpb	$0x4b, %al
000000010000d6fe	jne	0x10000d98e
000000010000d704	movq	-0x21(%rbp), %rax
000000010000d708	movl	%eax, %ecx
000000010000d70a	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d710	movl	%eax, %esi
000000010000d712	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d718	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d722	andq	%rax, %r8
000000010000d725	movl	$0x1b, %r9d
000000010000d72b	jmp	0x10000da12
000000010000d730	movq	$-0x1, %rdx
000000010000d737	shlq	%cl, %rdx
000000010000d73a	xorl	%esi, %esi
000000010000d73c	testb	$0x40, %r10b
000000010000d740	cmoveq	%rsi, %rdx
000000010000d744	cmpl	$0x40, %ecx
000000010000d747	cmovgeq	%rsi, %rdx
000000010000d74b	orq	%rdx, %rax
000000010000d74e	movl	%eax, %ecx
000000010000d750	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d756	movl	%eax, %esi
000000010000d758	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d75e	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d768	andq	%rax, %r8
000000010000d76b	movl	$0x6, %r9d
000000010000d771	jmp	0x10000da12
000000010000d776	movq	%r8, (%rsi)
000000010000d779	negq	%r9
000000010000d77c	movq	%r9, 0x8(%rsi)
000000010000d780	movl	%eax, %ecx
000000010000d782	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d788	movl	%eax, %esi
000000010000d78a	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d790	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d79a	andq	%rax, %r8
000000010000d79d	movl	$0x1d, %r9d
000000010000d7a3	jmp	0x10000da12
000000010000d7a8	movq	%r8, %rax
000000010000d7ab	movb	$0x13, %cl
000000010000d7ad	jmp	0x10000d9c3
000000010000d7b2	movw	$0x13, 0x8(%rdi)
000000010000d7b8	jmp	0x10000d451
000000010000d7bd	movq	%rdx, %r8
000000010000d7c0	notq	%r8
000000010000d7c3	addq	%rcx, %r8
000000010000d7c6	leaq	0x1(%rax,%rdx), %rcx
000000010000d7cb	movq	%rcx, (%rsi)
000000010000d7ce	movq	%r8, 0x8(%rsi)
000000010000d7d2	movl	%eax, %ecx
000000010000d7d4	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d7da	movl	%eax, %esi
000000010000d7dc	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d7e2	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d7ec	andq	%rax, %r8
000000010000d7ef	movl	$0x1f, %r9d
000000010000d7f5	jmp	0x10000da12
000000010000d7fa	movb	$0x0, -0x12(%rbp)
000000010000d7fe	movw	$0x0, -0x14(%rbp)
000000010000d804	movl	$0x0, -0x18(%rbp)
000000010000d80b	movq	%rax, -0x11(%rbp)
000000010000d80f	movq	-0x18(%rbp), %rax
000000010000d813	movl	-0x10(%rbp), %ecx
000000010000d816	movl	-0xd(%rbp), %edx
000000010000d819	movl	%ecx, -0x20(%rbp)
000000010000d81c	movl	%edx, -0x1d(%rbp)
000000010000d81f	movq	%rax, -0x28(%rbp)
000000010000d823	movb	$0x13, %al
000000010000d825	jmp	0x10000d8ae
000000010000d82a	movb	$0x0, -0x12(%rbp)
000000010000d82e	movw	$0x0, -0x14(%rbp)
000000010000d834	movl	$0x0, -0x18(%rbp)
000000010000d83b	movq	%rax, -0x11(%rbp)
000000010000d83f	movq	-0x18(%rbp), %rax
000000010000d843	movl	-0x10(%rbp), %ecx
000000010000d846	movl	-0xd(%rbp), %edx
000000010000d849	movl	%ecx, -0x20(%rbp)
000000010000d84c	movl	%edx, -0x1d(%rbp)
000000010000d84f	movq	%rax, -0x28(%rbp)
000000010000d853	movb	$0x13, %al
000000010000d855	jmp	0x10000d906
000000010000d85a	movb	$0x0, -0x12(%rbp)
000000010000d85e	movw	$0x0, -0x14(%rbp)
000000010000d864	movl	$0x0, -0x18(%rbp)
000000010000d86b	movq	%rax, -0x11(%rbp)
000000010000d86f	movq	-0x18(%rbp), %rax
000000010000d873	movl	-0x10(%rbp), %ecx
000000010000d876	movl	-0xd(%rbp), %edx
000000010000d879	movl	%ecx, -0x20(%rbp)
000000010000d87c	movl	%edx, -0x1d(%rbp)
000000010000d87f	movq	%rax, -0x28(%rbp)
000000010000d883	movb	$0x13, %al
000000010000d885	jmp	0x10000d95e
000000010000d88a	movl	$0x0, -0x18(%rbp)
000000010000d891	movb	$0x0, -0x12(%rbp)
000000010000d895	movw	$0x0, -0x14(%rbp)
000000010000d89b	movl	-0x15(%rbp), %eax
000000010000d89e	movl	%eax, -0x25(%rbp)
000000010000d8a1	movl	$0x0, -0x28(%rbp)
000000010000d8a8	movb	$0x13, %al
000000010000d8aa	movq	%rcx, -0x21(%rbp)
000000010000d8ae	cmpb	$0x4b, %al
000000010000d8b0	jne	0x10000d98e
000000010000d8b6	movq	-0x21(%rbp), %rax
000000010000d8ba	movl	%eax, %ecx
000000010000d8bc	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d8c2	movl	%eax, %esi
000000010000d8c4	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d8ca	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d8d4	andq	%rax, %r8
000000010000d8d7	movl	$0x1a, %r9d
000000010000d8dd	jmp	0x10000da12
000000010000d8e2	movl	$0x0, -0x18(%rbp)
000000010000d8e9	movb	$0x0, -0x12(%rbp)
000000010000d8ed	movw	$0x0, -0x14(%rbp)
000000010000d8f3	movl	-0x15(%rbp), %eax
000000010000d8f6	movl	%eax, -0x25(%rbp)
000000010000d8f9	movl	$0x0, -0x28(%rbp)
000000010000d900	movb	$0x13, %al
000000010000d902	movq	%rcx, -0x21(%rbp)
000000010000d906	cmpb	$0x4b, %al
000000010000d908	jne	0x10000d98e
000000010000d90e	movq	-0x21(%rbp), %rax
000000010000d912	movl	%eax, %ecx
000000010000d914	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d91a	movl	%eax, %esi
000000010000d91c	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d922	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d92c	andq	%rax, %r8
000000010000d92f	movl	$0xa, %r9d
000000010000d935	jmp	0x10000da12
000000010000d93a	movl	$0x0, -0x18(%rbp)
000000010000d941	movb	$0x0, -0x12(%rbp)
000000010000d945	movw	$0x0, -0x14(%rbp)
000000010000d94b	movl	-0x15(%rbp), %eax
000000010000d94e	movl	%eax, -0x25(%rbp)
000000010000d951	movl	$0x0, -0x28(%rbp)
000000010000d958	movb	$0x13, %al
000000010000d95a	movq	%rcx, -0x21(%rbp)
000000010000d95e	cmpb	$0x4b, %al
000000010000d960	jne	0x10000d98e
000000010000d962	movq	-0x21(%rbp), %rax
000000010000d966	movl	%eax, %ecx
000000010000d968	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d96e	movl	%eax, %esi
000000010000d970	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d976	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000d980	andq	%rax, %r8
000000010000d983	movl	$0x1e, %r9d
000000010000d989	jmp	0x10000da12
000000010000d98e	movl	-0x28(%rbp), %ecx
000000010000d991	movl	-0x25(%rbp), %edx
000000010000d994	movl	%edx, 0xc(%rdi)
000000010000d997	movl	%ecx, 0x9(%rdi)
000000010000d99a	movq	-0x21(%rbp), %rcx
000000010000d99e	movb	%al, 0x8(%rdi)
000000010000d9a1	movq	%rcx, 0x10(%rdi)
000000010000d9a5	movq	$0x2e, (%rdi)
000000010000d9ac	popq	%rbx
000000010000d9ad	popq	%rbp
000000010000d9ae	retq
000000010000d9af	leaq	0x1(%r8,%r10), %rax
000000010000d9b4	movq	%rax, (%rsi)
000000010000d9b7	notq	%r10
000000010000d9ba	addq	%r9, %r10
000000010000d9bd	movq	%r10, 0x8(%rsi)
000000010000d9c1	movb	$0x6, %cl
000000010000d9c3	movb	%cl, 0x8(%rdi)
000000010000d9c6	movb	$0x0, 0x9(%rdi)
000000010000d9ca	movw	$0x0, 0xe(%rdi)
000000010000d9d0	movl	$0x0, 0xa(%rdi)
000000010000d9d7	movq	%rax, 0x10(%rdi)
000000010000d9db	movq	$0x2e, (%rdi)
000000010000d9e2	popq	%rbx
000000010000d9e3	popq	%rbp
000000010000d9e4	retq
000000010000d9e5	movq	%r8, (%rsi)
000000010000d9e8	negq	%r9
000000010000d9eb	movq	%r9, 0x8(%rsi)
000000010000d9ef	movl	%eax, %ecx
000000010000d9f1	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000d9f7	movl	%eax, %esi
000000010000d9f9	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000d9ff	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000da09	andq	%rax, %r8
000000010000da0c	movl	$0x7, %r9d
000000010000da12	movq	%r9, (%rdi)
000000010000da15	movzbl	%al, %eax
000000010000da18	orl	%eax, %ecx
000000010000da1a	movzwl	%cx, %eax
000000010000da1d	orl	%esi, %eax
000000010000da1f	orq	%r8, %rax
000000010000da22	movq	%rax, 0x8(%rdi)
000000010000da26	movq	%rdx, 0x10(%rdi)
000000010000da2a	popq	%rbx
000000010000da2b	popq	%rbp
000000010000da2c	retq
000000010000da2d	leaq	0x1(%r8,%r10), %rax
000000010000da32	movq	%rax, (%rsi)
000000010000da35	movq	%r10, %rcx
000000010000da38	notq	%rcx
000000010000da3b	leaq	(%rcx,%r9), %r11
000000010000da3f	movq	%r11, 0x8(%rsi)
000000010000da43	cmpq	%rdx, %r11
000000010000da46	jb	0x10000d2bc
000000010000da4c	subq	%rdx, %r9
000000010000da4f	addq	%r9, %rcx
000000010000da52	addq	%rdx, %r10
000000010000da55	leaq	0x1(%r8,%r10), %r8
000000010000da5a	jmp	0x10000d0c8
000000010000da5f	nop
000000010000da60	xorl	$-0x1, %ebx
000000010000da63	incl	-0x3e00000c(%rax)
000000010000da69	hlt
000000010000da6a	.byte 0xff #bad opcode
000000010000da6b	pushq	%rsi
000000010000da6d	hlt
000000010000da6e	.byte 0xff #bad opcode
000000010000da6f	decl	-0x1(%rbp,%rsi,8)
000000010000da73	callq	*-0x3800000b(%rdi)
000000010000da79	cmc
000000010000da7a	.byte 0xff #bad opcode
000000010000da7b	.byte 0xff #bad opcode
000000010000da7c	cmpb	%dh, %dh
000000010000da7e	.byte 0xff #bad opcode
000000010000da7f	callq	*-0x3c00000a(%rdi)
000000010000da85	idivb	%bh
000000010000da87	pushq	%rdx
000000010000da89	idivb	%bh
000000010000da8b	lcalll	*-0x9(%rdi)
000000010000da8e	.byte 0xff #bad opcode
000000010000da8f	callq	*0x72fffff7(%rsi)
000000010000da95	hlt
000000010000da96	.byte 0xff #bad opcode
000000010000da97	pushq	-0xc(%rdx)
000000010000da9a	.byte 0xff #bad opcode
000000010000da9b	pushq	-0xc(%rdx)
000000010000da9e	.byte 0xff #bad opcode
000000010000da9f	pushq	-0xc(%rdx)
000000010000daa2	.byte 0xff #bad opcode
000000010000daa3	pushq	-0xc(%rdx)
000000010000daa6	.byte 0xff #bad opcode
000000010000daa7	pushq	-0xc(%rdx)
000000010000daaa	.byte 0xff #bad opcode
000000010000daab	pushq	-0xc(%rdx)
000000010000daae	.byte 0xff #bad opcode
000000010000daaf	callq	*(%rax,%rdi,8)
000000010000dab2	.byte 0xff #bad opcode
000000010000dab3	pushq	-0xc(%rdx)
000000010000dab6	.byte 0xff #bad opcode
000000010000dab7	pushq	-0xc(%rdx)
000000010000daba	.byte 0xff #bad opcode
000000010000dabb	decl	(%rax)
000000010000dabd	hlt
000000010000dabe	.byte 0xff #bad opcode
000000010000dabf	pushq	-0xc(%rdx)
000000010000dac2	.byte 0xff #bad opcode
000000010000dac3	pushq	-0xc(%rdx)
000000010000dac6	.byte 0xff #bad opcode
000000010000dac7	callq	*%rcx
000000010000dac9	.byte 0xf3 #bad opcode
000000010000daca	.byte 0xff #bad opcode
000000010000dacb	decl	-0x8(%rbx)
000000010000dace	.byte 0xff #bad opcode
000000010000dacf	ljmpl	*-0x8(%rcx)
000000010000dad2	.byte 0xff #bad opcode
000000010000dad3	pushq	-0xc(%rdx)
000000010000dad6	.byte 0xff #bad opcode
000000010000dad7	pushq	-0xc(%rdx)
000000010000dada	.byte 0xff #bad opcode
000000010000dadb	pushq	-0xc(%rdx)
000000010000dade	.byte 0xff #bad opcode
000000010000dadf	pushq	-0xc(%rdx)
000000010000dae2	.byte 0xff #bad opcode
000000010000dae3	pushq	-0xc(%rdx)
000000010000dae6	.byte 0xff #bad opcode
000000010000dae7	jmpq	*-0x2d000008(%rax)
000000010000daed	clc
000000010000daee	.byte 0xff #bad opcode
000000010000daef	decl	0x49fffff9(%rip)
000000010000daf5	stc
000000010000daf6	.byte 0xff #bad opcode
000000010000daf7	decl	(%rdi)
000000010000daf9	.byte 0x1f #bad opcode
000000010000dafa	testb	%al, (%rax)
000000010000dafc	addb	%al, (%rax)
000000010000dafe	addb	%al, (%rax)
__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E:
000000010000db00	pushq	%rbp
000000010000db01	movq	%rsp, %rbp
000000010000db04	pushq	%r15
000000010000db06	pushq	%r14
000000010000db08	pushq	%r13
000000010000db0a	pushq	%r12
000000010000db0c	pushq	%rbx
000000010000db0d	subq	$0x98, %rsp
000000010000db14	movq	%rsi, %r14
000000010000db17	movq	%rdi, %rbx
000000010000db1a	movl	%edx, %eax
000000010000db1c	shrl	$0x8, %eax
000000010000db1f	movl	%edx, %esi
000000010000db21	shrl	$0x10, %esi
000000010000db24	movq	%rcx, -0x58(%rbp)
000000010000db28	movzwl	0xa(%rcx), %ecx
000000010000db2c	movq	(%r14), %r11
000000010000db2f	movq	0x8(%r14), %r13
000000010000db33	leaq	0x1622(%rip), %r10
000000010000db3a	movw	%cx, -0x4a(%rbp)
000000010000db3e	movl	%ecx, %r12d
000000010000db41	movl	%r12d, %r8d
000000010000db44	movq	%r11, %r15
000000010000db47	movzwl	%r12w, %r11d
000000010000db4b	leal	-0x1(%r11), %r12d
000000010000db4f	cmpl	$0x2b, %r12d
000000010000db53	ja	0x10000dc18
000000010000db59	movslq	(%r10,%r12,4), %r11
000000010000db5d	addq	%r10, %r11
000000010000db60	jmpq	*%r11
000000010000db63	testq	%r13, %r13
000000010000db66	je	0x10000e781
000000010000db6c	movq	%r13, %r9
000000010000db6f	decq	%r13
000000010000db72	leaq	0x1(%r15), %r11
000000010000db76	movq	%r11, (%r14)
000000010000db79	movq	%r13, 0x8(%r14)
000000010000db7d	movq	%r15, %rdi
000000010000db80	movq	%r14, %r15
000000010000db83	movzbl	(%rdi), %r14d
000000010000db87	movl	%r14d, %r12d
000000010000db8a	andl	$0x7f, %r12d
000000010000db8e	testb	%r14b, %r14b
000000010000db91	movq	%r15, %r14
000000010000db94	jns	0x10000db41
000000010000db96	testq	%r13, %r13
000000010000db99	je	0x10000eaed
000000010000db9f	movq	%r9, %rcx
000000010000dba2	leaq	-0x2(%r9), %r13
000000010000dba6	movq	%rdi, %rcx
000000010000dba9	leaq	0x2(%rdi), %r11
000000010000dbad	movq	%r11, (%r14)
000000010000dbb0	movq	%r13, 0x8(%r14)
000000010000dbb4	movq	%rbx, -0x60(%rbp)
000000010000dbb8	movzbl	0x1(%rdi), %ebx
000000010000dbbc	movl	%ebx, %r14d
000000010000dbbf	andl	$0x7f, %r14d
000000010000dbc3	shll	$0x7, %r14d
000000010000dbc7	movzwl	%r12w, %r12d
000000010000dbcb	orl	%r14d, %r12d
000000010000dbce	movq	%r15, %r14
000000010000dbd1	testb	%bl, %bl
000000010000dbd3	movq	-0x60(%rbp), %rbx
000000010000dbd7	jns	0x10000db41
000000010000dbdd	testq	%r13, %r13
000000010000dbe0	je	0x10000eaed
000000010000dbe6	addq	$-0x3, %r9
000000010000dbea	leaq	0x3(%rdi), %r11
000000010000dbee	movq	%r11, (%r14)
000000010000dbf1	movq	%r9, 0x8(%r14)
000000010000dbf5	movzbl	0x2(%rdi), %ecx
000000010000dbf9	cmpw	$0x3, %cx
000000010000dbfd	ja	0x10000f0d7
000000010000dc03	movzwl	%cx, %ecx
000000010000dc06	shll	$0xe, %ecx
000000010000dc09	movzwl	%r12w, %r12d
000000010000dc0d	orl	%ecx, %r12d
000000010000dc10	movq	%r9, %r13
000000010000dc13	jmp	0x10000db41
000000010000dc18	addl	$0xffffe0ff, %r11d              ## imm = 0xFFFFE0FF
000000010000dc1f	cmpl	$0x20, %r11d
000000010000dc23	ja	0x10000e78b
000000010000dc29	leaq	0x15dc(%rip), %rdx
000000010000dc30	movslq	(%rdx,%r11,4), %rsi
000000010000dc34	addq	%rdx, %rsi
000000010000dc37	jmpq	*%rsi
000000010000dc39	testq	%r13, %r13
000000010000dc3c	je	0x10000e4a2
000000010000dc42	leaq	(%r15,%r13), %rsi
000000010000dc46	movl	$0x1, %r8d
000000010000dc4c	subq	%r13, %r8
000000010000dc4f	incq	%r15
000000010000dc52	xorl	%edx, %edx
000000010000dc54	xorl	%ecx, %ecx
000000010000dc56	nopw	%cs:(%rax,%rax)
000000010000dc60	movzbl	-0x1(%r15), %edi
000000010000dc65	cmpl	$0x3f, %ecx
000000010000dc68	jne	0x10000dc74
000000010000dc6a	cmpb	$0x2, %dil
000000010000dc6e	jae	0x10000e4a9
000000010000dc74	movzbl	%dil, %edi
000000010000dc78	movl	%edi, %r9d
000000010000dc7b	andl	$0x7f, %r9d
000000010000dc7f	shlq	%cl, %r9
000000010000dc82	orq	%r9, %rdx
000000010000dc85	testb	%dil, %dil
000000010000dc88	jns	0x10000eb7e
000000010000dc8e	addl	$0x7, %ecx
000000010000dc91	incq	%r8
000000010000dc94	incq	%r15
000000010000dc97	cmpq	$0x1, %r8
000000010000dc9b	jne	0x10000dc60
000000010000dc9d	jmp	0x10000e495
000000010000dca2	testq	%r13, %r13
000000010000dca5	je	0x10000e4a2
000000010000dcab	leaq	(%r15,%r13), %rsi
000000010000dcaf	movl	$0x1, %r8d
000000010000dcb5	subq	%r13, %r8
000000010000dcb8	incq	%r15
000000010000dcbb	xorl	%edx, %edx
000000010000dcbd	xorl	%ecx, %ecx
000000010000dcbf	nop
000000010000dcc0	movzbl	-0x1(%r15), %edi
000000010000dcc5	cmpl	$0x3f, %ecx
000000010000dcc8	jne	0x10000dcd4
000000010000dcca	cmpb	$0x2, %dil
000000010000dcce	jae	0x10000e4a9
000000010000dcd4	movzbl	%dil, %edi
000000010000dcd8	movl	%edi, %r9d
000000010000dcdb	andl	$0x7f, %r9d
000000010000dcdf	shlq	%cl, %r9
000000010000dce2	orq	%r9, %rdx
000000010000dce5	testb	%dil, %dil
000000010000dce8	jns	0x10000ebaf
000000010000dcee	addl	$0x7, %ecx
000000010000dcf1	incq	%r8
000000010000dcf4	incq	%r15
000000010000dcf7	cmpq	$0x1, %r8
000000010000dcfb	jne	0x10000dcc0
000000010000dcfd	jmp	0x10000e495
000000010000dd02	cmpb	$0x8, %al
000000010000dd04	jne	0x10000e728
000000010000dd0a	cmpq	$0x7, %r13
000000010000dd0e	jbe	0x10000e7a1
000000010000dd14	addq	$-0x8, %r13
000000010000dd18	leaq	0x8(%r15), %rcx
000000010000dd1c	movq	%rcx, (%r14)
000000010000dd1f	movq	%r13, 0x8(%r14)
000000010000dd23	movq	(%r15), %rax
000000010000dd26	movq	%rax, -0x41(%rbp)
000000010000dd2a	movb	$0x4b, %cl
000000010000dd2c	jmp	0x10000eab9
000000010000dd31	cmpb	$0x8, %al
000000010000dd33	jne	0x10000e7d1
000000010000dd39	cmpq	$0x7, %r13
000000010000dd3d	jbe	0x10000ec41
000000010000dd43	addq	$-0x8, %r13
000000010000dd47	leaq	0x8(%r15), %rcx
000000010000dd4b	movq	%rcx, (%r14)
000000010000dd4e	movq	%r13, 0x8(%r14)
000000010000dd52	movq	(%r15), %rax
000000010000dd55	movq	%rax, -0x41(%rbp)
000000010000dd59	movb	$0x4b, %cl
000000010000dd5b	jmp	0x10000ee2f
000000010000dd60	movzbl	%dl, %edx
000000010000dd63	leaq	-0x38(%rbp), %rdi
000000010000dd67	movq	%r14, %rsi
000000010000dd6a	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
000000010000dd6f	movzbl	-0x38(%rbp), %eax
000000010000dd73	cmpb	$0x4b, %al
000000010000dd75	jne	0x10000e8d9
000000010000dd7b	movq	-0x30(%rbp), %rdx
000000010000dd7f	movl	%edx, %ecx
000000010000dd81	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000dd87	movl	%edx, %esi
000000010000dd89	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000dd8f	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000dd99	andq	%rdx, %r8
000000010000dd9c	xorl	%edi, %edi
000000010000dd9e	jmp	0x10000e629
000000010000dda3	cmpq	$0x2, %r13
000000010000dda7	jb	0x10000e810
000000010000ddad	addq	$-0x2, %r13
000000010000ddb1	leaq	0x2(%r15), %rdx
000000010000ddb5	movq	%rdx, (%r14)
000000010000ddb8	movq	%r13, 0x8(%r14)
000000010000ddbc	movzwl	(%r15), %r9d
000000010000ddc0	movl	$0x13, %ecx
000000010000ddc5	subq	%r9, %r13
000000010000ddc8	jb	0x10000dfd3
000000010000ddce	leaq	(%rdx,%r9), %rax
000000010000ddd2	movq	%rax, (%r14)
000000010000ddd5	movq	%r13, 0x8(%r14)
000000010000ddd9	movl	%edx, %ecx
000000010000dddb	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000dde1	movl	%edx, %esi
000000010000dde3	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000dde9	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ddf3	andq	%rdx, %r8
000000010000ddf6	movl	$0x1, %edi
000000010000ddfb	jmp	0x10000e629
000000010000de00	cmpq	$0x4, %r13
000000010000de04	jb	0x10000e83a
000000010000de0a	addq	$-0x4, %r13
000000010000de0e	leaq	0x4(%r15), %rdx
000000010000de12	movq	%rdx, (%r14)
000000010000de15	movq	%r13, 0x8(%r14)
000000010000de19	movzwl	0x1(%r15), %ecx
000000010000de1e	movzbl	(%r15), %esi
000000010000de22	movzbl	0x3(%r15), %eax
000000010000de27	movb	%sil, -0x35(%rbp)
000000010000de2b	movb	%al, -0x32(%rbp)
000000010000de2e	movw	%cx, -0x34(%rbp)
000000010000de32	movl	-0x35(%rbp), %r9d
000000010000de36	movl	$0x13, %ecx
000000010000de3b	subq	%r9, %r13
000000010000de3e	jae	0x10000ddce
000000010000de40	jmp	0x10000dfd3
000000010000de45	cmpq	$0x1, %r13
000000010000de49	jbe	0x10000e848
000000010000de4f	addq	$-0x2, %r13
000000010000de53	leaq	0x2(%r15), %rcx
000000010000de57	movq	%rcx, (%r14)
000000010000de5a	movq	%r13, 0x8(%r14)
000000010000de5e	movzbl	(%r15), %edx
000000010000de62	movzbl	0x1(%r15), %ecx
000000010000de67	shll	$0x8, %ecx
000000010000de6a	movl	$0x3, %edi
000000010000de6f	jmp	0x10000e624
000000010000de74	andl	$0xff00, %edx                   ## imm = 0xFF00
000000010000de7a	cmpl	$0x400, %edx                    ## imm = 0x400
000000010000de80	jne	0x10000ec78
000000010000de86	movq	-0x58(%rbp), %rax
000000010000de8a	movl	0x8(%rax), %edi
000000010000de8d	callq	__ZN5gimli4read4unit20allow_section_offset17hfd339d71b56cb3e7E ## gimli::read::unit::allow_section_offset::hfd339d71b56cb3e7
000000010000de92	testb	%al, %al
000000010000de94	je	0x10000ec71
000000010000de9a	leaq	-0x38(%rbp), %rdi
000000010000de9e	movq	%r14, %rsi
000000010000dea1	movl	$0x4, %edx
000000010000dea6	callq	__ZN5gimli4read6reader6Reader11read_offset17hca393a35f8c2cc9fE ## gimli::read::reader::Reader::read_offset::hca393a35f8c2cc9f
000000010000deab	movzbl	-0x38(%rbp), %eax
000000010000deaf	cmpb	$0x4b, %al
000000010000deb1	jne	0x10000e8d9
000000010000deb7	movq	-0x30(%rbp), %rcx
000000010000debb	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000dec5	andq	%rcx, %r8
000000010000dec8	movl	$0xa, %edi
000000010000decd	movl	%ecx, %edx
000000010000decf	jmp	0x10000ed20
000000010000ded4	andl	$0xff00, %edx                   ## imm = 0xFF00
000000010000deda	cmpl	$0x800, %edx                    ## imm = 0x800
000000010000dee0	jne	0x10000ece6
000000010000dee6	movq	-0x58(%rbp), %rax
000000010000deea	movl	0x8(%rax), %edi
000000010000deed	callq	__ZN5gimli4read4unit20allow_section_offset17hfd339d71b56cb3e7E ## gimli::read::unit::allow_section_offset::hfd339d71b56cb3e7
000000010000def2	testb	%al, %al
000000010000def4	je	0x10000ecdf
000000010000defa	movq	(%r14), %rax
000000010000defd	movq	0x8(%r14), %rcx
000000010000df01	cmpq	$0x7, %rcx
000000010000df05	jbe	0x10000f109
000000010000df0b	addq	$-0x8, %rcx
000000010000df0f	leaq	0x8(%rax), %rdx
000000010000df13	movq	%rdx, (%r14)
000000010000df16	movq	%rcx, 0x8(%r14)
000000010000df1a	movq	(%rax), %xmm0                   ## xmm0 = mem[0],zero
000000010000df1e	movl	$0xa, %edi
000000010000df23	jmp	0x10000ed05
000000010000df28	testq	%r13, %r13
000000010000df2b	je	0x10000e351
000000010000df31	xorl	%r9d, %r9d
000000010000df34	nopw	%cs:(%rax,%rax)
000000010000df3e	nop
000000010000df40	cmpb	$0x0, (%r15,%r9)
000000010000df45	je	0x10000ec00
000000010000df4b	incq	%r9
000000010000df4e	cmpq	%r9, %r13
000000010000df51	jne	0x10000df40
000000010000df53	jmp	0x10000e351
000000010000df58	testq	%r13, %r13
000000010000df5b	je	0x10000e794
000000010000df61	leaq	(%r15,%r13), %rdx
000000010000df65	xorl	%esi, %esi
000000010000df67	xorl	%r9d, %r9d
000000010000df6a	xorl	%ecx, %ecx
000000010000df6c	movzbl	(%r15,%rsi), %r8d
000000010000df71	cmpl	$0x3f, %ecx
000000010000df74	jne	0x10000df80
000000010000df76	cmpb	$0x2, %r8b
000000010000df7a	jae	0x10000eb5a
000000010000df80	movzbl	%r8b, %r8d
000000010000df84	movl	%r8d, %r10d
000000010000df87	andl	$0x7f, %r10d
000000010000df8b	shlq	%cl, %r10
000000010000df8e	orq	%r10, %r9
000000010000df91	testb	%r8b, %r8b
000000010000df94	jns	0x10000ef7f
000000010000df9a	addl	$0x7, %ecx
000000010000df9d	incq	%rsi
000000010000dfa0	cmpq	%rsi, %r13
000000010000dfa3	jne	0x10000df6c
000000010000dfa5	jmp	0x10000e2db
000000010000dfaa	testq	%r13, %r13
000000010000dfad	je	0x10000ebe0
000000010000dfb3	decq	%r13
000000010000dfb6	leaq	0x1(%r15), %rdx
000000010000dfba	movq	%rdx, (%r14)
000000010000dfbd	movq	%r13, 0x8(%r14)
000000010000dfc1	movzbl	(%r15), %r9d
000000010000dfc5	movl	$0x13, %ecx
000000010000dfca	subq	%r9, %r13
000000010000dfcd	jae	0x10000ddce
000000010000dfd3	movq	%rdx, %r15
000000010000dfd6	movq	%rcx, 0x8(%rbx)
000000010000dfda	jmp	0x10000f0ec
000000010000dfdf	testq	%r13, %r13
000000010000dfe2	je	0x10000e5f3
000000010000dfe8	decq	%r13
000000010000dfeb	leaq	0x1(%r15), %rcx
000000010000dfef	movq	%rcx, (%r14)
000000010000dff2	movq	%r13, 0x8(%r14)
000000010000dff6	movzbl	(%r15), %edx
000000010000dffa	movl	$0x2, %edi
000000010000dfff	xorl	%ecx, %ecx
000000010000e001	jmp	0x10000e624
000000010000e006	testq	%r13, %r13
000000010000e009	je	0x10000e5f3
000000010000e00f	decq	%r13
000000010000e012	leaq	0x1(%r15), %rcx
000000010000e016	movq	%rcx, (%r14)
000000010000e019	movq	%r13, 0x8(%r14)
000000010000e01d	cmpb	$0x0, (%r15)
000000010000e021	setne	%dl
000000010000e024	movl	$0x9, %edi
000000010000e029	xorl	%ecx, %ecx
000000010000e02b	jmp	0x10000e624
000000010000e030	movq	%r15, %rsi
000000010000e033	incq	%rsi
000000010000e036	decq	%r13
000000010000e039	xorl	%ecx, %ecx
000000010000e03b	xorl	%edx, %edx
000000010000e03d	jmp	0x10000e062
000000010000e03f	nop
000000010000e040	movl	%r8d, %r9d
000000010000e043	andl	$0x7f, %r9d
000000010000e047	shlq	%cl, %r9
000000010000e04a	orq	%r9, %rdx
000000010000e04d	addl	$0x7, %ecx
000000010000e050	incq	%r15
000000010000e053	incq	%rsi
000000010000e056	decq	%r13
000000010000e059	testb	%r8b, %r8b
000000010000e05c	jns	0x10000eb15
000000010000e062	cmpq	$-0x1, %r13
000000010000e066	je	0x10000eafa
000000010000e06c	movq	%rsi, (%r14)
000000010000e06f	movq	%r13, 0x8(%r14)
000000010000e073	movzbl	-0x1(%rsi), %r8d
000000010000e078	cmpl	$0x3f, %ecx
000000010000e07b	jne	0x10000e040
000000010000e07d	cmpb	$0x7f, %r8b
000000010000e081	je	0x10000e040
000000010000e083	testl	%r8d, %r8d
000000010000e086	je	0x10000e040
000000010000e088	movb	$0x7, %cl
000000010000e08a	jmp	0x10000eafc
000000010000e08f	cmpb	$0x8, %al
000000010000e091	jne	0x10000e858
000000010000e097	cmpq	$0x7, %r13
000000010000e09b	jbe	0x10000ed7b
000000010000e0a1	addq	$-0x8, %r13
000000010000e0a5	leaq	0x8(%r15), %rcx
000000010000e0a9	movq	%rcx, (%r14)
000000010000e0ac	movq	%r13, 0x8(%r14)
000000010000e0b0	movq	(%r15), %rax
000000010000e0b3	movq	%rax, -0x41(%rbp)
000000010000e0b7	movb	$0x4b, %cl
000000010000e0b9	jmp	0x10000ee87
000000010000e0be	testq	%r13, %r13
000000010000e0c1	je	0x10000e4a2
000000010000e0c7	leaq	(%r15,%r13), %rsi
000000010000e0cb	movl	$0x1, %r8d
000000010000e0d1	subq	%r13, %r8
000000010000e0d4	incq	%r15
000000010000e0d7	xorl	%edx, %edx
000000010000e0d9	xorl	%ecx, %ecx
000000010000e0db	movzbl	-0x1(%r15), %edi
000000010000e0e0	cmpl	$0x3f, %ecx
000000010000e0e3	jne	0x10000e0ef
000000010000e0e5	cmpb	$0x2, %dil
000000010000e0e9	jae	0x10000e4a9
000000010000e0ef	movzbl	%dil, %edi
000000010000e0f3	movl	%edi, %r9d
000000010000e0f6	andl	$0x7f, %r9d
000000010000e0fa	shlq	%cl, %r9
000000010000e0fd	orq	%r9, %rdx
000000010000e100	testb	%dil, %dil
000000010000e103	jns	0x10000f01a
000000010000e109	addl	$0x7, %ecx
000000010000e10c	incq	%r8
000000010000e10f	incq	%r15
000000010000e112	cmpq	$0x1, %r8
000000010000e116	jne	0x10000e0db
000000010000e118	jmp	0x10000e495
000000010000e11d	cmpw	$0x2, %si
000000010000e121	jne	0x10000e897
000000010000e127	movzbl	%dl, %edx
000000010000e12a	leaq	-0x38(%rbp), %rdi
000000010000e12e	movq	%r14, %rsi
000000010000e131	callq	__ZN5gimli4read6reader6Reader17read_sized_offset17hdb6215760dbc9cdaE ## gimli::read::reader::Reader::read_sized_offset::hdb6215760dbc9cda
000000010000e136	jmp	0x10000e8a6
000000010000e13b	testq	%r13, %r13
000000010000e13e	je	0x10000e5f3
000000010000e144	decq	%r13
000000010000e147	leaq	0x1(%r15), %rcx
000000010000e14b	movq	%rcx, (%r14)
000000010000e14e	movq	%r13, 0x8(%r14)
000000010000e152	movzbl	(%r15), %edx
000000010000e156	movl	$0xd, %edi
000000010000e15b	xorl	%ecx, %ecx
000000010000e15d	jmp	0x10000e624
000000010000e162	cmpq	$0x1, %r13
000000010000e166	jbe	0x10000e652
000000010000e16c	addq	$-0x2, %r13
000000010000e170	leaq	0x2(%r15), %rcx
000000010000e174	movq	%rcx, (%r14)
000000010000e177	movq	%r13, 0x8(%r14)
000000010000e17b	movzwl	(%r15), %edx
000000010000e17f	movl	%edx, %ecx
000000010000e181	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e187	movl	$0xd, %edi
000000010000e18c	jmp	0x10000e624
000000010000e191	cmpq	$0x3, %r13
000000010000e195	jbe	0x10000e701
000000010000e19b	addq	$-0x4, %r13
000000010000e19f	leaq	0x4(%r15), %rcx
000000010000e1a3	movq	%rcx, (%r14)
000000010000e1a6	movq	%r13, 0x8(%r14)
000000010000e1aa	movzwl	0x1(%r15), %ecx
000000010000e1af	movzbl	(%r15), %edx
000000010000e1b3	movzbl	0x3(%r15), %eax
000000010000e1b8	movb	%dl, -0x35(%rbp)
000000010000e1bb	movb	%al, -0x32(%rbp)
000000010000e1be	movw	%cx, -0x34(%rbp)
000000010000e1c2	movl	-0x35(%rbp), %edx
000000010000e1c5	movl	%edx, %ecx
000000010000e1c7	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e1cd	movl	%edx, %esi
000000010000e1cf	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e1d5	movl	$0xd, %edi
000000010000e1da	jmp	0x10000e626
000000010000e1df	cmpq	$0x7, %r13
000000010000e1e3	jbe	0x10000e8f5
000000010000e1e9	addq	$-0x8, %r13
000000010000e1ed	leaq	0x8(%r15), %rcx
000000010000e1f1	movq	%rcx, (%r14)
000000010000e1f4	movq	%r13, 0x8(%r14)
000000010000e1f8	movq	(%r15), %rdx
000000010000e1fb	jmp	0x10000efc2
000000010000e200	testq	%r13, %r13
000000010000e203	je	0x10000e4a2
000000010000e209	leaq	(%r15,%r13), %rsi
000000010000e20d	movl	$0x1, %r8d
000000010000e213	subq	%r13, %r8
000000010000e216	incq	%r15
000000010000e219	xorl	%edx, %edx
000000010000e21b	xorl	%ecx, %ecx
000000010000e21d	movzbl	-0x1(%r15), %edi
000000010000e222	cmpl	$0x3f, %ecx
000000010000e225	jne	0x10000e231
000000010000e227	cmpb	$0x2, %dil
000000010000e22b	jae	0x10000e4a9
000000010000e231	movzbl	%dil, %edi
000000010000e235	movl	%edi, %r9d
000000010000e238	andl	$0x7f, %r9d
000000010000e23c	shlq	%cl, %r9
000000010000e23f	orq	%r9, %rdx
000000010000e242	testb	%dil, %dil
000000010000e245	jns	0x10000efb8
000000010000e24b	addl	$0x7, %ecx
000000010000e24e	incq	%r8
000000010000e251	incq	%r15
000000010000e254	cmpq	$0x1, %r8
000000010000e258	jne	0x10000e21d
000000010000e25a	jmp	0x10000e495
000000010000e25f	cmpb	$0x8, %al
000000010000e261	jne	0x10000e93d
000000010000e267	cmpq	$0x7, %r13
000000010000e26b	jbe	0x10000edab
000000010000e271	addq	$-0x8, %r13
000000010000e275	leaq	0x8(%r15), %rcx
000000010000e279	movq	%rcx, (%r14)
000000010000e27c	movq	%r13, 0x8(%r14)
000000010000e280	movq	(%r15), %rax
000000010000e283	movq	%rax, -0x41(%rbp)
000000010000e287	movb	$0x4b, %cl
000000010000e289	jmp	0x10000eedf
000000010000e28e	testq	%r13, %r13
000000010000e291	je	0x10000e794
000000010000e297	leaq	(%r15,%r13), %rdx
000000010000e29b	xorl	%esi, %esi
000000010000e29d	xorl	%r9d, %r9d
000000010000e2a0	xorl	%ecx, %ecx
000000010000e2a2	movzbl	(%r15,%rsi), %r8d
000000010000e2a7	cmpl	$0x3f, %ecx
000000010000e2aa	jne	0x10000e2b6
000000010000e2ac	cmpb	$0x2, %r8b
000000010000e2b0	jae	0x10000eb5a
000000010000e2b6	movzbl	%r8b, %r8d
000000010000e2ba	movl	%r8d, %r10d
000000010000e2bd	andl	$0x7f, %r10d
000000010000e2c1	shlq	%cl, %r10
000000010000e2c4	orq	%r10, %r9
000000010000e2c7	testb	%r8b, %r8b
000000010000e2ca	jns	0x10000f04b
000000010000e2d0	addl	$0x7, %ecx
000000010000e2d3	incq	%rsi
000000010000e2d6	cmpq	%rsi, %r13
000000010000e2d9	jne	0x10000e2a2
000000010000e2db	movq	%rdx, (%r14)
000000010000e2de	movq	$0x0, 0x8(%r14)
000000010000e2e6	jmp	0x10000e797
000000010000e2eb	movl	$0x9, %edi
000000010000e2f0	xorl	%ecx, %ecx
000000010000e2f2	movb	$0x1, %dl
000000010000e2f4	jmp	0x10000e624
000000010000e2f9	cmpq	$0x3, %r13
000000010000e2fd	jbe	0x10000e701
000000010000e303	addq	$-0x4, %r13
000000010000e307	leaq	0x4(%r15), %rcx
000000010000e30b	movq	%rcx, (%r14)
000000010000e30e	movq	%r13, 0x8(%r14)
000000010000e312	movzwl	0x1(%r15), %ecx
000000010000e317	movzbl	(%r15), %edx
000000010000e31b	movzbl	0x3(%r15), %eax
000000010000e320	movb	%dl, -0x35(%rbp)
000000010000e323	movb	%al, -0x32(%rbp)
000000010000e326	movw	%cx, -0x34(%rbp)
000000010000e32a	movl	-0x35(%rbp), %edx
000000010000e32d	movl	%edx, %ecx
000000010000e32f	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e335	movl	%edx, %esi
000000010000e337	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e33d	movl	$0xf, %edi
000000010000e342	jmp	0x10000e626
000000010000e347	cmpq	$0x10, %r13
000000010000e34b	jae	0x10000e97c
000000010000e351	movq	$0x13, 0x8(%rbx)
000000010000e359	jmp	0x10000f0ec
000000010000e35e	cmpb	$0x8, %al
000000010000e360	jne	0x10000e9bd
000000010000e366	cmpq	$0x7, %r13
000000010000e36a	jbe	0x10000eddb
000000010000e370	addq	$-0x8, %r13
000000010000e374	leaq	0x8(%r15), %rcx
000000010000e378	movq	%rcx, (%r14)
000000010000e37b	movq	%r13, 0x8(%r14)
000000010000e37f	movq	(%r15), %rax
000000010000e382	movq	%rax, -0x41(%rbp)
000000010000e386	movb	$0x4b, %cl
000000010000e388	jmp	0x10000ef33
000000010000e38d	cmpq	$0x7, %r13
000000010000e391	jbe	0x10000e9fc
000000010000e397	addq	$-0x8, %r13
000000010000e39b	leaq	0x8(%r15), %rcx
000000010000e39f	movq	%rcx, (%r14)
000000010000e3a2	movq	%r13, 0x8(%r14)
000000010000e3a6	movq	(%r15), %rdx
000000010000e3a9	movl	%edx, %ecx
000000010000e3ab	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e3b1	movl	%edx, %esi
000000010000e3b3	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e3b9	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000e3c3	andq	%rdx, %r8
000000010000e3c6	movl	$0x19, %edi
000000010000e3cb	jmp	0x10000e629
000000010000e3d0	cmpw	$0x21, -0x4a(%rbp)
000000010000e3d5	jne	0x10000ea44
000000010000e3db	movq	-0x58(%rbp), %rax
000000010000e3df	movq	(%rax), %rdx
000000010000e3e2	jmp	0x10000eb33
000000010000e3e7	testq	%r13, %r13
000000010000e3ea	je	0x10000e4a2
000000010000e3f0	leaq	(%r15,%r13), %rsi
000000010000e3f4	movl	$0x1, %r8d
000000010000e3fa	subq	%r13, %r8
000000010000e3fd	incq	%r15
000000010000e400	xorl	%edx, %edx
000000010000e402	xorl	%ecx, %ecx
000000010000e404	movzbl	-0x1(%r15), %edi
000000010000e409	cmpl	$0x3f, %ecx
000000010000e40c	jne	0x10000e418
000000010000e40e	cmpb	$0x2, %dil
000000010000e412	jae	0x10000e4a9
000000010000e418	movzbl	%dil, %edi
000000010000e41c	movl	%edi, %r9d
000000010000e41f	andl	$0x7f, %r9d
000000010000e423	shlq	%cl, %r9
000000010000e426	orq	%r9, %rdx
000000010000e429	testb	%dil, %dil
000000010000e42c	jns	0x10000f0a6
000000010000e432	addl	$0x7, %ecx
000000010000e435	incq	%r8
000000010000e438	incq	%r15
000000010000e43b	cmpq	$0x1, %r8
000000010000e43f	jne	0x10000e404
000000010000e441	jmp	0x10000e495
000000010000e443	testq	%r13, %r13
000000010000e446	je	0x10000e4a2
000000010000e448	leaq	(%r15,%r13), %rsi
000000010000e44c	movl	$0x1, %r8d
000000010000e452	subq	%r13, %r8
000000010000e455	incq	%r15
000000010000e458	xorl	%edx, %edx
000000010000e45a	xorl	%ecx, %ecx
000000010000e45c	movzbl	-0x1(%r15), %edi
000000010000e461	cmpl	$0x3f, %ecx
000000010000e464	jne	0x10000e46c
000000010000e466	cmpb	$0x2, %dil
000000010000e46a	jae	0x10000e4a9
000000010000e46c	movzbl	%dil, %edi
000000010000e470	movl	%edi, %r9d
000000010000e473	andl	$0x7f, %r9d
000000010000e477	shlq	%cl, %r9
000000010000e47a	orq	%r9, %rdx
000000010000e47d	testb	%dil, %dil
000000010000e480	jns	0x10000efe9
000000010000e486	addl	$0x7, %ecx
000000010000e489	incq	%r8
000000010000e48c	incq	%r15
000000010000e48f	cmpq	$0x1, %r8
000000010000e493	jne	0x10000e45c
000000010000e495	movq	%rsi, (%r14)
000000010000e498	movq	$0x0, 0x8(%r14)
000000010000e4a0	jmp	0x10000e4a5
000000010000e4a2	movq	%r15, %rsi
000000010000e4a5	movb	$0x13, %al
000000010000e4a7	jmp	0x10000e4b5
000000010000e4a9	movq	%r15, (%r14)
000000010000e4ac	negq	%r8
000000010000e4af	movq	%r8, 0x8(%r14)
000000010000e4b3	movb	$0x6, %al
000000010000e4b5	movb	%al, 0x8(%rbx)
000000010000e4b8	movb	$0x0, 0x9(%rbx)
000000010000e4bc	movw	$0x0, 0xe(%rbx)
000000010000e4c2	movl	$0x0, 0xa(%rbx)
000000010000e4c9	movq	%rsi, 0x10(%rbx)
000000010000e4cd	jmp	0x10000f0f0
000000010000e4d2	cmpq	$0x7, %r13
000000010000e4d6	jbe	0x10000ea4d
000000010000e4dc	addq	$-0x8, %r13
000000010000e4e0	leaq	0x8(%r15), %rcx
000000010000e4e4	movq	%rcx, (%r14)
000000010000e4e7	movq	%r13, 0x8(%r14)
000000010000e4eb	movq	(%r15), %rdx
000000010000e4ee	jmp	0x10000ee3c
000000010000e4f3	testq	%r13, %r13
000000010000e4f6	je	0x10000e5f3
000000010000e4fc	decq	%r13
000000010000e4ff	leaq	0x1(%r15), %rcx
000000010000e503	movq	%rcx, (%r14)
000000010000e506	movq	%r13, 0x8(%r14)
000000010000e50a	movzbl	(%r15), %edx
000000010000e50e	movl	$0x1d, %edi
000000010000e513	xorl	%ecx, %ecx
000000010000e515	jmp	0x10000e624
000000010000e51a	cmpq	$0x1, %r13
000000010000e51e	jbe	0x10000e652
000000010000e524	addq	$-0x2, %r13
000000010000e528	leaq	0x2(%r15), %rcx
000000010000e52c	movq	%rcx, (%r14)
000000010000e52f	movq	%r13, 0x8(%r14)
000000010000e533	movzwl	(%r15), %edx
000000010000e537	movl	%edx, %ecx
000000010000e539	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e53f	movl	$0x1d, %edi
000000010000e544	jmp	0x10000e624
000000010000e549	cmpq	$0x2, %r13
000000010000e54d	jbe	0x10000e767
000000010000e553	addq	$-0x3, %r13
000000010000e557	leaq	0x3(%r15), %rcx
000000010000e55b	movq	%rcx, (%r14)
000000010000e55e	movq	%r13, 0x8(%r14)
000000010000e562	movzwl	(%r15), %edx
000000010000e566	movzbl	0x2(%r15), %esi
000000010000e56b	shll	$0x10, %esi
000000010000e56e	orl	%edx, %esi
000000010000e570	movl	%edx, %ecx
000000010000e572	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e578	andl	$0xff0000, %esi                 ## imm = 0xFF0000
000000010000e57e	movl	$0x1d, %edi
000000010000e583	jmp	0x10000e626
000000010000e588	cmpq	$0x3, %r13
000000010000e58c	jbe	0x10000e701
000000010000e592	addq	$-0x4, %r13
000000010000e596	leaq	0x4(%r15), %rcx
000000010000e59a	movq	%rcx, (%r14)
000000010000e59d	movq	%r13, 0x8(%r14)
000000010000e5a1	movzwl	0x1(%r15), %ecx
000000010000e5a6	movzbl	(%r15), %edx
000000010000e5aa	movzbl	0x3(%r15), %eax
000000010000e5af	movb	%dl, -0x35(%rbp)
000000010000e5b2	movb	%al, -0x32(%rbp)
000000010000e5b5	movw	%cx, -0x34(%rbp)
000000010000e5b9	movl	-0x35(%rbp), %edx
000000010000e5bc	movl	%edx, %ecx
000000010000e5be	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e5c4	movl	%edx, %esi
000000010000e5c6	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e5cc	movl	$0x1d, %edi
000000010000e5d1	jmp	0x10000e626
000000010000e5d3	testq	%r13, %r13
000000010000e5d6	je	0x10000e5f3
000000010000e5d8	decq	%r13
000000010000e5db	leaq	0x1(%r15), %rcx
000000010000e5df	movq	%rcx, (%r14)
000000010000e5e2	movq	%r13, 0x8(%r14)
000000010000e5e6	movzbl	(%r15), %edx
000000010000e5ea	movl	$0xc, %edi
000000010000e5ef	xorl	%ecx, %ecx
000000010000e5f1	jmp	0x10000e624
000000010000e5f3	movw	$0x13, 0x8(%rbx)
000000010000e5f9	jmp	0x10000eb03
000000010000e5fe	cmpq	$0x1, %r13
000000010000e602	jbe	0x10000e652
000000010000e604	addq	$-0x2, %r13
000000010000e608	leaq	0x2(%r15), %rcx
000000010000e60c	movq	%rcx, (%r14)
000000010000e60f	movq	%r13, 0x8(%r14)
000000010000e613	movzwl	(%r15), %edx
000000010000e617	movl	%edx, %ecx
000000010000e619	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e61f	movl	$0xc, %edi
000000010000e624	xorl	%esi, %esi
000000010000e626	xorl	%r8d, %r8d
000000010000e629	movq	-0x58(%rbp), %rax
000000010000e62d	movzwl	0x8(%rax), %eax
000000010000e631	movzbl	%dl, %edx
000000010000e634	orl	%edx, %ecx
000000010000e636	movzwl	%cx, %ecx
000000010000e639	orl	%esi, %ecx
000000010000e63b	orq	%r8, %rcx
000000010000e63e	movq	%rdi, (%rbx)
000000010000e641	movq	%rcx, 0x8(%rbx)
000000010000e645	movq	%r9, 0x10(%rbx)
000000010000e649	movw	%ax, 0x18(%rbx)
000000010000e64d	jmp	0x10000f0f7
000000010000e652	movw	$0x0, -0x38(%rbp)
000000010000e658	movb	$0x0, -0x32(%rbp)
000000010000e65c	movl	$0x0, -0x36(%rbp)
000000010000e663	movl	-0x35(%rbp), %ecx
000000010000e666	movl	%ecx, 0xc(%rbx)
000000010000e669	movl	-0x38(%rbp), %ecx
000000010000e66c	movl	%ecx, 0x9(%rbx)
000000010000e66f	movb	$0x13, 0x8(%rbx)
000000010000e673	jmp	0x10000f0ec
000000010000e678	cmpq	$0x2, %r13
000000010000e67c	jbe	0x10000e767
000000010000e682	addq	$-0x3, %r13
000000010000e686	leaq	0x3(%r15), %rcx
000000010000e68a	movq	%rcx, (%r14)
000000010000e68d	movq	%r13, 0x8(%r14)
000000010000e691	movzwl	(%r15), %edx
000000010000e695	movzbl	0x2(%r15), %esi
000000010000e69a	shll	$0x10, %esi
000000010000e69d	orl	%edx, %esi
000000010000e69f	movl	%edx, %ecx
000000010000e6a1	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e6a7	andl	$0xff0000, %esi                 ## imm = 0xFF0000
000000010000e6ad	movl	$0xc, %edi
000000010000e6b2	jmp	0x10000e626
000000010000e6b7	cmpq	$0x3, %r13
000000010000e6bb	jbe	0x10000e701
000000010000e6bd	addq	$-0x4, %r13
000000010000e6c1	leaq	0x4(%r15), %rcx
000000010000e6c5	movq	%rcx, (%r14)
000000010000e6c8	movq	%r13, 0x8(%r14)
000000010000e6cc	movzwl	0x1(%r15), %ecx
000000010000e6d1	movzbl	(%r15), %edx
000000010000e6d5	movzbl	0x3(%r15), %eax
000000010000e6da	movb	%dl, -0x35(%rbp)
000000010000e6dd	movb	%al, -0x32(%rbp)
000000010000e6e0	movw	%cx, -0x34(%rbp)
000000010000e6e4	movl	-0x35(%rbp), %edx
000000010000e6e7	movl	%edx, %ecx
000000010000e6e9	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e6ef	movl	%edx, %esi
000000010000e6f1	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e6f7	movl	$0xc, %edi
000000010000e6fc	jmp	0x10000e626
000000010000e701	movl	$0x0, -0x38(%rbp)
000000010000e708	movb	$0x0, -0x32(%rbp)
000000010000e70c	movw	$0x0, -0x34(%rbp)
000000010000e712	movl	-0x35(%rbp), %ecx
000000010000e715	movl	%ecx, 0xc(%rbx)
000000010000e718	movl	$0x0, 0x9(%rbx)
000000010000e71f	movb	$0x13, 0x8(%rbx)
000000010000e723	jmp	0x10000f0ec
000000010000e728	cmpq	$0x4, %r13
000000010000e72c	jb	0x10000ea95
000000010000e732	addq	$-0x4, %r13
000000010000e736	leaq	0x4(%r15), %rcx
000000010000e73a	movq	%rcx, (%r14)
000000010000e73d	movq	%r13, 0x8(%r14)
000000010000e741	movzwl	0x1(%r15), %ecx
000000010000e746	movzbl	(%r15), %edx
000000010000e74a	movzbl	0x3(%r15), %eax
000000010000e74f	movb	%dl, -0x35(%rbp)
000000010000e752	movb	%al, -0x32(%rbp)
000000010000e755	movw	%cx, -0x34(%rbp)
000000010000e759	movl	-0x35(%rbp), %eax
000000010000e75c	movb	$0x4b, %cl
000000010000e75e	movq	%rax, -0x41(%rbp)
000000010000e762	jmp	0x10000eab9
000000010000e767	movb	$0x13, 0x8(%rbx)
000000010000e76b	movb	$0x0, 0xf(%rbx)
000000010000e76f	movw	$0x0, 0xd(%rbx)
000000010000e775	movl	$0x0, 0x9(%rbx)
000000010000e77c	jmp	0x10000f0ec
000000010000e781	movb	$0x13, %cl
000000010000e783	xorl	%r8d, %r8d
000000010000e786	jmp	0x10000f0d9
000000010000e78b	movb	$0xc, 0x8(%rbx)
000000010000e78f	jmp	0x10000f0f0
000000010000e794	movq	%r15, %rdx
000000010000e797	movl	$0x13, %eax
000000010000e79c	jmp	0x10000eb71
000000010000e7a1	movb	$0x0, -0x32(%rbp)
000000010000e7a5	movw	$0x0, -0x34(%rbp)
000000010000e7ab	movl	$0x0, -0x38(%rbp)
000000010000e7b2	movq	%r15, -0x31(%rbp)
000000010000e7b6	movq	-0x38(%rbp), %rax
000000010000e7ba	movl	-0x30(%rbp), %ecx
000000010000e7bd	movl	-0x2d(%rbp), %edx
000000010000e7c0	movl	%ecx, -0x40(%rbp)
000000010000e7c3	movl	%edx, -0x3d(%rbp)
000000010000e7c6	movq	%rax, -0x48(%rbp)
000000010000e7ca	movb	$0x13, %cl
000000010000e7cc	jmp	0x10000eab9
000000010000e7d1	cmpq	$0x4, %r13
000000010000e7d5	jb	0x10000ee0b
000000010000e7db	addq	$-0x4, %r13
000000010000e7df	leaq	0x4(%r15), %rcx
000000010000e7e3	movq	%rcx, (%r14)
000000010000e7e6	movq	%r13, 0x8(%r14)
000000010000e7ea	movzwl	0x1(%r15), %ecx
000000010000e7ef	movzbl	(%r15), %edx
000000010000e7f3	movzbl	0x3(%r15), %eax
000000010000e7f8	movb	%dl, -0x35(%rbp)
000000010000e7fb	movb	%al, -0x32(%rbp)
000000010000e7fe	movw	%cx, -0x34(%rbp)
000000010000e802	movl	-0x35(%rbp), %eax
000000010000e805	movb	$0x4b, %cl
000000010000e807	movq	%rax, -0x41(%rbp)
000000010000e80b	jmp	0x10000ee2f
000000010000e810	movw	$0x0, -0x38(%rbp)
000000010000e816	movl	$0x0, -0x36(%rbp)
000000010000e81d	movzwl	-0x34(%rbp), %ecx
000000010000e821	movl	-0x38(%rbp), %edx
000000010000e824	shlq	$0x8, %rdx
000000010000e828	shlq	$0x28, %rcx
000000010000e82c	leaq	0x13(%rcx,%rdx), %rcx
000000010000e831	movq	%rcx, 0x8(%rbx)
000000010000e835	jmp	0x10000f0ec
000000010000e83a	movl	$0x13, %ecx
000000010000e83f	movq	%rcx, 0x8(%rbx)
000000010000e843	jmp	0x10000f0ec
000000010000e848	movb	$0x13, 0x8(%rbx)
000000010000e84c	movl	$0x0, 0x9(%rbx)
000000010000e853	jmp	0x10000f0e5
000000010000e858	cmpq	$0x4, %r13
000000010000e85c	jb	0x10000ee63
000000010000e862	addq	$-0x4, %r13
000000010000e866	leaq	0x4(%r15), %rcx
000000010000e86a	movq	%rcx, (%r14)
000000010000e86d	movq	%r13, 0x8(%r14)
000000010000e871	movzwl	0x1(%r15), %ecx
000000010000e876	movzbl	(%r15), %edx
000000010000e87a	movzbl	0x3(%r15), %eax
000000010000e87f	movb	%dl, -0x35(%rbp)
000000010000e882	movb	%al, -0x32(%rbp)
000000010000e885	movw	%cx, -0x34(%rbp)
000000010000e889	movl	-0x35(%rbp), %eax
000000010000e88c	movb	$0x4b, %cl
000000010000e88e	movq	%rax, -0x41(%rbp)
000000010000e892	jmp	0x10000ee87
000000010000e897	movzbl	%al, %edx
000000010000e89a	leaq	-0x38(%rbp), %rdi
000000010000e89e	movq	%r14, %rsi
000000010000e8a1	callq	__ZN5gimli4read6reader6Reader11read_offset17hca393a35f8c2cc9fE ## gimli::read::reader::Reader::read_offset::hca393a35f8c2cc9f
000000010000e8a6	movzbl	-0x38(%rbp), %eax
000000010000e8aa	cmpb	$0x4b, %al
000000010000e8ac	jne	0x10000e8d9
000000010000e8ae	movq	-0x30(%rbp), %rdx
000000010000e8b2	movl	%edx, %ecx
000000010000e8b4	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e8ba	movl	%edx, %esi
000000010000e8bc	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e8c2	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000e8cc	andq	%rdx, %r8
000000010000e8cf	movl	$0xe, %edi
000000010000e8d4	jmp	0x10000e629
000000010000e8d9	movl	-0x37(%rbp), %ecx
000000010000e8dc	movl	-0x34(%rbp), %edx
000000010000e8df	movl	%edx, 0xc(%rbx)
000000010000e8e2	movl	%ecx, 0x9(%rbx)
000000010000e8e5	movq	-0x30(%rbp), %rcx
000000010000e8e9	movb	%al, 0x8(%rbx)
000000010000e8ec	movq	%rcx, 0x10(%rbx)
000000010000e8f0	jmp	0x10000f0f0
000000010000e8f5	movb	$0x0, -0x32(%rbp)
000000010000e8f9	movw	$0x0, -0x34(%rbp)
000000010000e8ff	movl	$0x0, -0x38(%rbp)
000000010000e906	movq	%r15, -0x31(%rbp)
000000010000e90a	movq	-0x38(%rbp), %rax
000000010000e90e	movq	%rax, %xmm0
000000010000e913	movl	-0x30(%rbp), %ecx
000000010000e916	movzwl	-0x2c(%rbp), %edx
000000010000e91a	movzbl	-0x2a(%rbp), %esi
000000010000e91e	movl	%eax, 0x9(%rbx)
000000010000e921	shrq	$0x20, %rax
000000010000e925	movw	%ax, 0xd(%rbx)
000000010000e929	movdqa	%xmm0, -0xa0(%rbp)
000000010000e931	movzwl	-0x9a(%rbp), %eax
000000010000e938	jmp	0x10000f146
000000010000e93d	cmpq	$0x4, %r13
000000010000e941	jb	0x10000eebb
000000010000e947	addq	$-0x4, %r13
000000010000e94b	leaq	0x4(%r15), %rcx
000000010000e94f	movq	%rcx, (%r14)
000000010000e952	movq	%r13, 0x8(%r14)
000000010000e956	movzwl	0x1(%r15), %ecx
000000010000e95b	movzbl	(%r15), %edx
000000010000e95f	movzbl	0x3(%r15), %eax
000000010000e964	movb	%dl, -0x35(%rbp)
000000010000e967	movb	%al, -0x32(%rbp)
000000010000e96a	movw	%cx, -0x34(%rbp)
000000010000e96e	movl	-0x35(%rbp), %eax
000000010000e971	movb	$0x4b, %cl
000000010000e973	movq	%rax, -0x41(%rbp)
000000010000e977	jmp	0x10000eedf
000000010000e97c	addq	$-0x10, %r13
000000010000e980	leaq	0x10(%r15), %rcx
000000010000e984	movq	%rcx, (%r14)
000000010000e987	movq	%r13, 0x8(%r14)
000000010000e98b	movl	%r15d, %ecx
000000010000e98e	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000e994	movl	%r15d, %esi
000000010000e997	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000e99d	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000e9a7	andq	%r15, %r8
000000010000e9aa	movl	$0x1, %edi
000000010000e9af	movl	$0x10, %r9d
000000010000e9b5	movl	%r15d, %edx
000000010000e9b8	jmp	0x10000e629
000000010000e9bd	cmpq	$0x4, %r13
000000010000e9c1	jb	0x10000ef0f
000000010000e9c7	addq	$-0x4, %r13
000000010000e9cb	leaq	0x4(%r15), %rcx
000000010000e9cf	movq	%rcx, (%r14)
000000010000e9d2	movq	%r13, 0x8(%r14)
000000010000e9d6	movzwl	0x1(%r15), %ecx
000000010000e9db	movzbl	(%r15), %edx
000000010000e9df	movzbl	0x3(%r15), %eax
000000010000e9e4	movb	%dl, -0x35(%rbp)
000000010000e9e7	movb	%al, -0x32(%rbp)
000000010000e9ea	movw	%cx, -0x34(%rbp)
000000010000e9ee	movl	-0x35(%rbp), %eax
000000010000e9f1	movb	$0x4b, %cl
000000010000e9f3	movq	%rax, -0x41(%rbp)
000000010000e9f7	jmp	0x10000ef33
000000010000e9fc	movb	$0x0, -0x32(%rbp)
000000010000ea00	movw	$0x0, -0x34(%rbp)
000000010000ea06	movl	$0x0, -0x38(%rbp)
000000010000ea0d	movq	%r15, -0x31(%rbp)
000000010000ea11	movq	-0x38(%rbp), %rax
000000010000ea15	movq	%rax, %xmm0
000000010000ea1a	movl	-0x30(%rbp), %ecx
000000010000ea1d	movzwl	-0x2c(%rbp), %edx
000000010000ea21	movzbl	-0x2a(%rbp), %esi
000000010000ea25	movl	%eax, 0x9(%rbx)
000000010000ea28	shrq	$0x20, %rax
000000010000ea2c	movw	%ax, 0xd(%rbx)
000000010000ea30	movdqa	%xmm0, -0xb0(%rbp)
000000010000ea38	movzwl	-0xaa(%rbp), %eax
000000010000ea3f	jmp	0x10000f146
000000010000ea44	movb	$0x46, 0x8(%rbx)
000000010000ea48	jmp	0x10000f0f0
000000010000ea4d	movb	$0x0, -0x32(%rbp)
000000010000ea51	movw	$0x0, -0x34(%rbp)
000000010000ea57	movl	$0x0, -0x38(%rbp)
000000010000ea5e	movq	%r15, -0x31(%rbp)
000000010000ea62	movq	-0x38(%rbp), %rax
000000010000ea66	movq	%rax, %xmm0
000000010000ea6b	movl	-0x30(%rbp), %ecx
000000010000ea6e	movzwl	-0x2c(%rbp), %edx
000000010000ea72	movzbl	-0x2a(%rbp), %esi
000000010000ea76	movl	%eax, 0x9(%rbx)
000000010000ea79	shrq	$0x20, %rax
000000010000ea7d	movw	%ax, 0xd(%rbx)
000000010000ea81	movdqa	%xmm0, -0xc0(%rbp)
000000010000ea89	movzwl	-0xba(%rbp), %eax
000000010000ea90	jmp	0x10000f146
000000010000ea95	movl	$0x0, -0x38(%rbp)
000000010000ea9c	movb	$0x0, -0x32(%rbp)
000000010000eaa0	movw	$0x0, -0x34(%rbp)
000000010000eaa6	movl	-0x35(%rbp), %ecx
000000010000eaa9	movl	%ecx, -0x45(%rbp)
000000010000eaac	movl	$0x0, -0x48(%rbp)
000000010000eab3	movb	$0x13, %cl
000000010000eab5	movq	%r15, -0x41(%rbp)
000000010000eab9	cmpb	$0x4b, %cl
000000010000eabc	jne	0x10000ef63
000000010000eac2	movq	-0x41(%rbp), %rdx
000000010000eac6	movl	%edx, %ecx
000000010000eac8	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000eace	movl	%edx, %esi
000000010000ead0	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000ead6	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000eae0	andq	%rdx, %r8
000000010000eae3	movl	$0x1b, %edi
000000010000eae8	jmp	0x10000e629
000000010000eaed	movb	$0x13, %cl
000000010000eaef	xorl	%r8d, %r8d
000000010000eaf2	movq	%r11, %r15
000000010000eaf5	jmp	0x10000f0d9
000000010000eafa	movb	$0x13, %cl
000000010000eafc	movb	%cl, 0x8(%rbx)
000000010000eaff	movb	$0x0, 0x9(%rbx)
000000010000eb03	movw	$0x0, 0xe(%rbx)
000000010000eb09	movl	$0x0, 0xa(%rbx)
000000010000eb10	jmp	0x10000f0ec
000000010000eb15	movq	$-0x1, %rax
000000010000eb1c	shlq	%cl, %rax
000000010000eb1f	xorl	%esi, %esi
000000010000eb21	testb	$0x40, %r8b
000000010000eb25	cmoveq	%rsi, %rax
000000010000eb29	cmpl	$0x40, %ecx
000000010000eb2c	cmovgeq	%rsi, %rax
000000010000eb30	orq	%rax, %rdx
000000010000eb33	movl	%edx, %ecx
000000010000eb35	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000eb3b	movl	%edx, %esi
000000010000eb3d	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000eb43	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000eb4d	andq	%rdx, %r8
000000010000eb50	movl	$0x6, %edi
000000010000eb55	jmp	0x10000e629
000000010000eb5a	leaq	0x1(%r15,%rsi), %rax
000000010000eb5f	movq	%rax, (%r14)
000000010000eb62	notq	%rsi
000000010000eb65	addq	%r13, %rsi
000000010000eb68	movq	%rsi, 0x8(%r14)
000000010000eb6c	movl	$0x6, %eax
000000010000eb71	movq	%rax, 0x8(%rbx)
000000010000eb75	movq	%rdx, 0x10(%rbx)
000000010000eb79	jmp	0x10000f0f0
000000010000eb7e	movq	%r15, (%r14)
000000010000eb81	negq	%r8
000000010000eb84	movq	%r8, 0x8(%r14)
000000010000eb88	movl	%edx, %ecx
000000010000eb8a	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000eb90	movl	%edx, %esi
000000010000eb92	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000eb98	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000eba2	andq	%rdx, %r8
000000010000eba5	movl	$0xc, %edi
000000010000ebaa	jmp	0x10000e629
000000010000ebaf	movq	%r15, (%r14)
000000010000ebb2	negq	%r8
000000010000ebb5	movq	%r8, 0x8(%r14)
000000010000ebb9	movl	%edx, %ecx
000000010000ebbb	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000ebc1	movl	%edx, %esi
000000010000ebc3	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000ebc9	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ebd3	andq	%rdx, %r8
000000010000ebd6	movl	$0x1d, %edi
000000010000ebdb	jmp	0x10000e629
000000010000ebe0	movw	$0x13, -0x38(%rbp)
000000010000ebe6	movw	$0x0, -0x32(%rbp)
000000010000ebec	movl	$0x0, -0x36(%rbp)
000000010000ebf3	movq	-0x38(%rbp), %rcx
000000010000ebf7	movq	%rcx, 0x8(%rbx)
000000010000ebfb	jmp	0x10000f0ec
000000010000ec00	movq	%r9, %rcx
000000010000ec03	notq	%rcx
000000010000ec06	addq	%r13, %rcx
000000010000ec09	leaq	0x1(%r15,%r9), %rdx
000000010000ec0e	movq	%rdx, (%r14)
000000010000ec11	movq	%rcx, 0x8(%r14)
000000010000ec15	movl	%r15d, %ecx
000000010000ec18	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000ec1e	movl	%r15d, %esi
000000010000ec21	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000ec27	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ec31	andq	%r15, %r8
000000010000ec34	movl	$0x1f, %edi
000000010000ec39	movl	%r15d, %edx
000000010000ec3c	jmp	0x10000e629
000000010000ec41	movb	$0x0, -0x32(%rbp)
000000010000ec45	movw	$0x0, -0x34(%rbp)
000000010000ec4b	movl	$0x0, -0x38(%rbp)
000000010000ec52	movq	%r15, -0x31(%rbp)
000000010000ec56	movq	-0x38(%rbp), %rax
000000010000ec5a	movl	-0x30(%rbp), %ecx
000000010000ec5d	movl	-0x2d(%rbp), %edx
000000010000ec60	movl	%ecx, -0x40(%rbp)
000000010000ec63	movl	%edx, -0x3d(%rbp)
000000010000ec66	movq	%rax, -0x48(%rbp)
000000010000ec6a	movb	$0x13, %cl
000000010000ec6c	jmp	0x10000ee2f
000000010000ec71	movq	(%r14), %r15
000000010000ec74	movq	0x8(%r14), %r13
000000010000ec78	cmpq	$0x3, %r13
000000010000ec7c	jbe	0x10000ecb4
000000010000ec7e	addq	$-0x4, %r13
000000010000ec82	leaq	0x4(%r15), %rcx
000000010000ec86	movq	%rcx, (%r14)
000000010000ec89	movq	%r13, 0x8(%r14)
000000010000ec8d	movzwl	0x1(%r15), %ecx
000000010000ec92	movzbl	(%r15), %edx
000000010000ec96	movzbl	0x3(%r15), %eax
000000010000ec9b	movb	%dl, -0x35(%rbp)
000000010000ec9e	movb	%al, -0x32(%rbp)
000000010000eca1	movw	%cx, -0x34(%rbp)
000000010000eca5	movl	-0x35(%rbp), %ecx
000000010000eca8	movl	$0x4, %edi
000000010000ecad	xorl	%r8d, %r8d
000000010000ecb0	movl	%ecx, %edx
000000010000ecb2	jmp	0x10000ed20
000000010000ecb4	movl	$0x0, -0x38(%rbp)
000000010000ecbb	movzbl	-0x36(%rbp), %ecx
000000010000ecbf	movb	%cl, 0xb(%rbx)
000000010000ecc2	movw	$0x0, 0x9(%rbx)
000000010000ecc8	movb	$0x13, 0x8(%rbx)
000000010000eccc	movb	$0x0, 0xc(%rbx)
000000010000ecd0	movb	$0x0, 0xf(%rbx)
000000010000ecd4	movw	$0x0, 0xd(%rbx)
000000010000ecda	jmp	0x10000f0ec
000000010000ecdf	movq	(%r14), %r15
000000010000ece2	movq	0x8(%r14), %r13
000000010000ece6	cmpq	$0x7, %r13
000000010000ecea	jbe	0x10000ed33
000000010000ecec	addq	$-0x8, %r13
000000010000ecf0	leaq	0x8(%r15), %rcx
000000010000ecf4	movq	%rcx, (%r14)
000000010000ecf7	movq	%r13, 0x8(%r14)
000000010000ecfb	movq	(%r15), %xmm0                   ## xmm0 = mem[0],zero
000000010000ed00	movl	$0x5, %edi
000000010000ed05	movq	%xmm0, %rcx
000000010000ed0a	movdqa	%xmm0, -0x70(%rbp)
000000010000ed0f	movzbl	-0x70(%rbp), %edx
000000010000ed13	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ed1d	andq	%rcx, %r8
000000010000ed20	movl	%ecx, %esi
000000010000ed22	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000ed28	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000ed2e	jmp	0x10000e629
000000010000ed33	movb	$0x0, -0x32(%rbp)
000000010000ed37	movw	$0x0, -0x34(%rbp)
000000010000ed3d	movl	$0x0, -0x38(%rbp)
000000010000ed44	movq	%r15, -0x31(%rbp)
000000010000ed48	movq	-0x38(%rbp), %rax
000000010000ed4c	movq	%rax, %xmm0
000000010000ed51	movl	-0x30(%rbp), %ecx
000000010000ed54	movzwl	-0x2c(%rbp), %edx
000000010000ed58	movzbl	-0x2a(%rbp), %esi
000000010000ed5c	movl	%eax, 0x9(%rbx)
000000010000ed5f	shrq	$0x20, %rax
000000010000ed63	movw	%ax, 0xd(%rbx)
000000010000ed67	movdqa	%xmm0, -0x90(%rbp)
000000010000ed6f	movzwl	-0x8a(%rbp), %eax
000000010000ed76	jmp	0x10000f146
000000010000ed7b	movb	$0x0, -0x32(%rbp)
000000010000ed7f	movw	$0x0, -0x34(%rbp)
000000010000ed85	movl	$0x0, -0x38(%rbp)
000000010000ed8c	movq	%r15, -0x31(%rbp)
000000010000ed90	movq	-0x38(%rbp), %rax
000000010000ed94	movl	-0x30(%rbp), %ecx
000000010000ed97	movl	-0x2d(%rbp), %edx
000000010000ed9a	movl	%ecx, -0x40(%rbp)
000000010000ed9d	movl	%edx, -0x3d(%rbp)
000000010000eda0	movq	%rax, -0x48(%rbp)
000000010000eda4	movb	$0x13, %cl
000000010000eda6	jmp	0x10000ee87
000000010000edab	movb	$0x0, -0x32(%rbp)
000000010000edaf	movw	$0x0, -0x34(%rbp)
000000010000edb5	movl	$0x0, -0x38(%rbp)
000000010000edbc	movq	%r15, -0x31(%rbp)
000000010000edc0	movq	-0x38(%rbp), %rax
000000010000edc4	movl	-0x30(%rbp), %ecx
000000010000edc7	movl	-0x2d(%rbp), %edx
000000010000edca	movl	%ecx, -0x40(%rbp)
000000010000edcd	movl	%edx, -0x3d(%rbp)
000000010000edd0	movq	%rax, -0x48(%rbp)
000000010000edd4	movb	$0x13, %cl
000000010000edd6	jmp	0x10000eedf
000000010000eddb	movb	$0x0, -0x32(%rbp)
000000010000eddf	movw	$0x0, -0x34(%rbp)
000000010000ede5	movl	$0x0, -0x38(%rbp)
000000010000edec	movq	%r15, -0x31(%rbp)
000000010000edf0	movq	-0x38(%rbp), %rax
000000010000edf4	movl	-0x30(%rbp), %ecx
000000010000edf7	movl	-0x2d(%rbp), %edx
000000010000edfa	movl	%ecx, -0x40(%rbp)
000000010000edfd	movl	%edx, -0x3d(%rbp)
000000010000ee00	movq	%rax, -0x48(%rbp)
000000010000ee04	movb	$0x13, %cl
000000010000ee06	jmp	0x10000ef33
000000010000ee0b	movl	$0x0, -0x38(%rbp)
000000010000ee12	movb	$0x0, -0x32(%rbp)
000000010000ee16	movw	$0x0, -0x34(%rbp)
000000010000ee1c	movl	-0x35(%rbp), %ecx
000000010000ee1f	movl	%ecx, -0x45(%rbp)
000000010000ee22	movl	$0x0, -0x48(%rbp)
000000010000ee29	movb	$0x13, %cl
000000010000ee2b	movq	%r15, -0x41(%rbp)
000000010000ee2f	cmpb	$0x4b, %cl
000000010000ee32	jne	0x10000ef63
000000010000ee38	movq	-0x41(%rbp), %rdx
000000010000ee3c	movl	%edx, %ecx
000000010000ee3e	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000ee44	movl	%edx, %esi
000000010000ee46	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000ee4c	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ee56	andq	%rdx, %r8
000000010000ee59	movl	$0xf, %edi
000000010000ee5e	jmp	0x10000e629
000000010000ee63	movl	$0x0, -0x38(%rbp)
000000010000ee6a	movb	$0x0, -0x32(%rbp)
000000010000ee6e	movw	$0x0, -0x34(%rbp)
000000010000ee74	movl	-0x35(%rbp), %ecx
000000010000ee77	movl	%ecx, -0x45(%rbp)
000000010000ee7a	movl	$0x0, -0x48(%rbp)
000000010000ee81	movb	$0x13, %cl
000000010000ee83	movq	%r15, -0x41(%rbp)
000000010000ee87	cmpb	$0x4b, %cl
000000010000ee8a	jne	0x10000ef63
000000010000ee90	movq	-0x41(%rbp), %rdx
000000010000ee94	movl	%edx, %ecx
000000010000ee96	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000ee9c	movl	%edx, %esi
000000010000ee9e	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000eea4	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000eeae	andq	%rdx, %r8
000000010000eeb1	movl	$0x1a, %edi
000000010000eeb6	jmp	0x10000e629
000000010000eebb	movl	$0x0, -0x38(%rbp)
000000010000eec2	movb	$0x0, -0x32(%rbp)
000000010000eec6	movw	$0x0, -0x34(%rbp)
000000010000eecc	movl	-0x35(%rbp), %ecx
000000010000eecf	movl	%ecx, -0x45(%rbp)
000000010000eed2	movl	$0x0, -0x48(%rbp)
000000010000eed9	movb	$0x13, %cl
000000010000eedb	movq	%r15, -0x41(%rbp)
000000010000eedf	cmpb	$0x4b, %cl
000000010000eee2	jne	0x10000ef63
000000010000eee4	movq	-0x41(%rbp), %rdx
000000010000eee8	movl	%edx, %ecx
000000010000eeea	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000eef0	movl	%edx, %esi
000000010000eef2	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000eef8	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ef02	andq	%rdx, %r8
000000010000ef05	movl	$0xa, %edi
000000010000ef0a	jmp	0x10000e629
000000010000ef0f	movl	$0x0, -0x38(%rbp)
000000010000ef16	movb	$0x0, -0x32(%rbp)
000000010000ef1a	movw	$0x0, -0x34(%rbp)
000000010000ef20	movl	-0x35(%rbp), %ecx
000000010000ef23	movl	%ecx, -0x45(%rbp)
000000010000ef26	movl	$0x0, -0x48(%rbp)
000000010000ef2d	movb	$0x13, %cl
000000010000ef2f	movq	%r15, -0x41(%rbp)
000000010000ef33	cmpb	$0x4b, %cl
000000010000ef36	jne	0x10000ef63
000000010000ef38	movq	-0x41(%rbp), %rdx
000000010000ef3c	movl	%edx, %ecx
000000010000ef3e	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000ef44	movl	%edx, %esi
000000010000ef46	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000ef4c	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000ef56	andq	%rdx, %r8
000000010000ef59	movl	$0x1e, %edi
000000010000ef5e	jmp	0x10000e629
000000010000ef63	movl	-0x48(%rbp), %eax
000000010000ef66	movl	-0x45(%rbp), %edx
000000010000ef69	movl	%edx, 0xc(%rbx)
000000010000ef6c	movl	%eax, 0x9(%rbx)
000000010000ef6f	movq	-0x41(%rbp), %rax
000000010000ef73	movb	%cl, 0x8(%rbx)
000000010000ef76	movq	%rax, 0x10(%rbx)
000000010000ef7a	jmp	0x10000f0f0
000000010000ef7f	leaq	0x1(%r15,%rsi), %rdx
000000010000ef84	movq	%rdx, (%r14)
000000010000ef87	movq	%rsi, %rcx
000000010000ef8a	notq	%rcx
000000010000ef8d	leaq	(%rcx,%r13), %r8
000000010000ef91	movq	%r8, 0x8(%r14)
000000010000ef95	cmpq	%r9, %r8
000000010000ef98	jb	0x10000e797
000000010000ef9e	subq	%r9, %r13
000000010000efa1	addq	%r13, %rcx
000000010000efa4	addq	%r9, %rsi
000000010000efa7	leaq	0x1(%r15,%rsi), %rax
000000010000efac	movq	%rax, (%r14)
000000010000efaf	movq	%rcx, 0x8(%r14)
000000010000efb3	jmp	0x10000ddd9
000000010000efb8	movq	%r15, (%r14)
000000010000efbb	negq	%r8
000000010000efbe	movq	%r8, 0x8(%r14)
000000010000efc2	movl	%edx, %ecx
000000010000efc4	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000efca	movl	%edx, %esi
000000010000efcc	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000efd2	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000efdc	andq	%rdx, %r8
000000010000efdf	movl	$0xd, %edi
000000010000efe4	jmp	0x10000e629
000000010000efe9	movq	%r15, (%r14)
000000010000efec	negq	%r8
000000010000efef	movq	%r8, 0x8(%r14)
000000010000eff3	movl	%edx, %ecx
000000010000eff5	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000effb	movl	%edx, %esi
000000010000effd	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000f003	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000f00d	andq	%rdx, %r8
000000010000f010	movl	$0x18, %edi
000000010000f015	jmp	0x10000e629
000000010000f01a	movq	%r15, (%r14)
000000010000f01d	negq	%r8
000000010000f020	movq	%r8, 0x8(%r14)
000000010000f024	movl	%edx, %ecx
000000010000f026	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000f02c	movl	%edx, %esi
000000010000f02e	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000f034	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000f03e	andq	%rdx, %r8
000000010000f041	movl	$0x7, %edi
000000010000f046	jmp	0x10000e629
000000010000f04b	leaq	0x1(%r15,%rsi), %rdx
000000010000f050	movq	%rdx, (%r14)
000000010000f053	movq	%rsi, %rcx
000000010000f056	notq	%rcx
000000010000f059	leaq	(%rcx,%r13), %r8
000000010000f05d	movq	%r8, 0x8(%r14)
000000010000f061	cmpq	%r9, %r8
000000010000f064	jb	0x10000e797
000000010000f06a	subq	%r9, %r13
000000010000f06d	addq	%r13, %rcx
000000010000f070	addq	%r9, %rsi
000000010000f073	leaq	0x1(%r15,%rsi), %rax
000000010000f078	movq	%rax, (%r14)
000000010000f07b	movq	%rcx, 0x8(%r14)
000000010000f07f	movl	%edx, %ecx
000000010000f081	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000f087	movl	%edx, %esi
000000010000f089	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000f08f	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000f099	andq	%rdx, %r8
000000010000f09c	movl	$0x8, %edi
000000010000f0a1	jmp	0x10000e629
000000010000f0a6	movq	%r15, (%r14)
000000010000f0a9	negq	%r8
000000010000f0ac	movq	%r8, 0x8(%r14)
000000010000f0b0	movl	%edx, %ecx
000000010000f0b2	andl	$0xff00, %ecx                   ## imm = 0xFF00
000000010000f0b8	movl	%edx, %esi
000000010000f0ba	andl	$0xffff0000, %esi               ## imm = 0xFFFF0000
000000010000f0c0	movabsq	$-0x100000000, %r8              ## imm = 0xFFFFFFFF00000000
000000010000f0ca	andq	%rdx, %r8
000000010000f0cd	movl	$0x13, %edi
000000010000f0d2	jmp	0x10000e629
000000010000f0d7	movb	$0x6, %cl
000000010000f0d9	movb	%cl, 0x8(%rbx)
000000010000f0dc	movb	$0x0, 0x9(%rbx)
000000010000f0e0	movw	%r8w, 0xa(%rbx)
000000010000f0e5	movl	$0x0, 0xc(%rbx)
000000010000f0ec	movq	%r15, 0x10(%rbx)
000000010000f0f0	movq	$0x2e, (%rbx)
000000010000f0f7	addq	$0x98, %rsp
000000010000f0fe	popq	%rbx
000000010000f0ff	popq	%r12
000000010000f101	popq	%r13
000000010000f103	popq	%r14
000000010000f105	popq	%r15
000000010000f107	popq	%rbp
000000010000f108	retq
000000010000f109	movb	$0x0, -0x32(%rbp)
000000010000f10d	movw	$0x0, -0x34(%rbp)
000000010000f113	movl	$0x0, -0x38(%rbp)
000000010000f11a	movq	%rax, -0x31(%rbp)
000000010000f11e	movq	-0x38(%rbp), %rax
000000010000f122	movq	%rax, %xmm0
000000010000f127	movl	-0x30(%rbp), %ecx
000000010000f12a	movzwl	-0x2c(%rbp), %edx
000000010000f12e	movzbl	-0x2a(%rbp), %esi
000000010000f132	movl	%eax, 0x9(%rbx)
000000010000f135	shrq	$0x20, %rax
000000010000f139	movw	%ax, 0xd(%rbx)
000000010000f13d	movdqa	%xmm0, -0x80(%rbp)
000000010000f142	movzwl	-0x7a(%rbp), %eax
000000010000f146	movw	%ax, 0xf(%rbx)
000000010000f14a	movb	$0x13, 0x8(%rbx)
000000010000f14e	movb	%sil, 0x17(%rbx)
000000010000f152	movw	%dx, 0x15(%rbx)
000000010000f156	movl	%ecx, 0x11(%rbx)
000000010000f159	jmp	0x10000f0f0
000000010000f15b	nop
000000010000f15c	addb	$-0x14, %al
000000010000f15e	.byte 0xff #bad opcode
000000010000f15f	ljmpl	*(%rdi)
000000010000f161	idivb	%bh
000000010000f163	incl	-0x14(%rdi)
000000010000f166	.byte 0xff #bad opcode
000000010000f167	jmpq	*-0x13160001(%rsp,%rbp,8)
000000010000f16e	.byte 0xff #bad opcode
000000010000f16f	lcalll	*(%rax)
000000010000f171	inl	%dx, %eax
000000010000f172	.byte 0xff #bad opcode
000000010000f173	.byte 0xff #bad opcode
000000010000f174	js	0x10000f163
000000010000f176	.byte 0xff #bad opcode
000000010000f177	decl	%esp
000000010000f179	inl	%dx, %eax
000000010000f17a	.byte 0xff #bad opcode
000000010000f17b	.byte 0xff #bad opcode
000000010000f17c	cld
000000010000f17d	inl	%dx, %eax
000000010000f17e	.byte 0xff #bad opcode
000000010000f17f	decl	-0x12(%rsi)
000000010000f182	.byte 0xff #bad opcode
000000010000f183	incl	-0x55000012(%rbx)
000000010000f189	outb	%al, %dx
000000010000f18a	.byte 0xff #bad opcode
000000010000f18b	callq	*%rsp
000000010000f18d	outb	%al, %dx
000000010000f18e	.byte 0xff #bad opcode
000000010000f18f	pushq	(%rbx)
000000010000f191	outl	%eax, %dx
000000010000f192	.byte 0xff #bad opcode
000000010000f193	jmpq	*-0x11(%rdx)
000000010000f196	.byte 0xff #bad opcode
000000010000f197	incl	%ecx
000000010000f199	outl	%eax, %dx
000000010000f19a	.byte 0xff #bad opcode
000000010000f19b	.byte 0xff #bad opcode
000000010000f19c	fucompi	%st(7), %st
000000010000f19e	.byte 0xff #bad opcode
000000010000f19f	incl	(%rsi)
000000010000f1a1	lock
000000010000f1a2	.byte 0xff #bad opcode
000000010000f1a3	pushq	-0x7c000010(%rip)
000000010000f1a9	lock
000000010000f1aa	.byte 0xff #bad opcode
000000010000f1ab	jmpq	*-0x15f80001(%rax,%rsi,8)
000000010000f1b2	.byte 0xff #bad opcode
000000010000f1b3	incl	(%rbx)
000000010000f1b5	.byte 0xf1 #bad opcode
000000010000f1b6	.byte 0xff #bad opcode
000000010000f1b7	pushq	(%rdx)
000000010000f1b9	.byte 0xf1 #bad opcode
000000010000f1ba	.byte 0xff #bad opcode
000000010000f1bb	decl	0x46fffff1(%rdi)
000000010000f1c1	jmp	0x10000f1c2
000000010000f1c3	.byte 0xff #bad opcode
000000010000f1c4	fucomp	%st(2)
000000010000f1c6	.byte 0xff #bad opcode
000000010000f1c7	lcalll	*-0x5900000f(%rbp)
000000010000f1cd	jmp	0x10000f1ce
000000010000f1cf	.byte 0xff #bad opcode
000000010000f1d0	jmp	0x10000f1c3
000000010000f1d2	.byte 0xff #bad opcode
000000010000f1d3	incl	(%rdx)
000000010000f1d5	.byte 0xf2 #bad opcode
000000010000f1d6	.byte 0xff #bad opcode
000000010000f1d7	pushq	(%rcx)
000000010000f1d9	.byte 0xf2 #bad opcode
000000010000f1da	.byte 0xff #bad opcode
000000010000f1db	pushq	-0x1(%rdx,%rsi,8)
000000010000f1df	decl	-0x1800000e(%rbx)
000000010000f1e5	.byte 0xf2 #bad opcode
000000010000f1e6	.byte 0xff #bad opcode
000000010000f1e7	pushq	-0xd(%rsi)
000000010000f1ea	.byte 0xff #bad opcode
000000010000f1eb	callq	*-0x4100000d(%rdi)
000000010000f1f1	.byte 0xf3 #bad opcode
000000010000f1f2	.byte 0xff #bad opcode
000000010000f1f3	.byte 0xff #bad opcode
000000010000f1f4	inl	%dx, %eax
000000010000f1f5	.byte 0xf3 #bad opcode
000000010000f1f6	.byte 0xff #bad opcode
000000010000f1f7	ljmpl	*(%rsp,%rsi,8)
000000010000f1fa	.byte 0xff #bad opcode
000000010000f1fb	pushq	-0xc(%rdi)
000000010000f1fe	.byte 0xff #bad opcode
000000010000f1ff	jmpq	*0x1cfffff4(%rdx)
000000010000f205	cmc
000000010000f206	.byte 0xff #bad opcode
000000010000f207	lcalll	*-0xb(%rbx)
000000010000f20a	.byte 0xff #bad opcode
000000010000f20b	ljmpl	*-0x69000016(%rip)
000000010000f211	.byte 0xea #bad opcode
000000010000f212	.byte 0xff #bad opcode
000000010000f213	.byte 0xff #bad opcode
000000010000f214	jg	0x10000f20b
000000010000f216	.byte 0xff #bad opcode
000000010000f217	.byte 0xff #bad opcode
000000010000f218	jg	0x10000f20f
000000010000f21a	.byte 0xff #bad opcode
000000010000f21b	.byte 0xff #bad opcode
000000010000f21c	jg	0x10000f213
000000010000f21e	.byte 0xff #bad opcode
000000010000f21f	.byte 0xff #bad opcode
000000010000f220	jg	0x10000f217
000000010000f222	.byte 0xff #bad opcode
000000010000f223	.byte 0xff #bad opcode
000000010000f224	jg	0x10000f21b
000000010000f226	.byte 0xff #bad opcode
000000010000f227	.byte 0xff #bad opcode
000000010000f228	jg	0x10000f21f
000000010000f22a	.byte 0xff #bad opcode
000000010000f22b	.byte 0xff #bad opcode
000000010000f22c	jg	0x10000f223
000000010000f22e	.byte 0xff #bad opcode
000000010000f22f	.byte 0xff #bad opcode
000000010000f230	jg	0x10000f227
000000010000f232	.byte 0xff #bad opcode
000000010000f233	.byte 0xff #bad opcode
000000010000f234	jg	0x10000f22b
000000010000f236	.byte 0xff #bad opcode
000000010000f237	.byte 0xff #bad opcode
000000010000f238	jg	0x10000f22f
000000010000f23a	.byte 0xff #bad opcode
000000010000f23b	.byte 0xff #bad opcode
000000010000f23c	jg	0x10000f233
000000010000f23e	.byte 0xff #bad opcode
000000010000f23f	.byte 0xff #bad opcode
000000010000f240	jg	0x10000f237
000000010000f242	.byte 0xff #bad opcode
000000010000f243	.byte 0xff #bad opcode
000000010000f244	jg	0x10000f23b
000000010000f246	.byte 0xff #bad opcode
000000010000f247	.byte 0xff #bad opcode
000000010000f248	jg	0x10000f23f
000000010000f24a	.byte 0xff #bad opcode
000000010000f24b	.byte 0xff #bad opcode
000000010000f24c	jg	0x10000f243
000000010000f24e	.byte 0xff #bad opcode
000000010000f24f	.byte 0xff #bad opcode
000000010000f250	jg	0x10000f247
000000010000f252	.byte 0xff #bad opcode
000000010000f253	.byte 0xff #bad opcode
000000010000f254	jg	0x10000f24b
000000010000f256	.byte 0xff #bad opcode
000000010000f257	.byte 0xff #bad opcode
000000010000f258	jg	0x10000f24f
000000010000f25a	.byte 0xff #bad opcode
000000010000f25b	.byte 0xff #bad opcode
000000010000f25c	jg	0x10000f253
000000010000f25e	.byte 0xff #bad opcode
000000010000f25f	.byte 0xff #bad opcode
000000010000f260	jg	0x10000f257
000000010000f262	.byte 0xff #bad opcode
000000010000f263	.byte 0xff #bad opcode
000000010000f264	jg	0x10000f25b
000000010000f266	.byte 0xff #bad opcode
000000010000f267	.byte 0xff #bad opcode
000000010000f268	jg	0x10000f25f
000000010000f26a	.byte 0xff #bad opcode
000000010000f26b	.byte 0xff #bad opcode
000000010000f26c	jg	0x10000f263
000000010000f26e	.byte 0xff #bad opcode
000000010000f26f	.byte 0xff #bad opcode
000000010000f270	jg	0x10000f267
000000010000f272	.byte 0xff #bad opcode
000000010000f273	.byte 0xff #bad opcode
000000010000f274	jg	0x10000f26b
000000010000f276	.byte 0xff #bad opcode
000000010000f277	.byte 0xff #bad opcode
000000010000f278	jg	0x10000f26f
000000010000f27a	.byte 0xff #bad opcode
000000010000f27b	.byte 0xff #bad opcode
000000010000f27c	jg	0x10000f273
000000010000f27e	.byte 0xff #bad opcode
000000010000f27f	.byte 0xff #bad opcode
000000010000f280	jg	0x10000f277
000000010000f282	.byte 0xff #bad opcode
000000010000f283	.byte 0xff #bad opcode
000000010000f284	jg	0x10000f27b
000000010000f286	.byte 0xff #bad opcode
000000010000f287	jmpq	*-0x9000015(%rip)
000000010000f28d	.byte 0xea #bad opcode
000000010000f28e	.byte 0xff #bad opcode
000000010000f28f	callq	*0x48(%rbp)
000000010000f292	movl	%esp, %ebp
000000010000f294	pushq	%r15
000000010000f296	pushq	%r14
000000010000f298	pushq	%r13
000000010000f29a	pushq	%r12
000000010000f29c	pushq	%rbx
000000010000f29d	testq	%r8, %r8
000000010000f2a0	je	0x10000f743
000000010000f2a6	movq	%rcx, %rax
000000010000f2a9	movl	%edx, %r9d
000000010000f2ac	shlq	$0x4, %r8
000000010000f2b0	addq	%rcx, %r8
000000010000f2b3	movq	(%rsi), %r14
000000010000f2b6	movq	0x8(%rsi), %r12
000000010000f2ba	shrl	$0x8, %edx
000000010000f2bd	movl	%r9d, %ecx
000000010000f2c0	andl	$0xffff0000, %ecx               ## imm = 0xFFFF0000
000000010000f2c6	cmpl	$0x20000, %ecx                  ## imm = 0x20000
000000010000f2cc	movl	%edx, %ecx
000000010000f2ce	cmovel	%r9d, %ecx
000000010000f2d2	movl	%ecx, -0x4c(%rbp)
000000010000f2d5	xorl	%r13d, %r13d
000000010000f2d8	leaq	0x54d(%rip), %r15
000000010000f2df	movl	%ecx, -0x2c(%rbp)
000000010000f2e2	movq	%r14, %r11
000000010000f2e5	movl	%r9d, -0x38(%rbp)
000000010000f2e9	nopl	(%rax)
000000010000f2f0	movzwl	0xa(%rax), %ebx
000000010000f2f4	movl	$0x1, %ecx
000000010000f2f9	leal	-0x1(%rbx), %r10d
000000010000f2fd	cmpl	$0x2b, %r10d
000000010000f301	ja	0x10000f317
000000010000f303	movslq	(%r15,%r10,4), %r10
000000010000f307	addq	%r15, %r10
000000010000f30a	jmpq	*%r10
000000010000f30d	movl	$0x4, %ecx
000000010000f312	jmp	0x10000f710
000000010000f317	leal	-0x1f20(%rbx), %r10d
000000010000f31e	cmpl	$0x2, %r10d
000000010000f322	jae	0x10000f32b
000000010000f324	movl	%edx, %ecx
000000010000f326	jmp	0x10000f710
000000010000f32b	testq	%r13, %r13
000000010000f32e	je	0x10000f343
000000010000f330	subq	%r13, %r12
000000010000f333	jb	0x10000f7fa
000000010000f339	addq	%r13, %r11
000000010000f33c	movq	%r11, (%rsi)
000000010000f33f	movq	%r12, 0x8(%rsi)
000000010000f343	movq	%r11, %r14
000000010000f346	leal	-0x3(%rbx), %r10d
000000010000f34a	cmpl	$0x20, %r10d
000000010000f34e	ja	0x10000f3c2
000000010000f350	leaq	0x585(%rip), %r11
000000010000f357	movslq	(%r11,%r10,4), %r10
000000010000f35b	addq	%r11, %r10
000000010000f35e	jmpq	*%r10
000000010000f361	testq	%r12, %r12
000000010000f364	je	0x10000f77e
000000010000f36a	movl	$0x1, %r11d
000000010000f370	subq	%r12, %r11
000000010000f373	leaq	0x1(%r14), %rbx
000000010000f377	xorl	%r13d, %r13d
000000010000f37a	xorl	%ecx, %ecx
000000010000f37c	nopl	(%rax)
000000010000f380	movzbl	-0x1(%rbx), %r10d
000000010000f385	cmpl	$0x3f, %ecx
000000010000f388	jne	0x10000f394
000000010000f38a	cmpb	$0x2, %r10b
000000010000f38e	jae	0x10000f75e
000000010000f394	movzbl	%r10b, %r9d
000000010000f398	movl	%r9d, %r10d
000000010000f39b	andl	$0x7f, %r10d
000000010000f39f	shlq	%cl, %r10
000000010000f3a2	orq	%r10, %r13
000000010000f3a5	testb	%r9b, %r9b
000000010000f3a8	jns	0x10000f43b
000000010000f3ae	addl	$0x7, %ecx
000000010000f3b1	incq	%r11
000000010000f3b4	incq	%rbx
000000010000f3b7	cmpq	$0x1, %r11
000000010000f3bb	jne	0x10000f380
000000010000f3bd	jmp	0x10000f770
000000010000f3c2	addl	$0xffffe0ff, %ebx               ## imm = 0xFFFFE0FF
000000010000f3c8	cmpl	$0x2, %ebx
000000010000f3cb	jae	0x10000f7b2
000000010000f3d1	movq	%r14, %rcx
000000010000f3d4	nopw	%cs:(%rax,%rax)
000000010000f3de	nop
000000010000f3e0	subq	$0x1, %r12
000000010000f3e4	jb	0x10000f748
000000010000f3ea	leaq	0x1(%rcx), %rbx
000000010000f3ee	movq	%rbx, (%rsi)
000000010000f3f1	movq	%r12, 0x8(%rsi)
000000010000f3f5	incq	%r14
000000010000f3f8	cmpb	$0x0, (%rcx)
000000010000f3fb	movq	%rbx, %rcx
000000010000f3fe	js	0x10000f3e0
000000010000f400	movq	%rbx, %r11
000000010000f403	xorl	%r13d, %r13d
000000010000f406	jmp	0x10000f719
000000010000f40b	testq	%r12, %r12
000000010000f40e	je	0x10000f7b7
000000010000f414	leaq	-0x1(%r12), %r10
000000010000f419	leaq	0x1(%r14), %r11
000000010000f41d	movq	%r11, (%rsi)
000000010000f420	movq	%r10, 0x8(%rsi)
000000010000f424	movzbl	(%r14), %r13d
000000010000f428	movl	%r13d, %ebx
000000010000f42b	andl	$0x7f, %ebx
000000010000f42e	testb	%r13b, %r13b
000000010000f431	js	0x10000f458
000000010000f433	movq	%r10, %r12
000000010000f436	jmp	0x10000f4d1
000000010000f43b	movq	%rbx, (%rsi)
000000010000f43e	negq	%r11
000000010000f441	movq	%r11, 0x8(%rsi)
000000010000f445	movq	%r11, %r12
000000010000f448	movq	%rbx, %r11
000000010000f44b	movq	%r13, -0x58(%rbp)
000000010000f44f	movl	-0x38(%rbp), %r9d
000000010000f453	jmp	0x10000f719
000000010000f458	testq	%r10, %r10
000000010000f45b	je	0x10000f7ff
000000010000f461	leaq	-0x2(%r12), %r10
000000010000f466	leaq	0x2(%r14), %r11
000000010000f46a	movq	%r11, (%rsi)
000000010000f46d	movq	%r10, -0x48(%rbp)
000000010000f471	movq	%r10, 0x8(%rsi)
000000010000f475	movzbl	0x1(%r14), %r10d
000000010000f47a	movl	%r10d, %r13d
000000010000f47d	andl	$0x7f, %r13d
000000010000f481	shll	$0x7, %r13d
000000010000f485	movzwl	%bx, %ebx
000000010000f488	orl	%r13d, %ebx
000000010000f48b	testb	%r10b, %r10b
000000010000f48e	js	0x10000f496
000000010000f490	movq	-0x48(%rbp), %r10
000000010000f494	jmp	0x10000f4d1
000000010000f496	cmpq	$0x0, -0x48(%rbp)
000000010000f49b	je	0x10000f7ff
000000010000f4a1	addq	$-0x3, %r12
000000010000f4a5	leaq	0x3(%r14), %r11
000000010000f4a9	movq	%r11, (%rsi)
000000010000f4ac	movq	%r12, 0x8(%rsi)
000000010000f4b0	movzbl	0x2(%r14), %r10d
000000010000f4b5	cmpw	$0x3, %r10w
000000010000f4ba	ja	0x10000f81c
000000010000f4c0	movzwl	%r10w, %r10d
000000010000f4c4	shll	$0xe, %r10d
000000010000f4c8	movzwl	%bx, %ebx
000000010000f4cb	orl	%r10d, %ebx
000000010000f4ce	movq	%r12, %r10
000000010000f4d1	movq	%r11, %r14
000000010000f4d4	movq	%r10, %r12
000000010000f4d7	movl	%ebx, -0x2c(%rbp)
000000010000f4da	movzwl	%bx, %r10d
000000010000f4de	leal	-0x1(%r10), %r11d
000000010000f4e2	cmpl	$0x2b, %r11d
000000010000f4e6	ja	0x10000f68e
000000010000f4ec	leaq	0x46d(%rip), %rbx
000000010000f4f3	movslq	(%rbx,%r11,4), %r10
000000010000f4f7	addq	%rbx, %r10
000000010000f4fa	jmpq	*%r10
000000010000f4fd	testq	%r12, %r12
000000010000f500	je	0x10000f7b7
000000010000f506	leaq	-0x1(%r12), %r10
000000010000f50b	leaq	0x1(%r14), %r11
000000010000f50f	movq	%r11, (%rsi)
000000010000f512	movq	%r10, 0x8(%rsi)
000000010000f516	movzbl	(%r14), %ebx
000000010000f51a	movl	%ebx, %r13d
000000010000f51d	andl	$0x7f, %r13d
000000010000f521	testb	%bl, %bl
000000010000f523	movl	%r13d, %ebx
000000010000f526	jns	0x10000f4d1
000000010000f528	movl	%ebx, -0x2c(%rbp)
000000010000f52b	testq	%r10, %r10
000000010000f52e	je	0x10000f7ff
000000010000f534	leaq	-0x2(%r12), %r10
000000010000f539	leaq	0x2(%r14), %r11
000000010000f53d	movq	%r11, (%rsi)
000000010000f540	movq	%r10, 0x8(%rsi)
000000010000f544	movzbl	0x1(%r14), %r13d
000000010000f549	movl	%r13d, -0x48(%rbp)
000000010000f54d	andl	$0x7f, %r13d
000000010000f551	shll	$0x7, %r13d
000000010000f555	movl	-0x2c(%rbp), %ebx
000000010000f558	movzwl	%bx, %ebx
000000010000f55b	orl	%r13d, %ebx
000000010000f55e	cmpb	$0x0, -0x48(%rbp)
000000010000f562	jns	0x10000f4d1
000000010000f568	testq	%r10, %r10
000000010000f56b	je	0x10000f7ff
000000010000f571	addq	$-0x3, %r12
000000010000f575	leaq	0x3(%r14), %r11
000000010000f579	movq	%r11, (%rsi)
000000010000f57c	movq	%r12, 0x8(%rsi)
000000010000f580	movzbl	0x2(%r14), %r10d
000000010000f585	cmpw	$0x3, %r10w
000000010000f58a	ja	0x10000f823
000000010000f590	movzwl	%r10w, %r10d
000000010000f594	shll	$0xe, %r10d
000000010000f598	movzwl	%bx, %ebx
000000010000f59b	orl	%r10d, %ebx
000000010000f59e	movq	%r12, %r10
000000010000f5a1	jmp	0x10000f4d1
000000010000f5a6	cmpq	$0x1, %r12
000000010000f5aa	jbe	0x10000f7bd
000000010000f5b0	addq	$-0x2, %r12
000000010000f5b4	leaq	0x2(%r14), %rbx
000000010000f5b8	movq	%rbx, (%rsi)
000000010000f5bb	movq	%r12, 0x8(%rsi)
000000010000f5bf	movzwl	(%r14), %r13d
000000010000f5c3	movq	%rbx, %r11
000000010000f5c6	jmp	0x10000f719
000000010000f5cb	cmpq	$0x3, %r12
000000010000f5cf	jbe	0x10000f7dc
000000010000f5d5	addq	$-0x4, %r12
000000010000f5d9	leaq	0x4(%r14), %rbx
000000010000f5dd	movq	%rbx, (%rsi)
000000010000f5e0	movq	%r12, 0x8(%rsi)
000000010000f5e4	movzwl	0x1(%r14), %ecx
000000010000f5e9	movzbl	(%r14), %r9d
000000010000f5ed	movzbl	0x3(%r14), %r10d
000000010000f5f2	movb	%r9b, -0x31(%rbp)
000000010000f5f6	movl	-0x38(%rbp), %r9d
000000010000f5fa	movb	%r10b, -0x2e(%rbp)
000000010000f5fe	movw	%cx, -0x30(%rbp)
000000010000f602	movl	-0x31(%rbp), %r13d
000000010000f606	movq	%rbx, %r11
000000010000f609	jmp	0x10000f719
000000010000f60e	testq	%r12, %r12
000000010000f611	movq	-0x60(%rbp), %r10
000000010000f615	je	0x10000f7a2
000000010000f61b	xorl	%ecx, %ecx
000000010000f61d	nopl	(%rax)
000000010000f620	cmpb	$0x0, (%r14,%rcx)
000000010000f625	je	0x10000f657
000000010000f627	incq	%rcx
000000010000f62a	cmpq	%rcx, %r12
000000010000f62d	jne	0x10000f620
000000010000f62f	jmp	0x10000f7a2
000000010000f634	testq	%r12, %r12
000000010000f637	je	0x10000f748
000000010000f63d	decq	%r12
000000010000f640	leaq	0x1(%r14), %rbx
000000010000f644	movq	%rbx, (%rsi)
000000010000f647	movq	%r12, 0x8(%rsi)
000000010000f64b	movzbl	(%r14), %r13d
000000010000f64f	movq	%rbx, %r11
000000010000f652	jmp	0x10000f719
000000010000f657	leaq	0x1(%r14,%rcx), %rbx
000000010000f65c	notq	%rcx
000000010000f65f	addq	%rcx, %r12
000000010000f662	movq	%rbx, (%rsi)
000000010000f665	movq	%r12, 0x8(%rsi)
000000010000f669	movq	%rbx, %r11
000000010000f66c	movq	%r14, -0x60(%rbp)
000000010000f670	xorl	%r13d, %r13d
000000010000f673	jmp	0x10000f719
000000010000f678	movq	%r14, %r11
000000010000f67b	xorl	%r13d, %r13d
000000010000f67e	jmp	0x10000f30d
000000010000f683	movq	%r14, %r11
000000010000f686	xorl	%r13d, %r13d
000000010000f689	jmp	0x10000f710
000000010000f68e	leal	-0x1f01(%r10), %ecx
000000010000f695	cmpl	$0x2, %ecx
000000010000f698	jb	0x10000f3d1
000000010000f69e	addl	$0xffffe0e0, %r10d              ## imm = 0xFFFFE0E0
000000010000f6a5	cmpl	$0x2, %r10d
000000010000f6a9	jae	0x10000f7b2
000000010000f6af	movq	%r14, %r11
000000010000f6b2	xorl	%r13d, %r13d
000000010000f6b5	jmp	0x10000f324
000000010000f6ba	movq	%r14, %r11
000000010000f6bd	xorl	%r13d, %r13d
000000010000f6c0	movl	$0x2, %ecx
000000010000f6c5	jmp	0x10000f710
000000010000f6c7	movq	%r14, %r11
000000010000f6ca	xorl	%r13d, %r13d
000000010000f6cd	movl	$0x8, %ecx
000000010000f6d2	jmp	0x10000f710
000000010000f6d4	movq	%r14, %r11
000000010000f6d7	xorl	%r13d, %r13d
000000010000f6da	xorl	%ecx, %ecx
000000010000f6dc	jmp	0x10000f710
000000010000f6de	movq	%r14, %r11
000000010000f6e1	xorl	%r13d, %r13d
000000010000f6e4	movl	$0x3, %ecx
000000010000f6e9	jmp	0x10000f710
000000010000f6eb	movq	%r14, %r11
000000010000f6ee	xorl	%r13d, %r13d
000000010000f6f1	movl	%r9d, %ecx
000000010000f6f4	jmp	0x10000f710
000000010000f6f6	movq	%r14, %r11
000000010000f6f9	xorl	%r13d, %r13d
000000010000f6fc	movl	-0x4c(%rbp), %ecx
000000010000f6ff	jmp	0x10000f710
000000010000f701	movq	%r14, %r11
000000010000f704	xorl	%r13d, %r13d
000000010000f707	movl	$0x10, %ecx
000000010000f70c	nopl	(%rax)
000000010000f710	movzbl	%cl, %ecx
000000010000f713	addq	%rcx, %r13
000000010000f716	movq	%r14, %rbx
000000010000f719	addq	$0x10, %rax
000000010000f71d	movq	%rbx, %r14
000000010000f720	cmpq	%r8, %rax
000000010000f723	jne	0x10000f2f0
000000010000f729	testq	%r13, %r13
000000010000f72c	je	0x10000f743
000000010000f72e	movq	(%rsi), %rax
000000010000f731	movq	0x8(%rsi), %rcx
000000010000f735	subq	%r13, %rcx
000000010000f738	jae	0x10000f74f
000000010000f73a	movb	$0x13, (%rdi)
000000010000f73d	movq	%rax, 0x8(%rdi)
000000010000f741	jmp	0x10000f797
000000010000f743	movb	$0x4b, (%rdi)
000000010000f746	jmp	0x10000f797
000000010000f748	movw	$0x13, (%rdi)
000000010000f74d	jmp	0x10000f786
000000010000f74f	addq	%r13, %rax
000000010000f752	movq	%rax, (%rsi)
000000010000f755	movq	%rcx, 0x8(%rsi)
000000010000f759	movb	$0x4b, (%rdi)
000000010000f75c	jmp	0x10000f797
000000010000f75e	movq	%rbx, (%rsi)
000000010000f761	negq	%r11
000000010000f764	movq	%r11, 0x8(%rsi)
000000010000f768	movb	$0x6, %al
000000010000f76a	movq	-0x58(%rbp), %r14
000000010000f76e	jmp	0x10000f780
000000010000f770	addq	%r12, %r14
000000010000f773	movq	%r14, (%rsi)
000000010000f776	movq	$0x0, 0x8(%rsi)
000000010000f77e	movb	$0x13, %al
000000010000f780	movb	%al, (%rdi)
000000010000f782	movb	$0x0, 0x1(%rdi)
000000010000f786	movw	$0x0, 0x6(%rdi)
000000010000f78c	movl	$0x0, 0x2(%rdi)
000000010000f793	movq	%r14, 0x8(%rdi)
000000010000f797	popq	%rbx
000000010000f798	popq	%r12
000000010000f79a	popq	%r13
000000010000f79c	popq	%r14
000000010000f79e	popq	%r15
000000010000f7a0	popq	%rbp
000000010000f7a1	retq
000000010000f7a2	andq	$-0x100, %r10
000000010000f7a9	orq	$0x13, %r10
000000010000f7ad	movq	%r10, (%rdi)
000000010000f7b0	jmp	0x10000f793
000000010000f7b2	movb	$0xc, (%rdi)
000000010000f7b5	jmp	0x10000f797
000000010000f7b7	movb	$0x13, %al
000000010000f7b9	xorl	%ecx, %ecx
000000010000f7bb	jmp	0x10000f806
000000010000f7bd	movw	$0x0, -0x40(%rbp)
000000010000f7c3	movb	$0x0, -0x3a(%rbp)
000000010000f7c7	movl	$0x0, -0x3e(%rbp)
000000010000f7ce	movl	-0x3d(%rbp), %eax
000000010000f7d1	movl	%eax, 0x4(%rdi)
000000010000f7d4	movl	-0x40(%rbp), %eax
000000010000f7d7	movl	%eax, 0x1(%rdi)
000000010000f7da	jmp	0x10000f7fa
000000010000f7dc	movl	$0x0, -0x34(%rbp)
000000010000f7e3	movb	$0x0, -0x2e(%rbp)
000000010000f7e7	movw	$0x0, -0x30(%rbp)
000000010000f7ed	movl	-0x31(%rbp), %eax
000000010000f7f0	movl	%eax, 0x4(%rdi)
000000010000f7f3	movl	$0x0, 0x1(%rdi)
000000010000f7fa	movb	$0x13, (%rdi)
000000010000f7fd	jmp	0x10000f793
000000010000f7ff	movb	$0x13, %al
000000010000f801	xorl	%ecx, %ecx
000000010000f803	movq	%r11, %r14
000000010000f806	movb	%al, (%rdi)
000000010000f808	movb	$0x0, 0x1(%rdi)
000000010000f80c	movw	%cx, 0x2(%rdi)
000000010000f810	movl	$0x0, 0x4(%rdi)
000000010000f817	jmp	0x10000f793
000000010000f81c	movb	$0x6, %al
000000010000f81e	movl	-0x2c(%rbp), %ecx
000000010000f821	jmp	0x10000f806
000000010000f823	movb	$0x6, %al
000000010000f825	movw	$0x16, %cx
000000010000f829	jmp	0x10000f806
000000010000f82b	nop
000000010000f82c	.byte 0xc5 #bad opcode
000000010000f82d	.byte 0xfe #bad opcode
000000010000f82e	.byte 0xff #bad opcode
000000010000f82f	.byte 0xff #bad opcode
000000010000f830	.byte 0xff #bad opcode
000000010000f831	cli
000000010000f832	.byte 0xff #bad opcode
000000010000f833	.byte 0xff #bad opcode
000000010000f834	.byte 0xff #bad opcode
000000010000f835	cli
000000010000f836	.byte 0xff #bad opcode
000000010000f837	.byte 0xff #bad opcode
000000010000f838	.byte 0xff #bad opcode
000000010000f839	cli
000000010000f83a	.byte 0xff #bad opcode
000000010000f83b	callq	*-0x51e0001(%rsi,%rdi,8)
000000010000f842	.byte 0xff #bad opcode
000000010000f843	jmpq	*-0x2(%rcx)
000000010000f849	cli
000000010000f84a	.byte 0xff #bad opcode
000000010000f84b	.byte 0xff #bad opcode
000000010000f84c	.byte 0xff #bad opcode
000000010000f84d	cli
000000010000f84e	.byte 0xff #bad opcode
000000010000f84f	.byte 0xff #bad opcode
000000010000f850	.byte 0xff #bad opcode
000000010000f851	cli
000000010000f852	.byte 0xff #bad opcode
000000010000f853	jmpq	*%rsp
000000010000f855	.byte 0xfe #bad opcode
000000010000f856	.byte 0xff #bad opcode
000000010000f857	jmpq	*%rsp
000000010000f859	.byte 0xfe #bad opcode
000000010000f85a	.byte 0xff #bad opcode
000000010000f85b	.byte 0xff #bad opcode
000000010000f85c	.byte 0xff #bad opcode
000000010000f85d	cli
000000010000f85e	.byte 0xff #bad opcode
000000010000f85f	.byte 0xff #bad opcode
000000010000f860	clc
000000010000f861	cli
000000010000f862	.byte 0xff #bad opcode
000000010000f863	.byte 0xff #bad opcode
000000010000f864	.byte 0xff #bad opcode
000000010000f865	cli
000000010000f866	.byte 0xff #bad opcode
000000010000f867	callq	*%rax
000000010000f869	.byte 0xfe #bad opcode
000000010000f86a	.byte 0xff #bad opcode
000000010000f86b	jmpq	*%rsp
000000010000f86d	.byte 0xfe #bad opcode
000000010000f86e	.byte 0xff #bad opcode
000000010000f86f	callq	*-0x51e0001(%rsi,%rdi,8)
000000010000f876	.byte 0xff #bad opcode
000000010000f877	jmpq	*-0x2(%rcx)
000000010000f87d	cli
000000010000f87e	.byte 0xff #bad opcode
000000010000f87f	.byte 0xff #bad opcode
000000010000f880	.byte 0xff #bad opcode
000000010000f881	cli
000000010000f882	.byte 0xff #bad opcode
000000010000f883	.byte 0xff #bad opcode
000000010000f884	clc
000000010000f885	cli
000000010000f886	.byte 0xff #bad opcode
000000010000f887	.byte 0xff #bad opcode
000000010000f888	.byte 0xff #bad opcode
000000010000f889	cli
000000010000f88a	.byte 0xff #bad opcode
000000010000f88b	ljmpl	*-0x2(%rsi)
000000010000f891	cli
000000010000f892	.byte 0xff #bad opcode
000000010000f893	.byte 0xff #bad opcode
000000010000f894	.byte 0xff #bad opcode
000000010000f895	cli
000000010000f896	.byte 0xff #bad opcode
000000010000f897	jmpq	*%rcx
000000010000f899	cli
000000010000f89a	.byte 0xff #bad opcode
000000010000f89b	.byte 0xff #bad opcode
000000010000f89c	clc
000000010000f89d	cli
000000010000f89e	.byte 0xff #bad opcode
000000010000f89f	.byte 0xff #bad opcode
000000010000f8a0	.byte 0xdb #bad opcode
000000010000f8a1	.byte 0xfe #bad opcode
000000010000f8a2	.byte 0xff #bad opcode
000000010000f8a3	.byte 0xff #bad opcode
000000010000f8a4	clc
000000010000f8a5	cli
000000010000f8a6	.byte 0xff #bad opcode
000000010000f8a7	jmpq	*-0x51000002(%rcx)
000000010000f8ad	.byte 0xfe #bad opcode
000000010000f8ae	.byte 0xff #bad opcode
000000010000f8af	.byte 0xff #bad opcode
000000010000f8b0	.byte 0xff #bad opcode
000000010000f8b1	cli
000000010000f8b2	.byte 0xff #bad opcode
000000010000f8b3	.byte 0xff #bad opcode
000000010000f8b4	.byte 0xff #bad opcode
000000010000f8b5	cli
000000010000f8b6	.byte 0xff #bad opcode
000000010000f8b7	jmpq	*-0x1b000002(%rcx)
000000010000f8bd	.byte 0xfe #bad opcode
000000010000f8be	.byte 0xff #bad opcode
000000010000f8bf	callq	*-0x1470001(%rsi,%rdi,8)
000000010000f8c6	.byte 0xff #bad opcode
000000010000f8c7	jmpq	*%rcx
000000010000f8c9	cli
000000010000f8ca	.byte 0xff #bad opcode
000000010000f8cb	jmpq	*%rsp
000000010000f8cd	.byte 0xfe #bad opcode
000000010000f8ce	.byte 0xff #bad opcode
000000010000f8cf	callq	*-0x1470001(%rsi,%rdi,8)
000000010000f8d6	.byte 0xff #bad opcode
000000010000f8d7	jmpq	*%rcx
000000010000f8d9	cli
000000010000f8da	.byte 0xff #bad opcode
000000010000f8db	decl	%edx
000000010000f8dd	cld
000000010000f8de	.byte 0xff #bad opcode
000000010000f8df	.byte 0xff #bad opcode
000000010000f8e0	outl	%eax, %dx
000000010000f8e1	cld
000000010000f8e2	.byte 0xff #bad opcode
000000010000f8e3	callq	*%rsi
000000010000f8e5	.byte 0xfe #bad opcode
000000010000f8e6	.byte 0xff #bad opcode
000000010000f8e7	callq	*%rsi
000000010000f8e9	.byte 0xfe #bad opcode
000000010000f8ea	.byte 0xff #bad opcode
000000010000f8eb	callq	*%rsi
000000010000f8ed	.byte 0xfe #bad opcode
000000010000f8ee	.byte 0xff #bad opcode
000000010000f8ef	pushq	(%rdx)
000000010000f8f1	std
000000010000f8f2	.byte 0xff #bad opcode
000000010000f8f3	incl	0x58fffffa(%rbp)
000000010000f8f9	std
000000010000f8fa	.byte 0xff #bad opcode
000000010000f8fb	callq	*%rsi
000000010000f8fd	.byte 0xfe #bad opcode
000000010000f8fe	.byte 0xff #bad opcode
000000010000f8ff	callq	*%rsi
000000010000f901	.byte 0xfe #bad opcode
000000010000f902	.byte 0xff #bad opcode
000000010000f903	pushq	%rbp
000000010000f905	cli
000000010000f906	.byte 0xff #bad opcode
000000010000f907	callq	*%rsi
000000010000f909	.byte 0xfe #bad opcode
000000010000f90a	.byte 0xff #bad opcode
000000010000f90b	pushq	%rbp
000000010000f90d	cli
000000010000f90e	.byte 0xff #bad opcode
000000010000f90f	callq	*%rsi
000000010000f911	.byte 0xfe #bad opcode
000000010000f912	.byte 0xff #bad opcode
000000010000f913	callq	*%rsi
000000010000f915	.byte 0xfe #bad opcode
000000010000f916	.byte 0xff #bad opcode
000000010000f917	callq	*%rsi
000000010000f919	.byte 0xfe #bad opcode
000000010000f91a	.byte 0xff #bad opcode
000000010000f91b	callq	*%rsi
000000010000f91d	.byte 0xfe #bad opcode
000000010000f91e	.byte 0xff #bad opcode
000000010000f91f	callq	*%rsi
000000010000f921	.byte 0xfe #bad opcode
000000010000f922	.byte 0xff #bad opcode
000000010000f923	pushq	%rbp
000000010000f925	cli
000000010000f926	.byte 0xff #bad opcode
000000010000f927	ljmpl	*(%rdi)
000000010000f929	sti
000000010000f92a	.byte 0xff #bad opcode
000000010000f92b	callq	*%rsi
000000010000f92d	.byte 0xfe #bad opcode
000000010000f92e	.byte 0xff #bad opcode
000000010000f92f	incl	-0x29000006(%rbp)
000000010000f935	.byte 0xfe #bad opcode
000000010000f936	.byte 0xff #bad opcode
000000010000f937	pushq	%rbp
000000010000f939	cli
000000010000f93a	.byte 0xff #bad opcode
000000010000f93b	pushq	%rbp
000000010000f93d	cli
000000010000f93e	.byte 0xff #bad opcode
000000010000f93f	callq	*%rsi
000000010000f941	.byte 0xfe #bad opcode
000000010000f942	.byte 0xff #bad opcode
000000010000f943	callq	*%rsi
000000010000f945	.byte 0xfe #bad opcode
000000010000f946	.byte 0xff #bad opcode
000000010000f947	callq	*%rsi
000000010000f949	.byte 0xfe #bad opcode
000000010000f94a	.byte 0xff #bad opcode
000000010000f94b	callq	*%rsi
000000010000f94d	.byte 0xfe #bad opcode
000000010000f94e	.byte 0xff #bad opcode
000000010000f94f	callq	*%rsi
000000010000f951	.byte 0xfe #bad opcode
000000010000f952	.byte 0xff #bad opcode
000000010000f953	callq	*%rsi
000000010000f955	.byte 0xfe #bad opcode
000000010000f956	.byte 0xff #bad opcode
000000010000f957	pushq	%rbp
000000010000f959	cli
000000010000f95a	.byte 0xff #bad opcode
000000010000f95b	pushq	%rbp
000000010000f95d	cli
000000010000f95e	.byte 0xff #bad opcode
000000010000f95f	decl	0x52fffffd(%rbx)
000000010000f965	.byte 0xfe #bad opcode
000000010000f966	.byte 0xff #bad opcode
000000010000f967	incl	-0x4(%rsi)
000000010000f96a	.byte 0xff #bad opcode
000000010000f96b	ljmpl	*-0x4(%rbx)
000000010000f96e	.byte 0xff #bad opcode
000000010000f96f	lcalll	*-0x3(%rdx)
000000010000f972	.byte 0xff #bad opcode
000000010000f973	lcalll	*(%rax)
000000010000f975	std
000000010000f976	.byte 0xff #bad opcode
000000010000f977	jmpq	*-0x3(%rdi)
000000010000f97a	.byte 0xff #bad opcode
000000010000f97b	ljmpl	*0x1fffffc(%rsi)
000000010000f981	cli
000000010000f982	.byte 0xff #bad opcode
000000010000f983	callq	*%rsp
000000010000f985	cld
000000010000f986	.byte 0xff #bad opcode
000000010000f987	jmpq	*(%rbx)
000000010000f989	std
000000010000f98a	.byte 0xff #bad opcode
000000010000f98b	jmpq	*(%rbx)
000000010000f98d	std
000000010000f98e	.byte 0xff #bad opcode
000000010000f98f	pushq	-0x6(%rcx)
000000010000f992	.byte 0xff #bad opcode
000000010000f993	decl	-0x3(%rdi)
000000010000f996	.byte 0xff #bad opcode
000000010000f997	pushq	-0x6(%rcx)
000000010000f99a	.byte 0xff #bad opcode
000000010000f99b	callq	*0x23fffffd(%rsi)
000000010000f9a1	std
000000010000f9a2	.byte 0xff #bad opcode
000000010000f9a3	lcalll	*-0x3(%rdx)
000000010000f9a6	.byte 0xff #bad opcode
000000010000f9a7	lcalll	*(%rax)
000000010000f9a9	std
000000010000f9aa	.byte 0xff #bad opcode
000000010000f9ab	jmpq	*-0x3(%rdi)
000000010000f9ae	.byte 0xff #bad opcode
000000010000f9af	pushq	-0x6(%rcx)
000000010000f9b2	.byte 0xff #bad opcode
000000010000f9b3	lcalll	*0x4ffffffb(%rbp)
000000010000f9b9	std
000000010000f9ba	.byte 0xff #bad opcode
000000010000f9bb	incl	(%rcx)
000000010000f9bd	cli
000000010000f9be	.byte 0xff #bad opcode
000000010000f9bf	pushq	-0x1(%rbp,%rdi,8)
000000010000f9c3	pushq	-0x6(%rcx)
000000010000f9c6	.byte 0xff #bad opcode
000000010000f9c7	pushq	-0x6(%rcx)
000000010000f9ca	.byte 0xff #bad opcode
000000010000f9cb	lcalll	*(%rax)
000000010000f9cd	std
000000010000f9ce	.byte 0xff #bad opcode
000000010000f9cf	decl	-0x3(%rdi)
000000010000f9d2	.byte 0xff #bad opcode
000000010000f9d3	jmpq	*0x4ffffffd(%rcx)
000000010000f9d9	std
000000010000f9da	.byte 0xff #bad opcode
000000010000f9db	jmpq	*-0x3(%rdi)
000000010000f9de	.byte 0xff #bad opcode
000000010000f9df	pushq	-0x1(%rbp,%rdi,8)
000000010000f9e3	pushq	-0x6(%rcx)
000000010000f9e6	.byte 0xff #bad opcode
000000010000f9e7	pushq	-0x6(%rcx)
000000010000f9ea	.byte 0xff #bad opcode
000000010000f9eb	jmpq	*-0x3(%rdi)
000000010000f9ee	.byte 0xff #bad opcode
000000010000f9ef	jmpq	*(%rbx)
000000010000f9f1	std
000000010000f9f2	.byte 0xff #bad opcode
000000010000f9f3	lcalll	*-0x3(%rdx)
000000010000f9f6	.byte 0xff #bad opcode
000000010000f9f7	.byte 0xff #bad opcode
000000010000f9f8	jle	0x10000f9f7
000000010000f9fa	.byte 0xff #bad opcode
000000010000f9fb	lcalll	*(%rax)
000000010000f9fd	std
000000010000f9fe	.byte 0xff #bad opcode
000000010000f9ff	jmpq	*(%rbx)
000000010000fa01	std
000000010000fa02	.byte 0xff #bad opcode
000000010000fa03	lcalll	*-0x3(%rdx)
000000010000fa06	.byte 0xff #bad opcode
000000010000fa07	.byte 0xff #bad opcode
000000010000fa08	jle	0x10000fa07
000000010000fa0a	.byte 0xff #bad opcode
000000010000fa0b	lcalll	*(%rax)
000000010000fa0d	std
000000010000fa0e	.byte 0xff #bad opcode
000000010000fa0f	callq	*0x48(%rbp)
000000010000fa12	movl	%esp, %ebp
000000010000fa14	pushq	%r14
000000010000fa16	pushq	%rbx
000000010000fa17	movq	%rsi, %r14
000000010000fa1a	movq	%rdi, %rbx
000000010000fa1d	movzwl	0x18(%rsi), %eax
000000010000fa21	cmpl	$0x2130, %eax                   ## imm = 0x2130
000000010000fa26	jg	0x10000fa6f
000000010000fa28	addl	$-0x2, %eax
000000010000fa2b	cmpl	$0x8a, %eax
000000010000fa30	ja	0x10000fdfd
000000010000fa36	leaq	0x3cf(%rip), %rcx
000000010000fa3d	movslq	(%rcx,%rax,4), %rax
000000010000fa41	addq	%rcx, %rax
000000010000fa44	jmpq	*%rax
000000010000fa46	movq	(%r14), %rax
000000010000fa49	cmpq	$0x8, %rax
000000010000fa4d	jne	0x10000fc6e
000000010000fa53	jmp	0x10000fc77
000000010000fa58	movq	%r14, %rdi
000000010000fa5b	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::udata_value::hd3c171e63a34ef56
000000010000fa60	cmpq	$0x1, %rax
000000010000fa64	je	0x10000fc57
000000010000fa6a	jmp	0x10000fdfd
000000010000fa6f	cmpl	$0x2131, %eax                   ## imm = 0x2131
000000010000fa74	je	0x10000fdb2
000000010000fa7a	cmpl	$0x2132, %eax                   ## imm = 0x2132
000000010000fa7f	je	0x10000fb2e
000000010000fa85	cmpl	$0x2133, %eax                   ## imm = 0x2133
000000010000fa8a	jne	0x10000fdfd
000000010000fa90	cmpl	$0xa, (%r14)
000000010000fa94	jne	0x10000fdfd
000000010000fa9a	movq	0x8(%r14), %rax
000000010000fa9e	movq	%rax, 0x8(%rbx)
000000010000faa2	movq	$0xb, (%rbx)
000000010000faa9	popq	%rbx
000000010000faaa	popq	%r14
000000010000faac	popq	%rbp
000000010000faad	retq
000000010000faae	movq	(%r14), %rax
000000010000fab1	decq	%rax
000000010000fab4	cmpq	$0x7, %rax
000000010000fab8	ja	0x10000fdfd
000000010000fabe	leaq	0x573(%rip), %rcx
000000010000fac5	movslq	(%rcx,%rax,4), %rax
000000010000fac9	addq	%rcx, %rax
000000010000facc	jmpq	*%rax
000000010000face	movq	0x8(%r14), %rax
000000010000fad2	jmp	0x10000fded
000000010000fad7	cmpl	$0xa, (%r14)
000000010000fadb	jne	0x10000fdfd
000000010000fae1	movq	0x8(%r14), %rax
000000010000fae5	movq	%rax, 0x8(%rbx)
000000010000fae9	movq	$0x16, (%rbx)
000000010000faf0	popq	%rbx
000000010000faf1	popq	%r14
000000010000faf3	popq	%rbp
000000010000faf4	retq
000000010000faf5	movq	%r14, %rdi
000000010000faf8	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::udata_value::hd3c171e63a34ef56
000000010000fafd	cmpq	$0x1, %rax
000000010000fb01	je	0x10000fc57
000000010000fb07	jmp	0x10000fa46
000000010000fb0c	movq	%r14, %rdi
000000010000fb0f	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::udata_value::hd3c171e63a34ef56
000000010000fb14	cmpq	$0x1, %rax
000000010000fb18	jne	0x10000fdfd
000000010000fb1e	movq	%rdx, 0x8(%rbx)
000000010000fb22	movq	$0x2c, (%rbx)
000000010000fb29	popq	%rbx
000000010000fb2a	popq	%r14
000000010000fb2c	popq	%rbp
000000010000fb2d	retq
000000010000fb2e	cmpl	$0xa, (%r14)
000000010000fb32	jne	0x10000fdfd
000000010000fb38	movq	0x8(%r14), %rax
000000010000fb3c	movq	%rax, 0x8(%rbx)
000000010000fb40	movq	$0x17, (%rbx)
000000010000fb47	popq	%rbx
000000010000fb48	popq	%r14
000000010000fb4a	popq	%rbp
000000010000fb4b	retq
000000010000fb4c	movq	%r14, %rdi
000000010000fb4f	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fb54	testb	$0x1, %al
000000010000fb56	je	0x10000fdfd
000000010000fb5c	movb	%dl, 0x8(%rbx)
000000010000fb5f	movq	$0x2b, (%rbx)
000000010000fb66	popq	%rbx
000000010000fb67	popq	%r14
000000010000fb69	popq	%rbp
000000010000fb6a	retq
000000010000fb6b	cmpl	$0xa, (%r14)
000000010000fb6f	jne	0x10000fdfd
000000010000fb75	movq	0x8(%r14), %rax
000000010000fb79	movq	%rax, 0x8(%rbx)
000000010000fb7d	movq	$0x10, (%rbx)
000000010000fb84	popq	%rbx
000000010000fb85	popq	%r14
000000010000fb87	popq	%rbp
000000010000fb88	retq
000000010000fb89	movq	%r14, %rdi
000000010000fb8c	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$9u16_value17h28fbd7613f735487E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u16_value::h28fbd7613f735487
000000010000fb91	cmpw	$0x1, %ax
000000010000fb95	jne	0x10000fdfd
000000010000fb9b	movw	%dx, 0x8(%rbx)
000000010000fb9f	movq	$0x26, (%rbx)
000000010000fba6	popq	%rbx
000000010000fba7	popq	%r14
000000010000fba9	popq	%rbp
000000010000fbaa	retq
000000010000fbab	movq	%r14, %rdi
000000010000fbae	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fbb3	testb	$0x1, %al
000000010000fbb5	je	0x10000fdfd
000000010000fbbb	movb	%dl, 0x8(%rbx)
000000010000fbbe	movq	$0x24, (%rbx)
000000010000fbc5	popq	%rbx
000000010000fbc6	popq	%r14
000000010000fbc8	popq	%rbp
000000010000fbc9	retq
000000010000fbca	movq	%r14, %rdi
000000010000fbcd	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fbd2	testb	$0x1, %al
000000010000fbd4	je	0x10000fdfd
000000010000fbda	movb	%dl, 0x8(%rbx)
000000010000fbdd	movq	$0x2a, (%rbx)
000000010000fbe4	popq	%rbx
000000010000fbe5	popq	%r14
000000010000fbe7	popq	%rbp
000000010000fbe8	retq
000000010000fbe9	movq	%r14, %rdi
000000010000fbec	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fbf1	testb	$0x1, %al
000000010000fbf3	je	0x10000fdfd
000000010000fbf9	movb	%dl, 0x8(%rbx)
000000010000fbfc	movq	$0x23, (%rbx)
000000010000fc03	popq	%rbx
000000010000fc04	popq	%r14
000000010000fc06	popq	%rbp
000000010000fc07	retq
000000010000fc08	movq	%r14, %rdi
000000010000fc0b	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::udata_value::hd3c171e63a34ef56
000000010000fc10	cmpq	$0x1, %rax
000000010000fc14	jne	0x10000fdfd
000000010000fc1a	movq	%rdx, 0x8(%rbx)
000000010000fc1e	movq	$0x27, (%rbx)
000000010000fc25	popq	%rbx
000000010000fc26	popq	%r14
000000010000fc28	popq	%rbp
000000010000fc29	retq
000000010000fc2a	movq	%r14, %rdi
000000010000fc2d	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fc32	testb	$0x1, %al
000000010000fc34	je	0x10000fdfd
000000010000fc3a	movb	%dl, 0x8(%rbx)
000000010000fc3d	movq	$0x29, (%rbx)
000000010000fc44	popq	%rbx
000000010000fc45	popq	%r14
000000010000fc47	popq	%rbp
000000010000fc48	retq
000000010000fc49	movq	%r14, %rdi
000000010000fc4c	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::udata_value::hd3c171e63a34ef56
000000010000fc51	cmpq	$0x1, %rax
000000010000fc55	jne	0x10000fc60
000000010000fc57	movq	%rdx, 0x8(%rbx)
000000010000fc5b	jmp	0x10000fdf1
000000010000fc60	movq	(%r14), %rax
000000010000fc63	cmpq	$0xa, %rax
000000010000fc67	je	0x10000fc93
000000010000fc69	cmpl	$0x8, %eax
000000010000fc6c	je	0x10000fc77
000000010000fc6e	cmpl	$0x1, %eax
000000010000fc71	jne	0x10000fdfd
000000010000fc77	movq	0x8(%r14), %rax
000000010000fc7b	movq	0x10(%r14), %rcx
000000010000fc7f	movq	%rax, 0x8(%rbx)
000000010000fc83	movq	%rcx, 0x10(%rbx)
000000010000fc87	movq	$0x8, (%rbx)
000000010000fc8e	popq	%rbx
000000010000fc8f	popq	%r14
000000010000fc91	popq	%rbp
000000010000fc92	retq
000000010000fc93	movq	0x8(%r14), %rax
000000010000fc97	movq	%rax, 0x8(%rbx)
000000010000fc9b	movq	$0x11, (%rbx)
000000010000fca2	popq	%rbx
000000010000fca3	popq	%r14
000000010000fca5	popq	%rbp
000000010000fca6	retq
000000010000fca7	movq	%r14, %rdi
000000010000fcaa	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fcaf	testb	$0x1, %al
000000010000fcb1	je	0x10000fdfd
000000010000fcb7	movb	%dl, 0x8(%rbx)
000000010000fcba	movq	$0x20, (%rbx)
000000010000fcc1	popq	%rbx
000000010000fcc2	popq	%r14
000000010000fcc4	popq	%rbp
000000010000fcc5	retq
000000010000fcc6	movq	%r14, %rdi
000000010000fcc9	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fcce	testb	$0x1, %al
000000010000fcd0	je	0x10000fdfd
000000010000fcd6	movb	%dl, 0x8(%rbx)
000000010000fcd9	movq	$0x28, (%rbx)
000000010000fce0	popq	%rbx
000000010000fce1	popq	%r14
000000010000fce3	popq	%rbp
000000010000fce4	retq
000000010000fce5	cmpl	$0xa, (%r14)
000000010000fce9	jne	0x10000fdfd
000000010000fcef	movq	0x8(%r14), %rax
000000010000fcf3	movq	%rax, 0x8(%rbx)
000000010000fcf7	movq	$0x14, (%rbx)
000000010000fcfe	popq	%rbx
000000010000fcff	popq	%r14
000000010000fd01	popq	%rbp
000000010000fd02	retq
000000010000fd03	movq	%r14, %rdi
000000010000fd06	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fd0b	testb	$0x1, %al
000000010000fd0d	je	0x10000fdfd
000000010000fd13	movb	%dl, 0x8(%rbx)
000000010000fd16	movq	$0x25, (%rbx)
000000010000fd1d	popq	%rbx
000000010000fd1e	popq	%r14
000000010000fd20	popq	%rbp
000000010000fd21	retq
000000010000fd22	movq	%r14, %rdi
000000010000fd25	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fd2a	testb	$0x1, %al
000000010000fd2c	je	0x10000fdfd
000000010000fd32	movb	%dl, 0x8(%rbx)
000000010000fd35	movq	$0x21, (%rbx)
000000010000fd3c	popq	%rbx
000000010000fd3d	popq	%r14
000000010000fd3f	popq	%rbp
000000010000fd40	retq
000000010000fd41	movq	%r14, %rdi
000000010000fd44	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::u8_value::hcc8bfbd91f5ac42b
000000010000fd49	testb	$0x1, %al
000000010000fd4b	je	0x10000fdfd
000000010000fd51	movb	%dl, 0x8(%rbx)
000000010000fd54	movq	$0x22, (%rbx)
000000010000fd5b	popq	%rbx
000000010000fd5c	popq	%r14
000000010000fd5e	popq	%rbp
000000010000fd5f	retq
000000010000fd60	cmpl	$0xa, (%r14)
000000010000fd64	jne	0x10000fdfd
000000010000fd6a	movq	0x8(%r14), %rax
000000010000fd6e	movq	%rax, 0x8(%rbx)
000000010000fd72	movq	$0x1c, (%rbx)
000000010000fd79	popq	%rbx
000000010000fd7a	popq	%r14
000000010000fd7c	popq	%rbp
000000010000fd7d	retq
000000010000fd7e	cmpl	$0xa, (%r14)
000000010000fd82	jne	0x10000fdfd
000000010000fd84	movq	0x8(%r14), %rax
000000010000fd88	movq	%rax, 0x8(%rbx)
000000010000fd8c	movq	$0x15, (%rbx)
000000010000fd93	popq	%rbx
000000010000fd94	popq	%r14
000000010000fd96	popq	%rbp
000000010000fd97	retq
000000010000fd98	cmpl	$0xa, (%r14)
000000010000fd9c	jne	0x10000fdfd
000000010000fd9e	movq	0x8(%r14), %rax
000000010000fda2	movq	%rax, 0x8(%rbx)
000000010000fda6	movq	$0x12, (%rbx)
000000010000fdad	popq	%rbx
000000010000fdae	popq	%r14
000000010000fdb0	popq	%rbp
000000010000fdb1	retq
000000010000fdb2	movq	%r14, %rdi
000000010000fdb5	callq	__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E ## gimli::read::unit::AttributeValue$LT$R$C$Offset$GT$::udata_value::hd3c171e63a34ef56
000000010000fdba	cmpq	$0x1, %rax
000000010000fdbe	jne	0x10000fdfd
000000010000fdc0	movq	%rdx, 0x8(%rbx)
000000010000fdc4	movq	$0x2d, (%rbx)
000000010000fdcb	popq	%rbx
000000010000fdcc	popq	%r14
000000010000fdce	popq	%rbp
000000010000fdcf	retq
000000010000fdd0	movzbl	0x8(%r14), %eax
000000010000fdd5	jmp	0x10000fded
000000010000fdd7	movzwl	0x8(%r14), %eax
000000010000fddc	jmp	0x10000fded
000000010000fdde	movl	0x8(%r14), %eax
000000010000fde2	jmp	0x10000fded
000000010000fde4	movq	0x8(%r14), %rax
000000010000fde8	testq	%rax, %rax
000000010000fdeb	js	0x10000fdfd
000000010000fded	movq	%rax, 0x8(%rbx)
000000010000fdf1	movq	$0x7, (%rbx)
000000010000fdf8	popq	%rbx
000000010000fdf9	popq	%r14
000000010000fdfb	popq	%rbp
000000010000fdfc	retq
000000010000fdfd	movq	%rbx, %rdi
000000010000fe00	movq	%r14, %rsi
000000010000fe03	popq	%rbx
000000010000fe04	popq	%r14
000000010000fe06	popq	%rbp
000000010000fe07	jmp	__ZN90_$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf46c163ce8dfe888E ## _$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::hf46c163ce8dfe888
000000010000fe0c	pushq	%rsp
000000010000fe0d	.byte 0xfe #bad opcode
000000010000fe0e	.byte 0xff #bad opcode
000000010000fe0f	pushq	%rcx
000000010000fe11	.byte 0xff #bad opcode
000000010000fe12	.byte 0xff #bad opcode
000000010000fe13	pushq	%rcx
000000010000fe15	.byte 0xff #bad opcode
000000010000fe16	.byte 0xff #bad opcode
000000010000fe17	pushq	%rcx
000000010000fe19	.byte 0xff #bad opcode
000000010000fe1a	.byte 0xff #bad opcode
000000010000fe1b	pushq	%rcx
000000010000fe1d	.byte 0xff #bad opcode
000000010000fe1e	.byte 0xff #bad opcode
000000010000fe1f	pushq	%rcx
000000010000fe21	.byte 0xff #bad opcode
000000010000fe22	.byte 0xff #bad opcode
000000010000fe23	pushq	%rcx
000000010000fe25	.byte 0xff #bad opcode
000000010000fe26	.byte 0xff #bad opcode
000000010000fe27	incl	-0x3(%rax)
000000010000fe2a	.byte 0xff #bad opcode
000000010000fe2b	pushq	%rcx
000000010000fe2d	.byte 0xff #bad opcode
000000010000fe2e	.byte 0xff #bad opcode
000000010000fe2f	jmpq	*-0x5d000004(%rdx)
000000010000fe35	cld
000000010000fe36	.byte 0xff #bad opcode
000000010000fe37	jmpq	*-0xe000004(%rdx)
000000010000fe3d	.byte 0xff #bad opcode
000000010000fe3e	.byte 0xff #bad opcode
000000010000fe3f	pushq	%rcx
000000010000fe41	.byte 0xff #bad opcode
000000010000fe42	.byte 0xff #bad opcode
000000010000fe43	lcalll	*-0x3(%rdi)
000000010000fe46	.byte 0xff #bad opcode
000000010000fe47	pushq	%rcx
000000010000fe49	.byte 0xff #bad opcode
000000010000fe4a	.byte 0xff #bad opcode
000000010000fe4b	decl	-0x1(%rsp,%rdi,8)
000000010000fe4f	.byte 0xff #bad opcode
000000010000fe50	jge	0x10000fe4f
000000010000fe52	.byte 0xff #bad opcode
000000010000fe53	pushq	%rcx
000000010000fe55	.byte 0xff #bad opcode
000000010000fe56	.byte 0xff #bad opcode
000000010000fe57	pushq	%rcx
000000010000fe59	.byte 0xff #bad opcode
000000010000fe5a	.byte 0xff #bad opcode
000000010000fe5b	pushq	%rcx
000000010000fe5d	.byte 0xff #bad opcode
000000010000fe5e	.byte 0xff #bad opcode
000000010000fe5f	lcalll	*-0xe000003(%rdi)
000000010000fe65	.byte 0xff #bad opcode
000000010000fe66	.byte 0xff #bad opcode
000000010000fe67	callq	*-0x1(%rsi,%rdi,8)
000000010000fe6b	pushq	%rcx
000000010000fe6d	.byte 0xff #bad opcode
000000010000fe6e	.byte 0xff #bad opcode
000000010000fe6f	pushq	%rcx
000000010000fe71	.byte 0xff #bad opcode
000000010000fe72	.byte 0xff #bad opcode
000000010000fe73	pushq	%rcx
000000010000fe75	.byte 0xff #bad opcode
000000010000fe76	.byte 0xff #bad opcode
000000010000fe77	pushq	%rcx
000000010000fe79	.byte 0xff #bad opcode
000000010000fe7a	.byte 0xff #bad opcode
000000010000fe7b	pushq	%rcx
000000010000fe7d	.byte 0xff #bad opcode
000000010000fe7e	.byte 0xff #bad opcode
000000010000fe7f	pushq	%rcx
000000010000fe81	.byte 0xff #bad opcode
000000010000fe82	.byte 0xff #bad opcode
000000010000fe83	.byte 0xff #bad opcode
000000010000fe84	movl	$0xf1fffffd, %esi               ## imm = 0xF1FFFFFD
000000010000fe89	.byte 0xff #bad opcode
000000010000fe8a	.byte 0xff #bad opcode
000000010000fe8b	.byte 0xff #bad opcode
000000010000fe8c	cmpb	%ah, %bh
000000010000fe8e	.byte 0xff #bad opcode
000000010000fe8f	pushq	%rcx
000000010000fe91	.byte 0xff #bad opcode
000000010000fe92	.byte 0xff #bad opcode
000000010000fe93	pushq	%rcx
000000010000fe95	.byte 0xff #bad opcode
000000010000fe96	.byte 0xff #bad opcode
000000010000fe97	pushq	%rcx
000000010000fe99	.byte 0xff #bad opcode
000000010000fe9a	.byte 0xff #bad opcode
000000010000fe9b	pushq	%rcx
000000010000fe9d	.byte 0xff #bad opcode
000000010000fe9e	.byte 0xff #bad opcode
000000010000fe9f	pushq	%rcx
000000010000fea1	.byte 0xff #bad opcode
000000010000fea2	.byte 0xff #bad opcode
000000010000fea3	pushq	%rcx
000000010000fea5	.byte 0xff #bad opcode
000000010000fea6	.byte 0xff #bad opcode
000000010000fea7	pushq	%rcx
000000010000fea9	.byte 0xff #bad opcode
000000010000feaa	.byte 0xff #bad opcode
000000010000feab	callq	*-0x1(%rsi,%rdi,8)
000000010000feaf	pushq	%rcx
000000010000feb1	.byte 0xff #bad opcode
000000010000feb2	.byte 0xff #bad opcode
000000010000feb3	decl	%ebx
000000010000feb5	cld
000000010000feb6	.byte 0xff #bad opcode
000000010000feb7	pushq	%rcx
000000010000feb9	.byte 0xff #bad opcode
000000010000feba	.byte 0xff #bad opcode
000000010000febb	.byte 0xff #bad opcode
000000010000febc	jmp	0x13b00febd
000000010000fec1	cld
000000010000fec2	.byte 0xff #bad opcode
000000010000fec3	pushq	%rcx
000000010000fec5	.byte 0xff #bad opcode
000000010000fec6	.byte 0xff #bad opcode
000000010000fec7	pushq	%rcx
000000010000fec9	.byte 0xff #bad opcode
000000010000feca	.byte 0xff #bad opcode
000000010000fecb	.byte 0xff #bad opcode
000000010000fecc	.byte 0xdd #bad opcode
000000010000fecd	std
000000010000fece	.byte 0xff #bad opcode
000000010000fecf	.byte 0xff #bad opcode
000000010000fed0	cld
000000010000fed1	std
000000010000fed2	.byte 0xff #bad opcode
000000010000fed3	pushq	%rcx
000000010000fed5	.byte 0xff #bad opcode
000000010000fed6	.byte 0xff #bad opcode
000000010000fed7	pushq	%rcx
000000010000fed9	.byte 0xff #bad opcode
000000010000feda	.byte 0xff #bad opcode
000000010000fedb	lcalll	*(%rsi)
000000010000fedd	.byte 0xfe #bad opcode
000000010000fede	.byte 0xff #bad opcode
000000010000fedf	.byte 0xff #bad opcode
000000010000fee0	cmpb	%ah, %bh
000000010000fee2	.byte 0xff #bad opcode
000000010000fee3	.byte 0xff #bad opcode
000000010000fee4	cmpl	$0x4cfffffe, %eax               ## imm = 0x4CFFFFFE
000000010000fee9	cld
000000010000feea	.byte 0xff #bad opcode
000000010000feeb	incl	(%rax)
000000010000feed	std
000000010000feee	.byte 0xff #bad opcode
000000010000feef	decl	-0x1(%rsp,%rdi,8)
000000010000fef3	pushq	%rcx
000000010000fef5	.byte 0xff #bad opcode
000000010000fef6	.byte 0xff #bad opcode
000000010000fef7	pushq	%rcx
000000010000fef9	.byte 0xff #bad opcode
000000010000fefa	.byte 0xff #bad opcode
000000010000fefb	lcalll	*-0xe000002(%rbx)
000000010000ff01	.byte 0xff #bad opcode
000000010000ff02	.byte 0xff #bad opcode
000000010000ff03	callq	*-0x1(%rsi,%rdi,8)
000000010000ff07	pushq	%rcx
000000010000ff09	.byte 0xff #bad opcode
000000010000ff0a	.byte 0xff #bad opcode
000000010000ff0b	.byte 0xff #bad opcode
000000010000ff0c	movl	$0xd9fffffe, %edx               ## imm = 0xD9FFFFFE
000000010000ff11	.byte 0xfe #bad opcode
000000010000ff12	.byte 0xff #bad opcode
000000010000ff13	pushq	%rcx
000000010000ff15	.byte 0xff #bad opcode
000000010000ff16	.byte 0xff #bad opcode
000000010000ff17	pushq	%rcx
000000010000ff19	.byte 0xff #bad opcode
000000010000ff1a	.byte 0xff #bad opcode
000000010000ff1b	callq	*-0x1(%rsi,%rdi,8)
000000010000ff1f	pushq	%rcx
000000010000ff21	.byte 0xff #bad opcode
000000010000ff22	.byte 0xff #bad opcode
000000010000ff23	callq	*-0x1(%rsi,%rdi,8)
000000010000ff27	pushq	%rcx
000000010000ff29	.byte 0xff #bad opcode
000000010000ff2a	.byte 0xff #bad opcode
000000010000ff2b	callq	*-0x1(%rsi,%rdi,8)
000000010000ff2f	pushq	%rcx
000000010000ff31	.byte 0xff #bad opcode
000000010000ff32	.byte 0xff #bad opcode
000000010000ff33	pushq	%rdi
000000010000ff35	.byte 0xfe #bad opcode
000000010000ff36	.byte 0xff #bad opcode
000000010000ff37	callq	*-0x1(%rsi,%rdi,8)
000000010000ff3b	.byte 0xff #bad opcode
000000010000ff3c	cmpb	%ah, %bh
000000010000ff3e	.byte 0xff #bad opcode
000000010000ff3f	.byte 0xff #bad opcode
000000010000ff40	cmpb	%ah, %bh
000000010000ff42	.byte 0xff #bad opcode
000000010000ff43	.byte 0xff #bad opcode
000000010000ff44	cmpb	%ah, %bh
000000010000ff46	.byte 0xff #bad opcode
000000010000ff47	.byte 0xff #bad opcode
000000010000ff48	jmp	0xf200ff49
000000010000ff4d	.byte 0xff #bad opcode
000000010000ff4e	.byte 0xff #bad opcode
000000010000ff4f	pushq	%rcx
000000010000ff51	.byte 0xff #bad opcode
000000010000ff52	.byte 0xff #bad opcode
000000010000ff53	pushq	%rcx
000000010000ff55	.byte 0xff #bad opcode
000000010000ff56	.byte 0xff #bad opcode
000000010000ff57	decl	%ebx
000000010000ff59	cld
000000010000ff5a	.byte 0xff #bad opcode
000000010000ff5b	pushq	%rcx
000000010000ff5d	.byte 0xff #bad opcode
000000010000ff5e	.byte 0xff #bad opcode
000000010000ff5f	decl	-0x1(%rsp,%rdi,8)
000000010000ff63	incl	(%rax)
000000010000ff65	std
000000010000ff66	.byte 0xff #bad opcode
000000010000ff67	decl	-0x1(%rsp,%rdi,8)
000000010000ff6b	pushq	%rcx
000000010000ff6d	.byte 0xff #bad opcode
000000010000ff6e	.byte 0xff #bad opcode
000000010000ff6f	pushq	%rcx
000000010000ff71	.byte 0xff #bad opcode
000000010000ff72	.byte 0xff #bad opcode
000000010000ff73	pushq	%rcx
000000010000ff75	.byte 0xff #bad opcode
000000010000ff76	.byte 0xff #bad opcode
000000010000ff77	pushq	%rcx
000000010000ff79	.byte 0xff #bad opcode
000000010000ff7a	.byte 0xff #bad opcode
000000010000ff7b	callq	*(%rsi)
000000010000ff7d	.byte 0xff #bad opcode
000000010000ff7e	.byte 0xff #bad opcode
000000010000ff7f	pushq	%rcx
000000010000ff81	.byte 0xff #bad opcode
000000010000ff82	.byte 0xff #bad opcode
000000010000ff83	pushq	%rcx
000000010000ff85	.byte 0xff #bad opcode
000000010000ff86	.byte 0xff #bad opcode
000000010000ff87	pushq	%rcx
000000010000ff89	.byte 0xff #bad opcode
000000010000ff8a	.byte 0xff #bad opcode
000000010000ff8b	pushq	%rcx
000000010000ff8d	.byte 0xff #bad opcode
000000010000ff8e	.byte 0xff #bad opcode
000000010000ff8f	pushq	%rcx
000000010000ff91	.byte 0xff #bad opcode
000000010000ff92	.byte 0xff #bad opcode
000000010000ff93	pushq	%rcx
000000010000ff95	.byte 0xff #bad opcode
000000010000ff96	.byte 0xff #bad opcode
000000010000ff97	pushq	-0xe000001(%rip)
000000010000ff9d	.byte 0xff #bad opcode
000000010000ff9e	.byte 0xff #bad opcode
000000010000ff9f	pushq	%rcx
000000010000ffa1	.byte 0xff #bad opcode
000000010000ffa2	.byte 0xff #bad opcode
000000010000ffa3	pushq	%rcx
000000010000ffa5	.byte 0xff #bad opcode
000000010000ffa6	.byte 0xff #bad opcode
000000010000ffa7	pushq	%rcx
000000010000ffa9	.byte 0xff #bad opcode
000000010000ffaa	.byte 0xff #bad opcode
000000010000ffab	pushq	%rcx
000000010000ffad	.byte 0xff #bad opcode
000000010000ffae	.byte 0xff #bad opcode
000000010000ffaf	pushq	%rcx
000000010000ffb1	.byte 0xff #bad opcode
000000010000ffb2	.byte 0xff #bad opcode
000000010000ffb3	pushq	%rcx
000000010000ffb5	.byte 0xff #bad opcode
000000010000ffb6	.byte 0xff #bad opcode
000000010000ffb7	pushq	%rcx
000000010000ffb9	.byte 0xff #bad opcode
000000010000ffba	.byte 0xff #bad opcode
000000010000ffbb	pushq	%rcx
000000010000ffbd	.byte 0xff #bad opcode
000000010000ffbe	.byte 0xff #bad opcode
000000010000ffbf	pushq	%rcx
000000010000ffc1	.byte 0xff #bad opcode
000000010000ffc2	.byte 0xff #bad opcode
000000010000ffc3	pushq	%rcx
000000010000ffc5	.byte 0xff #bad opcode
000000010000ffc6	.byte 0xff #bad opcode
000000010000ffc7	.byte 0xff #bad opcode
000000010000ffc8	cmpb	%ah, %bh
000000010000ffca	.byte 0xff #bad opcode
000000010000ffcb	callq	*-0x1(%rdi,%rdi,8)
000000010000ffcf	incl	-0x2dd0001(%rsp,%rdi,8)
000000010000ffd6	.byte 0xff #bad opcode
000000010000ffd7	pushq	%rcx
000000010000ffd9	.byte 0xff #bad opcode
000000010000ffda	.byte 0xff #bad opcode
000000010000ffdb	pushq	%rcx
000000010000ffdd	.byte 0xff #bad opcode
000000010000ffde	.byte 0xff #bad opcode
000000010000ffdf	pushq	%rcx
000000010000ffe1	.byte 0xff #bad opcode
000000010000ffe2	.byte 0xff #bad opcode
000000010000ffe3	pushq	%rcx
000000010000ffe5	.byte 0xff #bad opcode
000000010000ffe6	.byte 0xff #bad opcode
000000010000ffe7	pushq	-0x1(%rdx)
000000010000ffea	.byte 0xff #bad opcode
000000010000ffeb	pushq	%rcx
000000010000ffed	.byte 0xff #bad opcode
000000010000ffee	.byte 0xff #bad opcode
000000010000ffef	pushq	%rcx
000000010000fff1	.byte 0xff #bad opcode
000000010000fff2	.byte 0xff #bad opcode
000000010000fff3	pushq	%rcx
000000010000fff5	.byte 0xff #bad opcode
000000010000fff6	.byte 0xff #bad opcode
000000010000fff7	pushq	%rcx
000000010000fff9	.byte 0xff #bad opcode
000000010000fffa	.byte 0xff #bad opcode
000000010000fffb	.byte 0xff #bad opcode
000000010000fffc	cmpb	%ah, %bh
000000010000fffe	.byte 0xff #bad opcode
000000010000ffff	.byte 0xff #bad opcode
0000000100010000	cmpb	%ah, %bh
0000000100010002	.byte 0xff #bad opcode
0000000100010003	pushq	%rcx
0000000100010005	.byte 0xff #bad opcode
0000000100010006	.byte 0xff #bad opcode
0000000100010007	pushq	%rcx
0000000100010009	.byte 0xff #bad opcode
000000010001000a	.byte 0xff #bad opcode
000000010001000b	pushq	%rcx
000000010001000d	.byte 0xff #bad opcode
000000010001000e	.byte 0xff #bad opcode
000000010001000f	.byte 0xff #bad opcode
0000000100010010	cmpb	%ah, %bh
0000000100010012	.byte 0xff #bad opcode
0000000100010013	.byte 0xff #bad opcode
0000000100010014	cmpb	%ah, %bh
0000000100010016	.byte 0xff #bad opcode
0000000100010017	.byte 0xff #bad opcode
0000000100010018	cmpb	%ah, %bh
000000010001001a	.byte 0xff #bad opcode
000000010001001b	.byte 0xff #bad opcode
000000010001001c	cmpb	%ah, %bh
000000010001001e	.byte 0xff #bad opcode
000000010001001f	pushq	%rcx
0000000100010021	.byte 0xff #bad opcode
0000000100010022	.byte 0xff #bad opcode
0000000100010023	pushq	%rcx
0000000100010025	.byte 0xff #bad opcode
0000000100010026	.byte 0xff #bad opcode
0000000100010027	pushq	%rcx
0000000100010029	.byte 0xff #bad opcode
000000010001002a	.byte 0xff #bad opcode
000000010001002b	pushq	%rcx
000000010001002d	.byte 0xff #bad opcode
000000010001002e	.byte 0xff #bad opcode
000000010001002f	pushq	%rcx
0000000100010031	.byte 0xff #bad opcode
0000000100010032	.byte 0xff #bad opcode
0000000100010033	decl	-0x3c00001(%rdi,%rdi,8)
000000010001003a	.byte 0xff #bad opcode
000000010001003b	lcalll	*-0x60000003(%rax)
0000000100010041	std
0000000100010042	.byte 0xff #bad opcode
0000000100010043	jmpq	*-0x69000003(%rsi)
0000000100010049	cli
000000010001004a	.byte 0xff #bad opcode
000000010001004b	ljmpl	*-0x5690001(%rbp,%rdi,8)
0000000100010052	.byte 0xff #bad opcode
0000000100010053	.byte 0xff #bad opcode
0000000100010054	.byte 0x3f #bad opcode
0000000100010055	cld
0000000100010056	.byte 0xff #bad opcode
0000000100010057	decl	(%rdi)
0000000100010059	.byte 0x1f #bad opcode
000000010001005a	testb	%al, (%rax)
000000010001005c	addb	%al, (%rax)
000000010001005e	addb	%al, (%rax)
__ZN5gimli4read4unit19EntriesRaw$LT$R$GT$17read_abbreviation17hcdac73cef64242f0E:
0000000100010060	pushq	%rbp
0000000100010061	movq	%rsp, %rbp
0000000100010064	pushq	%r14
0000000100010066	pushq	%rbx
0000000100010067	movq	(%rsi), %r8
000000010001006a	movq	0x8(%rsi), %rax
000000010001006e	testq	%rax, %rax
0000000100010071	je	0x1000100d4
0000000100010073	leaq	(%r8,%rax), %rdx
0000000100010077	movl	$0x1, %r9d
000000010001007d	subq	%rax, %r9
0000000100010080	incq	%r8
0000000100010083	xorl	%eax, %eax
0000000100010085	xorl	%ecx, %ecx
0000000100010087	nopw	(%rax,%rax)
0000000100010090	movzbl	-0x1(%r8), %r10d
0000000100010095	cmpl	$0x3f, %ecx
0000000100010098	jne	0x1000100a0
000000010001009a	cmpb	$0x2, %r10b
000000010001009e	jae	0x1000100db
00000001000100a0	movzbl	%r10b, %r10d
00000001000100a4	movl	%r10d, %r11d
00000001000100a7	andl	$0x7f, %r11d
00000001000100ab	shlq	%cl, %r11
00000001000100ae	orq	%r11, %rax
00000001000100b1	testb	%r10b, %r10b
00000001000100b4	jns	0x100010103
00000001000100b6	addl	$0x7, %ecx
00000001000100b9	incq	%r9
00000001000100bc	incq	%r8
00000001000100bf	cmpq	$0x1, %r9
00000001000100c3	jne	0x100010090
00000001000100c5	movq	%rdx, (%rsi)
00000001000100c8	movq	$0x0, 0x8(%rsi)
00000001000100d0	movb	$0x13, %al
00000001000100d2	jmp	0x1000100e7
00000001000100d4	movq	%r8, %rdx
00000001000100d7	movb	$0x13, %al
00000001000100d9	jmp	0x1000100e7
00000001000100db	movq	%r8, (%rsi)
00000001000100de	negq	%r9
00000001000100e1	movq	%r9, 0x8(%rsi)
00000001000100e5	movb	$0x6, %al
00000001000100e7	movb	%al, (%rdi)
00000001000100e9	movb	$0x0, 0x1(%rdi)
00000001000100ed	movw	$0x0, 0x6(%rdi)
00000001000100f3	movl	$0x0, 0x2(%rdi)
00000001000100fa	movq	%rdx, 0x8(%rdi)
00000001000100fe	popq	%rbx
00000001000100ff	popq	%r14
0000000100010101	popq	%rbp
0000000100010102	retq
0000000100010103	movq	%r8, (%rsi)
0000000100010106	negq	%r9
0000000100010109	movq	%r9, 0x8(%rsi)
000000010001010d	testq	%rax, %rax
0000000100010110	je	0x100010137
0000000100010112	movq	0x18(%rsi), %rdx
0000000100010116	leaq	-0x1(%rax), %rcx
000000010001011a	cmpq	0x10(%rdx), %rcx
000000010001011e	jae	0x10001014b
0000000100010120	imulq	$0x70, %rcx, %rcx
0000000100010124	addq	(%rdx), %rcx
0000000100010127	cmpb	$0x1, 0x6a(%rcx)
000000010001012b	jne	0x100010131
000000010001012d	incq	0x20(%rsi)
0000000100010131	movq	%rcx, 0x8(%rdi)
0000000100010135	jmp	0x100010143
0000000100010137	decq	0x20(%rsi)
000000010001013b	movq	$0x0, 0x8(%rdi)
0000000100010143	movb	$0x4b, (%rdi)
0000000100010146	popq	%rbx
0000000100010147	popq	%r14
0000000100010149	popq	%rbp
000000010001014a	retq
000000010001014b	movq	0x18(%rdx), %rcx
000000010001014f	testq	%rcx, %rcx
0000000100010152	je	0x1000101df
0000000100010158	movq	0x20(%rdx), %rdx
000000010001015c	movl	$0xff, %r8d
0000000100010162	movzwl	0x532(%rcx), %r11d
000000010001016a	imulq	$0x70, %r11, %rbx
000000010001016e	movq	$-0x1, %r9
0000000100010175	movl	$0x70, %r10d
000000010001017b	nopl	(%rax,%rax)
0000000100010180	leaq	(%rbx,%r10), %r14
0000000100010184	cmpq	$0x70, %r14
0000000100010188	je	0x1000101b5
000000010001018a	xorl	%r14d, %r14d
000000010001018d	cmpq	%rax, 0x4e0(%rcx,%r9,8)
0000000100010195	setne	%r14b
0000000100010199	cmoval	%r8d, %r14d
000000010001019d	incq	%r9
00000001000101a0	addq	$-0x70, %r10
00000001000101a4	cmpb	$0x1, %r14b
00000001000101a8	je	0x100010180
00000001000101aa	movzbl	%r14b, %r11d
00000001000101ae	testl	%r11d, %r11d
00000001000101b1	jne	0x1000101b8
00000001000101b3	jmp	0x1000101c8
00000001000101b5	movq	%r11, %r9
00000001000101b8	subq	$0x1, %rdx
00000001000101bc	jb	0x1000101df
00000001000101be	movq	0x538(%rcx,%r9,8), %rcx
00000001000101c6	jmp	0x100010162
00000001000101c8	testq	%rcx, %rcx
00000001000101cb	je	0x1000101df
00000001000101cd	subq	%r10, %rcx
00000001000101d0	cmpb	$0x1, 0x6a(%rcx)
00000001000101d4	je	0x10001012d
00000001000101da	jmp	0x100010131
00000001000101df	movl	-0x17(%rbp), %eax
00000001000101e2	movl	-0x14(%rbp), %ecx
00000001000101e5	movl	%ecx, 0x4(%rdi)
00000001000101e8	movl	%eax, 0x1(%rdi)
00000001000101eb	movb	$0x12, (%rdi)
00000001000101ee	movq	$0x0, 0x8(%rdi)
00000001000101f6	popq	%rbx
00000001000101f7	popq	%r14
00000001000101f9	popq	%rbp
00000001000101fa	retq
00000001000101fb	nopl	(%rax,%rax)
__ZN5gimli4read4unit22EntriesCursor$LT$R$GT$10next_entry17h7d3f50c3d981e8aaE:
0000000100010200	pushq	%rbp
0000000100010201	movq	%rsp, %rbp
0000000100010204	pushq	%r15
0000000100010206	pushq	%r14
0000000100010208	pushq	%r13
000000010001020a	pushq	%r12
000000010001020c	pushq	%rbx
000000010001020d	subq	$0x68, %rsp
0000000100010211	movq	%rsi, %r14
0000000100010214	movq	0x20(%rsi), %rbx
0000000100010218	testq	%rbx, %rbx
000000010001021b	je	0x100010243
000000010001021d	cmpq	$0x0, 0x48(%r14)
0000000100010222	je	0x1000102e6
0000000100010228	movq	0x28(%r14), %rcx
000000010001022c	movq	0x50(%r14), %rax
0000000100010230	subq	%rax, %rcx
0000000100010233	jae	0x1000103a4
0000000100010239	movl	$0x13, %eax
000000010001023e	jmp	0x10001041b
0000000100010243	movq	0x8(%r14), %rcx
0000000100010247	testq	%rcx, %rcx
000000010001024a	je	0x100010453
0000000100010250	movq	(%r14), %rdx
0000000100010253	movq	0x10(%r14), %rax
0000000100010257	xorl	%esi, %esi
0000000100010259	cmpb	$0x8, 0x49(%rax)
000000010001025d	movq	0x38(%rax), %r8
0000000100010261	sete	%sil
0000000100010265	subq	0x30(%rax), %r8
0000000100010269	leaq	(%r8,%rsi,8), %rsi
000000010001026d	addq	%rdx, %rsi
0000000100010270	subq	0x28(%rax), %rsi
0000000100010274	movq	0x18(%r14), %r11
0000000100010278	addq	$0x4, %rsi
000000010001027c	leaq	(%rdx,%rcx), %r15
0000000100010280	movl	$0x1, %r8d
0000000100010286	subq	%rcx, %r8
0000000100010289	incq	%rdx
000000010001028c	xorl	%r9d, %r9d
000000010001028f	xorl	%ecx, %ecx
0000000100010291	nopw	%cs:(%rax,%rax)
000000010001029b	nopl	(%rax,%rax)
00000001000102a0	movzbl	-0x1(%rdx), %r10d
00000001000102a5	cmpl	$0x3f, %ecx
00000001000102a8	jne	0x1000102b4
00000001000102aa	cmpb	$0x2, %r10b
00000001000102ae	jae	0x1000103ac
00000001000102b4	movzbl	%r10b, %r10d
00000001000102b8	movl	%r10d, %ebx
00000001000102bb	andl	$0x7f, %ebx
00000001000102be	shlq	%cl, %rbx
00000001000102c1	orq	%rbx, %r9
00000001000102c4	testb	%r10b, %r10b
00000001000102c7	jns	0x1000103df
00000001000102cd	addl	$0x7, %ecx
00000001000102d0	incq	%r8
00000001000102d3	incq	%rdx
00000001000102d6	cmpq	$0x1, %r8
00000001000102da	jne	0x1000102a0
00000001000102dc	movl	$0x13, %ecx
00000001000102e1	jmp	0x1000103b1
00000001000102e6	movq	%rdi, -0x30(%rbp)
00000001000102ea	leaq	0x20(%r14), %r13
00000001000102ee	movq	0x28(%r14), %rax
00000001000102f2	movq	%rax, -0x38(%rbp)
00000001000102f6	movq	0x30(%r14), %rdi
00000001000102fa	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
00000001000102ff	movq	%rax, %r15
0000000100010302	movq	%rbx, -0x60(%rbp)
0000000100010306	movq	-0x38(%rbp), %rax
000000010001030a	movq	%rax, -0x58(%rbp)
000000010001030e	movq	%r15, -0x50(%rbp)
0000000100010312	movq	%rdx, -0x48(%rbp)
0000000100010316	movq	%r13, -0x40(%rbp)
000000010001031a	testq	%rdx, %rdx
000000010001031d	je	0x100010390
000000010001031f	movq	%rdx, %r12
0000000100010322	addq	$0x10, %r15
0000000100010326	decq	%r12
0000000100010329	leaq	-0x60(%rbp), %rbx
000000010001032d	leaq	-0x70(%rbp), %r13
0000000100010331	nopw	%cs:(%rax,%rax)
000000010001033b	nopl	(%rax,%rax)
0000000100010340	movq	-0x10(%r15), %rax
0000000100010344	movq	-0x8(%r15), %rcx
0000000100010348	movq	%rcx, -0x68(%rbp)
000000010001034c	movq	%rax, -0x70(%rbp)
0000000100010350	movq	-0x40(%rbp), %rax
0000000100010354	movq	0x18(%rax), %rax
0000000100010358	movl	0x48(%rax), %edx
000000010001035b	leaq	-0x90(%rbp), %rdi
0000000100010362	movq	%rbx, %rsi
0000000100010365	movq	%r13, %rcx
0000000100010368	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
000000010001036d	cmpl	$0x2e, -0x90(%rbp)
0000000100010374	je	0x10001040c
000000010001037a	movq	%r15, -0x50(%rbp)
000000010001037e	movq	%r12, -0x48(%rbp)
0000000100010382	addq	$0x10, %r15
0000000100010386	addq	$-0x1, %r12
000000010001038a	jb	0x100010340
000000010001038c	movq	-0x40(%rbp), %r13
0000000100010390	cmpq	$0x0, 0x28(%r13)
0000000100010395	je	0x100010424
000000010001039b	movq	-0x60(%rbp), %rbx
000000010001039f	jmp	0x10001043b
00000001000103a4	addq	%rax, %rbx
00000001000103a7	jmp	0x100010443
00000001000103ac	movl	$0x6, %ecx
00000001000103b1	leaq	0x33938(%rip), %rax
00000001000103b8	movq	%rax, (%r14)
00000001000103bb	movq	$0x0, 0x8(%r14)
00000001000103c3	movq	$0x0, 0x58(%r14)
00000001000103cb	movq	$0x0, 0x20(%r14)
00000001000103d3	movq	%rcx, (%rdi)
00000001000103d6	movq	%r15, 0x8(%rdi)
00000001000103da	jmp	0x100010468
00000001000103df	movq	%rdx, (%r14)
00000001000103e2	negq	%r8
00000001000103e5	movq	%r8, 0x8(%r14)
00000001000103e9	testq	%r9, %r9
00000001000103ec	je	0x100010477
00000001000103f2	leaq	-0x1(%r9), %rcx
00000001000103f6	cmpq	0x10(%r11), %rcx
00000001000103fa	jae	0x10001048e
0000000100010400	imulq	$0x70, %rcx, %r10
0000000100010404	addq	(%r11), %r10
0000000100010407	jmp	0x10001052d
000000010001040c	movq	-0x88(%rbp), %rax
0000000100010413	movq	-0x80(%rbp), %rbx
0000000100010417	movq	-0x30(%rbp), %rdi
000000010001041b	movq	%rax, (%rdi)
000000010001041e	movq	%rbx, 0x8(%rdi)
0000000100010422	jmp	0x100010468
0000000100010424	movq	-0x60(%rbp), %rbx
0000000100010428	movq	%rbx, %rax
000000010001042b	subq	(%r13), %rax
000000010001042f	movq	$0x1, 0x28(%r13)
0000000100010437	movq	%rax, 0x30(%r13)
000000010001043b	movq	-0x58(%rbp), %rcx
000000010001043f	movq	-0x30(%rbp), %rdi
0000000100010443	movq	%rbx, (%r14)
0000000100010446	movq	%rcx, 0x8(%r14)
000000010001044a	testq	%rcx, %rcx
000000010001044d	jne	0x100010250
0000000100010453	movq	$0x0, 0x20(%r14)
000000010001045b	movq	$0x0, 0x58(%r14)
0000000100010463	movw	$0x4b, (%rdi)
0000000100010468	addq	$0x68, %rsp
000000010001046c	popq	%rbx
000000010001046d	popq	%r12
000000010001046f	popq	%r13
0000000100010471	popq	%r14
0000000100010473	popq	%r15
0000000100010475	popq	%rbp
0000000100010476	retq
0000000100010477	movq	$-0x1, 0x58(%r14)
000000010001047f	movq	$0x0, 0x20(%r14)
0000000100010487	movw	$0x14b, (%rdi)                  ## imm = 0x14B
000000010001048c	jmp	0x100010468
000000010001048e	movq	0x18(%r11), %r10
0000000100010492	movl	$0x12, %ecx
0000000100010497	testq	%r10, %r10
000000010001049a	je	0x100010561
00000001000104a0	movq	%rdi, -0x30(%rbp)
00000001000104a4	movq	0x20(%r11), %rdi
00000001000104a8	movq	%rdi, -0x38(%rbp)
00000001000104ac	movl	$0xff, %ebx
00000001000104b1	movzwl	0x532(%r10), %r11d
00000001000104b9	movq	%r11, %rdi
00000001000104bc	imulq	$0x70, %r11, %r13
00000001000104c0	movq	$-0x1, %r15
00000001000104c7	movl	$0x70, %r12d
00000001000104cd	nopl	(%rax)
00000001000104d0	leaq	(%r13,%r12), %r11
00000001000104d5	cmpq	$0x70, %r11
00000001000104d9	je	0x100010506
00000001000104db	xorl	%r11d, %r11d
00000001000104de	cmpq	%r9, 0x4e0(%r10,%r15,8)
00000001000104e6	setne	%r11b
00000001000104ea	cmoval	%ebx, %r11d
00000001000104ee	incq	%r15
00000001000104f1	addq	$-0x70, %r12
00000001000104f5	cmpb	$0x1, %r11b
00000001000104f9	je	0x1000104d0
00000001000104fb	movzbl	%r11b, %r11d
00000001000104ff	testl	%r11d, %r11d
0000000100010502	je	0x100010521
0000000100010504	jmp	0x100010509
0000000100010506	movq	%rdi, %r15
0000000100010509	movq	-0x38(%rbp), %rdi
000000010001050d	subq	$0x1, %rdi
0000000100010511	jb	0x100010575
0000000100010513	movq	%rdi, -0x38(%rbp)
0000000100010517	movq	0x538(%r10,%r15,8), %r10
000000010001051f	jmp	0x1000104b1
0000000100010521	testq	%r10, %r10
0000000100010524	je	0x100010569
0000000100010526	subq	%r12, %r10
0000000100010529	movq	-0x30(%rbp), %rdi
000000010001052d	xorl	%ecx, %ecx
000000010001052f	cmpb	$0x1, 0x6a(%r10)
0000000100010534	sete	%cl
0000000100010537	movq	%rcx, 0x58(%r14)
000000010001053b	movq	%rdx, 0x20(%r14)
000000010001053f	movq	%r8, 0x28(%r14)
0000000100010543	movq	%r10, 0x30(%r14)
0000000100010547	movq	%rax, 0x38(%r14)
000000010001054b	movq	%rsi, 0x40(%r14)
000000010001054f	movq	$0x0, 0x48(%r14)
0000000100010557	movw	$0x14b, (%rdi)                  ## imm = 0x14B
000000010001055c	jmp	0x100010468
0000000100010561	xorl	%r15d, %r15d
0000000100010564	jmp	0x1000103b1
0000000100010569	xorl	%r15d, %r15d
000000010001056c	movq	-0x30(%rbp), %rdi
0000000100010570	jmp	0x1000103b1
0000000100010575	movq	-0x30(%rbp), %rdi
0000000100010579	xorl	%r15d, %r15d
000000010001057c	jmp	0x1000103b1
0000000100010581	nopw	%cs:(%rax,%rax)
000000010001058b	nopl	(%rax,%rax)
__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$11udata_value17hd3c171e63a34ef56E:
0000000100010590	pushq	%rbp
0000000100010591	movq	%rsp, %rbp
0000000100010594	movq	(%rdi), %rax
0000000100010597	addq	$-0x2, %rax
000000010001059b	cmpq	$0x5, %rax
000000010001059f	ja	0x1000105ec
00000001000105a1	leaq	0x48(%rip), %rcx
00000001000105a8	movslq	(%rcx,%rax,4), %rax
00000001000105ac	addq	%rcx, %rax
00000001000105af	jmpq	*%rax
00000001000105b1	movq	0x8(%rdi), %rdx
00000001000105b5	movl	$0x1, %eax
00000001000105ba	popq	%rbp
00000001000105bb	retq
00000001000105bc	movzbl	0x8(%rdi), %edx
00000001000105c0	movl	$0x1, %eax
00000001000105c5	popq	%rbp
00000001000105c6	retq
00000001000105c7	movzwl	0x8(%rdi), %edx
00000001000105cb	movl	$0x1, %eax
00000001000105d0	popq	%rbp
00000001000105d1	retq
00000001000105d2	movl	0x8(%rdi), %edx
00000001000105d5	movl	$0x1, %eax
00000001000105da	popq	%rbp
00000001000105db	retq
00000001000105dc	movq	0x8(%rdi), %rdx
00000001000105e0	movl	$0x1, %eax
00000001000105e5	testq	%rdx, %rdx
00000001000105e8	js	0x1000105ec
00000001000105ea	popq	%rbp
00000001000105eb	retq
00000001000105ec	xorl	%eax, %eax
00000001000105ee	popq	%rbp
00000001000105ef	retq
00000001000105f0	int3
00000001000105f1	.byte 0xff #bad opcode
00000001000105f2	.byte 0xff #bad opcode
00000001000105f3	callq	*%rdi
00000001000105f5	.byte 0xff #bad opcode
00000001000105f6	.byte 0xff #bad opcode
00000001000105f7	jmpq	*%rdx
00000001000105f9	.byte 0xff #bad opcode
00000001000105fa	.byte 0xff #bad opcode
00000001000105fb	incl	%ecx
00000001000105fd	.byte 0xff #bad opcode
00000001000105fe	.byte 0xff #bad opcode
00000001000105ff	.byte 0xff #bad opcode
0000000100010600	inb	%dx, %al
0000000100010601	.byte 0xff #bad opcode
0000000100010602	.byte 0xff #bad opcode
0000000100010603	incl	%ecx
0000000100010605	.byte 0xff #bad opcode
0000000100010606	.byte 0xff #bad opcode
0000000100010607	decl	(%rdi)
0000000100010609	.byte 0x1f #bad opcode
000000010001060a	testb	%al, (%rax)
000000010001060c	addb	%al, (%rax)
000000010001060e	addb	%al, (%rax)
__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$8u8_value17hcc8bfbd91f5ac42bE:
0000000100010610	pushq	%rbp
0000000100010611	movq	%rsp, %rbp
0000000100010614	movq	(%rdi), %rax
0000000100010617	addq	$-0x2, %rax
000000010001061b	cmpq	$0x5, %rax
000000010001061f	ja	0x10001065b
0000000100010621	leaq	0x44(%rip), %rcx
0000000100010628	movslq	(%rcx,%rax,4), %rax
000000010001062c	addq	%rcx, %rax
000000010001062f	jmpq	*%rax
0000000100010631	movq	0x8(%rdi), %rdx
0000000100010635	movb	$0x1, %cl
0000000100010637	jmp	0x10001065d
0000000100010639	movzbl	0x8(%rdi), %edx
000000010001063d	movb	$0x1, %cl
000000010001063f	jmp	0x10001065d
0000000100010641	movzwl	0x8(%rdi), %edx
0000000100010645	movb	$0x1, %cl
0000000100010647	jmp	0x10001065d
0000000100010649	movl	0x8(%rdi), %edx
000000010001064c	movb	$0x1, %cl
000000010001064e	jmp	0x10001065d
0000000100010650	movq	0x8(%rdi), %rdx
0000000100010654	movb	$0x1, %cl
0000000100010656	testq	%rdx, %rdx
0000000100010659	jns	0x10001065d
000000010001065b	xorl	%ecx, %ecx
000000010001065d	cmpq	$0x100, %rdx                    ## imm = 0x100
0000000100010664	setb	%al
0000000100010667	andb	%cl, %al
0000000100010669	popq	%rbp
000000010001066a	retq
000000010001066b	nop
000000010001066c	int	$0xff
000000010001066e	.byte 0xff #bad opcode
000000010001066f	callq	*%rbp
0000000100010671	.byte 0xff #bad opcode
0000000100010672	.byte 0xff #bad opcode
0000000100010673	.byte 0xff #bad opcode
0000000100010674	.byte 0xdd #bad opcode
0000000100010675	.byte 0xff #bad opcode
0000000100010676	.byte 0xff #bad opcode
0000000100010677	incl	%ebp
0000000100010679	.byte 0xff #bad opcode
000000010001067a	.byte 0xff #bad opcode
000000010001067b	jmpq	*%rsp
000000010001067d	.byte 0xff #bad opcode
000000010001067e	.byte 0xff #bad opcode
000000010001067f	incl	%ebp
0000000100010681	.byte 0xff #bad opcode
0000000100010682	.byte 0xff #bad opcode
0000000100010683	jmpq	*0x2e(%rsi)
0000000100010686	nopl	(%rax,%rax)
000000010001068e	nop
__ZN5gimli4read4unit32AttributeValue$LT$R$C$Offset$GT$9u16_value17h28fbd7613f735487E:
0000000100010690	pushq	%rbp
0000000100010691	movq	%rsp, %rbp
0000000100010694	movq	(%rdi), %rax
0000000100010697	addq	$-0x2, %rax
000000010001069b	cmpq	$0x5, %rax
000000010001069f	ja	0x1000106db
00000001000106a1	leaq	0x48(%rip), %rcx
00000001000106a8	movslq	(%rcx,%rax,4), %rax
00000001000106ac	addq	%rcx, %rax
00000001000106af	jmpq	*%rax
00000001000106b1	movq	0x8(%rdi), %rdx
00000001000106b5	movb	$0x1, %al
00000001000106b7	jmp	0x1000106dd
00000001000106b9	movzbl	0x8(%rdi), %edx
00000001000106bd	movb	$0x1, %al
00000001000106bf	jmp	0x1000106dd
00000001000106c1	movzwl	0x8(%rdi), %edx
00000001000106c5	movb	$0x1, %al
00000001000106c7	jmp	0x1000106dd
00000001000106c9	movl	0x8(%rdi), %edx
00000001000106cc	movb	$0x1, %al
00000001000106ce	jmp	0x1000106dd
00000001000106d0	movq	0x8(%rdi), %rdx
00000001000106d4	movb	$0x1, %al
00000001000106d6	testq	%rdx, %rdx
00000001000106d9	jns	0x1000106dd
00000001000106db	xorl	%eax, %eax
00000001000106dd	cmpq	$0x10000, %rdx                  ## imm = 0x10000
00000001000106e4	setb	%cl
00000001000106e7	andb	%al, %cl
00000001000106e9	movzbl	%cl, %eax
00000001000106ec	popq	%rbp
00000001000106ed	retq
00000001000106ee	nop
00000001000106f0	leave
00000001000106f1	.byte 0xff #bad opcode
00000001000106f2	.byte 0xff #bad opcode
00000001000106f3	callq	*%rcx
00000001000106f5	.byte 0xff #bad opcode
00000001000106f6	.byte 0xff #bad opcode
00000001000106f7	.byte 0xff #bad opcode
00000001000106f8	fcos
00000001000106fa	.byte 0xff #bad opcode
00000001000106fb	incl	%ecx
00000001000106fd	.byte 0xff #bad opcode
00000001000106fe	.byte 0xff #bad opcode
00000001000106ff	jmpq	*%rax
0000000100010701	.byte 0xff #bad opcode
0000000100010702	.byte 0xff #bad opcode
0000000100010703	incl	%ecx
0000000100010705	.byte 0xff #bad opcode
0000000100010706	.byte 0xff #bad opcode
0000000100010707	decl	(%rdi)
0000000100010709	.byte 0x1f #bad opcode
000000010001070a	testb	%al, (%rax)
000000010001070c	addb	%al, (%rax)
000000010001070e	addb	%al, (%rax)
__ZN5gimli4read4unit33DebugInfoUnitHeadersIter$LT$R$GT$4next17h8b6fac7ca58410afE:
0000000100010710	pushq	%rbp
0000000100010711	movq	%rsp, %rbp
0000000100010714	pushq	%r15
0000000100010716	pushq	%r14
0000000100010718	pushq	%r13
000000010001071a	pushq	%r12
000000010001071c	pushq	%rbx
000000010001071d	subq	$0x88, %rsp
0000000100010724	movq	0x8(%rsi), %rcx
0000000100010728	testq	%rcx, %rcx
000000010001072b	je	0x100010774
000000010001072d	movq	(%rsi), %r15
0000000100010730	cmpq	$0x4, %rcx
0000000100010734	jb	0x100010780
0000000100010736	movzbl	0x10(%rsi), %r10d
000000010001073b	movzwl	0x15(%rsi), %r9d
0000000100010740	movzbl	0x17(%rsi), %r14d
0000000100010745	movl	0x11(%rsi), %edx
0000000100010748	leaq	-0x4(%rcx), %r8
000000010001074c	leaq	0x4(%r15), %r12
0000000100010750	movq	%r12, (%rsi)
0000000100010753	movq	%r8, 0x8(%rsi)
0000000100010757	movl	(%r15), %r11d
000000010001075a	cmpl	$-0x11, %r11d
000000010001075e	jbe	0x1000107dd
0000000100010760	cmpl	$-0x1, %r11d
0000000100010764	je	0x100010869
000000010001076a	movl	$0x10, %r13d
0000000100010770	xorl	%eax, %eax
0000000100010772	jmp	0x10001078f
0000000100010774	movq	$0x2, (%rdi)
000000010001077b	jmp	0x10001091b
0000000100010780	movq	%r15, %rax
0000000100010783	andq	$-0x100, %rax
0000000100010789	movl	$0x13, %r13d
000000010001078f	movq	%r13, %rcx
0000000100010792	shrq	$0x8, %rcx
0000000100010796	movq	%rcx, %xmm0
000000010001079b	movdqa	%xmm0, -0x120(%rbp)
00000001000107a3	movzbl	-0x11a(%rbp), %r9d
00000001000107ab	movzbl	-0x11b(%rbp), %ecx
00000001000107b2	movzbl	-0x11c(%rbp), %r8d
00000001000107ba	movzbl	-0x11d(%rbp), %r10d
00000001000107c2	movzbl	-0x11e(%rbp), %r11d
00000001000107ca	movzbl	-0x120(%rbp), %edx
00000001000107d1	movzbl	-0x11f(%rbp), %ebx
00000001000107d8	jmp	0x1000108b3
00000001000107dd	movl	%r11d, %ebx
00000001000107e0	movb	$0x4, %r15b
00000001000107e3	subq	%rbx, %r8
00000001000107e6	jb	0x100010892
00000001000107ec	leaq	(%r12,%rbx), %rax
00000001000107f0	movq	%rax, (%rsi)
00000001000107f3	movq	%r8, 0x8(%rsi)
00000001000107f7	cmpq	$0x1, %rbx
00000001000107fb	jbe	0x100010892
0000000100010801	movb	%r15b, -0x49(%rbp)
0000000100010805	movl	%r14d, -0x128(%rbp)
000000010001080c	movb	%r10b, -0x4a(%rbp)
0000000100010810	leaq	-0x2(%rbx), %r13
0000000100010814	leaq	0x2(%r12), %r15
0000000100010819	movzbl	(%r12), %r10d
000000010001081e	movzbl	0x1(%r12), %eax
0000000100010824	shlq	$0x8, %rax
0000000100010828	leal	(%rax,%r10), %r14d
000000010001082c	movq	%r10, -0x78(%rbp)
0000000100010830	leal	-0x2(%rax,%r10), %r10d
0000000100010835	cmpw	$0x3, %r10w
000000010001083a	jae	0x100010964
0000000100010840	cmpl	$-0x10, %r11d
0000000100010844	jb	0x10001098b
000000010001084a	cmpq	$0x7, %r13
000000010001084e	jbe	0x100010a8c
0000000100010854	leaq	-0xa(%rbx), %r13
0000000100010858	movq	0x2(%r12), %rax
000000010001085d	addq	$0xa, %r12
0000000100010861	movq	%r12, %r15
0000000100010864	jmp	0x1000109bf
0000000100010869	cmpq	$0x8, %r8
000000010001086d	jb	0x10001092d
0000000100010873	leaq	-0xc(%rcx), %r8
0000000100010877	leaq	0xc(%r15), %r12
000000010001087b	movq	%r12, (%rsi)
000000010001087e	movq	%r8, 0x8(%rsi)
0000000100010882	movq	0x4(%r15), %rbx
0000000100010886	movb	$0x8, %r15b
0000000100010889	subq	%rbx, %r8
000000010001088c	jae	0x1000107ec
0000000100010892	movq	%r12, %rax
0000000100010895	andq	$-0x100, %rax
000000010001089b	movb	$0x13, %r13b
000000010001089e	xorl	%edx, %edx
00000001000108a0	xorl	%ebx, %ebx
00000001000108a2	xorl	%r11d, %r11d
00000001000108a5	xorl	%r10d, %r10d
00000001000108a8	xorl	%r8d, %r8d
00000001000108ab	xorl	%ecx, %ecx
00000001000108ad	xorl	%r9d, %r9d
00000001000108b0	movl	%r12d, %r15d
00000001000108b3	andq	$-0x100, %rax
00000001000108b9	movzbl	%r15b, %r14d
00000001000108bd	orq	%rax, %r14
00000001000108c0	leaq	0x33429(%rip), %rax
00000001000108c7	movq	%rax, (%rsi)
00000001000108ca	movq	$0x0, 0x8(%rsi)
00000001000108d2	movb	%r13b, 0x8(%rdi)
00000001000108d6	movb	%r9b, 0xf(%rdi)
00000001000108da	movzbl	%r11b, %eax
00000001000108de	movzbl	%r10b, %esi
00000001000108e2	shll	$0x8, %esi
00000001000108e5	orl	%eax, %esi
00000001000108e7	movzbl	%dl, %eax
00000001000108ea	movzbl	%bl, %edx
00000001000108ed	shll	$0x8, %edx
00000001000108f0	orl	%eax, %edx
00000001000108f2	movd	%edx, %xmm0
00000001000108f6	pinsrw	$0x1, %esi, %xmm0
00000001000108fb	movd	%xmm0, 0x9(%rdi)
0000000100010900	movzbl	%r8b, %eax
0000000100010904	movzbl	%cl, %ecx
0000000100010907	shll	$0x8, %ecx
000000010001090a	orl	%eax, %ecx
000000010001090c	movw	%cx, 0xd(%rdi)
0000000100010910	movq	%r14, 0x10(%rdi)
0000000100010914	movq	$0x3, (%rdi)
000000010001091b	addq	$0x88, %rsp
0000000100010922	popq	%rbx
0000000100010923	popq	%r12
0000000100010925	popq	%r13
0000000100010927	popq	%r14
0000000100010929	popq	%r15
000000010001092b	popq	%rbp
000000010001092c	retq
000000010001092d	movb	$0x0, -0x32(%rbp)
0000000100010931	movw	$0x0, -0x34(%rbp)
0000000100010937	movl	$0x0, -0x38(%rbp)
000000010001093e	movq	%r12, -0x31(%rbp)
0000000100010942	movq	-0x38(%rbp), %r15
0000000100010946	andq	$-0x100, %r12
000000010001094d	movq	%r15, %r13
0000000100010950	shlq	$0x8, %r13
0000000100010954	shrq	$0x38, %r15
0000000100010958	orq	$0x13, %r13
000000010001095c	movq	%r12, %rax
000000010001095f	jmp	0x10001078f
0000000100010964	cmpw	$0x5, %r14w
0000000100010969	jne	0x100010a5d
000000010001096f	testq	%r13, %r13
0000000100010972	je	0x100010a69
0000000100010978	cmpq	$0x3, %rbx
000000010001097c	jne	0x100010b6e
0000000100010982	addq	$0x3, %r12
0000000100010986	jmp	0x100010892
000000010001098b	cmpq	$0x4, %r13
000000010001098f	jb	0x100010afd
0000000100010995	leaq	-0x6(%rbx), %r13
0000000100010999	leaq	0x6(%r12), %r15
000000010001099e	movzwl	0x3(%r12), %eax
00000001000109a4	movzbl	0x2(%r12), %r10d
00000001000109aa	movzbl	0x5(%r12), %r11d
00000001000109b0	movb	%r10b, -0x35(%rbp)
00000001000109b4	movb	%r11b, -0x32(%rbp)
00000001000109b8	movw	%ax, -0x34(%rbp)
00000001000109bc	movl	-0x35(%rbp), %eax
00000001000109bf	testq	%r13, %r13
00000001000109c2	je	0x100010a69
00000001000109c8	movl	%r14d, %r10d
00000001000109cb	movq	%rax, -0x70(%rbp)
00000001000109cf	decq	%r13
00000001000109d2	movzbl	(%r15), %eax
00000001000109d6	movb	%al, -0x78(%rbp)
00000001000109d9	incq	%r15
00000001000109dc	xorl	%eax, %eax
00000001000109de	movq	%r13, %r12
00000001000109e1	subq	%r8, %rcx
00000001000109e4	addq	%rcx, 0x10(%rsi)
00000001000109e8	movl	-0x128(%rbp), %ecx
00000001000109ee	shll	$0x10, %ecx
00000001000109f1	orl	%ecx, %r9d
00000001000109f4	shlq	$0x20, %r9
00000001000109f8	orq	%r9, %rdx
00000001000109fb	movq	$0x0, (%rdi)
0000000100010a02	movzbl	-0x4a(%rbp), %ecx
0000000100010a06	movb	%cl, 0x8(%rdi)
0000000100010a09	movq	%rdx, %rcx
0000000100010a0c	shrq	$0x30, %rcx
0000000100010a10	movb	%cl, 0xf(%rdi)
0000000100010a13	movq	%rdx, %rcx
0000000100010a16	shrq	$0x20, %rcx
0000000100010a1a	movw	%cx, 0xd(%rdi)
0000000100010a1e	movl	%edx, 0x9(%rdi)
0000000100010a21	movq	%rax, 0x10(%rdi)
0000000100010a25	movq	-0x68(%rbp), %rax
0000000100010a29	movq	%rax, 0x18(%rdi)
0000000100010a2d	movq	%r13, 0x20(%rdi)
0000000100010a31	movq	%r15, 0x28(%rdi)
0000000100010a35	movq	%r12, 0x30(%rdi)
0000000100010a39	movq	%rbx, 0x38(%rdi)
0000000100010a3d	movq	-0x70(%rbp), %rax
0000000100010a41	movq	%rax, 0x40(%rdi)
0000000100010a45	movzbl	-0x78(%rbp), %eax
0000000100010a49	movb	%al, 0x48(%rdi)
0000000100010a4c	movzbl	-0x49(%rbp), %eax
0000000100010a50	movb	%al, 0x49(%rdi)
0000000100010a53	movw	%r10w, 0x4a(%rdi)
0000000100010a58	jmp	0x10001091b
0000000100010a5d	movb	$0x11, %r13b
0000000100010a60	movq	-0x78(%rbp), %r15
0000000100010a64	jmp	0x1000108b3
0000000100010a69	movq	%r15, %rax
0000000100010a6c	andq	$-0x100, %rax
0000000100010a72	movb	$0x13, %r13b
0000000100010a75	xorl	%edx, %edx
0000000100010a77	xorl	%ebx, %ebx
0000000100010a79	xorl	%r11d, %r11d
0000000100010a7c	xorl	%r10d, %r10d
0000000100010a7f	xorl	%r8d, %r8d
0000000100010a82	xorl	%ecx, %ecx
0000000100010a84	xorl	%r9d, %r9d
0000000100010a87	jmp	0x1000108b3
0000000100010a8c	movb	$0x0, -0x32(%rbp)
0000000100010a90	movw	$0x0, -0x34(%rbp)
0000000100010a96	movl	$0x0, -0x38(%rbp)
0000000100010a9d	movq	%r15, -0x31(%rbp)
0000000100010aa1	movq	-0x38(%rbp), %rax
0000000100010aa5	movq	%rax, %xmm0
0000000100010aaa	movl	-0x30(%rbp), %ecx
0000000100010aad	movl	-0x2d(%rbp), %edx
0000000100010ab0	movl	%ecx, -0x40(%rbp)
0000000100010ab3	movl	%edx, -0x3d(%rbp)
0000000100010ab6	movq	%rax, -0x48(%rbp)
0000000100010aba	movdqa	%xmm0, -0xb0(%rbp)
0000000100010ac2	movzbl	-0xaa(%rbp), %r9d
0000000100010aca	movzbl	-0xab(%rbp), %ecx
0000000100010ad1	movzbl	-0xac(%rbp), %r8d
0000000100010ad9	movzbl	-0xad(%rbp), %r10d
0000000100010ae1	movzbl	-0xae(%rbp), %r11d
0000000100010ae9	movzbl	-0xb0(%rbp), %edx
0000000100010af0	movzbl	-0xaf(%rbp), %ebx
0000000100010af7	movq	-0x41(%rbp), %r15
0000000100010afb	jmp	0x100010b5d
0000000100010afd	movl	$0x0, -0x38(%rbp)
0000000100010b04	movb	$0x0, -0x32(%rbp)
0000000100010b08	movw	$0x0, -0x34(%rbp)
0000000100010b0e	movl	-0x35(%rbp), %eax
0000000100010b11	movl	%eax, -0x45(%rbp)
0000000100010b14	movl	$0x0, -0x48(%rbp)
0000000100010b1b	movq	-0x48(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100010b20	movdqa	%xmm0, -0xc0(%rbp)
0000000100010b28	movzbl	-0xba(%rbp), %r9d
0000000100010b30	movzbl	-0xbb(%rbp), %ecx
0000000100010b37	movzbl	-0xbc(%rbp), %r8d
0000000100010b3f	movzbl	-0xbd(%rbp), %r10d
0000000100010b47	movzbl	-0xbe(%rbp), %r11d
0000000100010b4f	movzbl	-0xc0(%rbp), %edx
0000000100010b56	movzbl	-0xbf(%rbp), %ebx
0000000100010b5d	movq	%r15, %rax
0000000100010b60	andq	$-0x100, %rax
0000000100010b66	movb	$0x13, %r13b
0000000100010b69	jmp	0x1000108b3
0000000100010b6e	movl	%r14d, %r10d
0000000100010b71	movzbl	0x2(%r12), %r13d
0000000100010b77	leaq	-0x4(%rbx), %r14
0000000100010b7b	leaq	0x4(%r12), %r15
0000000100010b80	movzbl	0x3(%r12), %eax
0000000100010b86	movb	%al, -0x78(%rbp)
0000000100010b89	cmpl	$-0x10, %r11d
0000000100010b8d	movl	%r10d, -0x124(%rbp)
0000000100010b94	movq	%r13, -0x70(%rbp)
0000000100010b98	jb	0x100010bc0
0000000100010b9a	cmpq	$0x7, %r14
0000000100010b9e	jbe	0x100010bfd
0000000100010ba0	leaq	-0xc(%rbx), %rax
0000000100010ba4	movq	%rax, -0x60(%rbp)
0000000100010ba8	movq	0x4(%r12), %rax
0000000100010bad	addq	$0xc, %r12
0000000100010bb1	movq	%rax, -0x41(%rbp)
0000000100010bb5	movb	$0x4b, %r13b
0000000100010bb8	movq	%r12, %r15
0000000100010bbb	jmp	0x100010c5c
0000000100010bc0	cmpq	$0x4, %r14
0000000100010bc4	jb	0x100010c33
0000000100010bc6	leaq	-0x8(%rbx), %rax
0000000100010bca	movq	%rax, -0x60(%rbp)
0000000100010bce	leaq	0x8(%r12), %r15
0000000100010bd3	movzwl	0x5(%r12), %eax
0000000100010bd9	movzbl	0x4(%r12), %r10d
0000000100010bdf	movzbl	0x7(%r12), %r14d
0000000100010be5	movb	%r10b, -0x35(%rbp)
0000000100010be9	movb	%r14b, -0x32(%rbp)
0000000100010bed	movw	%ax, -0x34(%rbp)
0000000100010bf1	movl	-0x35(%rbp), %eax
0000000100010bf4	movb	$0x4b, %r13b
0000000100010bf7	movq	%rax, -0x41(%rbp)
0000000100010bfb	jmp	0x100010c5c
0000000100010bfd	movq	%r14, -0x60(%rbp)
0000000100010c01	movb	$0x0, -0x32(%rbp)
0000000100010c05	movw	$0x0, -0x34(%rbp)
0000000100010c0b	movl	$0x0, -0x38(%rbp)
0000000100010c12	movq	%r15, -0x31(%rbp)
0000000100010c16	movq	-0x38(%rbp), %rax
0000000100010c1a	movl	-0x30(%rbp), %r10d
0000000100010c1e	movl	-0x2d(%rbp), %r14d
0000000100010c22	movl	%r10d, -0x40(%rbp)
0000000100010c26	movl	%r14d, -0x3d(%rbp)
0000000100010c2a	movq	%rax, -0x48(%rbp)
0000000100010c2e	movb	$0x13, %r13b
0000000100010c31	jmp	0x100010c5c
0000000100010c33	movq	%r14, -0x60(%rbp)
0000000100010c37	movl	$0x0, -0x38(%rbp)
0000000100010c3e	movb	$0x0, -0x32(%rbp)
0000000100010c42	movw	$0x0, -0x34(%rbp)
0000000100010c48	movl	-0x35(%rbp), %eax
0000000100010c4b	movl	%eax, -0x45(%rbp)
0000000100010c4e	movl	$0x0, -0x48(%rbp)
0000000100010c55	movb	$0x13, %r13b
0000000100010c58	movq	%r15, -0x41(%rbp)
0000000100010c5c	cmpb	$0x4b, %r13b
0000000100010c60	jne	0x100010cf1
0000000100010c66	xorl	%eax, %eax
0000000100010c68	movq	-0x70(%rbp), %r14
0000000100010c6c	decl	%r14d
0000000100010c6f	cmpl	$0x5, %r14d
0000000100010c73	ja	0x100010d95
0000000100010c79	movq	-0x41(%rbp), %r10
0000000100010c7d	movq	%r10, -0x70(%rbp)
0000000100010c81	leaq	0x52c(%rip), %r10
0000000100010c88	movslq	(%r10,%r14,4), %r14
0000000100010c8c	addq	%r10, %r14
0000000100010c8f	movl	-0x124(%rbp), %r10d
0000000100010c96	movq	-0x60(%rbp), %r12
0000000100010c9a	jmpq	*%r14
0000000100010c9d	cmpq	$0x7, %r12
0000000100010ca1	jbe	0x100010df1
0000000100010ca7	addq	$-0x8, %r12
0000000100010cab	leaq	0x8(%r15), %rax
0000000100010caf	movq	%rax, -0x58(%rbp)
0000000100010cb3	movq	(%r15), %rax
0000000100010cb6	cmpl	$-0x10, %r11d
0000000100010cba	movq	%rax, -0x68(%rbp)
0000000100010cbe	movl	%r10d, %r14d
0000000100010cc1	jb	0x100010fb9
0000000100010cc7	cmpq	$0x7, %r12
0000000100010ccb	jbe	0x100011039
0000000100010cd1	movq	-0x60(%rbp), %r12
0000000100010cd5	addq	$-0x10, %r12
0000000100010cd9	movq	0x8(%r15), %rax
0000000100010cdd	addq	$0x10, %r15
0000000100010ce1	movq	%rax, -0x41(%rbp)
0000000100010ce5	movb	$0x4b, %r13b
0000000100010ce8	movq	%r15, -0x58(%rbp)
0000000100010cec	jmp	0x1000110d1
0000000100010cf1	movq	-0x48(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100010cf6	movdqa	%xmm0, -0x110(%rbp)
0000000100010cfe	movzbl	-0x10a(%rbp), %r9d
0000000100010d06	movzbl	-0x10b(%rbp), %ecx
0000000100010d0d	movzbl	-0x10c(%rbp), %r8d
0000000100010d15	movzbl	-0x10d(%rbp), %r10d
0000000100010d1d	movzbl	-0x10e(%rbp), %r11d
0000000100010d25	movzbl	-0x110(%rbp), %edx
0000000100010d2c	movzbl	-0x10f(%rbp), %ebx
0000000100010d33	movq	-0x41(%rbp), %r15
0000000100010d37	movq	%r15, %rax
0000000100010d3a	andq	$-0x100, %rax
0000000100010d40	jmp	0x1000108b3
0000000100010d45	movl	$0x2, %eax
0000000100010d4a	jmp	0x1000109e1
0000000100010d4f	cmpq	$0x7, %r12
0000000100010d53	jbe	0x100010e61
0000000100010d59	addq	$-0x8, %r12
0000000100010d5d	movq	(%r15), %rax
0000000100010d60	movq	%rax, -0x68(%rbp)
0000000100010d64	addq	$0x8, %r15
0000000100010d68	movl	$0x3, %eax
0000000100010d6d	jmp	0x1000109e1
0000000100010d72	cmpq	$0x7, %r12
0000000100010d76	jbe	0x100010ed5
0000000100010d7c	addq	$-0x8, %r12
0000000100010d80	movq	(%r15), %rax
0000000100010d83	movq	%rax, -0x68(%rbp)
0000000100010d87	addq	$0x8, %r15
0000000100010d8b	movl	$0x4, %eax
0000000100010d90	jmp	0x1000109e1
0000000100010d95	movb	$0x3f, %r13b
0000000100010d98	jmp	0x1000108b3
0000000100010d9d	cmpq	$0x7, %r12
0000000100010da1	jbe	0x100010f49
0000000100010da7	addq	$-0x8, %r12
0000000100010dab	leaq	0x8(%r15), %rax
0000000100010daf	movq	%rax, -0x58(%rbp)
0000000100010db3	movq	(%r15), %rax
0000000100010db6	cmpl	$-0x10, %r11d
0000000100010dba	movq	%rax, -0x68(%rbp)
0000000100010dbe	movl	%r10d, %r14d
0000000100010dc1	jb	0x100010ff9
0000000100010dc7	cmpq	$0x7, %r12
0000000100010dcb	jbe	0x10001106f
0000000100010dd1	movq	-0x60(%rbp), %r12
0000000100010dd5	addq	$-0x10, %r12
0000000100010dd9	movq	0x8(%r15), %rax
0000000100010ddd	addq	$0x10, %r15
0000000100010de1	movq	%rax, -0x41(%rbp)
0000000100010de5	movb	$0x4b, %r13b
0000000100010de8	movq	%r15, -0x58(%rbp)
0000000100010dec	jmp	0x100011152
0000000100010df1	movb	$0x0, -0x32(%rbp)
0000000100010df5	movw	$0x0, -0x34(%rbp)
0000000100010dfb	movl	$0x0, -0x38(%rbp)
0000000100010e02	movq	%r15, -0x31(%rbp)
0000000100010e06	movq	-0x38(%rbp), %rax
0000000100010e0a	movq	%rax, %xmm0
0000000100010e0f	movl	-0x30(%rbp), %ecx
0000000100010e12	movl	-0x2d(%rbp), %edx
0000000100010e15	movl	%ecx, -0x40(%rbp)
0000000100010e18	movl	%edx, -0x3d(%rbp)
0000000100010e1b	movq	%rax, -0x48(%rbp)
0000000100010e1f	movdqa	%xmm0, -0xe0(%rbp)
0000000100010e27	movzbl	-0xda(%rbp), %r9d
0000000100010e2f	movzbl	-0xdb(%rbp), %ecx
0000000100010e36	movzbl	-0xdc(%rbp), %r8d
0000000100010e3e	movzbl	-0xdd(%rbp), %r10d
0000000100010e46	movzbl	-0xde(%rbp), %r11d
0000000100010e4e	movzbl	-0xe0(%rbp), %edx
0000000100010e55	movzbl	-0xdf(%rbp), %ebx
0000000100010e5c	jmp	0x100010af7
0000000100010e61	movb	$0x0, -0x32(%rbp)
0000000100010e65	movw	$0x0, -0x34(%rbp)
0000000100010e6b	movl	$0x0, -0x38(%rbp)
0000000100010e72	movq	%r15, -0x31(%rbp)
0000000100010e76	movq	-0x38(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100010e7b	andq	$-0x100, %r15
0000000100010e82	movdqa	%xmm0, -0x90(%rbp)
0000000100010e8a	movzbl	-0x8a(%rbp), %r9d
0000000100010e92	movzbl	-0x8b(%rbp), %ecx
0000000100010e99	movzbl	-0x8c(%rbp), %r8d
0000000100010ea1	movzbl	-0x8d(%rbp), %r10d
0000000100010ea9	movzbl	-0x8e(%rbp), %r11d
0000000100010eb1	movzbl	-0x90(%rbp), %edx
0000000100010eb8	movzbl	-0x8f(%rbp), %ebx
0000000100010ebf	movb	$0x13, %r13b
0000000100010ec2	movq	%r15, %rax
0000000100010ec5	movzbl	-0x89(%rbp), %r14d
0000000100010ecd	movl	%r14d, %r15d
0000000100010ed0	jmp	0x1000108b3
0000000100010ed5	movb	$0x0, -0x32(%rbp)
0000000100010ed9	movw	$0x0, -0x34(%rbp)
0000000100010edf	movl	$0x0, -0x38(%rbp)
0000000100010ee6	movq	%r15, -0x31(%rbp)
0000000100010eea	movq	-0x38(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100010eef	andq	$-0x100, %r15
0000000100010ef6	movdqa	%xmm0, -0xa0(%rbp)
0000000100010efe	movzbl	-0x9a(%rbp), %r9d
0000000100010f06	movzbl	-0x9b(%rbp), %ecx
0000000100010f0d	movzbl	-0x9c(%rbp), %r8d
0000000100010f15	movzbl	-0x9d(%rbp), %r10d
0000000100010f1d	movzbl	-0x9e(%rbp), %r11d
0000000100010f25	movzbl	-0xa0(%rbp), %edx
0000000100010f2c	movzbl	-0x9f(%rbp), %ebx
0000000100010f33	movb	$0x13, %r13b
0000000100010f36	movq	%r15, %rax
0000000100010f39	movzbl	-0x99(%rbp), %r14d
0000000100010f41	movl	%r14d, %r15d
0000000100010f44	jmp	0x1000108b3
0000000100010f49	movb	$0x0, -0x32(%rbp)
0000000100010f4d	movw	$0x0, -0x34(%rbp)
0000000100010f53	movl	$0x0, -0x38(%rbp)
0000000100010f5a	movq	%r15, -0x31(%rbp)
0000000100010f5e	movq	-0x38(%rbp), %rax
0000000100010f62	movq	%rax, %xmm0
0000000100010f67	movl	-0x30(%rbp), %ecx
0000000100010f6a	movl	-0x2d(%rbp), %edx
0000000100010f6d	movl	%ecx, -0x40(%rbp)
0000000100010f70	movl	%edx, -0x3d(%rbp)
0000000100010f73	movq	%rax, -0x48(%rbp)
0000000100010f77	movdqa	%xmm0, -0x100(%rbp)
0000000100010f7f	movzbl	-0xfa(%rbp), %r9d
0000000100010f87	movzbl	-0xfb(%rbp), %ecx
0000000100010f8e	movzbl	-0xfc(%rbp), %r8d
0000000100010f96	movzbl	-0xfd(%rbp), %r10d
0000000100010f9e	movzbl	-0xfe(%rbp), %r11d
0000000100010fa6	movzbl	-0x100(%rbp), %edx
0000000100010fad	movzbl	-0xff(%rbp), %ebx
0000000100010fb4	jmp	0x100010af7
0000000100010fb9	cmpq	$0x4, %r12
0000000100010fbd	jb	0x1000110a8
0000000100010fc3	movq	-0x60(%rbp), %r12
0000000100010fc7	addq	$-0xc, %r12
0000000100010fcb	leaq	0xc(%r15), %rax
0000000100010fcf	movq	%rax, -0x58(%rbp)
0000000100010fd3	movzwl	0x9(%r15), %eax
0000000100010fd8	movzbl	0x8(%r15), %r10d
0000000100010fdd	movzbl	0xb(%r15), %r11d
0000000100010fe2	movb	%r10b, -0x35(%rbp)
0000000100010fe6	movb	%r11b, -0x32(%rbp)
0000000100010fea	movw	%ax, -0x34(%rbp)
0000000100010fee	movl	-0x35(%rbp), %eax
0000000100010ff1	movb	$0x4b, %r13b
0000000100010ff4	jmp	0x1000110cd
0000000100010ff9	cmpq	$0x4, %r12
0000000100010ffd	jb	0x100011129
0000000100011003	movq	-0x60(%rbp), %r12
0000000100011007	addq	$-0xc, %r12
000000010001100b	leaq	0xc(%r15), %rax
000000010001100f	movq	%rax, -0x58(%rbp)
0000000100011013	movzwl	0x9(%r15), %eax
0000000100011018	movzbl	0x8(%r15), %r10d
000000010001101d	movzbl	0xb(%r15), %r11d
0000000100011022	movb	%r10b, -0x35(%rbp)
0000000100011026	movb	%r11b, -0x32(%rbp)
000000010001102a	movw	%ax, -0x34(%rbp)
000000010001102e	movl	-0x35(%rbp), %eax
0000000100011031	movb	$0x4b, %r13b
0000000100011034	jmp	0x10001114e
0000000100011039	movb	$0x0, -0x32(%rbp)
000000010001103d	movw	$0x0, -0x34(%rbp)
0000000100011043	movl	$0x0, -0x38(%rbp)
000000010001104a	movq	-0x58(%rbp), %rax
000000010001104e	movq	%rax, -0x31(%rbp)
0000000100011052	movq	-0x38(%rbp), %rax
0000000100011056	movl	-0x30(%rbp), %r10d
000000010001105a	movl	-0x2d(%rbp), %r11d
000000010001105e	movl	%r10d, -0x40(%rbp)
0000000100011062	movl	%r11d, -0x3d(%rbp)
0000000100011066	movq	%rax, -0x48(%rbp)
000000010001106a	movb	$0x13, %r13b
000000010001106d	jmp	0x1000110d1
000000010001106f	movb	$0x0, -0x32(%rbp)
0000000100011073	movw	$0x0, -0x34(%rbp)
0000000100011079	movl	$0x0, -0x38(%rbp)
0000000100011080	movq	-0x58(%rbp), %rax
0000000100011084	movq	%rax, -0x31(%rbp)
0000000100011088	movq	-0x38(%rbp), %rax
000000010001108c	movl	-0x30(%rbp), %r10d
0000000100011090	movl	-0x2d(%rbp), %r11d
0000000100011094	movl	%r10d, -0x40(%rbp)
0000000100011098	movl	%r11d, -0x3d(%rbp)
000000010001109c	movq	%rax, -0x48(%rbp)
00000001000110a0	movb	$0x13, %r13b
00000001000110a3	jmp	0x100011152
00000001000110a8	movl	$0x0, -0x38(%rbp)
00000001000110af	movb	$0x0, -0x32(%rbp)
00000001000110b3	movw	$0x0, -0x34(%rbp)
00000001000110b9	movl	-0x35(%rbp), %eax
00000001000110bc	movl	%eax, -0x45(%rbp)
00000001000110bf	movl	$0x0, -0x48(%rbp)
00000001000110c6	movb	$0x13, %r13b
00000001000110c9	movq	-0x58(%rbp), %rax
00000001000110cd	movq	%rax, -0x41(%rbp)
00000001000110d1	cmpb	$0x4b, %r13b
00000001000110d5	jne	0x1000110e2
00000001000110d7	movq	-0x41(%rbp), %r13
00000001000110db	movl	$0x1, %eax
00000001000110e0	jmp	0x100011161
00000001000110e2	movq	-0x48(%rbp), %xmm0              ## xmm0 = mem[0],zero
00000001000110e7	movdqa	%xmm0, -0xd0(%rbp)
00000001000110ef	movzbl	-0xca(%rbp), %r9d
00000001000110f7	movzbl	-0xcb(%rbp), %ecx
00000001000110fe	movzbl	-0xcc(%rbp), %r8d
0000000100011106	movzbl	-0xcd(%rbp), %r10d
000000010001110e	movzbl	-0xce(%rbp), %r11d
0000000100011116	movzbl	-0xd0(%rbp), %edx
000000010001111d	movzbl	-0xcf(%rbp), %ebx
0000000100011124	jmp	0x100010d33
0000000100011129	movl	$0x0, -0x38(%rbp)
0000000100011130	movb	$0x0, -0x32(%rbp)
0000000100011134	movw	$0x0, -0x34(%rbp)
000000010001113a	movl	-0x35(%rbp), %eax
000000010001113d	movl	%eax, -0x45(%rbp)
0000000100011140	movl	$0x0, -0x48(%rbp)
0000000100011147	movb	$0x13, %r13b
000000010001114a	movq	-0x58(%rbp), %rax
000000010001114e	movq	%rax, -0x41(%rbp)
0000000100011152	cmpb	$0x4b, %r13b
0000000100011156	jne	0x10001116d
0000000100011158	movq	-0x41(%rbp), %r13
000000010001115c	movl	$0x5, %eax
0000000100011161	movq	-0x58(%rbp), %r15
0000000100011165	movl	%r14d, %r10d
0000000100011168	jmp	0x1000109e1
000000010001116d	movq	-0x48(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100011172	movdqa	%xmm0, -0xf0(%rbp)
000000010001117a	movzbl	-0xea(%rbp), %r9d
0000000100011182	movzbl	-0xeb(%rbp), %ecx
0000000100011189	movzbl	-0xec(%rbp), %r8d
0000000100011191	movzbl	-0xed(%rbp), %r10d
0000000100011199	movzbl	-0xee(%rbp), %r11d
00000001000111a1	movzbl	-0xf0(%rbp), %edx
00000001000111a8	movzbl	-0xef(%rbp), %ebx
00000001000111af	jmp	0x100010d33
00000001000111b4	subl	$0xe9fffff8, %eax               ## imm = 0xE9FFFFF8
00000001000111b9	cli
00000001000111ba	.byte 0xff #bad opcode
00000001000111bb	callq	*-0x64000005(%rcx)
00000001000111c1	sti
00000001000111c2	.byte 0xff #bad opcode
00000001000111c3	.byte 0xff #bad opcode
00000001000111c4	movl	$0xe9fffffb, %esi               ## imm = 0xE9FFFFFB
00000001000111c9	sti
00000001000111ca	.byte 0xff #bad opcode
00000001000111cb	decl	(%rdi)
00000001000111cd	.byte 0x1f #bad opcode
00000001000111ce	addb	%dl, 0x48(%rbp)
00000001000111d2	movl	%esp, %ebp
00000001000111d4	pushq	%r15
00000001000111d6	pushq	%r14
00000001000111d8	pushq	%r13
00000001000111da	pushq	%r12
00000001000111dc	pushq	%rbx
00000001000111dd	subq	$0x88, %rsp
00000001000111e4	movl	%edx, %r14d
00000001000111e7	movq	%rsi, %rbx
00000001000111ea	movq	%rdi, -0x30(%rbp)
00000001000111ee	movq	(%rsi), %r13
00000001000111f1	movq	0x8(%rsi), %rax
00000001000111f5	movq	%rax, -0x70(%rbp)
00000001000111f9	movq	0x10(%rsi), %rdi
00000001000111fd	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
0000000100011202	movq	%rax, %r15
0000000100011205	movq	%rdx, %r12
0000000100011208	movq	%r13, -0x68(%rbp)
000000010001120c	movq	-0x70(%rbp), %rax
0000000100011210	movq	%rax, -0x60(%rbp)
0000000100011214	movq	%r15, -0x58(%rbp)
0000000100011218	movq	%rdx, -0x50(%rbp)
000000010001121c	movq	%rbx, -0x48(%rbp)
0000000100011220	leaq	-0xa8(%rbp), %r13
0000000100011227	leaq	-0x90(%rbp), %rbx
000000010001122e	nop
0000000100011230	testq	%r12, %r12
0000000100011233	je	0x1000112b0
0000000100011235	movq	(%r15), %rax
0000000100011238	movq	0x8(%r15), %rcx
000000010001123c	movq	%rcx, -0x88(%rbp)
0000000100011243	movq	%rax, -0x90(%rbp)
000000010001124a	movq	-0x48(%rbp), %rax
000000010001124e	movq	0x18(%rax), %rax
0000000100011252	movl	0x48(%rax), %edx
0000000100011255	leaq	-0xb0(%rbp), %rdi
000000010001125c	leaq	-0x68(%rbp), %rsi
0000000100011260	movq	%rbx, %rcx
0000000100011263	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
0000000100011268	movq	-0xb0(%rbp), %rcx
000000010001126f	cmpq	$0x2e, %rcx
0000000100011273	je	0x10001131f
0000000100011279	addq	$0x10, %r15
000000010001127d	decq	%r12
0000000100011280	movq	(%r13), %rax
0000000100011284	movq	0x8(%r13), %rdx
0000000100011288	movq	%rdx, -0x78(%rbp)
000000010001128c	movq	%rax, -0x80(%rbp)
0000000100011290	movq	-0x98(%rbp), %rax
0000000100011297	movq	%r15, -0x58(%rbp)
000000010001129b	movq	%r12, -0x50(%rbp)
000000010001129f	jmp	0x1000112d6
00000001000112a1	nopw	%cs:(%rax,%rax)
00000001000112ab	nopl	(%rax,%rax)
00000001000112b0	movq	-0x48(%rbp), %rdx
00000001000112b4	movl	$0x2e, %ecx
00000001000112b9	cmpq	$0x0, 0x28(%rdx)
00000001000112be	jne	0x1000112d3
00000001000112c0	movq	-0x68(%rbp), %rsi
00000001000112c4	subq	(%rdx), %rsi
00000001000112c7	movq	$0x1, 0x28(%rdx)
00000001000112cf	movq	%rsi, 0x30(%rdx)
00000001000112d3	xorl	%r12d, %r12d
00000001000112d6	movq	-0x80(%rbp), %rdx
00000001000112da	movq	-0x78(%rbp), %rsi
00000001000112de	movq	%rsi, -0x38(%rbp)
00000001000112e2	movq	%rdx, -0x40(%rbp)
00000001000112e6	cmpl	$0x2e, %ecx
00000001000112e9	je	0x100011312
00000001000112eb	cmpw	%r14w, %ax
00000001000112ef	jne	0x100011230
00000001000112f5	movq	-0x40(%rbp), %rdx
00000001000112f9	movq	-0x38(%rbp), %rsi
00000001000112fd	movq	-0x30(%rbp), %rdi
0000000100011301	movq	%rsi, 0x10(%rdi)
0000000100011305	movq	%rdx, 0x8(%rdi)
0000000100011309	movq	%rcx, (%rdi)
000000010001130c	movq	%rax, 0x18(%rdi)
0000000100011310	jmp	0x100011342
0000000100011312	movq	-0x30(%rbp), %rax
0000000100011316	movq	$0x2e, (%rax)
000000010001131d	jmp	0x100011342
000000010001131f	movq	(%r13), %rax
0000000100011323	movq	0x8(%r13), %rcx
0000000100011327	movq	%rax, -0x40(%rbp)
000000010001132b	movq	%rcx, -0x38(%rbp)
000000010001132f	movq	-0x30(%rbp), %rdx
0000000100011333	movq	%rcx, 0x10(%rdx)
0000000100011337	movq	%rax, 0x8(%rdx)
000000010001133b	movq	$0x2f, (%rdx)
0000000100011342	addq	$0x88, %rsp
0000000100011349	popq	%rbx
000000010001134a	popq	%r12
000000010001134c	popq	%r13
000000010001134e	popq	%r14
0000000100011350	popq	%r15
0000000100011352	popq	%rbp
0000000100011353	retq
0000000100011354	nopw	%cs:(%rax,%rax)
000000010001135e	nop
__ZN5gimli4read5dwarf13Unit$LT$R$GT$3new17h1616263b38dd04dcE:
0000000100011360	pushq	%rbp
0000000100011361	movq	%rsp, %rbp
0000000100011364	pushq	%r15
0000000100011366	pushq	%r14
0000000100011368	pushq	%r13
000000010001136a	pushq	%r12
000000010001136c	pushq	%rbx
000000010001136d	subq	$0x458, %rsp                    ## imm = 0x458
0000000100011374	movq	%rdx, %rbx
0000000100011377	movq	%rsi, %r14
000000010001137a	movq	%rdi, -0x120(%rbp)
0000000100011381	movq	0x40(%rdx), %rcx
0000000100011385	testq	%rcx, %rcx
0000000100011388	je	0x10001149a
000000010001138e	movq	(%r14), %rsi
0000000100011391	movq	0x8(%r14), %rdx
0000000100011395	leaq	-0x190(%rbp), %rdi
000000010001139c	callq	__ZN5gimli4read6abbrev20DebugAbbrev$LT$R$GT$13abbreviations17h5bb3c18d895eb57eE ## gimli::read::abbrev::DebugAbbrev$LT$R$GT$::abbreviations::h5bb3c18d895eb57e
00000001000113a1	cmpq	$0x0, -0x190(%rbp)
00000001000113a9	je	0x1000114ba
00000001000113af	movq	-0x168(%rbp), %rax
00000001000113b6	movq	%rax, -0x3b8(%rbp)
00000001000113bd	movq	-0x170(%rbp), %rax
00000001000113c4	movq	%rax, -0x3c0(%rbp)
00000001000113cb	movq	-0x178(%rbp), %rax
00000001000113d2	movq	%rax, -0x3c8(%rbp)
00000001000113d9	movq	-0x180(%rbp), %rax
00000001000113e0	movq	%rax, -0x3d0(%rbp)
00000001000113e7	movq	-0x190(%rbp), %rax
00000001000113ee	movq	-0x188(%rbp), %rcx
00000001000113f5	movq	%rcx, -0x3d8(%rbp)
00000001000113fc	movq	%rax, -0x3e0(%rbp)
0000000100011403	movq	$0x1, -0x3f0(%rbp)
000000010001140e	movq	$0x1, -0x3e8(%rbp)
0000000100011419	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100011420	movzbl	(%rax), %eax
0000000100011423	movl	$0x40, %edi
0000000100011428	movl	$0x8, %esi
000000010001142d	callq	___rust_alloc
0000000100011432	testq	%rax, %rax
0000000100011435	je	0x100012b01
000000010001143b	movq	%rax, %rdx
000000010001143e	movq	-0x3b8(%rbp), %rax
0000000100011445	movq	%rax, 0x38(%rdx)
0000000100011449	movq	-0x3c0(%rbp), %rax
0000000100011450	movq	%rax, 0x30(%rdx)
0000000100011454	movq	-0x3c8(%rbp), %rax
000000010001145b	movq	%rax, 0x28(%rdx)
000000010001145f	movq	-0x3d0(%rbp), %rax
0000000100011466	movq	%rax, 0x20(%rdx)
000000010001146a	movq	-0x3d8(%rbp), %rax
0000000100011471	movq	%rax, 0x18(%rdx)
0000000100011475	movq	-0x3e0(%rbp), %rax
000000010001147c	movq	%rax, 0x10(%rdx)
0000000100011480	movq	-0x3f0(%rbp), %rax
0000000100011487	movq	-0x3e8(%rbp), %rcx
000000010001148e	movq	%rcx, 0x8(%rdx)
0000000100011492	movq	%rax, (%rdx)
0000000100011495	jmp	0x100011695
000000010001149a	movq	0xd8(%r14), %rdx
00000001000114a1	testq	%rdx, %rdx
00000001000114a4	je	0x100011514
00000001000114a6	lock
00000001000114a7	incq	-0x10(%rdx)
00000001000114ab	jle	0x1000137c1
00000001000114b1	addq	$-0x10, %rdx
00000001000114b5	jmp	0x100011695
00000001000114ba	movzbl	-0x188(%rbp), %eax
00000001000114c1	movl	-0x187(%rbp), %ecx
00000001000114c7	movl	%ecx, -0x108(%rbp)
00000001000114cd	movl	-0x184(%rbp), %ecx
00000001000114d3	movl	%ecx, -0x105(%rbp)
00000001000114d9	movq	-0x180(%rbp), %rdx
00000001000114e0	cmpb	$0x4b, %al
00000001000114e2	je	0x100011695
00000001000114e8	movl	-0x108(%rbp), %ecx
00000001000114ee	movl	-0x105(%rbp), %esi
00000001000114f4	movq	-0x120(%rbp), %rdi
00000001000114fb	movl	%esi, 0xc(%rdi)
00000001000114fe	movl	%ecx, 0x9(%rdi)
0000000100011501	movb	%al, 0x8(%rdi)
0000000100011504	movq	%rdx, 0x10(%rdi)
0000000100011508	movq	$0x2, (%rdi)
000000010001150f	jmp	0x100011914
0000000100011514	movq	(%r14), %rsi
0000000100011517	movq	0x8(%r14), %rdx
000000010001151b	leaq	-0x190(%rbp), %rdi
0000000100011522	xorl	%ecx, %ecx
0000000100011524	callq	__ZN5gimli4read6abbrev20DebugAbbrev$LT$R$GT$13abbreviations17h5bb3c18d895eb57eE ## gimli::read::abbrev::DebugAbbrev$LT$R$GT$::abbreviations::h5bb3c18d895eb57e
0000000100011529	cmpq	$0x0, -0x190(%rbp)
0000000100011531	je	0x10001161f
0000000100011537	movq	-0x168(%rbp), %rax
000000010001153e	movq	%rax, -0x3b8(%rbp)
0000000100011545	movq	-0x170(%rbp), %rax
000000010001154c	movq	%rax, -0x3c0(%rbp)
0000000100011553	movq	-0x178(%rbp), %rax
000000010001155a	movq	%rax, -0x3c8(%rbp)
0000000100011561	movq	-0x180(%rbp), %rax
0000000100011568	movq	%rax, -0x3d0(%rbp)
000000010001156f	movq	-0x190(%rbp), %rax
0000000100011576	movq	-0x188(%rbp), %rcx
000000010001157d	movq	%rcx, -0x3d8(%rbp)
0000000100011584	movq	%rax, -0x3e0(%rbp)
000000010001158b	movq	$0x1, -0x3f0(%rbp)
0000000100011596	movq	$0x1, -0x3e8(%rbp)
00000001000115a1	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
00000001000115a8	movzbl	(%rax), %eax
00000001000115ab	movl	$0x40, %edi
00000001000115b0	movl	$0x8, %esi
00000001000115b5	callq	___rust_alloc
00000001000115ba	testq	%rax, %rax
00000001000115bd	je	0x100012cf3
00000001000115c3	movq	%rax, %rdx
00000001000115c6	movq	-0x3b8(%rbp), %rax
00000001000115cd	movq	%rax, 0x38(%rdx)
00000001000115d1	movq	-0x3c0(%rbp), %rax
00000001000115d8	movq	%rax, 0x30(%rdx)
00000001000115dc	movq	-0x3c8(%rbp), %rax
00000001000115e3	movq	%rax, 0x28(%rdx)
00000001000115e7	movq	-0x3d0(%rbp), %rax
00000001000115ee	movq	%rax, 0x20(%rdx)
00000001000115f2	movq	-0x3d8(%rbp), %rax
00000001000115f9	movq	%rax, 0x18(%rdx)
00000001000115fd	movq	-0x3e0(%rbp), %rax
0000000100011604	movq	%rax, 0x10(%rdx)
0000000100011608	movq	-0x3f0(%rbp), %rax
000000010001160f	movq	-0x3e8(%rbp), %rcx
0000000100011616	movq	%rcx, 0x8(%rdx)
000000010001161a	movq	%rax, (%rdx)
000000010001161d	jmp	0x10001164d
000000010001161f	movzbl	-0x188(%rbp), %eax
0000000100011626	movl	-0x187(%rbp), %ecx
000000010001162c	movl	%ecx, -0xb0(%rbp)
0000000100011632	movl	-0x184(%rbp), %ecx
0000000100011638	movl	%ecx, -0xad(%rbp)
000000010001163e	movq	-0x180(%rbp), %rdx
0000000100011645	cmpb	$0x4b, %al
0000000100011647	jne	0x10001224a
000000010001164d	leaq	0x10(%rdx), %rcx
0000000100011651	xorl	%eax, %eax
0000000100011653	movq	%r14, %r15
0000000100011656	lock
0000000100011657	cmpxchgq	%rcx, 0xd8(%r14)
000000010001165f	jne	0x10001166f
0000000100011661	lock
0000000100011662	incq	(%rdx)
0000000100011665	movq	%r15, %r14
0000000100011668	jg	0x100011695
000000010001166a	jmp	0x1000137c1
000000010001166f	movq	%rax, %r14
0000000100011672	lock
0000000100011673	decq	(%rdx)
0000000100011676	jne	0x100011680
0000000100011678	movq	%rdx, %rdi
000000010001167b	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100011680	lock
0000000100011681	incq	-0x10(%r14)
0000000100011685	jle	0x1000137c1
000000010001168b	addq	$-0x10, %r14
000000010001168f	movq	%r14, %rdx
0000000100011692	movq	%r15, %r14
0000000100011695	movl	0x48(%rbx), %eax
0000000100011698	movq	%r14, -0x1e0(%rbp)
000000010001169f	cmpb	$0x0, 0xe0(%r14)
00000001000116a7	setne	%cl
00000001000116aa	movl	%eax, %esi
00000001000116ac	shrl	$0x10, %esi
00000001000116af	cmpw	$0x5, %si
00000001000116b3	setae	%sil
00000001000116b7	andl	$0xff00, %eax                   ## imm = 0xFF00
00000001000116bc	xorl	%edi, %edi
00000001000116be	cmpl	$0x800, %eax                    ## imm = 0x800
00000001000116c3	sete	%dil
00000001000116c7	leaq	0x8(,%rdi,8), %r8
00000001000116cf	xorl	%eax, %eax
00000001000116d1	testb	%sil, %cl
00000001000116d4	cmoveq	%rax, %r8
00000001000116d8	leaq	0xc(,%rdi,8), %r9
00000001000116e0	cmoveq	%rax, %r9
00000001000116e4	movq	0x10(%rbx), %rax
00000001000116e8	movq	0x18(%rbx), %r10
00000001000116ec	addq	$-0x3, %rax
00000001000116f0	xorl	%r11d, %r11d
00000001000116f3	cmpq	$0x2, %rax
00000001000116f7	setb	%r11b
00000001000116fb	leaq	-0x3f0(%rbp), %rax
0000000100011702	movl	$0xa, %ecx
0000000100011707	movq	%rax, %rdi
000000010001170a	movq	%rbx, %rsi
000000010001170d	rep		movsq	(%rsi), %es:(%rdi)
0000000100011710	movq	%rdx, -0x298(%rbp)
0000000100011717	movq	$0x0, -0x290(%rbp)
0000000100011722	movq	$0x0, -0x280(%rbp)
000000010001172d	movq	$0x0, -0x270(%rbp)
0000000100011738	movq	%r8, -0x268(%rbp)
000000010001173f	movq	$0x0, -0x260(%rbp)
000000010001174a	movq	%r9, -0x258(%rbp)
0000000100011751	movq	%r9, -0x250(%rbp)
0000000100011758	movq	$0x2f, -0x390(%rbp)
0000000100011763	movq	%r11, -0x3a0(%rbp)
000000010001176a	movq	%r10, -0x398(%rbp)
0000000100011771	movq	-0x3c8(%rbp), %rcx
0000000100011778	movq	-0x3c0(%rbp), %rsi
000000010001177f	addq	$0x10, %rdx
0000000100011783	movq	%rcx, -0x190(%rbp)
000000010001178a	movq	%rsi, -0x188(%rbp)
0000000100011791	movq	%rax, -0x180(%rbp)
0000000100011798	movq	%rdx, -0x178(%rbp)
000000010001179f	movq	$0x0, -0x170(%rbp)
00000001000117aa	movq	$0x0, -0x138(%rbp)
00000001000117b5	leaq	-0xb0(%rbp), %rdi
00000001000117bc	leaq	-0x190(%rbp), %rsi
00000001000117c3	callq	__ZN5gimli4read4unit22EntriesCursor$LT$R$GT$10next_entry17h7d3f50c3d981e8aaE ## gimli::read::unit::EntriesCursor$LT$R$GT$::next_entry::h7d3f50c3d981e8aa
00000001000117c8	movzbl	-0xb0(%rbp), %ecx
00000001000117cf	cmpb	$0x4b, %cl
00000001000117d2	jne	0x100011824
00000001000117d4	leaq	-0x170(%rbp), %r13
00000001000117db	leaq	-0xb0(%rbp), %rbx
00000001000117e2	leaq	-0x190(%rbp), %r14
00000001000117e9	nopl	(%rax)
00000001000117f0	cmpb	$0x0, -0xaf(%rbp)
00000001000117f7	movq	-0x170(%rbp), %rax
00000001000117fe	je	0x100011926
0000000100011804	testq	%rax, %rax
0000000100011807	jne	0x10001192f
000000010001180d	movq	%rbx, %rdi
0000000100011810	movq	%r14, %rsi
0000000100011813	callq	__ZN5gimli4read4unit22EntriesCursor$LT$R$GT$10next_entry17h7d3f50c3d981e8aaE ## gimli::read::unit::EntriesCursor$LT$R$GT$::next_entry::h7d3f50c3d981e8aa
0000000100011818	movzbl	-0xb0(%rbp), %ecx
000000010001181f	cmpb	$0x4b, %cl
0000000100011822	je	0x1000117f0
0000000100011824	movzbl	-0xaf(%rbp), %eax
000000010001182b	movzwl	-0xaa(%rbp), %edx
0000000100011832	movl	-0xae(%rbp), %esi
0000000100011838	movq	-0xa8(%rbp), %rdi
000000010001183f	shlq	$0x10, %rsi
0000000100011843	shlq	$0x30, %rdx
0000000100011847	orq	%rsi, %rdx
000000010001184a	shlq	$0x8, %rax
000000010001184e	orq	%rdx, %rax
0000000100011851	movzbl	%cl, %ecx
0000000100011854	orq	%rax, %rcx
0000000100011857	movq	-0x120(%rbp), %rax
000000010001185e	movq	%rcx, 0x8(%rax)
0000000100011862	movq	%rdi, 0x10(%rax)
0000000100011866	movq	$0x2, (%rax)
000000010001186d	movq	-0x298(%rbp), %rdi
0000000100011874	lock
0000000100011875	decq	(%rdi)
0000000100011878	jne	0x10001187f
000000010001187a	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
000000010001187f	cmpl	$0x2f, -0x390(%rbp)
0000000100011886	je	0x100011914
000000010001188c	movq	-0x338(%rbp), %rsi
0000000100011893	testq	%rsi, %rsi
0000000100011896	je	0x1000118ad
0000000100011898	movq	-0x340(%rbp), %rdi
000000010001189f	shlq	$0x2, %rsi
00000001000118a3	movl	$0x2, %edx
00000001000118a8	callq	___rust_dealloc
00000001000118ad	movq	-0x320(%rbp), %rax
00000001000118b4	testq	%rax, %rax
00000001000118b7	je	0x1000118d2
00000001000118b9	movq	-0x328(%rbp), %rdi
00000001000118c0	shlq	$0x3, %rax
00000001000118c4	leaq	(%rax,%rax,2), %rsi
00000001000118c8	movl	$0x8, %edx
00000001000118cd	callq	___rust_dealloc
00000001000118d2	movq	-0x308(%rbp), %rsi
00000001000118d9	testq	%rsi, %rsi
00000001000118dc	je	0x1000118f3
00000001000118de	movq	-0x310(%rbp), %rdi
00000001000118e5	shlq	$0x2, %rsi
00000001000118e9	movl	$0x2, %edx
00000001000118ee	callq	___rust_dealloc
00000001000118f3	movq	-0x2f0(%rbp), %rsi
00000001000118fa	testq	%rsi, %rsi
00000001000118fd	je	0x100011914
00000001000118ff	movq	-0x2f8(%rbp), %rdi
0000000100011906	shlq	$0x6, %rsi
000000010001190a	movl	$0x8, %edx
000000010001190f	callq	___rust_dealloc
0000000100011914	addq	$0x458, %rsp                    ## imm = 0x458
000000010001191b	popq	%rbx
000000010001191c	popq	%r12
000000010001191e	popq	%r13
0000000100011920	popq	%r14
0000000100011922	popq	%r15
0000000100011924	popq	%rbp
0000000100011925	retq
0000000100011926	testq	%rax, %rax
0000000100011929	je	0x100011ed6
000000010001192f	movq	-0x170(%rbp), %rbx
0000000100011936	movq	-0x168(%rbp), %r14
000000010001193d	movq	-0x160(%rbp), %rdi
0000000100011944	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
0000000100011949	movq	%rax, %r15
000000010001194c	movq	%rdx, %r12
000000010001194f	movq	%rbx, -0xb0(%rbp)
0000000100011956	movq	%r14, -0xa8(%rbp)
000000010001195d	movq	%rax, -0xa0(%rbp)
0000000100011964	movq	%rdx, -0x98(%rbp)
000000010001196b	movq	%r13, -0x90(%rbp)
0000000100011972	leaq	-0x100(%rbp), %r14
0000000100011979	movl	$0x2e, %eax
000000010001197e	movq	%rax, -0x240(%rbp)
0000000100011985	xorl	%eax, %eax
0000000100011987	movq	%rax, -0x110(%rbp)
000000010001198e	leaq	-0x108(%rbp), %rbx
0000000100011995	movl	$0x2e, %eax
000000010001199a	movq	%rax, -0x128(%rbp)
00000001000119a1	movq	%rax, -0x1a0(%rbp)
00000001000119a8	jmp	0x1000119e0
00000001000119aa	leaq	-0xd0(%rbp), %rdi
00000001000119b1	movq	%rbx, %rsi
00000001000119b4	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
00000001000119b9	movq	-0xd0(%rbp), %rax
00000001000119c0	movq	%rax, -0x240(%rbp)
00000001000119c7	movq	-0xc8(%rbp), %rax
00000001000119ce	movq	%rax, -0x238(%rbp)
00000001000119d5	nopw	%cs:(%rax,%rax)
00000001000119df	nop
00000001000119e0	testq	%r12, %r12
00000001000119e3	je	0x100011a70
00000001000119e9	movq	(%r15), %rax
00000001000119ec	movq	0x8(%r15), %rcx
00000001000119f0	movq	%rcx, -0xc8(%rbp)
00000001000119f7	movq	%rax, -0xd0(%rbp)
00000001000119fe	movq	-0x90(%rbp), %rax
0000000100011a05	movq	0x18(%rax), %rax
0000000100011a09	movl	0x48(%rax), %edx
0000000100011a0c	movq	%rbx, %rdi
0000000100011a0f	leaq	-0xb0(%rbp), %rsi
0000000100011a16	leaq	-0xd0(%rbp), %rcx
0000000100011a1d	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
0000000100011a22	movq	-0x108(%rbp), %rcx
0000000100011a29	cmpq	$0x2e, %rcx
0000000100011a2d	je	0x100011e45
0000000100011a33	addq	$0x10, %r15
0000000100011a37	decq	%r12
0000000100011a3a	movq	(%r14), %rax
0000000100011a3d	movq	0x8(%r14), %rdx
0000000100011a41	movq	%rdx, -0x210(%rbp)
0000000100011a48	movq	%rax, -0x218(%rbp)
0000000100011a4f	movq	-0xf0(%rbp), %r13
0000000100011a56	movq	%r15, -0xa0(%rbp)
0000000100011a5d	movq	%r12, -0x98(%rbp)
0000000100011a64	jmp	0x100011a9c
0000000100011a66	nopw	%cs:(%rax,%rax)
0000000100011a70	movq	-0x90(%rbp), %rax
0000000100011a77	movl	$0x2e, %ecx
0000000100011a7c	cmpq	$0x0, 0x28(%rax)
0000000100011a81	jne	0x100011a99
0000000100011a83	movq	-0xb0(%rbp), %rdx
0000000100011a8a	subq	(%rax), %rdx
0000000100011a8d	movq	$0x1, 0x28(%rax)
0000000100011a95	movq	%rdx, 0x30(%rax)
0000000100011a99	xorl	%r12d, %r12d
0000000100011a9c	movq	-0x218(%rbp), %rax
0000000100011aa3	movq	-0x210(%rbp), %rdx
0000000100011aaa	movq	%rdx, -0x1f0(%rbp)
0000000100011ab1	movq	%rax, -0x1f8(%rbp)
0000000100011ab8	cmpl	$0x2e, %ecx
0000000100011abb	je	0x100011d29
0000000100011ac1	movq	%rcx, -0x108(%rbp)
0000000100011ac8	movq	-0x1f8(%rbp), %rax
0000000100011acf	movq	-0x1f0(%rbp), %rcx
0000000100011ad6	movq	%rcx, 0x8(%r14)
0000000100011ada	movq	%rax, (%r14)
0000000100011add	movq	%r13, -0xf0(%rbp)
0000000100011ae4	movzwl	%r13w, %eax
0000000100011ae8	cmpl	$0x71, %eax
0000000100011aeb	jle	0x100011b50
0000000100011aed	cmpl	$0x2130, %eax                   ## imm = 0x2130
0000000100011af2	jg	0x100011bb0
0000000100011af8	addl	$-0x72, %eax
0000000100011afb	cmpl	$0x1a, %eax
0000000100011afe	ja	0x1000119e0
0000000100011b04	leaq	0x1e31(%rip), %rcx
0000000100011b0b	movslq	(%rcx,%rax,4), %rax
0000000100011b0f	addq	%rcx, %rax
0000000100011b12	jmpq	*%rax
0000000100011b14	leaq	-0xd0(%rbp), %rdi
0000000100011b1b	movq	%rbx, %rsi
0000000100011b1e	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011b23	cmpl	$0x1c, -0xd0(%rbp)
0000000100011b2a	jne	0x1000119e0
0000000100011b30	movq	-0xc8(%rbp), %rax
0000000100011b37	movq	%rax, -0x268(%rbp)
0000000100011b3e	jmp	0x1000119e0
0000000100011b43	nopw	%cs:(%rax,%rax)
0000000100011b4d	nopl	(%rax)
0000000100011b50	addl	$-0x3, %eax
0000000100011b53	cmpl	$0x18, %eax
0000000100011b56	ja	0x1000119e0
0000000100011b5c	leaq	0x1d75(%rip), %rcx
0000000100011b63	movslq	(%rcx,%rax,4), %rax
0000000100011b67	addq	%rcx, %rax
0000000100011b6a	jmpq	*%rax
0000000100011b6c	leaq	-0xd0(%rbp), %rdi
0000000100011b73	movq	%rbx, %rsi
0000000100011b76	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011b7b	movq	-0xd0(%rbp), %rax
0000000100011b82	movq	%rax, -0x1a0(%rbp)
0000000100011b89	leaq	-0xc8(%rbp), %rcx
0000000100011b90	movq	(%rcx), %rax
0000000100011b93	movq	0x8(%rcx), %rcx
0000000100011b97	movq	%rax, -0x428(%rbp)
0000000100011b9e	movq	%rcx, -0x420(%rbp)
0000000100011ba5	jmp	0x1000119e0
0000000100011baa	nopw	(%rax,%rax)
0000000100011bb0	cmpl	$0x2131, %eax                   ## imm = 0x2131
0000000100011bb5	je	0x100011ce1
0000000100011bbb	cmpl	$0x2132, %eax                   ## imm = 0x2132
0000000100011bc0	je	0x100011bfc
0000000100011bc2	cmpl	$0x2133, %eax                   ## imm = 0x2133
0000000100011bc7	jne	0x1000119e0
0000000100011bcd	leaq	-0xd0(%rbp), %rdi
0000000100011bd4	movq	%rbx, %rsi
0000000100011bd7	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011bdc	cmpl	$0xb, -0xd0(%rbp)
0000000100011be3	jne	0x1000119e0
0000000100011be9	movq	-0xc8(%rbp), %rax
0000000100011bf0	movq	%rax, -0x260(%rbp)
0000000100011bf7	jmp	0x1000119e0
0000000100011bfc	leaq	-0xd0(%rbp), %rdi
0000000100011c03	movq	%rbx, %rsi
0000000100011c06	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011c0b	cmpl	$0x17, -0xd0(%rbp)
0000000100011c12	jne	0x1000119e0
0000000100011c18	movq	-0xc8(%rbp), %rax
0000000100011c1f	movq	%rax, -0x250(%rbp)
0000000100011c26	jmp	0x1000119e0
0000000100011c2b	leaq	-0xd0(%rbp), %rdi
0000000100011c32	movq	%rbx, %rsi
0000000100011c35	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011c3a	movq	-0xd0(%rbp), %rax
0000000100011c41	movq	%rax, -0x128(%rbp)
0000000100011c48	leaq	-0xc8(%rbp), %rcx
0000000100011c4f	movq	(%rcx), %rax
0000000100011c52	movq	0x8(%rcx), %rcx
0000000100011c56	movq	%rax, -0x438(%rbp)
0000000100011c5d	movq	%rcx, -0x430(%rbp)
0000000100011c64	jmp	0x1000119e0
0000000100011c69	leaq	-0xd0(%rbp), %rdi
0000000100011c70	movq	%rbx, %rsi
0000000100011c73	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011c78	movq	-0xd0(%rbp), %rax
0000000100011c7f	cmpq	$0x10, %rax
0000000100011c83	jne	0x100011c93
0000000100011c85	movq	-0xc8(%rbp), %rcx
0000000100011c8c	movq	%rcx, -0x1d8(%rbp)
0000000100011c93	cmpl	$0x10, %eax
0000000100011c96	movq	-0x110(%rbp), %rax
0000000100011c9d	movl	$0x1, %ecx
0000000100011ca2	cmoveq	%rcx, %rax
0000000100011ca6	movq	%rax, -0x110(%rbp)
0000000100011cad	jmp	0x1000119e0
0000000100011cb2	leaq	-0xd0(%rbp), %rdi
0000000100011cb9	movq	%rbx, %rsi
0000000100011cbc	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011cc1	cmpl	$0x12, -0xd0(%rbp)
0000000100011cc8	jne	0x1000119e0
0000000100011cce	movq	-0xc8(%rbp), %rax
0000000100011cd5	movq	%rax, -0x258(%rbp)
0000000100011cdc	jmp	0x1000119e0
0000000100011ce1	cmpq	$0x0, -0x3a0(%rbp)
0000000100011ce9	jne	0x1000119e0
0000000100011cef	leaq	-0xd0(%rbp), %rdi
0000000100011cf6	movq	%rbx, %rsi
0000000100011cf9	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100011cfe	cmpl	$0x2d, -0xd0(%rbp)
0000000100011d05	jne	0x1000119e0
0000000100011d0b	movq	-0xc8(%rbp), %rax
0000000100011d12	movq	$0x1, -0x3a0(%rbp)
0000000100011d1d	movq	%rax, -0x398(%rbp)
0000000100011d24	jmp	0x1000119e0
0000000100011d29	movq	-0x1a0(%rbp), %rax
0000000100011d30	cmpq	$0x2e, %rax
0000000100011d34	jne	0x100011e75
0000000100011d3a	xorl	%r13d, %r13d
0000000100011d3d	movq	-0x1e0(%rbp), %r14
0000000100011d44	movq	-0x128(%rbp), %rax
0000000100011d4b	movq	%r13, -0x290(%rbp)
0000000100011d52	movq	%rbx, -0x288(%rbp)
0000000100011d59	cmpq	$0x2e, %rax
0000000100011d5d	je	0x100011f17
0000000100011d63	movq	%rax, -0x480(%rbp)
0000000100011d6a	movq	-0x438(%rbp), %rax
0000000100011d71	movq	-0x430(%rbp), %rcx
0000000100011d78	movq	%rax, -0x478(%rbp)
0000000100011d7f	movq	%rcx, -0x470(%rbp)
0000000100011d86	movq	-0x268(%rbp), %rcx
0000000100011d8d	movzbl	-0x3a7(%rbp), %edx
0000000100011d94	leaq	-0x190(%rbp), %rdi
0000000100011d9b	leaq	-0x480(%rbp), %r8
0000000100011da2	movq	%r14, %rsi
0000000100011da5	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
0000000100011daa	xorl	%eax, %eax
0000000100011dac	cmpq	$0x0, -0x190(%rbp)
0000000100011db4	movq	-0x188(%rbp), %r12
0000000100011dbb	cmoveq	%r12, %rax
0000000100011dbf	movq	-0x180(%rbp), %rdx
0000000100011dc6	movq	%rax, -0x280(%rbp)
0000000100011dcd	movq	%rdx, -0x278(%rbp)
0000000100011dd4	cmpq	$0x0, -0x110(%rbp)
0000000100011ddc	je	0x100011f57
0000000100011de2	movzbl	-0x3a8(%rbp), %edi
0000000100011de9	testq	%rax, %rax
0000000100011dec	cmoveq	%rax, %r12
0000000100011df0	movq	-0x1d8(%rbp), %rax
0000000100011df7	movq	0x40(%r14), %r15
0000000100011dfb	movq	0x48(%r14), %rcx
0000000100011dff	subq	%rax, %rcx
0000000100011e02	jb	0x100011f4e
0000000100011e08	addq	%rax, %r15
0000000100011e0b	cmpq	$0x4, %rcx
0000000100011e0f	jb	0x100012267
0000000100011e15	movq	%rdx, -0x128(%rbp)
0000000100011e1c	leaq	-0x4(%rcx), %rsi
0000000100011e20	leaq	0x4(%r15), %rax
0000000100011e24	movl	(%r15), %edx
0000000100011e27	cmpl	$-0x11, %edx
0000000100011e2a	jbe	0x10001228f
0000000100011e30	cmpl	$-0x1, %edx
0000000100011e33	je	0x1000123b4
0000000100011e39	movl	$0x10, %ebx
0000000100011e3e	xorl	%eax, %eax
0000000100011e40	jmp	0x100012275
0000000100011e45	movq	(%r14), %rax
0000000100011e48	movq	0x8(%r14), %rcx
0000000100011e4c	movq	%rax, -0x1f8(%rbp)
0000000100011e53	movq	%rcx, -0x1f0(%rbp)
0000000100011e5a	movq	-0x120(%rbp), %rdx
0000000100011e61	movq	%rcx, 0x10(%rdx)
0000000100011e65	movq	%rax, 0x8(%rdx)
0000000100011e69	movq	$0x2, (%rdx)
0000000100011e70	jmp	0x10001186d
0000000100011e75	movq	%rax, -0x468(%rbp)
0000000100011e7c	movq	-0x428(%rbp), %rax
0000000100011e83	movq	-0x420(%rbp), %rcx
0000000100011e8a	movq	%rax, -0x460(%rbp)
0000000100011e91	movq	%rcx, -0x458(%rbp)
0000000100011e98	movq	-0x268(%rbp), %rcx
0000000100011e9f	movzbl	-0x3a7(%rbp), %edx
0000000100011ea6	leaq	-0x190(%rbp), %rdi
0000000100011ead	leaq	-0x468(%rbp), %r8
0000000100011eb4	movq	-0x1e0(%rbp), %r14
0000000100011ebb	movq	%r14, %rsi
0000000100011ebe	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
0000000100011ec3	cmpq	$0x0, -0x190(%rbp)
0000000100011ecb	jne	0x100011eee
0000000100011ecd	movq	-0x188(%rbp), %r13
0000000100011ed4	jmp	0x100011ef1
0000000100011ed6	movq	-0x120(%rbp), %rax
0000000100011edd	movb	$0x42, 0x8(%rax)
0000000100011ee1	movq	$0x0, 0x10(%rax)
0000000100011ee9	jmp	0x100011866
0000000100011eee	xorl	%r13d, %r13d
0000000100011ef1	movq	-0x128(%rbp), %rax
0000000100011ef8	movq	-0x180(%rbp), %rbx
0000000100011eff	movq	%r13, -0x290(%rbp)
0000000100011f06	movq	%rbx, -0x288(%rbp)
0000000100011f0d	cmpq	$0x2e, %rax
0000000100011f11	jne	0x100011d63
0000000100011f17	movq	$0x0, -0x280(%rbp)
0000000100011f22	cmpq	$0x0, -0x110(%rbp)
0000000100011f2a	movq	-0x1d8(%rbp), %rax
0000000100011f31	je	0x100011f57
0000000100011f33	movzbl	-0x3a8(%rbp), %edi
0000000100011f3a	xorl	%r12d, %r12d
0000000100011f3d	movq	0x40(%r14), %r15
0000000100011f41	movq	0x48(%r14), %rcx
0000000100011f45	subq	%rax, %rcx
0000000100011f48	jae	0x100011e08
0000000100011f4e	movb	$0x13, %bl
0000000100011f50	xorl	%eax, %eax
0000000100011f52	jmp	0x1000123f6
0000000100011f57	movl	$0x2f, %ebx
0000000100011f5c	movq	%rax, -0x110(%rbp)
0000000100011f63	cmpl	$0x2f, -0x390(%rbp)
0000000100011f6a	je	0x100011ff8
0000000100011f70	movq	-0x338(%rbp), %rsi
0000000100011f77	testq	%rsi, %rsi
0000000100011f7a	je	0x100011f91
0000000100011f7c	movq	-0x340(%rbp), %rdi
0000000100011f83	shlq	$0x2, %rsi
0000000100011f87	movl	$0x2, %edx
0000000100011f8c	callq	___rust_dealloc
0000000100011f91	movq	-0x320(%rbp), %rax
0000000100011f98	testq	%rax, %rax
0000000100011f9b	je	0x100011fb6
0000000100011f9d	movq	-0x328(%rbp), %rdi
0000000100011fa4	shlq	$0x3, %rax
0000000100011fa8	leaq	(%rax,%rax,2), %rsi
0000000100011fac	movl	$0x8, %edx
0000000100011fb1	callq	___rust_dealloc
0000000100011fb6	movq	-0x308(%rbp), %rsi
0000000100011fbd	testq	%rsi, %rsi
0000000100011fc0	je	0x100011fd7
0000000100011fc2	movq	-0x310(%rbp), %rdi
0000000100011fc9	shlq	$0x2, %rsi
0000000100011fcd	movl	$0x2, %edx
0000000100011fd2	callq	___rust_dealloc
0000000100011fd7	movq	-0x2f0(%rbp), %rsi
0000000100011fde	testq	%rsi, %rsi
0000000100011fe1	je	0x100011ff8
0000000100011fe3	movq	-0x2f8(%rbp), %rdi
0000000100011fea	shlq	$0x6, %rsi
0000000100011fee	movl	$0x8, %edx
0000000100011ff3	callq	___rust_dealloc
0000000100011ff8	movq	%rbx, -0x390(%rbp)
0000000100011fff	movq	%r13, -0x388(%rbp)
0000000100012006	movq	-0x418(%rbp), %rax
000000010001200d	movq	%rax, -0x380(%rbp)
0000000100012014	movq	-0x190(%rbp), %rax
000000010001201b	movq	%rax, -0x378(%rbp)
0000000100012022	movq	-0x188(%rbp), %rax
0000000100012029	movq	%rax, -0x370(%rbp)
0000000100012030	movq	-0x180(%rbp), %rax
0000000100012037	movq	%rax, -0x368(%rbp)
000000010001203e	movq	-0x178(%rbp), %rax
0000000100012045	movq	%rax, -0x360(%rbp)
000000010001204c	movq	-0x170(%rbp), %rax
0000000100012053	movq	%rax, -0x358(%rbp)
000000010001205a	movq	-0xe8(%rbp), %rax
0000000100012061	movq	%rax, -0x350(%rbp)
0000000100012068	movq	-0x230(%rbp), %rax
000000010001206f	movq	%rax, -0x348(%rbp)
0000000100012076	movq	-0xd8(%rbp), %rax
000000010001207d	movq	%rax, -0x340(%rbp)
0000000100012084	movq	-0x118(%rbp), %rax
000000010001208b	movq	%rax, -0x338(%rbp)
0000000100012092	movq	-0x1b0(%rbp), %rax
0000000100012099	movq	%rax, -0x330(%rbp)
00000001000120a0	movq	-0x208(%rbp), %rax
00000001000120a7	movq	%rax, -0x318(%rbp)
00000001000120ae	movq	-0x210(%rbp), %rax
00000001000120b5	movq	%rax, -0x320(%rbp)
00000001000120bc	movq	-0x218(%rbp), %rax
00000001000120c3	movq	%rax, -0x328(%rbp)
00000001000120ca	movq	-0x70(%rbp), %rax
00000001000120ce	movq	%rax, -0x310(%rbp)
00000001000120d5	movq	-0xb8(%rbp), %rax
00000001000120dc	movq	%rax, -0x308(%rbp)
00000001000120e3	movq	-0x78(%rbp), %rax
00000001000120e7	movq	%rax, -0x300(%rbp)
00000001000120ee	movq	-0x1f8(%rbp), %rax
00000001000120f5	movq	%rax, -0x2f8(%rbp)
00000001000120fc	movq	-0x1f0(%rbp), %rax
0000000100012103	movq	%rax, -0x2f0(%rbp)
000000010001210a	movq	-0x1e8(%rbp), %rax
0000000100012111	movq	%rax, -0x2e8(%rbp)
0000000100012118	movq	-0x1b8(%rbp), %rax
000000010001211f	movq	%rax, -0x2e0(%rbp)
0000000100012126	movq	-0x410(%rbp), %rax
000000010001212d	movq	%rax, -0x2d8(%rbp)
0000000100012134	movq	-0x1d8(%rbp), %rax
000000010001213b	movq	%rax, -0x2d0(%rbp)
0000000100012142	movq	-0x1a0(%rbp), %rax
0000000100012149	movq	%rax, -0x2c8(%rbp)
0000000100012150	movq	-0x1d0(%rbp), %rax
0000000100012157	movq	%rax, -0x2c0(%rbp)
000000010001215e	movq	%r12, -0x2b8(%rbp)
0000000100012165	movq	-0x128(%rbp), %rax
000000010001216c	movq	%rax, -0x2b0(%rbp)
0000000100012173	movzbl	-0x42(%rbp), %eax
0000000100012177	movb	%al, -0x2a8(%rbp)
000000010001217d	movzbl	-0x41(%rbp), %eax
0000000100012181	movb	%al, -0x2a7(%rbp)
0000000100012187	movw	%r15w, -0x2a6(%rbp)
000000010001218f	movzbl	-0xd9(%rbp), %eax
0000000100012196	movb	%al, -0x2a4(%rbp)
000000010001219c	movzbl	-0xdc(%rbp), %eax
00000001000121a3	movb	%al, -0x2a3(%rbp)
00000001000121a9	movzbl	-0x79(%rbp), %eax
00000001000121ad	movb	%al, -0x2a2(%rbp)
00000001000121b3	movzbl	-0xdb(%rbp), %eax
00000001000121ba	movb	%al, -0x2a1(%rbp)
00000001000121c0	movzbl	-0xda(%rbp), %eax
00000001000121c7	movb	%al, -0x2a0(%rbp)
00000001000121cd	movq	-0x110(%rbp), %rax
00000001000121d4	movb	%al, -0x29f(%rbp)
00000001000121da	movzwl	-0x1a4(%rbp), %eax
00000001000121e1	movw	%ax, -0x29a(%rbp)
00000001000121e8	movl	-0x1a8(%rbp), %eax
00000001000121ee	movl	%eax, -0x29e(%rbp)
00000001000121f4	movq	-0x240(%rbp), %rax
00000001000121fb	cmpq	$0x2e, %rax
00000001000121ff	jne	0x10001221e
0000000100012201	leaq	-0x3f0(%rbp), %rsi
0000000100012208	movl	$0x1a8, %edx                    ## imm = 0x1A8
000000010001220d	movq	-0x120(%rbp), %rdi
0000000100012214	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100012219	jmp	0x100011914
000000010001221e	cmpq	$0xc, %rax
0000000100012222	je	0x1000122d8
0000000100012228	testq	%rax, %rax
000000010001222b	jne	0x100012363
0000000100012231	movq	-0x238(%rbp), %r8
0000000100012238	movq	%r8, %rcx
000000010001223b	shrq	$0x8, %rcx
000000010001223f	movb	$0x1, %al
0000000100012241	xorl	%edx, %edx
0000000100012243	xorl	%esi, %esi
0000000100012245	jmp	0x100012369
000000010001224a	movl	-0xb0(%rbp), %ecx
0000000100012250	movl	-0xad(%rbp), %esi
0000000100012256	movl	%esi, -0x105(%rbp)
000000010001225c	movl	%ecx, -0x108(%rbp)
0000000100012262	jmp	0x1000114e8
0000000100012267	movq	%r15, %rax
000000010001226a	andq	$-0x100, %rax
0000000100012270	movl	$0x13, %ebx
0000000100012275	movq	%rbx, %r12
0000000100012278	shrq	$0x8, %r12
000000010001227c	movq	%rbx, %r14
000000010001227f	shrq	$0x10, %r14
0000000100012283	movzbl	%r15b, %r15d
0000000100012287	orq	%rax, %r15
000000010001228a	jmp	0x1000123e7
000000010001228f	movl	%edx, %r9d
0000000100012292	movb	$0x4, %r8b
0000000100012295	cmpq	%r9, %rsi
0000000100012298	jb	0x1000123dc
000000010001229e	cmpq	$0x1, %r9
00000001000122a2	jbe	0x1000123dc
00000001000122a8	movq	%r9, -0x1a0(%rbp)
00000001000122af	addq	$-0x2, %r9
00000001000122b3	leaq	0x2(%rax), %rcx
00000001000122b7	movq	%rcx, -0x58(%rbp)
00000001000122bb	movq	%r9, -0x50(%rbp)
00000001000122bf	movzwl	(%rax), %r15d
00000001000122c3	leal	-0x6(%r15), %esi
00000001000122c7	cmpw	$-0x4, %si
00000001000122cb	jae	0x100012498
00000001000122d1	movb	$0x11, %bl
00000001000122d3	jmp	0x1000123e7
00000001000122d8	movq	-0x260(%rbp), %rsi
00000001000122df	movq	0x10(%r14), %rcx
00000001000122e3	movq	0x18(%r14), %rax
00000001000122e7	subq	%rsi, %rax
00000001000122ea	jb	0x100012310
00000001000122ec	movzbl	-0x3a8(%rbp), %edx
00000001000122f3	movzbl	%dl, %edi
00000001000122f6	addq	%rsi, %rcx
00000001000122f9	movq	-0x238(%rbp), %r9
0000000100012300	imulq	%rdi, %r9
0000000100012304	movq	%rax, %rsi
0000000100012307	subq	%r9, %rsi
000000010001230a	jae	0x100012410
0000000100012310	movq	%rcx, -0xa9(%rbp)
0000000100012317	movb	$0x13, %al
0000000100012319	movl	%ecx, %r8d
000000010001231c	movzbl	-0xaa(%rbp), %ecx
0000000100012323	shll	$0x10, %ecx
0000000100012326	movzwl	-0xac(%rbp), %edx
000000010001232d	orl	%ecx, %edx
000000010001232f	shlq	$0x20, %rdx
0000000100012333	movl	-0xb0(%rbp), %esi
0000000100012339	movl	-0xa8(%rbp), %ecx
000000010001233f	orq	%rdx, %rsi
0000000100012342	movzbl	-0xa2(%rbp), %edx
0000000100012349	shll	$0x10, %edx
000000010001234c	movzwl	-0xa4(%rbp), %edi
0000000100012353	orl	%edx, %edi
0000000100012355	shlq	$0x20, %rdi
0000000100012359	orq	%rdi, %rcx
000000010001235c	movl	$0x1, %edx
0000000100012361	jmp	0x100012369
0000000100012363	xorl	%edx, %edx
0000000100012365	xorl	%eax, %eax
0000000100012367	xorl	%esi, %esi
0000000100012369	shlq	$0x8, %rsi
000000010001236d	movzbl	%al, %eax
0000000100012370	orq	%rsi, %rax
0000000100012373	shlq	$0x8, %rcx
0000000100012377	movzbl	%r8b, %esi
000000010001237b	orq	%rcx, %rsi
000000010001237e	testq	%rdx, %rdx
0000000100012381	je	0x10001239e
0000000100012383	movq	-0x120(%rbp), %rcx
000000010001238a	movq	%rax, 0x8(%rcx)
000000010001238e	movq	%rsi, 0x10(%rcx)
0000000100012392	movq	$0x2, (%rcx)
0000000100012399	jmp	0x10001186d
000000010001239e	cmpq	$0x1, %rax
00000001000123a2	jne	0x100012201
00000001000123a8	movq	%rsi, -0x270(%rbp)
00000001000123af	jmp	0x100012201
00000001000123b4	cmpq	$0x8, %rsi
00000001000123b8	jb	0x100012456
00000001000123be	addq	$-0xc, %rcx
00000001000123c2	movq	0x4(%r15), %r9
00000001000123c6	addq	$0xc, %r15
00000001000123ca	movb	$0x8, %r8b
00000001000123cd	movq	%r15, %rax
00000001000123d0	movq	%rcx, %rsi
00000001000123d3	cmpq	%r9, %rsi
00000001000123d6	jae	0x10001229e
00000001000123dc	movb	$0x13, %bl
00000001000123de	xorl	%r12d, %r12d
00000001000123e1	xorl	%r14d, %r14d
00000001000123e4	movq	%rax, %r15
00000001000123e7	movzbl	%r12b, %eax
00000001000123eb	shlq	$0x10, %r14
00000001000123ef	shlq	$0x8, %rax
00000001000123f3	orq	%r14, %rax
00000001000123f6	movzbl	%bl, %ecx
00000001000123f9	orq	%rax, %rcx
00000001000123fc	movq	-0x120(%rbp), %rax
0000000100012403	movq	%rcx, 0x8(%rax)
0000000100012407	movq	%r15, 0x10(%rax)
000000010001240b	jmp	0x100011866
0000000100012410	decl	%edi
0000000100012412	cmpl	$0x7, %edi
0000000100012415	ja	0x100012593
000000010001241b	addq	%r9, %rcx
000000010001241e	leaq	0x15df(%rip), %r8
0000000100012425	movslq	(%r8,%rdi,4), %rdi
0000000100012429	addq	%r8, %rdi
000000010001242c	jmpq	*%rdi
000000010001242e	cmpq	%r9, %rax
0000000100012431	jne	0x100012792
0000000100012437	movb	$0x0, -0xb0(%rbp)
000000010001243e	movw	$0x0, -0xab(%rbp)
0000000100012447	movl	$0x0, -0xaf(%rbp)
0000000100012451	jmp	0x100012310
0000000100012456	movb	$0x0, -0xaa(%rbp)
000000010001245d	movw	$0x0, -0xac(%rbp)
0000000100012466	movl	$0x0, -0xb0(%rbp)
0000000100012470	movq	%rax, -0xa9(%rbp)
0000000100012477	movq	-0xb0(%rbp), %r15
000000010001247e	andq	$-0x100, %rax
0000000100012484	movq	%r15, %rbx
0000000100012487	shlq	$0x8, %rbx
000000010001248b	shrq	$0x38, %r15
000000010001248f	orq	$0x13, %rbx
0000000100012493	jmp	0x100012275
0000000100012498	cmpw	$0x4, %r15w
000000010001249d	jbe	0x1000124c2
000000010001249f	testq	%r9, %r9
00000001000124a2	je	0x1000128e2
00000001000124a8	movq	-0x1a0(%rbp), %rcx
00000001000124af	cmpq	$0x3, %rcx
00000001000124b3	jne	0x1000125a8
00000001000124b9	addq	$0x3, %rax
00000001000124bd	jmp	0x1000123dc
00000001000124c2	movl	%edi, %esi
00000001000124c4	cmpl	$-0x10, %edx
00000001000124c7	jb	0x1000124e3
00000001000124c9	cmpq	$0x7, %r9
00000001000124cd	jbe	0x1000125cd
00000001000124d3	addq	$-0x8, %r9
00000001000124d7	movq	(%rcx), %rdx
00000001000124da	addq	$0x8, %rcx
00000001000124de	movq	%rcx, %rdi
00000001000124e1	jmp	0x100012519
00000001000124e3	cmpq	$0x4, %r9
00000001000124e7	jb	0x100012629
00000001000124ed	addq	$-0x4, %r9
00000001000124f1	leaq	0x4(%rcx), %rdi
00000001000124f5	movzwl	0x1(%rcx), %eax
00000001000124f9	movzbl	(%rcx), %edx
00000001000124fc	movzbl	0x3(%rcx), %ecx
0000000100012500	movb	%dl, -0xad(%rbp)
0000000100012506	movb	%cl, -0xaa(%rbp)
000000010001250c	movw	%ax, -0xac(%rbp)
0000000100012513	movl	-0xad(%rbp), %edx
0000000100012519	subq	%rdx, %r9
000000010001251c	jae	0x10001267b
0000000100012522	movb	$0x13, %bl
0000000100012524	movq	%rdi, %r15
0000000100012527	jmp	0x1000122d3
000000010001252c	cmpq	$0x4, %rsi
0000000100012530	jb	0x100012760
0000000100012536	movzwl	0x1(%rcx), %eax
000000010001253a	movzbl	(%rcx), %edx
000000010001253d	movzbl	0x3(%rcx), %ecx
0000000100012541	movb	%dl, -0x18d(%rbp)
0000000100012547	movb	%cl, -0x18a(%rbp)
000000010001254d	movw	%ax, -0x18c(%rbp)
0000000100012554	movl	-0x18d(%rbp), %r8d
000000010001255b	jmp	0x100012573
000000010001255d	cmpq	$0x2, %rsi
0000000100012561	jb	0x10001279b
0000000100012567	movzwl	(%rcx), %r8d
000000010001256b	movw	%r8w, -0x18f(%rbp)
0000000100012573	movb	$0x4b, %al
0000000100012575	movq	%r8, -0xa9(%rbp)
000000010001257c	jmp	0x1000127d9
0000000100012581	cmpq	$0x8, %rsi
0000000100012585	jb	0x1000127e6
000000010001258b	movq	(%rcx), %r8
000000010001258e	jmp	0x100012238
0000000100012593	movb	%dl, -0xb0(%rbp)
0000000100012599	movb	$0x17, %al
000000010001259b	movzbl	-0xa9(%rbp), %r8d
00000001000125a3	jmp	0x10001231c
00000001000125a8	movzbl	0x2(%rax), %esi
00000001000125ac	leaq	-0x4(%rcx), %r9
00000001000125b0	leaq	0x4(%rax), %rcx
00000001000125b4	movq	%rcx, -0x58(%rbp)
00000001000125b8	movq	%r9, -0x50(%rbp)
00000001000125bc	cmpb	$0x0, 0x3(%rax)
00000001000125c0	je	0x1000124c4
00000001000125c6	movb	$0x41, %bl
00000001000125c8	jmp	0x1000123e7
00000001000125cd	movb	$0x0, -0xaa(%rbp)
00000001000125d4	movw	$0x0, -0xac(%rbp)
00000001000125dd	movl	$0x0, -0xb0(%rbp)
00000001000125e7	movq	%rcx, -0xa9(%rbp)
00000001000125ee	movq	-0xb0(%rbp), %r12
00000001000125f5	movl	-0xa8(%rbp), %eax
00000001000125fb	movl	-0xa5(%rbp), %ecx
0000000100012601	movl	%eax, -0x100(%rbp)
0000000100012607	movl	%ecx, -0xfd(%rbp)
000000010001260d	movq	%r12, -0x108(%rbp)
0000000100012614	movq	%r12, %r14
0000000100012617	shrq	$0x8, %r14
000000010001261b	movq	-0x101(%rbp), %r15
0000000100012622	movb	$0x13, %bl
0000000100012624	jmp	0x1000123e7
0000000100012629	movl	$0x0, -0xb0(%rbp)
0000000100012633	movb	$0x0, -0xaa(%rbp)
000000010001263a	movw	$0x0, -0xac(%rbp)
0000000100012643	movl	-0xad(%rbp), %eax
0000000100012649	movl	%eax, -0x105(%rbp)
000000010001264f	movl	$0x0, -0x108(%rbp)
0000000100012659	xorl	%r12d, %r12d
000000010001265c	movl	-0x107(%rbp), %eax
0000000100012662	movzwl	-0x103(%rbp), %r14d
000000010001266a	shlq	$0x20, %r14
000000010001266e	orq	%rax, %r14
0000000100012671	movb	$0x13, %bl
0000000100012673	movq	%rcx, %r15
0000000100012676	jmp	0x1000123e7
000000010001267b	testq	%rdx, %rdx
000000010001267e	je	0x100012838
0000000100012684	leaq	-0x1(%rdx), %rax
0000000100012688	leaq	0x1(%rdi), %rcx
000000010001268c	movq	%rcx, -0xe8(%rbp)
0000000100012693	movq	%rcx, -0x58(%rbp)
0000000100012697	movq	%rax, -0x50(%rbp)
000000010001269b	movzbl	(%rdi), %ecx
000000010001269e	testb	%cl, %cl
00000001000126a0	je	0x100012848
00000001000126a6	movb	%cl, -0xdc(%rbp)
00000001000126ac	movq	%rdx, -0x1d0(%rbp)
00000001000126b3	movq	%rdi, -0x1b8(%rbp)
00000001000126ba	movq	%r9, -0x410(%rbp)
00000001000126c1	movb	%r8b, -0x41(%rbp)
00000001000126c5	movq	%rbx, -0x418(%rbp)
00000001000126cc	movb	%sil, -0x42(%rbp)
00000001000126d0	movb	$0x1, -0x79(%rbp)
00000001000126d4	cmpw	$0x4, %r15w
00000001000126d9	jb	0x100012717
00000001000126db	testq	%rax, %rax
00000001000126de	je	0x1000128ce
00000001000126e4	movq	-0x1b8(%rbp), %rax
00000001000126eb	movzbl	0x1(%rax), %eax
00000001000126ef	movb	%al, -0x79(%rbp)
00000001000126f2	testb	%al, %al
00000001000126f4	je	0x1000128f2
00000001000126fa	movq	-0x1d0(%rbp), %rax
0000000100012701	addq	$-0x2, %rax
0000000100012705	movq	-0x1b8(%rbp), %rcx
000000010001270c	addq	$0x2, %rcx
0000000100012710	movq	%rcx, -0xe8(%rbp)
0000000100012717	testq	%rax, %rax
000000010001271a	je	0x1000128ce
0000000100012720	movq	-0xe8(%rbp), %rcx
0000000100012727	incq	%rcx
000000010001272a	movq	%rcx, -0x58(%rbp)
000000010001272e	movq	%rax, %rdx
0000000100012731	decq	%rdx
0000000100012734	movq	%rdx, -0x50(%rbp)
0000000100012738	je	0x1000128e2
000000010001273e	cmpq	$0x2, %rax
0000000100012742	jne	0x10001284f
0000000100012748	movq	-0xe8(%rbp), %r15
000000010001274f	addq	$0x2, %r15
0000000100012753	movb	$0x13, %bl
0000000100012755	xorl	%r12d, %r12d
0000000100012758	xorl	%r14d, %r14d
000000010001275b	jmp	0x1000123e7
0000000100012760	movl	$0x0, -0x190(%rbp)
000000010001276a	movb	$0x0, -0x18a(%rbp)
0000000100012771	movw	$0x0, -0x18c(%rbp)
000000010001277a	movl	-0x18d(%rbp), %eax
0000000100012780	movl	%eax, -0xad(%rbp)
0000000100012786	movl	$0x0, -0xb0(%rbp)
0000000100012790	jmp	0x1000127cd
0000000100012792	movzbl	(%rcx), %r8d
0000000100012796	jmp	0x100012238
000000010001279b	movw	$0x0, -0x190(%rbp)
00000001000127a4	movl	$0x0, -0x18e(%rbp)
00000001000127ae	movb	$0x0, -0x18a(%rbp)
00000001000127b5	movl	-0x190(%rbp), %eax
00000001000127bb	movl	%eax, -0xb0(%rbp)
00000001000127c1	movl	-0x18d(%rbp), %eax
00000001000127c7	movl	%eax, -0xad(%rbp)
00000001000127cd	movb	$0x13, %al
00000001000127cf	movq	%rcx, -0xa9(%rbp)
00000001000127d6	movq	%rcx, %r8
00000001000127d9	cmpb	$0x4b, %al
00000001000127db	je	0x100012238
00000001000127e1	jmp	0x10001231c
00000001000127e6	movb	$0x0, -0x18a(%rbp)
00000001000127ed	movw	$0x0, -0x18c(%rbp)
00000001000127f6	movl	$0x0, -0x190(%rbp)
0000000100012800	movq	%rcx, -0x189(%rbp)
0000000100012807	movq	-0x190(%rbp), %r8
000000010001280e	movl	-0x188(%rbp), %eax
0000000100012814	movl	-0x185(%rbp), %ecx
000000010001281a	movl	%eax, -0xa8(%rbp)
0000000100012820	movl	%ecx, -0xa5(%rbp)
0000000100012826	movq	%r8, -0xb0(%rbp)
000000010001282d	shrq	$0x38, %r8
0000000100012831	movb	$0x13, %al
0000000100012833	jmp	0x10001231c
0000000100012838	movb	$0x13, %bl
000000010001283a	xorl	%r12d, %r12d
000000010001283d	movq	%rdi, %r15
0000000100012840	xorl	%r14d, %r14d
0000000100012843	jmp	0x1000123e7
0000000100012848	movb	$0x1a, %bl
000000010001284a	jmp	0x1000123e7
000000010001284f	movq	-0xe8(%rbp), %rdi
0000000100012856	movzbl	(%rdi), %edx
0000000100012859	movzbl	0x1(%rdi), %ecx
000000010001285d	movb	%cl, -0xdb(%rbp)
0000000100012863	leaq	-0x3(%rax), %rsi
0000000100012867	leaq	0x3(%rdi), %rcx
000000010001286b	movq	%rcx, -0x58(%rbp)
000000010001286f	movq	%rsi, -0x50(%rbp)
0000000100012873	movzbl	0x2(%rdi), %edi
0000000100012877	movb	%dil, -0xda(%rbp)
000000010001287e	testb	%dil, %dil
0000000100012881	je	0x1000128f9
0000000100012883	testb	%dl, %dl
0000000100012885	setne	-0xd9(%rbp)
000000010001288c	testq	%rsi, %rsi
000000010001288f	je	0x1000128e2
0000000100012891	movq	-0xe8(%rbp), %rcx
0000000100012898	movzbl	0x3(%rcx), %ecx
000000010001289c	movq	%rcx, -0x110(%rbp)
00000001000128a3	testb	%cl, %cl
00000001000128a5	je	0x100012900
00000001000128a7	addq	$-0x4, %rax
00000001000128ab	addq	$0x4, -0xe8(%rbp)
00000001000128b3	movq	-0x110(%rbp), %rcx
00000001000128ba	decl	%ecx
00000001000128bc	movzbl	%cl, %edx
00000001000128bf	movq	%rdx, %rcx
00000001000128c2	movq	%rdx, -0x230(%rbp)
00000001000128c9	subq	%rdx, %rax
00000001000128cc	jae	0x100012907
00000001000128ce	movb	$0x13, %bl
00000001000128d0	xorl	%r12d, %r12d
00000001000128d3	xorl	%r14d, %r14d
00000001000128d6	movq	-0xe8(%rbp), %r15
00000001000128dd	jmp	0x1000123e7
00000001000128e2	movb	$0x13, %bl
00000001000128e4	xorl	%r12d, %r12d
00000001000128e7	xorl	%r14d, %r14d
00000001000128ea	movq	%rcx, %r15
00000001000128ed	jmp	0x1000123e7
00000001000128f2	movb	$0x1b, %bl
00000001000128f4	jmp	0x1000123e7
00000001000128f9	movb	$0x1c, %bl
00000001000128fb	jmp	0x1000123e7
0000000100012900	movb	$0x1d, %bl
0000000100012902	jmp	0x1000123e7
0000000100012907	movq	-0xe8(%rbp), %rcx
000000010001290e	movq	-0x230(%rbp), %rdx
0000000100012915	addq	%rdx, %rcx
0000000100012918	movq	%rcx, -0x30(%rbp)
000000010001291c	movq	%rcx, -0x58(%rbp)
0000000100012920	movq	%rax, -0x50(%rbp)
0000000100012924	movq	$0x8, -0xd0(%rbp)
000000010001292f	movq	$0x0, -0xc8(%rbp)
000000010001293a	movq	$0x0, -0xc0(%rbp)
0000000100012945	cmpw	$0x4, %r15w
000000010001294a	ja	0x100012a38
0000000100012950	testq	%rax, %rax
0000000100012953	je	0x100012b15
0000000100012959	movq	-0x30(%rbp), %rcx
000000010001295d	leaq	(%rcx,%rax), %rdx
0000000100012961	movl	$0x8, %ecx
0000000100012966	xorl	%esi, %esi
0000000100012968	movq	%rsi, -0x1b0(%rbp)
000000010001296f	xorl	%esi, %esi
0000000100012971	movq	-0xd8(%rbp), %r14
0000000100012978	movq	-0x30(%rbp), %rdi
000000010001297c	movq	%rdi, -0xd8(%rbp)
0000000100012983	xorl	%ebx, %ebx
0000000100012985	movq	-0xd8(%rbp), %rdi
000000010001298c	cmpb	$0x0, (%rdi,%rbx)
0000000100012990	je	0x1000129ab
0000000100012992	movq	-0xd8(%rbp), %rdi
0000000100012999	leaq	0x1(%rdi,%rbx), %rdi
000000010001299e	incq	%rbx
00000001000129a1	cmpq	%rdx, %rdi
00000001000129a4	jne	0x100012985
00000001000129a6	jmp	0x100012af4
00000001000129ab	movq	%rbx, %rdx
00000001000129ae	notq	%rdx
00000001000129b1	addq	%rax, %rdx
00000001000129b4	movq	-0xd8(%rbp), %rax
00000001000129bb	leaq	0x1(%rax,%rbx), %rax
00000001000129c0	movq	%rax, -0x58(%rbp)
00000001000129c4	movq	%rdx, -0x50(%rbp)
00000001000129c8	testq	%rbx, %rbx
00000001000129cb	je	0x100012e37
00000001000129d1	cmpq	-0xc8(%rbp), %rsi
00000001000129d8	jne	0x1000129f4
00000001000129da	leaq	-0xd0(%rbp), %rdi
00000001000129e1	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
00000001000129e6	movq	-0xd0(%rbp), %rcx
00000001000129ed	movq	-0xc0(%rbp), %rsi
00000001000129f4	leaq	(%rsi,%rsi,2), %rax
00000001000129f8	movq	$0x1f, (%rcx,%rax,8)
0000000100012a00	movq	-0xd8(%rbp), %r14
0000000100012a07	movq	%r14, 0x8(%rcx,%rax,8)
0000000100012a0c	movq	%rbx, 0x10(%rcx,%rax,8)
0000000100012a11	incq	%rsi
0000000100012a14	movq	%rsi, -0xc0(%rbp)
0000000100012a1b	movq	-0x58(%rbp), %rdx
0000000100012a1f	movq	-0x50(%rbp), %rax
0000000100012a23	movq	%rdx, -0x30(%rbp)
0000000100012a27	addq	%rax, %rdx
0000000100012a2a	testq	%rax, %rax
0000000100012a2d	jne	0x100012971
0000000100012a33	jmp	0x100012b15
0000000100012a38	leaq	-0xb0(%rbp), %rdi
0000000100012a3f	leaq	-0x58(%rbp), %rsi
0000000100012a43	callq	__ZN5gimli4read4line15FileEntryFormat5parse17h95fbca5fe10a6cf9E ## gimli::read::line::FileEntryFormat::parse::h95fbca5fe10a6cf9
0000000100012a48	movq	-0xb0(%rbp), %rax
0000000100012a4f	movq	%rax, -0xd8(%rbp)
0000000100012a56	testq	%rax, %rax
0000000100012a59	je	0x100012b3c
0000000100012a5f	movq	-0xa8(%rbp), %rax
0000000100012a66	movq	%rax, -0x118(%rbp)
0000000100012a6d	movq	-0x58(%rbp), %rax
0000000100012a71	movq	-0x50(%rbp), %rcx
0000000100012a75	testq	%rcx, %rcx
0000000100012a78	je	0x100012b64
0000000100012a7e	movq	-0xa0(%rbp), %rdx
0000000100012a85	movq	%rdx, -0x1b0(%rbp)
0000000100012a8c	leaq	(%rax,%rcx), %rdx
0000000100012a90	movq	%rdx, -0x30(%rbp)
0000000100012a94	movl	$0x1, %edx
0000000100012a99	subq	%rcx, %rdx
0000000100012a9c	incq	%rax
0000000100012a9f	xorl	%ecx, %ecx
0000000100012aa1	movq	%rcx, -0x78(%rbp)
0000000100012aa5	xorl	%ecx, %ecx
0000000100012aa7	movzbl	-0x1(%rax), %esi
0000000100012aab	cmpl	$0x3f, %ecx
0000000100012aae	jne	0x100012aba
0000000100012ab0	cmpb	$0x2, %sil
0000000100012ab4	jae	0x100012b75
0000000100012aba	movzbl	%sil, %esi
0000000100012abe	movl	%esi, %edi
0000000100012ac0	andl	$0x7f, %edi
0000000100012ac3	shlq	%cl, %rdi
0000000100012ac6	orq	%rdi, -0x78(%rbp)
0000000100012aca	testb	%sil, %sil
0000000100012acd	jns	0x100012b8d
0000000100012ad3	addl	$0x7, %ecx
0000000100012ad6	incq	%rdx
0000000100012ad9	incq	%rax
0000000100012adc	cmpq	$0x1, %rdx
0000000100012ae0	jne	0x100012aa7
0000000100012ae2	movq	-0x30(%rbp), %rax
0000000100012ae6	movq	%rax, -0x58(%rbp)
0000000100012aea	movq	$0x0, -0x50(%rbp)
0000000100012af2	jmp	0x100012b68
0000000100012af4	movq	-0xd8(%rbp), %rax
0000000100012afb	movq	%rax, -0x30(%rbp)
0000000100012aff	jmp	0x100012b15
0000000100012b01	movl	$0x8, %edi
0000000100012b06	movl	$0x40, %esi
0000000100012b0b	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100012b10	jmp	0x1000137c1
0000000100012b15	movq	%r14, %r12
0000000100012b18	shrq	$0x8, %r12
0000000100012b1c	shrq	$0x10, %r14
0000000100012b20	movl	$0x2, %eax
0000000100012b25	movq	%rax, -0xd8(%rbp)
0000000100012b2c	movb	$0x13, %bl
0000000100012b2e	xorl	%eax, %eax
0000000100012b30	movq	%rax, -0x118(%rbp)
0000000100012b37	jmp	0x100013651
0000000100012b3c	movq	-0xa8(%rbp), %rbx
0000000100012b43	movq	-0xa0(%rbp), %rax
0000000100012b4a	movq	%rax, -0x30(%rbp)
0000000100012b4e	movq	%rbx, %r12
0000000100012b51	shrq	$0x8, %r12
0000000100012b55	movq	%rbx, %r14
0000000100012b58	shrq	$0x10, %r14
0000000100012b5c	movb	$0x1, %r15b
0000000100012b5f	jmp	0x100013654
0000000100012b64	movq	%rax, -0x30(%rbp)
0000000100012b68	movb	$0x13, %bl
0000000100012b6a	xorl	%r12d, %r12d
0000000100012b6d	xorl	%r14d, %r14d
0000000100012b70	jmp	0x100013651
0000000100012b75	movq	%rax, -0x58(%rbp)
0000000100012b79	negq	%rdx
0000000100012b7c	movq	%rdx, -0x50(%rbp)
0000000100012b80	movb	$0x6, %bl
0000000100012b82	xorl	%r12d, %r12d
0000000100012b85	xorl	%r14d, %r14d
0000000100012b88	jmp	0x100013651
0000000100012b8d	movq	%rax, -0x58(%rbp)
0000000100012b91	negq	%rdx
0000000100012b94	movq	%rdx, -0x50(%rbp)
0000000100012b98	cmpq	$0x0, -0x78(%rbp)
0000000100012b9d	je	0x100012d2c
0000000100012ba3	cmpq	$0x0, -0x1b0(%rbp)
0000000100012bab	je	0x10001378f
0000000100012bb1	movl	%r15d, %eax
0000000100012bb4	shll	$0x10, %eax
0000000100012bb7	movzbl	-0x41(%rbp), %ecx
0000000100012bbb	shll	$0x8, %ecx
0000000100012bbe	orl	%eax, %ecx
0000000100012bc0	movzbl	-0x42(%rbp), %eax
0000000100012bc4	orl	%ecx, %eax
0000000100012bc6	movl	%eax, -0x30(%rbp)
0000000100012bc9	movq	-0x1b0(%rbp), %rax
0000000100012bd0	leaq	(,%rax,4), %rax
0000000100012bd8	movq	%rax, -0x40(%rbp)
0000000100012bdc	movl	$0x8, %eax
0000000100012be1	movq	%rax, -0x68(%rbp)
0000000100012be5	xorl	%r12d, %r12d
0000000100012be8	xorl	%eax, %eax
0000000100012bea	movq	%rax, -0x38(%rbp)
0000000100012bee	xorl	%eax, %eax
0000000100012bf0	movq	%rax, -0x60(%rbp)
0000000100012bf4	incq	-0x60(%rbp)
0000000100012bf8	movl	$0x2e, %r14d
0000000100012bfe	xorl	%ebx, %ebx
0000000100012c00	movq	-0xd8(%rbp), %rax
0000000100012c07	movzwl	0x2(%rax,%rbx), %ecx
0000000100012c0c	leaq	-0xb0(%rbp), %rdi
0000000100012c13	leaq	-0x58(%rbp), %rsi
0000000100012c17	movl	-0x30(%rbp), %edx
0000000100012c1a	callq	__ZN5gimli4read4line15parse_attribute17hc027efeaac70e0feE ## gimli::read::line::parse_attribute::hc027efeaac70e0fe
0000000100012c1f	movq	-0xb0(%rbp), %rax
0000000100012c26	cmpq	$0x2e, %rax
0000000100012c2a	je	0x100012d07
0000000100012c30	movq	-0xd8(%rbp), %rcx
0000000100012c37	cmpw	$0x1, (%rcx,%rbx)
0000000100012c3c	movq	-0x70(%rbp), %rcx
0000000100012c40	cmoveq	-0xa8(%rbp), %rcx
0000000100012c48	movq	%rcx, -0x70(%rbp)
0000000100012c4c	movq	-0xb8(%rbp), %rcx
0000000100012c53	cmoveq	-0xa0(%rbp), %rcx
0000000100012c5b	movq	%rcx, -0xb8(%rbp)
0000000100012c62	cmoveq	%rax, %r14
0000000100012c66	addq	$0x4, %rbx
0000000100012c6a	cmpq	%rbx, -0x40(%rbp)
0000000100012c6e	jne	0x100012c00
0000000100012c70	cmpq	$0x2e, %r14
0000000100012c74	je	0x10001378f
0000000100012c7a	movq	-0x38(%rbp), %rax
0000000100012c7e	cmpq	-0xc8(%rbp), %rax
0000000100012c85	jne	0x100012cad
0000000100012c87	leaq	-0xd0(%rbp), %rdi
0000000100012c8e	movq	-0x38(%rbp), %rsi
0000000100012c92	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
0000000100012c97	movq	-0xd0(%rbp), %rax
0000000100012c9e	movq	%rax, -0x68(%rbp)
0000000100012ca2	movq	-0xc0(%rbp), %rax
0000000100012ca9	movq	%rax, -0x38(%rbp)
0000000100012cad	movq	-0x38(%rbp), %rsi
0000000100012cb1	leaq	(%rsi,%rsi,2), %rax
0000000100012cb5	movq	-0x68(%rbp), %rdx
0000000100012cb9	movq	%r14, (%rdx,%rax,8)
0000000100012cbd	movq	-0x70(%rbp), %rcx
0000000100012cc1	movq	%rcx, 0x8(%rdx,%rax,8)
0000000100012cc6	movq	-0xb8(%rbp), %rcx
0000000100012ccd	movq	%rcx, 0x10(%rdx,%rax,8)
0000000100012cd2	incq	%rsi
0000000100012cd5	movq	%rsi, -0x38(%rbp)
0000000100012cd9	movq	%rsi, -0xc0(%rbp)
0000000100012ce0	movq	-0x60(%rbp), %rax
0000000100012ce4	cmpq	-0x78(%rbp), %rax
0000000100012ce8	jne	0x100012bf4
0000000100012cee	jmp	0x100012e4c
0000000100012cf3	movl	$0x8, %edi
0000000100012cf8	movl	$0x40, %esi
0000000100012cfd	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100012d02	jmp	0x1000137c1
0000000100012d07	movq	-0xa8(%rbp), %rbx
0000000100012d0e	movq	-0xa0(%rbp), %rax
0000000100012d15	movq	%rax, -0x30(%rbp)
0000000100012d19	movq	%rbx, %r12
0000000100012d1c	shrq	$0x8, %r12
0000000100012d20	movq	%rbx, %r14
0000000100012d23	shrq	$0x10, %r14
0000000100012d27	jmp	0x100013651
0000000100012d2c	movq	$0x8, -0x108(%rbp)
0000000100012d37	movq	$0x0, -0x100(%rbp)
0000000100012d42	movq	$0x0, -0xf8(%rbp)
0000000100012d4d	xorl	%r12d, %r12d
0000000100012d50	leaq	-0xb0(%rbp), %rdi
0000000100012d57	leaq	-0x58(%rbp), %rsi
0000000100012d5b	callq	__ZN5gimli4read4line15FileEntryFormat5parse17h95fbca5fe10a6cf9E ## gimli::read::line::FileEntryFormat::parse::h95fbca5fe10a6cf9
0000000100012d60	movq	-0xb0(%rbp), %rax
0000000100012d67	movq	%rax, -0x70(%rbp)
0000000100012d6b	testq	%rax, %rax
0000000100012d6e	je	0x100012e0f
0000000100012d74	movq	-0xa8(%rbp), %rax
0000000100012d7b	movq	%rax, -0xb8(%rbp)
0000000100012d82	movq	-0x58(%rbp), %rax
0000000100012d86	movq	-0x50(%rbp), %rcx
0000000100012d8a	testq	%rcx, %rcx
0000000100012d8d	je	0x100013130
0000000100012d93	movq	-0xa0(%rbp), %rdx
0000000100012d9a	movq	%rdx, -0x78(%rbp)
0000000100012d9e	leaq	(%rax,%rcx), %rdx
0000000100012da2	movq	%rdx, -0x30(%rbp)
0000000100012da6	movl	$0x1, %edx
0000000100012dab	subq	%rcx, %rdx
0000000100012dae	incq	%rax
0000000100012db1	xorl	%ecx, %ecx
0000000100012db3	movq	%rcx, -0x1c8(%rbp)
0000000100012dba	xorl	%ecx, %ecx
0000000100012dbc	movzbl	-0x1(%rax), %esi
0000000100012dc0	cmpl	$0x3f, %ecx
0000000100012dc3	jne	0x100012dcf
0000000100012dc5	cmpb	$0x2, %sil
0000000100012dc9	jae	0x100013141
0000000100012dcf	movzbl	%sil, %esi
0000000100012dd3	movl	%esi, %edi
0000000100012dd5	andl	$0x7f, %edi
0000000100012dd8	shlq	%cl, %rdi
0000000100012ddb	orq	%rdi, -0x1c8(%rbp)
0000000100012de2	testb	%sil, %sil
0000000100012de5	jns	0x100013159
0000000100012deb	addl	$0x7, %ecx
0000000100012dee	incq	%rdx
0000000100012df1	incq	%rax
0000000100012df4	cmpq	$0x1, %rdx
0000000100012df8	jne	0x100012dbc
0000000100012dfa	movq	-0x30(%rbp), %rax
0000000100012dfe	movq	%rax, -0x58(%rbp)
0000000100012e02	movq	$0x0, -0x50(%rbp)
0000000100012e0a	jmp	0x100013134
0000000100012e0f	movq	-0xa8(%rbp), %rbx
0000000100012e16	movq	-0xa0(%rbp), %rax
0000000100012e1d	movq	%rax, -0x30(%rbp)
0000000100012e21	movq	%rbx, %r12
0000000100012e24	shrq	$0x8, %r12
0000000100012e28	movq	%rbx, %r14
0000000100012e2b	shrq	$0x10, %r14
0000000100012e2f	movb	$0x1, %r15b
0000000100012e32	jmp	0x100013607
0000000100012e37	movl	$0x2, %eax
0000000100012e3c	movq	%rax, -0xd8(%rbp)
0000000100012e43	xorl	%eax, %eax
0000000100012e45	movq	%rax, -0x118(%rbp)
0000000100012e4c	movq	$0x8, -0x108(%rbp)
0000000100012e57	movq	$0x0, -0x100(%rbp)
0000000100012e62	movq	$0x0, -0xf8(%rbp)
0000000100012e6d	cmpw	$0x5, %r15w
0000000100012e72	jae	0x100012d50
0000000100012e78	testq	%r13, %r13
0000000100012e7b	movl	$0x2e, %eax
0000000100012e80	movl	$0x1f, %ebx
0000000100012e85	cmoveq	%rax, %rbx
0000000100012e89	movq	-0x58(%rbp), %rax
0000000100012e8d	movq	%rax, -0x30(%rbp)
0000000100012e91	movq	-0x50(%rbp), %rdi
0000000100012e95	testq	%rdi, %rdi
0000000100012e98	je	0x1000135db
0000000100012e9e	movq	-0x30(%rbp), %rax
0000000100012ea2	addq	%rdi, %rax
0000000100012ea5	movl	$0x8, %ecx
0000000100012eaa	movq	%rcx, -0x60(%rbp)
0000000100012eae	xorl	%ecx, %ecx
0000000100012eb0	movq	%rcx, -0xb8(%rbp)
0000000100012eb7	xorl	%ecx, %ecx
0000000100012eb9	movq	%rcx, -0x38(%rbp)
0000000100012ebd	movq	-0x78(%rbp), %r14
0000000100012ec1	movq	-0x30(%rbp), %rcx
0000000100012ec5	movl	$0x4, %edx
0000000100012eca	subq	%rdi, %rdx
0000000100012ecd	movq	%rcx, -0x78(%rbp)
0000000100012ed1	leaq	0x4(%rcx), %r8
0000000100012ed5	xorl	%ecx, %ecx
0000000100012ed7	movq	%rcx, -0x70(%rbp)
0000000100012edb	movq	-0x78(%rbp), %rcx
0000000100012edf	movq	-0x70(%rbp), %rsi
0000000100012ee3	cmpb	$0x0, (%rcx,%rsi)
0000000100012ee7	je	0x100012f0d
0000000100012ee9	movq	-0x78(%rbp), %rcx
0000000100012eed	movq	-0x70(%rbp), %rsi
0000000100012ef1	leaq	0x1(%rcx,%rsi), %rcx
0000000100012ef6	incq	%rsi
0000000100012ef9	movq	%rsi, -0x70(%rbp)
0000000100012efd	incq	%rdx
0000000100012f00	incq	%r8
0000000100012f03	cmpq	%rax, %rcx
0000000100012f06	jne	0x100012edb
0000000100012f08	jmp	0x1000135dd
0000000100012f0d	leaq	-0x1(%rdi), %r10
0000000100012f11	movq	%r10, %rax
0000000100012f14	movq	-0x70(%rbp), %rsi
0000000100012f18	subq	%rsi, %rax
0000000100012f1b	movq	-0x78(%rbp), %rcx
0000000100012f1f	leaq	0x1(%rcx,%rsi), %rcx
0000000100012f24	movq	%rcx, -0x30(%rbp)
0000000100012f28	movq	%rcx, -0x58(%rbp)
0000000100012f2c	movq	%rax, -0x50(%rbp)
0000000100012f30	testq	%rsi, %rsi
0000000100012f33	je	0x10001377b
0000000100012f39	cmpq	-0x70(%rbp), %r10
0000000100012f3d	je	0x100013765
0000000100012f43	xorl	%r14d, %r14d
0000000100012f46	movq	-0x70(%rbp), %r9
0000000100012f4a	xorl	%ecx, %ecx
0000000100012f4c	movq	-0x78(%rbp), %rax
0000000100012f50	movzbl	0x1(%rax,%r9), %eax
0000000100012f56	cmpl	$0x3f, %ecx
0000000100012f59	jne	0x100012f63
0000000100012f5b	cmpb	$0x2, %al
0000000100012f5d	jae	0x1000136b7
0000000100012f63	movzbl	%al, %eax
0000000100012f66	movl	%eax, %esi
0000000100012f68	andl	$0x7f, %esi
0000000100012f6b	shlq	%cl, %rsi
0000000100012f6e	orq	%rsi, %r14
0000000100012f71	testb	%al, %al
0000000100012f73	jns	0x100012f8b
0000000100012f75	addl	$0x7, %ecx
0000000100012f78	incq	%r9
0000000100012f7b	incq	%rdx
0000000100012f7e	incq	%r8
0000000100012f81	cmpq	%r9, %r10
0000000100012f84	jne	0x100012f4c
0000000100012f86	jmp	0x1000136cd
0000000100012f8b	movq	-0x78(%rbp), %rax
0000000100012f8f	leaq	0x2(%rax,%r9), %rax
0000000100012f94	movq	%rax, -0x30(%rbp)
0000000100012f98	movq	%rax, -0x58(%rbp)
0000000100012f9c	movq	%rdi, %rax
0000000100012f9f	subq	%r9, %rax
0000000100012fa2	movq	%rax, -0x68(%rbp)
0000000100012fa6	addq	$-0x2, %rax
0000000100012faa	movq	%rax, -0x50(%rbp)
0000000100012fae	leaq	-0x2(%rdi), %rax
0000000100012fb2	cmpq	%r9, %rax
0000000100012fb5	je	0x100013765
0000000100012fbb	xorl	%ecx, %ecx
0000000100012fbd	movq	%rcx, -0x40(%rbp)
0000000100012fc1	movq	%r9, %r10
0000000100012fc4	xorl	%ecx, %ecx
0000000100012fc6	movq	-0x78(%rbp), %rsi
0000000100012fca	movzbl	0x2(%rsi,%r10), %r11d
0000000100012fd0	cmpl	$0x3f, %ecx
0000000100012fd3	jne	0x100012fdf
0000000100012fd5	cmpb	$0x2, %r11b
0000000100012fd9	jae	0x1000136f0
0000000100012fdf	movzbl	%r11b, %esi
0000000100012fe3	movl	%esi, %r11d
0000000100012fe6	andl	$0x7f, %r11d
0000000100012fea	shlq	%cl, %r11
0000000100012fed	orq	%r11, -0x40(%rbp)
0000000100012ff1	testb	%sil, %sil
0000000100012ff4	jns	0x10001300c
0000000100012ff6	addl	$0x7, %ecx
0000000100012ff9	incq	%r10
0000000100012ffc	incq	%rdx
0000000100012fff	incq	%r8
0000000100013002	cmpq	%r10, %rax
0000000100013005	jne	0x100012fc6
0000000100013007	jmp	0x10001371e
000000010001300c	movq	-0x78(%rbp), %rax
0000000100013010	leaq	0x3(%rax,%r10), %rax
0000000100013015	movq	%rax, -0x30(%rbp)
0000000100013019	movq	%rax, -0x58(%rbp)
000000010001301d	movq	%rdi, %r9
0000000100013020	subq	%r10, %r9
0000000100013023	leaq	-0x3(%r9), %rax
0000000100013027	movq	%rax, -0x50(%rbp)
000000010001302b	addq	$-0x3, %rdi
000000010001302f	cmpq	%r10, %rdi
0000000100013032	je	0x100013765
0000000100013038	xorl	%eax, %eax
000000010001303a	movq	%rax, -0x30(%rbp)
000000010001303e	xorl	%ecx, %ecx
0000000100013040	movzbl	-0x1(%r8), %eax
0000000100013045	cmpl	$0x3f, %ecx
0000000100013048	jne	0x100013052
000000010001304a	cmpb	$0x2, %al
000000010001304c	jae	0x10001373e
0000000100013052	movzbl	%al, %eax
0000000100013055	movl	%eax, %esi
0000000100013057	andl	$0x7f, %esi
000000010001305a	shlq	%cl, %rsi
000000010001305d	orq	%rsi, -0x30(%rbp)
0000000100013061	testb	%al, %al
0000000100013063	jns	0x100013079
0000000100013065	addl	$0x7, %ecx
0000000100013068	incq	%rdx
000000010001306b	incq	%r8
000000010001306e	cmpq	$0x1, %rdx
0000000100013072	jne	0x100013040
0000000100013074	jmp	0x10001374b
0000000100013079	movq	%r8, -0x58(%rbp)
000000010001307d	negq	%rdx
0000000100013080	movq	%rdx, -0x50(%rbp)
0000000100013084	movq	-0x38(%rbp), %rax
0000000100013088	cmpq	-0x100(%rbp), %rax
000000010001308f	jne	0x1000130b7
0000000100013091	leaq	-0x108(%rbp), %rdi
0000000100013098	movq	-0x38(%rbp), %rsi
000000010001309c	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h764d5260e2433607E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h764d5260e2433607
00000001000130a1	movq	-0x108(%rbp), %rax
00000001000130a8	movq	%rax, -0x60(%rbp)
00000001000130ac	movq	-0xf8(%rbp), %rax
00000001000130b3	movq	%rax, -0x38(%rbp)
00000001000130b7	movq	-0x38(%rbp), %rsi
00000001000130bb	movq	%rsi, %rax
00000001000130be	shlq	$0x6, %rax
00000001000130c2	movq	-0x60(%rbp), %rdx
00000001000130c6	movq	$0x1f, (%rdx,%rax)
00000001000130ce	movq	-0x78(%rbp), %rcx
00000001000130d2	movq	%rcx, 0x8(%rdx,%rax)
00000001000130d7	movq	-0x70(%rbp), %rdi
00000001000130db	movq	%rdi, 0x10(%rdx,%rax)
00000001000130e0	movq	%r14, 0x18(%rdx,%rax)
00000001000130e5	movq	-0x40(%rbp), %rdi
00000001000130e9	movq	%rdi, 0x20(%rdx,%rax)
00000001000130ee	movq	-0x30(%rbp), %rdi
00000001000130f2	movq	%rdi, 0x28(%rdx,%rax)
00000001000130f7	xorps	%xmm0, %xmm0
00000001000130fa	movups	%xmm0, 0x30(%rdx,%rax)
00000001000130ff	incq	%rsi
0000000100013102	movq	%rsi, %rax
0000000100013105	movq	%rsi, -0x38(%rbp)
0000000100013109	movq	%rsi, -0xf8(%rbp)
0000000100013110	movq	-0x58(%rbp), %rax
0000000100013114	movq	-0x50(%rbp), %rdi
0000000100013118	movq	%rax, -0x30(%rbp)
000000010001311c	addq	%rdi, %rax
000000010001311f	movq	%rcx, %r14
0000000100013122	testq	%rdi, %rdi
0000000100013125	jne	0x100012ebd
000000010001312b	jmp	0x1000135e5
0000000100013130	movq	%rax, -0x30(%rbp)
0000000100013134	movb	$0x13, %bl
0000000100013136	xorl	%r12d, %r12d
0000000100013139	xorl	%r14d, %r14d
000000010001313c	jmp	0x100013604
0000000100013141	movq	%rax, -0x58(%rbp)
0000000100013145	negq	%rdx
0000000100013148	movq	%rdx, -0x50(%rbp)
000000010001314c	movb	$0x6, %bl
000000010001314e	xorl	%r12d, %r12d
0000000100013151	xorl	%r14d, %r14d
0000000100013154	jmp	0x100013604
0000000100013159	movq	%rax, -0x58(%rbp)
000000010001315d	negq	%rdx
0000000100013160	movq	%rdx, -0x50(%rbp)
0000000100013164	cmpq	$0x0, -0x1c8(%rbp)
000000010001316c	je	0x100013515
0000000100013172	cmpq	$0x0, -0x78(%rbp)
0000000100013177	je	0x1000137a9
000000010001317d	movl	%r15d, %eax
0000000100013180	shll	$0x10, %eax
0000000100013183	movzbl	-0x41(%rbp), %ecx
0000000100013187	shll	$0x8, %ecx
000000010001318a	orl	%eax, %ecx
000000010001318c	movzbl	-0x42(%rbp), %eax
0000000100013190	orl	%ecx, %eax
0000000100013192	movl	%eax, -0x1fc(%rbp)
0000000100013198	movq	-0x78(%rbp), %rax
000000010001319c	leaq	(,%rax,4), %rax
00000001000131a4	movq	%rax, -0x408(%rbp)
00000001000131ab	movl	$0x8, %eax
00000001000131b0	movq	%rax, -0x220(%rbp)
00000001000131b7	xorl	%eax, %eax
00000001000131b9	movq	%rax, -0x198(%rbp)
00000001000131c0	xorl	%eax, %eax
00000001000131c2	movq	%rax, -0x228(%rbp)
00000001000131c9	incq	-0x228(%rbp)
00000001000131d0	xorps	%xmm0, %xmm0
00000001000131d3	movaps	%xmm0, -0x450(%rbp)
00000001000131da	movl	$0x2e, %eax
00000001000131df	movq	%rax, -0x1c0(%rbp)
00000001000131e6	xorl	%r14d, %r14d
00000001000131e9	xorl	%eax, %eax
00000001000131eb	movq	%rax, -0x38(%rbp)
00000001000131ef	xorl	%eax, %eax
00000001000131f1	movq	%rax, -0x40(%rbp)
00000001000131f5	xorl	%eax, %eax
00000001000131f7	movq	%rax, -0x30(%rbp)
00000001000131fb	jmp	0x100013242
00000001000131fd	movq	%rbx, -0x3f8(%rbp)
0000000100013204	movq	-0x30(%rbp), %rcx
0000000100013208	movq	%rcx, -0x400(%rbp)
000000010001320f	movq	-0x88(%rbp), %rcx
0000000100013216	movq	%rcx, -0x30(%rbp)
000000010001321a	movq	-0x68(%rbp), %rcx
000000010001321e	movq	%rcx, -0x40(%rbp)
0000000100013222	movq	-0x60(%rbp), %rcx
0000000100013226	movq	%rcx, -0x38(%rbp)
000000010001322a	movq	%rax, -0x1c0(%rbp)
0000000100013231	addq	$0x4, %r14
0000000100013235	cmpq	%r14, -0x408(%rbp)
000000010001323c	je	0x100013441
0000000100013242	movq	-0x30(%rbp), %rax
0000000100013246	movq	%rax, -0x88(%rbp)
000000010001324d	movq	-0x40(%rbp), %rax
0000000100013251	movq	%rax, -0x68(%rbp)
0000000100013255	movq	-0x38(%rbp), %rax
0000000100013259	movq	%rax, -0x60(%rbp)
000000010001325d	movq	-0x70(%rbp), %rax
0000000100013261	movzwl	0x2(%rax,%r14), %ecx
0000000100013267	leaq	-0xb0(%rbp), %rdi
000000010001326e	leaq	-0x58(%rbp), %rsi
0000000100013272	movl	-0x1fc(%rbp), %edx
0000000100013278	callq	__ZN5gimli4read4line15parse_attribute17hc027efeaac70e0feE ## gimli::read::line::parse_attribute::hc027efeaac70e0fe
000000010001327d	movq	-0xb0(%rbp), %rax
0000000100013284	movq	-0xa8(%rbp), %rbx
000000010001328b	movq	-0xa0(%rbp), %rcx
0000000100013292	movq	%rcx, -0x30(%rbp)
0000000100013296	cmpq	$0x2e, %rax
000000010001329a	je	0x1000135cb
00000001000132a0	movq	-0x70(%rbp), %rcx
00000001000132a4	movzwl	(%rcx,%r14), %ecx
00000001000132a9	decl	%ecx
00000001000132ab	cmpl	$0x4, %ecx
00000001000132ae	ja	0x100013421
00000001000132b4	leaq	0x6ed(%rip), %rdx
00000001000132bb	movslq	(%rdx,%rcx,4), %rcx
00000001000132bf	addq	%rdx, %rcx
00000001000132c2	jmpq	*%rcx
00000001000132c4	addq	$-0x2, %rax
00000001000132c8	cmpq	$0x5, %rax
00000001000132cc	ja	0x100013421
00000001000132d2	leaq	0x713(%rip), %rcx
00000001000132d9	movslq	(%rcx,%rax,4), %rax
00000001000132dd	addq	%rcx, %rax
00000001000132e0	movq	-0x88(%rbp), %rcx
00000001000132e7	movq	%rcx, -0x30(%rbp)
00000001000132eb	movq	-0x68(%rbp), %rcx
00000001000132ef	movq	%rcx, -0x40(%rbp)
00000001000132f3	movq	%rbx, -0x38(%rbp)
00000001000132f7	jmpq	*%rax
00000001000132f9	movzbl	%bl, %eax
00000001000132fc	jmp	0x1000133ac
0000000100013301	cmpl	$0x1, %eax
0000000100013304	jne	0x100013421
000000010001330a	cmpq	$0x10, -0x30(%rbp)
000000010001330f	jne	0x100013421
0000000100013315	movups	(%rbx), %xmm0
0000000100013318	movaps	%xmm0, -0x450(%rbp)
000000010001331f	jmp	0x100013421
0000000100013324	addq	$-0x2, %rax
0000000100013328	cmpq	$0x5, %rax
000000010001332c	ja	0x100013421
0000000100013332	leaq	0x69b(%rip), %rcx
0000000100013339	movslq	(%rcx,%rax,4), %rax
000000010001333d	addq	%rcx, %rax
0000000100013340	movq	-0x88(%rbp), %rcx
0000000100013347	movq	%rcx, -0x30(%rbp)
000000010001334b	movq	%rbx, -0x40(%rbp)
000000010001334f	movq	-0x60(%rbp), %rcx
0000000100013353	movq	%rcx, -0x38(%rbp)
0000000100013357	jmpq	*%rax
0000000100013359	movzbl	%bl, %eax
000000010001335c	jmp	0x1000133eb
0000000100013361	addq	$-0x2, %rax
0000000100013365	cmpq	$0x5, %rax
0000000100013369	ja	0x100013421
000000010001336f	leaq	0x646(%rip), %rcx
0000000100013376	movslq	(%rcx,%rax,4), %rax
000000010001337a	addq	%rcx, %rax
000000010001337d	movq	%rbx, -0x30(%rbp)
0000000100013381	movq	-0x68(%rbp), %rcx
0000000100013385	movq	%rcx, -0x40(%rbp)
0000000100013389	movq	-0x60(%rbp), %rcx
000000010001338d	movq	%rcx, -0x38(%rbp)
0000000100013391	jmpq	*%rax
0000000100013393	movzbl	%bl, %eax
0000000100013396	jmp	0x100013428
000000010001339b	movzwl	%bx, %eax
000000010001339e	jmp	0x1000133ac
00000001000133a0	movzwl	%bx, %eax
00000001000133a3	jmp	0x1000133eb
00000001000133a5	movzwl	%bx, %eax
00000001000133a8	jmp	0x100013428
00000001000133aa	movl	%ebx, %eax
00000001000133ac	movq	%rax, -0x38(%rbp)
00000001000133b0	movq	-0x88(%rbp), %rax
00000001000133b7	movq	%rax, -0x30(%rbp)
00000001000133bb	movq	-0x68(%rbp), %rax
00000001000133bf	movq	%rax, -0x40(%rbp)
00000001000133c3	jmp	0x100013231
00000001000133c8	testq	%rbx, %rbx
00000001000133cb	js	0x100013421
00000001000133cd	movq	-0x88(%rbp), %rax
00000001000133d4	movq	%rax, -0x30(%rbp)
00000001000133d8	movq	-0x68(%rbp), %rax
00000001000133dc	movq	%rax, -0x40(%rbp)
00000001000133e0	movq	%rbx, -0x38(%rbp)
00000001000133e4	jmp	0x100013231
00000001000133e9	movl	%ebx, %eax
00000001000133eb	movq	%rax, -0x40(%rbp)
00000001000133ef	movq	-0x88(%rbp), %rax
00000001000133f6	movq	%rax, -0x30(%rbp)
00000001000133fa	jmp	0x100013434
00000001000133fc	testq	%rbx, %rbx
00000001000133ff	js	0x100013421
0000000100013401	movq	-0x88(%rbp), %rax
0000000100013408	movq	%rax, -0x30(%rbp)
000000010001340c	movq	%rbx, -0x40(%rbp)
0000000100013410	jmp	0x100013434
0000000100013412	movl	%ebx, %eax
0000000100013414	jmp	0x100013428
0000000100013416	testq	%rbx, %rbx
0000000100013419	js	0x100013421
000000010001341b	movq	%rbx, -0x30(%rbp)
000000010001341f	jmp	0x10001342c
0000000100013421	movq	-0x88(%rbp), %rax
0000000100013428	movq	%rax, -0x30(%rbp)
000000010001342c	movq	-0x68(%rbp), %rax
0000000100013430	movq	%rax, -0x40(%rbp)
0000000100013434	movq	-0x60(%rbp), %rax
0000000100013438	movq	%rax, -0x38(%rbp)
000000010001343c	jmp	0x100013231
0000000100013441	cmpq	$0x2e, -0x1c0(%rbp)
0000000100013449	je	0x1000137a9
000000010001344f	movq	-0x198(%rbp), %rax
0000000100013456	cmpq	-0x100(%rbp), %rax
000000010001345d	jne	0x10001348e
000000010001345f	leaq	-0x108(%rbp), %rdi
0000000100013466	movq	-0x198(%rbp), %rsi
000000010001346d	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h764d5260e2433607E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h764d5260e2433607
0000000100013472	movq	-0x108(%rbp), %rax
0000000100013479	movq	%rax, -0x220(%rbp)
0000000100013480	movq	-0xf8(%rbp), %rax
0000000100013487	movq	%rax, -0x198(%rbp)
000000010001348e	movq	-0x198(%rbp), %rcx
0000000100013495	movq	%rcx, %rax
0000000100013498	shlq	$0x6, %rax
000000010001349c	movq	-0x220(%rbp), %rdx
00000001000134a3	movq	-0x1c0(%rbp), %rsi
00000001000134aa	movq	%rsi, (%rdx,%rax)
00000001000134ae	movq	-0x3f8(%rbp), %rsi
00000001000134b5	movq	%rsi, 0x8(%rdx,%rax)
00000001000134ba	movq	-0x400(%rbp), %rsi
00000001000134c1	movq	%rsi, 0x10(%rdx,%rax)
00000001000134c6	movq	-0x38(%rbp), %rsi
00000001000134ca	movq	%rsi, 0x18(%rdx,%rax)
00000001000134cf	movq	-0x40(%rbp), %rsi
00000001000134d3	movq	%rsi, 0x20(%rdx,%rax)
00000001000134d8	movq	-0x30(%rbp), %rsi
00000001000134dc	movq	%rsi, 0x28(%rdx,%rax)
00000001000134e1	movaps	-0x450(%rbp), %xmm0
00000001000134e8	movups	%xmm0, 0x30(%rdx,%rax)
00000001000134ed	incq	%rcx
00000001000134f0	movq	%rcx, %rax
00000001000134f3	movq	%rcx, -0x198(%rbp)
00000001000134fa	movq	%rcx, -0xf8(%rbp)
0000000100013501	movq	-0x228(%rbp), %rax
0000000100013508	cmpq	-0x1c8(%rbp), %rax
000000010001350f	jne	0x1000131c9
0000000100013515	movl	$0x2e, %ebx
000000010001351a	movq	-0x1d0(%rbp), %rax
0000000100013521	addq	%rax, -0x1b8(%rbp)
0000000100013528	movq	-0xc0(%rbp), %rax
000000010001352f	movq	%rax, -0x208(%rbp)
0000000100013536	movq	-0xd0(%rbp), %rax
000000010001353d	movq	-0xc8(%rbp), %rcx
0000000100013544	movq	%rcx, -0x210(%rbp)
000000010001354b	movq	%rax, -0x218(%rbp)
0000000100013552	movq	-0x108(%rbp), %rax
0000000100013559	movq	-0x100(%rbp), %rcx
0000000100013560	movq	%rax, -0x1f8(%rbp)
0000000100013567	movq	%rcx, -0x1f0(%rbp)
000000010001356e	movq	-0xf8(%rbp), %rax
0000000100013575	movq	%rax, -0x1e8(%rbp)
000000010001357c	xorps	%xmm0, %xmm0
000000010001357f	movaps	%xmm0, -0x190(%rbp)
0000000100013586	movaps	%xmm0, -0x180(%rbp)
000000010001358d	movq	$0x0, -0x170(%rbp)
0000000100013598	movzwl	-0x242(%rbp), %eax
000000010001359f	movw	%ax, -0x1a4(%rbp)
00000001000135a6	movl	-0x246(%rbp), %eax
00000001000135ac	movl	%eax, -0x1a8(%rbp)
00000001000135b2	movq	-0x1e0(%rbp), %r14
00000001000135b9	cmpl	$0x2f, -0x390(%rbp)
00000001000135c0	jne	0x100011f70
00000001000135c6	jmp	0x100011ff8
00000001000135cb	movq	%rbx, %r12
00000001000135ce	shrq	$0x8, %r12
00000001000135d2	movq	%rbx, %r14
00000001000135d5	shrq	$0x10, %r14
00000001000135d9	jmp	0x100013604
00000001000135db	jmp	0x1000135e5
00000001000135dd	movq	-0x78(%rbp), %rax
00000001000135e1	movq	%rax, -0x30(%rbp)
00000001000135e5	movq	%r14, %r12
00000001000135e8	shrq	$0x8, %r12
00000001000135ec	shrq	$0x10, %r14
00000001000135f0	movl	$0x2, %eax
00000001000135f5	movq	%rax, -0x70(%rbp)
00000001000135f9	movb	$0x13, %bl
00000001000135fb	xorl	%eax, %eax
00000001000135fd	movq	%rax, -0xb8(%rbp)
0000000100013604	xorl	%r15d, %r15d
0000000100013607	movq	-0x100(%rbp), %rsi
000000010001360e	testq	%rsi, %rsi
0000000100013611	je	0x100013628
0000000100013613	movq	-0x108(%rbp), %rdi
000000010001361a	shlq	$0x6, %rsi
000000010001361e	movl	$0x8, %edx
0000000100013623	callq	___rust_dealloc
0000000100013628	cmpq	$0x0, -0xb8(%rbp)
0000000100013630	sete	%al
0000000100013633	orb	%al, %r15b
0000000100013636	jne	0x100013651
0000000100013638	movq	-0xb8(%rbp), %rsi
000000010001363f	shlq	$0x2, %rsi
0000000100013643	movl	$0x2, %edx
0000000100013648	movq	-0x70(%rbp), %rdi
000000010001364c	callq	___rust_dealloc
0000000100013651	xorl	%r15d, %r15d
0000000100013654	movq	-0xc8(%rbp), %rax
000000010001365b	testq	%rax, %rax
000000010001365e	je	0x100013679
0000000100013660	movq	-0xd0(%rbp), %rdi
0000000100013667	shlq	$0x3, %rax
000000010001366b	leaq	(%rax,%rax,2), %rsi
000000010001366f	movl	$0x8, %edx
0000000100013674	callq	___rust_dealloc
0000000100013679	cmpq	$0x0, -0x118(%rbp)
0000000100013681	sete	%al
0000000100013684	orb	%al, %r15b
0000000100013687	je	0x100013692
0000000100013689	movq	-0x30(%rbp), %r15
000000010001368d	jmp	0x1000123e7
0000000100013692	movq	-0x118(%rbp), %rsi
0000000100013699	shlq	$0x2, %rsi
000000010001369d	movl	$0x2, %edx
00000001000136a2	movq	-0xd8(%rbp), %rdi
00000001000136a9	callq	___rust_dealloc
00000001000136ae	movq	-0x30(%rbp), %r15
00000001000136b2	jmp	0x1000123e7
00000001000136b7	movq	-0x78(%rbp), %rax
00000001000136bb	leaq	0x2(%rax,%r9), %rax
00000001000136c0	movq	%rax, -0x58(%rbp)
00000001000136c4	subq	%r9, %rdi
00000001000136c7	addq	$-0x2, %rdi
00000001000136cb	jmp	0x100013704
00000001000136cd	movq	-0x78(%rbp), %rax
00000001000136d1	movq	-0x70(%rbp), %rcx
00000001000136d5	addq	%rcx, %rax
00000001000136d8	subq	%rcx, %rdi
00000001000136db	addq	%rax, %rdi
00000001000136de	movq	%rdi, -0x58(%rbp)
00000001000136e2	movq	$0x0, -0x50(%rbp)
00000001000136ea	movq	%rdi, -0x30(%rbp)
00000001000136ee	jmp	0x100013765
00000001000136f0	movq	-0x78(%rbp), %rax
00000001000136f4	leaq	0x3(%rax,%r10), %rax
00000001000136f9	movq	%rax, -0x58(%rbp)
00000001000136fd	subq	%r10, %rdi
0000000100013700	addq	$-0x3, %rdi
0000000100013704	movq	%rdi, -0x50(%rbp)
0000000100013708	movl	$0x2, %eax
000000010001370d	movq	%rax, -0x70(%rbp)
0000000100013711	movb	$0x6, %bl
0000000100013713	xorl	%r12d, %r12d
0000000100013716	xorl	%r14d, %r14d
0000000100013719	jmp	0x1000135fb
000000010001371e	movq	-0x78(%rbp), %rax
0000000100013722	addq	%r9, %rax
0000000100013725	movq	-0x68(%rbp), %rcx
0000000100013729	addq	%rax, %rcx
000000010001372c	movq	%rcx, -0x58(%rbp)
0000000100013730	movq	$0x0, -0x50(%rbp)
0000000100013738	movq	%rcx, -0x30(%rbp)
000000010001373c	jmp	0x100013765
000000010001373e	movq	%r8, -0x58(%rbp)
0000000100013742	negq	%rdx
0000000100013745	movq	%rdx, -0x50(%rbp)
0000000100013749	jmp	0x100013708
000000010001374b	movq	-0x78(%rbp), %rax
000000010001374f	addq	%r10, %rax
0000000100013752	addq	%r9, %rax
0000000100013755	movq	%rax, -0x58(%rbp)
0000000100013759	movq	$0x0, -0x50(%rbp)
0000000100013761	movq	%rax, -0x30(%rbp)
0000000100013765	movl	$0x2, %eax
000000010001376a	movq	%rax, -0x70(%rbp)
000000010001376e	movb	$0x13, %bl
0000000100013770	xorl	%r12d, %r12d
0000000100013773	xorl	%r14d, %r14d
0000000100013776	jmp	0x1000135fb
000000010001377b	movl	$0x2, %eax
0000000100013780	movq	%rax, -0x70(%rbp)
0000000100013784	xorl	%eax, %eax
0000000100013786	movq	%rax, -0x78(%rbp)
000000010001378a	jmp	0x10001351a
000000010001378f	leaq	0x3055b(%rip), %rdi
0000000100013796	leaq	0x34f4b(%rip), %rdx
000000010001379d	movl	$0x2b, %esi
00000001000137a2	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
00000001000137a7	jmp	0x1000137c1
00000001000137a9	leaq	0x30541(%rip), %rdi
00000001000137b0	leaq	0x34f19(%rip), %rdx
00000001000137b7	movl	$0x2b, %esi
00000001000137bc	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
00000001000137c1	ud2
00000001000137c3	movq	%rax, %rbx
00000001000137c6	movl	$0x2, %eax
00000001000137cb	movq	%rax, -0x70(%rbp)
00000001000137cf	xorl	%eax, %eax
00000001000137d1	movq	%rax, -0xb8(%rbp)
00000001000137d8	xorl	%r14d, %r14d
00000001000137db	jmp	0x1000137ef
00000001000137dd	jmp	0x1000137df
00000001000137df	movq	%rax, %rbx
00000001000137e2	xorl	%r14d, %r14d
00000001000137e5	jmp	0x1000137ef
00000001000137e7	jmp	0x10001381c
00000001000137e9	movq	%rax, %rbx
00000001000137ec	movb	$0x1, %r14b
00000001000137ef	movq	-0x108(%rbp), %rdi
00000001000137f6	movq	-0x100(%rbp), %rsi
00000001000137fd	callq	__ZN4core3ptr164drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntry$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h397f6eb20c316c74E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntry$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h397f6eb20c316c74
0000000100013802	testb	%r14b, %r14b
0000000100013805	jne	0x100013817
0000000100013807	movq	-0x70(%rbp), %rdi
000000010001380b	movq	-0xb8(%rbp), %rsi
0000000100013812	callq	__ZN4core3ptr78drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$17h7ee9bd556cd3de62E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$::h7ee9bd556cd3de62
0000000100013817	xorl	%r14d, %r14d
000000010001381a	jmp	0x100013847
000000010001381c	movq	%rax, %rbx
000000010001381f	xorl	%r14d, %r14d
0000000100013822	jmp	0x100013847
0000000100013824	movq	%rax, %rbx
0000000100013827	movl	$0x2, %eax
000000010001382c	movq	%rax, -0xd8(%rbp)
0000000100013833	xorl	%eax, %eax
0000000100013835	movq	%rax, -0x118(%rbp)
000000010001383c	xorl	%r14d, %r14d
000000010001383f	jmp	0x100013847
0000000100013841	movq	%rax, %rbx
0000000100013844	movb	$0x1, %r14b
0000000100013847	movq	-0xd0(%rbp), %rdi
000000010001384e	movq	-0xc8(%rbp), %rsi
0000000100013855	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
000000010001385a	testb	%r14b, %r14b
000000010001385d	jne	0x1000138b1
000000010001385f	movq	-0xd8(%rbp), %rdi
0000000100013866	movq	-0x118(%rbp), %rsi
000000010001386d	callq	__ZN4core3ptr78drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$17h7ee9bd556cd3de62E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$::h7ee9bd556cd3de62
0000000100013872	jmp	0x1000138b1
0000000100013874	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100013879	movq	%rax, %rbx
000000010001387c	leaq	-0x3f0(%rbp), %rdi
0000000100013883	callq	__ZN4core3ptr84drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..abbrev..Abbreviations$GT$$GT$17h82522fe520984983E ## core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..abbrev..Abbreviations$GT$$GT$::h82522fe520984983
0000000100013888	jmp	0x1000138c9
000000010001388a	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001388f	movq	%rax, %rbx
0000000100013892	leaq	-0x3f0(%rbp), %rdi
0000000100013899	callq	__ZN4core3ptr84drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..abbrev..Abbreviations$GT$$GT$17h82522fe520984983E ## core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..abbrev..Abbreviations$GT$$GT$::h82522fe520984983
000000010001389e	jmp	0x1000138c9
00000001000138a0	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000138a5	movq	%rax, %rbx
00000001000138a8	jmp	0x1000138bd
00000001000138aa	jmp	0x1000138ae
00000001000138ac	jmp	0x1000138ae
00000001000138ae	movq	%rax, %rbx
00000001000138b1	movq	-0x298(%rbp), %rdi
00000001000138b8	callq	__ZN4core3ptr79drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..abbrev..Abbreviations$GT$$GT$17h6af3b0185b4ce8d8E ## core::ptr::drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..abbrev..Abbreviations$GT$$GT$::h6af3b0185b4ce8d8
00000001000138bd	leaq	-0x390(%rbp), %rdi
00000001000138c4	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
00000001000138c9	movq	%rbx, %rdi
00000001000138cc	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000138d1	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000138d6	nop
00000001000138d8	xchgl	%esp, %eax
00000001000138d9	loop	0x1000138da
00000001000138db	decl	(%rax)
00000001000138dd	loope	0x1000138de
00000001000138df	decl	(%rax)
00000001000138e1	loope	0x1000138e2
00000001000138e3	decl	(%rax)
00000001000138e5	loope	0x1000138e6
00000001000138e7	decl	(%rax)
00000001000138e9	loope	0x1000138ea
00000001000138eb	decl	(%rax)
00000001000138ed	loope	0x1000138ee
00000001000138ef	decl	(%rax)
00000001000138f1	loope	0x1000138f2
00000001000138f3	decl	(%rax)
00000001000138f5	loope	0x1000138f6
00000001000138f7	decl	(%rax)
00000001000138f9	loope	0x1000138fa
00000001000138fb	decl	(%rax)
00000001000138fd	loope	0x1000138fe
00000001000138ff	decl	(%rax)
0000000100013901	loope	0x100013902
0000000100013903	decl	(%rax)
0000000100013905	loope	0x100013906
0000000100013907	decl	(%rax)
0000000100013909	loope	0x10001390a
000000010001390b	callq	*-0x2d00001d(%rcx)
0000000100013911	loopne	0x100013912
0000000100013913	decl	(%rax)
0000000100013915	loope	0x100013916
0000000100013917	decl	(%rax)
0000000100013919	loope	0x10001391a
000000010001391b	decl	(%rax)
000000010001391d	loope	0x10001391e
000000010001391f	decl	(%rax)
0000000100013921	loope	0x100013922
0000000100013923	decl	(%rax)
0000000100013925	loope	0x100013926
0000000100013927	decl	(%rax)
0000000100013929	loope	0x10001392a
000000010001392b	decl	(%rax)
000000010001392d	loope	0x10001392e
000000010001392f	decl	(%rax)
0000000100013931	loope	0x100013932
0000000100013933	decl	(%rax)
0000000100013935	loope	0x100013936
0000000100013937	callq	*-0x1d(%rbx)
000000010001393a	.byte 0xff #bad opcode
000000010001393b	.byte 0xff #bad opcode
000000010001393c	fsub	%st(1), %st
000000010001393e	.byte 0xff #bad opcode
000000010001393f	callq	*-0x3f00001e(%rcx)
0000000100013945	loop	0x100013946
0000000100013947	jmpq	*-0x1f5b0001(%rax,%riz,8)
000000010001394e	.byte 0xff #bad opcode
000000010001394f	jmpq	*-0x1f5b0001(%rax,%riz,8)
0000000100013956	.byte 0xff #bad opcode
0000000100013957	jmpq	*-0x1f5b0001(%rax,%riz,8)
000000010001395e	.byte 0xff #bad opcode
000000010001395f	jmpq	*-0x1f5b0001(%rax,%riz,8)
0000000100013966	.byte 0xff #bad opcode
0000000100013967	jmpq	*-0x1f5b0001(%rax,%riz,8)
000000010001396e	.byte 0xff #bad opcode
000000010001396f	jmpq	*-0x1f5b0001(%rax,%riz,8)
0000000100013976	.byte 0xff #bad opcode
0000000100013977	jmpq	*-0x1f5b0001(%rax,%riz,8)
000000010001397e	.byte 0xff #bad opcode
000000010001397f	jmpq	*-0x1f5b0001(%rax,%riz,8)
0000000100013986	.byte 0xff #bad opcode
0000000100013987	jmpq	*-0x1f5b0001(%rax,%riz,8)
000000010001398e	.byte 0xff #bad opcode
000000010001398f	jmpq	*-0x1f5b0001(%rax,%riz,8)
0000000100013996	.byte 0xff #bad opcode
0000000100013997	jmpq	*-0x1f5b0001(%rax,%riz,8)
000000010001399e	.byte 0xff #bad opcode
000000010001399f	jmpq	*-0x1c890001(%rax,%riz,8)
00000001000139a6	.byte 0xff #bad opcode
00000001000139a7	callq	*-0x8(%rbp)
00000001000139aa	.byte 0xff #bad opcode
00000001000139ab	lcalll	*(%rcx,%rdi,8)
00000001000139ae	.byte 0xff #bad opcode
00000001000139af	.byte 0xff #bad opcode
00000001000139b0	jl	0x1000139ab
00000001000139b2	.byte 0xff #bad opcode
00000001000139b3	.byte 0xff #bad opcode
00000001000139b4	movl	$0x59fffff9, %ecx               ## imm = 0x59FFFFF9
00000001000139b9	stc
00000001000139ba	.byte 0xff #bad opcode
00000001000139bb	callq	*%rdi
00000001000139bd	stc
00000001000139be	.byte 0xff #bad opcode
00000001000139bf	.byte 0xff #bad opcode
00000001000139c0	jmp	0x1570139be
00000001000139c5	cli
00000001000139c6	.byte 0xff #bad opcode
00000001000139c7	pushq	-0x8(%rbp)
00000001000139ca	.byte 0xff #bad opcode
00000001000139cb	lcalll	*-0x6(%rdx)
00000001000139ce	.byte 0xff #bad opcode
00000001000139cf	pushq	-0x8(%rbp)
00000001000139d2	.byte 0xff #bad opcode
00000001000139d3	incl	-0x33000007(%rbp)
00000001000139d9	stc
00000001000139da	.byte 0xff #bad opcode
00000001000139db	callq	*0x5dfffffa(%rip)
00000001000139e1	clc
00000001000139e2	.byte 0xff #bad opcode
00000001000139e3	ljmpl	*(%rax)
00000001000139e5	cli
00000001000139e6	.byte 0xff #bad opcode
00000001000139e7	lcalll	*-0x8(%rbp)
00000001000139ea	.byte 0xff #bad opcode
00000001000139eb	decl	-0x50000007(%rip)
00000001000139f1	stc
00000001000139f2	.byte 0xff #bad opcode
00000001000139f3	.byte 0xff #bad opcode
00000001000139f4	movl	$0x45fffff9, %esi               ## imm = 0x45FFFFF9
00000001000139f9	clc
00000001000139fa	.byte 0xff #bad opcode
00000001000139fb	.byte 0xff #bad opcode
00000001000139fc	fdivr	%st, %st(1)
00000001000139fe	.byte 0xff #bad opcode
00000001000139ff	incl	-0x8(%rbp)
0000000100013a02	.byte 0xff #bad opcode
0000000100013a03	ljmpl	*(%rdx)
0000000100013a05	.byte 0xea #bad opcode
0000000100013a06	.byte 0xff #bad opcode
0000000100013a07	lcalll	*-0x15(%rcx)
0000000100013a0a	.byte 0xff #bad opcode
0000000100013a0b	decl	0x28ffffeb(%rdi)
0000000100013a11	jmp	0x100013a12
0000000100013a13	decl	-0x70000015(%rdi)
0000000100013a19	jmp	0x100013a1a
0000000100013a1b	decl	0x7dffffeb(%rdi)
0000000100013a21	jmp	0x100013a22
0000000100013a23	jmpq	*0x2e(%rsi)
0000000100013a26	nopl	(%rax,%rax)
0000000100013a2e	nop
__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E:
0000000100013a30	pushq	%rbp
0000000100013a31	movq	%rsp, %rbp
0000000100013a34	movq	(%r8), %rax
0000000100013a37	addq	$-0x1a, %rax
0000000100013a3b	cmpq	$0x5, %rax
0000000100013a3f	ja	0x100013ae7
0000000100013a45	leaq	0x218(%rip), %r9
0000000100013a4c	movslq	(%r9,%rax,4), %rax
0000000100013a50	addq	%r9, %rax
0000000100013a53	jmpq	*%rax
0000000100013a55	movq	0x8(%r8), %rdx
0000000100013a59	movq	0x60(%rsi), %rax
0000000100013a5d	movq	0x68(%rsi), %rcx
0000000100013a61	cmpq	%rdx, %rcx
0000000100013a64	jb	0x100013c4f
0000000100013a6a	addq	%rdx, %rax
0000000100013a6d	subq	%rdx, %rcx
0000000100013a70	je	0x100013c4f
0000000100013a76	xorl	%edx, %edx
0000000100013a78	nopl	(%rax,%rax)
0000000100013a80	cmpb	$0x0, (%rax,%rdx)
0000000100013a84	je	0x100013bdb
0000000100013a8a	incq	%rdx
0000000100013a8d	cmpq	%rdx, %rcx
0000000100013a90	jne	0x100013a80
0000000100013a92	jmp	0x100013c4f
0000000100013a97	movq	0xd0(%rsi), %rcx
0000000100013a9e	testq	%rcx, %rcx
0000000100013aa1	je	0x100013ae7
0000000100013aa3	movq	0x8(%r8), %rdx
0000000100013aa7	movq	0x70(%rcx), %rax
0000000100013aab	movq	0x78(%rcx), %rcx
0000000100013aaf	cmpq	%rdx, %rcx
0000000100013ab2	jb	0x100013c4f
0000000100013ab8	addq	%rdx, %rax
0000000100013abb	subq	%rdx, %rcx
0000000100013abe	je	0x100013c4f
0000000100013ac4	xorl	%edx, %edx
0000000100013ac6	nopw	%cs:(%rax,%rax)
0000000100013ad0	cmpb	$0x0, (%rax,%rdx)
0000000100013ad4	je	0x100013bdb
0000000100013ada	incq	%rdx
0000000100013add	cmpq	%rdx, %rcx
0000000100013ae0	jne	0x100013ad0
0000000100013ae2	jmp	0x100013c4f
0000000100013ae7	movb	$0x45, 0x8(%rdi)
0000000100013aeb	movl	$0x1, %eax
0000000100013af0	movq	%rax, (%rdi)
0000000100013af3	popq	%rbp
0000000100013af4	retq
0000000100013af5	movq	0x70(%rsi), %rax
0000000100013af9	movq	0x78(%rsi), %r9
0000000100013afd	subq	%rcx, %r9
0000000100013b00	jb	0x100013c43
0000000100013b06	addq	%rcx, %rax
0000000100013b09	movzbl	%dl, %ecx
0000000100013b0c	imulq	0x8(%r8), %rcx
0000000100013b11	subq	%rcx, %r9
0000000100013b14	jb	0x100013c43
0000000100013b1a	addq	%rcx, %rax
0000000100013b1d	cmpb	$0x8, %dl
0000000100013b20	jne	0x100013b8a
0000000100013b22	cmpq	$0x7, %r9
0000000100013b26	jbe	0x100013bea
0000000100013b2c	movq	(%rax), %rdx
0000000100013b2f	jmp	0x100013bac
0000000100013b31	movq	0x8(%r8), %rdx
0000000100013b35	movq	0x50(%rsi), %rax
0000000100013b39	movq	0x58(%rsi), %rcx
0000000100013b3d	cmpq	%rdx, %rcx
0000000100013b40	jb	0x100013c4f
0000000100013b46	addq	%rdx, %rax
0000000100013b49	subq	%rdx, %rcx
0000000100013b4c	je	0x100013c4f
0000000100013b52	xorl	%edx, %edx
0000000100013b54	nopw	%cs:(%rax,%rax)
0000000100013b5e	nop
0000000100013b60	cmpb	$0x0, (%rax,%rdx)
0000000100013b64	je	0x100013bdb
0000000100013b66	incq	%rdx
0000000100013b69	cmpq	%rdx, %rcx
0000000100013b6c	jne	0x100013b60
0000000100013b6e	jmp	0x100013c4f
0000000100013b73	movq	0x8(%r8), %rax
0000000100013b77	movq	0x10(%r8), %rcx
0000000100013b7b	movq	%rax, 0x8(%rdi)
0000000100013b7f	movq	%rcx, 0x10(%rdi)
0000000100013b83	xorl	%eax, %eax
0000000100013b85	movq	%rax, (%rdi)
0000000100013b88	popq	%rbp
0000000100013b89	retq
0000000100013b8a	cmpq	$0x4, %r9
0000000100013b8e	jb	0x100013c19
0000000100013b94	movzwl	0x1(%rax), %ecx
0000000100013b98	movzbl	(%rax), %edx
0000000100013b9b	movzbl	0x3(%rax), %eax
0000000100013b9f	movb	%dl, -0xd(%rbp)
0000000100013ba2	movb	%al, -0xa(%rbp)
0000000100013ba5	movw	%cx, -0xc(%rbp)
0000000100013ba9	movl	-0xd(%rbp), %edx
0000000100013bac	movq	0x60(%rsi), %rax
0000000100013bb0	movq	0x68(%rsi), %rcx
0000000100013bb4	cmpq	%rdx, %rcx
0000000100013bb7	jb	0x100013c4f
0000000100013bbd	addq	%rdx, %rax
0000000100013bc0	subq	%rdx, %rcx
0000000100013bc3	je	0x100013c4f
0000000100013bc9	xorl	%edx, %edx
0000000100013bcb	cmpb	$0x0, (%rax,%rdx)
0000000100013bcf	je	0x100013bdb
0000000100013bd1	incq	%rdx
0000000100013bd4	cmpq	%rdx, %rcx
0000000100013bd7	jne	0x100013bcb
0000000100013bd9	jmp	0x100013c4f
0000000100013bdb	movq	%rax, 0x8(%rdi)
0000000100013bdf	movq	%rdx, 0x10(%rdi)
0000000100013be3	xorl	%eax, %eax
0000000100013be5	movq	%rax, (%rdi)
0000000100013be8	popq	%rbp
0000000100013be9	retq
0000000100013bea	movb	$0x0, -0xa(%rbp)
0000000100013bee	movw	$0x0, -0xc(%rbp)
0000000100013bf4	movl	$0x0, -0x10(%rbp)
0000000100013bfb	movq	%rax, -0x9(%rbp)
0000000100013bff	movq	-0x10(%rbp), %rax
0000000100013c03	movl	-0x8(%rbp), %ecx
0000000100013c06	movl	-0x5(%rbp), %edx
0000000100013c09	movl	%ecx, -0x20(%rbp)
0000000100013c0c	movl	%edx, -0x1d(%rbp)
0000000100013c0f	movq	%rax, -0x28(%rbp)
0000000100013c13	movq	-0x21(%rbp), %rax
0000000100013c17	jmp	0x100013c37
0000000100013c19	movl	$0x0, -0x10(%rbp)
0000000100013c20	movb	$0x0, -0xa(%rbp)
0000000100013c24	movw	$0x0, -0xc(%rbp)
0000000100013c2a	movl	-0xd(%rbp), %ecx
0000000100013c2d	movl	%ecx, -0x25(%rbp)
0000000100013c30	movl	$0x0, -0x28(%rbp)
0000000100013c37	movl	-0x28(%rbp), %ecx
0000000100013c3a	movl	-0x25(%rbp), %edx
0000000100013c3d	movl	%edx, -0x15(%rbp)
0000000100013c40	movl	%ecx, -0x18(%rbp)
0000000100013c43	movl	-0x18(%rbp), %ecx
0000000100013c46	movl	-0x15(%rbp), %edx
0000000100013c49	movl	%edx, 0xc(%rdi)
0000000100013c4c	movl	%ecx, 0x9(%rdi)
0000000100013c4f	movb	$0x13, 0x8(%rdi)
0000000100013c53	movq	%rax, 0x10(%rdi)
0000000100013c57	movl	$0x1, %eax
0000000100013c5c	movq	%rax, (%rdi)
0000000100013c5f	popq	%rbp
0000000100013c60	retq
0000000100013c61	nopl	(%rax)
0000000100013c64	.byte 0xf1 #bad opcode
0000000100013c65	std
0000000100013c66	.byte 0xff #bad opcode
0000000100013c67	pushq	(%rbx)
0000000100013c69	.byte 0xfe #bad opcode
0000000100013c6a	.byte 0xff #bad opcode
0000000100013c6b	incl	-0x6e000002(%rbx)
0000000100013c71	.byte 0xfe #bad opcode
0000000100013c72	.byte 0xff #bad opcode
0000000100013c73	decl	%ebp
0000000100013c75	.byte 0xfe #bad opcode
0000000100013c76	.byte 0xff #bad opcode
0000000100013c77	decl	(%rdi)
0000000100013c79	.byte 0xff #bad opcode
0000000100013c7a	.byte 0xff #bad opcode
0000000100013c7b	decl	(%rdi)
0000000100013c7d	.byte 0x1f #bad opcode
0000000100013c7e	addb	%dl, 0x48(%rbp)
0000000100013c82	movl	%esp, %ebp
0000000100013c84	pushq	%r15
0000000100013c86	pushq	%r14
0000000100013c88	pushq	%r13
0000000100013c8a	pushq	%r12
0000000100013c8c	pushq	%rbx
0000000100013c8d	testq	%rdx, %rdx
0000000100013c90	je	0x100013cfa
0000000100013c92	cmpq	$0x3, %rdx
0000000100013c96	jbe	0x100013da9
0000000100013c9c	movzbl	(%rsi), %r8d
0000000100013ca0	movzwl	0x1(%rsi), %r9d
0000000100013ca5	movzbl	0x3(%rsi), %r10d
0000000100013caa	movb	%r8b, -0x2d(%rbp)
0000000100013cae	movb	%r10b, -0x2a(%rbp)
0000000100013cb2	movw	%r9w, -0x2c(%rbp)
0000000100013cb7	movl	-0x2d(%rbp), %ecx
0000000100013cba	movw	$0x2, %ax
0000000100013cbe	cmpl	$0x2, %ecx
0000000100013cc1	je	0x100013ce4
0000000100013cc3	shll	$0x10, %r10d
0000000100013cc7	orl	%r10d, %r9d
0000000100013cca	shll	$0x8, %r9d
0000000100013cce	movzwl	%r8w, %r8d
0000000100013cd2	orl	%r9d, %r8d
0000000100013cd5	movw	$0x5, %ax
0000000100013cd9	cmpw	$0x5, %r8w
0000000100013cde	jne	0x100013d73
0000000100013ce4	movq	%rdx, %r9
0000000100013ce7	andq	$-0x4, %r9
0000000100013ceb	cmpq	$0x4, %r9
0000000100013cef	jne	0x100013d4b
0000000100013cf1	addq	$0x4, %rsi
0000000100013cf5	jmp	0x100013da9
0000000100013cfa	movq	$0x0, (%rdi)
0000000100013d01	movq	%rsi, 0x8(%rdi)
0000000100013d05	movq	$0x0, 0x10(%rdi)
0000000100013d0d	movq	%rsi, 0x18(%rdi)
0000000100013d11	movq	$0x0, 0x20(%rdi)
0000000100013d19	movq	%rsi, 0x28(%rdi)
0000000100013d1d	movq	$0x0, 0x30(%rdi)
0000000100013d25	movq	%rsi, 0x38(%rdi)
0000000100013d29	movq	$0x0, 0x40(%rdi)
0000000100013d31	movq	$0x0, 0x48(%rdi)
0000000100013d39	movl	$0x0, 0x50(%rdi)
0000000100013d40	movw	$0x5, 0x54(%rdi)
0000000100013d46	jmp	0x100013dd6
0000000100013d4b	movzwl	0x5(%rsi), %r8d
0000000100013d50	movzbl	0x4(%rsi), %r10d
0000000100013d55	movzbl	0x7(%rsi), %r11d
0000000100013d5a	movb	%r10b, -0x2d(%rbp)
0000000100013d5e	movb	%r11b, -0x2a(%rbp)
0000000100013d62	movw	%r8w, -0x2c(%rbp)
0000000100013d67	cmpq	$0x8, %r9
0000000100013d6b	jne	0x100013d81
0000000100013d6d	addq	$0x8, %rsi
0000000100013d71	jmp	0x100013da9
0000000100013d73	movzwl	%r8w, %eax
0000000100013d77	movb	$0x11, 0x8(%rdi)
0000000100013d7b	movq	%rax, 0x10(%rdi)
0000000100013d7f	jmp	0x100013dd3
0000000100013d81	movl	-0x2d(%rbp), %r8d
0000000100013d85	movzwl	0x9(%rsi), %r10d
0000000100013d8a	movzbl	0x8(%rsi), %r11d
0000000100013d8f	movzbl	0xb(%rsi), %ebx
0000000100013d93	movb	%r11b, -0x2d(%rbp)
0000000100013d97	movb	%bl, -0x2a(%rbp)
0000000100013d9a	movw	%r10w, -0x2c(%rbp)
0000000100013d9f	cmpq	$0xc, %r9
0000000100013da3	jne	0x100013de1
0000000100013da5	addq	$0xc, %rsi
0000000100013da9	movl	$0x0, -0x30(%rbp)
0000000100013db0	movzbl	-0x2e(%rbp), %eax
0000000100013db4	movb	%al, 0xb(%rdi)
0000000100013db7	movw	$0x0, 0x9(%rdi)
0000000100013dbd	movb	$0x13, 0x8(%rdi)
0000000100013dc1	movb	$0x0, 0xc(%rdi)
0000000100013dc5	movb	$0x0, 0xf(%rdi)
0000000100013dc9	movw	$0x0, 0xd(%rdi)
0000000100013dcf	movq	%rsi, 0x10(%rdi)
0000000100013dd3	movb	$0x16, (%rdi)
0000000100013dd6	popq	%rbx
0000000100013dd7	popq	%r12
0000000100013dd9	popq	%r13
0000000100013ddb	popq	%r14
0000000100013ddd	popq	%r15
0000000100013ddf	popq	%rbp
0000000100013de0	retq
0000000100013de1	movl	-0x2d(%rbp), %r10d
0000000100013de5	movzwl	0xd(%rsi), %r9d
0000000100013dea	movzbl	0xc(%rsi), %r11d
0000000100013def	movzbl	0xf(%rsi), %ebx
0000000100013df3	movb	%r11b, -0x2d(%rbp)
0000000100013df7	movb	%bl, -0x2a(%rbp)
0000000100013dfa	movw	%r9w, -0x2c(%rbp)
0000000100013dff	movl	-0x2d(%rbp), %r11d
0000000100013e03	testq	%r11, %r11
0000000100013e06	sete	%r9b
0000000100013e0a	leal	-0x1(%r11), %ebx
0000000100013e0e	testl	%ebx, %r11d
0000000100013e11	setne	%bl
0000000100013e14	orb	%r9b, %bl
0000000100013e17	jne	0x100013e3d
0000000100013e19	cmpl	%r10d, %r11d
0000000100013e1c	jbe	0x100013e3d
0000000100013e1e	addq	$-0x10, %rdx
0000000100013e22	addq	$0x10, %rsi
0000000100013e26	leaq	(,%r11,8), %rbx
0000000100013e2e	subq	%rbx, %rdx
0000000100013e31	jae	0x100013e43
0000000100013e33	movq	$0x13, 0x8(%rdi)
0000000100013e3b	jmp	0x100013dcf
0000000100013e3d	movb	$0x48, 0x8(%rdi)
0000000100013e41	jmp	0x100013dd3
0000000100013e43	leaq	(%rsi,%rbx), %r14
0000000100013e47	movq	%r11, %r15
0000000100013e4a	shlq	$0x2, %r15
0000000100013e4e	subq	%r15, %rdx
0000000100013e51	jae	0x100013e64
0000000100013e53	movq	$0x13, 0x8(%rdi)
0000000100013e5b	movq	%r14, 0x10(%rdi)
0000000100013e5f	jmp	0x100013dd3
0000000100013e64	cmpl	$0x8, %r8d
0000000100013e68	jbe	0x100013e73
0000000100013e6a	movb	$0x47, 0x8(%rdi)
0000000100013e6e	jmp	0x100013dd3
0000000100013e73	leaq	(%r14,%r15), %r9
0000000100013e77	testl	%r8d, %r8d
0000000100013e7a	je	0x100013f0c
0000000100013e80	cmpl	$0x2, %ecx
0000000100013e83	jne	0x100013f54
0000000100013e89	cmpq	$0x4, %rdx
0000000100013e8d	jb	0x100014416
0000000100013e93	movzwl	0x1(%r9), %ecx
0000000100013e98	movzbl	(%r9), %r12d
0000000100013e9c	movzbl	0x3(%r9), %r13d
0000000100013ea1	movb	%r12b, -0x2d(%rbp)
0000000100013ea5	movb	%r13b, -0x2a(%rbp)
0000000100013ea9	movw	%cx, -0x2c(%rbp)
0000000100013ead	movl	-0x2d(%rbp), %ecx
0000000100013eb0	decl	%ecx
0000000100013eb2	cmpl	$0x7, %ecx
0000000100013eb5	ja	0x100013f92
0000000100013ebb	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
0000000100013ec5	addq	$0x4, %r9
0000000100013ec9	leaq	-0x4(%rdx), %r12
0000000100013ecd	shll	$0x3, %ecx
0000000100013ed0	shrq	%cl, %r13
0000000100013ed3	cmpl	$0x1, %r8d
0000000100013ed7	jne	0x10001405a
0000000100013edd	xorl	%ecx, %ecx
0000000100013edf	movq	%rcx, -0x40(%rbp)
0000000100013ee3	xorl	%ecx, %ecx
0000000100013ee5	movq	%rcx, -0x48(%rbp)
0000000100013ee9	xorl	%ecx, %ecx
0000000100013eeb	movq	%rcx, -0x50(%rbp)
0000000100013eef	xorl	%ecx, %ecx
0000000100013ef1	movq	%rcx, -0x58(%rbp)
0000000100013ef5	xorl	%ecx, %ecx
0000000100013ef7	movq	%rcx, -0x60(%rbp)
0000000100013efb	xorl	%ecx, %ecx
0000000100013efd	movq	%rcx, -0x70(%rbp)
0000000100013f01	movl	%r8d, %ecx
0000000100013f04	movq	%r12, %rdx
0000000100013f07	xorl	%r12d, %r12d
0000000100013f0a	jmp	0x100013f38
0000000100013f0c	xorl	%r12d, %r12d
0000000100013f0f	xorl	%ecx, %ecx
0000000100013f11	movq	%rcx, -0x40(%rbp)
0000000100013f15	xorl	%ecx, %ecx
0000000100013f17	movq	%rcx, -0x48(%rbp)
0000000100013f1b	xorl	%ecx, %ecx
0000000100013f1d	movq	%rcx, -0x50(%rbp)
0000000100013f21	xorl	%ecx, %ecx
0000000100013f23	movq	%rcx, -0x58(%rbp)
0000000100013f27	xorl	%ecx, %ecx
0000000100013f29	movq	%rcx, -0x60(%rbp)
0000000100013f2d	xorl	%ecx, %ecx
0000000100013f2f	movq	%rcx, -0x70(%rbp)
0000000100013f33	xorl	%r13d, %r13d
0000000100013f36	xorl	%ecx, %ecx
0000000100013f38	movl	%ecx, %ecx
0000000100013f3a	imulq	%r10, %rcx
0000000100013f3e	shlq	$0x2, %rcx
0000000100013f42	subq	%rcx, %rdx
0000000100013f45	jae	0x100013f9b
0000000100013f47	movq	$0x13, 0x8(%rdi)
0000000100013f4f	jmp	0x10001443c
0000000100013f54	cmpq	$0x3, %rdx
0000000100013f58	jbe	0x100014416
0000000100013f5e	movzwl	0x1(%r9), %ecx
0000000100013f63	movzbl	(%r9), %r12d
0000000100013f67	movzbl	0x3(%r9), %r13d
0000000100013f6c	movb	%r12b, -0x2d(%rbp)
0000000100013f70	movb	%r13b, -0x2a(%rbp)
0000000100013f74	movw	%cx, -0x2c(%rbp)
0000000100013f78	movl	-0x2d(%rbp), %ecx
0000000100013f7b	decl	%ecx
0000000100013f7d	cmpl	$0x8, %ecx
0000000100013f80	jae	0x100013f92
0000000100013f82	movl	$0xfd, %r12d
0000000100013f88	btl	%ecx, %r12d
0000000100013f8c	jb	0x1000140e6
0000000100013f92	movb	$0x4a, 0x8(%rdi)
0000000100013f96	jmp	0x100013dd3
0000000100013f9b	movq	%r14, -0x78(%rbp)
0000000100013f9f	movq	%r13, %r14
0000000100013fa2	leaq	(%r9,%rcx), %r13
0000000100013fa6	movq	%r13, -0x38(%rbp)
0000000100013faa	cmpq	%rcx, %rdx
0000000100013fad	jae	0x100013fc0
0000000100013faf	movq	$0x13, 0x8(%rdi)
0000000100013fb7	movq	-0x38(%rbp), %rax
0000000100013fbb	jmp	0x100013d7b
0000000100013fc0	shlq	$0x38, %r12
0000000100013fc4	movzbl	-0x40(%rbp), %edx
0000000100013fc8	shlq	$0x30, %rdx
0000000100013fcc	orq	%r12, %rdx
0000000100013fcf	movq	%r9, -0x68(%rbp)
0000000100013fd3	movzbl	-0x48(%rbp), %r13d
0000000100013fd8	shlq	$0x28, %r13
0000000100013fdc	orq	%rdx, %r13
0000000100013fdf	movzbl	-0x50(%rbp), %edx
0000000100013fe3	shlq	$0x20, %rdx
0000000100013fe7	orq	%r13, %rdx
0000000100013fea	movq	-0x58(%rbp), %r12
0000000100013fee	shll	$0x18, %r12d
0000000100013ff2	orq	%rdx, %r12
0000000100013ff5	movzbl	-0x60(%rbp), %edx
0000000100013ff9	shlq	$0x10, %rdx
0000000100013ffd	orq	%r12, %rdx
0000000100014000	movq	-0x70(%rbp), %r12
0000000100014004	shll	$0x8, %r12d
0000000100014008	movzwl	%r12w, %r13d
000000010001400c	orq	%rdx, %r13
000000010001400f	movzbl	%r14b, %edx
0000000100014013	orq	%r13, %rdx
0000000100014016	movq	%rdx, (%rdi)
0000000100014019	movq	%rsi, 0x8(%rdi)
000000010001401d	movq	%rbx, 0x10(%rdi)
0000000100014021	movq	-0x78(%rbp), %rdx
0000000100014025	movq	%rdx, 0x18(%rdi)
0000000100014029	movq	%r15, 0x20(%rdi)
000000010001402d	movq	-0x68(%rbp), %rdx
0000000100014031	movq	%rdx, 0x28(%rdi)
0000000100014035	movq	%rcx, 0x30(%rdi)
0000000100014039	movq	-0x38(%rbp), %rdx
000000010001403d	movq	%rdx, 0x38(%rdi)
0000000100014041	movq	%rcx, 0x40(%rdi)
0000000100014045	movl	%r8d, 0x48(%rdi)
0000000100014049	movl	%r10d, 0x4c(%rdi)
000000010001404d	movl	%r11d, 0x50(%rdi)
0000000100014051	movw	%ax, 0x54(%rdi)
0000000100014055	jmp	0x100013dd6
000000010001405a	movq	%r13, -0x38(%rbp)
000000010001405e	cmpq	$0x4, %r12
0000000100014062	jb	0x100014416
0000000100014068	movzwl	0x1(%r9), %ecx
000000010001406d	movzbl	(%r9), %r12d
0000000100014071	movzbl	0x3(%r9), %r13d
0000000100014076	movb	%r12b, -0x2d(%rbp)
000000010001407a	movb	%r13b, -0x2a(%rbp)
000000010001407e	movw	%cx, -0x2c(%rbp)
0000000100014082	movl	-0x2d(%rbp), %ecx
0000000100014085	decl	%ecx
0000000100014087	cmpl	$0x7, %ecx
000000010001408a	ja	0x100013f92
0000000100014090	addq	$0x4, %r9
0000000100014094	leaq	-0x8(%rdx), %r12
0000000100014098	shll	$0x3, %ecx
000000010001409b	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
00000001000140a5	shrq	%cl, %r13
00000001000140a8	movq	%r13, -0x70(%rbp)
00000001000140ac	cmpl	$0x2, %r8d
00000001000140b0	jne	0x100014445
00000001000140b6	xorl	%ecx, %ecx
00000001000140b8	movq	%rcx, -0x40(%rbp)
00000001000140bc	xorl	%ecx, %ecx
00000001000140be	movq	%rcx, -0x48(%rbp)
00000001000140c2	xorl	%ecx, %ecx
00000001000140c4	movq	%rcx, -0x50(%rbp)
00000001000140c8	xorl	%ecx, %ecx
00000001000140ca	movq	%rcx, -0x58(%rbp)
00000001000140ce	xorl	%ecx, %ecx
00000001000140d0	movq	%rcx, -0x60(%rbp)
00000001000140d4	movl	%r8d, %ecx
00000001000140d7	movq	%r12, %rdx
00000001000140da	xorl	%r12d, %r12d
00000001000140dd	movq	-0x38(%rbp), %r13
00000001000140e1	jmp	0x100013f38
00000001000140e6	leaq	-0x4(%rdx), %r12
00000001000140ea	addq	$0x4, %r9
00000001000140ee	movq	%r9, -0x68(%rbp)
00000001000140f2	movabsq	$0x110d130b08000707, %r9        ## imm = 0x110D130B08000707
00000001000140fc	shll	$0x3, %ecx
00000001000140ff	shrq	%cl, %r9
0000000100014102	movq	%r9, -0x38(%rbp)
0000000100014106	cmpl	$0x1, %r8d
000000010001410a	jne	0x100014146
000000010001410c	xorl	%ecx, %ecx
000000010001410e	movq	%rcx, -0x40(%rbp)
0000000100014112	xorl	%ecx, %ecx
0000000100014114	movq	%rcx, -0x48(%rbp)
0000000100014118	xorl	%ecx, %ecx
000000010001411a	movq	%rcx, -0x50(%rbp)
000000010001411e	xorl	%ecx, %ecx
0000000100014120	movq	%rcx, -0x58(%rbp)
0000000100014124	xorl	%ecx, %ecx
0000000100014126	movq	%rcx, -0x60(%rbp)
000000010001412a	xorl	%ecx, %ecx
000000010001412c	movq	%rcx, -0x70(%rbp)
0000000100014130	movl	%r8d, %ecx
0000000100014133	movq	%r12, %rdx
0000000100014136	xorl	%r12d, %r12d
0000000100014139	movq	-0x38(%rbp), %r13
000000010001413d	movq	-0x68(%rbp), %r9
0000000100014141	jmp	0x100013f38
0000000100014146	cmpq	$0x4, %r12
000000010001414a	jb	0x100014412
0000000100014150	movq	-0x68(%rbp), %r9
0000000100014154	movzwl	0x1(%r9), %ecx
0000000100014159	movzbl	(%r9), %r12d
000000010001415d	movzbl	0x3(%r9), %r13d
0000000100014162	movb	%r12b, -0x2d(%rbp)
0000000100014166	movb	%r13b, -0x2a(%rbp)
000000010001416a	movw	%cx, -0x2c(%rbp)
000000010001416e	movl	-0x2d(%rbp), %ecx
0000000100014171	decl	%ecx
0000000100014173	cmpl	$0x7, %ecx
0000000100014176	ja	0x100013f92
000000010001417c	movl	$0xfd, %r12d
0000000100014182	btl	%ecx, %r12d
0000000100014186	jae	0x100013f92
000000010001418c	leaq	-0x8(%rdx), %r12
0000000100014190	addq	$0x4, %r9
0000000100014194	shll	$0x3, %ecx
0000000100014197	movabsq	$0x110d130b08000707, %r13       ## imm = 0x110D130B08000707
00000001000141a1	shrq	%cl, %r13
00000001000141a4	movq	%r13, -0x70(%rbp)
00000001000141a8	cmpl	$0x2, %r8d
00000001000141ac	je	0x1000140b6
00000001000141b2	cmpq	$0x4, %r12
00000001000141b6	jb	0x100014416
00000001000141bc	movzwl	0x1(%r9), %ecx
00000001000141c1	movzbl	(%r9), %r12d
00000001000141c5	movzbl	0x3(%r9), %r13d
00000001000141ca	movb	%r12b, -0x2d(%rbp)
00000001000141ce	movb	%r13b, -0x2a(%rbp)
00000001000141d2	movw	%cx, -0x2c(%rbp)
00000001000141d6	movl	-0x2d(%rbp), %ecx
00000001000141d9	decl	%ecx
00000001000141db	cmpl	$0x7, %ecx
00000001000141de	ja	0x100013f92
00000001000141e4	movl	$0xfd, %r12d
00000001000141ea	btl	%ecx, %r12d
00000001000141ee	jae	0x100013f92
00000001000141f4	leaq	-0xc(%rdx), %r12
00000001000141f8	addq	$0x4, %r9
00000001000141fc	shll	$0x3, %ecx
00000001000141ff	movabsq	$0x110d130b08000707, %r13       ## imm = 0x110D130B08000707
0000000100014209	shrq	%cl, %r13
000000010001420c	movq	%r13, -0x60(%rbp)
0000000100014210	cmpl	$0x3, %r8d
0000000100014214	je	0x100014495
000000010001421a	cmpq	$0x4, %r12
000000010001421e	jb	0x100014416
0000000100014224	movzwl	0x1(%r9), %ecx
0000000100014229	movzbl	(%r9), %r12d
000000010001422d	movzbl	0x3(%r9), %r13d
0000000100014232	movb	%r12b, -0x2d(%rbp)
0000000100014236	movb	%r13b, -0x2a(%rbp)
000000010001423a	movw	%cx, -0x2c(%rbp)
000000010001423e	movl	-0x2d(%rbp), %ecx
0000000100014241	decl	%ecx
0000000100014243	cmpl	$0x7, %ecx
0000000100014246	ja	0x100013f92
000000010001424c	movl	$0xfd, %r12d
0000000100014252	btl	%ecx, %r12d
0000000100014256	jae	0x100013f92
000000010001425c	leaq	-0x10(%rdx), %r12
0000000100014260	addq	$0x4, %r9
0000000100014264	shll	$0x3, %ecx
0000000100014267	movabsq	$0x110d130b08000707, %r13       ## imm = 0x110D130B08000707
0000000100014271	shrq	%cl, %r13
0000000100014274	movq	%r13, -0x58(%rbp)
0000000100014278	cmpl	$0x4, %r8d
000000010001427c	je	0x100014506
0000000100014282	cmpq	$0x4, %r12
0000000100014286	jb	0x100014416
000000010001428c	movzwl	0x1(%r9), %ecx
0000000100014291	movzbl	(%r9), %r12d
0000000100014295	movzbl	0x3(%r9), %r13d
000000010001429a	movb	%r12b, -0x2d(%rbp)
000000010001429e	movb	%r13b, -0x2a(%rbp)
00000001000142a2	movw	%cx, -0x2c(%rbp)
00000001000142a6	movl	-0x2d(%rbp), %ecx
00000001000142a9	decl	%ecx
00000001000142ab	cmpl	$0x7, %ecx
00000001000142ae	ja	0x100013f92
00000001000142b4	movl	$0xfd, %r12d
00000001000142ba	btl	%ecx, %r12d
00000001000142be	jae	0x100013f92
00000001000142c4	leaq	-0x14(%rdx), %r12
00000001000142c8	addq	$0x4, %r9
00000001000142cc	shll	$0x3, %ecx
00000001000142cf	movabsq	$0x110d130b08000707, %r13       ## imm = 0x110D130B08000707
00000001000142d9	shrq	%cl, %r13
00000001000142dc	movq	%r13, -0x50(%rbp)
00000001000142e0	cmpl	$0x5, %r8d
00000001000142e4	je	0x100014571
00000001000142ea	cmpq	$0x4, %r12
00000001000142ee	jb	0x100014416
00000001000142f4	movzwl	0x1(%r9), %ecx
00000001000142f9	movzbl	(%r9), %r12d
00000001000142fd	movzbl	0x3(%r9), %r13d
0000000100014302	movb	%r12b, -0x2d(%rbp)
0000000100014306	movb	%r13b, -0x2a(%rbp)
000000010001430a	movw	%cx, -0x2c(%rbp)
000000010001430e	movl	-0x2d(%rbp), %ecx
0000000100014311	decl	%ecx
0000000100014313	cmpl	$0x7, %ecx
0000000100014316	ja	0x100013f92
000000010001431c	movl	$0xfd, %r12d
0000000100014322	btl	%ecx, %r12d
0000000100014326	jae	0x100013f92
000000010001432c	leaq	-0x18(%rdx), %r12
0000000100014330	addq	$0x4, %r9
0000000100014334	shll	$0x3, %ecx
0000000100014337	movabsq	$0x110d130b08000707, %r13       ## imm = 0x110D130B08000707
0000000100014341	shrq	%cl, %r13
0000000100014344	movq	%r13, -0x48(%rbp)
0000000100014348	cmpl	$0x6, %r8d
000000010001434c	je	0x1000145d6
0000000100014352	cmpq	$0x4, %r12
0000000100014356	jb	0x100014416
000000010001435c	movzwl	0x1(%r9), %ecx
0000000100014361	movzbl	(%r9), %r12d
0000000100014365	movzbl	0x3(%r9), %r13d
000000010001436a	movb	%r12b, -0x2d(%rbp)
000000010001436e	movb	%r13b, -0x2a(%rbp)
0000000100014372	movw	%cx, -0x2c(%rbp)
0000000100014376	movl	-0x2d(%rbp), %ecx
0000000100014379	decl	%ecx
000000010001437b	cmpl	$0x7, %ecx
000000010001437e	ja	0x100013f92
0000000100014384	movl	$0xfd, %r12d
000000010001438a	btl	%ecx, %r12d
000000010001438e	jae	0x100013f92
0000000100014394	leaq	-0x1c(%rdx), %r12
0000000100014398	addq	$0x4, %r9
000000010001439c	shll	$0x3, %ecx
000000010001439f	movabsq	$0x110d130b08000707, %r13       ## imm = 0x110D130B08000707
00000001000143a9	shrq	%cl, %r13
00000001000143ac	movq	%r13, -0x40(%rbp)
00000001000143b0	cmpl	$0x7, %r8d
00000001000143b4	je	0x1000140d4
00000001000143ba	cmpq	$0x4, %r12
00000001000143be	jb	0x100014416
00000001000143c0	movzwl	0x1(%r9), %ecx
00000001000143c5	movzbl	(%r9), %r12d
00000001000143c9	movzbl	0x3(%r9), %r13d
00000001000143ce	movb	%r12b, -0x2d(%rbp)
00000001000143d2	movb	%r13b, -0x2a(%rbp)
00000001000143d6	movw	%cx, -0x2c(%rbp)
00000001000143da	movl	-0x2d(%rbp), %ecx
00000001000143dd	decl	%ecx
00000001000143df	cmpl	$0x7, %ecx
00000001000143e2	ja	0x100013f92
00000001000143e8	movl	$0xfd, %r12d
00000001000143ee	btl	%ecx, %r12d
00000001000143f2	jae	0x100013f92
00000001000143f8	addq	$-0x20, %rdx
00000001000143fc	addq	$0x4, %r9
0000000100014400	shll	$0x3, %ecx
0000000100014403	movabsq	$0x110d130b08000707, %r12       ## imm = 0x110D130B08000707
000000010001440d	jmp	0x100014680
0000000100014412	movq	-0x68(%rbp), %r9
0000000100014416	movl	$0x0, -0x30(%rbp)
000000010001441d	movzbl	-0x2e(%rbp), %eax
0000000100014421	movb	%al, 0xb(%rdi)
0000000100014424	movw	$0x0, 0x9(%rdi)
000000010001442a	movb	$0x13, 0x8(%rdi)
000000010001442e	movb	$0x0, 0xc(%rdi)
0000000100014432	movb	$0x0, 0xf(%rdi)
0000000100014436	movw	$0x0, 0xd(%rdi)
000000010001443c	movq	%r9, 0x10(%rdi)
0000000100014440	jmp	0x100013dd3
0000000100014445	cmpq	$0x4, %r12
0000000100014449	jb	0x100014416
000000010001444b	movzwl	0x1(%r9), %ecx
0000000100014450	movzbl	(%r9), %r12d
0000000100014454	movzbl	0x3(%r9), %r13d
0000000100014459	movb	%r12b, -0x2d(%rbp)
000000010001445d	movb	%r13b, -0x2a(%rbp)
0000000100014461	movw	%cx, -0x2c(%rbp)
0000000100014465	movl	-0x2d(%rbp), %ecx
0000000100014468	decl	%ecx
000000010001446a	cmpl	$0x7, %ecx
000000010001446d	ja	0x100013f92
0000000100014473	addq	$0x4, %r9
0000000100014477	leaq	-0xc(%rdx), %r12
000000010001447b	shll	$0x3, %ecx
000000010001447e	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
0000000100014488	shrq	%cl, %r13
000000010001448b	movq	%r13, -0x60(%rbp)
000000010001448f	cmpl	$0x3, %r8d
0000000100014493	jne	0x1000144b2
0000000100014495	xorl	%ecx, %ecx
0000000100014497	movq	%rcx, -0x40(%rbp)
000000010001449b	xorl	%ecx, %ecx
000000010001449d	movq	%rcx, -0x48(%rbp)
00000001000144a1	xorl	%ecx, %ecx
00000001000144a3	movq	%rcx, -0x50(%rbp)
00000001000144a7	xorl	%ecx, %ecx
00000001000144a9	movq	%rcx, -0x58(%rbp)
00000001000144ad	jmp	0x1000140d4
00000001000144b2	cmpq	$0x4, %r12
00000001000144b6	jb	0x100014416
00000001000144bc	movzwl	0x1(%r9), %ecx
00000001000144c1	movzbl	(%r9), %r12d
00000001000144c5	movzbl	0x3(%r9), %r13d
00000001000144ca	movb	%r12b, -0x2d(%rbp)
00000001000144ce	movb	%r13b, -0x2a(%rbp)
00000001000144d2	movw	%cx, -0x2c(%rbp)
00000001000144d6	movl	-0x2d(%rbp), %ecx
00000001000144d9	decl	%ecx
00000001000144db	cmpl	$0x7, %ecx
00000001000144de	ja	0x100013f92
00000001000144e4	addq	$0x4, %r9
00000001000144e8	leaq	-0x10(%rdx), %r12
00000001000144ec	shll	$0x3, %ecx
00000001000144ef	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
00000001000144f9	shrq	%cl, %r13
00000001000144fc	movq	%r13, -0x58(%rbp)
0000000100014500	cmpl	$0x4, %r8d
0000000100014504	jne	0x10001451d
0000000100014506	xorl	%ecx, %ecx
0000000100014508	movq	%rcx, -0x40(%rbp)
000000010001450c	xorl	%ecx, %ecx
000000010001450e	movq	%rcx, -0x48(%rbp)
0000000100014512	xorl	%ecx, %ecx
0000000100014514	movq	%rcx, -0x50(%rbp)
0000000100014518	jmp	0x1000140d4
000000010001451d	cmpq	$0x4, %r12
0000000100014521	jb	0x100014416
0000000100014527	movzwl	0x1(%r9), %r13d
000000010001452c	movzbl	(%r9), %r12d
0000000100014530	movzbl	0x3(%r9), %ecx
0000000100014535	movb	%r12b, -0x2d(%rbp)
0000000100014539	movb	%cl, -0x2a(%rbp)
000000010001453c	movw	%r13w, -0x2c(%rbp)
0000000100014541	movl	-0x2d(%rbp), %ecx
0000000100014544	decl	%ecx
0000000100014546	cmpl	$0x7, %ecx
0000000100014549	ja	0x100013f92
000000010001454f	addq	$0x4, %r9
0000000100014553	leaq	-0x14(%rdx), %r12
0000000100014557	shll	$0x3, %ecx
000000010001455a	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
0000000100014564	shrq	%cl, %r13
0000000100014567	movq	%r13, -0x50(%rbp)
000000010001456b	cmpl	$0x5, %r8d
000000010001456f	jne	0x100014582
0000000100014571	xorl	%ecx, %ecx
0000000100014573	movq	%rcx, -0x40(%rbp)
0000000100014577	xorl	%ecx, %ecx
0000000100014579	movq	%rcx, -0x48(%rbp)
000000010001457d	jmp	0x1000140d4
0000000100014582	cmpq	$0x4, %r12
0000000100014586	jb	0x100014416
000000010001458c	movzwl	0x1(%r9), %r13d
0000000100014591	movzbl	(%r9), %r12d
0000000100014595	movzbl	0x3(%r9), %ecx
000000010001459a	movb	%r12b, -0x2d(%rbp)
000000010001459e	movb	%cl, -0x2a(%rbp)
00000001000145a1	movw	%r13w, -0x2c(%rbp)
00000001000145a6	movl	-0x2d(%rbp), %ecx
00000001000145a9	decl	%ecx
00000001000145ab	cmpl	$0x7, %ecx
00000001000145ae	ja	0x100013f92
00000001000145b4	addq	$0x4, %r9
00000001000145b8	leaq	-0x18(%rdx), %r12
00000001000145bc	shll	$0x3, %ecx
00000001000145bf	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
00000001000145c9	shrq	%cl, %r13
00000001000145cc	movq	%r13, -0x48(%rbp)
00000001000145d0	cmpl	$0x6, %r8d
00000001000145d4	jne	0x1000145e1
00000001000145d6	xorl	%ecx, %ecx
00000001000145d8	movq	%rcx, -0x40(%rbp)
00000001000145dc	jmp	0x1000140d4
00000001000145e1	cmpq	$0x4, %r12
00000001000145e5	jb	0x100014416
00000001000145eb	movzwl	0x1(%r9), %r13d
00000001000145f0	movzbl	(%r9), %r12d
00000001000145f4	movzbl	0x3(%r9), %ecx
00000001000145f9	movb	%r12b, -0x2d(%rbp)
00000001000145fd	movb	%cl, -0x2a(%rbp)
0000000100014600	movw	%r13w, -0x2c(%rbp)
0000000100014605	movl	-0x2d(%rbp), %ecx
0000000100014608	decl	%ecx
000000010001460a	cmpl	$0x7, %ecx
000000010001460d	ja	0x100013f92
0000000100014613	addq	$0x4, %r9
0000000100014617	leaq	-0x1c(%rdx), %r12
000000010001461b	shll	$0x3, %ecx
000000010001461e	movabsq	$0xd0c130a08001507, %r13        ## imm = 0xD0C130A08001507
0000000100014628	shrq	%cl, %r13
000000010001462b	movq	%r13, -0x40(%rbp)
000000010001462f	cmpl	$0x7, %r8d
0000000100014633	je	0x1000140d4
0000000100014639	cmpq	$0x4, %r12
000000010001463d	jb	0x100014416
0000000100014643	movzwl	0x1(%r9), %r13d
0000000100014648	movzbl	(%r9), %r12d
000000010001464c	movzbl	0x3(%r9), %ecx
0000000100014651	movb	%r12b, -0x2d(%rbp)
0000000100014655	movb	%cl, -0x2a(%rbp)
0000000100014658	movw	%r13w, -0x2c(%rbp)
000000010001465d	movl	-0x2d(%rbp), %ecx
0000000100014660	decl	%ecx
0000000100014662	cmpl	$0x7, %ecx
0000000100014665	ja	0x100013f92
000000010001466b	addq	$0x4, %r9
000000010001466f	addq	$-0x20, %rdx
0000000100014673	shll	$0x3, %ecx
0000000100014676	movabsq	$0xd0c130a08001507, %r12        ## imm = 0xD0C130A08001507
0000000100014680	shrq	%cl, %r12
0000000100014683	movl	%r8d, %ecx
0000000100014686	movq	-0x38(%rbp), %r13
000000010001468a	jmp	0x100013f38
000000010001468f	nop
__ZN5gimli4read6abbrev20DebugAbbrev$LT$R$GT$13abbreviations17h5bb3c18d895eb57eE:
0000000100014690	pushq	%rbp
0000000100014691	movq	%rsp, %rbp
0000000100014694	pushq	%r15
0000000100014696	pushq	%r14
0000000100014698	pushq	%r13
000000010001469a	pushq	%r12
000000010001469c	pushq	%rbx
000000010001469d	subq	$0x288, %rsp                    ## imm = 0x288
00000001000146a4	movq	%rsi, %r12
00000001000146a7	cmpq	%rcx, %rdx
00000001000146aa	jae	0x1000146c0
00000001000146ac	movb	$0x13, 0x8(%rdi)
00000001000146b0	movq	%r12, 0x10(%rdi)
00000001000146b4	movq	$0x0, (%rdi)
00000001000146bb	jmp	0x100014e76
00000001000146c0	movq	%rcx, %r15
00000001000146c3	movq	%rdx, %r14
00000001000146c6	movq	%rdi, -0x40(%rbp)
00000001000146ca	addq	%rcx, %r12
00000001000146cd	leaq	-0x70(%rbp), %rdi
00000001000146d1	callq	__ZN5gimli4read6abbrev13Abbreviations5empty17hc7edab4c6dd5fdf7E ## gimli::read::abbrev::Abbreviations::empty::hc7edab4c6dd5fdf7
00000001000146d6	subq	%r15, %r14
00000001000146d9	je	0x100014beb
00000001000146df	xorl	%r15d, %r15d
00000001000146e2	leaq	-0xe0(%rbp), %rdi
00000001000146e9	xorl	%eax, %eax
00000001000146eb	xorl	%r13d, %r13d
00000001000146ee	xorl	%ecx, %ecx
00000001000146f0	movzbl	(%r12,%rax), %edx
00000001000146f5	movl	$0x6, %ebx
00000001000146fa	cmpl	$0x3f, %ecx
00000001000146fd	jne	0x100014708
00000001000146ff	cmpb	$0x2, %dl
0000000100014702	jae	0x100014d00
0000000100014708	movzbl	%dl, %edx
000000010001470b	movl	%edx, %esi
000000010001470d	andl	$0x7f, %esi
0000000100014710	shlq	%cl, %rsi
0000000100014713	orq	%rsi, %r13
0000000100014716	testb	%dl, %dl
0000000100014718	jns	0x10001472a
000000010001471a	addl	$0x7, %ecx
000000010001471d	incq	%rax
0000000100014720	cmpq	%rax, %r14
0000000100014723	jne	0x1000146f0
0000000100014725	jmp	0x100014be8
000000010001472a	testq	%r13, %r13
000000010001472d	je	0x100014c96
0000000100014733	leaq	-0x1(%r14), %rcx
0000000100014737	cmpq	%rax, %rcx
000000010001473a	je	0x100014cce
0000000100014740	movq	%r14, %rsi
0000000100014743	subq	%rax, %rsi
0000000100014746	movzbl	0x1(%r12,%rax), %ecx
000000010001474c	movl	%ecx, %edx
000000010001474e	andl	$0x7f, %edx
0000000100014751	movl	%edx, -0x30(%rbp)
0000000100014754	testb	%cl, %cl
0000000100014756	js	0x100014763
0000000100014758	addq	$-0x2, %rsi
000000010001475c	leaq	0x2(%r12,%rax), %rdx
0000000100014761	jmp	0x1000147d9
0000000100014763	leaq	-0x2(%r14), %rcx
0000000100014767	cmpq	%rax, %rcx
000000010001476a	je	0x100014e9d
0000000100014770	movq	%rsi, %r9
0000000100014773	leaq	0x3(%r12,%rax), %r8
0000000100014778	movzbl	0x2(%r12,%rax), %ecx
000000010001477e	movl	%ecx, %edx
0000000100014780	andl	$0x7f, %edx
0000000100014783	shll	$0x7, %edx
0000000100014786	movl	-0x30(%rbp), %esi
0000000100014789	movzwl	%si, %esi
000000010001478c	orl	%edx, %esi
000000010001478e	movl	%esi, -0x30(%rbp)
0000000100014791	testb	%cl, %cl
0000000100014793	js	0x1000147a1
0000000100014795	movq	%r9, %rsi
0000000100014798	addq	$-0x3, %rsi
000000010001479c	movq	%r8, %rdx
000000010001479f	jmp	0x1000147d9
00000001000147a1	addq	$-0x3, %r14
00000001000147a5	cmpq	%rax, %r14
00000001000147a8	je	0x100014ea7
00000001000147ae	movzbl	(%r8), %ecx
00000001000147b2	cmpw	$0x3, %cx
00000001000147b6	ja	0x100014d00
00000001000147bc	leaq	0x4(%r12,%rax), %rdx
00000001000147c1	movq	%r9, %rsi
00000001000147c4	addq	$-0x4, %rsi
00000001000147c8	movzwl	%cx, %eax
00000001000147cb	shll	$0xe, %eax
00000001000147ce	movl	-0x30(%rbp), %ecx
00000001000147d1	movzwl	%cx, %ecx
00000001000147d4	orl	%eax, %ecx
00000001000147d6	movl	%ecx, -0x30(%rbp)
00000001000147d9	cmpw	$0x0, -0x30(%rbp)
00000001000147de	je	0x100014cec
00000001000147e4	testq	%rsi, %rsi
00000001000147e7	je	0x100014cf3
00000001000147ed	movzbl	(%rdx), %ebx
00000001000147f0	cmpb	$0x2, %bl
00000001000147f3	jae	0x100014cfb
00000001000147f9	movq	%rsi, %r14
00000001000147fc	movq	%rdx, %r12
00000001000147ff	callq	__ZN5gimli4read6abbrev10Attributes3new17h9f1c81a07b4c37faE ## gimli::read::abbrev::Attributes::new::h9f1c81a07b4c37fa
0000000100014804	decq	%r14
0000000100014807	incq	%r12
000000010001480a	testq	%r14, %r14
000000010001480d	je	0x100014bfe
0000000100014813	movq	%r14, %rcx
0000000100014816	movb	%bl, -0x29(%rbp)
0000000100014819	xorl	%r15d, %r15d
000000010001481c	xorl	%ebx, %ebx
000000010001481e	xorl	%eax, %eax
0000000100014820	leaq	-0xe0(%rbp), %r10
0000000100014827	leaq	-0x1(%r14), %rdx
000000010001482b	movq	%r12, %rsi
000000010001482e	leaq	0x1(%r12), %rcx
0000000100014833	movzbl	(%r12), %edi
0000000100014838	movl	%edi, %esi
000000010001483a	andl	$0x7f, %esi
000000010001483d	testb	%dil, %dil
0000000100014840	jns	0x1000148b0
0000000100014842	testq	%rdx, %rdx
0000000100014845	je	0x100014c82
000000010001484b	movq	%r14, %rcx
000000010001484e	leaq	-0x2(%r14), %rdx
0000000100014852	movq	%r12, %rdi
0000000100014855	leaq	0x2(%r12), %rcx
000000010001485a	movzbl	0x1(%r12), %edi
0000000100014860	movl	%edi, %r8d
0000000100014863	andl	$0x7f, %r8d
0000000100014867	shll	$0x7, %r8d
000000010001486b	movzwl	%si, %esi
000000010001486e	orl	%r8d, %esi
0000000100014871	testb	%dil, %dil
0000000100014874	jns	0x1000148b0
0000000100014876	testq	%rdx, %rdx
0000000100014879	je	0x100014c82
000000010001487f	movzbl	(%rcx), %ecx
0000000100014882	cmpw	$0x3, %cx
0000000100014886	ja	0x100014e88
000000010001488c	addq	$0x3, %r12
0000000100014890	addq	$-0x3, %r14
0000000100014894	movzwl	%cx, %ecx
0000000100014897	shll	$0xe, %ecx
000000010001489a	movzwl	%si, %esi
000000010001489d	orl	%ecx, %esi
000000010001489f	movq	%r12, %rcx
00000001000148a2	movq	%r14, %rdx
00000001000148a5	nopw	%cs:(%rax,%rax)
00000001000148af	nop
00000001000148b0	testw	%si, %si
00000001000148b3	je	0x100014a3e
00000001000148b9	testq	%rdx, %rdx
00000001000148bc	je	0x100014c82
00000001000148c2	leaq	-0x1(%rdx), %r14
00000001000148c6	leaq	0x1(%rcx), %r12
00000001000148ca	movzbl	(%rcx), %edi
00000001000148cd	movl	%edi, %eax
00000001000148cf	andl	$0x7f, %eax
00000001000148d2	testb	%dil, %dil
00000001000148d5	jns	0x100014940
00000001000148d7	testq	%r14, %r14
00000001000148da	je	0x100014bfe
00000001000148e0	leaq	-0x2(%rdx), %r14
00000001000148e4	leaq	0x2(%rcx), %r12
00000001000148e8	movzbl	0x1(%rcx), %edi
00000001000148ec	movl	%edi, %r8d
00000001000148ef	andl	$0x7f, %r8d
00000001000148f3	shll	$0x7, %r8d
00000001000148f7	movzwl	%ax, %eax
00000001000148fa	orl	%r8d, %eax
00000001000148fd	testb	%dil, %dil
0000000100014900	jns	0x100014940
0000000100014902	testq	%r14, %r14
0000000100014905	je	0x100014bfe
000000010001490b	movzbl	(%r12), %edi
0000000100014910	cmpw	$0x3, %di
0000000100014914	ja	0x100014e88
000000010001491a	addq	$0x3, %rcx
000000010001491e	addq	$-0x3, %rdx
0000000100014922	movzwl	%di, %edi
0000000100014925	shll	$0xe, %edi
0000000100014928	movzwl	%ax, %eax
000000010001492b	orl	%edi, %eax
000000010001492d	movq	%rcx, %r12
0000000100014930	movq	%rdx, %r14
0000000100014933	nopw	%cs:(%rax,%rax)
000000010001493d	nopl	(%rax)
0000000100014940	movzwl	%ax, %eax
0000000100014943	cmpw	$0x21, %ax
0000000100014947	je	0x100014956
0000000100014949	testl	%eax, %eax
000000010001494b	je	0x100014cd8
0000000100014951	xorl	%r15d, %r15d
0000000100014954	jmp	0x1000149d3
0000000100014956	xorl	%ecx, %ecx
0000000100014958	movq	%r12, %rdx
000000010001495b	movq	%r14, %rdi
000000010001495e	xorl	%r15d, %r15d
0000000100014961	jmp	0x100014988
0000000100014963	nopw	%cs:(%rax,%rax)
000000010001496d	nopl	(%rax)
0000000100014970	movl	%r8d, %r9d
0000000100014973	andl	$0x7f, %r9d
0000000100014977	shlq	%cl, %r9
000000010001497a	incq	%rdx
000000010001497d	orq	%r9, %r15
0000000100014980	addl	$0x7, %ecx
0000000100014983	testb	%r8b, %r8b
0000000100014986	jns	0x1000149ab
0000000100014988	subq	$0x1, %rdi
000000010001498c	jb	0x100014bfb
0000000100014992	movzbl	(%rdx), %r8d
0000000100014996	cmpl	$0x3f, %ecx
0000000100014999	jne	0x100014970
000000010001499b	testq	%r8, %r8
000000010001499e	je	0x100014970
00000001000149a0	cmpl	$0x7f, %r8d
00000001000149a4	je	0x100014970
00000001000149a6	jmp	0x100014c74
00000001000149ab	movq	$-0x1, %r9
00000001000149b2	shlq	%cl, %r9
00000001000149b5	testb	$0x40, %r8b
00000001000149b9	movl	$0x0, %r8d
00000001000149bf	cmoveq	%r8, %r9
00000001000149c3	cmpl	$0x40, %ecx
00000001000149c6	cmovgeq	%r8, %r9
00000001000149ca	orq	%r9, %r15
00000001000149cd	movq	%rdx, %r12
00000001000149d0	movq	%rdi, %r14
00000001000149d3	movzwl	%si, %ecx
00000001000149d6	movq	-0x38(%rbp), %rdx
00000001000149da	movabsq	$-0x100000000, %rbx             ## imm = 0xFFFFFFFF00000000
00000001000149e4	andq	%rbx, %rdx
00000001000149e7	orq	%rcx, %rdx
00000001000149ea	shlq	$0x10, %rax
00000001000149ee	orq	%rdx, %rax
00000001000149f1	movq	%r15, -0x140(%rbp)
00000001000149f8	movq	%rax, -0x38(%rbp)
00000001000149fc	movq	%rax, -0x138(%rbp)
0000000100014a03	movq	%r10, %rdi
0000000100014a06	leaq	-0x140(%rbp), %rsi
0000000100014a0d	callq	__ZN5gimli4read6abbrev10Attributes4push17h990fe0b9bdf06a11E ## gimli::read::abbrev::Attributes::push::h990fe0b9bdf06a11
0000000100014a12	movq	%r15, %rax
0000000100014a15	andq	%rbx, %rax
0000000100014a18	movq	%r15, %rbx
0000000100014a1b	andq	$-0x10000, %rbx                 ## imm = 0xFFFF0000
0000000100014a22	andq	$-0x100, %r15
0000000100014a29	testq	%r14, %r14
0000000100014a2c	leaq	-0xe0(%rbp), %r10
0000000100014a33	jne	0x100014827
0000000100014a39	jmp	0x100014bfe
0000000100014a3e	testq	%rdx, %rdx
0000000100014a41	je	0x100014c82
0000000100014a47	movq	-0x38(%rbp), %r9
0000000100014a4b	leaq	-0x1(%rdx), %r14
0000000100014a4f	leaq	0x1(%rcx), %r12
0000000100014a53	movzbl	(%rcx), %edi
0000000100014a56	movl	%edi, %esi
0000000100014a58	andl	$0x7f, %esi
0000000100014a5b	testb	%dil, %dil
0000000100014a5e	jns	0x100014abc
0000000100014a60	testq	%r14, %r14
0000000100014a63	je	0x100014bfe
0000000100014a69	leaq	-0x2(%rdx), %r14
0000000100014a6d	leaq	0x2(%rcx), %r12
0000000100014a71	movzbl	0x1(%rcx), %edi
0000000100014a75	movl	%edi, %r8d
0000000100014a78	andl	$0x7f, %r8d
0000000100014a7c	shll	$0x7, %r8d
0000000100014a80	movzwl	%si, %esi
0000000100014a83	orl	%r8d, %esi
0000000100014a86	testb	%dil, %dil
0000000100014a89	jns	0x100014abc
0000000100014a8b	testq	%r14, %r14
0000000100014a8e	je	0x100014bfe
0000000100014a94	movzbl	(%r12), %edi
0000000100014a99	cmpw	$0x3, %di
0000000100014a9d	ja	0x100014f10
0000000100014aa3	addq	$0x3, %rcx
0000000100014aa7	addq	$-0x3, %rdx
0000000100014aab	movzwl	%di, %edi
0000000100014aae	shll	$0xe, %edi
0000000100014ab1	movzwl	%si, %esi
0000000100014ab4	orl	%edi, %esi
0000000100014ab6	movq	%rcx, %r12
0000000100014ab9	movq	%rdx, %r14
0000000100014abc	testw	%si, %si
0000000100014abf	jne	0x100014eb1
0000000100014ac5	movq	-0xe0(%rbp), %rax
0000000100014acc	movq	-0xd8(%rbp), %rbx
0000000100014ad3	movq	-0xd0(%rbp), %rdx
0000000100014ada	movl	$0x9, %ecx
0000000100014adf	leaq	-0x1f8(%rbp), %r8
0000000100014ae6	movq	%r8, %rdi
0000000100014ae9	leaq	-0xc8(%rbp), %rsi
0000000100014af0	rep		movsq	(%rsi), %es:(%rdi)
0000000100014af3	cmpq	$0x2, %rax
0000000100014af7	je	0x100014ec8
0000000100014afd	movl	$0x9, %ecx
0000000100014b02	leaq	-0x128(%rbp), %rdi
0000000100014b09	movq	%r8, %rsi
0000000100014b0c	rep		movsq	(%rsi), %es:(%rdi)
0000000100014b0f	movq	%rax, -0x140(%rbp)
0000000100014b16	movq	%rbx, -0x138(%rbp)
0000000100014b1d	movq	%rdx, -0x130(%rbp)
0000000100014b24	movzbl	-0x29(%rbp), %ecx
0000000100014b28	movq	%r10, %rdi
0000000100014b2b	movq	%r13, %rsi
0000000100014b2e	movl	-0x30(%rbp), %edx
0000000100014b31	leaq	-0x140(%rbp), %r8
0000000100014b38	callq	__ZN5gimli4read6abbrev12Abbreviation3new17h619a0351974f602dE ## gimli::read::abbrev::Abbreviation::new::h619a0351974f602d
0000000100014b3d	xorl	%r15d, %r15d
0000000100014b40	movq	-0xe0(%rbp), %rax
0000000100014b47	movq	-0xd8(%rbp), %rbx
0000000100014b4e	movq	-0xd0(%rbp), %rdx
0000000100014b55	movl	$0xb, %ecx
0000000100014b5a	leaq	-0x2a8(%rbp), %r8
0000000100014b61	movq	%r8, %rdi
0000000100014b64	leaq	-0xc8(%rbp), %rsi
0000000100014b6b	rep		movsq	(%rsi), %es:(%rdi)
0000000100014b6e	cmpq	$0x3, %rax
0000000100014b72	je	0x100014eda
0000000100014b78	movl	$0xb, %ecx
0000000100014b7d	leaq	-0x250(%rbp), %r9
0000000100014b84	movq	%r9, %rdi
0000000100014b87	movq	%r8, %rsi
0000000100014b8a	rep		movsq	(%rsi), %es:(%rdi)
0000000100014b8d	cmpq	$0x2, %rax
0000000100014b91	je	0x100014c96
0000000100014b97	movq	%rax, -0x1b0(%rbp)
0000000100014b9e	movq	%rbx, -0x1a8(%rbp)
0000000100014ba5	movq	%rdx, -0x1a0(%rbp)
0000000100014bac	movl	$0xb, %ecx
0000000100014bb1	leaq	-0x198(%rbp), %rdi
0000000100014bb8	movq	%r9, %rsi
0000000100014bbb	rep		movsq	(%rsi), %es:(%rdi)
0000000100014bbe	leaq	-0x70(%rbp), %rdi
0000000100014bc2	leaq	-0x1b0(%rbp), %rsi
0000000100014bc9	callq	__ZN5gimli4read6abbrev13Abbreviations6insert17ha17b445e6a99b7e6E ## gimli::read::abbrev::Abbreviations::insert::ha17b445e6a99b7e6
0000000100014bce	testb	%al, %al
0000000100014bd0	jne	0x100014f03
0000000100014bd6	testq	%r14, %r14
0000000100014bd9	leaq	-0xe0(%rbp), %rdi
0000000100014be0	jne	0x1000146e9
0000000100014be6	jmp	0x100014beb
0000000100014be8	addq	%r14, %r12
0000000100014beb	movl	$0x13, %ebx
0000000100014bf0	xorl	%r14d, %r14d
0000000100014bf3	xorl	%r15d, %r15d
0000000100014bf6	jmp	0x100014d03
0000000100014bfb	addq	%r14, %r12
0000000100014bfe	movl	$0x13, %edx
0000000100014c03	xorl	%eax, %eax
0000000100014c05	xorl	%ebx, %ebx
0000000100014c07	xorl	%r15d, %r15d
0000000100014c0a	movabsq	$-0x100000000, %r14             ## imm = 0xFFFFFFFF00000000
0000000100014c14	andq	%r14, %rax
0000000100014c17	andl	$0xffff0000, %ebx               ## imm = 0xFFFF0000
0000000100014c1d	orq	%rax, %rbx
0000000100014c20	andl	$0xff00, %r15d                  ## imm = 0xFF00
0000000100014c27	orq	%rdx, %r15
0000000100014c2a	cmpq	$0x0, -0xe0(%rbp)
0000000100014c32	je	0x100014c55
0000000100014c34	movq	-0xd0(%rbp), %rsi
0000000100014c3b	testq	%rsi, %rsi
0000000100014c3e	je	0x100014c55
0000000100014c40	movq	-0xd8(%rbp), %rdi
0000000100014c47	shlq	$0x4, %rsi
0000000100014c4b	movl	$0x8, %edx
0000000100014c50	callq	___rust_dealloc
0000000100014c55	orq	%r15, %rbx
0000000100014c58	movq	%rbx, %r15
0000000100014c5b	andq	$-0x100, %r15
0000000100014c62	movq	%rbx, %rcx
0000000100014c65	andq	$-0x10000, %rcx                 ## imm = 0xFFFF0000
0000000100014c6c	andq	%rbx, %r14
0000000100014c6f	jmp	0x100014d05
0000000100014c74	movl	$0x7, %edx
0000000100014c79	xorl	%eax, %eax
0000000100014c7b	xorl	%ebx, %ebx
0000000100014c7d	xorl	%r15d, %r15d
0000000100014c80	jmp	0x100014c0a
0000000100014c82	movl	$0x13, %edx
0000000100014c87	xorl	%eax, %eax
0000000100014c89	xorl	%ebx, %ebx
0000000100014c8b	xorl	%r15d, %r15d
0000000100014c8e	movq	%rcx, %r12
0000000100014c91	jmp	0x100014c0a
0000000100014c96	movq	-0x48(%rbp), %rax
0000000100014c9a	movq	-0x40(%rbp), %rdx
0000000100014c9e	movq	%rax, 0x28(%rdx)
0000000100014ca2	movq	-0x50(%rbp), %rax
0000000100014ca6	movq	%rax, 0x20(%rdx)
0000000100014caa	movq	-0x58(%rbp), %rax
0000000100014cae	movq	%rax, 0x18(%rdx)
0000000100014cb2	movq	-0x60(%rbp), %rax
0000000100014cb6	movq	%rax, 0x10(%rdx)
0000000100014cba	movq	-0x70(%rbp), %rax
0000000100014cbe	movq	-0x68(%rbp), %rcx
0000000100014cc2	movq	%rcx, 0x8(%rdx)
0000000100014cc6	movq	%rax, (%rdx)
0000000100014cc9	jmp	0x100014e76
0000000100014cce	leaq	0x1(%r12,%rax), %r12
0000000100014cd3	jmp	0x100014beb
0000000100014cd8	movl	$0x9, %edx
0000000100014cdd	movq	%rax, %rbx
0000000100014ce0	movq	%rax, %r15
0000000100014ce3	movq	-0x38(%rbp), %r12
0000000100014ce7	jmp	0x100014c0a
0000000100014cec	movl	$0x8, %ebx
0000000100014cf1	jmp	0x100014d00
0000000100014cf3	movq	%rdx, %r12
0000000100014cf6	jmp	0x100014beb
0000000100014cfb	movl	$0xa, %ebx
0000000100014d00	xorl	%r14d, %r14d
0000000100014d03	xorl	%ecx, %ecx
0000000100014d05	andl	$0xffff0000, %ecx               ## imm = 0xFFFF0000
0000000100014d0b	andl	$0xff00, %r15d                  ## imm = 0xFF00
0000000100014d12	orq	%rcx, %r15
0000000100014d15	movzbl	%bl, %eax
0000000100014d18	orq	%r14, %rax
0000000100014d1b	orq	%r15, %rax
0000000100014d1e	movq	-0x40(%rbp), %rcx
0000000100014d22	movq	%rax, 0x8(%rcx)
0000000100014d26	movq	%rcx, %rax
0000000100014d29	movq	%r12, 0x10(%rcx)
0000000100014d2d	movq	$0x0, (%rax)
0000000100014d34	movq	-0x70(%rbp), %rbx
0000000100014d38	movq	-0x60(%rbp), %r14
0000000100014d3c	testq	%r14, %r14
0000000100014d3f	je	0x100014d7c
0000000100014d41	leaq	0x10(%rbx), %r15
0000000100014d45	jmp	0x100014d59
0000000100014d47	nopw	(%rax,%rax)
0000000100014d50	addq	$0x70, %r15
0000000100014d54	decq	%r14
0000000100014d57	je	0x100014d7c
0000000100014d59	cmpq	$0x0, -0x10(%r15)
0000000100014d5e	je	0x100014d50
0000000100014d60	movq	(%r15), %rsi
0000000100014d63	testq	%rsi, %rsi
0000000100014d66	je	0x100014d50
0000000100014d68	movq	-0x8(%r15), %rdi
0000000100014d6c	shlq	$0x4, %rsi
0000000100014d70	movl	$0x8, %edx
0000000100014d75	callq	___rust_dealloc
0000000100014d7a	jmp	0x100014d50
0000000100014d7c	movq	-0x68(%rbp), %rax
0000000100014d80	testq	%rax, %rax
0000000100014d83	je	0x100014d96
0000000100014d85	imulq	$0x70, %rax, %rsi
0000000100014d89	movl	$0x8, %edx
0000000100014d8e	movq	%rbx, %rdi
0000000100014d91	callq	___rust_dealloc
0000000100014d96	movq	-0x58(%rbp), %rcx
0000000100014d9a	testq	%rcx, %rcx
0000000100014d9d	je	0x100014de0
0000000100014d9f	movq	-0x50(%rbp), %rdx
0000000100014da3	movq	-0x48(%rbp), %rax
0000000100014da7	movq	$0x0, -0xd8(%rbp)
0000000100014db2	movq	%rcx, -0xd0(%rbp)
0000000100014db9	movq	%rdx, -0xc8(%rbp)
0000000100014dc0	movq	$0x0, -0xb8(%rbp)
0000000100014dcb	movq	%rcx, -0xb0(%rbp)
0000000100014dd2	movq	%rdx, -0xa8(%rbp)
0000000100014dd9	movl	$0x1, %ecx
0000000100014dde	jmp	0x100014de4
0000000100014de0	xorl	%ecx, %ecx
0000000100014de2	xorl	%eax, %eax
0000000100014de4	movq	%rcx, -0xe0(%rbp)
0000000100014deb	movq	%rcx, -0xc0(%rbp)
0000000100014df2	movq	%rax, -0xa0(%rbp)
0000000100014df9	leaq	-0x140(%rbp), %rdi
0000000100014e00	leaq	-0xe0(%rbp), %rsi
0000000100014e07	callq	__ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h398177d02bce51b1E ## alloc::collections::btree::map::IntoIter$LT$K$C$V$C$A$GT$::dying_next::h398177d02bce51b1
0000000100014e0c	movq	-0x140(%rbp), %rax
0000000100014e13	testq	%rax, %rax
0000000100014e16	je	0x100014e76
0000000100014e18	leaq	-0x140(%rbp), %rbx
0000000100014e1f	leaq	-0xe0(%rbp), %r14
0000000100014e26	jmp	0x100014e47
0000000100014e28	nopl	(%rax,%rax)
0000000100014e30	movq	%rbx, %rdi
0000000100014e33	movq	%r14, %rsi
0000000100014e36	callq	__ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h398177d02bce51b1E ## alloc::collections::btree::map::IntoIter$LT$K$C$V$C$A$GT$::dying_next::h398177d02bce51b1
0000000100014e3b	movq	-0x140(%rbp), %rax
0000000100014e42	testq	%rax, %rax
0000000100014e45	je	0x100014e76
0000000100014e47	imulq	$0x70, -0x130(%rbp), %rcx
0000000100014e4f	cmpq	$0x0, (%rax,%rcx)
0000000100014e54	je	0x100014e30
0000000100014e56	addq	%rcx, %rax
0000000100014e59	movq	0x10(%rax), %rsi
0000000100014e5d	testq	%rsi, %rsi
0000000100014e60	je	0x100014e30
0000000100014e62	movq	0x8(%rax), %rdi
0000000100014e66	shlq	$0x4, %rsi
0000000100014e6a	movl	$0x8, %edx
0000000100014e6f	callq	___rust_dealloc
0000000100014e74	jmp	0x100014e30
0000000100014e76	addq	$0x288, %rsp                    ## imm = 0x288
0000000100014e7d	popq	%rbx
0000000100014e7e	popq	%r12
0000000100014e80	popq	%r13
0000000100014e82	popq	%r14
0000000100014e84	popq	%r15
0000000100014e86	popq	%rbp
0000000100014e87	retq
0000000100014e88	movl	$0x6, %edx
0000000100014e8d	xorl	%eax, %eax
0000000100014e8f	xorl	%ebx, %ebx
0000000100014e91	xorl	%r15d, %r15d
0000000100014e94	movq	-0x38(%rbp), %r12
0000000100014e98	jmp	0x100014c0a
0000000100014e9d	leaq	0x2(%r12,%rax), %r12
0000000100014ea2	jmp	0x100014beb
0000000100014ea7	leaq	0x3(%r12,%rax), %r12
0000000100014eac	jmp	0x100014beb
0000000100014eb1	movl	$0xd, %edx
0000000100014eb6	movabsq	$-0x100000000, %r14             ## imm = 0xFFFFFFFF00000000
0000000100014ec0	movq	%r9, %r12
0000000100014ec3	jmp	0x100014c14
0000000100014ec8	movabsq	$-0x100000000, %r14             ## imm = 0xFFFFFFFF00000000
0000000100014ed2	movq	%rdx, %r12
0000000100014ed5	jmp	0x100014c58
0000000100014eda	movq	%rbx, %r15
0000000100014edd	andq	$-0x100, %r15
0000000100014ee4	movq	%rbx, %rcx
0000000100014ee7	andq	$-0x10000, %rcx                 ## imm = 0xFFFF0000
0000000100014eee	movabsq	$-0x100000000, %r14             ## imm = 0xFFFFFFFF00000000
0000000100014ef8	andq	%rbx, %r14
0000000100014efb	movq	%rdx, %r12
0000000100014efe	jmp	0x100014d05
0000000100014f03	movq	-0x40(%rbp), %rax
0000000100014f07	movb	$0xe, 0x8(%rax)
0000000100014f0b	jmp	0x100014d2d
0000000100014f10	movl	$0x6, %edx
0000000100014f15	xorl	%eax, %eax
0000000100014f17	xorl	%ebx, %ebx
0000000100014f19	xorl	%r15d, %r15d
0000000100014f1c	jmp	0x100014eb6
0000000100014f1e	movq	%rax, %rbx
0000000100014f21	jmp	0x100014f32
0000000100014f23	movq	%rax, %rbx
0000000100014f26	leaq	-0xe0(%rbp), %rdi
0000000100014f2d	callq	__ZN4core3ptr52drop_in_place$LT$gimli..read..abbrev..Attributes$GT$17hf058af016265b4d8E ## core::ptr::drop_in_place$LT$gimli..read..abbrev..Attributes$GT$::hf058af016265b4d8
0000000100014f32	leaq	-0x70(%rbp), %rdi
0000000100014f36	callq	__ZN4core3ptr55drop_in_place$LT$gimli..read..abbrev..Abbreviations$GT$17h514df26e731d6726E ## core::ptr::drop_in_place$LT$gimli..read..abbrev..Abbreviations$GT$::h514df26e731d6726
0000000100014f3b	movq	%rbx, %rdi
0000000100014f3e	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100014f43	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100014f48	nopl	(%rax,%rax)
__ZN5gimli4read6reader6Reader11read_offset17hca393a35f8c2cc9fE:
0000000100014f50	pushq	%rbp
0000000100014f51	movq	%rsp, %rbp
0000000100014f54	cmpb	$0x8, %dl
0000000100014f57	jne	0x100014f7a
0000000100014f59	movq	(%rsi), %rax
0000000100014f5c	movq	0x8(%rsi), %rcx
0000000100014f60	cmpq	$0x7, %rcx
0000000100014f64	jbe	0x100014fb8
0000000100014f66	addq	$-0x8, %rcx
0000000100014f6a	leaq	0x8(%rax), %rdx
0000000100014f6e	movq	%rdx, (%rsi)
0000000100014f71	movq	%rcx, 0x8(%rsi)
0000000100014f75	movq	(%rax), %rax
0000000100014f78	jmp	0x100014fae
0000000100014f7a	movq	(%rsi), %rax
0000000100014f7d	movq	0x8(%rsi), %rcx
0000000100014f81	cmpq	$0x4, %rcx
0000000100014f85	jb	0x100014ff3
0000000100014f87	addq	$-0x4, %rcx
0000000100014f8b	leaq	0x4(%rax), %rdx
0000000100014f8f	movq	%rdx, (%rsi)
0000000100014f92	movq	%rcx, 0x8(%rsi)
0000000100014f96	movzwl	0x1(%rax), %ecx
0000000100014f9a	movzbl	(%rax), %edx
0000000100014f9d	movzbl	0x3(%rax), %eax
0000000100014fa1	movb	%dl, -0xd(%rbp)
0000000100014fa4	movb	%al, -0xa(%rbp)
0000000100014fa7	movw	%cx, -0xc(%rbp)
0000000100014fab	movl	-0xd(%rbp), %eax
0000000100014fae	movq	%rax, 0x8(%rdi)
0000000100014fb2	movb	$0x4b, %al
0000000100014fb4	movb	%al, (%rdi)
0000000100014fb6	popq	%rbp
0000000100014fb7	retq
0000000100014fb8	movb	$0x0, -0xa(%rbp)
0000000100014fbc	movw	$0x0, -0xc(%rbp)
0000000100014fc2	movl	$0x0, -0x10(%rbp)
0000000100014fc9	movq	%rax, -0x9(%rbp)
0000000100014fcd	movq	-0x10(%rbp), %rax
0000000100014fd1	movl	-0x8(%rbp), %ecx
0000000100014fd4	movl	-0x5(%rbp), %edx
0000000100014fd7	movl	%ecx, -0x18(%rbp)
0000000100014fda	movl	%edx, -0x15(%rbp)
0000000100014fdd	movq	%rax, 0x1(%rdi)
0000000100014fe1	movl	-0x18(%rbp), %eax
0000000100014fe4	movl	-0x15(%rbp), %ecx
0000000100014fe7	movl	%eax, 0x9(%rdi)
0000000100014fea	movl	%ecx, 0xc(%rdi)
0000000100014fed	movb	$0x13, %al
0000000100014fef	movb	%al, (%rdi)
0000000100014ff1	popq	%rbp
0000000100014ff2	retq
0000000100014ff3	movl	$0x0, -0x10(%rbp)
0000000100014ffa	movb	$0x0, -0xa(%rbp)
0000000100014ffe	movw	$0x0, -0xc(%rbp)
0000000100015004	movl	-0xd(%rbp), %ecx
0000000100015007	movl	%ecx, 0x4(%rdi)
000000010001500a	movl	$0x0, 0x1(%rdi)
0000000100015011	movq	%rax, 0x8(%rdi)
0000000100015015	movb	$0x13, %al
0000000100015017	movb	%al, (%rdi)
0000000100015019	popq	%rbp
000000010001501a	retq
000000010001501b	nopl	(%rax,%rax)
__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E:
0000000100015020	pushq	%rbp
0000000100015021	movq	%rsp, %rbp
0000000100015024	movzbl	%dl, %eax
0000000100015027	decl	%eax
0000000100015029	cmpl	$0x7, %eax
000000010001502c	ja	0x10001508d
000000010001502e	leaq	0x14f(%rip), %rcx
0000000100015035	movslq	(%rcx,%rax,4), %rax
0000000100015039	addq	%rcx, %rax
000000010001503c	jmpq	*%rax
000000010001503e	movq	(%rsi), %rax
0000000100015041	movq	0x8(%rsi), %rcx
0000000100015045	testq	%rcx, %rcx
0000000100015048	je	0x10001516a
000000010001504e	decq	%rcx
0000000100015051	leaq	0x1(%rax), %rdx
0000000100015055	movq	%rdx, (%rsi)
0000000100015058	movq	%rcx, 0x8(%rsi)
000000010001505c	movzbl	(%rax), %eax
000000010001505f	movq	%rax, 0x8(%rdi)
0000000100015063	movb	$0x4b, (%rdi)
0000000100015066	popq	%rbp
0000000100015067	retq
0000000100015068	movq	(%rsi), %rax
000000010001506b	movq	0x8(%rsi), %rcx
000000010001506f	cmpq	$0x2, %rcx
0000000100015073	jb	0x1000150f4
0000000100015075	addq	$-0x2, %rcx
0000000100015079	leaq	0x2(%rax), %rdx
000000010001507d	movq	%rdx, (%rsi)
0000000100015080	movq	%rcx, 0x8(%rsi)
0000000100015084	movzwl	(%rax), %eax
0000000100015087	movw	%ax, -0xf(%rbp)
000000010001508b	jmp	0x1000150ea
000000010001508d	movb	$0x17, (%rdi)
0000000100015090	movb	%dl, 0x1(%rdi)
0000000100015093	popq	%rbp
0000000100015094	retq
0000000100015095	movq	(%rsi), %rax
0000000100015098	movq	0x8(%rsi), %rcx
000000010001509c	cmpq	$0x4, %rcx
00000001000150a0	jb	0x100015113
00000001000150a2	addq	$-0x4, %rcx
00000001000150a6	leaq	0x4(%rax), %rdx
00000001000150aa	movq	%rdx, (%rsi)
00000001000150ad	movq	%rcx, 0x8(%rsi)
00000001000150b1	movzwl	0x1(%rax), %ecx
00000001000150b5	movzbl	(%rax), %edx
00000001000150b8	movzbl	0x3(%rax), %eax
00000001000150bc	movb	%dl, -0xd(%rbp)
00000001000150bf	movb	%al, -0xa(%rbp)
00000001000150c2	movw	%cx, -0xc(%rbp)
00000001000150c6	movl	-0xd(%rbp), %eax
00000001000150c9	jmp	0x1000150ea
00000001000150cb	movq	(%rsi), %rax
00000001000150ce	movq	0x8(%rsi), %rcx
00000001000150d2	cmpq	$0x8, %rcx
00000001000150d6	jb	0x10001513b
00000001000150d8	addq	$-0x8, %rcx
00000001000150dc	leaq	0x8(%rax), %rdx
00000001000150e0	movq	%rdx, (%rsi)
00000001000150e3	movq	%rcx, 0x8(%rsi)
00000001000150e7	movq	(%rax), %rax
00000001000150ea	movq	%rax, 0x8(%rdi)
00000001000150ee	movb	$0x4b, %al
00000001000150f0	movb	%al, (%rdi)
00000001000150f2	popq	%rbp
00000001000150f3	retq
00000001000150f4	movw	$0x0, -0x10(%rbp)
00000001000150fa	movb	$0x0, -0xa(%rbp)
00000001000150fe	movl	$0x0, -0xe(%rbp)
0000000100015105	movl	-0xd(%rbp), %ecx
0000000100015108	movl	%ecx, 0x4(%rdi)
000000010001510b	movl	-0x10(%rbp), %ecx
000000010001510e	movl	%ecx, 0x1(%rdi)
0000000100015111	jmp	0x100015131
0000000100015113	movl	$0x0, -0x10(%rbp)
000000010001511a	movb	$0x0, -0xa(%rbp)
000000010001511e	movw	$0x0, -0xc(%rbp)
0000000100015124	movl	-0xd(%rbp), %ecx
0000000100015127	movl	%ecx, 0x4(%rdi)
000000010001512a	movl	$0x0, 0x1(%rdi)
0000000100015131	movq	%rax, 0x8(%rdi)
0000000100015135	movb	$0x13, %al
0000000100015137	movb	%al, (%rdi)
0000000100015139	popq	%rbp
000000010001513a	retq
000000010001513b	movb	$0x0, -0xa(%rbp)
000000010001513f	movw	$0x0, -0xc(%rbp)
0000000100015145	movl	$0x0, -0x10(%rbp)
000000010001514c	movq	%rax, -0x9(%rbp)
0000000100015150	movq	-0x10(%rbp), %rax
0000000100015154	movl	-0x8(%rbp), %ecx
0000000100015157	movl	-0x5(%rbp), %edx
000000010001515a	movl	%ecx, 0x9(%rdi)
000000010001515d	movl	%edx, 0xc(%rdi)
0000000100015160	movq	%rax, 0x1(%rdi)
0000000100015164	movb	$0x13, %al
0000000100015166	movb	%al, (%rdi)
0000000100015168	popq	%rbp
0000000100015169	retq
000000010001516a	movw	$0x13, (%rdi)
000000010001516f	movw	$0x0, 0x6(%rdi)
0000000100015175	movl	$0x0, 0x2(%rdi)
000000010001517c	movq	%rax, 0x8(%rdi)
0000000100015180	popq	%rbp
0000000100015181	retq
0000000100015182	nop
0000000100015184	movl	$0xe4fffffe, %edx               ## imm = 0xE4FFFFFE
0000000100015189	.byte 0xfe #bad opcode
000000010001518a	.byte 0xff #bad opcode
000000010001518b	decl	(%rcx)
000000010001518d	.byte 0xff #bad opcode
000000010001518e	.byte 0xff #bad opcode
000000010001518f	callq	*(%rcx)
0000000100015191	.byte 0xff #bad opcode
0000000100015192	.byte 0xff #bad opcode
0000000100015193	decl	(%rcx)
0000000100015195	.byte 0xff #bad opcode
0000000100015196	.byte 0xff #bad opcode
0000000100015197	decl	(%rcx)
0000000100015199	.byte 0xff #bad opcode
000000010001519a	.byte 0xff #bad opcode
000000010001519b	decl	(%rcx)
000000010001519d	.byte 0xff #bad opcode
000000010001519e	.byte 0xff #bad opcode
000000010001519f	incl	-0x1(%rdi)
00000001000151a2	.byte 0xff #bad opcode
00000001000151a3	jmpq	*0x2e(%rsi)
00000001000151a6	nopl	(%rax,%rax)
00000001000151ae	nop
__ZN5gimli4read6reader6Reader17read_sized_offset17hdb6215760dbc9cdaE:
00000001000151b0	pushq	%rbp
00000001000151b1	movq	%rsp, %rbp
00000001000151b4	movzbl	%dl, %eax
00000001000151b7	decl	%eax
00000001000151b9	cmpl	$0x7, %eax
00000001000151bc	ja	0x10001522f
00000001000151be	leaq	0x193(%rip), %rcx
00000001000151c5	movslq	(%rcx,%rax,4), %rax
00000001000151c9	addq	%rcx, %rax
00000001000151cc	jmpq	*%rax
00000001000151ce	movq	(%rsi), %rax
00000001000151d1	movq	0x8(%rsi), %rcx
00000001000151d5	testq	%rcx, %rcx
00000001000151d8	je	0x10001532a
00000001000151de	decq	%rcx
00000001000151e1	leaq	0x1(%rax), %rdx
00000001000151e5	movq	%rdx, (%rsi)
00000001000151e8	movq	%rcx, 0x8(%rsi)
00000001000151ec	movzbl	(%rax), %eax
00000001000151ef	jmp	0x1000152f5
00000001000151f4	movq	(%rsi), %rax
00000001000151f7	movq	0x8(%rsi), %rcx
00000001000151fb	cmpq	$0x2, %rcx
00000001000151ff	jb	0x1000152a2
0000000100015205	addq	$-0x2, %rcx
0000000100015209	leaq	0x2(%rax), %rdx
000000010001520d	movq	%rdx, (%rsi)
0000000100015210	movq	%rcx, 0x8(%rsi)
0000000100015214	movzwl	(%rax), %eax
0000000100015217	movw	%ax, -0xf(%rbp)
000000010001521b	movb	$0x4b, %cl
000000010001521d	movq	%rax, -0x19(%rbp)
0000000100015221	cmpb	$0x4b, %cl
0000000100015224	je	0x1000152f5
000000010001522a	jmp	0x100015341
000000010001522f	movb	%dl, -0x20(%rbp)
0000000100015232	movb	$0x18, %cl
0000000100015234	jmp	0x100015341
0000000100015239	movq	(%rsi), %rax
000000010001523c	movq	0x8(%rsi), %rcx
0000000100015240	cmpq	$0x4, %rcx
0000000100015244	jb	0x1000152cc
000000010001524a	addq	$-0x4, %rcx
000000010001524e	leaq	0x4(%rax), %rdx
0000000100015252	movq	%rdx, (%rsi)
0000000100015255	movq	%rcx, 0x8(%rsi)
0000000100015259	movzwl	0x1(%rax), %ecx
000000010001525d	movzbl	(%rax), %edx
0000000100015260	movzbl	0x3(%rax), %eax
0000000100015264	movb	%dl, -0xd(%rbp)
0000000100015267	movb	%al, -0xa(%rbp)
000000010001526a	movw	%cx, -0xc(%rbp)
000000010001526e	movl	-0xd(%rbp), %eax
0000000100015271	movb	$0x4b, %cl
0000000100015273	movq	%rax, -0x19(%rbp)
0000000100015277	cmpb	$0x4b, %cl
000000010001527a	je	0x1000152f5
000000010001527c	jmp	0x100015341
0000000100015281	movq	(%rsi), %rax
0000000100015284	movq	0x8(%rsi), %rcx
0000000100015288	cmpq	$0x8, %rcx
000000010001528c	jb	0x1000152ff
000000010001528e	addq	$-0x8, %rcx
0000000100015292	leaq	0x8(%rax), %rdx
0000000100015296	movq	%rdx, (%rsi)
0000000100015299	movq	%rcx, 0x8(%rsi)
000000010001529d	movq	(%rax), %rax
00000001000152a0	jmp	0x1000152f5
00000001000152a2	movw	$0x0, -0x10(%rbp)
00000001000152a8	movl	$0x0, -0xe(%rbp)
00000001000152af	movb	$0x0, -0xa(%rbp)
00000001000152b3	movl	-0x10(%rbp), %ecx
00000001000152b6	movl	%ecx, -0x20(%rbp)
00000001000152b9	movl	-0xd(%rbp), %ecx
00000001000152bc	movl	%ecx, -0x1d(%rbp)
00000001000152bf	movb	$0x13, %cl
00000001000152c1	movq	%rax, -0x19(%rbp)
00000001000152c5	cmpb	$0x4b, %cl
00000001000152c8	jne	0x100015341
00000001000152ca	jmp	0x1000152f5
00000001000152cc	movl	$0x0, -0x10(%rbp)
00000001000152d3	movb	$0x0, -0xa(%rbp)
00000001000152d7	movw	$0x0, -0xc(%rbp)
00000001000152dd	movl	-0xd(%rbp), %ecx
00000001000152e0	movl	%ecx, -0x1d(%rbp)
00000001000152e3	movl	$0x0, -0x20(%rbp)
00000001000152ea	movb	$0x13, %cl
00000001000152ec	movq	%rax, -0x19(%rbp)
00000001000152f0	cmpb	$0x4b, %cl
00000001000152f3	jne	0x100015341
00000001000152f5	movq	%rax, 0x8(%rdi)
00000001000152f9	movb	$0x4b, %cl
00000001000152fb	movb	%cl, (%rdi)
00000001000152fd	popq	%rbp
00000001000152fe	retq
00000001000152ff	movb	$0x0, -0xa(%rbp)
0000000100015303	movw	$0x0, -0xc(%rbp)
0000000100015309	movl	$0x0, -0x10(%rbp)
0000000100015310	movq	%rax, -0x9(%rbp)
0000000100015314	movq	-0x10(%rbp), %rax
0000000100015318	movl	-0x8(%rbp), %ecx
000000010001531b	movl	-0x5(%rbp), %edx
000000010001531e	movl	%ecx, -0x18(%rbp)
0000000100015321	movl	%edx, -0x15(%rbp)
0000000100015324	movq	%rax, -0x20(%rbp)
0000000100015328	jmp	0x10001533f
000000010001532a	movb	$0x0, -0x20(%rbp)
000000010001532e	movw	$0x0, -0x1b(%rbp)
0000000100015334	movl	$0x0, -0x1f(%rbp)
000000010001533b	movq	%rax, -0x19(%rbp)
000000010001533f	movb	$0x13, %cl
0000000100015341	movq	-0x20(%rbp), %rax
0000000100015345	movq	-0x19(%rbp), %rdx
0000000100015349	movq	%rdx, 0x8(%rdi)
000000010001534d	movq	%rax, 0x1(%rdi)
0000000100015351	movb	%cl, (%rdi)
0000000100015353	popq	%rbp
0000000100015354	retq
0000000100015355	nopl	(%rax)
0000000100015358	jbe	0x100015358
000000010001535a	.byte 0xff #bad opcode
000000010001535b	lcalll	*-0x1280001(%rsi,%rdi,8)
0000000100015362	.byte 0xff #bad opcode
0000000100015363	jmpq	*%rcx
0000000100015365	.byte 0xfe #bad opcode
0000000100015366	.byte 0xff #bad opcode
0000000100015367	callq	*%rdi
0000000100015369	.byte 0xfe #bad opcode
000000010001536a	.byte 0xff #bad opcode
000000010001536b	callq	*%rdi
000000010001536d	.byte 0xfe #bad opcode
000000010001536e	.byte 0xff #bad opcode
000000010001536f	callq	*%rdi
0000000100015371	.byte 0xfe #bad opcode
0000000100015372	.byte 0xff #bad opcode
0000000100015373	ljmpl	*(%rcx)
0000000100015375	.byte 0xff #bad opcode
0000000100015376	.byte 0xff #bad opcode
0000000100015377	decl	(%rdi)
0000000100015379	.byte 0x1f #bad opcode
000000010001537a	testb	%al, (%rax)
000000010001537c	addb	%al, (%rax)
000000010001537e	addb	%al, (%rax)
__ZN5gimli4read7Section4load17h035a6749ffecbdd3E:
0000000100015380	pushq	%rbp
0000000100015381	movq	%rsp, %rbp
0000000100015384	pushq	%r14
0000000100015386	pushq	%rbx
0000000100015387	movq	%rsi, %r14
000000010001538a	movq	%rdi, %rbx
000000010001538d	movl	$0xa, %edi
0000000100015392	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
0000000100015397	testq	%rax, %rax
000000010001539a	je	0x1000153a9
000000010001539c	movq	%r14, %rdi
000000010001539f	movq	%rax, %rsi
00000001000153a2	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000153a7	jmp	0x1000153ab
00000001000153a9	xorl	%eax, %eax
00000001000153ab	testq	%rax, %rax
00000001000153ae	cmoveq	%rax, %rdx
00000001000153b2	leaq	0x2e937(%rip), %rcx
00000001000153b9	cmovneq	%rax, %rcx
00000001000153bd	movq	%rcx, 0x8(%rbx)
00000001000153c1	movq	%rdx, 0x10(%rbx)
00000001000153c5	movq	$0x0, (%rbx)
00000001000153cc	popq	%rbx
00000001000153cd	popq	%r14
00000001000153cf	popq	%rbp
00000001000153d0	retq
00000001000153d1	nopw	%cs:(%rax,%rax)
00000001000153db	nopl	(%rax,%rax)
__ZN5gimli4read7Section4load17h1b60791a73e0f5e9E:
00000001000153e0	pushq	%rbp
00000001000153e1	movq	%rsp, %rbp
00000001000153e4	pushq	%r14
00000001000153e6	pushq	%rbx
00000001000153e7	movq	%rsi, %r14
00000001000153ea	movq	%rdi, %rbx
00000001000153ed	movl	$0x15, %edi
00000001000153f2	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
00000001000153f7	testq	%rax, %rax
00000001000153fa	je	0x100015409
00000001000153fc	movq	%r14, %rdi
00000001000153ff	movq	%rax, %rsi
0000000100015402	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100015407	jmp	0x10001540b
0000000100015409	xorl	%eax, %eax
000000010001540b	testq	%rax, %rax
000000010001540e	cmoveq	%rax, %rdx
0000000100015412	leaq	0x2e8d7(%rip), %rcx
0000000100015419	cmovneq	%rax, %rcx
000000010001541d	movq	%rcx, 0x8(%rbx)
0000000100015421	movq	%rdx, 0x10(%rbx)
0000000100015425	movq	$0x0, (%rbx)
000000010001542c	popq	%rbx
000000010001542d	popq	%r14
000000010001542f	popq	%rbp
0000000100015430	retq
0000000100015431	nopw	%cs:(%rax,%rax)
000000010001543b	nopl	(%rax,%rax)
__ZN5gimli4read7Section4load17h7af1acbef8ba0d17E:
0000000100015440	pushq	%rbp
0000000100015441	movq	%rsp, %rbp
0000000100015444	pushq	%r14
0000000100015446	pushq	%rbx
0000000100015447	movq	%rsi, %r14
000000010001544a	movq	%rdi, %rbx
000000010001544d	movl	$0x11, %edi
0000000100015452	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
0000000100015457	testq	%rax, %rax
000000010001545a	je	0x100015469
000000010001545c	movq	%r14, %rdi
000000010001545f	movq	%rax, %rsi
0000000100015462	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100015467	jmp	0x10001546b
0000000100015469	xorl	%eax, %eax
000000010001546b	testq	%rax, %rax
000000010001546e	cmoveq	%rax, %rdx
0000000100015472	leaq	0x2e877(%rip), %rcx
0000000100015479	cmovneq	%rax, %rcx
000000010001547d	movq	%rcx, 0x8(%rbx)
0000000100015481	movq	%rdx, 0x10(%rbx)
0000000100015485	movq	$0x0, (%rbx)
000000010001548c	popq	%rbx
000000010001548d	popq	%r14
000000010001548f	popq	%rbp
0000000100015490	retq
0000000100015491	nopw	%cs:(%rax,%rax)
000000010001549b	nopl	(%rax,%rax)
__ZN5gimli4read7Section4load17haef137c715b4f12eE:
00000001000154a0	pushq	%rbp
00000001000154a1	movq	%rsp, %rbp
00000001000154a4	pushq	%r14
00000001000154a6	pushq	%rbx
00000001000154a7	movq	%rsi, %r14
00000001000154aa	movq	%rdi, %rbx
00000001000154ad	movl	$0x13, %edi
00000001000154b2	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
00000001000154b7	testq	%rax, %rax
00000001000154ba	je	0x1000154c9
00000001000154bc	movq	%r14, %rdi
00000001000154bf	movq	%rax, %rsi
00000001000154c2	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000154c7	jmp	0x1000154cb
00000001000154c9	xorl	%eax, %eax
00000001000154cb	testq	%rax, %rax
00000001000154ce	cmoveq	%rax, %rdx
00000001000154d2	leaq	0x2e817(%rip), %rcx
00000001000154d9	cmovneq	%rax, %rcx
00000001000154dd	movq	%rcx, 0x8(%rbx)
00000001000154e1	movq	%rdx, 0x10(%rbx)
00000001000154e5	movq	$0x0, (%rbx)
00000001000154ec	popq	%rbx
00000001000154ed	popq	%r14
00000001000154ef	popq	%rbp
00000001000154f0	retq
00000001000154f1	nopw	%cs:(%rax,%rax)
00000001000154fb	nopl	(%rax,%rax)
__ZN5gimli4read7Section4load17he63caa25b00c9728E:
0000000100015500	pushq	%rbp
0000000100015501	movq	%rsp, %rbp
0000000100015504	pushq	%r14
0000000100015506	pushq	%rbx
0000000100015507	movq	%rsi, %r14
000000010001550a	movq	%rdi, %rbx
000000010001550d	movl	$0xb, %edi
0000000100015512	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
0000000100015517	testq	%rax, %rax
000000010001551a	je	0x100015529
000000010001551c	movq	%r14, %rdi
000000010001551f	movq	%rax, %rsi
0000000100015522	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100015527	jmp	0x10001552b
0000000100015529	xorl	%eax, %eax
000000010001552b	testq	%rax, %rax
000000010001552e	cmoveq	%rax, %rdx
0000000100015532	leaq	0x2e7b7(%rip), %rcx
0000000100015539	cmovneq	%rax, %rcx
000000010001553d	movq	%rcx, 0x8(%rbx)
0000000100015541	movq	%rdx, 0x10(%rbx)
0000000100015545	movq	$0x0, (%rbx)
000000010001554c	popq	%rbx
000000010001554d	popq	%r14
000000010001554f	popq	%rbp
0000000100015550	retq
0000000100015551	nopw	%cs:(%rax,%rax)
000000010001555b	nopl	(%rax,%rax)
__ZN5gimli4read7Section4load17hed3fd51420ccf80eE:
0000000100015560	pushq	%rbp
0000000100015561	movq	%rsp, %rbp
0000000100015564	pushq	%rbx
0000000100015565	pushq	%rax
0000000100015566	movq	%rdi, %rbx
0000000100015569	movl	$0x9, %edi
000000010001556e	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100015573	movq	%rbx, %rdi
0000000100015576	movq	%rax, %rsi
0000000100015579	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010001557e	testq	%rax, %rax
0000000100015581	leaq	0x2e768(%rip), %rcx
0000000100015588	cmovneq	%rax, %rcx
000000010001558c	cmoveq	%rax, %rdx
0000000100015590	movq	%rcx, %rax
0000000100015593	addq	$0x8, %rsp
0000000100015597	popq	%rbx
0000000100015598	popq	%rbp
0000000100015599	retq
000000010001559a	nopw	(%rax,%rax)
__ZN5gimli4read7Section4load17hf39c65c3be3c841cE:
00000001000155a0	pushq	%rbp
00000001000155a1	movq	%rsp, %rbp
00000001000155a4	pushq	%r14
00000001000155a6	pushq	%rbx
00000001000155a7	movq	%rsi, %r14
00000001000155aa	movq	%rdi, %rbx
00000001000155ad	movl	$0x12, %edi
00000001000155b2	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
00000001000155b7	testq	%rax, %rax
00000001000155ba	je	0x1000155c9
00000001000155bc	movq	%r14, %rdi
00000001000155bf	movq	%rax, %rsi
00000001000155c2	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000155c7	jmp	0x1000155cb
00000001000155c9	xorl	%eax, %eax
00000001000155cb	testq	%rax, %rax
00000001000155ce	cmoveq	%rax, %rdx
00000001000155d2	leaq	0x2e717(%rip), %rcx
00000001000155d9	cmovneq	%rax, %rcx
00000001000155dd	movq	%rcx, 0x8(%rbx)
00000001000155e1	movq	%rdx, 0x10(%rbx)
00000001000155e5	movq	$0x0, (%rbx)
00000001000155ec	popq	%rbx
00000001000155ed	popq	%r14
00000001000155ef	popq	%rbp
00000001000155f0	retq
00000001000155f1	nopw	%cs:(%rax,%rax)
00000001000155fb	nopl	(%rax,%rax)
__ZN5gimli4read7aranges30ArangeHeader$LT$R$C$Offset$GT$5parse17h6fb9a4ac9468d866E:
0000000100015600	pushq	%rbp
0000000100015601	movq	%rsp, %rbp
0000000100015604	pushq	%r15
0000000100015606	pushq	%r14
0000000100015608	pushq	%rbx
0000000100015609	movq	(%rsi), %rcx
000000010001560c	movq	0x8(%rsi), %r10
0000000100015610	cmpq	$0x4, %r10
0000000100015614	jb	0x100015638
0000000100015616	leaq	-0x4(%r10), %r9
000000010001561a	leaq	0x4(%rcx), %r11
000000010001561e	movq	%r11, (%rsi)
0000000100015621	movq	%r9, 0x8(%rsi)
0000000100015625	movl	(%rcx), %eax
0000000100015627	cmpl	$-0x11, %eax
000000010001562a	jbe	0x10001566c
000000010001562c	cmpl	$-0x1, %eax
000000010001562f	je	0x100015683
0000000100015631	movl	$0x10, %eax
0000000100015636	jmp	0x100015644
0000000100015638	movq	%rcx, %r11
000000010001563b	shrq	$0x8, %r11
000000010001563f	movl	$0x13, %eax
0000000100015644	movq	%rax, (%rdi)
0000000100015647	movb	%cl, 0x8(%rdi)
000000010001564a	movl	%r11d, 0x9(%rdi)
000000010001564e	movq	%r11, %rax
0000000100015651	shrq	$0x30, %rax
0000000100015655	movb	%al, 0xf(%rdi)
0000000100015658	shrq	$0x20, %r11
000000010001565c	movw	%r11w, 0xd(%rdi)
0000000100015661	movb	$0x3, 0x29(%rdi)
0000000100015665	popq	%rbx
0000000100015666	popq	%r14
0000000100015668	popq	%r15
000000010001566a	popq	%rbp
000000010001566b	retq
000000010001566c	movl	%eax, %r8d
000000010001566f	movb	$0x4, %cl
0000000100015671	subq	%r8, %r9
0000000100015674	jae	0x1000156a6
0000000100015676	movq	$0x13, (%rdi)
000000010001567d	movq	%r11, 0x8(%rdi)
0000000100015681	jmp	0x100015661
0000000100015683	cmpq	$0x8, %r9
0000000100015687	jb	0x1000156e9
0000000100015689	addq	$-0xc, %r10
000000010001568d	leaq	0xc(%rcx), %r11
0000000100015691	movq	%r11, (%rsi)
0000000100015694	movq	%r10, 0x8(%rsi)
0000000100015698	movq	0x4(%rcx), %r8
000000010001569c	movb	$0x8, %cl
000000010001569e	movq	%r10, %r9
00000001000156a1	subq	%r8, %r9
00000001000156a4	jb	0x100015676
00000001000156a6	leaq	(%r11,%r8), %r10
00000001000156aa	movq	%r10, (%rsi)
00000001000156ad	movq	%r9, 0x8(%rsi)
00000001000156b1	cmpq	$0x1, %r8
00000001000156b5	jbe	0x1000156cf
00000001000156b7	movzwl	(%r11), %esi
00000001000156bb	leal	-0x4(%rsi), %r9d
00000001000156bf	cmpw	$-0x2, %r9w
00000001000156c4	jae	0x10001571a
00000001000156c6	movb	$0x11, (%rdi)
00000001000156c9	movq	%rsi, 0x8(%rdi)
00000001000156cd	jmp	0x100015661
00000001000156cf	movb	$0x13, (%rdi)
00000001000156d2	movl	$0x0, 0x1(%rdi)
00000001000156d9	movl	$0x0, 0x4(%rdi)
00000001000156e0	movq	%r11, 0x8(%rdi)
00000001000156e4	jmp	0x100015661
00000001000156e9	movb	$0x0, -0x22(%rbp)
00000001000156ed	movw	$0x0, -0x24(%rbp)
00000001000156f3	movl	$0x0, -0x28(%rbp)
00000001000156fa	movq	%r11, -0x21(%rbp)
00000001000156fe	movq	-0x28(%rbp), %rcx
0000000100015702	shrq	$0x8, %r11
0000000100015706	movq	%rcx, %rax
0000000100015709	shlq	$0x8, %rax
000000010001570d	shrq	$0x38, %rcx
0000000100015711	orq	$0x13, %rax
0000000100015715	jmp	0x100015644
000000010001571a	leaq	-0x2(%r8), %r10
000000010001571e	leaq	0x2(%r11), %r9
0000000100015722	cmpl	$-0x10, %eax
0000000100015725	jb	0x100015747
0000000100015727	cmpq	$0x7, %r10
000000010001572b	jbe	0x10001577c
000000010001572d	leaq	-0xa(%r8), %r10
0000000100015731	movq	0x2(%r11), %r9
0000000100015735	addq	$0xa, %r11
0000000100015739	movq	%r9, -0x31(%rbp)
000000010001573d	movb	$0x4b, %bl
000000010001573f	movq	%r11, %r9
0000000100015742	jmp	0x1000157d1
0000000100015747	cmpq	$0x4, %r10
000000010001574b	jb	0x1000157ab
000000010001574d	leaq	-0x6(%r8), %r10
0000000100015751	leaq	0x6(%r11), %r9
0000000100015755	movzwl	0x3(%r11), %ebx
000000010001575a	movzbl	0x2(%r11), %r14d
000000010001575f	movzbl	0x5(%r11), %r11d
0000000100015764	movb	%r14b, -0x25(%rbp)
0000000100015768	movb	%r11b, -0x22(%rbp)
000000010001576c	movw	%bx, -0x24(%rbp)
0000000100015770	movl	-0x25(%rbp), %r11d
0000000100015774	movb	$0x4b, %bl
0000000100015776	movq	%r11, -0x31(%rbp)
000000010001577a	jmp	0x1000157d1
000000010001577c	movb	$0x0, -0x22(%rbp)
0000000100015780	movw	$0x0, -0x24(%rbp)
0000000100015786	movl	$0x0, -0x28(%rbp)
000000010001578d	movq	%r9, -0x21(%rbp)
0000000100015791	movq	-0x28(%rbp), %r11
0000000100015795	movl	-0x20(%rbp), %ebx
0000000100015798	movl	-0x1d(%rbp), %r14d
000000010001579c	movl	%ebx, -0x30(%rbp)
000000010001579f	movl	%r14d, -0x2d(%rbp)
00000001000157a3	movq	%r11, -0x38(%rbp)
00000001000157a7	movb	$0x13, %bl
00000001000157a9	jmp	0x1000157d1
00000001000157ab	movl	$0x0, -0x28(%rbp)
00000001000157b2	movb	$0x0, -0x22(%rbp)
00000001000157b6	movw	$0x0, -0x24(%rbp)
00000001000157bc	movl	-0x25(%rbp), %r11d
00000001000157c0	movl	%r11d, -0x35(%rbp)
00000001000157c4	movl	$0x0, -0x38(%rbp)
00000001000157cb	movb	$0x13, %bl
00000001000157cd	movq	%r9, -0x31(%rbp)
00000001000157d1	cmpb	$0x4b, %bl
00000001000157d4	jne	0x1000157ff
00000001000157d6	testq	%r10, %r10
00000001000157d9	je	0x1000157e4
00000001000157db	cmpq	$0x1, %r10
00000001000157df	jne	0x10001581a
00000001000157e1	incq	%r9
00000001000157e4	movw	$0x13, (%rdi)
00000001000157e9	movw	$0x0, 0x6(%rdi)
00000001000157ef	movl	$0x0, 0x2(%rdi)
00000001000157f6	movq	%r9, 0x8(%rdi)
00000001000157fa	jmp	0x100015661
00000001000157ff	movl	-0x38(%rbp), %eax
0000000100015802	movl	-0x35(%rbp), %ecx
0000000100015805	movl	%ecx, 0x4(%rdi)
0000000100015808	movl	%eax, 0x1(%rdi)
000000010001580b	movq	-0x31(%rbp), %rax
000000010001580f	movb	%bl, (%rdi)
0000000100015811	movq	%rax, 0x8(%rdi)
0000000100015815	jmp	0x100015661
000000010001581a	movzbl	(%r9), %r11d
000000010001581e	cmpl	$-0x10, %eax
0000000100015821	setae	%al
0000000100015824	testb	%r11b, %r11b
0000000100015827	js	0x10001586e
0000000100015829	movzbl	0x1(%r9), %ebx
000000010001582e	leal	(%r11,%r11), %r14d
0000000100015832	addb	%bl, %r14b
0000000100015835	jb	0x10001586e
0000000100015837	je	0x10001587a
0000000100015839	addq	$-0x2, %r10
000000010001583d	addq	$0x2, %r9
0000000100015841	shlb	$0x3, %al
0000000100015844	addb	%cl, %al
0000000100015846	addb	$0x8, %al
0000000100015848	movzbl	%al, %eax
000000010001584b	divb	%r14b
000000010001584e	movzbl	%ah, %eax
0000000100015851	subb	%al, %r14b
0000000100015854	xorl	%r15d, %r15d
0000000100015857	testb	%al, %al
0000000100015859	movzbl	%r14b, %eax
000000010001585d	cmovel	%r15d, %eax
0000000100015861	movzbl	%al, %eax
0000000100015864	subq	%rax, %r10
0000000100015867	jae	0x100015882
0000000100015869	movb	$0x13, (%rdi)
000000010001586c	jmp	0x1000157f6
000000010001586e	movb	$0x30, (%rdi)
0000000100015871	movb	%r14b, 0x1(%rdi)
0000000100015875	jmp	0x100015661
000000010001587a	movb	$0x30, (%rdi)
000000010001587d	jmp	0x100015661
0000000100015882	movq	-0x31(%rbp), %r14
0000000100015886	addq	%rax, %r9
0000000100015889	movq	%r9, (%rdi)
000000010001588c	movq	%r10, 0x8(%rdi)
0000000100015890	movq	%rdx, 0x10(%rdi)
0000000100015894	movq	%r8, 0x18(%rdi)
0000000100015898	movq	%r14, 0x20(%rdi)
000000010001589c	movb	%r11b, 0x28(%rdi)
00000001000158a0	movb	%cl, 0x29(%rdi)
00000001000158a3	movw	%si, 0x2a(%rdi)
00000001000158a7	movb	%bl, 0x2c(%rdi)
00000001000158aa	jmp	0x100015665
00000001000158af	nop
__ZN5gimli4read8rnglists20RngListIter$LT$R$GT$4next17hc7d810ddd7ca0bc1E:
00000001000158b0	pushq	%rbp
00000001000158b1	movq	%rsp, %rbp
00000001000158b4	pushq	%r15
00000001000158b6	pushq	%r14
00000001000158b8	pushq	%r13
00000001000158ba	pushq	%r12
00000001000158bc	pushq	%rbx
00000001000158bd	subq	$0x58, %rsp
00000001000158c1	movq	%rsi, %r14
00000001000158c4	movq	%rdi, %r12
00000001000158c7	movq	0x28(%rsi), %rsi
00000001000158cb	testq	%rsi, %rsi
00000001000158ce	je	0x100016396
00000001000158d4	leaq	0x20(%r14), %rbx
00000001000158d8	movq	%rbx, -0x68(%rbp)
00000001000158dc	movl	0x30(%r14), %r13d
00000001000158e0	cmpb	$0x0, 0x34(%r14)
00000001000158e5	je	0x100015990
00000001000158eb	movq	0x20(%r14), %rdi
00000001000158ef	leaq	-0x1(%rsi), %r9
00000001000158f3	leaq	0x1(%rdi), %r10
00000001000158f7	movq	%r10, 0x20(%r14)
00000001000158fb	movq	%r9, 0x28(%r14)
00000001000158ff	movzbl	(%rdi), %ecx
0000000100015902	cmpq	$0x7, %rcx
0000000100015906	ja	0x10001649d
000000010001590c	movl	%r13d, %r8d
000000010001590f	shrl	$0x10, %r8d
0000000100015913	leaq	0xd0a(%rip), %rax
000000010001591a	movslq	(%rax,%rcx,4), %rcx
000000010001591e	addq	%rax, %rcx
0000000100015921	jmpq	*%rcx
0000000100015923	testq	%r9, %r9
0000000100015926	je	0x1000162de
000000010001592c	movl	$0x2, %edx
0000000100015931	subq	%rsi, %rdx
0000000100015934	leaq	0x2(%rdi), %r9
0000000100015938	xorl	%r8d, %r8d
000000010001593b	xorl	%ecx, %ecx
000000010001593d	nopl	(%rax)
0000000100015940	movzbl	-0x1(%r9), %r10d
0000000100015945	cmpl	$0x3f, %ecx
0000000100015948	jne	0x100015954
000000010001594a	cmpb	$0x2, %r10b
000000010001594e	jae	0x1000162ea
0000000100015954	movzbl	%r10b, %r10d
0000000100015958	movl	%r10d, %r11d
000000010001595b	andl	$0x7f, %r11d
000000010001595f	shlq	%cl, %r11
0000000100015962	orq	%r11, %r8
0000000100015965	testb	%r10b, %r10b
0000000100015968	jns	0x100015c52
000000010001596e	addl	$0x7, %ecx
0000000100015971	incq	%rdx
0000000100015974	incq	%r9
0000000100015977	cmpq	$0x1, %rdx
000000010001597b	jne	0x100015940
000000010001597d	jmp	0x1000162cc
0000000100015982	nopw	%cs:(%rax,%rax)
000000010001598c	nopl	(%rax)
0000000100015990	movzbl	%r13b, %r13d
0000000100015994	leaq	-0x38(%rbp), %r15
0000000100015998	movq	%r15, %rdi
000000010001599b	movq	%rbx, %rsi
000000010001599e	movl	%r13d, %edx
00000001000159a1	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
00000001000159a6	movzbl	-0x38(%rbp), %edx
00000001000159aa	cmpb	$0x4b, %dl
00000001000159ad	jne	0x10001635c
00000001000159b3	movq	%rbx, %rsi
00000001000159b6	movq	-0x30(%rbp), %rbx
00000001000159ba	movq	%r15, %rdi
00000001000159bd	movl	%r13d, %edx
00000001000159c0	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
00000001000159c5	movzbl	-0x38(%rbp), %edx
00000001000159c9	cmpb	$0x4b, %dl
00000001000159cc	jne	0x10001635c
00000001000159d2	movq	-0x30(%rbp), %rdx
00000001000159d6	movq	%rdx, %rax
00000001000159d9	orq	%rbx, %rax
00000001000159dc	je	0x100016383
00000001000159e2	imull	$0x38, %r13d, %ecx
00000001000159e6	movq	$-0x1, %rsi
00000001000159ed	shrq	%cl, %rsi
00000001000159f0	imull	$0x38, 0x30(%r14), %ecx
00000001000159f5	movq	$-0x1, %rax
00000001000159fc	shrq	%cl, %rax
00000001000159ff	cmpw	$0x5, 0x32(%r14)
0000000100015a05	movq	%rax, %rdi
0000000100015a08	sbbq	$0x0, %rdi
0000000100015a0c	cmpq	%rsi, %rbx
0000000100015a0f	je	0x100015b53
0000000100015a15	movq	-0x70(%rbp), %r11
0000000100015a19	movq	0x10(%r14), %rcx
0000000100015a1d	cmpq	%rdi, %rcx
0000000100015a20	jne	0x100015fd5
0000000100015a26	movq	%r11, -0x70(%rbp)
0000000100015a2a	jmp	0x100015ff6
0000000100015a2f	testq	%r9, %r9
0000000100015a32	je	0x1000162de
0000000100015a38	xorl	%r11d, %r11d
0000000100015a3b	xorl	%r10d, %r10d
0000000100015a3e	xorl	%ecx, %ecx
0000000100015a40	movzbl	0x1(%rdi,%r11), %ebx
0000000100015a46	movb	$0x6, %dl
0000000100015a48	cmpl	$0x3f, %ecx
0000000100015a4b	jne	0x100015a56
0000000100015a4d	cmpb	$0x2, %bl
0000000100015a50	jae	0x1000162e6
0000000100015a56	movzbl	%bl, %ebx
0000000100015a59	movl	%ebx, %r15d
0000000100015a5c	andl	$0x7f, %r15d
0000000100015a60	shlq	%cl, %r15
0000000100015a63	orq	%r15, %r10
0000000100015a66	testb	%bl, %bl
0000000100015a68	jns	0x100015cbb
0000000100015a6e	addl	$0x7, %ecx
0000000100015a71	incq	%r11
0000000100015a74	cmpq	%r11, %r9
0000000100015a77	jne	0x100015a40
0000000100015a79	jmp	0x1000162cc
0000000100015a7e	testq	%r9, %r9
0000000100015a81	je	0x1000162de
0000000100015a87	xorl	%ebx, %ebx
0000000100015a89	xorl	%r11d, %r11d
0000000100015a8c	xorl	%ecx, %ecx
0000000100015a8e	nop
0000000100015a90	movzbl	0x1(%rdi,%rbx), %r10d
0000000100015a96	movb	$0x6, %dl
0000000100015a98	cmpl	$0x3f, %ecx
0000000100015a9b	jne	0x100015aa7
0000000100015a9d	cmpb	$0x2, %r10b
0000000100015aa1	jae	0x1000162e6
0000000100015aa7	movzbl	%r10b, %r10d
0000000100015aab	movl	%r10d, %r15d
0000000100015aae	andl	$0x7f, %r15d
0000000100015ab2	shlq	%cl, %r15
0000000100015ab5	orq	%r15, %r11
0000000100015ab8	testb	%r10b, %r10b
0000000100015abb	jns	0x100015d2e
0000000100015ac1	addl	$0x7, %ecx
0000000100015ac4	incq	%rbx
0000000100015ac7	cmpq	%rbx, %r9
0000000100015aca	jne	0x100015a90
0000000100015acc	jmp	0x1000162cc
0000000100015ad1	testq	%r9, %r9
0000000100015ad4	je	0x1000162de
0000000100015ada	xorl	%r10d, %r10d
0000000100015add	xorl	%ebx, %ebx
0000000100015adf	xorl	%ecx, %ecx
0000000100015ae1	nopw	%cs:(%rax,%rax)
0000000100015aeb	nopl	(%rax,%rax)
0000000100015af0	movzbl	0x1(%rdi,%r10), %r11d
0000000100015af6	movb	$0x6, %dl
0000000100015af8	cmpl	$0x3f, %ecx
0000000100015afb	jne	0x100015b07
0000000100015afd	cmpb	$0x2, %r11b
0000000100015b01	jae	0x1000162e6
0000000100015b07	movzbl	%r11b, %r11d
0000000100015b0b	movl	%r11d, %r15d
0000000100015b0e	andl	$0x7f, %r15d
0000000100015b12	shlq	%cl, %r15
0000000100015b15	orq	%r15, %rbx
0000000100015b18	testb	%r11b, %r11b
0000000100015b1b	jns	0x100015dae
0000000100015b21	addl	$0x7, %ecx
0000000100015b24	incq	%r10
0000000100015b27	cmpq	%r10, %r9
0000000100015b2a	jne	0x100015af0
0000000100015b2c	jmp	0x1000162cc
0000000100015b31	movzbl	%r13b, %edx
0000000100015b35	leaq	-0x38(%rbp), %rdi
0000000100015b39	movq	-0x68(%rbp), %rsi
0000000100015b3d	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
0000000100015b42	movzbl	-0x38(%rbp), %edx
0000000100015b46	cmpb	$0x4b, %dl
0000000100015b49	jne	0x1000163ad
0000000100015b4f	movq	-0x30(%rbp), %rdx
0000000100015b53	movq	%rdx, 0x10(%r14)
0000000100015b57	jmp	0x100015ff6
0000000100015b5c	movzbl	%r13b, %r13d
0000000100015b60	leaq	-0x38(%rbp), %r15
0000000100015b64	movq	%r15, %rdi
0000000100015b67	movq	-0x68(%rbp), %rbx
0000000100015b6b	movq	%rbx, %rsi
0000000100015b6e	movl	%r13d, %edx
0000000100015b71	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
0000000100015b76	movzbl	-0x38(%rbp), %edx
0000000100015b7a	cmpb	$0x4b, %dl
0000000100015b7d	jne	0x1000163ad
0000000100015b83	movq	%rbx, %rsi
0000000100015b86	movq	-0x30(%rbp), %rbx
0000000100015b8a	movq	%r15, %rdi
0000000100015b8d	movl	%r13d, %edx
0000000100015b90	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
0000000100015b95	movzbl	-0x38(%rbp), %edx
0000000100015b99	cmpb	$0x4b, %dl
0000000100015b9c	jne	0x1000163ad
0000000100015ba2	imull	$0x38, 0x30(%r14), %ecx
0000000100015ba7	movq	$-0x1, %rdi
0000000100015bae	shrq	%cl, %rdi
0000000100015bb1	cmpw	$0x5, 0x32(%r14)
0000000100015bb7	movq	-0x30(%rbp), %rdx
0000000100015bbb	sbbq	$0x0, %rdi
0000000100015bbf	movq	-0x60(%rbp), %r9
0000000100015bc3	jmp	0x100015fe9
0000000100015bc8	movzbl	%r13b, %edx
0000000100015bcc	leaq	-0x38(%rbp), %rdi
0000000100015bd0	movq	-0x68(%rbp), %rsi
0000000100015bd4	callq	__ZN5gimli4read6reader6Reader12read_address17h5bba3ff8684036e7E ## gimli::read::reader::Reader::read_address::h5bba3ff8684036e7
0000000100015bd9	movzbl	-0x38(%rbp), %edx
0000000100015bdd	cmpb	$0x4b, %dl
0000000100015be0	jne	0x1000163ad
0000000100015be6	movq	0x20(%r14), %rsi
0000000100015bea	movq	0x28(%r14), %rdi
0000000100015bee	testq	%rdi, %rdi
0000000100015bf1	je	0x100016351
0000000100015bf7	movq	-0x30(%rbp), %rbx
0000000100015bfb	movl	$0x1, %edx
0000000100015c00	subq	%rdi, %rdx
0000000100015c03	leaq	0x1(%rsi), %r8
0000000100015c07	xorl	%eax, %eax
0000000100015c09	xorl	%ecx, %ecx
0000000100015c0b	nopl	(%rax,%rax)
0000000100015c10	movzbl	-0x1(%r8), %r9d
0000000100015c15	cmpl	$0x3f, %ecx
0000000100015c18	jne	0x100015c24
0000000100015c1a	cmpb	$0x2, %r9b
0000000100015c1e	jae	0x10001632b
0000000100015c24	movzbl	%r9b, %r9d
0000000100015c28	movl	%r9d, %r10d
0000000100015c2b	andl	$0x7f, %r10d
0000000100015c2f	shlq	%cl, %r10
0000000100015c32	orq	%r10, %rax
0000000100015c35	testb	%r9b, %r9b
0000000100015c38	jns	0x100015e2e
0000000100015c3e	addl	$0x7, %ecx
0000000100015c41	incq	%rdx
0000000100015c44	incq	%r8
0000000100015c47	cmpq	$0x1, %rdx
0000000100015c4b	jne	0x100015c10
0000000100015c4d	jmp	0x100016342
0000000100015c52	movq	%r9, 0x20(%r14)
0000000100015c56	negq	%rdx
0000000100015c59	movq	%rdx, 0x28(%r14)
0000000100015c5d	movq	0x18(%r14), %rsi
0000000100015c61	movq	(%r14), %rdx
0000000100015c64	movq	0x8(%r14), %rcx
0000000100015c68	subq	%rsi, %rcx
0000000100015c6b	jb	0x1000164ee
0000000100015c71	addq	%rsi, %rdx
0000000100015c74	movzbl	%r13b, %eax
0000000100015c78	imulq	%rax, %r8
0000000100015c7c	movq	%rcx, %rsi
0000000100015c7f	subq	%r8, %rsi
0000000100015c82	jb	0x1000164ee
0000000100015c88	movzbl	%r13b, %edi
0000000100015c8c	decl	%edi
0000000100015c8e	cmpl	$0x7, %edi
0000000100015c91	ja	0x1000164d5
0000000100015c97	addq	%r8, %rdx
0000000100015c9a	leaq	0xa03(%rip), %r9
0000000100015ca1	movslq	(%r9,%rdi,4), %rax
0000000100015ca5	addq	%r9, %rax
0000000100015ca8	jmpq	*%rax
0000000100015caa	cmpq	%r8, %rcx
0000000100015cad	je	0x1000164dd
0000000100015cb3	movzbl	(%rdx), %edx
0000000100015cb6	jmp	0x100015b53
0000000100015cbb	movq	%r13, -0x58(%rbp)
0000000100015cbf	leaq	0x2(%rdi,%r11), %r9
0000000100015cc4	movq	%r9, 0x20(%r14)
0000000100015cc8	movq	%rsi, %rbx
0000000100015ccb	subq	%r11, %rbx
0000000100015cce	leaq	-0x2(%rbx), %rcx
0000000100015cd2	movq	%rcx, 0x28(%r14)
0000000100015cd6	leaq	-0x2(%rsi), %r13
0000000100015cda	cmpq	%r11, %r13
0000000100015cdd	je	0x100016414
0000000100015ce3	movq	%r12, -0x50(%rbp)
0000000100015ce7	xorl	%r9d, %r9d
0000000100015cea	movq	%r11, %r15
0000000100015ced	xorl	%ecx, %ecx
0000000100015cef	nop
0000000100015cf0	movzbl	0x2(%rdi,%r15), %r12d
0000000100015cf6	cmpl	$0x3f, %ecx
0000000100015cf9	jne	0x100015d05
0000000100015cfb	cmpb	$0x2, %r12b
0000000100015cff	jae	0x1000163c8
0000000100015d05	movzbl	%r12b, %eax
0000000100015d09	movl	%eax, %r12d
0000000100015d0c	andl	$0x7f, %r12d
0000000100015d10	shlq	%cl, %r12
0000000100015d13	orq	%r12, %r9
0000000100015d16	testb	%al, %al
0000000100015d18	jns	0x100015e69
0000000100015d1e	addl	$0x7, %ecx
0000000100015d21	incq	%r15
0000000100015d24	cmpq	%r15, %r13
0000000100015d27	jne	0x100015cf0
0000000100015d29	jmp	0x1000163fb
0000000100015d2e	movq	%r13, -0x58(%rbp)
0000000100015d32	leaq	0x2(%rdi,%rbx), %r10
0000000100015d37	movq	%r10, 0x20(%r14)
0000000100015d3b	movq	%rsi, %r9
0000000100015d3e	subq	%rbx, %r9
0000000100015d41	leaq	-0x2(%r9), %rax
0000000100015d45	movq	%rax, 0x28(%r14)
0000000100015d49	leaq	-0x2(%rsi), %r13
0000000100015d4d	cmpq	%rbx, %r13
0000000100015d50	je	0x1000162de
0000000100015d56	movq	%r12, -0x50(%rbp)
0000000100015d5a	xorl	%r10d, %r10d
0000000100015d5d	movq	%rbx, %r15
0000000100015d60	xorl	%ecx, %ecx
0000000100015d62	nopw	%cs:(%rax,%rax)
0000000100015d6c	nopl	(%rax)
0000000100015d70	movzbl	0x2(%rdi,%r15), %r12d
0000000100015d76	cmpl	$0x3f, %ecx
0000000100015d79	jne	0x100015d85
0000000100015d7b	cmpb	$0x2, %r12b
0000000100015d7f	jae	0x1000163d9
0000000100015d85	movzbl	%r12b, %eax
0000000100015d89	movl	%eax, %r12d
0000000100015d8c	andl	$0x7f, %r12d
0000000100015d90	shlq	%cl, %r12
0000000100015d93	orq	%r12, %r10
0000000100015d96	testb	%al, %al
0000000100015d98	jns	0x100015efd
0000000100015d9e	addl	$0x7, %ecx
0000000100015da1	incq	%r15
0000000100015da4	cmpq	%r15, %r13
0000000100015da7	jne	0x100015d70
0000000100015da9	jmp	0x100016422
0000000100015dae	movq	%r13, -0x58(%rbp)
0000000100015db2	leaq	0x2(%rdi,%r10), %r11
0000000100015db7	movq	%r11, 0x20(%r14)
0000000100015dbb	movq	%rsi, %r9
0000000100015dbe	subq	%r10, %r9
0000000100015dc1	leaq	-0x2(%r9), %rax
0000000100015dc5	movq	%rax, 0x28(%r14)
0000000100015dc9	leaq	-0x2(%rsi), %r13
0000000100015dcd	cmpq	%r10, %r13
0000000100015dd0	je	0x100016459
0000000100015dd6	movq	%r12, -0x50(%rbp)
0000000100015dda	xorl	%r11d, %r11d
0000000100015ddd	movq	%r10, %r15
0000000100015de0	xorl	%ecx, %ecx
0000000100015de2	nopw	%cs:(%rax,%rax)
0000000100015dec	nopl	(%rax)
0000000100015df0	movzbl	0x2(%rdi,%r15), %r12d
0000000100015df6	cmpl	$0x3f, %ecx
0000000100015df9	jne	0x100015e05
0000000100015dfb	cmpb	$0x2, %r12b
0000000100015dff	jae	0x1000163ea
0000000100015e05	movzbl	%r12b, %eax
0000000100015e09	movl	%eax, %r12d
0000000100015e0c	andl	$0x7f, %r12d
0000000100015e10	shlq	%cl, %r12
0000000100015e13	orq	%r12, %r11
0000000100015e16	testb	%al, %al
0000000100015e18	jns	0x100015f90
0000000100015e1e	addl	$0x7, %ecx
0000000100015e21	incq	%r15
0000000100015e24	cmpq	%r15, %r13
0000000100015e27	jne	0x100015df0
0000000100015e29	jmp	0x100016440
0000000100015e2e	movq	%r8, 0x20(%r14)
0000000100015e32	negq	%rdx
0000000100015e35	movq	%rdx, 0x28(%r14)
0000000100015e39	imull	$0x38, 0x30(%r14), %ecx
0000000100015e3e	movq	$-0x1, %rsi
0000000100015e45	shrq	%cl, %rsi
0000000100015e48	cmpw	$0x5, 0x32(%r14)
0000000100015e4e	movq	%rsi, %rdi
0000000100015e51	sbbq	$0x0, %rdi
0000000100015e55	leaq	(%rax,%rbx), %rdx
0000000100015e59	andq	%rsi, %rdx
0000000100015e5c	movq	-0x60(%rbp), %r9
0000000100015e60	movq	%rax, -0x80(%rbp)
0000000100015e64	jmp	0x100015fe9
0000000100015e69	leaq	0x3(%rdi,%r15), %rax
0000000100015e6e	movq	%rax, 0x20(%r14)
0000000100015e72	subq	%r15, %rsi
0000000100015e75	addq	$-0x3, %rsi
0000000100015e79	movq	-0x58(%rbp), %r13
0000000100015e7d	movzbl	%r13b, %r11d
0000000100015e81	imull	$0x38, %r11d, %ecx
0000000100015e85	movq	$-0x1, %rdi
0000000100015e8c	shrq	%cl, %rdi
0000000100015e8f	movq	%rsi, 0x28(%r14)
0000000100015e93	cmpw	$0x5, %r8w
0000000100015e98	sbbq	$0x0, %rdi
0000000100015e9c	movq	0x18(%r14), %rcx
0000000100015ea0	movq	(%r14), %rdx
0000000100015ea3	movq	0x8(%r14), %rsi
0000000100015ea7	subq	%rcx, %rsi
0000000100015eaa	jb	0x1000164a4
0000000100015eb0	addq	%rcx, %rdx
0000000100015eb3	movzbl	%r13b, %r8d
0000000100015eb7	imulq	%r8, %r10
0000000100015ebb	movq	%rsi, %rcx
0000000100015ebe	subq	%r10, %rcx
0000000100015ec1	movq	-0x50(%rbp), %r12
0000000100015ec5	jb	0x1000164bd
0000000100015ecb	decl	%r11d
0000000100015ece	cmpl	$0x7, %r11d
0000000100015ed2	ja	0x100016583
0000000100015ed8	leaq	(%rdx,%r10), %rbx
0000000100015edc	leaq	0x781(%rip), %r15
0000000100015ee3	movslq	(%r15,%r11,4), %rax
0000000100015ee7	addq	%r15, %rax
0000000100015eea	jmpq	*%rax
0000000100015eec	cmpq	%r10, %rsi
0000000100015eef	je	0x10001653d
0000000100015ef5	movzbl	(%rbx), %ebx
0000000100015ef8	jmp	0x10001618e
0000000100015efd	leaq	0x3(%rdi,%r15), %rax
0000000100015f02	movq	%rax, 0x20(%r14)
0000000100015f06	subq	%r15, %rsi
0000000100015f09	addq	$-0x3, %rsi
0000000100015f0d	movq	%rsi, 0x28(%r14)
0000000100015f11	movq	-0x58(%rbp), %r15
0000000100015f15	movzbl	%r15b, %edx
0000000100015f19	imull	$0x38, %edx, %ecx
0000000100015f1c	movq	$-0x1, %rsi
0000000100015f23	shrq	%cl, %rsi
0000000100015f26	cmpw	$0x5, %r8w
0000000100015f2b	movq	%rsi, %rdi
0000000100015f2e	sbbq	$0x0, %rdi
0000000100015f32	movq	0x18(%r14), %r8
0000000100015f36	movq	(%r14), %rbx
0000000100015f39	movq	0x8(%r14), %rcx
0000000100015f3d	subq	%r8, %rcx
0000000100015f40	jb	0x1000164b2
0000000100015f46	addq	%r8, %rbx
0000000100015f49	movzbl	%r15b, %eax
0000000100015f4d	imulq	%rax, %r11
0000000100015f51	movq	%rcx, %r8
0000000100015f54	subq	%r11, %r8
0000000100015f57	movq	-0x50(%rbp), %r12
0000000100015f5b	jb	0x1000164c7
0000000100015f61	decl	%edx
0000000100015f63	cmpl	$0x7, %edx
0000000100015f66	ja	0x100016589
0000000100015f6c	addq	%r11, %rbx
0000000100015f6f	leaq	0x6ce(%rip), %r9
0000000100015f76	movslq	(%r9,%rdx,4), %rax
0000000100015f7a	addq	%r9, %rax
0000000100015f7d	jmpq	*%rax
0000000100015f7f	cmpq	%r11, %rcx
0000000100015f82	je	0x10001653d
0000000100015f88	movzbl	(%rbx), %ebx
0000000100015f8b	jmp	0x100016267
0000000100015f90	leaq	0x3(%rdi,%r15), %rax
0000000100015f95	movq	%rax, 0x20(%r14)
0000000100015f99	subq	%r15, %rsi
0000000100015f9c	addq	$-0x3, %rsi
0000000100015fa0	movq	%rsi, 0x28(%r14)
0000000100015fa4	movzbl	-0x58(%rbp), %eax
0000000100015fa8	imull	$0x38, %eax, %ecx
0000000100015fab	movq	$-0x1, %rax
0000000100015fb2	shrq	%cl, %rax
0000000100015fb5	cmpw	$0x5, %r8w
0000000100015fba	movq	%rax, %rdi
0000000100015fbd	sbbq	$0x0, %rdi
0000000100015fc1	movq	%r11, %rdx
0000000100015fc4	movq	-0x50(%rbp), %r12
0000000100015fc8	movq	0x10(%r14), %rcx
0000000100015fcc	cmpq	%rdi, %rcx
0000000100015fcf	je	0x100015a26
0000000100015fd5	addq	%rcx, %rbx
0000000100015fd8	andq	%rax, %rbx
0000000100015fdb	addq	%rcx, %rdx
0000000100015fde	andq	%rax, %rdx
0000000100015fe1	movq	-0x60(%rbp), %r9
0000000100015fe5	movq	%r11, -0x70(%rbp)
0000000100015fe9	movq	%r9, -0x60(%rbp)
0000000100015fed	cmpq	%rdi, %rbx
0000000100015ff0	jne	0x100016467
0000000100015ff6	movq	0x28(%r14), %rsi
0000000100015ffa	testq	%rsi, %rsi
0000000100015ffd	movq	-0x68(%rbp), %rbx
0000000100016001	jne	0x1000158dc
0000000100016007	jmp	0x100016396
000000010001600c	cmpq	$0x2, %rsi
0000000100016010	jb	0x100016051
0000000100016012	movzwl	(%rdx), %edx
0000000100016015	movw	%dx, -0x37(%rbp)
0000000100016019	movb	$0x4b, %cl
000000010001601b	jmp	0x100016090
000000010001601d	cmpq	$0x4, %rsi
0000000100016021	jb	0x100016070
0000000100016023	movzwl	0x1(%rdx), %eax
0000000100016027	movzbl	(%rdx), %ecx
000000010001602a	movzbl	0x3(%rdx), %edx
000000010001602e	movb	%cl, -0x35(%rbp)
0000000100016031	movb	%dl, -0x32(%rbp)
0000000100016034	movw	%ax, -0x34(%rbp)
0000000100016038	movl	-0x35(%rbp), %edx
000000010001603b	movb	$0x4b, %cl
000000010001603d	jmp	0x100016090
000000010001603f	cmpq	$0x8, %rsi
0000000100016043	jb	0x10001650c
0000000100016049	movq	(%rdx), %rdx
000000010001604c	jmp	0x100015b53
0000000100016051	movw	$0x0, -0x38(%rbp)
0000000100016057	movl	$0x0, -0x36(%rbp)
000000010001605e	movb	$0x0, -0x32(%rbp)
0000000100016062	movl	-0x38(%rbp), %eax
0000000100016065	movl	%eax, -0x48(%rbp)
0000000100016068	movl	-0x35(%rbp), %eax
000000010001606b	movl	%eax, -0x45(%rbp)
000000010001606e	jmp	0x10001608e
0000000100016070	movl	$0x0, -0x38(%rbp)
0000000100016077	movb	$0x0, -0x32(%rbp)
000000010001607b	movw	$0x0, -0x34(%rbp)
0000000100016081	movl	-0x35(%rbp), %eax
0000000100016084	movl	%eax, -0x45(%rbp)
0000000100016087	movl	$0x0, -0x48(%rbp)
000000010001608e	movb	$0x13, %cl
0000000100016090	cmpb	$0x4b, %cl
0000000100016093	je	0x100015b53
0000000100016099	jmp	0x1000164f0
000000010001609e	cmpq	$0x2, %rcx
00000001000160a2	jb	0x100016146
00000001000160a8	movzwl	(%rbx), %ebx
00000001000160ab	movw	%bx, -0x37(%rbp)
00000001000160af	movb	$0x4b, %cl
00000001000160b1	jmp	0x100016185
00000001000160b6	cmpq	$0x4, %rcx
00000001000160ba	jb	0x100016165
00000001000160c0	movzwl	0x1(%rbx), %eax
00000001000160c4	movzbl	(%rbx), %ecx
00000001000160c7	movzbl	0x3(%rbx), %r10d
00000001000160cc	movb	%cl, -0x35(%rbp)
00000001000160cf	movb	%r10b, -0x32(%rbp)
00000001000160d3	movw	%ax, -0x34(%rbp)
00000001000160d7	movl	-0x35(%rbp), %ebx
00000001000160da	movb	$0x4b, %cl
00000001000160dc	jmp	0x100016185
00000001000160e1	cmpq	$0x8, %rcx
00000001000160e5	jb	0x100016552
00000001000160eb	movq	(%rbx), %rbx
00000001000160ee	jmp	0x10001618e
00000001000160f3	cmpq	$0x2, %r8
00000001000160f7	jb	0x10001621f
00000001000160fd	movzwl	(%rbx), %ebx
0000000100016100	movw	%bx, -0x37(%rbp)
0000000100016104	movb	$0x4b, %cl
0000000100016106	jmp	0x10001625e
000000010001610b	cmpq	$0x4, %r8
000000010001610f	jb	0x10001623e
0000000100016115	movzwl	0x1(%rbx), %eax
0000000100016119	movzbl	(%rbx), %ecx
000000010001611c	movzbl	0x3(%rbx), %edx
0000000100016120	movb	%cl, -0x35(%rbp)
0000000100016123	movb	%dl, -0x32(%rbp)
0000000100016126	movw	%ax, -0x34(%rbp)
000000010001612a	movl	-0x35(%rbp), %ebx
000000010001612d	movb	$0x4b, %cl
000000010001612f	jmp	0x10001625e
0000000100016134	cmpq	$0x8, %r8
0000000100016138	jb	0x100016552
000000010001613e	movq	(%rbx), %rbx
0000000100016141	jmp	0x100016267
0000000100016146	movw	$0x0, -0x38(%rbp)
000000010001614c	movl	$0x0, -0x36(%rbp)
0000000100016153	movb	$0x0, -0x32(%rbp)
0000000100016157	movl	-0x38(%rbp), %eax
000000010001615a	movl	%eax, -0x48(%rbp)
000000010001615d	movl	-0x35(%rbp), %eax
0000000100016160	movl	%eax, -0x45(%rbp)
0000000100016163	jmp	0x100016183
0000000100016165	movl	$0x0, -0x38(%rbp)
000000010001616c	movb	$0x0, -0x32(%rbp)
0000000100016170	movw	$0x0, -0x34(%rbp)
0000000100016176	movl	-0x35(%rbp), %eax
0000000100016179	movl	%eax, -0x45(%rbp)
000000010001617c	movl	$0x0, -0x48(%rbp)
0000000100016183	movb	$0x13, %cl
0000000100016185	cmpb	$0x4b, %cl
0000000100016188	jne	0x10001658f
000000010001618e	imulq	%r9, %r8
0000000100016192	movq	%rsi, %rcx
0000000100016195	subq	%r8, %rcx
0000000100016198	jb	0x1000164ce
000000010001619e	cmpl	$0x7, %r11d
00000001000161a2	ja	0x1000165ca
00000001000161a8	addq	%r8, %rdx
00000001000161ab	leaq	0x4d2(%rip), %r10
00000001000161b2	movslq	(%r10,%r11,4), %rax
00000001000161b6	addq	%r10, %rax
00000001000161b9	jmpq	*%rax
00000001000161bb	cmpq	%r8, %rsi
00000001000161be	je	0x1000165d9
00000001000161c4	movzbl	(%rdx), %edx
00000001000161c7	jmp	0x100015fe9
00000001000161cc	cmpq	$0x2, %rcx
00000001000161d0	jb	0x10001627b
00000001000161d6	movzwl	(%rdx), %edx
00000001000161d9	movw	%dx, -0x37(%rbp)
00000001000161dd	movb	$0x4b, %cl
00000001000161df	jmp	0x1000162ba
00000001000161e4	cmpq	$0x4, %rcx
00000001000161e8	jb	0x10001629a
00000001000161ee	movzwl	0x1(%rdx), %eax
00000001000161f2	movzbl	(%rdx), %ecx
00000001000161f5	movzbl	0x3(%rdx), %edx
00000001000161f9	movb	%cl, -0x35(%rbp)
00000001000161fc	movb	%dl, -0x32(%rbp)
00000001000161ff	movw	%ax, -0x34(%rbp)
0000000100016203	movl	-0x35(%rbp), %edx
0000000100016206	movb	$0x4b, %cl
0000000100016208	jmp	0x1000162ba
000000010001620d	cmpq	$0x8, %rcx
0000000100016211	jb	0x1000165f0
0000000100016217	movq	(%rdx), %rdx
000000010001621a	jmp	0x100015fe9
000000010001621f	movw	$0x0, -0x38(%rbp)
0000000100016225	movl	$0x0, -0x36(%rbp)
000000010001622c	movb	$0x0, -0x32(%rbp)
0000000100016230	movl	-0x38(%rbp), %eax
0000000100016233	movl	%eax, -0x48(%rbp)
0000000100016236	movl	-0x35(%rbp), %eax
0000000100016239	movl	%eax, -0x45(%rbp)
000000010001623c	jmp	0x10001625c
000000010001623e	movl	$0x0, -0x38(%rbp)
0000000100016245	movb	$0x0, -0x32(%rbp)
0000000100016249	movw	$0x0, -0x34(%rbp)
000000010001624f	movl	-0x35(%rbp), %eax
0000000100016252	movl	%eax, -0x45(%rbp)
0000000100016255	movl	$0x0, -0x48(%rbp)
000000010001625c	movb	$0x13, %cl
000000010001625e	cmpb	$0x4b, %cl
0000000100016261	jne	0x10001658f
0000000100016267	leaq	(%rbx,%r10), %rdx
000000010001626b	andq	%rsi, %rdx
000000010001626e	movq	-0x60(%rbp), %r9
0000000100016272	movq	%r10, -0x78(%rbp)
0000000100016276	jmp	0x100015fe9
000000010001627b	movw	$0x0, -0x38(%rbp)
0000000100016281	movl	$0x0, -0x36(%rbp)
0000000100016288	movb	$0x0, -0x32(%rbp)
000000010001628c	movl	-0x38(%rbp), %eax
000000010001628f	movl	%eax, -0x48(%rbp)
0000000100016292	movl	-0x35(%rbp), %eax
0000000100016295	movl	%eax, -0x45(%rbp)
0000000100016298	jmp	0x1000162b8
000000010001629a	movl	$0x0, -0x38(%rbp)
00000001000162a1	movb	$0x0, -0x32(%rbp)
00000001000162a5	movw	$0x0, -0x34(%rbp)
00000001000162ab	movl	-0x35(%rbp), %eax
00000001000162ae	movl	%eax, -0x45(%rbp)
00000001000162b1	movl	$0x0, -0x48(%rbp)
00000001000162b8	movb	$0x13, %cl
00000001000162ba	movq	%rdx, -0x41(%rbp)
00000001000162be	cmpb	$0x4b, %cl
00000001000162c1	je	0x100015fe9
00000001000162c7	jmp	0x10001661b
00000001000162cc	addq	%rsi, %rdi
00000001000162cf	movq	%rdi, 0x20(%r14)
00000001000162d3	movq	$0x0, 0x28(%r14)
00000001000162db	movq	%rdi, %r10
00000001000162de	movb	$0x13, %dl
00000001000162e0	xorl	%eax, %eax
00000001000162e2	xorl	%ecx, %ecx
00000001000162e4	jmp	0x1000162f0
00000001000162e6	xorl	%eax, %eax
00000001000162e8	jmp	0x1000162ee
00000001000162ea	xorl	%eax, %eax
00000001000162ec	movb	$0x6, %dl
00000001000162ee	xorl	%ecx, %ecx
00000001000162f0	shlq	$0x10, %rax
00000001000162f4	movzbl	%cl, %ecx
00000001000162f7	shlq	$0x8, %rcx
00000001000162fb	orq	%rax, %rcx
00000001000162fe	movzbl	%dl, %eax
0000000100016301	orq	%rcx, %rax
0000000100016304	leaq	0x2d9e5(%rip), %rcx
000000010001630b	movq	%rcx, 0x20(%r14)
000000010001630f	movq	$0x0, 0x28(%r14)
0000000100016317	movq	%rax, 0x8(%r12)
000000010001631c	movq	%r10, 0x10(%r12)
0000000100016321	movq	$0x2, (%r12)
0000000100016329	jmp	0x10001639e
000000010001632b	movq	%r8, 0x20(%r14)
000000010001632f	negq	%rdx
0000000100016332	movq	%rdx, 0x28(%r14)
0000000100016336	movb	$0x6, %dl
0000000100016338	xorl	%eax, %eax
000000010001633a	xorl	%ecx, %ecx
000000010001633c	movq	-0x80(%rbp), %r10
0000000100016340	jmp	0x1000162f0
0000000100016342	addq	%rdi, %rsi
0000000100016345	movq	%rsi, 0x20(%r14)
0000000100016349	movq	$0x0, 0x28(%r14)
0000000100016351	movb	$0x13, %dl
0000000100016353	xorl	%eax, %eax
0000000100016355	xorl	%ecx, %ecx
0000000100016357	movq	%rsi, %r10
000000010001635a	jmp	0x1000162f0
000000010001635c	movzbl	-0x31(%rbp), %eax
0000000100016360	shll	$0x10, %eax
0000000100016363	movzwl	-0x33(%rbp), %esi
0000000100016367	orl	%eax, %esi
0000000100016369	shlq	$0x20, %rsi
000000010001636d	movl	-0x37(%rbp), %ecx
0000000100016370	orq	%rsi, %rcx
0000000100016373	movq	-0x30(%rbp), %r10
0000000100016377	movq	%rcx, %rax
000000010001637a	shrq	$0x8, %rax
000000010001637e	jmp	0x1000162f0
0000000100016383	leaq	0x2d966(%rip), %rax
000000010001638a	movq	%rax, 0x20(%r14)
000000010001638e	movq	$0x0, 0x28(%r14)
0000000100016396	movq	$0x0, (%r12)
000000010001639e	addq	$0x58, %rsp
00000001000163a2	popq	%rbx
00000001000163a3	popq	%r12
00000001000163a5	popq	%r13
00000001000163a7	popq	%r14
00000001000163a9	popq	%r15
00000001000163ab	popq	%rbp
00000001000163ac	retq
00000001000163ad	movzbl	-0x37(%rbp), %ecx
00000001000163b1	movl	-0x36(%rbp), %esi
00000001000163b4	movzwl	-0x32(%rbp), %eax
00000001000163b8	shlq	$0x20, %rax
00000001000163bc	orq	%rsi, %rax
00000001000163bf	movq	-0x30(%rbp), %r10
00000001000163c3	jmp	0x1000162f0
00000001000163c8	xorl	%eax, %eax
00000001000163ca	xorl	%ecx, %ecx
00000001000163cc	movq	-0x50(%rbp), %r12
00000001000163d0	movq	-0x60(%rbp), %r10
00000001000163d4	jmp	0x1000162f0
00000001000163d9	xorl	%eax, %eax
00000001000163db	xorl	%ecx, %ecx
00000001000163dd	movq	-0x78(%rbp), %r10
00000001000163e1	movq	-0x50(%rbp), %r12
00000001000163e5	jmp	0x1000162f0
00000001000163ea	xorl	%eax, %eax
00000001000163ec	xorl	%ecx, %ecx
00000001000163ee	movq	-0x70(%rbp), %r10
00000001000163f2	movq	-0x50(%rbp), %r12
00000001000163f6	jmp	0x1000162f0
00000001000163fb	addq	%r11, %rdi
00000001000163fe	addq	%rdi, %rbx
0000000100016401	movq	%rbx, 0x20(%r14)
0000000100016405	movq	$0x0, 0x28(%r14)
000000010001640d	movq	%rbx, %r9
0000000100016410	movq	-0x50(%rbp), %r12
0000000100016414	movb	$0x13, %dl
0000000100016416	xorl	%eax, %eax
0000000100016418	xorl	%ecx, %ecx
000000010001641a	movq	%r9, %r10
000000010001641d	jmp	0x1000162f0
0000000100016422	addq	%rbx, %rdi
0000000100016425	addq	%rdi, %r9
0000000100016428	movq	%r9, 0x20(%r14)
000000010001642c	movq	$0x0, 0x28(%r14)
0000000100016434	movq	%r9, %r10
0000000100016437	movq	-0x50(%rbp), %r12
000000010001643b	jmp	0x1000162de
0000000100016440	addq	%r10, %rdi
0000000100016443	addq	%rdi, %r9
0000000100016446	movq	%r9, 0x20(%r14)
000000010001644a	movq	$0x0, 0x28(%r14)
0000000100016452	movq	%r9, %r11
0000000100016455	movq	-0x50(%rbp), %r12
0000000100016459	movb	$0x13, %dl
000000010001645b	xorl	%eax, %eax
000000010001645d	xorl	%ecx, %ecx
000000010001645f	movq	%r11, %r10
0000000100016462	jmp	0x1000162f0
0000000100016467	cmpq	%rdx, %rbx
000000010001646a	jbe	0x100016486
000000010001646c	leaq	0x2d87d(%rip), %rax
0000000100016473	movq	%rax, 0x20(%r14)
0000000100016477	movq	$0x0, 0x28(%r14)
000000010001647f	movb	$0x30, %cl
0000000100016481	jmp	0x1000165a9
0000000100016486	movq	$0x1, (%r12)
000000010001648e	movq	%rbx, 0x8(%r12)
0000000100016493	movq	%rdx, 0x10(%r12)
0000000100016498	jmp	0x10001639e
000000010001649d	movb	$0x30, %dl
000000010001649f	jmp	0x1000162f0
00000001000164a4	movb	$0x13, %cl
00000001000164a6	movq	%rdx, %rbx
00000001000164a9	movq	-0x50(%rbp), %r12
00000001000164ad	jmp	0x10001658f
00000001000164b2	movb	$0x13, %cl
00000001000164b4	movq	-0x50(%rbp), %r12
00000001000164b8	jmp	0x10001658f
00000001000164bd	movb	$0x13, %cl
00000001000164bf	movq	%rdx, %rbx
00000001000164c2	jmp	0x10001658f
00000001000164c7	movb	$0x13, %cl
00000001000164c9	jmp	0x10001658f
00000001000164ce	movb	$0x13, %cl
00000001000164d0	jmp	0x1000165a9
00000001000164d5	movb	%r13b, -0x48(%rbp)
00000001000164d9	movb	$0x17, %cl
00000001000164db	jmp	0x1000164f0
00000001000164dd	movb	$0x0, -0x48(%rbp)
00000001000164e1	movw	$0x0, -0x43(%rbp)
00000001000164e7	movl	$0x0, -0x47(%rbp)
00000001000164ee	movb	$0x13, %cl
00000001000164f0	movzbl	-0x42(%rbp), %eax
00000001000164f4	shll	$0x10, %eax
00000001000164f7	movzwl	-0x44(%rbp), %esi
00000001000164fb	orl	%eax, %esi
00000001000164fd	shlq	$0x20, %rsi
0000000100016501	movl	-0x48(%rbp), %eax
0000000100016504	orq	%rsi, %rax
0000000100016507	jmp	0x1000165a9
000000010001650c	movb	$0x0, -0x32(%rbp)
0000000100016510	movw	$0x0, -0x34(%rbp)
0000000100016516	movl	$0x0, -0x38(%rbp)
000000010001651d	movq	%rdx, -0x31(%rbp)
0000000100016521	movq	-0x38(%rbp), %rax
0000000100016525	movl	-0x30(%rbp), %ecx
0000000100016528	movl	-0x2d(%rbp), %edx
000000010001652b	movl	%ecx, -0x40(%rbp)
000000010001652e	movl	%edx, -0x3d(%rbp)
0000000100016531	movq	%rax, -0x48(%rbp)
0000000100016535	movb	$0x13, %cl
0000000100016537	movq	-0x41(%rbp), %rdx
000000010001653b	jmp	0x1000164f0
000000010001653d	movb	$0x0, -0x48(%rbp)
0000000100016541	movw	$0x0, -0x43(%rbp)
0000000100016547	movl	$0x0, -0x47(%rbp)
000000010001654e	movb	$0x13, %cl
0000000100016550	jmp	0x10001658f
0000000100016552	movb	$0x0, -0x32(%rbp)
0000000100016556	movw	$0x0, -0x34(%rbp)
000000010001655c	movl	$0x0, -0x38(%rbp)
0000000100016563	movq	%rbx, -0x31(%rbp)
0000000100016567	movq	-0x38(%rbp), %rax
000000010001656b	movl	-0x30(%rbp), %ecx
000000010001656e	movl	-0x2d(%rbp), %edx
0000000100016571	movl	%ecx, -0x40(%rbp)
0000000100016574	movl	%edx, -0x3d(%rbp)
0000000100016577	movq	%rax, -0x48(%rbp)
000000010001657b	movb	$0x13, %cl
000000010001657d	movq	-0x41(%rbp), %rbx
0000000100016581	jmp	0x10001658f
0000000100016583	movb	%r13b, -0x48(%rbp)
0000000100016587	jmp	0x10001658d
0000000100016589	movb	%r15b, -0x48(%rbp)
000000010001658d	movb	$0x17, %cl
000000010001658f	movzbl	-0x42(%rbp), %eax
0000000100016593	shll	$0x10, %eax
0000000100016596	movzwl	-0x44(%rbp), %edx
000000010001659a	orl	%eax, %edx
000000010001659c	shlq	$0x20, %rdx
00000001000165a0	movl	-0x48(%rbp), %eax
00000001000165a3	orq	%rdx, %rax
00000001000165a6	movq	%rbx, %rdx
00000001000165a9	shlq	$0x8, %rax
00000001000165ad	movzbl	%cl, %ecx
00000001000165b0	orq	%rax, %rcx
00000001000165b3	movq	%rcx, 0x8(%r12)
00000001000165b8	movq	%rdx, 0x10(%r12)
00000001000165bd	movq	$0x2, (%r12)
00000001000165c5	jmp	0x10001639e
00000001000165ca	movb	%r13b, -0x48(%rbp)
00000001000165ce	movb	$0x17, %cl
00000001000165d0	movq	-0x41(%rbp), %rdx
00000001000165d4	jmp	0x1000164f0
00000001000165d9	movb	$0x0, -0x48(%rbp)
00000001000165dd	movw	$0x0, -0x43(%rbp)
00000001000165e3	movl	$0x0, -0x47(%rbp)
00000001000165ea	movq	%rdx, -0x41(%rbp)
00000001000165ee	jmp	0x100016619
00000001000165f0	movb	$0x0, -0x32(%rbp)
00000001000165f4	movw	$0x0, -0x34(%rbp)
00000001000165fa	movl	$0x0, -0x38(%rbp)
0000000100016601	movq	%rdx, -0x31(%rbp)
0000000100016605	movq	-0x38(%rbp), %rax
0000000100016609	movl	-0x30(%rbp), %ecx
000000010001660c	movl	-0x2d(%rbp), %edx
000000010001660f	movl	%ecx, -0x40(%rbp)
0000000100016612	movl	%edx, -0x3d(%rbp)
0000000100016615	movq	%rax, -0x48(%rbp)
0000000100016619	movb	$0x13, %cl
000000010001661b	movq	-0x41(%rbp), %rdx
000000010001661f	jmp	0x1000164f0
0000000100016624	popq	%rdi
0000000100016625	std
0000000100016626	.byte 0xff #bad opcode
0000000100016627	.byte 0xff #bad opcode
0000000100016628	pushq	%rdx
000000010001662a	.byte 0xff #bad opcode
000000010001662b	decl	(%rbx)
000000010001662d	hlt
000000010001662e	.byte 0xff #bad opcode
000000010001662f	lcalll	*-0xc(%rdx)
0000000100016632	.byte 0xff #bad opcode
0000000100016633	ljmpl	*0xdfffff4(%rbp)
0000000100016639	cmc
000000010001663a	.byte 0xff #bad opcode
000000010001663b	.byte 0xff #bad opcode
000000010001663c	cmpb	%dh, %ch
000000010001663e	.byte 0xff #bad opcode
000000010001663f	jmpq	*-0x6c40001(%rbp,%rsi,8)
0000000100016646	.byte 0xff #bad opcode
0000000100016647	ljmpl	*0x45fffffa(%rdi)
000000010001664d	.byte 0xff #bad opcode
000000010001664e	.byte 0xff #bad opcode
000000010001664f	incl	%edi
0000000100016651	cli
0000000100016652	.byte 0xff #bad opcode
0000000100016653	incl	-0x1(%rbp)
0000000100016656	.byte 0xff #bad opcode
0000000100016657	incl	-0x1(%rbp)
000000010001665a	.byte 0xff #bad opcode
000000010001665b	incl	-0x1(%rbp)
000000010001665e	.byte 0xff #bad opcode
000000010001665f	pushq	%rax
0000000100016661	cli
0000000100016662	.byte 0xff #bad opcode
0000000100016663	decl	0x3afffff8(%rax)
0000000100016669	cli
000000010001666a	.byte 0xff #bad opcode
000000010001666b	lcalll	*(%rdi)
000000010001666d	.byte 0xff #bad opcode
000000010001666e	.byte 0xff #bad opcode
000000010001666f	callq	*-0x6(%rdx)
0000000100016672	.byte 0xff #bad opcode
0000000100016673	lcalll	*(%rdi)
0000000100016675	.byte 0xff #bad opcode
0000000100016676	.byte 0xff #bad opcode
0000000100016677	lcalll	*(%rdi)
0000000100016679	.byte 0xff #bad opcode
000000010001667a	.byte 0xff #bad opcode
000000010001667b	lcalll	*(%rdi)
000000010001667d	.byte 0xff #bad opcode
000000010001667e	.byte 0xff #bad opcode
000000010001667f	.byte 0xff #bad opcode
0000000100016680	jge	0x10001667c
0000000100016682	.byte 0xff #bad opcode
0000000100016683	pushq	(%rdi)
0000000100016685	sti
0000000100016686	.byte 0xff #bad opcode
0000000100016687	decl	-0x5(%rax)
000000010001668a	.byte 0xff #bad opcode
000000010001668b	incl	-0x1(%rsi)
000000010001668e	.byte 0xff #bad opcode
000000010001668f	jmpq	*-0x5(%rax)
0000000100016692	.byte 0xff #bad opcode
0000000100016693	incl	-0x1(%rsi)
0000000100016696	.byte 0xff #bad opcode
0000000100016697	incl	-0x1(%rsi)
000000010001669a	.byte 0xff #bad opcode
000000010001669b	incl	-0x1(%rsi)
000000010001669e	.byte 0xff #bad opcode
000000010001669f	decl	0x6fffffb(%rcx)
00000001000166a5	idivb	%bh
00000001000166a7	ljmpl	*-0x7(%rax)
00000001000166aa	.byte 0xff #bad opcode
00000001000166ab	pushq	(%rcx)
00000001000166ad	.byte 0xfe #bad opcode
00000001000166ae	.byte 0xff #bad opcode
00000001000166af	.byte 0xff #bad opcode
00000001000166b0	jns	0x1000166ab
00000001000166b2	.byte 0xff #bad opcode
00000001000166b3	pushq	(%rcx)
00000001000166b5	.byte 0xfe #bad opcode
00000001000166b6	.byte 0xff #bad opcode
00000001000166b7	pushq	(%rcx)
00000001000166b9	.byte 0xfe #bad opcode
00000001000166ba	.byte 0xff #bad opcode
00000001000166bb	pushq	(%rcx)
00000001000166bd	.byte 0xfe #bad opcode
00000001000166be	.byte 0xff #bad opcode
00000001000166bf	lcalll	*0x66fffff9(%rbx)
00000001000166c5	nopl	%cs:(%rax,%rax)
00000001000166ce	nop
__ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17ha59db4e74282d1a9E:
00000001000166d0	pushq	%rbp
00000001000166d1	movq	%rsp, %rbp
00000001000166d4	movq	%rsi, %rdx
00000001000166d7	movq	(%rdi), %rax
00000001000166da	movq	0x10(%rdi), %rsi
00000001000166de	movq	%rax, %rdi
00000001000166e1	popq	%rbp
00000001000166e2	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000166e7	nopw	(%rax,%rax)
__ZN6object4read7archive13ArchiveMember12parse_aixbig17h9109b5a29c33fe09E:
00000001000166f0	pushq	%rbp
00000001000166f1	movq	%rsp, %rbp
00000001000166f4	pushq	%r15
00000001000166f6	pushq	%r14
00000001000166f8	pushq	%r13
00000001000166fa	pushq	%r12
00000001000166fc	pushq	%rbx
00000001000166fd	subq	$0x18, %rsp
0000000100016701	movq	%rcx, %r13
0000000100016704	movq	%rdx, %r15
0000000100016707	movq	%rsi, %r12
000000010001670a	movq	%rdi, %rbx
000000010001670d	movl	$0x70, %ecx
0000000100016712	movq	%rsi, %rdi
0000000100016715	movq	%rdx, %rsi
0000000100016718	movq	%r13, %rdx
000000010001671b	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
0000000100016720	testq	%rax, %rax
0000000100016723	je	0x10001672b
0000000100016725	cmpq	$0x70, %rdx
0000000100016729	jae	0x100016754
000000010001672b	leaq	0x2dab7(%rip), %rax
0000000100016732	movq	%rax, 0x8(%rbx)
0000000100016736	movq	$0x25, 0x10(%rbx)
000000010001673e	movq	$0x2, (%rbx)
0000000100016745	addq	$0x18, %rsp
0000000100016749	popq	%rbx
000000010001674a	popq	%r12
000000010001674c	popq	%r13
000000010001674e	popq	%r14
0000000100016750	popq	%r15
0000000100016752	popq	%rbp
0000000100016753	retq
0000000100016754	movq	%rax, -0x40(%rbp)
0000000100016758	leaq	0x6c(%rax), %rdi
000000010001675c	movl	$0x4, %esi
0000000100016761	movl	$0xa, %edx
0000000100016766	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010001676b	testq	%rax, %rax
000000010001676e	je	0x100016828
0000000100016774	movq	%rdx, %r14
0000000100016777	addq	$0x70, %r13
000000010001677b	movq	%r12, %rdi
000000010001677e	movq	%r15, %rsi
0000000100016781	movq	%r13, %rdx
0000000100016784	movq	%r14, %rcx
0000000100016787	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010001678c	testq	%rax, %rax
000000010001678f	je	0x100016858
0000000100016795	movq	%rdx, -0x30(%rbp)
0000000100016799	movq	%rax, -0x38(%rbp)
000000010001679d	addq	%r13, %r14
00000001000167a0	movq	%r14, %rax
00000001000167a3	incq	%rax
00000001000167a6	movq	$-0x1, %r13
00000001000167ad	cmovneq	%rax, %r13
00000001000167b1	testb	$0x1, %r14b
00000001000167b5	cmoveq	%r14, %r13
00000001000167b9	movl	$0x2, %ecx
00000001000167be	movq	%r12, %rdi
00000001000167c1	movq	%r15, %rsi
00000001000167c4	movq	%r13, %rdx
00000001000167c7	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
00000001000167cc	testq	%rax, %rax
00000001000167cf	je	0x100016840
00000001000167d1	cmpq	$0x2, %rdx
00000001000167d5	jne	0x100016840
00000001000167d7	movzwl	(%rax), %eax
00000001000167da	cmpl	$0xa60, %eax                    ## imm = 0xA60
00000001000167df	jne	0x100016840
00000001000167e1	movl	$0x14, %esi
00000001000167e6	movq	-0x40(%rbp), %r14
00000001000167ea	movq	%r14, %rdi
00000001000167ed	movl	$0xa, %edx
00000001000167f2	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
00000001000167f7	testq	%rax, %rax
00000001000167fa	je	0x100016870
00000001000167fc	addq	$0x2, %r13
0000000100016800	movq	$0x1, (%rbx)
0000000100016807	movq	%r14, 0x8(%rbx)
000000010001680b	movq	-0x38(%rbp), %rax
000000010001680f	movq	%rax, 0x10(%rbx)
0000000100016813	movq	-0x30(%rbp), %rax
0000000100016817	movq	%rax, 0x18(%rbx)
000000010001681b	movq	%r13, 0x20(%rbx)
000000010001681f	movq	%rdx, 0x28(%rbx)
0000000100016823	jmp	0x100016745
0000000100016828	leaq	0x2d9df(%rip), %rax
000000010001682f	movq	%rax, 0x8(%rbx)
0000000100016833	movq	$0x2a, 0x10(%rbx)
000000010001683b	jmp	0x10001673e
0000000100016840	leaq	0x2da14(%rip), %rax
0000000100016847	movq	%rax, 0x8(%rbx)
000000010001684b	movq	$0x22, 0x10(%rbx)
0000000100016853	jmp	0x10001673e
0000000100016858	leaq	0x2d9d9(%rip), %rax
000000010001685f	movq	%rax, 0x8(%rbx)
0000000100016863	movq	$0x23, 0x10(%rbx)
000000010001686b	jmp	0x10001673e
0000000100016870	leaq	0x2da06(%rip), %rax
0000000100016877	movq	%rax, 0x8(%rbx)
000000010001687b	movq	$0x2e, 0x10(%rbx)
0000000100016883	jmp	0x10001673e
0000000100016888	nopl	(%rax,%rax)
__ZN6object4read7archive13ArchiveMember5parse17hefb02c9169bf7bc9E:
0000000100016890	pushq	%rbp
0000000100016891	movq	%rsp, %rbp
0000000100016894	pushq	%r15
0000000100016896	pushq	%r14
0000000100016898	pushq	%r13
000000010001689a	pushq	%r12
000000010001689c	pushq	%rbx
000000010001689d	subq	$0x28, %rsp
00000001000168a1	movq	%r9, -0x50(%rbp)
00000001000168a5	movq	%r8, -0x48(%rbp)
00000001000168a9	movq	%rcx, %r14
00000001000168ac	movq	%rdx, %r13
00000001000168af	movq	%rsi, %r12
00000001000168b2	movq	%rdi, %rbx
00000001000168b5	movq	(%rcx), %r15
00000001000168b8	movl	$0x3c, %ecx
00000001000168bd	movq	%rsi, %rdi
00000001000168c0	movq	%rdx, %rsi
00000001000168c3	movq	%r15, %rdx
00000001000168c6	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
00000001000168cb	testq	%rax, %rax
00000001000168ce	je	0x1000168dd
00000001000168d0	addq	$0x3c, %r15
00000001000168d4	movq	%r15, (%r14)
00000001000168d7	cmpq	$0x3c, %rdx
00000001000168db	jae	0x100016906
00000001000168dd	leaq	0x2d9c7(%rip), %rax
00000001000168e4	movq	%rax, 0x8(%rbx)
00000001000168e8	movq	$0x1d, 0x10(%rbx)
00000001000168f0	movq	$0x2, (%rbx)
00000001000168f7	addq	$0x28, %rsp
00000001000168fb	popq	%rbx
00000001000168fc	popq	%r12
00000001000168fe	popq	%r13
0000000100016900	popq	%r14
0000000100016902	popq	%r15
0000000100016904	popq	%rbp
0000000100016905	retq
0000000100016906	movzwl	0x3a(%rax), %ecx
000000010001690a	cmpl	$0xa60, %ecx                    ## imm = 0xA60
0000000100016910	jne	0x100016953
0000000100016912	movq	%r15, -0x38(%rbp)
0000000100016916	movq	%rax, -0x30(%rbp)
000000010001691a	leaq	0x30(%rax), %rdi
000000010001691e	movl	$0xa, %esi
0000000100016923	movl	$0xa, %edx
0000000100016928	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010001692d	testq	%rax, %rax
0000000100016930	je	0x100016968
0000000100016932	movq	%rdx, %rdi
0000000100016935	movq	%rdx, -0x40(%rbp)
0000000100016939	movq	%rdx, %rcx
000000010001693c	movl	$0x20, %eax
0000000100016941	addq	%r15, %rcx
0000000100016944	cmovaeq	%rcx, %rax
0000000100016948	jae	0x100016981
000000010001694a	leaq	0x2d992(%rip), %rcx
0000000100016951	jmp	0x100016974
0000000100016953	leaq	0x2da55(%rip), %rax
000000010001695a	movq	%rax, 0x8(%rbx)
000000010001695e	movq	$0x1a, 0x10(%rbx)
0000000100016966	jmp	0x1000168f0
0000000100016968	movl	$0x1b, %eax
000000010001696d	leaq	0x2d954(%rip), %rcx
0000000100016974	movq	%rcx, 0x8(%rbx)
0000000100016978	movq	%rax, 0x10(%rbx)
000000010001697c	jmp	0x1000168f0
0000000100016981	movq	%rax, %rcx
0000000100016984	incq	%rcx
0000000100016987	movq	$-0x1, %rdx
000000010001698e	cmovneq	%rcx, %rdx
0000000100016992	testb	$0x1, %dil
0000000100016996	cmoveq	%rax, %rdx
000000010001699a	movq	%rdx, (%r14)
000000010001699d	movq	-0x30(%rbp), %rsi
00000001000169a1	movzbl	(%rsi), %eax
00000001000169a4	cmpb	$0x2f, %al
00000001000169a6	jne	0x1000169e6
00000001000169a8	movzbl	0x1(%rsi), %ecx
00000001000169ac	addb	$-0x30, %cl
00000001000169af	cmpb	$0xa, %cl
00000001000169b2	jae	0x1000169e6
00000001000169b4	movq	%rdi, %r13
00000001000169b7	movq	%rsi, %rdi
00000001000169ba	incq	%rdi
00000001000169bd	movl	$0xf, %esi
00000001000169c2	movq	-0x48(%rbp), %rdx
00000001000169c6	movq	-0x50(%rbp), %rcx
00000001000169ca	callq	__ZN6object4read7archive24parse_sysv_extended_name17h2f068e37d673972aE ## object::read::archive::parse_sysv_extended_name::h2f068e37d673972a
00000001000169cf	testq	%rax, %rax
00000001000169d2	jne	0x100016ac7
00000001000169d8	movl	$0x24, %eax
00000001000169dd	leaq	0x2d9a7(%rip), %rcx
00000001000169e4	jmp	0x100016974
00000001000169e6	movzwl	(%rsi), %ecx
00000001000169e9	movzbl	0x2(%rsi), %edx
00000001000169ed	shll	$0x10, %edx
00000001000169f0	orl	%ecx, %edx
00000001000169f2	cmpl	$0x2f3123, %edx                 ## imm = 0x2F3123
00000001000169f8	jne	0x100016a3b
00000001000169fa	movzbl	0x3(%rsi), %ecx
00000001000169fe	addb	$-0x30, %cl
0000000100016a01	cmpb	$0xa, %cl
0000000100016a04	jae	0x100016a3b
0000000100016a06	movq	%rsi, %rdi
0000000100016a09	addq	$0x3, %rdi
0000000100016a0d	leaq	-0x38(%rbp), %r8
0000000100016a11	leaq	-0x40(%rbp), %r9
0000000100016a15	movl	$0xd, %esi
0000000100016a1a	movq	%r12, %rdx
0000000100016a1d	movq	%r13, %rcx
0000000100016a20	callq	__ZN6object4read7archive23parse_bsd_extended_name17h572b68fe3dc234d0E ## object::read::archive::parse_bsd_extended_name::h572b68fe3dc234d0
0000000100016a25	testq	%rax, %rax
0000000100016a28	je	0x100016aeb
0000000100016a2e	movq	-0x38(%rbp), %r15
0000000100016a32	movq	-0x40(%rbp), %r13
0000000100016a36	jmp	0x100016ac7
0000000100016a3b	cmpb	$0x2f, %al
0000000100016a3d	jne	0x100016a75
0000000100016a3f	movl	$0x10, %r14d
0000000100016a45	movl	$0x10, %edx
0000000100016a4a	movq	%rdi, %r13
0000000100016a4d	movl	$0x20, %edi
0000000100016a52	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
0000000100016a57	testq	%rax, %rax
0000000100016a5a	cmoveq	%r14, %rdx
0000000100016a5e	leaq	0x31d2b(%rip), %r8
0000000100016a65	movl	$0x10, %ecx
0000000100016a6a	xorl	%edi, %edi
0000000100016a6c	movq	%rdx, %rsi
0000000100016a6f	movq	-0x30(%rbp), %rdx
0000000100016a73	jmp	0x100016ac2
0000000100016a75	movq	%rdi, %r13
0000000100016a78	movl	$0x10, %r14d
0000000100016a7e	movl	$0x10, %edx
0000000100016a83	movl	$0x2f, %edi
0000000100016a88	movq	%rsi, %r12
0000000100016a8b	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
0000000100016a90	testq	%rax, %rax
0000000100016a93	jne	0x100016aae
0000000100016a95	movl	$0x10, %edx
0000000100016a9a	movl	$0x20, %edi
0000000100016a9f	movq	%r12, %rsi
0000000100016aa2	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
0000000100016aa7	testq	%rax, %rax
0000000100016aaa	cmoveq	%r14, %rdx
0000000100016aae	leaq	0x31cf3(%rip), %r8
0000000100016ab5	movl	$0x10, %ecx
0000000100016aba	xorl	%edi, %edi
0000000100016abc	movq	%rdx, %rsi
0000000100016abf	movq	%r12, %rdx
0000000100016ac2	callq	__ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h87de40a7f599f31eE ## _$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$::index::h87de40a7f599f31e
0000000100016ac7	movq	-0x30(%rbp), %rcx
0000000100016acb	movq	$0x0, (%rbx)
0000000100016ad2	movq	%rcx, 0x8(%rbx)
0000000100016ad6	movq	%rax, 0x10(%rbx)
0000000100016ada	movq	%rdx, 0x18(%rbx)
0000000100016ade	movq	%r15, 0x20(%rbx)
0000000100016ae2	movq	%r13, 0x28(%rbx)
0000000100016ae6	jmp	0x1000168f7
0000000100016aeb	movl	$0x24, %eax
0000000100016af0	leaq	0x2d870(%rip), %rcx
0000000100016af7	jmp	0x100016974
0000000100016afc	nopl	(%rax)
__ZN6object4read7archive23parse_bsd_extended_name17h572b68fe3dc234d0E:
0000000100016b00	pushq	%rbp
0000000100016b01	movq	%rsp, %rbp
0000000100016b04	pushq	%r15
0000000100016b06	pushq	%r14
0000000100016b08	pushq	%r13
0000000100016b0a	pushq	%r12
0000000100016b0c	pushq	%rbx
0000000100016b0d	pushq	%rax
0000000100016b0e	movq	%r9, %r13
0000000100016b11	movq	%r8, %r15
0000000100016b14	movq	%rcx, %rbx
0000000100016b17	movq	%rdx, %r14
0000000100016b1a	movl	$0xa, %edx
0000000100016b1f	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
0000000100016b24	testq	%rax, %rax
0000000100016b27	je	0x100016b7f
0000000100016b29	movq	%rdx, %r12
0000000100016b2c	movq	(%r13), %rax
0000000100016b30	subq	%rdx, %rax
0000000100016b33	jb	0x100016b7f
0000000100016b35	movq	%rax, (%r13)
0000000100016b39	movq	(%r15), %r13
0000000100016b3c	movq	%r14, %rdi
0000000100016b3f	movq	%rbx, %rsi
0000000100016b42	movq	%r13, %rdx
0000000100016b45	movq	%r12, %rcx
0000000100016b48	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
0000000100016b4d	testq	%rax, %rax
0000000100016b50	je	0x100016b7f
0000000100016b52	movq	%rax, %rbx
0000000100016b55	movq	%rdx, %r14
0000000100016b58	addq	%r12, %r13
0000000100016b5b	movq	%r13, (%r15)
0000000100016b5e	testq	%rdx, %rdx
0000000100016b61	je	0x100016b96
0000000100016b63	xorl	%edi, %edi
0000000100016b65	movq	%rbx, %rsi
0000000100016b68	movq	%r14, %rdx
0000000100016b6b	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
0000000100016b70	testq	%rax, %rax
0000000100016b73	je	0x100016b81
0000000100016b75	cmpq	%r14, %rdx
0000000100016b78	ja	0x100016b9b
0000000100016b7a	movq	%rdx, %r14
0000000100016b7d	jmp	0x100016b81
0000000100016b7f	xorl	%ebx, %ebx
0000000100016b81	movq	%rbx, %rax
0000000100016b84	movq	%r14, %rdx
0000000100016b87	addq	$0x8, %rsp
0000000100016b8b	popq	%rbx
0000000100016b8c	popq	%r12
0000000100016b8e	popq	%r13
0000000100016b90	popq	%r14
0000000100016b92	popq	%r15
0000000100016b94	popq	%rbp
0000000100016b95	retq
0000000100016b96	xorl	%r14d, %r14d
0000000100016b99	jmp	0x100016b81
0000000100016b9b	leaq	0x31c1e(%rip), %rax
0000000100016ba2	movq	%rdx, %rdi
0000000100016ba5	movq	%r14, %rsi
0000000100016ba8	movq	%rax, %rdx
0000000100016bab	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
__ZN70_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hce5481c21441c8d7E:
0000000100016bb0	pushq	%rbp
0000000100016bb1	movq	%rsp, %rbp
0000000100016bb4	subq	$0x10, %rsp
0000000100016bb8	movq	%rsi, %rax
0000000100016bbb	cmpq	$0x0, (%rdi)
0000000100016bbf	je	0x100016bde
0000000100016bc1	movq	%rdi, -0x8(%rbp)
0000000100016bc5	leaq	0x2d805(%rip), %rsi
0000000100016bcc	leaq	0x31c25(%rip), %r8
0000000100016bd3	leaq	-0x8(%rbp), %rcx
0000000100016bd7	movl	$0x3, %edx
0000000100016bdc	jmp	0x100016bf9
0000000100016bde	movq	%rdi, -0x8(%rbp)
0000000100016be2	leaq	0x2d7e6(%rip), %rsi
0000000100016be9	leaq	0x31be8(%rip), %r8
0000000100016bf0	leaq	-0x8(%rbp), %rcx
0000000100016bf4	movl	$0x2, %edx
0000000100016bf9	movq	%rax, %rdi
0000000100016bfc	callq	__ZN4core3fmt9Formatter25debug_tuple_field1_finish17h2bdcaa91cff1015bE ## core::fmt::Formatter::debug_tuple_field1_finish::h2bdcaa91cff1015b
0000000100016c01	addq	$0x10, %rsp
0000000100016c05	popq	%rbp
0000000100016c06	retq
0000000100016c07	nopw	(%rax,%rax)
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e2b32ebe9794e26E:
0000000100016c10	pushq	%rbp
0000000100016c11	movq	%rsp, %rbp
0000000100016c14	testq	%rsi, %rsi
0000000100016c17	je	0x100016c2b
0000000100016c19	imulq	$0x218, %rsi, %rsi              ## imm = 0x218
0000000100016c20	movl	$0x8, %edx
0000000100016c25	popq	%rbp
0000000100016c26	jmp	___rust_dealloc
0000000100016c2b	popq	%rbp
0000000100016c2c	retq
0000000100016c2d	nopl	(%rax)
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E:
0000000100016c30	pushq	%rbp
0000000100016c31	movq	%rsp, %rbp
0000000100016c34	movq	%rsi, %rax
0000000100016c37	movq	0x8(%rsi), %rsi
0000000100016c3b	testq	%rsi, %rsi
0000000100016c3e	je	0x100016c4a
0000000100016c40	movq	0x10(%rax), %rdx
0000000100016c44	popq	%rbp
0000000100016c45	jmp	___rust_dealloc
0000000100016c4a	popq	%rbp
0000000100016c4b	retq
0000000100016c4c	nopl	(%rax)
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E:
0000000100016c50	pushq	%rbp
0000000100016c51	movq	%rsp, %rbp
0000000100016c54	movl	$0x18, %esi
0000000100016c59	movl	$0x8, %edx
0000000100016c5e	popq	%rbp
0000000100016c5f	jmp	___rust_dealloc
0000000100016c64	nopw	%cs:(%rax,%rax)
0000000100016c6e	nop
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h953d96a85387b32fE:
0000000100016c70	pushq	%rbp
0000000100016c71	movq	%rsp, %rbp
0000000100016c74	testq	%rsi, %rsi
0000000100016c77	je	0x100016c8b
0000000100016c79	imulq	$0x248, %rsi, %rsi              ## imm = 0x248
0000000100016c80	movl	$0x8, %edx
0000000100016c85	popq	%rbp
0000000100016c86	jmp	___rust_dealloc
0000000100016c8b	popq	%rbp
0000000100016c8c	retq
0000000100016c8d	nopl	(%rax)
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbe65bc4eb4aba103E:
0000000100016c90	pushq	%rbp
0000000100016c91	movq	%rsp, %rbp
0000000100016c94	testq	%rsi, %rsi
0000000100016c97	je	0x100016cab
0000000100016c99	imulq	$0x1b0, %rsi, %rsi              ## imm = 0x1B0
0000000100016ca0	movl	$0x8, %edx
0000000100016ca5	popq	%rbp
0000000100016ca6	jmp	___rust_dealloc
0000000100016cab	popq	%rbp
0000000100016cac	retq
0000000100016cad	nopl	(%rax)
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc41a4999f22d4ed3E:
0000000100016cb0	pushq	%rbp
0000000100016cb1	movq	%rsp, %rbp
0000000100016cb4	movl	$0x1b0, %esi                    ## imm = 0x1B0
0000000100016cb9	movl	$0x8, %edx
0000000100016cbe	popq	%rbp
0000000100016cbf	jmp	___rust_dealloc
0000000100016cc4	nopw	%cs:(%rax,%rax)
0000000100016cce	nop
__ZN90_$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf46c163ce8dfe888E:
0000000100016cd0	pushq	%rbp
0000000100016cd1	movq	%rsp, %rbp
0000000100016cd4	movq	(%rsi), %rax
0000000100016cd7	leaq	0x52(%rip), %rcx
0000000100016cde	movslq	(%rcx,%rax,4), %rdx
0000000100016ce2	addq	%rcx, %rdx
0000000100016ce5	jmpq	*%rdx
0000000100016ce7	movq	0x8(%rsi), %rcx
0000000100016ceb	movq	%rcx, 0x8(%rdi)
0000000100016cef	movq	%rax, (%rdi)
0000000100016cf2	popq	%rbp
0000000100016cf3	retq
0000000100016cf4	movzbl	0x8(%rsi), %ecx
0000000100016cf8	movb	%cl, 0x8(%rdi)
0000000100016cfb	movq	%rax, (%rdi)
0000000100016cfe	popq	%rbp
0000000100016cff	retq
0000000100016d00	movq	0x8(%rsi), %rcx
0000000100016d04	movq	0x10(%rsi), %rdx
0000000100016d08	movq	%rcx, 0x8(%rdi)
0000000100016d0c	movq	%rdx, 0x10(%rdi)
0000000100016d10	movq	%rax, (%rdi)
0000000100016d13	popq	%rbp
0000000100016d14	retq
0000000100016d15	movzwl	0x8(%rsi), %ecx
0000000100016d19	movw	%cx, 0x8(%rdi)
0000000100016d1d	movq	%rax, (%rdi)
0000000100016d20	popq	%rbp
0000000100016d21	retq
0000000100016d22	movl	0x8(%rsi), %ecx
0000000100016d25	movl	%ecx, 0x8(%rdi)
0000000100016d28	movq	%rax, (%rdi)
0000000100016d2b	popq	%rbp
0000000100016d2c	retq
0000000100016d2d	nopl	(%rax)
0000000100016d30	movb	$-0x1, %bh
0000000100016d32	.byte 0xff #bad opcode
0000000100016d33	callq	*%rax
0000000100016d35	.byte 0xff #bad opcode
0000000100016d36	.byte 0xff #bad opcode
0000000100016d37	incl	%esp
0000000100016d39	.byte 0xff #bad opcode
0000000100016d3a	.byte 0xff #bad opcode
0000000100016d3b	jmpq	*%rbp
0000000100016d3d	.byte 0xff #bad opcode
0000000100016d3e	.byte 0xff #bad opcode
0000000100016d3f	pushq	%rdx
0000000100016d41	.byte 0xff #bad opcode
0000000100016d42	.byte 0xff #bad opcode
0000000100016d43	pushq	-0x48000001(%rdi)
0000000100016d49	.byte 0xff #bad opcode
0000000100016d4a	.byte 0xff #bad opcode
0000000100016d4b	pushq	-0x2f000001(%rdi)
0000000100016d51	.byte 0xff #bad opcode
0000000100016d52	.byte 0xff #bad opcode
0000000100016d53	incl	%esp
0000000100016d55	.byte 0xff #bad opcode
0000000100016d56	.byte 0xff #bad opcode
0000000100016d57	pushq	-0x48000001(%rdi)
0000000100016d5d	.byte 0xff #bad opcode
0000000100016d5e	.byte 0xff #bad opcode
0000000100016d5f	pushq	-0x48000001(%rdi)
0000000100016d65	.byte 0xff #bad opcode
0000000100016d66	.byte 0xff #bad opcode
0000000100016d67	pushq	-0x48000001(%rdi)
0000000100016d6d	.byte 0xff #bad opcode
0000000100016d6e	.byte 0xff #bad opcode
0000000100016d6f	pushq	-0x48000001(%rdi)
0000000100016d75	.byte 0xff #bad opcode
0000000100016d76	.byte 0xff #bad opcode
0000000100016d77	pushq	-0x48000001(%rdi)
0000000100016d7d	.byte 0xff #bad opcode
0000000100016d7e	.byte 0xff #bad opcode
0000000100016d7f	pushq	-0x48000001(%rdi)
0000000100016d85	.byte 0xff #bad opcode
0000000100016d86	.byte 0xff #bad opcode
0000000100016d87	pushq	-0x48000001(%rdi)
0000000100016d8d	.byte 0xff #bad opcode
0000000100016d8e	.byte 0xff #bad opcode
0000000100016d8f	pushq	-0x48000001(%rdi)
0000000100016d95	.byte 0xff #bad opcode
0000000100016d96	.byte 0xff #bad opcode
0000000100016d97	pushq	-0x48000001(%rdi)
0000000100016d9d	.byte 0xff #bad opcode
0000000100016d9e	.byte 0xff #bad opcode
0000000100016d9f	pushq	-0x48000001(%rdi)
0000000100016da5	.byte 0xff #bad opcode
0000000100016da6	.byte 0xff #bad opcode
0000000100016da7	pushq	-0x2f000001(%rdi)
0000000100016dad	.byte 0xff #bad opcode
0000000100016dae	.byte 0xff #bad opcode
0000000100016daf	incl	%esp
0000000100016db1	.byte 0xff #bad opcode
0000000100016db2	.byte 0xff #bad opcode
0000000100016db3	incl	%esp
0000000100016db5	.byte 0xff #bad opcode
0000000100016db6	.byte 0xff #bad opcode
0000000100016db7	incl	%esp
0000000100016db9	.byte 0xff #bad opcode
0000000100016dba	.byte 0xff #bad opcode
0000000100016dbb	incl	%esp
0000000100016dbd	.byte 0xff #bad opcode
0000000100016dbe	.byte 0xff #bad opcode
0000000100016dbf	incl	%esp
0000000100016dc1	.byte 0xff #bad opcode
0000000100016dc2	.byte 0xff #bad opcode
0000000100016dc3	incl	%esp
0000000100016dc5	.byte 0xff #bad opcode
0000000100016dc6	.byte 0xff #bad opcode
0000000100016dc7	jmpq	*%rbp
0000000100016dc9	.byte 0xff #bad opcode
0000000100016dca	.byte 0xff #bad opcode
0000000100016dcb	pushq	-0x3b000001(%rdi)
0000000100016dd1	.byte 0xff #bad opcode
0000000100016dd2	.byte 0xff #bad opcode
0000000100016dd3	incl	%esp
0000000100016dd5	.byte 0xff #bad opcode
0000000100016dd6	.byte 0xff #bad opcode
0000000100016dd7	incl	%esp
0000000100016dd9	.byte 0xff #bad opcode
0000000100016dda	.byte 0xff #bad opcode
0000000100016ddb	incl	%esp
0000000100016ddd	.byte 0xff #bad opcode
0000000100016dde	.byte 0xff #bad opcode
0000000100016ddf	pushq	-0x48000001(%rdi)
0000000100016de5	.byte 0xff #bad opcode
0000000100016de6	.byte 0xff #bad opcode
0000000100016de7	decl	(%rdi)
0000000100016de9	.byte 0x1f #bad opcode
0000000100016dea	testb	%al, (%rax)
0000000100016dec	addb	%al, (%rax)
0000000100016dee	addb	%al, (%rax)
__ZN93_$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h667fbe8abcedc734E:
0000000100016df0	pushq	%rbp
0000000100016df1	movq	%rsp, %rbp
0000000100016df4	pushq	%r15
0000000100016df6	pushq	%r14
0000000100016df8	pushq	%r13
0000000100016dfa	pushq	%r12
0000000100016dfc	pushq	%rbx
0000000100016dfd	subq	$0xb8, %rsp
0000000100016e04	movq	%rsi, %r12
0000000100016e07	movq	%rdi, %r15
0000000100016e0a	movabsq	$0x2000000000000000, %rax       ## imm = 0x2000000000000000
0000000100016e14	movl	0xe8(%rsi), %r8d
0000000100016e1b	movups	0xc0(%rsi), %xmm0
0000000100016e22	movq	0xd0(%rsi), %r9
0000000100016e29	movzbl	0xf1(%rsi), %edx
0000000100016e30	movq	0x40(%rsi), %rsi
0000000100016e34	movq	0x48(%r12), %rdi
0000000100016e39	movq	0x50(%r12), %rbx
0000000100016e3e	movq	0x60(%r12), %rcx
0000000100016e43	testq	%rcx, %rcx
0000000100016e46	movq	%rcx, -0x50(%rbp)
0000000100016e4a	movb	%dl, -0x29(%rbp)
0000000100016e4d	movq	%rsi, -0x80(%rbp)
0000000100016e51	movq	%rdi, -0x78(%rbp)
0000000100016e55	movl	%r8d, -0x54(%rbp)
0000000100016e59	movaps	%xmm0, -0xc0(%rbp)
0000000100016e60	movq	%r9, -0x98(%rbp)
0000000100016e67	je	0x100016eaa
0000000100016e69	xorl	%r13d, %r13d
0000000100016e6c	cmpq	%rax, %rcx
0000000100016e6f	setb	%al
0000000100016e72	jae	0x100017212
0000000100016e78	leaq	(,%rcx,4), %r14
0000000100016e80	movb	%al, %r13b
0000000100016e83	addq	%r13, %r13
0000000100016e86	testq	%r14, %r14
0000000100016e89	je	0x100016eb4
0000000100016e8b	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100016e92	movzbl	(%rax), %eax
0000000100016e95	movq	%r14, %rdi
0000000100016e98	movq	%r13, %rsi
0000000100016e9b	callq	___rust_alloc
0000000100016ea0	testq	%rax, %rax
0000000100016ea3	jne	0x100016ec0
0000000100016ea5	jmp	0x100017217
0000000100016eaa	movl	$0x2, %eax
0000000100016eaf	xorl	%r14d, %r14d
0000000100016eb2	jmp	0x100016ec0
0000000100016eb4	movq	%r13, %rax
0000000100016eb7	testq	%rax, %rax
0000000100016eba	je	0x100017217
0000000100016ec0	movq	%rax, -0x48(%rbp)
0000000100016ec4	movq	%rax, %rdi
0000000100016ec7	movq	%rbx, %rsi
0000000100016eca	movq	%r14, %rdx
0000000100016ecd	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100016ed2	movq	0x68(%r12), %rbx
0000000100016ed7	movq	0x78(%r12), %rcx
0000000100016edc	testq	%rcx, %rcx
0000000100016edf	movq	%rcx, -0x40(%rbp)
0000000100016ee3	je	0x100016f35
0000000100016ee5	movabsq	$0x555555555555556, %rax        ## imm = 0x555555555555556
0000000100016eef	xorl	%r13d, %r13d
0000000100016ef2	cmpq	%rax, %rcx
0000000100016ef5	setb	%al
0000000100016ef8	jae	0x100017222
0000000100016efe	leaq	(,%rcx,8), %rcx
0000000100016f06	movb	%al, %r13b
0000000100016f09	shlq	$0x3, %r13
0000000100016f0d	leaq	(%rcx,%rcx,2), %r14
0000000100016f11	testq	%r14, %r14
0000000100016f14	je	0x100016f3f
0000000100016f16	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100016f1d	movzbl	(%rax), %eax
0000000100016f20	movq	%r14, %rdi
0000000100016f23	movq	%r13, %rsi
0000000100016f26	callq	___rust_alloc
0000000100016f2b	testq	%rax, %rax
0000000100016f2e	jne	0x100016f4b
0000000100016f30	jmp	0x100017229
0000000100016f35	movl	$0x8, %eax
0000000100016f3a	xorl	%r14d, %r14d
0000000100016f3d	jmp	0x100016f4b
0000000100016f3f	movq	%r13, %rax
0000000100016f42	testq	%rax, %rax
0000000100016f45	je	0x100017229
0000000100016f4b	movq	%rax, -0x70(%rbp)
0000000100016f4f	movq	%rax, %rdi
0000000100016f52	movq	%rbx, %rsi
0000000100016f55	movq	%r14, %rdx
0000000100016f58	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100016f5d	movq	0x80(%r12), %rbx
0000000100016f65	movq	0x90(%r12), %rcx
0000000100016f6d	testq	%rcx, %rcx
0000000100016f70	movq	%rcx, -0x68(%rbp)
0000000100016f74	je	0x100016fc1
0000000100016f76	xorl	%r13d, %r13d
0000000100016f79	movabsq	$0x2000000000000000, %rax       ## imm = 0x2000000000000000
0000000100016f83	cmpq	%rax, %rcx
0000000100016f86	setb	%al
0000000100016f89	jae	0x100017236
0000000100016f8f	leaq	(,%rcx,4), %r14
0000000100016f97	movb	%al, %r13b
0000000100016f9a	addq	%r13, %r13
0000000100016f9d	testq	%r14, %r14
0000000100016fa0	je	0x100016fcb
0000000100016fa2	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100016fa9	movzbl	(%rax), %eax
0000000100016fac	movq	%r14, %rdi
0000000100016faf	movq	%r13, %rsi
0000000100016fb2	callq	___rust_alloc
0000000100016fb7	testq	%rax, %rax
0000000100016fba	jne	0x100016fd7
0000000100016fbc	jmp	0x10001723d
0000000100016fc1	movl	$0x2, %eax
0000000100016fc6	xorl	%r14d, %r14d
0000000100016fc9	jmp	0x100016fd7
0000000100016fcb	movq	%r13, %rax
0000000100016fce	testq	%rax, %rax
0000000100016fd1	je	0x10001723d
0000000100016fd7	movq	%rax, -0x60(%rbp)
0000000100016fdb	movq	%rax, %rdi
0000000100016fde	movq	%rbx, %rsi
0000000100016fe1	movq	%r14, %rdx
0000000100016fe4	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100016fe9	movq	0x98(%r12), %rsi
0000000100016ff1	movq	0xa8(%r12), %rbx
0000000100016ff9	testq	%rbx, %rbx
0000000100016ffc	je	0x10001704b
0000000100016ffe	xorl	%r13d, %r13d
0000000100017001	movq	%rbx, %rax
0000000100017004	shrq	$0x39, %rax
0000000100017008	sete	%al
000000010001700b	jne	0x10001724a
0000000100017011	movq	%rbx, %r14
0000000100017014	shlq	$0x6, %r14
0000000100017018	movb	%al, %r13b
000000010001701b	shlq	$0x3, %r13
000000010001701f	testq	%r14, %r14
0000000100017022	je	0x100017055
0000000100017024	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010001702b	movzbl	(%rax), %eax
000000010001702e	movq	%r14, %rdi
0000000100017031	movq	%rsi, -0x38(%rbp)
0000000100017035	movq	%r13, %rsi
0000000100017038	callq	___rust_alloc
000000010001703d	movq	-0x38(%rbp), %rsi
0000000100017041	testq	%rax, %rax
0000000100017044	jne	0x100017061
0000000100017046	jmp	0x100017251
000000010001704b	movl	$0x8, %eax
0000000100017050	xorl	%r14d, %r14d
0000000100017053	jmp	0x100017061
0000000100017055	movq	%r13, %rax
0000000100017058	testq	%rax, %rax
000000010001705b	je	0x100017251
0000000100017061	movq	%rax, -0x38(%rbp)
0000000100017065	movq	%rax, %rdi
0000000100017068	movq	%r14, %rdx
000000010001706b	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100017070	movq	0xb0(%r12), %r14
0000000100017078	movq	0xb8(%r12), %r13
0000000100017080	movq	0xd8(%r12), %rax
0000000100017088	movq	%rax, -0x90(%rbp)
000000010001708f	movq	0xe0(%r12), %rax
0000000100017097	movq	%rax, -0x88(%rbp)
000000010001709e	cmpl	$0x2e, (%r12)
00000001000170a3	jne	0x1000170ac
00000001000170a5	movl	$0x2e, %ecx
00000001000170aa	jmp	0x1000170ef
00000001000170ac	leaq	-0xd8(%rbp), %rdi
00000001000170b3	movq	%r12, %rsi
00000001000170b6	callq	__ZN90_$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf46c163ce8dfe888E ## _$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::hf46c163ce8dfe888
00000001000170bb	movups	0x18(%r12), %xmm1
00000001000170c1	movq	0x28(%r12), %rax
00000001000170c6	movups	0x30(%r12), %xmm0
00000001000170cc	movq	-0xd8(%rbp), %rcx
00000001000170d3	movq	-0xd0(%rbp), %rdx
00000001000170da	movq	%rdx, -0xa8(%rbp)
00000001000170e1	movq	-0xc8(%rbp), %rdx
00000001000170e8	movq	%rdx, -0xa0(%rbp)
00000001000170ef	movq	-0x50(%rbp), %rsi
00000001000170f3	movq	-0x48(%rbp), %rdi
00000001000170f7	movq	-0x40(%rbp), %r8
00000001000170fb	movzbl	-0x29(%rbp), %r9d
0000000100017100	movq	-0x80(%rbp), %r10
0000000100017104	movq	-0x78(%rbp), %r11
0000000100017108	movaps	-0xc0(%rbp), %xmm2
000000010001710f	movl	-0x54(%rbp), %edx
0000000100017112	movl	%edx, 0xe8(%r15)
0000000100017119	movups	%xmm2, 0xc0(%r15)
0000000100017121	movq	-0x98(%rbp), %rdx
0000000100017128	movq	%rdx, 0xd0(%r15)
000000010001712f	movl	0xec(%r12), %edx
0000000100017137	movl	%edx, 0xec(%r15)
000000010001713e	movzbl	0xf0(%r12), %edx
0000000100017147	movb	%dl, 0xf0(%r15)
000000010001714e	movb	%r9b, 0xf1(%r15)
0000000100017155	movq	%r10, 0x40(%r15)
0000000100017159	movq	%r11, 0x48(%r15)
000000010001715d	movq	%rdi, 0x50(%r15)
0000000100017161	movq	%rsi, 0x58(%r15)
0000000100017165	movq	%rsi, 0x60(%r15)
0000000100017169	movq	-0x70(%rbp), %rdx
000000010001716d	movq	%rdx, 0x68(%r15)
0000000100017171	movq	%r8, 0x70(%r15)
0000000100017175	movq	%r8, 0x78(%r15)
0000000100017179	movq	-0x60(%rbp), %rdx
000000010001717d	movq	%rdx, 0x80(%r15)
0000000100017184	movq	-0x68(%rbp), %rdx
0000000100017188	movq	%rdx, 0x88(%r15)
000000010001718f	movq	%rdx, 0x90(%r15)
0000000100017196	movq	-0x38(%rbp), %rdx
000000010001719a	movq	%rdx, 0x98(%r15)
00000001000171a1	movq	%rbx, 0xa0(%r15)
00000001000171a8	movq	%rbx, 0xa8(%r15)
00000001000171af	movq	%r14, 0xb0(%r15)
00000001000171b6	movq	%r13, 0xb8(%r15)
00000001000171bd	movq	-0x90(%rbp), %rdx
00000001000171c4	movq	%rdx, 0xd8(%r15)
00000001000171cb	movq	-0x88(%rbp), %rdx
00000001000171d2	movq	%rdx, 0xe0(%r15)
00000001000171d9	movq	%rcx, (%r15)
00000001000171dc	movq	-0xa0(%rbp), %rcx
00000001000171e3	movq	%rcx, 0x10(%r15)
00000001000171e7	movq	-0xa8(%rbp), %rcx
00000001000171ee	movq	%rcx, 0x8(%r15)
00000001000171f2	movups	%xmm1, 0x18(%r15)
00000001000171f7	movq	%rax, 0x28(%r15)
00000001000171fb	movups	%xmm0, 0x30(%r15)
0000000100017200	addq	$0xb8, %rsp
0000000100017207	popq	%rbx
0000000100017208	popq	%r12
000000010001720a	popq	%r13
000000010001720c	popq	%r14
000000010001720e	popq	%r15
0000000100017210	popq	%rbp
0000000100017211	retq
0000000100017212	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100017217	movq	%r13, %rdi
000000010001721a	movq	%r14, %rsi
000000010001721d	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100017222	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100017227	jmp	0x10001725c
0000000100017229	movq	%r13, %rdi
000000010001722c	movq	%r14, %rsi
000000010001722f	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100017234	jmp	0x10001725c
0000000100017236	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010001723b	jmp	0x10001725c
000000010001723d	movq	%r13, %rdi
0000000100017240	movq	%r14, %rsi
0000000100017243	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100017248	jmp	0x10001725c
000000010001724a	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010001724f	jmp	0x10001725c
0000000100017251	movq	%r13, %rdi
0000000100017254	movq	%r14, %rsi
0000000100017257	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001725c	ud2
000000010001725e	movq	%rax, %rbx
0000000100017261	movq	-0x60(%rbp), %rdi
0000000100017265	movq	-0x68(%rbp), %rsi
0000000100017269	callq	__ZN4core3ptr78drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$17h7ee9bd556cd3de62E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$::h7ee9bd556cd3de62
000000010001726e	jmp	0x100017273
0000000100017270	movq	%rax, %rbx
0000000100017273	movq	-0x70(%rbp), %rdi
0000000100017277	movq	-0x40(%rbp), %rsi
000000010001727b	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
0000000100017280	jmp	0x100017285
0000000100017282	movq	%rax, %rbx
0000000100017285	movq	-0x48(%rbp), %rdi
0000000100017289	movq	-0x50(%rbp), %rsi
000000010001728d	callq	__ZN4core3ptr78drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$17h7ee9bd556cd3de62E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..line..FileEntryFormat$GT$$GT$::h7ee9bd556cd3de62
0000000100017292	movq	%rbx, %rdi
0000000100017295	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001729a	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001729f	nop
__ZN9addr2line11render_file17h6caa0ddfd6657ac9E:
00000001000172a0	pushq	%rbp
00000001000172a1	movq	%rsp, %rbp
00000001000172a4	pushq	%r15
00000001000172a6	pushq	%r14
00000001000172a8	pushq	%r13
00000001000172aa	pushq	%r12
00000001000172ac	pushq	%rbx
00000001000172ad	subq	$0x88, %rsp
00000001000172b4	movq	%r8, -0x70(%rbp)
00000001000172b8	movq	%rcx, %r14
00000001000172bb	movq	%rsi, %r15
00000001000172be	movq	%rdi, -0x60(%rbp)
00000001000172c2	movq	0x170(%rsi), %rsi
00000001000172c9	testq	%rsi, %rsi
00000001000172cc	je	0x100017307
00000001000172ce	movq	%rdx, -0x68(%rbp)
00000001000172d2	movq	0x178(%r15), %rdx
00000001000172d9	leaq	-0x58(%rbp), %rdi
00000001000172dd	callq	__ZN5alloc6string6String15from_utf8_lossy17hf6cd95066e5242f9E ## alloc::string::String::from_utf8_lossy::hf6cd95066e5242f9
00000001000172e2	movq	-0x58(%rbp), %rax
00000001000172e6	movq	-0x50(%rbp), %r12
00000001000172ea	movq	-0x48(%rbp), %r13
00000001000172ee	testq	%rax, %rax
00000001000172f1	je	0x100017330
00000001000172f3	movq	%rax, -0x40(%rbp)
00000001000172f7	movq	%r12, -0x38(%rbp)
00000001000172fb	movq	%r13, -0x30(%rbp)
00000001000172ff	movq	%r12, %r13
0000000100017302	jmp	0x100017390
0000000100017307	movq	$0x1, -0x40(%rbp)
000000010001730f	movq	$0x0, -0x38(%rbp)
0000000100017317	movq	$0x0, -0x30(%rbp)
000000010001731f	xorl	%r13d, %r13d
0000000100017322	movq	0x18(%rdx), %rax
0000000100017326	testq	%rax, %rax
0000000100017329	jne	0x10001739d
000000010001732b	jmp	0x1000173ea
0000000100017330	testq	%r13, %r13
0000000100017333	je	0x100017371
0000000100017335	setns	%al
0000000100017338	js	0x100017594
000000010001733e	movzbl	%al, %esi
0000000100017341	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100017348	movzbl	(%rax), %eax
000000010001734b	movq	%r13, %rdi
000000010001734e	movq	%rsi, -0x90(%rbp)
0000000100017355	callq	___rust_alloc
000000010001735a	movq	%rax, %rbx
000000010001735d	testq	%rax, %rax
0000000100017360	jne	0x100017376
0000000100017362	movq	-0x90(%rbp), %rdi
0000000100017369	movq	%r13, %rsi
000000010001736c	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100017371	movl	$0x1, %ebx
0000000100017376	movq	%rbx, %rdi
0000000100017379	movq	%r12, %rsi
000000010001737c	movq	%r13, %rdx
000000010001737f	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100017384	movq	%rbx, -0x40(%rbp)
0000000100017388	movq	%r13, -0x38(%rbp)
000000010001738c	movq	%r13, -0x30(%rbp)
0000000100017390	movq	-0x68(%rbp), %rdx
0000000100017394	movq	0x18(%rdx), %rax
0000000100017398	testq	%rax, %rax
000000010001739b	je	0x1000173ea
000000010001739d	cmpw	$0x5, 0xea(%r14)
00000001000173a6	jae	0x1000173b3
00000001000173a8	decq	%rax
00000001000173ab	cmpq	0x78(%r14), %rax
00000001000173af	jb	0x1000173b9
00000001000173b1	jmp	0x1000173ea
00000001000173b3	cmpq	%rax, 0x78(%r14)
00000001000173b7	jbe	0x1000173ea
00000001000173b9	movq	0x68(%r14), %rcx
00000001000173bd	testq	%rcx, %rcx
00000001000173c0	je	0x1000173ea
00000001000173c2	movq	%rdx, %rbx
00000001000173c5	leaq	(%rax,%rax,2), %rax
00000001000173c9	leaq	(%rcx,%rax,8), %rsi
00000001000173cd	leaq	-0x88(%rbp), %rdi
00000001000173d4	callq	__ZN90_$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf46c163ce8dfe888E ## _$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::hf46c163ce8dfe888
00000001000173d9	cmpq	$0x2e, -0x88(%rbp)
00000001000173e1	movq	%rbx, %rdx
00000001000173e4	jne	0x1000174c8
00000001000173ea	leaq	-0x58(%rbp), %rbx
00000001000173ee	movq	%rbx, %rdi
00000001000173f1	movq	%rdx, %rsi
00000001000173f4	callq	__ZN90_$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf46c163ce8dfe888E ## _$LT$gimli..read..unit..AttributeValue$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::hf46c163ce8dfe888
00000001000173f9	movq	0x188(%r15), %rcx
0000000100017400	movzbl	0x49(%r15), %edx
0000000100017405	leaq	-0x88(%rbp), %rdi
000000010001740c	movq	-0x70(%rbp), %rsi
0000000100017410	movq	%rbx, %r8
0000000100017413	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
0000000100017418	cmpq	$0x0, -0x88(%rbp)
0000000100017420	movq	-0x80(%rbp), %rsi
0000000100017424	movq	-0x78(%rbp), %rdx
0000000100017428	je	0x100017459
000000010001742a	movq	-0x60(%rbp), %rax
000000010001742e	movq	%rsi, 0x8(%rax)
0000000100017432	movq	%rdx, 0x10(%rax)
0000000100017436	movq	$0x0, (%rax)
000000010001743d	movq	-0x38(%rbp), %r13
0000000100017441	testq	%r13, %r13
0000000100017444	je	0x1000174b6
0000000100017446	movq	-0x40(%rbp), %rdi
000000010001744a	movl	$0x1, %edx
000000010001744f	movq	%r13, %rsi
0000000100017452	callq	___rust_dealloc
0000000100017457	jmp	0x1000174b6
0000000100017459	leaq	-0x58(%rbp), %rdi
000000010001745d	callq	__ZN5alloc6string6String15from_utf8_lossy17hf6cd95066e5242f9E ## alloc::string::String::from_utf8_lossy::hf6cd95066e5242f9
0000000100017462	movq	-0x58(%rbp), %r15
0000000100017466	movq	-0x50(%rbp), %r14
000000010001746a	movq	-0x48(%rbp), %rdx
000000010001746e	testq	%r15, %r15
0000000100017471	movq	%r15, %rsi
0000000100017474	cmoveq	%r14, %rsi
0000000100017478	leaq	-0x40(%rbp), %rdi
000000010001747c	callq	__ZN9addr2line9path_push17h6b012d3e24b83295E ## addr2line::path_push::h6b012d3e24b83295
0000000100017481	testq	%r15, %r15
0000000100017484	je	0x10001749b
0000000100017486	testq	%r14, %r14
0000000100017489	je	0x10001749b
000000010001748b	movl	$0x1, %edx
0000000100017490	movq	%r15, %rdi
0000000100017493	movq	%r14, %rsi
0000000100017496	callq	___rust_dealloc
000000010001749b	movq	-0x30(%rbp), %rax
000000010001749f	movq	-0x60(%rbp), %rdx
00000001000174a3	movq	%rax, 0x10(%rdx)
00000001000174a7	movq	-0x40(%rbp), %rax
00000001000174ab	movq	-0x38(%rbp), %rcx
00000001000174af	movq	%rcx, 0x8(%rdx)
00000001000174b3	movq	%rax, (%rdx)
00000001000174b6	addq	$0x88, %rsp
00000001000174bd	popq	%rbx
00000001000174be	popq	%r12
00000001000174c0	popq	%r13
00000001000174c2	popq	%r14
00000001000174c4	popq	%r15
00000001000174c6	popq	%rbp
00000001000174c7	retq
00000001000174c8	movq	%rdx, %rbx
00000001000174cb	movq	-0x78(%rbp), %rax
00000001000174cf	movq	%rax, -0x98(%rbp)
00000001000174d6	movq	-0x88(%rbp), %rax
00000001000174dd	movq	-0x80(%rbp), %rcx
00000001000174e1	movq	%rcx, -0xa0(%rbp)
00000001000174e8	movq	%rax, -0xa8(%rbp)
00000001000174ef	movq	0x188(%r15), %rcx
00000001000174f6	movzbl	0x49(%r15), %edx
00000001000174fb	leaq	-0x58(%rbp), %rdi
00000001000174ff	leaq	-0xa8(%rbp), %r8
0000000100017506	movq	-0x70(%rbp), %rsi
000000010001750a	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
000000010001750f	cmpq	$0x0, -0x58(%rbp)
0000000100017514	movq	-0x50(%rbp), %rsi
0000000100017518	movq	-0x48(%rbp), %rdx
000000010001751c	je	0x10001753f
000000010001751e	movq	-0x60(%rbp), %rax
0000000100017522	movq	%rsi, 0x8(%rax)
0000000100017526	movq	%rdx, 0x10(%rax)
000000010001752a	movq	$0x0, (%rax)
0000000100017531	testq	%r13, %r13
0000000100017534	jne	0x100017446
000000010001753a	jmp	0x1000174b6
000000010001753f	leaq	-0x58(%rbp), %rdi
0000000100017543	callq	__ZN5alloc6string6String15from_utf8_lossy17hf6cd95066e5242f9E ## alloc::string::String::from_utf8_lossy::hf6cd95066e5242f9
0000000100017548	movq	-0x58(%rbp), %r12
000000010001754c	movq	-0x50(%rbp), %r14
0000000100017550	movq	-0x48(%rbp), %rdx
0000000100017554	testq	%r12, %r12
0000000100017557	movq	%r12, %rsi
000000010001755a	cmoveq	%r14, %rsi
000000010001755e	leaq	-0x40(%rbp), %rdi
0000000100017562	callq	__ZN9addr2line9path_push17h6b012d3e24b83295E ## addr2line::path_push::h6b012d3e24b83295
0000000100017567	testq	%r12, %r12
000000010001756a	movq	%rbx, %rdx
000000010001756d	je	0x1000173ea
0000000100017573	testq	%r14, %r14
0000000100017576	je	0x1000173ea
000000010001757c	movl	$0x1, %edx
0000000100017581	movq	%r12, %rdi
0000000100017584	movq	%r14, %rsi
0000000100017587	callq	___rust_dealloc
000000010001758c	movq	%rbx, %rdx
000000010001758f	jmp	0x1000173ea
0000000100017594	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100017599	movq	%rax, %rbx
000000010001759c	movq	%r12, %rdi
000000010001759f	jmp	0x1000175a9
00000001000175a1	jmp	0x1000175b3
00000001000175a3	movq	%rax, %rbx
00000001000175a6	movq	%r15, %rdi
00000001000175a9	movq	%r14, %rsi
00000001000175ac	callq	__ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h2ceb93c56e0c66b8E ## core::ptr::drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$::h2ceb93c56e0c66b8
00000001000175b1	jmp	0x1000175b6
00000001000175b3	movq	%rax, %rbx
00000001000175b6	leaq	-0x40(%rbp), %rdi
00000001000175ba	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
00000001000175bf	movq	%rbx, %rdi
00000001000175c2	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000175c7	nopw	(%rax,%rax)
__ZN9addr2line16Context$LT$R$GT$9find_unit17h6f79f3fa12b4b7a6E:
00000001000175d0	pushq	%rbp
00000001000175d1	movq	%rsp, %rbp
00000001000175d4	pushq	%rbx
00000001000175d5	subq	$0x18, %rsp
00000001000175d9	movq	%rsi, %rax
00000001000175dc	testb	%cl, %cl
00000001000175de	je	0x100017699
00000001000175e4	movzbl	%cl, %ecx
00000001000175e7	cmpl	$0x1, %ecx
00000001000175ea	jne	0x100017753
00000001000175f0	movq	0x30(%rax), %rsi
00000001000175f4	testq	%rsi, %rsi
00000001000175f7	je	0x100017753
00000001000175fd	movq	0x28(%rax), %rcx
0000000100017601	xorl	%eax, %eax
0000000100017603	movl	$0xff, %r8d
0000000100017609	movq	%rsi, %r9
000000010001760c	movq	%rsi, %r10
000000010001760f	jmp	0x100017628
0000000100017611	nopw	%cs:(%rax,%rax)
000000010001761b	nopl	(%rax,%rax)
0000000100017620	movq	%r9, %r10
0000000100017623	subq	%rax, %r9
0000000100017626	jbe	0x10001766b
0000000100017628	shrq	%r9
000000010001762b	addq	%rax, %r9
000000010001762e	imulq	$0x1b0, %r9, %rbx               ## imm = 0x1B0
0000000100017635	xorl	%r11d, %r11d
0000000100017638	cmpq	%rdx, 0x1a8(%rcx,%rbx)
0000000100017640	setne	%r11b
0000000100017644	cmovbl	%r8d, %r11d
0000000100017648	cmpb	$0x1, %r11b
000000010001764c	je	0x100017620
000000010001764e	movzbl	%r11b, %eax
0000000100017652	cmpl	$0xff, %eax
0000000100017657	jne	0x100017753
000000010001765d	incq	%r9
0000000100017660	movq	%r9, %rax
0000000100017663	movq	%r10, %r9
0000000100017666	subq	%rax, %r9
0000000100017669	ja	0x100017628
000000010001766b	testq	%rax, %rax
000000010001766e	je	0x100017753
0000000100017674	decq	%rax
0000000100017677	cmpq	%rsi, %rax
000000010001767a	jae	0x1000177a6
0000000100017680	imulq	$0x1b0, %rax, %rax              ## imm = 0x1B0
0000000100017687	addq	%rax, %rcx
000000010001768a	cmpq	$0x0, (%rcx)
000000010001768e	jne	0x100017731
0000000100017694	jmp	0x100017728
0000000100017699	movq	0x20(%rax), %rsi
000000010001769d	testq	%rsi, %rsi
00000001000176a0	je	0x100017753
00000001000176a6	movq	0x18(%rax), %rcx
00000001000176aa	xorl	%eax, %eax
00000001000176ac	movl	$0xff, %r8d
00000001000176b2	movq	%rsi, %r9
00000001000176b5	movq	%rsi, %r10
00000001000176b8	jmp	0x1000176c8
00000001000176ba	nopw	(%rax,%rax)
00000001000176c0	movq	%r9, %r10
00000001000176c3	subq	%rax, %r9
00000001000176c6	jbe	0x100017707
00000001000176c8	shrq	%r9
00000001000176cb	addq	%rax, %r9
00000001000176ce	imulq	$0x218, %r9, %rbx               ## imm = 0x218
00000001000176d5	xorl	%r11d, %r11d
00000001000176d8	cmpq	%rdx, 0x1a8(%rcx,%rbx)
00000001000176e0	setne	%r11b
00000001000176e4	cmovbl	%r8d, %r11d
00000001000176e8	cmpb	$0x1, %r11b
00000001000176ec	je	0x1000176c0
00000001000176ee	movzbl	%r11b, %eax
00000001000176f2	cmpl	$0xff, %eax
00000001000176f7	jne	0x100017753
00000001000176f9	incq	%r9
00000001000176fc	movq	%r9, %rax
00000001000176ff	movq	%r10, %r9
0000000100017702	subq	%rax, %r9
0000000100017705	ja	0x1000176c8
0000000100017707	testq	%rax, %rax
000000010001770a	je	0x100017753
000000010001770c	decq	%rax
000000010001770f	cmpq	%rsi, %rax
0000000100017712	jae	0x1000177b5
0000000100017718	imulq	$0x218, %rax, %rax              ## imm = 0x218
000000010001771f	addq	%rax, %rcx
0000000100017722	cmpq	$0x0, (%rcx)
0000000100017726	jne	0x100017731
0000000100017728	movq	0x8(%rcx), %rax
000000010001772c	cmpq	%rdx, %rax
000000010001772f	jbe	0x100017765
0000000100017731	movl	-0x17(%rbp), %eax
0000000100017734	movl	-0x14(%rbp), %ecx
0000000100017737	movl	%ecx, -0xd(%rbp)
000000010001773a	movl	%eax, -0x10(%rbp)
000000010001773d	movl	-0x10(%rbp), %eax
0000000100017740	movl	-0xd(%rbp), %ecx
0000000100017743	movl	%ecx, 0xc(%rdi)
0000000100017746	movl	%eax, 0x9(%rdi)
0000000100017749	movb	$0x37, 0x8(%rdi)
000000010001774d	movq	%rdx, 0x10(%rdi)
0000000100017751	jmp	0x100017757
0000000100017753	movb	$0x37, 0x8(%rdi)
0000000100017757	movq	$0x1, (%rdi)
000000010001775e	addq	$0x18, %rsp
0000000100017762	popq	%rbx
0000000100017763	popq	%rbp
0000000100017764	retq
0000000100017765	subq	%rax, %rdx
0000000100017768	movq	0x30(%rcx), %rax
000000010001776c	movq	0x38(%rcx), %rsi
0000000100017770	xorl	%r8d, %r8d
0000000100017773	cmpb	$0x8, 0x49(%rcx)
0000000100017777	sete	%r8b
000000010001777b	subq	%rax, %rsi
000000010001777e	leaq	0x4(%rsi,%r8,8), %r8
0000000100017783	movq	%rdx, %rsi
0000000100017786	subq	%r8, %rsi
0000000100017789	jb	0x100017731
000000010001778b	cmpq	%rax, %rsi
000000010001778e	jae	0x100017731
0000000100017790	movq	%rcx, 0x8(%rdi)
0000000100017794	movq	%rdx, 0x10(%rdi)
0000000100017798	movq	$0x0, (%rdi)
000000010001779f	addq	$0x18, %rsp
00000001000177a3	popq	%rbx
00000001000177a4	popq	%rbp
00000001000177a5	retq
00000001000177a6	leaq	0x310fb(%rip), %rdx
00000001000177ad	movq	%rax, %rdi
00000001000177b0	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
00000001000177b5	leaq	0x310d4(%rip), %rdx
00000001000177bc	movq	%rax, %rdi
00000001000177bf	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
00000001000177c4	nopw	%cs:(%rax,%rax)
00000001000177ce	nop
__ZN9addr2line16ResUnit$LT$R$GT$18dwarf_and_unit_dwo17h56824fa67f4616cbE:
00000001000177d0	pushq	%rbp
00000001000177d1	movq	%rsp, %rbp
00000001000177d4	pushq	%r15
00000001000177d6	pushq	%r14
00000001000177d8	pushq	%r13
00000001000177da	pushq	%r12
00000001000177dc	pushq	%rbx
00000001000177dd	subq	$0xe8, %rsp
00000001000177e4	movq	%rdx, %r15
00000001000177e7	movq	%rsi, %r14
00000001000177ea	movq	%rdi, %rbx
00000001000177ed	movzbl	0x200(%rsi), %edx
00000001000177f4	cmpb	$0x4c, %dl
00000001000177f7	jne	0x100017aa7
00000001000177fd	cmpq	$0x0, 0x50(%r14)
0000000100017802	je	0x100017820
0000000100017804	movq	0x170(%r14), %r12
000000010001780b	testq	%r12, %r12
000000010001780e	je	0x100017838
0000000100017810	movq	0x178(%r14), %rax
0000000100017817	movq	%rax, -0x90(%rbp)
000000010001781e	jmp	0x100017838
0000000100017820	movb	$0x4b, 0x200(%r14)
0000000100017828	movq	$0x0, 0x208(%r14)
0000000100017833	jmp	0x100017aac
0000000100017838	movq	(%r15), %r13
000000010001783b	movq	0x58(%r14), %rax
000000010001783f	movq	%rax, -0x98(%rbp)
0000000100017846	movq	0x158(%r14), %rax
000000010001784d	addq	$0x10, %rax
0000000100017851	movq	0x28(%r14), %rcx
0000000100017855	movq	0x30(%r14), %rdx
0000000100017859	movq	%rcx, -0x110(%rbp)
0000000100017860	movq	%rdx, -0x108(%rbp)
0000000100017867	movq	%r14, -0x100(%rbp)
000000010001786e	movq	%rax, -0xf8(%rbp)
0000000100017875	movq	$0x0, -0xf0(%rbp)
0000000100017880	movq	$0x0, -0xb8(%rbp)
000000010001788b	leaq	-0x68(%rbp), %rdi
000000010001788f	leaq	-0x110(%rbp), %rsi
0000000100017896	callq	__ZN5gimli4read4unit22EntriesCursor$LT$R$GT$10next_entry17h7d3f50c3d981e8aaE ## gimli::read::unit::EntriesCursor$LT$R$GT$::next_entry::h7d3f50c3d981e8aa
000000010001789b	movzbl	-0x68(%rbp), %r8d
00000001000178a0	movzbl	-0x67(%rbp), %edi
00000001000178a4	cmpb	$0x4b, %r8b
00000001000178a8	jne	0x100017956
00000001000178ae	testb	%dil, %dil
00000001000178b1	je	0x100017975
00000001000178b7	leaq	-0xf0(%rbp), %rsi
00000001000178be	movq	-0xf0(%rbp), %rax
00000001000178c5	testq	%rax, %rax
00000001000178c8	cmoveq	%rax, %rsi
00000001000178cc	je	0x100017b71
00000001000178d2	cmpw	$0x5, 0x4a(%r14)
00000001000178d8	jae	0x100017987
00000001000178de	leaq	-0x88(%rbp), %rdi
00000001000178e5	movl	$0x2130, %edx                   ## imm = 0x2130
00000001000178ea	callq	__ZN5gimli4read4unit43DebuggingInformationEntry$LT$R$C$Offset$GT$4attr17hbe6a91d9acd9616cE ## gimli::read::unit::DebuggingInformationEntry$LT$R$C$Offset$GT$::attr::hbe6a91d9acd9616c
00000001000178ef	movq	-0x88(%rbp), %rax
00000001000178f6	cmpq	$0x2f, %rax
00000001000178fa	je	0x1000179a9
0000000100017900	movl	$0x2e, %edx
0000000100017905	cmpl	$0x2e, %eax
0000000100017908	je	0x10001793d
000000010001790a	movq	%rax, -0x68(%rbp)
000000010001790e	leaq	-0x80(%rbp), %rsi
0000000100017912	movq	0x10(%rsi), %rax
0000000100017916	leaq	-0x60(%rbp), %rdx
000000010001791a	movq	%rax, 0x10(%rdx)
000000010001791e	movq	(%rsi), %rax
0000000100017921	movq	0x8(%rsi), %rcx
0000000100017925	movq	%rcx, 0x8(%rdx)
0000000100017929	movq	%rax, (%rdx)
000000010001792c	leaq	-0x48(%rbp), %rdi
0000000100017930	leaq	-0x68(%rbp), %rsi
0000000100017934	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100017939	movq	-0x48(%rbp), %rdx
000000010001793d	movsd	-0x40(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100017942	movl	-0x3e(%rbp), %ecx
0000000100017945	movzwl	-0x3a(%rbp), %eax
0000000100017949	shlq	$0x20, %rax
000000010001794d	orq	%rcx, %rax
0000000100017950	movq	-0x38(%rbp), %rcx
0000000100017954	jmp	0x1000179c5
0000000100017956	movl	-0x66(%rbp), %ecx
0000000100017959	movzwl	-0x62(%rbp), %eax
000000010001795d	shlq	$0x20, %rax
0000000100017961	orq	%rcx, %rax
0000000100017964	movq	-0x60(%rbp), %rcx
0000000100017968	movl	$0x2f, %edx
000000010001796d	cmpq	$0x2e, %rdx
0000000100017971	jne	0x1000179e1
0000000100017973	jmp	0x100017980
0000000100017975	movl	$0x2e, %edx
000000010001797a	cmpq	$0x2e, %rdx
000000010001797e	jne	0x1000179e1
0000000100017980	xorl	%eax, %eax
0000000100017982	jmp	0x100017b35
0000000100017987	leaq	-0x88(%rbp), %rdi
000000010001798e	movl	$0x76, %edx
0000000100017993	callq	__ZN5gimli4read4unit43DebuggingInformationEntry$LT$R$C$Offset$GT$4attr17hbe6a91d9acd9616cE ## gimli::read::unit::DebuggingInformationEntry$LT$R$C$Offset$GT$::attr::hbe6a91d9acd9616c
0000000100017998	movq	-0x88(%rbp), %rax
000000010001799f	cmpq	$0x2f, %rax
00000001000179a3	jne	0x100017900
00000001000179a9	movsd	-0x80(%rbp), %xmm0              ## xmm0 = mem[0],zero
00000001000179ae	movl	-0x7e(%rbp), %ecx
00000001000179b1	movzwl	-0x7a(%rbp), %eax
00000001000179b5	shlq	$0x20, %rax
00000001000179b9	orq	%rcx, %rax
00000001000179bc	movl	$0x2f, %edx
00000001000179c1	movq	-0x78(%rbp), %rcx
00000001000179c5	movaps	%xmm0, -0xb0(%rbp)
00000001000179cc	movzbl	-0xb0(%rbp), %r8d
00000001000179d4	movzbl	-0xaf(%rbp), %edi
00000001000179db	cmpq	$0x2e, %rdx
00000001000179df	je	0x100017980
00000001000179e1	cmpq	$0x2f, %rdx
00000001000179e5	jne	0x1000179ff
00000001000179e7	movzbl	%r8b, %edx
00000001000179eb	movzbl	%dil, %esi
00000001000179ef	shlq	$0x8, %rsi
00000001000179f3	orq	%rdx, %rsi
00000001000179f6	shlq	$0x10, %rax
00000001000179fa	orq	%rsi, %rax
00000001000179fd	jmp	0x100017a5f
00000001000179ff	leaq	0x10(%r13), %rsi
0000000100017a03	movq	%rdx, -0x110(%rbp)
0000000100017a0a	movb	%r8b, -0x108(%rbp)
0000000100017a11	movb	%dil, -0x107(%rbp)
0000000100017a18	movl	%eax, -0x106(%rbp)
0000000100017a1e	shrq	$0x20, %rax
0000000100017a22	movw	%ax, -0x102(%rbp)
0000000100017a29	movq	%rcx, -0x100(%rbp)
0000000100017a30	movq	0x188(%r14), %rcx
0000000100017a37	movzbl	0x49(%r14), %edx
0000000100017a3c	leaq	-0x68(%rbp), %rdi
0000000100017a40	leaq	-0x110(%rbp), %r8
0000000100017a47	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
0000000100017a4c	cmpq	$0x0, -0x68(%rbp)
0000000100017a51	movq	-0x60(%rbp), %rax
0000000100017a55	movq	-0x58(%rbp), %rcx
0000000100017a59	je	0x100017b35
0000000100017a5f	movzbl	0x200(%r14), %edx
0000000100017a67	cmpb	$0x4c, %dl
0000000100017a6a	jne	0x100017aa7
0000000100017a6c	movb	%al, 0x200(%r14)
0000000100017a73	movq	%rax, %rdx
0000000100017a76	shrq	$0x8, %rdx
0000000100017a7a	movq	%rax, %rsi
0000000100017a7d	shrq	$0x38, %rsi
0000000100017a81	movb	%sil, 0x207(%r14)
0000000100017a88	movq	%rax, %rsi
0000000100017a8b	shrq	$0x28, %rsi
0000000100017a8f	movw	%si, 0x205(%r14)
0000000100017a97	movl	%edx, 0x201(%r14)
0000000100017a9e	movq	%rcx, 0x208(%r14)
0000000100017aa5	movl	%eax, %edx
0000000100017aa7	cmpb	$0x4b, %dl
0000000100017aaa	jne	0x100017acc
0000000100017aac	movq	0x208(%r14), %rsi
0000000100017ab3	testq	%rsi, %rsi
0000000100017ab6	je	0x100017af6
0000000100017ab8	movq	(%rsi), %rax
0000000100017abb	addq	$0x10, %rax
0000000100017abf	addq	$0x8, %rsi
0000000100017ac3	movb	$0x2, %cl
0000000100017ac5	xorl	%edx, %edx
0000000100017ac7	movq	%rsi, %r14
0000000100017aca	jmp	0x100017b01
0000000100017acc	movq	0x200(%r14), %rax
0000000100017ad3	movzbl	0x208(%r14), %ecx
0000000100017adb	movl	0x20c(%r14), %edx
0000000100017ae2	movl	%edx, -0x2d(%rbp)
0000000100017ae5	movl	0x209(%r14), %edx
0000000100017aec	movl	%edx, -0x30(%rbp)
0000000100017aef	movl	$0x1, %edx
0000000100017af4	jmp	0x100017b01
0000000100017af6	movq	(%r15), %rax
0000000100017af9	addq	$0x10, %rax
0000000100017afd	xorl	%ecx, %ecx
0000000100017aff	xorl	%edx, %edx
0000000100017b01	movq	%rdx, (%rbx)
0000000100017b04	movq	%rax, 0x8(%rbx)
0000000100017b08	movb	%cl, 0x10(%rbx)
0000000100017b0b	movl	-0x30(%rbp), %eax
0000000100017b0e	movl	-0x2d(%rbp), %ecx
0000000100017b11	movl	%eax, 0x11(%rbx)
0000000100017b14	movl	%ecx, 0x14(%rbx)
0000000100017b17	movq	%r14, 0x18(%rbx)
0000000100017b1b	movq	$0x0, 0x30(%rbx)
0000000100017b23	addq	$0xe8, %rsp
0000000100017b2a	popq	%rbx
0000000100017b2b	popq	%r12
0000000100017b2d	popq	%r13
0000000100017b2f	popq	%r14
0000000100017b31	popq	%r15
0000000100017b33	popq	%rbp
0000000100017b34	retq
0000000100017b35	lock
0000000100017b36	incq	(%r13)
0000000100017b3a	jle	0x100017b6f
0000000100017b3c	movq	%r13, (%rbx)
0000000100017b3f	movq	-0x98(%rbp), %rdx
0000000100017b46	movq	%rdx, 0x8(%rbx)
0000000100017b4a	movq	%r12, 0x10(%rbx)
0000000100017b4e	movq	-0x90(%rbp), %rdx
0000000100017b55	movq	%rdx, 0x18(%rbx)
0000000100017b59	movq	%rax, 0x20(%rbx)
0000000100017b5d	movq	%rcx, 0x28(%rbx)
0000000100017b61	movq	%r14, 0x30(%rbx)
0000000100017b65	movq	%r14, 0x38(%rbx)
0000000100017b69	movq	%r15, 0x40(%rbx)
0000000100017b6d	jmp	0x100017b23
0000000100017b6f	ud2
0000000100017b71	leaq	0x2c179(%rip), %rdi
0000000100017b78	leaq	0x30bc9(%rip), %rdx
0000000100017b7f	movl	$0x2b, %esi
0000000100017b84	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100017b89	nopl	(%rax)
__ZN9addr2line16ResUnit$LT$R$GT$25find_function_or_location28_$u7b$$u7b$closure$u7d$$u7d$17heaf045e62a829c56E:
0000000100017b90	pushq	%rbp
0000000100017b91	movq	%rsp, %rbp
0000000100017b94	pushq	%r15
0000000100017b96	pushq	%r14
0000000100017b98	pushq	%r13
0000000100017b9a	pushq	%r12
0000000100017b9c	pushq	%rbx
0000000100017b9d	subq	$0x298, %rsp                    ## imm = 0x298
0000000100017ba4	movq	%rdi, %r14
0000000100017ba7	cmpq	$0x0, (%rdx)
0000000100017bab	je	0x100017bd8
0000000100017bad	movq	0x8(%rdx), %rax
0000000100017bb1	movzbl	0x10(%rdx), %ecx
0000000100017bb5	movl	0x14(%rdx), %esi
0000000100017bb8	movl	%esi, 0x1c(%r14)
0000000100017bbc	movl	0x11(%rdx), %edx
0000000100017bbf	movl	%edx, 0x19(%r14)
0000000100017bc3	movq	%rax, 0x10(%r14)
0000000100017bc7	movb	%cl, 0x18(%r14)
0000000100017bcb	movl	$0x3, 0x8(%r14)
0000000100017bd3	jmp	0x100019595
0000000100017bd8	movq	0x8(%rdx), %rax
0000000100017bdc	movq	%rax, -0xd0(%rbp)
0000000100017be3	movzbl	0x10(%rdx), %eax
0000000100017be7	movb	%al, -0x168(%rbp)
0000000100017bed	movq	0x18(%rdx), %rax
0000000100017bf1	movq	(%rsi), %rbx
0000000100017bf4	cmpq	$0x0, 0x1d8(%rbx)
0000000100017bfc	movq	%r14, -0x108(%rbp)
0000000100017c03	movq	%rax, -0xa8(%rbp)
0000000100017c0a	movq	%rsi, -0x170(%rbp)
0000000100017c11	je	0x100017c30
0000000100017c13	cmpq	$0x0, 0x1e0(%rbx)
0000000100017c1b	je	0x1000190cb
0000000100017c21	addq	$0x1e0, %rbx                    ## imm = 0x1E0
0000000100017c28	movq	%rbx, %rax
0000000100017c2b	jmp	0x1000190e2
0000000100017c30	movq	$0x8, -0x198(%rbp)
0000000100017c3b	movq	$0x0, -0x190(%rbp)
0000000100017c46	movq	$0x0, -0x188(%rbp)
0000000100017c51	movq	$0x8, -0x90(%rbp)
0000000100017c5c	movq	$0x0, -0x88(%rbp)
0000000100017c67	movq	$0x0, -0x80(%rbp)
0000000100017c6f	movq	0x158(%rax), %rcx
0000000100017c76	addq	$0x10, %rcx
0000000100017c7a	movq	0x28(%rax), %rdx
0000000100017c7e	movq	%rax, %rsi
0000000100017c81	movq	0x30(%rax), %rax
0000000100017c85	movq	%rdx, -0x138(%rbp)
0000000100017c8c	movq	%rax, -0x130(%rbp)
0000000100017c93	movq	%rsi, -0x128(%rbp)
0000000100017c9a	movq	%rcx, -0x120(%rbp)
0000000100017ca1	movq	$0x0, -0x118(%rbp)
0000000100017cac	testq	%rax, %rax
0000000100017caf	movq	%rbx, -0x180(%rbp)
0000000100017cb6	je	0x100018ee4
0000000100017cbc	movl	0x48(%rsi), %ebx
0000000100017cbf	movq	0x1a0(%rsi), %rcx
0000000100017cc6	movq	%rcx, -0x158(%rbp)
0000000100017ccd	movq	-0xd0(%rbp), %rdx
0000000100017cd4	leaq	0xc0(%rdx), %rcx
0000000100017cdb	addq	$0xb0, %rdx
0000000100017ce2	movzbl	%bh, %edi
0000000100017ce5	movq	%rdi, -0x148(%rbp)
0000000100017cec	movl	%ebx, %edi
0000000100017cee	andl	$0xff00, %edi                   ## imm = 0xFF00
0000000100017cf4	movl	%edi, -0xe8(%rbp)
0000000100017cfa	movl	%ebx, %r9d
0000000100017cfd	shrl	$0x10, %r9d
0000000100017d01	movq	0x190(%rsi), %r8
0000000100017d08	movq	%rbx, -0x38(%rbp)
0000000100017d0c	movzbl	%bl, %edi
0000000100017d0f	movq	%rdi, -0x160(%rbp)
0000000100017d16	movl	%r9d, -0x150(%rbp)
0000000100017d1d	cmpw	$0x5, %r9w
0000000100017d22	setae	-0x140(%rbp)
0000000100017d29	cmovaeq	%rcx, %rdx
0000000100017d2d	movq	%rdx, -0xc8(%rbp)
0000000100017d34	movq	0x180(%rsi), %rcx
0000000100017d3b	movq	%rcx, -0xe0(%rbp)
0000000100017d42	movl	$0x8, %ebx
0000000100017d47	leaq	-0x2a0(%rbp), %rcx
0000000100017d4e	movq	%rcx, -0xd8(%rbp)
0000000100017d55	xorl	%r14d, %r14d
0000000100017d58	xorl	%r9d, %r9d
0000000100017d5b	movq	%r8, -0x100(%rbp)
0000000100017d62	movq	%r9, -0x70(%rbp)
0000000100017d66	movq	-0x138(%rbp), %r13
0000000100017d6d	movq	-0x128(%rbp), %rcx
0000000100017d74	xorl	%edx, %edx
0000000100017d76	cmpb	$0x8, 0x49(%rcx)
0000000100017d7a	sete	%dl
0000000100017d7d	movq	0x38(%rcx), %rsi
0000000100017d81	addq	%r13, %rsi
0000000100017d84	movq	0x30(%rcx), %rdi
0000000100017d88	addq	0x28(%rcx), %rdi
0000000100017d8c	leaq	(%rsi,%rdx,8), %r15
0000000100017d90	subq	%rdi, %r15
0000000100017d93	addq	$0x4, %r15
0000000100017d97	movl	$0x1, %esi
0000000100017d9c	subq	%rax, %rsi
0000000100017d9f	leaq	0x1(%r13), %rdi
0000000100017da3	xorl	%edx, %edx
0000000100017da5	xorl	%ecx, %ecx
0000000100017da7	nopw	(%rax,%rax)
0000000100017db0	movzbl	-0x1(%rdi), %r8d
0000000100017db5	cmpl	$0x3f, %ecx
0000000100017db8	jne	0x100017dc4
0000000100017dba	cmpb	$0x2, %r8b
0000000100017dbe	jae	0x100018703
0000000100017dc4	movzbl	%r8b, %r8d
0000000100017dc8	movl	%r8d, %r9d
0000000100017dcb	andl	$0x7f, %r9d
0000000100017dcf	shlq	%cl, %r9
0000000100017dd2	orq	%r9, %rdx
0000000100017dd5	testb	%r8b, %r8b
0000000100017dd8	jns	0x100017dee
0000000100017dda	addl	$0x7, %ecx
0000000100017ddd	incq	%rsi
0000000100017de0	incq	%rdi
0000000100017de3	cmpq	$0x1, %rsi
0000000100017de7	jne	0x100017db0
0000000100017de9	jmp	0x10001870e
0000000100017dee	movq	%rdi, -0x138(%rbp)
0000000100017df5	negq	%rsi
0000000100017df8	movq	%rsi, -0x130(%rbp)
0000000100017dff	testq	%rdx, %rdx
0000000100017e02	je	0x100017e21
0000000100017e04	movq	-0x120(%rbp), %rax
0000000100017e0b	leaq	-0x1(%rdx), %rcx
0000000100017e0f	cmpq	0x10(%rax), %rcx
0000000100017e13	jae	0x100017e31
0000000100017e15	imulq	$0x70, %rcx, %rdi
0000000100017e19	addq	(%rax), %rdi
0000000100017e1c	jmp	0x100017ebe
0000000100017e21	decq	-0x118(%rbp)
0000000100017e28	movq	-0x70(%rbp), %r9
0000000100017e2c	jmp	0x1000186b1
0000000100017e31	movq	0x18(%rax), %rdi
0000000100017e35	testq	%rdi, %rdi
0000000100017e38	je	0x10001882a
0000000100017e3e	movq	0x20(%rax), %rax
0000000100017e42	movzwl	0x532(%rdi), %r8d
0000000100017e4a	imulq	$0x70, %r8, %r9
0000000100017e4e	movq	$-0x1, %rcx
0000000100017e55	movl	$0x70, %esi
0000000100017e5a	nopw	(%rax,%rax)
0000000100017e60	leaq	(%r9,%rsi), %r10
0000000100017e64	cmpq	$0x70, %r10
0000000100017e68	je	0x100017e9b
0000000100017e6a	xorl	%r10d, %r10d
0000000100017e6d	cmpq	%rdx, 0x4e0(%rdi,%rcx,8)
0000000100017e75	setne	%r10b
0000000100017e79	movl	$0xff, %r11d
0000000100017e7f	cmoval	%r11d, %r10d
0000000100017e83	incq	%rcx
0000000100017e86	addq	$-0x70, %rsi
0000000100017e8a	cmpb	$0x1, %r10b
0000000100017e8e	je	0x100017e60
0000000100017e90	movzbl	%r10b, %r8d
0000000100017e94	testl	%r8d, %r8d
0000000100017e97	jne	0x100017e9e
0000000100017e99	jmp	0x100017eb2
0000000100017e9b	movq	%r8, %rcx
0000000100017e9e	subq	$0x1, %rax
0000000100017ea2	jb	0x10001882a
0000000100017ea8	movq	0x538(%rdi,%rcx,8), %rdi
0000000100017eb0	jmp	0x100017e42
0000000100017eb2	testq	%rdi, %rdi
0000000100017eb5	je	0x10001882a
0000000100017ebb	subq	%rsi, %rdi
0000000100017ebe	cmpb	$0x1, 0x6a(%rdi)
0000000100017ec2	jne	0x100017ecb
0000000100017ec4	incq	-0x118(%rbp)
0000000100017ecb	cmpw	$0x2e, 0x68(%rdi)
0000000100017ed0	jne	0x100017f13
0000000100017ed2	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
0000000100017ed7	movq	%rdx, %r12
0000000100017eda	testq	%rdx, %rdx
0000000100017edd	je	0x1000186ad
0000000100017ee3	movq	%rax, %r13
0000000100017ee6	movq	%rbx, -0x98(%rbp)
0000000100017eed	shlq	$0x4, %r12
0000000100017ef1	xorl	%ebx, %ebx
0000000100017ef3	xorl	%eax, %eax
0000000100017ef5	movq	%rax, -0xf8(%rbp)
0000000100017efc	xorl	%eax, %eax
0000000100017efe	movq	%rax, -0x78(%rbp)
0000000100017f02	xorl	%eax, %eax
0000000100017f04	movq	%rax, -0xf0(%rbp)
0000000100017f0b	xorl	%eax, %eax
0000000100017f0d	movq	%rax, -0x30(%rbp)
0000000100017f11	jmp	0x100017f77
0000000100017f13	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
0000000100017f18	movq	%rdx, %r8
0000000100017f1b	movq	-0x128(%rbp), %rcx
0000000100017f22	movl	0x48(%rcx), %edx
0000000100017f25	leaq	-0x2a0(%rbp), %rdi
0000000100017f2c	leaq	-0x138(%rbp), %rsi
0000000100017f33	movq	%rax, %rcx
0000000100017f36	callq	__ZN5gimli4read4unit15skip_attributes17ha570d863da4597bbE ## gimli::read::unit::skip_attributes::ha570d863da4597bb
0000000100017f3b	movzbl	-0x2a0(%rbp), %eax
0000000100017f42	cmpb	$0x4b, %al
0000000100017f44	movq	-0x70(%rbp), %r9
0000000100017f48	je	0x1000186b1
0000000100017f4e	jmp	0x100019b6b
0000000100017f53	movl	$0x1, %eax
0000000100017f58	movq	%rax, -0xf8(%rbp)
0000000100017f5f	movq	-0xb8(%rbp), %rax
0000000100017f66	movq	%rax, -0x40(%rbp)
0000000100017f6a	addq	$0x10, %rbx
0000000100017f6e	cmpq	%rbx, %r12
0000000100017f71	je	0x100018409
0000000100017f77	movq	(%r13,%rbx), %rax
0000000100017f7c	movq	0x8(%r13,%rbx), %rcx
0000000100017f81	movq	%rcx, -0x48(%rbp)
0000000100017f85	movq	%rax, -0x50(%rbp)
0000000100017f89	movq	-0x128(%rbp), %rdx
0000000100017f90	movl	0x48(%rdx), %edx
0000000100017f93	movq	%rcx, -0xb8(%rbp)
0000000100017f9a	movq	%rax, -0xc0(%rbp)
0000000100017fa1	leaq	-0x2a0(%rbp), %rdi
0000000100017fa8	leaq	-0x138(%rbp), %rsi
0000000100017faf	leaq	-0xc0(%rbp), %rcx
0000000100017fb6	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
0000000100017fbb	cmpl	$0x2e, -0x2a0(%rbp)
0000000100017fc2	je	0x100018801
0000000100017fc8	movzwl	-0x288(%rbp), %eax
0000000100017fcf	cmpl	$0x11, %eax
0000000100017fd2	je	0x100018129
0000000100017fd8	cmpl	$0x12, %eax
0000000100017fdb	je	0x100018078
0000000100017fe1	cmpl	$0x55, %eax
0000000100017fe4	jne	0x100017f6a
0000000100017fe6	leaq	-0xc0(%rbp), %rdi
0000000100017fed	leaq	-0x2a0(%rbp), %rsi
0000000100017ff4	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100017ff9	movq	-0xc0(%rbp), %rax
0000000100018000	movq	-0xb8(%rbp), %rcx
0000000100018007	cmpq	$0x16, %rax
000000010001800b	je	0x1000181d1
0000000100018011	cmpl	$0x18, %eax
0000000100018014	movq	-0x158(%rbp), %rsi
000000010001801b	jne	0x100018209
0000000100018021	movq	-0xd0(%rbp), %rdx
0000000100018028	movq	0xc0(%rdx), %rax
000000010001802f	movq	0xc8(%rdx), %rdx
0000000100018036	subq	%rsi, %rdx
0000000100018039	jb	0x100019b57
000000010001803f	addq	%rsi, %rax
0000000100018042	imulq	-0x148(%rbp), %rcx
000000010001804a	subq	%rcx, %rdx
000000010001804d	jb	0x100019b57
0000000100018053	addq	%rcx, %rax
0000000100018056	cmpl	$0x800, -0xe8(%rbp)             ## imm = 0x800
0000000100018060	jne	0x10001824c
0000000100018066	cmpq	$0x7, %rdx
000000010001806a	jbe	0x10001a3db
0000000100018070	movq	(%rax), %rax
0000000100018073	jmp	0x10001826e
0000000100018078	leaq	-0xc0(%rbp), %rdi
000000010001807f	leaq	-0x2a0(%rbp), %rsi
0000000100018086	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001808b	movq	-0xc0(%rbp), %rax
0000000100018092	testq	%rax, %rax
0000000100018095	je	0x100018233
000000010001809b	cmpl	$0x7, %eax
000000010001809e	movq	-0x160(%rbp), %rsi
00000001000180a5	je	0x100018214
00000001000180ab	cmpl	$0xc, %eax
00000001000180ae	jne	0x100017f6a
00000001000180b4	movq	-0xd0(%rbp), %rax
00000001000180bb	movq	0x10(%rax), %rcx
00000001000180bf	movq	0x18(%rax), %rax
00000001000180c3	movq	-0x100(%rbp), %rdx
00000001000180ca	subq	%rdx, %rax
00000001000180cd	jb	0x100019b62
00000001000180d3	addq	%rdx, %rcx
00000001000180d6	movq	%rcx, -0x58(%rbp)
00000001000180da	movq	-0xb8(%rbp), %rcx
00000001000180e1	imulq	%rsi, %rcx
00000001000180e5	movq	%rax, %rdx
00000001000180e8	subq	%rcx, %rdx
00000001000180eb	jb	0x10001a2d8
00000001000180f1	decl	%esi
00000001000180f3	cmpl	$0x7, %esi
00000001000180f6	ja	0x10001a440
00000001000180fc	addq	%rcx, -0x58(%rbp)
0000000100018100	leaq	0x2845(%rip), %rdi
0000000100018107	movslq	(%rdi,%rsi,4), %rsi
000000010001810b	addq	%rdi, %rsi
000000010001810e	jmpq	*%rsi
0000000100018110	cmpq	%rcx, %rax
0000000100018113	je	0x10001a4e0
0000000100018119	movq	-0x58(%rbp), %rax
000000010001811d	movzbl	(%rax), %eax
0000000100018120	movq	%rax, -0x58(%rbp)
0000000100018124	jmp	0x1000183fb
0000000100018129	leaq	-0xc0(%rbp), %rdi
0000000100018130	leaq	-0x2a0(%rbp), %rsi
0000000100018137	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001813c	movq	-0xc0(%rbp), %rax
0000000100018143	testq	%rax, %rax
0000000100018146	je	0x100017f53
000000010001814c	cmpl	$0xc, %eax
000000010001814f	jne	0x100017f6a
0000000100018155	movq	-0xd0(%rbp), %rax
000000010001815c	movq	0x10(%rax), %rcx
0000000100018160	movq	0x18(%rax), %rax
0000000100018164	movq	-0x100(%rbp), %rdx
000000010001816b	subq	%rdx, %rax
000000010001816e	jb	0x100019b62
0000000100018174	addq	%rdx, %rcx
0000000100018177	movq	%rcx, -0x40(%rbp)
000000010001817b	movq	-0xb8(%rbp), %rcx
0000000100018182	movq	-0x160(%rbp), %rsi
0000000100018189	imulq	%rsi, %rcx
000000010001818d	movq	%rax, %rdx
0000000100018190	subq	%rcx, %rdx
0000000100018193	jb	0x10001a2d2
0000000100018199	decl	%esi
000000010001819b	cmpl	$0x7, %esi
000000010001819e	ja	0x10001a440
00000001000181a4	addq	%rcx, -0x40(%rbp)
00000001000181a8	leaq	0x27bd(%rip), %rdi
00000001000181af	movslq	(%rdi,%rsi,4), %rsi
00000001000181b3	addq	%rdi, %rsi
00000001000181b6	jmpq	*%rsi
00000001000181b8	cmpq	%rcx, %rax
00000001000181bb	je	0x10001a47f
00000001000181c1	movq	-0x40(%rbp), %rax
00000001000181c5	movzbl	(%rax), %eax
00000001000181c8	movq	%rax, -0x40(%rbp)
00000001000181cc	jmp	0x1000183a3
00000001000181d1	cmpw	$0x5, -0x150(%rbp)
00000001000181d9	movl	$0x0, %edx
00000001000181de	cmovbq	-0x158(%rbp), %rdx
00000001000181e6	movq	-0xd0(%rbp), %rax
00000001000181ed	cmpb	$0x0, 0xe0(%rax)
00000001000181f4	movl	$0x0, %eax
00000001000181f9	cmoveq	%rax, %rdx
00000001000181fd	addq	%rcx, %rdx
0000000100018200	movq	%rdx, -0xa0(%rbp)
0000000100018207	jmp	0x100018278
0000000100018209	xorl	%eax, %eax
000000010001820b	movq	%rax, -0x30(%rbp)
000000010001820f	jmp	0x100017f6a
0000000100018214	movl	$0x1, %eax
0000000100018219	movq	%rax, -0xf0(%rbp)
0000000100018220	movq	-0xb8(%rbp), %rax
0000000100018227	movq	%rax, -0x178(%rbp)
000000010001822e	jmp	0x100017f6a
0000000100018233	movl	$0x1, %eax
0000000100018238	movq	%rax, -0x78(%rbp)
000000010001823c	movq	-0xb8(%rbp), %rax
0000000100018243	movq	%rax, -0x58(%rbp)
0000000100018247	jmp	0x100017f6a
000000010001824c	cmpq	$0x4, %rdx
0000000100018250	jb	0x10001a3a3
0000000100018256	movzwl	0x1(%rax), %ecx
000000010001825a	movzbl	(%rax), %edx
000000010001825d	movzbl	0x3(%rax), %eax
0000000100018261	movb	%dl, -0x4d(%rbp)
0000000100018264	movb	%al, -0x4a(%rbp)
0000000100018267	movw	%cx, -0x4c(%rbp)
000000010001826b	movl	-0x4d(%rbp), %eax
000000010001826e	addq	%rsi, %rax
0000000100018271	movq	%rax, -0xa0(%rbp)
0000000100018278	movl	$0x1, %eax
000000010001827d	movq	%rax, -0x30(%rbp)
0000000100018281	jmp	0x100017f6a
0000000100018286	cmpq	$0x2, %rdx
000000010001828a	jb	0x10001835c
0000000100018290	movq	-0x40(%rbp), %rax
0000000100018294	movzwl	(%rax), %eax
0000000100018297	movq	%rax, -0x40(%rbp)
000000010001829b	movw	%ax, -0x4f(%rbp)
000000010001829f	movb	$0x4b, %al
00000001000182a1	jmp	0x10001839b
00000001000182a6	cmpq	$0x8, %rdx
00000001000182aa	jb	0x10001a468
00000001000182b0	movq	-0x40(%rbp), %rax
00000001000182b4	movq	(%rax), %rax
00000001000182b7	movq	%rax, -0x40(%rbp)
00000001000182bb	jmp	0x1000183a3
00000001000182c0	cmpq	$0x4, %rdx
00000001000182c4	jb	0x10001837b
00000001000182ca	movq	-0x40(%rbp), %rdx
00000001000182ce	movzwl	0x1(%rdx), %eax
00000001000182d2	movzbl	(%rdx), %ecx
00000001000182d5	movzbl	0x3(%rdx), %edx
00000001000182d9	movb	%cl, -0x4d(%rbp)
00000001000182dc	movb	%dl, -0x4a(%rbp)
00000001000182df	movw	%ax, -0x4c(%rbp)
00000001000182e3	movl	-0x4d(%rbp), %eax
00000001000182e6	movq	%rax, -0x40(%rbp)
00000001000182ea	movb	$0x4b, %al
00000001000182ec	jmp	0x10001839b
00000001000182f1	cmpq	$0x2, %rdx
00000001000182f5	jb	0x1000183b4
00000001000182fb	movq	-0x58(%rbp), %rax
00000001000182ff	movzwl	(%rax), %eax
0000000100018302	movq	%rax, -0x58(%rbp)
0000000100018306	movw	%ax, -0x4f(%rbp)
000000010001830a	movb	$0x4b, %al
000000010001830c	jmp	0x1000183f3
0000000100018311	cmpq	$0x8, %rdx
0000000100018315	jb	0x10001a49d
000000010001831b	movq	-0x58(%rbp), %rax
000000010001831f	movq	(%rax), %rax
0000000100018322	movq	%rax, -0x58(%rbp)
0000000100018326	jmp	0x1000183fb
000000010001832b	cmpq	$0x4, %rdx
000000010001832f	jb	0x1000183d3
0000000100018335	movq	-0x58(%rbp), %rdx
0000000100018339	movzwl	0x1(%rdx), %eax
000000010001833d	movzbl	(%rdx), %ecx
0000000100018340	movzbl	0x3(%rdx), %edx
0000000100018344	movb	%cl, -0x4d(%rbp)
0000000100018347	movb	%dl, -0x4a(%rbp)
000000010001834a	movw	%ax, -0x4c(%rbp)
000000010001834e	movl	-0x4d(%rbp), %eax
0000000100018351	movq	%rax, -0x58(%rbp)
0000000100018355	movb	$0x4b, %al
0000000100018357	jmp	0x1000183f3
000000010001835c	movw	$0x0, -0x50(%rbp)
0000000100018362	movl	$0x0, -0x4e(%rbp)
0000000100018369	movb	$0x0, -0x4a(%rbp)
000000010001836d	movl	-0x50(%rbp), %eax
0000000100018370	movl	%eax, -0x68(%rbp)
0000000100018373	movl	-0x4d(%rbp), %eax
0000000100018376	movl	%eax, -0x65(%rbp)
0000000100018379	jmp	0x100018399
000000010001837b	movl	$0x0, -0x50(%rbp)
0000000100018382	movb	$0x0, -0x4a(%rbp)
0000000100018386	movw	$0x0, -0x4c(%rbp)
000000010001838c	movl	-0x4d(%rbp), %eax
000000010001838f	movl	%eax, -0x65(%rbp)
0000000100018392	movl	$0x0, -0x68(%rbp)
0000000100018399	movb	$0x13, %al
000000010001839b	cmpb	$0x4b, %al
000000010001839d	jne	0x10001a42b
00000001000183a3	movl	$0x1, %eax
00000001000183a8	movq	%rax, -0xf8(%rbp)
00000001000183af	jmp	0x100017f6a
00000001000183b4	movw	$0x0, -0x50(%rbp)
00000001000183ba	movl	$0x0, -0x4e(%rbp)
00000001000183c1	movb	$0x0, -0x4a(%rbp)
00000001000183c5	movl	-0x50(%rbp), %eax
00000001000183c8	movl	%eax, -0x68(%rbp)
00000001000183cb	movl	-0x4d(%rbp), %eax
00000001000183ce	movl	%eax, -0x65(%rbp)
00000001000183d1	jmp	0x1000183f1
00000001000183d3	movl	$0x0, -0x50(%rbp)
00000001000183da	movb	$0x0, -0x4a(%rbp)
00000001000183de	movw	$0x0, -0x4c(%rbp)
00000001000183e4	movl	-0x4d(%rbp), %eax
00000001000183e7	movl	%eax, -0x65(%rbp)
00000001000183ea	movl	$0x0, -0x68(%rbp)
00000001000183f1	movb	$0x13, %al
00000001000183f3	cmpb	$0x4b, %al
00000001000183f5	jne	0x10001a447
00000001000183fb	movl	$0x1, %eax
0000000100018400	movq	%rax, -0x78(%rbp)
0000000100018404	jmp	0x100017f6a
0000000100018409	cmpq	$0x0, -0x30(%rbp)
000000010001840e	je	0x100018565
0000000100018414	movq	-0xc8(%rbp), %rax
000000010001841b	movq	(%rax), %r13
000000010001841e	movq	0x8(%rax), %rax
0000000100018422	movq	-0xa0(%rbp), %rsi
0000000100018429	subq	%rsi, %rax
000000010001842c	jb	0x10001a492
0000000100018432	movq	-0xd0(%rbp), %rdx
0000000100018439	movq	0x10(%rdx), %rcx
000000010001843d	movq	0x18(%rdx), %rdx
0000000100018441	addq	%rsi, %r13
0000000100018444	movq	%rcx, -0x2a0(%rbp)
000000010001844b	movq	%rdx, -0x298(%rbp)
0000000100018452	movq	-0xe0(%rbp), %rcx
0000000100018459	movq	%rcx, -0x290(%rbp)
0000000100018460	movq	-0x100(%rbp), %rcx
0000000100018467	movq	%rcx, -0x288(%rbp)
000000010001846e	movq	%r13, -0x280(%rbp)
0000000100018475	movq	%rax, -0x278(%rbp)
000000010001847c	movq	-0x38(%rbp), %rax
0000000100018480	movw	%ax, -0x270(%rbp)
0000000100018487	movl	-0x150(%rbp), %eax
000000010001848d	movw	%ax, -0x26e(%rbp)
0000000100018494	movzbl	-0x140(%rbp), %eax
000000010001849b	movb	%al, -0x26c(%rbp)
00000001000184a1	xorl	%ebx, %ebx
00000001000184a3	leaq	-0xc0(%rbp), %rdi
00000001000184aa	leaq	-0x2a0(%rbp), %rsi
00000001000184b1	callq	__ZN5gimli4read8rnglists20RngListIter$LT$R$GT$4next17hc7d810ddd7ca0bc1E ## gimli::read::rnglists::RngListIter$LT$R$GT$::next::hc7d810ddd7ca0bc1
00000001000184b6	movq	-0xc0(%rbp), %rax
00000001000184bd	movq	-0xb8(%rbp), %rcx
00000001000184c4	movq	-0xb0(%rbp), %r13
00000001000184cb	cmpq	$0x1, %rax
00000001000184cf	jne	0x100018530
00000001000184d1	cmpq	%r13, %rcx
00000001000184d4	jae	0x1000184a3
00000001000184d6	movq	%rcx, %rbx
00000001000184d9	cmpq	-0x88(%rbp), %r14
00000001000184e0	jne	0x1000184fe
00000001000184e2	leaq	-0x90(%rbp), %rdi
00000001000184e9	movq	%r14, %rsi
00000001000184ec	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
00000001000184f1	movq	-0x90(%rbp), %rdx
00000001000184f8	movq	-0x80(%rbp), %r14
00000001000184fc	jmp	0x100018505
00000001000184fe	movq	-0x98(%rbp), %rdx
0000000100018505	leaq	(%r14,%r14,2), %rax
0000000100018509	movq	%rbx, (%rdx,%rax,8)
000000010001850d	movq	%r13, 0x8(%rdx,%rax,8)
0000000100018512	movq	-0x70(%rbp), %rcx
0000000100018516	movq	%rdx, -0x98(%rbp)
000000010001851d	movq	%rcx, 0x10(%rdx,%rax,8)
0000000100018522	incq	%r14
0000000100018525	movq	%r14, -0x80(%rbp)
0000000100018529	movb	$0x1, %bl
000000010001852b	jmp	0x1000184a3
0000000100018530	movq	%rcx, -0x30(%rbp)
0000000100018534	cmpl	$0x2, %eax
0000000100018537	jne	0x10001854c
0000000100018539	movq	-0x30(%rbp), %rax
000000010001853d	movq	%rax, %rbx
0000000100018540	shrq	$0x8, %rbx
0000000100018544	cmpb	$0x4b, %al
0000000100018546	jne	0x10001a516
000000010001854c	testb	$0x1, %bl
000000010001854f	jne	0x100018647
0000000100018555	movq	-0x70(%rbp), %r9
0000000100018559	movq	-0x98(%rbp), %rbx
0000000100018560	jmp	0x1000186b1
0000000100018565	cmpq	$0x0, -0x78(%rbp)
000000010001856a	movq	-0x98(%rbp), %rbx
0000000100018571	movq	-0xf8(%rbp), %rax
0000000100018578	je	0x1000185c5
000000010001857a	testq	%rax, %rax
000000010001857d	je	0x1000185c5
000000010001857f	movq	-0x58(%rbp), %rax
0000000100018583	cmpq	%rax, -0x40(%rbp)
0000000100018587	leaq	-0x90(%rbp), %rdi
000000010001858e	jae	0x1000186ad
0000000100018594	cmpq	-0x88(%rbp), %r14
000000010001859b	jne	0x1000185b0
000000010001859d	movq	%r14, %rsi
00000001000185a0	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
00000001000185a5	movq	-0x90(%rbp), %rbx
00000001000185ac	movq	-0x80(%rbp), %r14
00000001000185b0	leaq	(%r14,%r14,2), %rax
00000001000185b4	movq	%rbx, -0x98(%rbp)
00000001000185bb	leaq	(%rbx,%rax,8), %rax
00000001000185bf	movq	-0x58(%rbp), %rbx
00000001000185c3	jmp	0x10001862d
00000001000185c5	cmpq	$0x0, -0xf0(%rbp)
00000001000185cd	movq	-0x178(%rbp), %rcx
00000001000185d4	je	0x1000186ad
00000001000185da	testq	%rax, %rax
00000001000185dd	je	0x1000186ad
00000001000185e3	movq	-0x40(%rbp), %rax
00000001000185e7	leaq	(%rax,%rcx), %rbx
00000001000185eb	cmpq	%rbx, %rax
00000001000185ee	jae	0x100018555
00000001000185f4	cmpq	-0x88(%rbp), %r14
00000001000185fb	jne	0x10001861e
00000001000185fd	leaq	-0x90(%rbp), %rdi
0000000100018604	movq	%r14, %rsi
0000000100018607	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
000000010001860c	movq	-0x90(%rbp), %rax
0000000100018613	movq	%rax, -0x98(%rbp)
000000010001861a	movq	-0x80(%rbp), %r14
000000010001861e	leaq	(%r14,%r14,2), %rax
0000000100018622	movq	-0x98(%rbp), %rcx
0000000100018629	leaq	(%rcx,%rax,8), %rax
000000010001862d	movq	-0x40(%rbp), %rcx
0000000100018631	movq	%rcx, (%rax)
0000000100018634	movq	%rbx, 0x8(%rax)
0000000100018638	movq	-0x70(%rbp), %rcx
000000010001863c	movq	%rcx, 0x10(%rax)
0000000100018640	incq	%r14
0000000100018643	movq	%r14, -0x80(%rbp)
0000000100018647	movq	-0x98(%rbp), %rbx
000000010001864e	movq	%r15, -0x2a0(%rbp)
0000000100018655	movq	$0x0, -0x298(%rbp)
0000000100018660	movq	-0x70(%rbp), %r9
0000000100018664	cmpq	-0x190(%rbp), %r9
000000010001866b	jne	0x100018683
000000010001866d	leaq	-0x198(%rbp), %rdi
0000000100018674	movq	%r9, %rsi
0000000100018677	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h3522a6f6b7a4a3feE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h3522a6f6b7a4a3fe
000000010001867c	movq	-0x188(%rbp), %r9
0000000100018683	leaq	(%r9,%r9,8), %rdi
0000000100018687	shlq	$0x3, %rdi
000000010001868b	addq	-0x198(%rbp), %rdi
0000000100018692	movl	$0x9, %ecx
0000000100018697	leaq	-0x2a0(%rbp), %rsi
000000010001869e	rep		movsq	(%rsi), %es:(%rdi)
00000001000186a1	incq	%r9
00000001000186a4	movq	%r9, -0x188(%rbp)
00000001000186ab	jmp	0x1000186b1
00000001000186ad	movq	-0x70(%rbp), %r9
00000001000186b1	movq	-0x130(%rbp), %rax
00000001000186b8	testq	%rax, %rax
00000001000186bb	movq	%r14, -0xf8(%rbp)
00000001000186c2	jne	0x100017d62
00000001000186c8	movq	-0x90(%rbp), %rax
00000001000186cf	movq	%rax, -0xe0(%rbp)
00000001000186d6	cmpq	$0x15, %r14
00000001000186da	jae	0x100018838
00000001000186e0	cmpq	$0x1, %r14
00000001000186e4	jbe	0x100018ee4
00000001000186ea	movl	$0x1, %edx
00000001000186ef	movq	-0xe0(%rbp), %rdi
00000001000186f6	movq	%r14, %rsi
00000001000186f9	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h1cd1223c79b25d4fE ## core::slice::sort::insertion_sort_shift_left::h1cd1223c79b25d4f
00000001000186fe	jmp	0x100018ee4
0000000100018703	negq	%rsi
0000000100018706	movb	$0x6, %al
0000000100018708	movq	%rax, -0x30(%rbp)
000000010001870c	jmp	0x10001871c
000000010001870e	addq	%rax, %r13
0000000100018711	movb	$0x13, %al
0000000100018713	movq	%rax, -0x30(%rbp)
0000000100018717	xorl	%esi, %esi
0000000100018719	movq	%r13, %rdi
000000010001871c	movq	%rdi, -0x138(%rbp)
0000000100018723	movq	%rsi, -0x130(%rbp)
000000010001872a	xorl	%r12d, %r12d
000000010001872d	xorl	%eax, %eax
000000010001872f	movq	%rax, -0x38(%rbp)
0000000100018733	movq	-0x88(%rbp), %rax
000000010001873a	testq	%rax, %rax
000000010001873d	je	0x100018758
000000010001873f	movq	-0x90(%rbp), %rdi
0000000100018746	shlq	$0x3, %rax
000000010001874a	leaq	(%rax,%rax,2), %rsi
000000010001874e	movl	$0x8, %edx
0000000100018753	callq	___rust_dealloc
0000000100018758	movq	-0x198(%rbp), %rbx
000000010001875f	movq	-0x188(%rbp), %r14
0000000100018766	testq	%r14, %r14
0000000100018769	je	0x1000187d0
000000010001876b	leaq	0x28(%rbx), %r15
000000010001876f	jmp	0x100018789
0000000100018771	nopw	%cs:(%rax,%rax)
000000010001877b	nopl	(%rax,%rax)
0000000100018780	addq	$0x48, %r15
0000000100018784	decq	%r14
0000000100018787	je	0x1000187d0
0000000100018789	cmpq	$0x0, -0x20(%r15)
000000010001878e	je	0x100018780
0000000100018790	movq	-0x18(%r15), %rdi
0000000100018794	testq	%rdi, %rdi
0000000100018797	je	0x100018780
0000000100018799	movq	-0x10(%r15), %rax
000000010001879d	testq	%rax, %rax
00000001000187a0	je	0x1000187b4
00000001000187a2	shlq	$0x4, %rax
00000001000187a6	leaq	(%rax,%rax,2), %rsi
00000001000187aa	movl	$0x8, %edx
00000001000187af	callq	___rust_dealloc
00000001000187b4	movq	(%r15), %rsi
00000001000187b7	testq	%rsi, %rsi
00000001000187ba	je	0x100018780
00000001000187bc	movq	-0x8(%r15), %rdi
00000001000187c0	shlq	$0x5, %rsi
00000001000187c4	movl	$0x8, %edx
00000001000187c9	callq	___rust_dealloc
00000001000187ce	jmp	0x100018780
00000001000187d0	movq	-0x190(%rbp), %rax
00000001000187d7	testq	%rax, %rax
00000001000187da	je	0x1000187f1
00000001000187dc	shlq	$0x3, %rax
00000001000187e0	leaq	(%rax,%rax,8), %rsi
00000001000187e4	movl	$0x8, %edx
00000001000187e9	movq	%rbx, %rdi
00000001000187ec	callq	___rust_dealloc
00000001000187f1	xorl	%r15d, %r15d
00000001000187f4	movq	-0x38(%rbp), %rcx
00000001000187f8	movq	-0x30(%rbp), %rdx
00000001000187fc	jmp	0x100019001
0000000100018801	movq	-0x298(%rbp), %r12
0000000100018808	movq	-0x290(%rbp), %r13
000000010001880f	movq	%r12, %rax
0000000100018812	shrq	$0x8, %rax
0000000100018816	movq	%rax, -0x38(%rbp)
000000010001881a	movq	%r12, %rax
000000010001881d	movq	%r12, -0x30(%rbp)
0000000100018821	shrq	$0x10, %r12
0000000100018825	jmp	0x100018733
000000010001882a	movb	$0x12, %al
000000010001882c	movq	%rax, -0x30(%rbp)
0000000100018830	xorl	%r13d, %r13d
0000000100018833	jmp	0x10001872a
0000000100018838	movq	%r14, %rax
000000010001883b	shrq	%rax
000000010001883e	movq	%rax, -0x178(%rbp)
0000000100018845	leaq	(,%rax,8), %rax
000000010001884d	leaq	(%rax,%rax,2), %rdi
0000000100018851	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rbx
0000000100018858	movzbl	(%rbx), %eax
000000010001885b	movl	$0x8, %esi
0000000100018860	movq	%rdi, -0x98(%rbp)
0000000100018867	callq	___rust_alloc
000000010001886c	testq	%rax, %rax
000000010001886f	je	0x10001a764
0000000100018875	movq	%rax, %r15
0000000100018878	movzbl	(%rbx), %eax
000000010001887b	movl	$0x100, %edi                    ## imm = 0x100
0000000100018880	movl	$0x8, %esi
0000000100018885	callq	___rust_alloc
000000010001888a	testq	%rax, %rax
000000010001888d	movq	%r15, -0xc8(%rbp)
0000000100018894	je	0x10001a77e
000000010001889a	movq	%rax, %r13
000000010001889d	movq	-0xe0(%rbp), %rax
00000001000188a4	leaq	0x30(%rax), %rcx
00000001000188a8	movq	%rcx, -0xf0(%rbp)
00000001000188af	addq	$-0x18, %rax
00000001000188b3	movq	%rax, -0x58(%rbp)
00000001000188b7	movl	$0x10, %eax
00000001000188bc	movq	%rax, -0xa0(%rbp)
00000001000188c3	xorl	%ecx, %ecx
00000001000188c5	leaq	0x2fb24(%rip), %rax
00000001000188cc	movq	%rax, -0x1a0(%rbp)
00000001000188d3	xorl	%r12d, %r12d
00000001000188d6	jmp	0x1000188eb
00000001000188d8	movl	$0x1, %r12d
00000001000188de	movq	-0x78(%rbp), %rcx
00000001000188e2	cmpq	%r14, %rcx
00000001000188e5	jae	0x100018eb8
00000001000188eb	movq	%rcx, %r11
00000001000188ee	movq	%r14, %rdx
00000001000188f1	subq	%rcx, %rdx
00000001000188f4	leaq	(%rcx,%rcx,2), %rsi
00000001000188f8	movq	-0xe0(%rbp), %rax
00000001000188ff	leaq	(%rax,%rsi,8), %rdi
0000000100018903	cmpq	$0x2, %rdx
0000000100018907	movq	%rcx, -0x30(%rbp)
000000010001890b	jae	0x100018960
000000010001890d	movq	%r14, %rsi
0000000100018910	movq	%rsi, %rbx
0000000100018913	subq	%r11, %rbx
0000000100018916	jb	0x10001a641
000000010001891c	cmpq	%r14, %rsi
000000010001891f	ja	0x10001a641
0000000100018925	jae	0x100018988
0000000100018927	cmpq	$0xa, %rdx
000000010001892b	jae	0x100018988
000000010001892d	leaq	0xa(%r11), %rbx
0000000100018931	cmpq	%r14, %rbx
0000000100018934	cmovaeq	%r14, %rbx
0000000100018938	movq	%rbx, -0x78(%rbp)
000000010001893c	subq	%r11, %rbx
000000010001893f	jb	0x10001a67f
0000000100018945	cmpq	$0x2, %rdx
0000000100018949	movl	$0x1, %eax
000000010001894e	cmovbq	%rax, %rdx
0000000100018952	movq	%rbx, %rsi
0000000100018955	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h1cd1223c79b25d4fE ## core::slice::sort::insertion_sort_shift_left::h1cd1223c79b25d4f
000000010001895a	movq	-0x30(%rbp), %r11
000000010001895e	jmp	0x10001898c
0000000100018960	movq	(%rdi), %rax
0000000100018963	movq	0x18(%rdi), %rcx
0000000100018967	cmpq	%rax, %rcx
000000010001896a	jae	0x100018d7f
0000000100018970	cmpq	$0x2, %rdx
0000000100018974	jne	0x100018d93
000000010001897a	leaq	0x2(%r11), %rsi
000000010001897e	movl	$0x2, %edx
0000000100018983	jmp	0x100018dff
0000000100018988	movq	%rsi, -0x78(%rbp)
000000010001898c	cmpq	-0xa0(%rbp), %r12
0000000100018993	jne	0x100018a13
0000000100018995	movq	%r13, -0x40(%rbp)
0000000100018999	movq	%r14, %r13
000000010001899c	leaq	(%r12,%r12), %rax
00000001000189a0	movq	%rax, -0xa0(%rbp)
00000001000189a7	movq	%r12, %rdi
00000001000189aa	shlq	$0x5, %rdi
00000001000189ae	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
00000001000189b5	movzbl	(%rax), %eax
00000001000189b8	movl	$0x8, %esi
00000001000189bd	callq	___rust_alloc
00000001000189c2	testq	%rax, %rax
00000001000189c5	je	0x10001a693
00000001000189cb	movq	%rax, %r14
00000001000189ce	movq	%r12, %r15
00000001000189d1	shlq	$0x4, %r15
00000001000189d5	movq	%rax, %rdi
00000001000189d8	movq	%r12, -0x38(%rbp)
00000001000189dc	movq	-0x40(%rbp), %r12
00000001000189e0	movq	%r12, %rsi
00000001000189e3	movq	%r15, %rdx
00000001000189e6	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000189eb	movl	$0x8, %edx
00000001000189f0	movq	%r12, %rdi
00000001000189f3	movq	-0x38(%rbp), %r12
00000001000189f7	movq	%r15, %rsi
00000001000189fa	callq	___rust_dealloc
00000001000189ff	movq	%r14, %rax
0000000100018a02	movq	%r13, %r14
0000000100018a05	movq	%rax, %r13
0000000100018a08	movq	-0xc8(%rbp), %r15
0000000100018a0f	movq	-0x30(%rbp), %r11
0000000100018a13	movq	%r12, %rax
0000000100018a16	shlq	$0x4, %rax
0000000100018a1a	movq	%rbx, (%r13,%rax)
0000000100018a1f	movq	%r11, 0x8(%r13,%rax)
0000000100018a24	incq	%r12
0000000100018a27	cmpq	$0x2, %r12
0000000100018a2b	jb	0x1000188de
0000000100018a31	movq	%r13, -0x40(%rbp)
0000000100018a35	jmp	0x100018aaf
0000000100018a37	movq	-0xc8(%rbp), %r15
0000000100018a3e	movq	%r15, %rsi
0000000100018a41	subq	%rsi, %r13
0000000100018a44	movq	%rbx, %rdi
0000000100018a47	movq	%r13, %rdx
0000000100018a4a	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100018a4f	movq	-0x100(%rbp), %rax
0000000100018a56	addq	-0x30(%rbp), %rax
0000000100018a5a	movq	-0x148(%rbp), %rcx
0000000100018a61	movq	%rax, (%rcx)
0000000100018a64	movq	-0x158(%rbp), %rax
0000000100018a6b	movq	-0xe8(%rbp), %rcx
0000000100018a72	movq	%rax, (%rcx)
0000000100018a75	movq	-0x150(%rbp), %rdi
0000000100018a7c	leaq	0x10(%rdi), %rsi
0000000100018a80	movq	-0x160(%rbp), %rax
0000000100018a87	notq	%rax
0000000100018a8a	movq	-0x70(%rbp), %rdx
0000000100018a8e	addq	%rax, %rdx
0000000100018a91	shlq	$0x4, %rdx
0000000100018a95	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100018a9a	cmpq	$0x1, %r12
0000000100018a9e	movq	-0xf8(%rbp), %r14
0000000100018aa5	movq	-0x40(%rbp), %r13
0000000100018aa9	jbe	0x1000188d8
0000000100018aaf	leaq	-0x1(%r12), %r8
0000000100018ab4	movq	%r8, %rcx
0000000100018ab7	shlq	$0x4, %rcx
0000000100018abb	movq	(%r13,%rcx), %rax
0000000100018ac0	movq	0x8(%r13,%rcx), %rcx
0000000100018ac5	addq	%rax, %rcx
0000000100018ac8	cmpq	%r14, %rcx
0000000100018acb	je	0x100018b1b
0000000100018acd	movq	%r12, %rdx
0000000100018ad0	shlq	$0x4, %rdx
0000000100018ad4	movq	-0x20(%rdx,%r13), %rsi
0000000100018ad9	cmpq	%rax, %rsi
0000000100018adc	jbe	0x100018b1b
0000000100018ade	cmpq	$0x3, %r12
0000000100018ae2	jb	0x100018ea2
0000000100018ae8	leaq	-0x3(%r12), %r9
0000000100018aed	movq	%r9, %rcx
0000000100018af0	shlq	$0x4, %rcx
0000000100018af4	movq	(%r13,%rcx), %rcx
0000000100018af9	leaq	(%rsi,%rax), %rdi
0000000100018afd	cmpq	%rdi, %rcx
0000000100018b00	jbe	0x100018b32
0000000100018b02	cmpq	$0x4, %r12
0000000100018b06	jb	0x100018ead
0000000100018b0c	addq	%rcx, %rsi
0000000100018b0f	cmpq	%rsi, -0x40(%rdx,%r13)
0000000100018b14	jbe	0x100018b32
0000000100018b16	jmp	0x1000188de
0000000100018b1b	cmpq	$0x3, %r12
0000000100018b1f	jb	0x100018b37
0000000100018b21	leaq	-0x3(%r12), %r9
0000000100018b26	movq	%r9, %rcx
0000000100018b29	shlq	$0x4, %rcx
0000000100018b2d	movq	(%r13,%rcx), %rcx
0000000100018b32	cmpq	%rax, %rcx
0000000100018b35	jb	0x100018b3c
0000000100018b37	leaq	-0x2(%r12), %r9
0000000100018b3c	cmpq	%r9, %r12
0000000100018b3f	jbe	0x10001a569
0000000100018b45	leaq	0x1(%r9), %rax
0000000100018b49	cmpq	%rax, %r12
0000000100018b4c	jbe	0x10001a526
0000000100018b52	movq	%r9, %rcx
0000000100018b55	shlq	$0x4, %rcx
0000000100018b59	movq	0x8(%r13,%rcx), %rdi
0000000100018b5e	shlq	$0x4, %rax
0000000100018b62	movq	(%r13,%rax), %rdx
0000000100018b67	movq	0x8(%r13,%rax), %rsi
0000000100018b6c	addq	%rdx, %rsi
0000000100018b6f	movq	%rsi, %r15
0000000100018b72	subq	%rdi, %r15
0000000100018b75	jb	0x10001a53d
0000000100018b7b	movq	%r8, -0x38(%rbp)
0000000100018b7f	cmpq	%r14, %rsi
0000000100018b82	ja	0x10001a54e
0000000100018b88	movq	%rdx, -0x100(%rbp)
0000000100018b8f	movq	%r9, -0x160(%rbp)
0000000100018b96	movq	%r12, -0x70(%rbp)
0000000100018b9a	leaq	(%r13,%rcx), %rdx
0000000100018b9f	movq	%rdx, -0x150(%rbp)
0000000100018ba6	movq	(%r13,%rcx), %rdx
0000000100018bab	leaq	(%r13,%rax), %rcx
0000000100018bb0	movq	%rcx, -0x148(%rbp)
0000000100018bb7	leaq	0x8(%r13,%rax), %rax
0000000100018bbc	movq	%rax, -0xe8(%rbp)
0000000100018bc3	movq	%rdi, -0x158(%rbp)
0000000100018bca	leaq	(%rdi,%rdi,2), %rax
0000000100018bce	movq	-0xe0(%rbp), %rcx
0000000100018bd5	leaq	(%rcx,%rax,8), %rbx
0000000100018bd9	leaq	(%rdx,%rdx,2), %rax
0000000100018bdd	leaq	(%rbx,%rax,8), %r14
0000000100018be1	leaq	(%rsi,%rsi,2), %rax
0000000100018be5	movq	%rax, -0x140(%rbp)
0000000100018bec	movq	%r15, %r12
0000000100018bef	subq	%rdx, %r12
0000000100018bf2	cmpq	%rdx, %r12
0000000100018bf5	movq	%rdx, -0x30(%rbp)
0000000100018bf9	jae	0x100018cb6
0000000100018bff	leaq	(,%r12,8), %rax
0000000100018c07	leaq	(%rax,%rax,2), %r13
0000000100018c0b	movq	-0xc8(%rbp), %r15
0000000100018c12	movq	%r15, %rdi
0000000100018c15	movq	%r14, %rsi
0000000100018c18	movq	%r13, %rdx
0000000100018c1b	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100018c20	addq	%r15, %r13
0000000100018c23	cmpq	$0x0, -0x30(%rbp)
0000000100018c28	jle	0x100018d67
0000000100018c2e	testq	%r12, %r12
0000000100018c31	jle	0x100018d67
0000000100018c37	movq	-0x58(%rbp), %rax
0000000100018c3b	movq	-0x140(%rbp), %rcx
0000000100018c42	leaq	(%rax,%rcx,8), %rax
0000000100018c46	movq	-0x38(%rbp), %r12
0000000100018c4a	nopw	(%rax,%rax)
0000000100018c50	movq	-0x18(%r13), %rcx
0000000100018c54	movq	-0x18(%r14), %rdx
0000000100018c58	cmpq	%rdx, %rcx
0000000100018c5b	movl	$0x0, %esi
0000000100018c60	sbbq	%rsi, %rsi
0000000100018c63	cmpq	%rdx, %rcx
0000000100018c66	movl	$0x0, %edi
0000000100018c6b	adcq	$-0x1, %rdi
0000000100018c6f	cmpq	%rdx, %rcx
0000000100018c72	leaq	(%rsi,%rsi,2), %rcx
0000000100018c76	leaq	(%r14,%rcx,8), %r14
0000000100018c7a	leaq	(%rdi,%rdi,2), %rcx
0000000100018c7e	leaq	(%r13,%rcx,8), %r13
0000000100018c83	movq	%r13, %rcx
0000000100018c86	cmovbq	%r14, %rcx
0000000100018c8a	movq	0x10(%rcx), %rdx
0000000100018c8e	movq	%rdx, 0x10(%rax)
0000000100018c92	movq	(%rcx), %rdx
0000000100018c95	movq	0x8(%rcx), %rcx
0000000100018c99	movq	%rcx, 0x8(%rax)
0000000100018c9d	movq	%rdx, (%rax)
0000000100018ca0	cmpq	%rbx, %r14
0000000100018ca3	jbe	0x100018cae
0000000100018ca5	addq	$-0x18, %rax
0000000100018ca9	cmpq	%r15, %r13
0000000100018cac	ja	0x100018c50
0000000100018cae	movq	%r14, %rbx
0000000100018cb1	jmp	0x100018a3e
0000000100018cb6	leaq	(,%rdx,8), %rax
0000000100018cbe	leaq	(%rax,%rax,2), %r13
0000000100018cc2	movq	-0xc8(%rbp), %r12
0000000100018cc9	movq	%r12, %rdi
0000000100018ccc	movq	%rbx, %rsi
0000000100018ccf	movq	%r13, %rdx
0000000100018cd2	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100018cd7	movq	-0x30(%rbp), %rax
0000000100018cdb	addq	%r12, %r13
0000000100018cde	testq	%rax, %rax
0000000100018ce1	jle	0x100018d6c
0000000100018ce7	cmpq	%rax, %r15
0000000100018cea	movq	-0x38(%rbp), %r12
0000000100018cee	jle	0x100018a37
0000000100018cf4	movq	-0xe0(%rbp), %rax
0000000100018cfb	movq	-0x140(%rbp), %rcx
0000000100018d02	leaq	(%rax,%rcx,8), %rax
0000000100018d06	movq	-0xc8(%rbp), %r15
0000000100018d0d	movq	%r15, %rsi
0000000100018d10	movq	(%r14), %rdx
0000000100018d13	xorl	%edi, %edi
0000000100018d15	xorl	%ecx, %ecx
0000000100018d17	cmpq	(%rsi), %rdx
0000000100018d1a	setae	%dil
0000000100018d1e	setb	%dl
0000000100018d21	movq	%rsi, %r8
0000000100018d24	cmovbq	%r14, %r8
0000000100018d28	movq	0x10(%r8), %r9
0000000100018d2c	movq	%r9, 0x10(%rbx)
0000000100018d30	movq	(%r8), %r9
0000000100018d33	movq	0x8(%r8), %r8
0000000100018d37	movq	%r8, 0x8(%rbx)
0000000100018d3b	movq	%r9, (%rbx)
0000000100018d3e	addq	$0x18, %rbx
0000000100018d42	leaq	(%rdi,%rdi,2), %rdi
0000000100018d46	leaq	(%rsi,%rdi,8), %rsi
0000000100018d4a	cmpq	%r13, %rsi
0000000100018d4d	jae	0x100018a41
0000000100018d53	movb	%dl, %cl
0000000100018d55	leaq	(%rcx,%rcx,2), %rcx
0000000100018d59	leaq	(%r14,%rcx,8), %r14
0000000100018d5d	cmpq	%rax, %r14
0000000100018d60	jb	0x100018d10
0000000100018d62	jmp	0x100018a41
0000000100018d67	movq	%r14, %rbx
0000000100018d6a	jmp	0x100018d73
0000000100018d6c	movq	-0xc8(%rbp), %r15
0000000100018d73	movq	%r15, %rsi
0000000100018d76	movq	-0x38(%rbp), %r12
0000000100018d7a	jmp	0x100018a41
0000000100018d7f	cmpq	$0x2, %rdx
0000000100018d83	jne	0x100018dbf
0000000100018d85	leaq	0x2(%r11), %rsi
0000000100018d89	movl	$0x2, %edx
0000000100018d8e	jmp	0x100018910
0000000100018d93	movq	-0xf0(%rbp), %r8
0000000100018d9a	leaq	(%r8,%rsi,8), %r8
0000000100018d9e	movl	$0x2, %esi
0000000100018da3	movq	%rcx, %r9
0000000100018da6	movq	%r9, %r10
0000000100018da9	movq	(%r8), %r9
0000000100018dac	cmpq	%r10, %r9
0000000100018daf	jae	0x100018dec
0000000100018db1	incq	%rsi
0000000100018db4	addq	$0x18, %r8
0000000100018db8	cmpq	%rsi, %rdx
0000000100018dbb	jne	0x100018da6
0000000100018dbd	jmp	0x100018de9
0000000100018dbf	movq	-0xf0(%rbp), %r8
0000000100018dc6	leaq	(%r8,%rsi,8), %r8
0000000100018dca	movl	$0x2, %esi
0000000100018dcf	movq	%rcx, %r9
0000000100018dd2	movq	%r9, %r10
0000000100018dd5	movq	(%r8), %r9
0000000100018dd8	cmpq	%r10, %r9
0000000100018ddb	jb	0x100018dec
0000000100018ddd	incq	%rsi
0000000100018de0	addq	$0x18, %r8
0000000100018de4	cmpq	%rsi, %rdx
0000000100018de7	jne	0x100018dd2
0000000100018de9	movq	%rdx, %rsi
0000000100018dec	leaq	(%rsi,%r11), %r8
0000000100018df0	movq	%rsi, %rdx
0000000100018df3	movq	%r8, %rsi
0000000100018df6	cmpq	%rax, %rcx
0000000100018df9	jae	0x100018910
0000000100018dff	cmpq	%r11, %rsi
0000000100018e02	jb	0x10001a6fb
0000000100018e08	cmpq	%r14, %rsi
0000000100018e0b	ja	0x10001a6e0
0000000100018e11	cmpq	$0x2, %rdx
0000000100018e15	jb	0x100018910
0000000100018e1b	movq	%rsi, %r10
0000000100018e1e	movq	%rdx, %rax
0000000100018e21	shrq	%rax
0000000100018e24	leaq	(%r11,%rdx), %rcx
0000000100018e28	leaq	(%rcx,%rcx,2), %rcx
0000000100018e2c	movq	-0x58(%rbp), %rsi
0000000100018e30	leaq	(%rsi,%rcx,8), %rcx
0000000100018e34	movq	%rdi, %rsi
0000000100018e37	movq	0x10(%rsi), %r8
0000000100018e3b	movq	%r8, -0x290(%rbp)
0000000100018e42	movq	(%rsi), %r8
0000000100018e45	movq	0x8(%rsi), %r9
0000000100018e49	movq	%r9, -0x298(%rbp)
0000000100018e50	movq	%r8, -0x2a0(%rbp)
0000000100018e57	movq	0x10(%rcx), %r8
0000000100018e5b	movq	%r8, 0x10(%rsi)
0000000100018e5f	movq	(%rcx), %r8
0000000100018e62	movq	0x8(%rcx), %r9
0000000100018e66	movq	%r9, 0x8(%rsi)
0000000100018e6a	movq	%r8, (%rsi)
0000000100018e6d	movq	-0x290(%rbp), %r8
0000000100018e74	movq	%r8, 0x10(%rcx)
0000000100018e78	movq	-0x2a0(%rbp), %r8
0000000100018e7f	movq	-0x298(%rbp), %r9
0000000100018e86	movq	%r9, 0x8(%rcx)
0000000100018e8a	movq	%r8, (%rcx)
0000000100018e8d	addq	$0x18, %rsi
0000000100018e91	addq	$-0x18, %rcx
0000000100018e95	decq	%rax
0000000100018e98	jne	0x100018e37
0000000100018e9a	movq	%r10, %rsi
0000000100018e9d	jmp	0x100018910
0000000100018ea2	movl	$0x2, %r12d
0000000100018ea8	jmp	0x1000188de
0000000100018ead	movl	$0x3, %r12d
0000000100018eb3	jmp	0x1000188de
0000000100018eb8	movq	-0xa0(%rbp), %rsi
0000000100018ebf	shlq	$0x4, %rsi
0000000100018ec3	movl	$0x8, %edx
0000000100018ec8	movq	%r13, %rdi
0000000100018ecb	callq	___rust_dealloc
0000000100018ed0	movl	$0x8, %edx
0000000100018ed5	movq	%r15, %rdi
0000000100018ed8	movq	-0x98(%rbp), %rsi
0000000100018edf	callq	___rust_dealloc
0000000100018ee4	movq	-0x188(%rbp), %r13
0000000100018eeb	movq	%r13, -0x290(%rbp)
0000000100018ef2	movq	-0x198(%rbp), %rcx
0000000100018ef9	movq	-0x190(%rbp), %rax
0000000100018f00	movq	%rax, -0x298(%rbp)
0000000100018f07	movq	%rcx, -0x2a0(%rbp)
0000000100018f0e	cmpq	%r13, %rax
0000000100018f11	jbe	0x100018f5a
0000000100018f13	movq	-0x2a0(%rbp), %rdi
0000000100018f1a	shlq	$0x3, %rax
0000000100018f1e	leaq	(%rax,%rax,8), %rsi
0000000100018f22	testq	%r13, %r13
0000000100018f25	je	0x100018f63
0000000100018f27	leaq	(,%r13,8), %rax
0000000100018f2f	leaq	(%rax,%rax,8), %rbx
0000000100018f33	movl	$0x8, %edx
0000000100018f38	movq	%rbx, %rcx
0000000100018f3b	callq	___rust_realloc
0000000100018f40	movq	%rax, %r15
0000000100018f43	testq	%rax, %rax
0000000100018f46	jne	0x100018f73
0000000100018f48	movl	$0x8, %edi
0000000100018f4d	movq	%rbx, %rsi
0000000100018f50	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100018f55	jmp	0x10001a7ca
0000000100018f5a	movq	-0x2a0(%rbp), %r15
0000000100018f61	jmp	0x100018f73
0000000100018f63	movl	$0x8, %r15d
0000000100018f69	movl	$0x8, %edx
0000000100018f6e	callq	___rust_dealloc
0000000100018f73	movq	-0x90(%rbp), %r12
0000000100018f7a	movq	-0x88(%rbp), %rbx
0000000100018f81	movq	-0x80(%rbp), %r14
0000000100018f85	cmpq	%r14, %rbx
0000000100018f88	movq	%r13, -0x30(%rbp)
0000000100018f8c	jbe	0x100018fd7
0000000100018f8e	leaq	(,%rbx,8), %rax
0000000100018f96	leaq	(%rax,%rax,2), %rsi
0000000100018f9a	testq	%r14, %r14
0000000100018f9d	je	0x100018fdc
0000000100018f9f	leaq	(,%r14,8), %rax
0000000100018fa7	leaq	(%rax,%rax,2), %rcx
0000000100018fab	movl	$0x8, %edx
0000000100018fb0	movq	%r12, %rdi
0000000100018fb3	movq	%rcx, -0x38(%rbp)
0000000100018fb7	callq	___rust_realloc
0000000100018fbc	movq	%rax, %r13
0000000100018fbf	testq	%rax, %rax
0000000100018fc2	jne	0x100018fef
0000000100018fc4	movl	$0x8, %edi
0000000100018fc9	movq	-0x38(%rbp), %rsi
0000000100018fcd	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100018fd2	jmp	0x10001a7ca
0000000100018fd7	movq	%r12, %r13
0000000100018fda	jmp	0x100018fef
0000000100018fdc	movl	$0x8, %r13d
0000000100018fe2	movl	$0x8, %edx
0000000100018fe7	movq	%r12, %rdi
0000000100018fea	callq	___rust_dealloc
0000000100018fef	movq	-0x30(%rbp), %rdx
0000000100018ff3	movq	%rdx, %rcx
0000000100018ff6	shrq	$0x8, %rcx
0000000100018ffa	movq	%rdx, %r12
0000000100018ffd	shrq	$0x10, %r12
0000000100019001	movq	%r15, -0x2a0(%rbp)
0000000100019008	shlq	$0x10, %r12
000000010001900c	movzbl	%cl, %eax
000000010001900f	shlq	$0x8, %rax
0000000100019013	orq	%r12, %rax
0000000100019016	movzbl	%dl, %ecx
0000000100019019	orq	%rax, %rcx
000000010001901c	movq	%rcx, -0x298(%rbp)
0000000100019023	movq	%r13, -0x290(%rbp)
000000010001902a	movq	%r14, -0x288(%rbp)
0000000100019031	movq	-0x180(%rbp), %rbx
0000000100019038	cmpq	$0x0, 0x1d8(%rbx)
0000000100019040	je	0x10001906c
0000000100019042	leaq	-0x2a0(%rbp), %rdi
0000000100019049	callq	__ZN4core3ptr184drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$17h5ca54a23d3e8471bE ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$::h5ca54a23d3e8471b
000000010001904e	movq	-0x108(%rbp), %r14
0000000100019055	movq	-0x170(%rbp), %rsi
000000010001905c	cmpq	$0x0, 0x1e0(%rbx)
0000000100019064	jne	0x100017c21
000000010001906a	jmp	0x1000190cb
000000010001906c	movq	-0x288(%rbp), %rax
0000000100019073	movq	%rax, 0x1f8(%rbx)
000000010001907a	movq	-0x290(%rbp), %rax
0000000100019081	movq	%rax, 0x1f0(%rbx)
0000000100019088	movq	-0x2a0(%rbp), %rax
000000010001908f	movq	-0x298(%rbp), %rcx
0000000100019096	movq	%rcx, 0x1e8(%rbx)
000000010001909d	movq	%rax, 0x1e0(%rbx)
00000001000190a4	movq	$0x1, 0x1d8(%rbx)
00000001000190af	movq	-0x108(%rbp), %r14
00000001000190b6	movq	-0x170(%rbp), %rsi
00000001000190bd	cmpq	$0x0, 0x1e0(%rbx)
00000001000190c5	jne	0x100017c21
00000001000190cb	movzbl	0x1e8(%rbx), %ecx
00000001000190d2	movq	0x1f0(%rbx), %rax
00000001000190d9	cmpb	$0x4b, %cl
00000001000190dc	jne	0x1000191da
00000001000190e2	movq	0x10(%rsi), %r12
00000001000190e6	movq	0x18(%rax), %rcx
00000001000190ea	testq	%rcx, %rcx
00000001000190ed	je	0x100019164
00000001000190ef	movq	0x10(%rax), %rdx
00000001000190f3	xorl	%r15d, %r15d
00000001000190f6	movl	$0x1, %esi
00000001000190fb	xorl	%r8d, %r8d
00000001000190fe	movq	%rcx, %rdi
0000000100019101	jmp	0x100019118
0000000100019103	nopw	%cs:(%rax,%rax)
000000010001910d	nopl	(%rax)
0000000100019110	movq	%rcx, %rdi
0000000100019113	subq	%r8, %rcx
0000000100019116	jbe	0x100019167
0000000100019118	shrq	%rcx
000000010001911b	addq	%r8, %rcx
000000010001911e	leaq	(%rcx,%rcx,2), %r9
0000000100019122	cmpq	0x8(%rdx,%r9,8), %r12
0000000100019127	movl	$0x0, %r10d
000000010001912d	adcb	$-0x1, %r10b
0000000100019131	cmpq	%r12, (%rdx,%r9,8)
0000000100019135	movzbl	%r10b, %r10d
0000000100019139	cmoval	%esi, %r10d
000000010001913d	cmpb	$0x1, %r10b
0000000100019141	je	0x100019110
0000000100019143	movzbl	%r10b, %r8d
0000000100019147	cmpl	$0xff, %r8d
000000010001914e	jne	0x1000191fb
0000000100019154	incq	%rcx
0000000100019157	movq	%rcx, %r8
000000010001915a	movq	%rdi, %rcx
000000010001915d	subq	%r8, %rcx
0000000100019160	ja	0x100019118
0000000100019162	jmp	0x100019167
0000000100019164	xorl	%r15d, %r15d
0000000100019167	movq	-0x170(%rbp), %rcx
000000010001916e	movq	(%rcx), %rbx
0000000100019171	movl	$0x2, %r13d
0000000100019177	cmpl	$0x2f, 0x60(%rbx)
000000010001917b	je	0x100019476
0000000100019181	cmpq	$0x0, 0x1b0(%rbx)
0000000100019189	jne	0x1000193b0
000000010001918f	leaq	0x60(%rbx), %rsi
0000000100019193	leaq	-0x2a0(%rbp), %r14
000000010001919a	movq	%r14, %rdi
000000010001919d	callq	__ZN93_$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h667fbe8abcedc734E ## _$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h667fbe8abcedc734
00000001000191a2	leaq	-0x138(%rbp), %rdi
00000001000191a9	movq	%rbx, %rsi
00000001000191ac	movq	%r14, %rdx
00000001000191af	movq	-0xd0(%rbp), %rcx
00000001000191b6	callq	__ZN9addr2line5Lines5parse17h74bb7e00c6eb3bb5E ## addr2line::Lines::parse::h74bb7e00c6eb3bb5
00000001000191bb	cmpq	$0x0, 0x1b0(%rbx)
00000001000191c3	je	0x100019366
00000001000191c9	leaq	-0x138(%rbp), %rdi
00000001000191d0	callq	__ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$17hdd078504879d0965E ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$::hdd078504879d0965
00000001000191d5	jmp	0x1000193a9
00000001000191da	movl	0x1e9(%rbx), %edx
00000001000191e0	movl	0x1ec(%rbx), %esi
00000001000191e6	movl	%esi, 0x14(%r14)
00000001000191ea	movl	%edx, 0x11(%r14)
00000001000191ee	movb	%cl, 0x10(%r14)
00000001000191f2	movq	%rax, 0x18(%r14)
00000001000191f6	jmp	0x100017bcb
00000001000191fb	movq	0x10(%rdx,%r9,8), %rdi
0000000100019200	movq	0x8(%rax), %rsi
0000000100019204	cmpq	%rsi, %rdi
0000000100019207	jae	0x10001a50a
000000010001920d	movq	(%rax), %rax
0000000100019210	leaq	(%rdi,%rdi,8), %rcx
0000000100019214	leaq	0x8(%rax,%rcx,8), %r12
0000000100019219	cmpq	$0x0, 0x8(%rax,%rcx,8)
000000010001921f	je	0x100019244
0000000100019221	cmpq	$0x0, 0x8(%r12)
0000000100019227	je	0x100019343
000000010001922d	addq	$0x8, %r12
0000000100019231	movq	%r12, %r15
0000000100019234	movq	-0x170(%rbp), %rcx
000000010001923b	movq	0x10(%rcx), %r12
000000010001923f	jmp	0x10001916e
0000000100019244	movq	%r12, -0xe0(%rbp)
000000010001924b	movq	(%rax,%rcx,8), %rbx
000000010001924f	movq	-0xa8(%rbp), %rcx
0000000100019256	movq	0x30(%rcx), %rdx
000000010001925a	movq	0x38(%rcx), %rax
000000010001925e	movzbl	0x49(%rcx), %r12d
0000000100019263	xorl	%ecx, %ecx
0000000100019265	cmpb	$0x8, %r12b
0000000100019269	sete	%cl
000000010001926c	movq	%rax, %rsi
000000010001926f	subq	%rdx, %rsi
0000000100019272	leaq	0x4(%rsi,%rcx,8), %rsi
0000000100019277	movq	%rbx, %r9
000000010001927a	subq	%rsi, %r9
000000010001927d	movq	%rbx, -0xf8(%rbp)
0000000100019284	jb	0x1000195a7
000000010001928a	cmpq	%r9, %rdx
000000010001928d	jbe	0x1000195a7
0000000100019293	movq	-0x170(%rbp), %rsi
000000010001929a	movq	0x8(%rsi), %r15
000000010001929e	movq	-0xa8(%rbp), %r11
00000001000192a5	movq	0x28(%r11), %rdi
00000001000192a9	movq	0x158(%r11), %rsi
00000001000192b0	leaq	0x10(%rsi), %r8
00000001000192b4	leaq	(%rdi,%r9), %r13
00000001000192b8	movq	%r13, -0x138(%rbp)
00000001000192bf	movq	%rdx, %r10
00000001000192c2	movb	$0x13, %r14b
00000001000192c5	subq	%r9, %r10
00000001000192c8	movq	%r10, -0x130(%rbp)
00000001000192cf	movq	%r11, -0x128(%rbp)
00000001000192d6	movq	%r8, -0x120(%rbp)
00000001000192dd	movq	$0x0, -0x118(%rbp)
00000001000192e8	je	0x100019902
00000001000192ee	leaq	0x4(,%rcx,8), %rcx
00000001000192f6	leaq	(%rdi,%rdx), %r13
00000001000192fa	movq	%rbx, %r9
00000001000192fd	subq	%rcx, %r9
0000000100019300	subq	%rax, %r9
0000000100019303	xorl	%eax, %eax
0000000100019305	xorl	%ecx, %ecx
0000000100019307	movzbl	(%r13,%r9), %r10d
000000010001930d	cmpl	$0x3f, %ecx
0000000100019310	jne	0x10001931c
0000000100019312	cmpb	$0x1, %r10b
0000000100019316	ja	0x1000195f0
000000010001931c	movzbl	%r10b, %r10d
0000000100019320	movl	%r10d, %r11d
0000000100019323	andl	$0x7f, %r11d
0000000100019327	shlq	%cl, %r11
000000010001932a	orq	%r11, %rax
000000010001932d	testb	%r10b, %r10b
0000000100019330	jns	0x1000195f8
0000000100019336	addl	$0x7, %ecx
0000000100019339	incq	%r9
000000010001933c	jne	0x100019307
000000010001933e	jmp	0x100019902
0000000100019343	movzbl	0x10(%r12), %eax
0000000100019349	movq	0x18(%r12), %r15
000000010001934e	cmpb	$0x4b, %al
0000000100019350	movq	-0x170(%rbp), %rcx
0000000100019357	jne	0x1000195bf
000000010001935d	movq	0x10(%rcx), %r12
0000000100019361	jmp	0x10001916e
0000000100019366	movq	-0x120(%rbp), %rax
000000010001936d	movq	%rax, 0x1d0(%rbx)
0000000100019374	movq	-0x128(%rbp), %rax
000000010001937b	movq	%rax, 0x1c8(%rbx)
0000000100019382	movq	-0x138(%rbp), %rax
0000000100019389	movq	-0x130(%rbp), %rcx
0000000100019390	movq	%rcx, 0x1c0(%rbx)
0000000100019397	movq	%rax, 0x1b8(%rbx)
000000010001939e	movq	$0x1, 0x1b0(%rbx)
00000001000193a9	movq	-0x108(%rbp), %r14
00000001000193b0	leaq	0x1b8(%rbx), %rax
00000001000193b7	leaq	0x1c0(%rbx), %rcx
00000001000193be	cmpq	$0x0, 0x1b8(%rbx)
00000001000193c6	cmoveq	%rcx, %rax
00000001000193ca	jne	0x1000193e0
00000001000193cc	movzbl	(%rax), %edx
00000001000193cf	movq	0x8(%rax), %rcx
00000001000193d3	cmpq	$0x4b, %rdx
00000001000193d7	jne	0x10001947b
00000001000193dd	movq	%rcx, %rax
00000001000193e0	testq	%rax, %rax
00000001000193e3	je	0x100019476
00000001000193e9	leaq	0x1(%r12), %rcx
00000001000193ee	movq	0x10(%rax), %rdx
00000001000193f2	movq	0x18(%rax), %rsi
00000001000193f6	testq	%rsi, %rsi
00000001000193f9	je	0x1000194a6
00000001000193ff	xorl	%r9d, %r9d
0000000100019402	movl	$0x1, %r8d
0000000100019408	movq	%rsi, %rdi
000000010001940b	movq	%rsi, %r10
000000010001940e	jmp	0x100019418
0000000100019410	movq	%rdi, %r10
0000000100019413	subq	%r9, %rdi
0000000100019416	jbe	0x100019460
0000000100019418	shrq	%rdi
000000010001941b	addq	%r9, %rdi
000000010001941e	movq	%rdi, %r11
0000000100019421	shlq	$0x5, %r11
0000000100019425	cmpq	0x18(%rdx,%r11), %r12
000000010001942a	movl	$0x0, %ebx
000000010001942f	adcb	$-0x1, %bl
0000000100019432	cmpq	%r12, 0x10(%rdx,%r11)
0000000100019437	movzbl	%bl, %r11d
000000010001943b	cmoval	%r8d, %r11d
000000010001943f	cmpb	$0x1, %r11b
0000000100019443	je	0x100019410
0000000100019445	movzbl	%r11b, %r9d
0000000100019449	cmpl	$0xff, %r9d
0000000100019450	jne	0x1000194a8
0000000100019452	incq	%rdi
0000000100019455	movq	%rdi, %r9
0000000100019458	movq	%r10, %rdi
000000010001945b	subq	%r9, %rdi
000000010001945e	ja	0x100019418
0000000100019460	xorl	%edi, %edi
0000000100019462	movq	%rsi, %r10
0000000100019465	movl	$0x0, %r8d
000000010001946b	testq	%r9, %r9
000000010001946e	jne	0x100019529
0000000100019474	jmp	0x1000194a8
0000000100019476	jmp	0x100019581
000000010001947b	movzwl	0x5(%rax), %esi
000000010001947f	movzbl	0x7(%rax), %edi
0000000100019483	shll	$0x10, %edi
0000000100019486	orl	%esi, %edi
0000000100019488	movl	0x1(%rax), %eax
000000010001948b	shlq	$0x28, %rdi
000000010001948f	shlq	$0x8, %rax
0000000100019493	orq	%rdi, %rax
0000000100019496	orq	%rdx, %rax
0000000100019499	movq	%rax, 0x10(%r14)
000000010001949d	movq	%rcx, 0x18(%r14)
00000001000194a1	jmp	0x100017bcb
00000001000194a6	xorl	%edi, %edi
00000001000194a8	cmpq	%rsi, %rdi
00000001000194ab	jae	0x100019523
00000001000194ad	movq	%rdi, %r8
00000001000194b0	shlq	$0x5, %r8
00000001000194b4	movq	0x8(%rdx,%r8), %r9
00000001000194b9	testq	%r9, %r9
00000001000194bc	je	0x100019523
00000001000194be	movq	(%rdx,%r8), %r10
00000001000194c2	xorl	%r8d, %r8d
00000001000194c5	movl	$0xff, %r11d
00000001000194cb	movq	%r9, %rbx
00000001000194ce	jmp	0x1000194d8
00000001000194d0	movq	%r9, %rbx
00000001000194d3	subq	%r8, %r9
00000001000194d6	jbe	0x100019516
00000001000194d8	shrq	%r9
00000001000194db	addq	%r8, %r9
00000001000194de	leaq	(%r9,%r9,2), %r13
00000001000194e2	xorl	%r14d, %r14d
00000001000194e5	cmpq	%r12, (%r10,%r13,8)
00000001000194e9	setne	%r14b
00000001000194ed	cmovbl	%r11d, %r14d
00000001000194f1	cmpb	$0x1, %r14b
00000001000194f5	je	0x1000194d0
00000001000194f7	movzbl	%r14b, %r8d
00000001000194fb	cmpl	$0xff, %r8d
0000000100019502	jne	0x1000195de
0000000100019508	incq	%r9
000000010001950b	movq	%r9, %r8
000000010001950e	movq	%rbx, %r9
0000000100019511	subq	%r8, %r9
0000000100019514	ja	0x1000194d8
0000000100019516	subq	$0x1, %r8
000000010001951a	movq	-0x108(%rbp), %r14
0000000100019521	jae	0x100019526
0000000100019523	xorl	%r8d, %r8d
0000000100019526	movq	%rdi, %r10
0000000100019529	movq	%rax, -0x138(%rbp)
0000000100019530	movq	%rdx, -0x130(%rbp)
0000000100019537	movq	%rsi, -0x128(%rbp)
000000010001953e	movq	%r10, -0x120(%rbp)
0000000100019545	movq	%r8, -0x118(%rbp)
000000010001954c	movq	%rcx, -0x110(%rbp)
0000000100019553	leaq	-0x2a0(%rbp), %rdi
000000010001955a	leaq	-0x138(%rbp), %rsi
0000000100019561	callq	__ZN91_$LT$addr2line..LocationRangeUnitIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9ca3e5930ac0bc20E ## _$LT$addr2line..LocationRangeUnitIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h9ca3e5930ac0bc20
0000000100019566	movl	-0x290(%rbp), %r13d
000000010001956d	movl	-0x28c(%rbp), %eax
0000000100019573	movq	-0x288(%rbp), %rcx
000000010001957a	movups	-0x280(%rbp), %xmm0
0000000100019581	movq	%r15, (%r14)
0000000100019584	movl	%r13d, 0x8(%r14)
0000000100019588	movl	%eax, 0xc(%r14)
000000010001958c	movq	%rcx, 0x10(%r14)
0000000100019590	movups	%xmm0, 0x18(%r14)
0000000100019595	addq	$0x298, %rsp                    ## imm = 0x298
000000010001959c	popq	%rbx
000000010001959d	popq	%r12
000000010001959f	popq	%r13
00000001000195a1	popq	%r14
00000001000195a3	popq	%r15
00000001000195a5	popq	%rbp
00000001000195a6	retq
00000001000195a7	movb	$0x38, %al
00000001000195a9	movq	%rax, -0x30(%rbp)
00000001000195ad	xorl	%r12d, %r12d
00000001000195b0	xorl	%r14d, %r14d
00000001000195b3	movq	-0xa8(%rbp), %r13
00000001000195ba	jmp	0x10001990c
00000001000195bf	movl	0x11(%r12), %ecx
00000001000195c4	movl	0x14(%r12), %edx
00000001000195c9	movl	%edx, 0x14(%r14)
00000001000195cd	movl	%ecx, 0x11(%r14)
00000001000195d1	movb	%al, 0x10(%r14)
00000001000195d5	movq	%r15, 0x18(%r14)
00000001000195d9	jmp	0x100017bcb
00000001000195de	movq	%rdi, %r10
00000001000195e1	movq	%r9, %r8
00000001000195e4	movq	-0x108(%rbp), %r14
00000001000195eb	jmp	0x100019529
00000001000195f0	movb	$0x6, %r14b
00000001000195f3	jmp	0x100019902
00000001000195f8	addq	%rdx, %rdi
00000001000195fb	leaq	0x1(%r9,%rdi), %rcx
0000000100019600	movq	%rcx, -0x138(%rbp)
0000000100019607	notq	%r9
000000010001960a	movq	%r9, -0x130(%rbp)
0000000100019611	testq	%rax, %rax
0000000100019614	je	0x10001a74c
000000010001961a	leaq	-0x1(%rax), %rcx
000000010001961e	cmpq	0x20(%rsi), %rcx
0000000100019622	jae	0x100019630
0000000100019624	imulq	$0x70, %rcx, %rdi
0000000100019628	addq	(%r8), %rdi
000000010001962b	jmp	0x1000196bd
0000000100019630	movq	0x28(%rsi), %rdi
0000000100019634	movb	$0x12, %r14b
0000000100019637	testq	%rdi, %rdi
000000010001963a	je	0x1000198ff
0000000100019640	movq	0x30(%rsi), %rcx
0000000100019644	xorl	%r13d, %r13d
0000000100019647	movl	$0xff, %edx
000000010001964c	movzwl	0x532(%rdi), %r9d
0000000100019654	imulq	$0x70, %r9, %r10
0000000100019658	movq	$-0x1, %rsi
000000010001965f	movl	$0x70, %r8d
0000000100019665	leaq	(%r10,%r8), %r11
0000000100019669	cmpq	$0x70, %r11
000000010001966d	je	0x10001969a
000000010001966f	xorl	%r11d, %r11d
0000000100019672	cmpq	%rax, 0x4e0(%rdi,%rsi,8)
000000010001967a	setne	%r11b
000000010001967e	cmoval	%edx, %r11d
0000000100019682	incq	%rsi
0000000100019685	addq	$-0x70, %r8
0000000100019689	cmpb	$0x1, %r11b
000000010001968d	je	0x100019665
000000010001968f	movzbl	%r11b, %r9d
0000000100019693	testl	%r9d, %r9d
0000000100019696	jne	0x10001969d
0000000100019698	jmp	0x1000196b1
000000010001969a	movq	%r9, %rsi
000000010001969d	subq	$0x1, %rcx
00000001000196a1	jb	0x100019902
00000001000196a7	movq	0x538(%rdi,%rsi,8), %rdi
00000001000196af	jmp	0x10001964c
00000001000196b1	testq	%rdi, %rdi
00000001000196b4	je	0x1000198ff
00000001000196ba	subq	%r8, %rdi
00000001000196bd	movq	%r15, -0x38(%rbp)
00000001000196c1	cmpb	$0x1, 0x6a(%rdi)
00000001000196c5	jne	0x1000196d2
00000001000196c7	movq	$0x1, -0x118(%rbp)
00000001000196d2	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
00000001000196d7	movq	%rax, %rbx
00000001000196da	movzbl	-0x168(%rbp), %eax
00000001000196e1	movl	%eax, -0x168(%rbp)
00000001000196e7	testq	%rdx, %rdx
00000001000196ea	je	0x1000199c8
00000001000196f0	movq	%rdx, %r15
00000001000196f3	movq	-0xa8(%rbp), %rax
00000001000196fa	movq	0x188(%rax), %rax
0000000100019701	movq	%rax, -0x30(%rbp)
0000000100019705	shlq	$0x4, %r15
0000000100019709	leaq	-0xc0(%rbp), %r14
0000000100019710	xorl	%r13d, %r13d
0000000100019713	xorl	%eax, %eax
0000000100019715	movq	%rax, -0xd8(%rbp)
000000010001971c	jmp	0x100019747
000000010001971e	cmpl	$0x3, %eax
0000000100019721	je	0x100019818
0000000100019727	cmpl	$0x31, %eax
000000010001972a	jne	0x10001973a
000000010001972c	cmpq	$0x0, -0xd8(%rbp)
0000000100019734	je	0x100019888
000000010001973a	addq	$0x10, %r13
000000010001973e	cmpq	%r13, %r15
0000000100019741	je	0x1000199d1
0000000100019747	movq	(%rbx,%r13), %rax
000000010001974b	movq	0x8(%rbx,%r13), %rcx
0000000100019750	movq	%rcx, -0x88(%rbp)
0000000100019757	movq	%rax, -0x90(%rbp)
000000010001975e	movq	-0x128(%rbp), %rdx
0000000100019765	movl	0x48(%rdx), %edx
0000000100019768	movq	%rcx, -0xb8(%rbp)
000000010001976f	movq	%rax, -0xc0(%rbp)
0000000100019776	leaq	-0x2a0(%rbp), %rdi
000000010001977d	leaq	-0x138(%rbp), %rsi
0000000100019784	movq	%r14, %rcx
0000000100019787	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
000000010001978c	cmpl	$0x2e, -0x2a0(%rbp)
0000000100019793	je	0x100019b2f
0000000100019799	movzwl	-0x288(%rbp), %eax
00000001000197a0	cmpl	$0x46, %eax
00000001000197a3	jle	0x10001971e
00000001000197a9	cmpl	$0x47, %eax
00000001000197ac	je	0x10001972c
00000001000197b2	cmpl	$0x6e, %eax
00000001000197b5	je	0x1000197c2
00000001000197b7	cmpl	$0x2007, %eax                   ## imm = 0x2007
00000001000197bc	jne	0x10001973a
00000001000197c2	movq	%r14, %rdi
00000001000197c5	leaq	-0x2a0(%rbp), %rsi
00000001000197cc	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
00000001000197d1	movzbl	%r12b, %edx
00000001000197d5	leaq	-0x90(%rbp), %rdi
00000001000197dc	movq	-0xd0(%rbp), %rsi
00000001000197e3	movq	-0x30(%rbp), %rcx
00000001000197e7	movq	%r14, %r8
00000001000197ea	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
00000001000197ef	cmpq	$0x0, -0x90(%rbp)
00000001000197f7	jne	0x10001973a
00000001000197fd	movq	-0x80(%rbp), %rax
0000000100019801	movq	%rax, -0x78(%rbp)
0000000100019805	movq	-0x88(%rbp), %rax
000000010001980c	movq	%rax, -0xd8(%rbp)
0000000100019813	jmp	0x10001973a
0000000100019818	cmpq	$0x0, -0xd8(%rbp)
0000000100019820	jne	0x10001973a
0000000100019826	movq	%r14, %rdi
0000000100019829	leaq	-0x2a0(%rbp), %rsi
0000000100019830	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100019835	movzbl	%r12b, %edx
0000000100019839	leaq	-0x90(%rbp), %rdi
0000000100019840	movq	-0xd0(%rbp), %rsi
0000000100019847	movq	-0x30(%rbp), %rcx
000000010001984b	movq	%r14, %r8
000000010001984e	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
0000000100019853	cmpq	$0x0, -0x90(%rbp)
000000010001985b	movq	-0x70(%rbp), %rdx
000000010001985f	cmoveq	-0x80(%rbp), %rdx
0000000100019864	movq	-0x88(%rbp), %rax
000000010001986b	movl	$0x0, %ecx
0000000100019870	cmovneq	%rcx, %rax
0000000100019874	movq	%rax, -0xd8(%rbp)
000000010001987b	movq	%rdx, -0x70(%rbp)
000000010001987f	movq	%rdx, -0x78(%rbp)
0000000100019883	jmp	0x10001973a
0000000100019888	movq	%r14, %rdi
000000010001988b	leaq	-0x2a0(%rbp), %rsi
0000000100019892	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100019897	movq	-0xc0(%rbp), %rsi
000000010001989e	movq	-0xb8(%rbp), %rdx
00000001000198a5	movq	-0xd0(%rbp), %rax
00000001000198ac	movq	%rax, (%rsp)
00000001000198b0	movq	$0x10, 0x8(%rsp)
00000001000198b9	leaq	-0x90(%rbp), %rdi
00000001000198c0	movl	-0x168(%rbp), %ecx
00000001000198c6	movq	-0xa8(%rbp), %r8
00000001000198cd	movq	-0x38(%rbp), %r9
00000001000198d1	callq	__ZN9addr2line8function9name_attr17hddb3ff298bb6b83bE ## addr2line::function::name_attr::hddb3ff298bb6b83b
00000001000198d6	cmpq	$0x0, -0x90(%rbp)
00000001000198de	movq	-0x88(%rbp), %rax
00000001000198e5	movq	%rax, -0xd8(%rbp)
00000001000198ec	movq	-0x80(%rbp), %rax
00000001000198f0	jne	0x10001a45c
00000001000198f6	movq	%rax, -0x78(%rbp)
00000001000198fa	jmp	0x10001973a
00000001000198ff	xorl	%r13d, %r13d
0000000100019902	movq	%r14, -0x30(%rbp)
0000000100019906	xorl	%r12d, %r12d
0000000100019909	xorl	%r14d, %r14d
000000010001990c	xorl	%r15d, %r15d
000000010001990f	shlq	$0x10, %r12
0000000100019913	movzbl	%r14b, %ecx
0000000100019917	shlq	$0x8, %rcx
000000010001991b	orq	%r12, %rcx
000000010001991e	movzbl	-0x30(%rbp), %eax
0000000100019922	orq	%rcx, %rax
0000000100019925	movq	-0xe0(%rbp), %r12
000000010001992c	cmpq	$0x0, (%r12)
0000000100019931	je	0x10001997f
0000000100019933	testq	%r15, %r15
0000000100019936	movq	-0x108(%rbp), %r14
000000010001993d	je	0x100019221
0000000100019943	testq	%rax, %rax
0000000100019946	je	0x10001995d
0000000100019948	shlq	$0x4, %rax
000000010001994c	leaq	(%rax,%rax,2), %rsi
0000000100019950	movl	$0x8, %edx
0000000100019955	movq	%r15, %rdi
0000000100019958	callq	___rust_dealloc
000000010001995d	testq	%rbx, %rbx
0000000100019960	je	0x100019221
0000000100019966	shlq	$0x5, %rbx
000000010001996a	movl	$0x8, %edx
000000010001996f	movq	%r13, %rdi
0000000100019972	movq	%rbx, %rsi
0000000100019975	callq	___rust_dealloc
000000010001997a	jmp	0x100019221
000000010001997f	movq	%r15, 0x8(%r12)
0000000100019984	movq	%rax, 0x10(%r12)
0000000100019989	movq	%r13, 0x18(%r12)
000000010001998e	movq	%rbx, 0x20(%r12)
0000000100019993	movq	-0xf8(%rbp), %rax
000000010001999a	movq	%rax, 0x28(%r12)
000000010001999f	movq	-0xd8(%rbp), %rax
00000001000199a6	movq	%rax, 0x30(%r12)
00000001000199ab	movq	-0x78(%rbp), %rax
00000001000199af	movq	%rax, 0x38(%r12)
00000001000199b4	movq	$0x1, (%r12)
00000001000199bc	movq	-0x108(%rbp), %r14
00000001000199c3	jmp	0x100019221
00000001000199c8	xorl	%eax, %eax
00000001000199ca	movq	%rax, -0xd8(%rbp)
00000001000199d1	movq	$0x8, -0x90(%rbp)
00000001000199dc	movq	$0x0, -0x88(%rbp)
00000001000199e7	movq	$0x0, -0x80(%rbp)
00000001000199ef	movq	$0x8, -0xc0(%rbp)
00000001000199fa	movq	$0x0, -0xb8(%rbp)
0000000100019a05	movq	$0x0, -0xb0(%rbp)
0000000100019a10	leaq	-0xc0(%rbp), %rax
0000000100019a17	movq	%rax, 0x10(%rsp)
0000000100019a1c	leaq	-0x90(%rbp), %rax
0000000100019a23	movq	%rax, 0x8(%rsp)
0000000100019a28	movq	-0xd0(%rbp), %rax
0000000100019a2f	movq	%rax, (%rsp)
0000000100019a33	movq	$0x0, 0x18(%rsp)
0000000100019a3c	leaq	-0x2a0(%rbp), %rbx
0000000100019a43	leaq	-0x138(%rbp), %rsi
0000000100019a4a	movq	%rbx, %rdi
0000000100019a4d	xorl	%edx, %edx
0000000100019a4f	movl	-0x168(%rbp), %ecx
0000000100019a55	movq	-0xa8(%rbp), %r8
0000000100019a5c	movq	-0x38(%rbp), %r9
0000000100019a60	callq	__ZN9addr2line8function17Function$LT$R$GT$14parse_children17h79cbbd2299db91a1E ## addr2line::function::Function$LT$R$GT$::parse_children::h79cbbd2299db91a1
0000000100019a65	movzbl	-0x2a0(%rbp), %r15d
0000000100019a6d	cmpb	$0x4b, %r15b
0000000100019a71	jne	0x100019abc
0000000100019a73	movq	-0xc0(%rbp), %rax
0000000100019a7a	movq	%rax, -0xe8(%rbp)
0000000100019a81	movq	-0xb0(%rbp), %r15
0000000100019a88	cmpq	$0x15, %r15
0000000100019a8c	jae	0x100019b9b
0000000100019a92	cmpq	$0x1, %r15
0000000100019a96	jbe	0x10001a26a
0000000100019a9c	leaq	-0x198(%rbp), %rcx
0000000100019aa3	movl	$0x1, %edx
0000000100019aa8	movq	-0xe8(%rbp), %rdi
0000000100019aaf	movq	%r15, %rsi
0000000100019ab2	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h417182299c8f35e2E ## core::slice::sort::insertion_sort_shift_left::h417182299c8f35e2
0000000100019ab7	jmp	0x10001a26a
0000000100019abc	movzbl	-0x29f(%rbp), %r14d
0000000100019ac4	movl	-0x29e(%rbp), %r12d
0000000100019acb	movzwl	-0x29a(%rbp), %ebx
0000000100019ad2	movq	-0x298(%rbp), %r13
0000000100019ad9	movq	-0xb8(%rbp), %rsi
0000000100019ae0	testq	%rsi, %rsi
0000000100019ae3	je	0x100019afa
0000000100019ae5	movq	-0xc0(%rbp), %rdi
0000000100019aec	shlq	$0x5, %rsi
0000000100019af0	movl	$0x8, %edx
0000000100019af5	callq	___rust_dealloc
0000000100019afa	shlq	$0x20, %rbx
0000000100019afe	movq	-0x88(%rbp), %rax
0000000100019b05	testq	%rax, %rax
0000000100019b08	je	0x100019b23
0000000100019b0a	movq	-0x90(%rbp), %rdi
0000000100019b11	shlq	$0x4, %rax
0000000100019b15	leaq	(%rax,%rax,2), %rsi
0000000100019b19	movl	$0x8, %edx
0000000100019b1e	callq	___rust_dealloc
0000000100019b23	movq	%r15, -0x30(%rbp)
0000000100019b27	orq	%rbx, %r12
0000000100019b2a	jmp	0x10001990c
0000000100019b2f	movq	-0x298(%rbp), %r12
0000000100019b36	movq	-0x290(%rbp), %rax
0000000100019b3d	movq	%r12, %r14
0000000100019b40	shrq	$0x8, %r14
0000000100019b44	movq	%r12, %rcx
0000000100019b47	movq	%r12, -0x30(%rbp)
0000000100019b4b	shrq	$0x10, %r12
0000000100019b4f	movq	%rax, %r13
0000000100019b52	jmp	0x10001990c
0000000100019b57	movl	$0x13, %r12d
0000000100019b5d	jmp	0x10001a410
0000000100019b62	movq	%rcx, -0x61(%rbp)
0000000100019b66	jmp	0x10001a2e0
0000000100019b6b	movq	%rax, -0x30(%rbp)
0000000100019b6f	movzbl	-0x29f(%rbp), %eax
0000000100019b76	movq	%rax, -0x38(%rbp)
0000000100019b7a	movl	-0x29e(%rbp), %eax
0000000100019b80	movzwl	-0x29a(%rbp), %r12d
0000000100019b88	shlq	$0x20, %r12
0000000100019b8c	orq	%rax, %r12
0000000100019b8f	movq	-0x298(%rbp), %r13
0000000100019b96	jmp	0x100018733
0000000100019b9b	movq	%rbx, -0x1a0(%rbp)
0000000100019ba2	movq	%r15, %r14
0000000100019ba5	shrq	%r14
0000000100019ba8	movq	%r14, %rdi
0000000100019bab	shlq	$0x5, %rdi
0000000100019baf	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r12
0000000100019bb6	movzbl	(%r12), %eax
0000000100019bbb	movl	$0x8, %esi
0000000100019bc0	movq	%rdi, -0x98(%rbp)
0000000100019bc7	callq	___rust_alloc
0000000100019bcc	testq	%rax, %rax
0000000100019bcf	je	0x10001a798
0000000100019bd5	movq	%rax, %rbx
0000000100019bd8	movq	%r14, -0x178(%rbp)
0000000100019bdf	movzbl	(%r12), %eax
0000000100019be4	movl	$0x100, %edi                    ## imm = 0x100
0000000100019be9	movl	$0x8, %esi
0000000100019bee	callq	___rust_alloc
0000000100019bf3	testq	%rax, %rax
0000000100019bf6	movq	%rbx, -0x30(%rbp)
0000000100019bfa	je	0x10001a7b2
0000000100019c00	movq	%rax, %r13
0000000100019c03	movq	-0xe8(%rbp), %rax
0000000100019c0a	leaq	0x50(%rax), %rcx
0000000100019c0e	movq	%rcx, -0xf0(%rbp)
0000000100019c15	addq	$-0x20, %rax
0000000100019c19	movq	%rax, -0x40(%rbp)
0000000100019c1d	movl	$0x10, %eax
0000000100019c22	movq	%rax, -0xa0(%rbp)
0000000100019c29	xorl	%ecx, %ecx
0000000100019c2b	leaq	0x2e7be(%rip), %rax
0000000100019c32	movq	%rax, -0x1a8(%rbp)
0000000100019c39	xorl	%r12d, %r12d
0000000100019c3c	movq	%r15, -0x180(%rbp)
0000000100019c43	jmp	0x100019c56
0000000100019c45	movq	-0x30(%rbp), %r14
0000000100019c49	movq	-0x58(%rbp), %rcx
0000000100019c4d	cmpq	%r15, %rcx
0000000100019c50	jae	0x10001a23e
0000000100019c56	movq	%rcx, %r14
0000000100019c59	movq	%r15, %rax
0000000100019c5c	subq	%rcx, %rax
0000000100019c5f	shlq	$0x5, %rcx
0000000100019c63	movq	-0xe8(%rbp), %rdx
0000000100019c6a	leaq	(%rdx,%rcx), %rdi
0000000100019c6e	cmpq	$0x2, %rax
0000000100019c72	jae	0x100019c80
0000000100019c74	movq	%rax, %rdx
0000000100019c77	leaq	(%rdx,%r14), %rcx
0000000100019c7b	jmp	0x100019dce
0000000100019c80	movq	0x30(%rdi), %rsi
0000000100019c84	cmpq	0x10(%rdi), %rsi
0000000100019c88	jb	0x100019c95
0000000100019c8a	movq	0x20(%rdi), %r8
0000000100019c8e	ja	0x100019cce
0000000100019c90	cmpq	(%rdi), %r8
0000000100019c93	jae	0x100019cce
0000000100019c95	movl	$0x2, %edx
0000000100019c9a	cmpq	$0x3, %rax
0000000100019c9e	jb	0x100019d13
0000000100019ca0	addq	-0xf0(%rbp), %rcx
0000000100019ca7	jmp	0x100019cb5
0000000100019ca9	incq	%rdx
0000000100019cac	addq	$0x20, %rcx
0000000100019cb0	cmpq	%rdx, %rax
0000000100019cb3	je	0x100019d10
0000000100019cb5	movq	%rsi, %r8
0000000100019cb8	movq	(%rcx), %rsi
0000000100019cbb	cmpq	%r8, %rsi
0000000100019cbe	jb	0x100019ca9
0000000100019cc0	ja	0x100019d13
0000000100019cc2	movq	-0x30(%rcx), %r8
0000000100019cc6	cmpq	%r8, -0x10(%rcx)
0000000100019cca	jb	0x100019ca9
0000000100019ccc	jmp	0x100019d13
0000000100019cce	movl	$0x2, %edx
0000000100019cd3	cmpq	$0x3, %rax
0000000100019cd7	jb	0x100019c77
0000000100019cd9	addq	-0xf0(%rbp), %rcx
0000000100019ce0	jmp	0x100019cf1
0000000100019ce2	incq	%rdx
0000000100019ce5	addq	$0x20, %rcx
0000000100019ce9	movq	%r9, %r8
0000000100019cec	cmpq	%rdx, %rax
0000000100019cef	je	0x100019c74
0000000100019cf1	movq	%rsi, %r9
0000000100019cf4	movq	(%rcx), %rsi
0000000100019cf7	cmpq	%r9, %rsi
0000000100019cfa	jb	0x100019c77
0000000100019d00	movq	-0x10(%rcx), %r9
0000000100019d04	ja	0x100019ce2
0000000100019d06	cmpq	%r8, %r9
0000000100019d09	jae	0x100019ce2
0000000100019d0b	jmp	0x100019c77
0000000100019d10	movq	%rax, %rdx
0000000100019d13	movq	%rdx, %rcx
0000000100019d16	addq	%r14, %rcx
0000000100019d19	jb	0x10001a733
0000000100019d1f	cmpq	%r15, %rcx
0000000100019d22	ja	0x10001a71c
0000000100019d28	cmpq	$0x2, %rdx
0000000100019d2c	jb	0x100019dce
0000000100019d32	movq	%rdx, %rax
0000000100019d35	shrq	%rax
0000000100019d38	movq	%rcx, %r10
0000000100019d3b	shlq	$0x5, %rcx
0000000100019d3f	addq	-0x40(%rbp), %rcx
0000000100019d43	movq	%rdi, %rsi
0000000100019d46	movq	0x18(%rsi), %r8
0000000100019d4a	movq	%r8, -0x288(%rbp)
0000000100019d51	movq	0x10(%rsi), %r8
0000000100019d55	movq	%r8, -0x290(%rbp)
0000000100019d5c	movq	(%rsi), %r8
0000000100019d5f	movq	0x8(%rsi), %r9
0000000100019d63	movq	%r9, -0x298(%rbp)
0000000100019d6a	movq	%r8, -0x2a0(%rbp)
0000000100019d71	movq	0x18(%rcx), %r8
0000000100019d75	movq	%r8, 0x18(%rsi)
0000000100019d79	movq	0x10(%rcx), %r8
0000000100019d7d	movq	%r8, 0x10(%rsi)
0000000100019d81	movq	(%rcx), %r8
0000000100019d84	movq	0x8(%rcx), %r9
0000000100019d88	movq	%r9, 0x8(%rsi)
0000000100019d8c	movq	%r8, (%rsi)
0000000100019d8f	movq	-0x288(%rbp), %r8
0000000100019d96	movq	%r8, 0x18(%rcx)
0000000100019d9a	movq	-0x290(%rbp), %r8
0000000100019da1	movq	%r8, 0x10(%rcx)
0000000100019da5	movq	-0x2a0(%rbp), %r8
0000000100019dac	movq	-0x298(%rbp), %r9
0000000100019db3	movq	%r9, 0x8(%rcx)
0000000100019db7	movq	%r8, (%rcx)
0000000100019dba	addq	$0x20, %rsi
0000000100019dbe	addq	$-0x20, %rcx
0000000100019dc2	decq	%rax
0000000100019dc5	jne	0x100019d46
0000000100019dcb	movq	%r10, %rcx
0000000100019dce	movq	%rcx, %rbx
0000000100019dd1	subq	%r14, %rbx
0000000100019dd4	jb	0x10001a662
0000000100019dda	cmpq	%r15, %rcx
0000000100019ddd	ja	0x10001a662
0000000100019de3	jae	0x100019e21
0000000100019de5	cmpq	$0xa, %rdx
0000000100019de9	jae	0x100019e21
0000000100019deb	leaq	0xa(%r14), %rbx
0000000100019def	cmpq	%r15, %rbx
0000000100019df2	cmovaeq	%r15, %rbx
0000000100019df6	movq	%rbx, -0x58(%rbp)
0000000100019dfa	subq	%r14, %rbx
0000000100019dfd	jb	0x10001a6b0
0000000100019e03	cmpq	$0x2, %rdx
0000000100019e07	movl	$0x1, %eax
0000000100019e0c	cmovbq	%rax, %rdx
0000000100019e10	movq	%rbx, %rsi
0000000100019e13	leaq	-0x198(%rbp), %rcx
0000000100019e1a	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h417182299c8f35e2E ## core::slice::sort::insertion_sort_shift_left::h417182299c8f35e2
0000000100019e1f	jmp	0x100019e25
0000000100019e21	movq	%rcx, -0x58(%rbp)
0000000100019e25	cmpq	-0xa0(%rbp), %r12
0000000100019e2c	jne	0x100019ea0
0000000100019e2e	movq	%r14, -0xa8(%rbp)
0000000100019e35	leaq	(%r12,%r12), %rax
0000000100019e39	movq	%rax, -0xa0(%rbp)
0000000100019e40	movq	%r12, %rdi
0000000100019e43	shlq	$0x5, %rdi
0000000100019e47	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100019e4e	movzbl	(%rax), %eax
0000000100019e51	movl	$0x8, %esi
0000000100019e56	callq	___rust_alloc
0000000100019e5b	testq	%rax, %rax
0000000100019e5e	je	0x10001a6c3
0000000100019e64	movq	%rax, %r15
0000000100019e67	movq	%r12, %r14
0000000100019e6a	shlq	$0x4, %r12
0000000100019e6e	movq	%rax, %rdi
0000000100019e71	movq	%r13, %rsi
0000000100019e74	movq	%r12, %rdx
0000000100019e77	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100019e7c	movl	$0x8, %edx
0000000100019e81	movq	%r13, %rdi
0000000100019e84	movq	%r12, %rsi
0000000100019e87	movq	%r14, %r12
0000000100019e8a	callq	___rust_dealloc
0000000100019e8f	movq	%r15, %r13
0000000100019e92	movq	-0x180(%rbp), %r15
0000000100019e99	movq	-0xa8(%rbp), %r14
0000000100019ea0	movq	%r12, %rax
0000000100019ea3	shlq	$0x4, %rax
0000000100019ea7	movq	%rbx, (%r13,%rax)
0000000100019eac	movq	%r14, 0x8(%r13,%rax)
0000000100019eb1	incq	%r12
0000000100019eb4	cmpq	$0x2, %r12
0000000100019eb8	jb	0x100019c45
0000000100019ebe	movq	-0x30(%rbp), %r14
0000000100019ec2	movq	%r13, -0xc8(%rbp)
0000000100019ec9	jmp	0x100019f48
0000000100019ecb	movq	%rdx, %rbx
0000000100019ece	movq	%r15, %r13
0000000100019ed1	movq	%r14, %rsi
0000000100019ed4	subq	%rsi, %r12
0000000100019ed7	movq	%r13, %rdi
0000000100019eda	movq	%r12, %rdx
0000000100019edd	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100019ee2	movq	-0x160(%rbp), %rax
0000000100019ee9	addq	%rbx, %rax
0000000100019eec	movq	-0x100(%rbp), %rcx
0000000100019ef3	movq	%rax, (%rcx)
0000000100019ef6	movq	-0x70(%rbp), %rax
0000000100019efa	movq	-0x150(%rbp), %rcx
0000000100019f01	movq	%rax, (%rcx)
0000000100019f04	movq	-0x158(%rbp), %rdi
0000000100019f0b	leaq	0x10(%rdi), %rsi
0000000100019f0f	movq	-0x38(%rbp), %rax
0000000100019f13	notq	%rax
0000000100019f16	movq	-0x168(%rbp), %rdx
0000000100019f1d	addq	%rax, %rdx
0000000100019f20	shlq	$0x4, %rdx
0000000100019f24	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100019f29	movq	-0xa8(%rbp), %r12
0000000100019f30	cmpq	$0x1, %r12
0000000100019f34	movq	-0xc8(%rbp), %r13
0000000100019f3b	movq	-0x180(%rbp), %r15
0000000100019f42	jbe	0x10001a21d
0000000100019f48	leaq	-0x1(%r12), %r8
0000000100019f4d	movq	%r8, %rcx
0000000100019f50	shlq	$0x4, %rcx
0000000100019f54	movq	(%r13,%rcx), %rax
0000000100019f59	movq	0x8(%r13,%rcx), %rcx
0000000100019f5e	addq	%rax, %rcx
0000000100019f61	cmpq	%r15, %rcx
0000000100019f64	je	0x100019fb4
0000000100019f66	movq	%r12, %rdx
0000000100019f69	shlq	$0x4, %rdx
0000000100019f6d	movq	-0x20(%rdx,%r13), %rsi
0000000100019f72	cmpq	%rax, %rsi
0000000100019f75	jbe	0x100019fb4
0000000100019f77	cmpq	$0x3, %r12
0000000100019f7b	jb	0x10001a228
0000000100019f81	leaq	-0x3(%r12), %r9
0000000100019f86	movq	%r9, %rcx
0000000100019f89	shlq	$0x4, %rcx
0000000100019f8d	movq	(%r13,%rcx), %rcx
0000000100019f92	leaq	(%rsi,%rax), %rdi
0000000100019f96	cmpq	%rdi, %rcx
0000000100019f99	jbe	0x100019fcb
0000000100019f9b	cmpq	$0x4, %r12
0000000100019f9f	jb	0x10001a233
0000000100019fa5	addq	%rcx, %rsi
0000000100019fa8	cmpq	%rsi, -0x40(%rdx,%r13)
0000000100019fad	jbe	0x100019fcb
0000000100019faf	jmp	0x100019c49
0000000100019fb4	cmpq	$0x3, %r12
0000000100019fb8	jb	0x100019fd0
0000000100019fba	leaq	-0x3(%r12), %r9
0000000100019fbf	movq	%r9, %rcx
0000000100019fc2	shlq	$0x4, %rcx
0000000100019fc6	movq	(%r13,%rcx), %rcx
0000000100019fcb	cmpq	%rax, %rcx
0000000100019fce	jb	0x100019fd5
0000000100019fd0	leaq	-0x2(%r12), %r9
0000000100019fd5	cmpq	%r9, %r12
0000000100019fd8	jbe	0x10001a5f8
0000000100019fde	leaq	0x1(%r9), %rax
0000000100019fe2	cmpq	%rax, %r12
0000000100019fe5	jbe	0x10001a5b2
0000000100019feb	movq	%r9, %rcx
0000000100019fee	shlq	$0x4, %rcx
0000000100019ff2	movq	0x8(%r13,%rcx), %rdi
0000000100019ff7	shlq	$0x4, %rax
0000000100019ffb	movq	(%r13,%rax), %rdx
000000010001a000	movq	0x8(%r13,%rax), %rbx
000000010001a005	addq	%rdx, %rbx
000000010001a008	movq	%rbx, %r14
000000010001a00b	subq	%rdi, %r14
000000010001a00e	jb	0x10001a5c9
000000010001a014	movq	%r8, -0xa8(%rbp)
000000010001a01b	cmpq	%r15, %rbx
000000010001a01e	ja	0x10001a5dd
000000010001a024	movq	%rdx, -0x160(%rbp)
000000010001a02b	movq	%r9, -0x38(%rbp)
000000010001a02f	movq	%r12, -0x168(%rbp)
000000010001a036	leaq	(%r13,%rcx), %rdx
000000010001a03b	movq	%rdx, -0x158(%rbp)
000000010001a042	movq	(%r13,%rcx), %rdx
000000010001a047	leaq	(%r13,%rax), %rcx
000000010001a04c	movq	%rcx, -0x100(%rbp)
000000010001a053	leaq	0x8(%r13,%rax), %rax
000000010001a058	movq	%rax, -0x150(%rbp)
000000010001a05f	movq	%rdi, -0x70(%rbp)
000000010001a063	movq	%rdi, %r13
000000010001a066	shlq	$0x5, %r13
000000010001a06a	addq	-0xe8(%rbp), %r13
000000010001a071	movq	%rdx, %r12
000000010001a074	shlq	$0x5, %r12
000000010001a078	leaq	(%r13,%r12), %r15
000000010001a07d	shlq	$0x5, %rbx
000000010001a081	movq	%r14, %rax
000000010001a084	subq	%rdx, %rax
000000010001a087	movq	%rdx, -0x148(%rbp)
000000010001a08e	cmpq	%rdx, %rax
000000010001a091	jae	0x10001a14e
000000010001a097	movq	%rax, -0x140(%rbp)
000000010001a09e	movq	%rax, %r12
000000010001a0a1	shlq	$0x5, %r12
000000010001a0a5	movq	-0x30(%rbp), %r14
000000010001a0a9	movq	%r14, %rdi
000000010001a0ac	movq	%r15, %rsi
000000010001a0af	movq	%r12, %rdx
000000010001a0b2	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001a0b7	addq	%r14, %r12
000000010001a0ba	movq	-0x148(%rbp), %rdx
000000010001a0c1	testq	%rdx, %rdx
000000010001a0c4	jle	0x100019ecb
000000010001a0ca	cmpq	$0x0, -0x140(%rbp)
000000010001a0d2	jle	0x100019ecb
000000010001a0d8	addq	-0x40(%rbp), %rbx
000000010001a0dc	nopl	(%rax)
000000010001a0e0	movq	-0x10(%r15), %rcx
000000010001a0e4	movb	$0x1, %al
000000010001a0e6	cmpq	%rcx, -0x10(%r12)
000000010001a0eb	jb	0x10001a0fe
000000010001a0ed	movq	-0x20(%r12), %rax
000000010001a0f2	setbe	%cl
000000010001a0f5	cmpq	-0x20(%r15), %rax
000000010001a0f9	setb	%al
000000010001a0fc	andb	%cl, %al
000000010001a0fe	movzbl	%al, %eax
000000010001a101	movq	%rax, %rcx
000000010001a104	shlq	$0x5, %rcx
000000010001a108	subq	%rcx, %r15
000000010001a10b	leaq	-0x20(%rcx,%r12), %r12
000000010001a110	testb	%al, %al
000000010001a112	movq	%r12, %rax
000000010001a115	cmovneq	%r15, %rax
000000010001a119	movq	0x18(%rax), %rcx
000000010001a11d	movq	%rcx, 0x18(%rbx)
000000010001a121	movq	0x10(%rax), %rcx
000000010001a125	movq	%rcx, 0x10(%rbx)
000000010001a129	movq	(%rax), %rcx
000000010001a12c	movq	0x8(%rax), %rax
000000010001a130	movq	%rax, 0x8(%rbx)
000000010001a134	movq	%rcx, (%rbx)
000000010001a137	cmpq	%r13, %r15
000000010001a13a	jbe	0x100019ecb
000000010001a140	addq	$-0x20, %rbx
000000010001a144	cmpq	%r14, %r12
000000010001a147	ja	0x10001a0e0
000000010001a149	jmp	0x100019ecb
000000010001a14e	movq	-0x30(%rbp), %rdi
000000010001a152	movq	%r13, %rsi
000000010001a155	movq	%r12, %rdx
000000010001a158	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001a15d	addq	-0x30(%rbp), %r12
000000010001a161	movq	-0x148(%rbp), %r8
000000010001a168	testq	%r8, %r8
000000010001a16b	jle	0x10001a209
000000010001a171	cmpq	%r8, %r14
000000010001a174	jle	0x10001a209
000000010001a17a	addq	-0xe8(%rbp), %rbx
000000010001a181	movq	-0x30(%rbp), %r14
000000010001a185	movq	%r14, %rsi
000000010001a188	nopl	(%rax,%rax)
000000010001a190	movq	0x10(%r15), %rcx
000000010001a194	movq	0x10(%rsi), %rdx
000000010001a198	cmpq	%rdx, %rcx
000000010001a19b	jb	0x10001a1b7
000000010001a19d	movq	(%r15), %rax
000000010001a1a0	cmpq	(%rsi), %rax
000000010001a1a3	setb	%dil
000000010001a1a7	xorl	%eax, %eax
000000010001a1a9	cmpq	%rdx, %rcx
000000010001a1ac	ja	0x10001a204
000000010001a1ae	movq	%rsi, %rcx
000000010001a1b1	testb	$0x1, %dil
000000010001a1b5	je	0x10001a1bc
000000010001a1b7	movb	$0x1, %al
000000010001a1b9	movq	%r15, %rcx
000000010001a1bc	movq	0x18(%rcx), %rdx
000000010001a1c0	movq	%rdx, 0x18(%r13)
000000010001a1c4	movq	0x10(%rcx), %rdx
000000010001a1c8	movq	%rdx, 0x10(%r13)
000000010001a1cc	movq	(%rcx), %rdx
000000010001a1cf	movq	0x8(%rcx), %rcx
000000010001a1d3	movq	%rcx, 0x8(%r13)
000000010001a1d7	movq	%rdx, (%r13)
000000010001a1db	addq	$0x20, %r13
000000010001a1df	movl	%eax, %ecx
000000010001a1e1	xorb	$0x1, %cl
000000010001a1e4	movzbl	%cl, %ecx
000000010001a1e7	shlq	$0x5, %rcx
000000010001a1eb	addq	%rcx, %rsi
000000010001a1ee	cmpq	%r12, %rsi
000000010001a1f1	jae	0x10001a215
000000010001a1f3	movzbl	%al, %eax
000000010001a1f6	shlq	$0x5, %rax
000000010001a1fa	addq	%rax, %r15
000000010001a1fd	cmpq	%rbx, %r15
000000010001a200	jb	0x10001a190
000000010001a202	jmp	0x10001a215
000000010001a204	movq	%rsi, %rcx
000000010001a207	jmp	0x10001a1bc
000000010001a209	movq	%r8, %rbx
000000010001a20c	movq	-0x30(%rbp), %r14
000000010001a210	jmp	0x100019ed1
000000010001a215	movq	%r8, %rbx
000000010001a218	jmp	0x100019ed4
000000010001a21d	movl	$0x1, %r12d
000000010001a223	jmp	0x100019c49
000000010001a228	movl	$0x2, %r12d
000000010001a22e	jmp	0x100019c49
000000010001a233	movl	$0x3, %r12d
000000010001a239	jmp	0x100019c49
000000010001a23e	movq	-0xa0(%rbp), %rsi
000000010001a245	shlq	$0x4, %rsi
000000010001a249	movl	$0x8, %edx
000000010001a24e	movq	%r13, %rdi
000000010001a251	callq	___rust_dealloc
000000010001a256	movl	$0x8, %edx
000000010001a25b	movq	%r14, %rdi
000000010001a25e	movq	-0x98(%rbp), %rsi
000000010001a265	callq	___rust_dealloc
000000010001a26a	movq	-0x90(%rbp), %r12
000000010001a271	movq	-0x88(%rbp), %r13
000000010001a278	movq	-0x80(%rbp), %rcx
000000010001a27c	cmpq	%rcx, %r13
000000010001a27f	movq	%rcx, %rax
000000010001a282	movq	%rcx, -0x30(%rbp)
000000010001a286	jbe	0x10001a2cd
000000010001a288	movq	%r13, %rax
000000010001a28b	shlq	$0x4, %rax
000000010001a28f	leaq	(%rax,%rax,2), %rsi
000000010001a293	testq	%rcx, %rcx
000000010001a296	je	0x10001a302
000000010001a298	movq	%rcx, %rax
000000010001a29b	shlq	$0x4, %rax
000000010001a29f	leaq	(%rax,%rax,2), %rbx
000000010001a2a3	movl	$0x8, %edx
000000010001a2a8	movq	%r12, %rdi
000000010001a2ab	movq	%rbx, %rcx
000000010001a2ae	callq	___rust_realloc
000000010001a2b3	movq	%rax, %r15
000000010001a2b6	testq	%rax, %rax
000000010001a2b9	jne	0x10001a315
000000010001a2bb	movl	$0x8, %edi
000000010001a2c0	movq	%rbx, %rsi
000000010001a2c3	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001a2c8	jmp	0x10001a7ca
000000010001a2cd	movq	%r12, %r15
000000010001a2d0	jmp	0x10001a315
000000010001a2d2	movq	-0x40(%rbp), %rax
000000010001a2d6	jmp	0x10001a2dc
000000010001a2d8	movq	-0x58(%rbp), %rax
000000010001a2dc	movq	%rax, -0x61(%rbp)
000000010001a2e0	movb	$0x13, %al
000000010001a2e2	movq	%rax, -0x30(%rbp)
000000010001a2e6	movq	-0x61(%rbp), %r13
000000010001a2ea	movq	%rax, -0x38(%rbp)
000000010001a2ee	movl	-0x67(%rbp), %eax
000000010001a2f1	movzwl	-0x63(%rbp), %r12d
000000010001a2f6	shlq	$0x20, %r12
000000010001a2fa	orq	%rax, %r12
000000010001a2fd	jmp	0x100018733
000000010001a302	movl	$0x8, %r15d
000000010001a308	movl	$0x8, %edx
000000010001a30d	movq	%r12, %rdi
000000010001a310	callq	___rust_dealloc
000000010001a315	movq	-0xc0(%rbp), %r14
000000010001a31c	movq	-0xb8(%rbp), %r12
000000010001a323	movq	-0xb0(%rbp), %rbx
000000010001a32a	cmpq	%rbx, %r12
000000010001a32d	jbe	0x10001a377
000000010001a32f	movq	%r12, %rsi
000000010001a332	shlq	$0x5, %rsi
000000010001a336	testq	%rbx, %rbx
000000010001a339	je	0x10001a37c
000000010001a33b	movq	%rbx, %rcx
000000010001a33e	shlq	$0x5, %rcx
000000010001a342	movl	$0x8, %edx
000000010001a347	movq	%r14, %rdi
000000010001a34a	movq	%rcx, -0xa8(%rbp)
000000010001a351	callq	___rust_realloc
000000010001a356	movq	%rax, %r13
000000010001a359	testq	%rax, %rax
000000010001a35c	jne	0x10001a38f
000000010001a35e	movq	%r14, %rbx
000000010001a361	movl	$0x8, %edi
000000010001a366	movq	-0xa8(%rbp), %rsi
000000010001a36d	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001a372	jmp	0x10001a7ca
000000010001a377	movq	%r14, %r13
000000010001a37a	jmp	0x10001a38f
000000010001a37c	movl	$0x8, %r13d
000000010001a382	movl	$0x8, %edx
000000010001a387	movq	%r14, %rdi
000000010001a38a	callq	___rust_dealloc
000000010001a38f	movq	-0x30(%rbp), %r12
000000010001a393	movq	%r12, %r14
000000010001a396	shrq	$0x8, %r14
000000010001a39a	shrq	$0x10, %r12
000000010001a39e	jmp	0x10001990f
000000010001a3a3	movl	$0x0, -0x50(%rbp)
000000010001a3aa	movb	$0x0, -0x4a(%rbp)
000000010001a3ae	movw	$0x0, -0x4c(%rbp)
000000010001a3b4	movl	-0x4d(%rbp), %ecx
000000010001a3b7	movl	%ecx, -0x65(%rbp)
000000010001a3ba	movl	$0x0, -0x68(%rbp)
000000010001a3c1	movzbl	-0x62(%rbp), %ecx
000000010001a3c5	shll	$0x10, %ecx
000000010001a3c8	movzwl	-0x64(%rbp), %edx
000000010001a3cc	orl	%ecx, %edx
000000010001a3ce	shlq	$0x20, %rdx
000000010001a3d2	movl	-0x68(%rbp), %r12d
000000010001a3d6	orq	%rdx, %r12
000000010001a3d9	jmp	0x10001a408
000000010001a3db	movb	$0x0, -0x4a(%rbp)
000000010001a3df	movw	$0x0, -0x4c(%rbp)
000000010001a3e5	movl	$0x0, -0x50(%rbp)
000000010001a3ec	movq	%rax, -0x49(%rbp)
000000010001a3f0	movq	-0x50(%rbp), %r12
000000010001a3f4	movl	-0x48(%rbp), %eax
000000010001a3f7	movl	-0x45(%rbp), %ecx
000000010001a3fa	movl	%eax, -0x60(%rbp)
000000010001a3fd	movl	%ecx, -0x5d(%rbp)
000000010001a400	movq	%r12, -0x68(%rbp)
000000010001a404	movq	-0x61(%rbp), %rax
000000010001a408	shlq	$0x8, %r12
000000010001a40c	orq	$0x13, %r12
000000010001a410	movq	%r12, %rcx
000000010001a413	shrq	$0x8, %rcx
000000010001a417	movq	%rcx, -0x38(%rbp)
000000010001a41b	movq	%r12, -0x30(%rbp)
000000010001a41f	shrq	$0x10, %r12
000000010001a423	movq	%rax, %r13
000000010001a426	jmp	0x100018733
000000010001a42b	movq	%rax, -0x30(%rbp)
000000010001a42f	movzbl	-0x68(%rbp), %eax
000000010001a433	movq	%rax, -0x38(%rbp)
000000010001a437	movq	-0x40(%rbp), %r13
000000010001a43b	jmp	0x10001a2ee
000000010001a440	movb	$0x17, %al
000000010001a442	jmp	0x10001a4d3
000000010001a447	movq	%rax, -0x30(%rbp)
000000010001a44b	movzbl	-0x68(%rbp), %eax
000000010001a44f	movq	%rax, -0x38(%rbp)
000000010001a453	movq	-0x58(%rbp), %r13
000000010001a457	jmp	0x10001a2ee
000000010001a45c	movq	-0xd8(%rbp), %r12
000000010001a463	jmp	0x100019b3d
000000010001a468	movb	$0x0, -0x4a(%rbp)
000000010001a46c	movw	$0x0, -0x4c(%rbp)
000000010001a472	movl	$0x0, -0x50(%rbp)
000000010001a479	movq	-0x40(%rbp), %rax
000000010001a47d	jmp	0x10001a4b2
000000010001a47f	movw	$0x0, -0x63(%rbp)
000000010001a485	movl	$0x0, -0x67(%rbp)
000000010001a48c	movq	-0x40(%rbp), %rax
000000010001a490	jmp	0x10001a4f1
000000010001a492	movb	$0x13, %al
000000010001a494	movq	%rax, -0x30(%rbp)
000000010001a498	jmp	0x10001872a
000000010001a49d	movb	$0x0, -0x4a(%rbp)
000000010001a4a1	movw	$0x0, -0x4c(%rbp)
000000010001a4a7	movl	$0x0, -0x50(%rbp)
000000010001a4ae	movq	-0x58(%rbp), %rax
000000010001a4b2	movq	%rax, -0x49(%rbp)
000000010001a4b6	movq	-0x50(%rbp), %rdx
000000010001a4ba	movl	-0x48(%rbp), %eax
000000010001a4bd	movl	-0x45(%rbp), %ecx
000000010001a4c0	movl	%eax, -0x60(%rbp)
000000010001a4c3	movl	%ecx, -0x5d(%rbp)
000000010001a4c6	movq	%rdx, %rax
000000010001a4c9	movq	%rdx, -0x38(%rbp)
000000010001a4cd	movq	%rdx, -0x68(%rbp)
000000010001a4d1	movb	$0x13, %al
000000010001a4d3	movq	%rax, -0x30(%rbp)
000000010001a4d7	movq	-0x61(%rbp), %r13
000000010001a4db	jmp	0x10001a2ee
000000010001a4e0	movw	$0x0, -0x63(%rbp)
000000010001a4e6	movl	$0x0, -0x67(%rbp)
000000010001a4ed	movq	-0x58(%rbp), %rax
000000010001a4f1	movq	%rax, -0x61(%rbp)
000000010001a4f5	movb	$0x13, %al
000000010001a4f7	movq	%rax, -0x30(%rbp)
000000010001a4fb	xorl	%eax, %eax
000000010001a4fd	movq	%rax, -0x38(%rbp)
000000010001a501	movq	-0x61(%rbp), %r13
000000010001a505	jmp	0x10001a2ee
000000010001a50a	leaq	0x2e3af(%rip), %rdx
000000010001a511	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010001a516	movq	%rax, %r12
000000010001a519	shrq	$0x10, %r12
000000010001a51d	movq	%rbx, -0x38(%rbp)
000000010001a521	jmp	0x100018733
000000010001a526	leaq	0x2dd7b(%rip), %rax
000000010001a52d	movq	%rax, -0x2a0(%rbp)
000000010001a534	leaq	0x2dee5(%rip), %rsi
000000010001a53b	jmp	0x10001a57e
000000010001a53d	leaq	0x2def4(%rip), %rdx
000000010001a544	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010001a549	jmp	0x10001a7ca
000000010001a54e	leaq	0x2dee3(%rip), %rdx
000000010001a555	movq	%rsi, %rdi
000000010001a558	movq	-0xf8(%rbp), %rsi
000000010001a55f	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001a564	jmp	0x10001a7ca
000000010001a569	leaq	0x2dd38(%rip), %rax
000000010001a570	movq	%rax, -0x2a0(%rbp)
000000010001a577	leaq	0x2de8a(%rip), %rsi
000000010001a57e	movq	-0xd8(%rbp), %rdi
000000010001a585	movq	$0x1, 0x8(%rdi)
000000010001a58d	movq	$0x0, 0x20(%rdi)
000000010001a595	leaq	0x29754(%rip), %rax
000000010001a59c	movq	%rax, 0x10(%rdi)
000000010001a5a0	movq	$0x0, 0x18(%rdi)
000000010001a5a8	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001a5ad	jmp	0x10001a7ca
000000010001a5b2	leaq	0x2dcef(%rip), %rax
000000010001a5b9	movq	%rax, -0x2a0(%rbp)
000000010001a5c0	leaq	0x2de59(%rip), %rsi
000000010001a5c7	jmp	0x10001a60d
000000010001a5c9	leaq	0x2de68(%rip), %rdx
000000010001a5d0	movq	%rbx, %rsi
000000010001a5d3	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010001a5d8	jmp	0x10001a7ca
000000010001a5dd	leaq	0x2de54(%rip), %rdx
000000010001a5e4	movq	%rbx, %rdi
000000010001a5e7	movq	-0x180(%rbp), %rsi
000000010001a5ee	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001a5f3	jmp	0x10001a7ca
000000010001a5f8	leaq	0x2dca9(%rip), %rax
000000010001a5ff	movq	%rax, -0x2a0(%rbp)
000000010001a606	leaq	0x2ddfb(%rip), %rsi
000000010001a60d	movq	-0x1a0(%rbp), %rdi
000000010001a614	movq	$0x1, 0x8(%rdi)
000000010001a61c	movq	$0x0, 0x20(%rdi)
000000010001a624	leaq	0x296c5(%rip), %rax
000000010001a62b	movq	%rax, 0x10(%rdi)
000000010001a62f	movq	$0x0, 0x18(%rdi)
000000010001a637	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001a63c	jmp	0x10001a7ca
000000010001a641	movq	%r13, -0x40(%rbp)
000000010001a645	leaq	0x2982b(%rip), %rdi
000000010001a64c	leaq	0x2de75(%rip), %rdx
000000010001a653	movl	$0x2c, %esi
000000010001a658	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a65d	jmp	0x10001a7ca
000000010001a662	leaq	0x2980e(%rip), %rdi
000000010001a669	leaq	0x2de58(%rip), %rdx
000000010001a670	movl	$0x2c, %esi
000000010001a675	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a67a	jmp	0x10001a7ca
000000010001a67f	movq	%r13, -0x40(%rbp)
000000010001a683	leaq	0x2de26(%rip), %rax
000000010001a68a	movq	%rax, -0x1a0(%rbp)
000000010001a691	jmp	0x10001a703
000000010001a693	leaq	0x29657(%rip), %rdi
000000010001a69a	leaq	0x2dddf(%rip), %rdx
000000010001a6a1	movl	$0x2b, %esi
000000010001a6a6	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a6ab	jmp	0x10001a7ca
000000010001a6b0	movq	%r14, %rdi
000000010001a6b3	leaq	0x2ddf6(%rip), %rax
000000010001a6ba	movq	%rax, -0x1a8(%rbp)
000000010001a6c1	jmp	0x10001a73a
000000010001a6c3	leaq	0x29627(%rip), %rdi
000000010001a6ca	leaq	0x2ddaf(%rip), %rdx
000000010001a6d1	movl	$0x2b, %esi
000000010001a6d6	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a6db	jmp	0x10001a7ca
000000010001a6e0	movq	%r13, -0x40(%rbp)
000000010001a6e4	leaq	0x2dd05(%rip), %rdx
000000010001a6eb	movq	%rsi, %rdi
000000010001a6ee	movq	%r14, %rsi
000000010001a6f1	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001a6f6	jmp	0x10001a7ca
000000010001a6fb	movq	%rsi, -0x78(%rbp)
000000010001a6ff	movq	%r13, -0x40(%rbp)
000000010001a703	movq	-0x30(%rbp), %rdi
000000010001a707	movq	-0x78(%rbp), %rsi
000000010001a70b	movq	-0x1a0(%rbp), %rdx
000000010001a712	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010001a717	jmp	0x10001a7ca
000000010001a71c	leaq	0x2dccd(%rip), %rdx
000000010001a723	movq	%rcx, %rdi
000000010001a726	movq	%r15, %rsi
000000010001a729	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001a72e	jmp	0x10001a7ca
000000010001a733	movq	%r14, %rdi
000000010001a736	movq	%rcx, -0x58(%rbp)
000000010001a73a	movq	-0x58(%rbp), %rsi
000000010001a73e	movq	-0x1a8(%rbp), %rdx
000000010001a745	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010001a74a	jmp	0x10001a7ca
000000010001a74c	leaq	0x2959e(%rip), %rdi
000000010001a753	leaq	0x2e196(%rip), %rdx
000000010001a75a	movl	$0x2b, %esi
000000010001a75f	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a764	leaq	0x29586(%rip), %rdi
000000010001a76b	leaq	0x2dcde(%rip), %rdx
000000010001a772	movl	$0x2b, %esi
000000010001a777	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a77c	jmp	0x10001a7ca
000000010001a77e	leaq	0x2956c(%rip), %rdi
000000010001a785	leaq	0x2dcdc(%rip), %rdx
000000010001a78c	movl	$0x2b, %esi
000000010001a791	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a796	jmp	0x10001a7ca
000000010001a798	leaq	0x29552(%rip), %rdi
000000010001a79f	leaq	0x2dcaa(%rip), %rdx
000000010001a7a6	movl	$0x2b, %esi
000000010001a7ab	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a7b0	jmp	0x10001a7ca
000000010001a7b2	leaq	0x29538(%rip), %rdi
000000010001a7b9	leaq	0x2dca8(%rip), %rdx
000000010001a7c0	movl	$0x2b, %esi
000000010001a7c5	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001a7ca	ud2
000000010001a7cc	movq	%rax, %r14
000000010001a7cf	movq	%rbx, %rdi
000000010001a7d2	movq	%r12, %rsi
000000010001a7d5	callq	__ZN4core3ptr64drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$17haa5433b9df65ff99E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$::haa5433b9df65ff99
000000010001a7da	movq	%r15, %rdi
000000010001a7dd	movq	-0x30(%rbp), %rsi
000000010001a7e1	callq	__ZN4core3ptr176drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17h5b33b3f9513a959fE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$::h5b33b3f9513a959f
000000010001a7e6	movq	%r14, %rdi
000000010001a7e9	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001a7ee	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001a7f3	movq	%rax, %r14
000000010001a7f6	movq	%r12, %rdi
000000010001a7f9	movq	%r13, %rsi
000000010001a7fc	callq	__ZN4core3ptr164drop_in_place$LT$alloc..vec..Vec$LT$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17ha60371883fd67644E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::ha60371883fd67644
000000010001a801	movb	$0x1, %bl
000000010001a803	jmp	0x10001a8c1
000000010001a808	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001a80d	movq	%rax, %r14
000000010001a810	jmp	0x10001a8af
000000010001a815	movq	%rax, %r14
000000010001a818	jmp	0x10001a918
000000010001a81d	movq	%rax, %r14
000000010001a820	jmp	0x10001a905
000000010001a825	movq	%rax, %r14
000000010001a828	leaq	-0x2a0(%rbp), %rdi
000000010001a82f	callq	__ZN4core3ptr250drop_in_place$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$17hc56b8e0996976d9fE ## core::ptr::drop_in_place$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$::hc56b8e0996976d9f
000000010001a834	jmp	0x10001a918
000000010001a839	movq	%rax, %r14
000000010001a83c	jmp	0x10001a918
000000010001a841	movq	%rax, %r14
000000010001a844	jmp	0x10001a8bf
000000010001a846	jmp	0x10001a89d
000000010001a848	movq	%r13, -0x40(%rbp)
000000010001a84c	jmp	0x10001a8f2
000000010001a851	movq	%rax, %r14
000000010001a854	movq	%r12, %rdi
000000010001a857	movq	%rbx, %rsi
000000010001a85a	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
000000010001a85f	movq	%r15, %rdi
000000010001a862	movq	-0x30(%rbp), %rsi
000000010001a866	callq	__ZN4core3ptr285drop_in_place$LT$alloc..boxed..Box$LT$$u5b$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$u5d$$GT$$GT$17hf61a34d3a54905a3E ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$u5d$$GT$$GT$::hf61a34d3a54905a3
000000010001a86b	jmp	0x10001a93d
000000010001a870	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001a875	movq	%rax, %r14
000000010001a878	leaq	-0x2a0(%rbp), %rdi
000000010001a87f	callq	__ZN4core3ptr273drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$$GT$17h22b9114a695bc432E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$$GT$::h22b9114a695bc432
000000010001a884	movb	$0x1, %bl
000000010001a886	jmp	0x10001a91a
000000010001a88b	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001a890	movq	%rax, %r14
000000010001a893	jmp	0x10001a918
000000010001a898	movq	%rax, %r14
000000010001a89b	jmp	0x10001a918
000000010001a89d	movq	%rax, %r14
000000010001a8a0	movq	%r13, %rdi
000000010001a8a3	movq	-0xa0(%rbp), %rsi
000000010001a8aa	callq	__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h89b8635dff4455ae
000000010001a8af	movq	-0x30(%rbp), %rdi
000000010001a8b3	movq	-0x178(%rbp), %rsi
000000010001a8ba	callq	__ZN4core3ptr437drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h0b7ec5dfbeae34faE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h0b7ec5dfbeae34fa
000000010001a8bf	xorl	%ebx, %ebx
000000010001a8c1	movq	-0xc0(%rbp), %rdi
000000010001a8c8	movq	-0xb8(%rbp), %rsi
000000010001a8cf	callq	__ZN4core3ptr64drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$17haa5433b9df65ff99E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$::haa5433b9df65ff99
000000010001a8d4	testb	%bl, %bl
000000010001a8d6	jne	0x10001a93d
000000010001a8d8	movq	-0x90(%rbp), %rdi
000000010001a8df	movq	-0x88(%rbp), %rsi
000000010001a8e6	callq	__ZN4core3ptr164drop_in_place$LT$alloc..vec..Vec$LT$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17ha60371883fd67644E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::ha60371883fd67644
000000010001a8eb	jmp	0x10001a93d
000000010001a8ed	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001a8f2	movq	%rax, %r14
000000010001a8f5	movq	-0x40(%rbp), %rdi
000000010001a8f9	movq	-0xa0(%rbp), %rsi
000000010001a900	callq	__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h89b8635dff4455ae
000000010001a905	movq	-0xc8(%rbp), %rdi
000000010001a90c	movq	-0x178(%rbp), %rsi
000000010001a913	callq	__ZN4core3ptr491drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..function..FunctionAddress$C$alloc..slice..stable_sort$LT$addr2line..function..FunctionAddress$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..function..FunctionAddress$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h2bf9b039d291e1b0E ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..function..FunctionAddress$C$alloc..slice..stable_sort$LT$addr2line..function..FunctionAddress$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..function..FunctionAddress$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..function..Functions$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h2bf9b039d291e1b0
000000010001a918	xorl	%ebx, %ebx
000000010001a91a	movq	-0x90(%rbp), %rdi
000000010001a921	movq	-0x88(%rbp), %rsi
000000010001a928	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
000000010001a92d	testb	%bl, %bl
000000010001a92f	jne	0x10001a93d
000000010001a931	leaq	-0x198(%rbp), %rdi
000000010001a938	callq	__ZN4core3ptr273drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$$GT$17h22b9114a695bc432E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..read..UnitOffset$C$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..function..Function$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$$RP$$GT$$GT$::h22b9114a695bc432
000000010001a93d	movq	%r14, %rdi
000000010001a940	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001a945	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001a94a	nop
000000010001a94c	.byte 0xc4 #bad opcode
000000010001a94d	xlatb
000000010001a94e	.byte 0xff #bad opcode
000000010001a94f	jmpq	*-0xb000027(%rbp)
000000010001a955	cli
000000010001a956	.byte 0xff #bad opcode
000000010001a957	.byte 0xff #bad opcode
000000010001a958	.byte 0xdf #bad opcode
000000010001a959	fcos
000000010001a95b	pushq	%rsp
000000010001a95d	cli
000000010001a95e	.byte 0xff #bad opcode
000000010001a95f	pushq	%rsp
000000010001a961	cli
000000010001a962	.byte 0xff #bad opcode
000000010001a963	pushq	%rsp
000000010001a965	cli
000000010001a966	.byte 0xff #bad opcode
000000010001a967	incl	%ebp
000000010001a969	fcos
000000010001a96b	decl	-0x1(%rax,%rbx,8)
000000010001a96f	lcalll	*(%rdx)
000000010001a971	fcos
000000010001a973	callq	*%rsp
000000010001a975	cli
000000010001a976	.byte 0xff #bad opcode
000000010001a977	callq	*-0x1(%rcx,%rbx,8)
000000010001a97b	callq	*%rsp
000000010001a97d	cli
000000010001a97e	.byte 0xff #bad opcode
000000010001a97f	callq	*%rsp
000000010001a981	cli
000000010001a982	.byte 0xff #bad opcode
000000010001a983	callq	*%rsp
000000010001a985	cli
000000010001a986	.byte 0xff #bad opcode
000000010001a987	.byte 0xff #bad opcode
000000010001a988	cmpb	%cl, %bl
000000010001a98a	.byte 0xff #bad opcode
000000010001a98b	decl	(%rdi)
000000010001a98d	.byte 0x1f #bad opcode
000000010001a98e	addb	%dl, 0x48(%rbp)
000000010001a992	movl	%esp, %ebp
000000010001a994	pushq	%r15
000000010001a996	pushq	%r14
000000010001a998	pushq	%r13
000000010001a99a	pushq	%r12
000000010001a99c	pushq	%rbx
000000010001a99d	subq	$0x198, %rsp                    ## imm = 0x198
000000010001a9a4	movq	%rdi, %rbx
000000010001a9a7	movl	(%rsi), %eax
000000010001a9a9	addl	$-0x3, %eax
000000010001a9ac	cmpl	$0x2, %eax
000000010001a9af	movl	$0x2, %ecx
000000010001a9b4	cmovbl	%eax, %ecx
000000010001a9b7	testl	%ecx, %ecx
000000010001a9b9	je	0x10001aa64
000000010001a9bf	movq	%rsi, %r14
000000010001a9c2	cmpl	$0x1, %ecx
000000010001a9c5	jne	0x10001aa70
000000010001a9cb	movq	0x20(%r14), %rcx
000000010001a9cf	movq	%rcx, -0x88(%rbp)
000000010001a9d6	movq	0x18(%r14), %rcx
000000010001a9da	movq	%rcx, -0x90(%rbp)
000000010001a9e1	movq	0x8(%r14), %rcx
000000010001a9e5	movq	0x10(%r14), %rdx
000000010001a9e9	movq	%rdx, -0x98(%rbp)
000000010001a9f0	movq	%rcx, -0xa0(%rbp)
000000010001a9f7	movl	$0x2, 0x8(%r14)
000000010001a9ff	cmpl	$0x2, %eax
000000010001aa02	jb	0x10001aa1f
000000010001aa04	movq	0x40(%r14), %rsi
000000010001aa08	testq	%rsi, %rsi
000000010001aa0b	je	0x10001aa1f
000000010001aa0d	movq	0x38(%r14), %rdi
000000010001aa11	shlq	$0x3, %rsi
000000010001aa15	movl	$0x8, %edx
000000010001aa1a	callq	___rust_dealloc
000000010001aa1f	movl	$0x3, (%r14)
000000010001aa26	movq	-0x88(%rbp), %rax
000000010001aa2d	movq	%rax, 0x28(%rbx)
000000010001aa31	movq	-0x90(%rbp), %rax
000000010001aa38	movq	%rax, 0x20(%rbx)
000000010001aa3c	movq	-0xa0(%rbp), %rax
000000010001aa43	movq	-0x98(%rbp), %rcx
000000010001aa4a	movq	%rcx, 0x18(%rbx)
000000010001aa4e	movq	%rax, 0x10(%rbx)
000000010001aa52	movq	$0x0, (%rbx)
000000010001aa59	movw	$0x2, 0x40(%rbx)
000000010001aa5f	jmp	0x10001ad2b
000000010001aa64	movq	$0x2, (%rbx)
000000010001aa6b	jmp	0x10001ad2b
000000010001aa70	movq	0x18(%r14), %rax
000000010001aa74	movq	%rax, -0x40(%rbp)
000000010001aa78	movq	0x10(%r14), %rax
000000010001aa7c	movq	%rax, -0x48(%rbp)
000000010001aa80	movq	(%r14), %rax
000000010001aa83	movq	0x8(%r14), %rcx
000000010001aa87	movq	%rcx, -0x50(%rbp)
000000010001aa8b	movq	%rax, -0x58(%rbp)
000000010001aa8f	movl	$0x2, (%r14)
000000010001aa96	movq	0x50(%r14), %rax
000000010001aa9a	cmpq	0x48(%r14), %rax
000000010001aa9e	je	0x10001aaeb
000000010001aaa0	leaq	-0x8(%rax), %rcx
000000010001aaa4	movq	%rcx, 0x50(%r14)
000000010001aaa8	movq	-0x8(%rax), %r13
000000010001aaac	movl	0x28(%r13), %edi
000000010001aab0	movl	0x2c(%r13), %esi
000000010001aab4	xorl	%r8d, %r8d
000000010001aab7	testl	%edi, %edi
000000010001aab9	setne	%r9b
000000010001aabd	xorl	%r12d, %r12d
000000010001aac0	testl	%esi, %esi
000000010001aac2	setne	%r10b
000000010001aac6	cmpq	$0x0, (%r13)
000000010001aacb	je	0x10001acac
000000010001aad1	movq	0x8(%r13), %r11
000000010001aad5	movq	0x20(%r14), %r15
000000010001aad9	cmpl	$0x2f, 0x60(%r15)
000000010001aade	jne	0x10001ab74
000000010001aae4	xorl	%eax, %eax
000000010001aae6	jmp	0x10001ac8f
000000010001aaeb	movq	0x30(%r14), %rax
000000010001aaef	movq	0x28(%rax), %r15
000000010001aaf3	testq	%r15, %r15
000000010001aaf6	je	0x10001abde
000000010001aafc	movq	0x30(%rax), %r12
000000010001ab00	movq	0x20(%r14), %rcx
000000010001ab04	movq	0x210(%rcx), %xmm0              ## xmm0 = mem[0],zero
000000010001ab0c	movq	0x20(%rax), %r13
000000010001ab10	movq	0x40(%r14), %rsi
000000010001ab14	testq	%rsi, %rsi
000000010001ab17	je	0x10001ab35
000000010001ab19	movq	0x38(%r14), %rdi
000000010001ab1d	shlq	$0x3, %rsi
000000010001ab21	movl	$0x8, %edx
000000010001ab26	movdqa	%xmm0, -0x70(%rbp)
000000010001ab2b	callq	___rust_dealloc
000000010001ab30	movdqa	-0x70(%rbp), %xmm0
000000010001ab35	movl	$0x3, (%r14)
000000010001ab3c	movq	-0x40(%rbp), %rax
000000010001ab40	movq	%rax, 0x28(%rbx)
000000010001ab44	movq	-0x48(%rbp), %rax
000000010001ab48	movq	%rax, 0x20(%rbx)
000000010001ab4c	movq	-0x58(%rbp), %rax
000000010001ab50	movq	-0x50(%rbp), %rcx
000000010001ab54	movq	%rcx, 0x18(%rbx)
000000010001ab58	movq	%rax, 0x10(%rbx)
000000010001ab5c	movq	$0x1, (%rbx)
000000010001ab63	movq	%r13, 0x8(%rbx)
000000010001ab67	movq	%r15, 0x30(%rbx)
000000010001ab6b	movq	%r12, 0x38(%rbx)
000000010001ab6f	jmp	0x10001ad26
000000010001ab74	cmpq	$0x0, 0x1b0(%r15)
000000010001ab7c	jne	0x10001ac57
000000010001ab82	movq	%r11, -0x80(%rbp)
000000010001ab86	movb	%r10b, -0x29(%rbp)
000000010001ab8a	movb	%r9b, -0x2a(%rbp)
000000010001ab8e	movl	%edi, -0x38(%rbp)
000000010001ab91	movl	%esi, -0x70(%rbp)
000000010001ab94	movq	0x28(%r14), %rax
000000010001ab98	movq	%rax, -0x78(%rbp)
000000010001ab9c	leaq	0x60(%r15), %rsi
000000010001aba0	leaq	-0x1b8(%rbp), %rdi
000000010001aba7	callq	__ZN93_$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h667fbe8abcedc734E ## _$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h667fbe8abcedc734
000000010001abac	leaq	-0xc0(%rbp), %rdi
000000010001abb3	movq	%r15, %rsi
000000010001abb6	leaq	-0x1b8(%rbp), %rdx
000000010001abbd	movq	-0x78(%rbp), %rcx
000000010001abc1	callq	__ZN9addr2line5Lines5parse17h74bb7e00c6eb3bb5E ## addr2line::Lines::parse::h74bb7e00c6eb3bb5
000000010001abc6	cmpq	$0x0, 0x1b0(%r15)
000000010001abce	je	0x10001abfd
000000010001abd0	leaq	-0xc0(%rbp), %rdi
000000010001abd7	callq	__ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$17hdd078504879d0965E ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$::hdd078504879d0965
000000010001abdc	jmp	0x10001ac40
000000010001abde	movl	$0x2, %ecx
000000010001abe3	movd	%ecx, %xmm0
000000010001abe7	movq	0x20(%rax), %r13
000000010001abeb	movq	0x40(%r14), %rsi
000000010001abef	testq	%rsi, %rsi
000000010001abf2	jne	0x10001ab19
000000010001abf8	jmp	0x10001ab35
000000010001abfd	movq	-0xa8(%rbp), %rax
000000010001ac04	movq	%rax, 0x1d0(%r15)
000000010001ac0b	movq	-0xb0(%rbp), %rax
000000010001ac12	movq	%rax, 0x1c8(%r15)
000000010001ac19	movq	-0xc0(%rbp), %rax
000000010001ac20	movq	-0xb8(%rbp), %rcx
000000010001ac27	movq	%rcx, 0x1c0(%r15)
000000010001ac2e	movq	%rax, 0x1b8(%r15)
000000010001ac35	movq	$0x1, 0x1b0(%r15)
000000010001ac40	movl	-0x70(%rbp), %esi
000000010001ac43	movl	-0x38(%rbp), %edi
000000010001ac46	xorl	%r8d, %r8d
000000010001ac49	movzbl	-0x2a(%rbp), %r9d
000000010001ac4e	movzbl	-0x29(%rbp), %r10d
000000010001ac53	movq	-0x80(%rbp), %r11
000000010001ac57	leaq	0x1b8(%r15), %rax
000000010001ac5e	leaq	0x1c0(%r15), %rcx
000000010001ac65	cmpq	$0x0, 0x1b8(%r15)
000000010001ac6d	cmoveq	%rcx, %rax
000000010001ac71	jne	0x10001ac8f
000000010001ac73	movzbl	(%rax), %ecx
000000010001ac76	movl	0x4(%rax), %edx
000000010001ac79	movl	%edx, -0x31(%rbp)
000000010001ac7c	movl	0x1(%rax), %edx
000000010001ac7f	movl	%edx, -0x34(%rbp)
000000010001ac82	movq	0x8(%rax), %rax
000000010001ac86	cmpb	$0x4b, %cl
000000010001ac89	jne	0x10001ad3d
000000010001ac8f	testq	%rax, %rax
000000010001ac92	je	0x10001acac
000000010001ac94	cmpq	0x8(%rax), %r11
000000010001ac98	jae	0x10001acac
000000010001ac9a	movq	(%rax), %rcx
000000010001ac9d	leaq	(%r11,%r11,2), %rdx
000000010001aca1	movq	(%rcx,%rdx,8), %rax
000000010001aca5	movq	0x10(%rcx,%rdx,8), %rcx
000000010001acaa	jmp	0x10001acae
000000010001acac	xorl	%eax, %eax
000000010001acae	movb	%r9b, %r8b
000000010001acb1	movb	%r10b, %r12b
000000010001acb4	movl	%r8d, (%r14)
000000010001acb7	movl	%edi, 0x4(%r14)
000000010001acbb	movl	%r12d, 0x8(%r14)
000000010001acbf	movl	%esi, 0xc(%r14)
000000010001acc3	movq	%rax, 0x10(%r14)
000000010001acc7	movq	%rcx, 0x18(%r14)
000000010001accb	movq	0x10(%r13), %rax
000000010001accf	movq	0x18(%r13), %rcx
000000010001acd3	testq	%rcx, %rcx
000000010001acd6	je	0x10001acea
000000010001acd8	movq	0x20(%r13), %rdx
000000010001acdc	movq	0x20(%r14), %rsi
000000010001ace0	movq	0x210(%rsi), %xmm0              ## xmm0 = mem[0],zero
000000010001ace8	jmp	0x10001acf3
000000010001acea	movl	$0x2, %edx
000000010001acef	movd	%edx, %xmm0
000000010001acf3	movq	-0x40(%rbp), %rsi
000000010001acf7	movq	%rsi, 0x28(%rbx)
000000010001acfb	movq	-0x48(%rbp), %rsi
000000010001acff	movq	%rsi, 0x20(%rbx)
000000010001ad03	movq	-0x58(%rbp), %rsi
000000010001ad07	movq	-0x50(%rbp), %rdi
000000010001ad0b	movq	%rdi, 0x18(%rbx)
000000010001ad0f	movq	%rsi, 0x10(%rbx)
000000010001ad13	movq	$0x1, (%rbx)
000000010001ad1a	movq	%rax, 0x8(%rbx)
000000010001ad1e	movq	%rcx, 0x30(%rbx)
000000010001ad22	movq	%rdx, 0x38(%rbx)
000000010001ad26	movd	%xmm0, 0x40(%rbx)
000000010001ad2b	addq	$0x198, %rsp                    ## imm = 0x198
000000010001ad32	popq	%rbx
000000010001ad33	popq	%r12
000000010001ad35	popq	%r13
000000010001ad37	popq	%r14
000000010001ad39	popq	%r15
000000010001ad3b	popq	%rbp
000000010001ad3c	retq
000000010001ad3d	movl	-0x34(%rbp), %edx
000000010001ad40	movl	-0x31(%rbp), %esi
000000010001ad43	movl	%esi, 0xc(%rbx)
000000010001ad46	movl	%edx, 0x9(%rbx)
000000010001ad49	movb	%cl, 0x8(%rbx)
000000010001ad4c	movq	%rax, 0x10(%rbx)
000000010001ad50	movq	$0x3, (%rbx)
000000010001ad57	jmp	0x10001ad2b
000000010001ad59	nopl	(%rax)
__ZN9addr2line30LoopingLookup$LT$T$C$L$C$F$GT$10new_lookup17h884047d3ff663732E:
000000010001ad60	pushq	%rbp
000000010001ad61	movq	%rsp, %rbp
000000010001ad64	pushq	%r15
000000010001ad66	pushq	%r14
000000010001ad68	pushq	%r13
000000010001ad6a	pushq	%r12
000000010001ad6c	pushq	%rbx
000000010001ad6d	subq	$0x158, %rsp                    ## imm = 0x158
000000010001ad74	movq	%rdx, %r15
000000010001ad77	movq	%rsi, %r14
000000010001ad7a	movq	%rdi, %rbx
000000010001ad7d	leaq	0x30(%rsi), %r12
000000010001ad81	cmpq	$0x0, 0x30(%rsi)
000000010001ad86	je	0x10001ae30
000000010001ad8c	movq	0x28(%r14), %rax
000000010001ad90	movq	%rax, 0x28(%rbx)
000000010001ad94	movq	0x20(%r14), %rax
000000010001ad98	movq	%rax, 0x20(%rbx)
000000010001ad9c	movq	0x18(%r14), %rax
000000010001ada0	movq	%rax, 0x18(%rbx)
000000010001ada4	movq	0x10(%r14), %rax
000000010001ada8	movq	%rax, 0x10(%rbx)
000000010001adac	movq	(%r14), %rax
000000010001adaf	movq	0x8(%r14), %rcx
000000010001adb3	movq	%rcx, 0x8(%rbx)
000000010001adb7	movq	%rax, (%rbx)
000000010001adba	movq	0x28(%r12), %rax
000000010001adbf	movq	%rax, -0x110(%rbp)
000000010001adc6	movq	0x20(%r12), %rax
000000010001adcb	movq	%rax, -0x118(%rbp)
000000010001add2	movq	0x18(%r12), %rax
000000010001add7	movq	%rax, -0x120(%rbp)
000000010001adde	movq	0x10(%r12), %rax
000000010001ade3	movq	%rax, -0x128(%rbp)
000000010001adea	movq	(%r12), %rax
000000010001adee	movq	0x8(%r12), %rcx
000000010001adf3	movq	%rcx, -0x130(%rbp)
000000010001adfa	movq	%rax, -0x138(%rbp)
000000010001ae01	leaq	-0x108(%rbp), %rdi
000000010001ae08	movl	$0xb, %ecx
000000010001ae0d	movq	%r15, %rsi
000000010001ae10	rep		movsq	(%rsi), %es:(%rdi)
000000010001ae13	addq	$0x30, %rbx
000000010001ae17	leaq	-0x138(%rbp), %rsi
000000010001ae1e	movl	$0x88, %edx
000000010001ae23	movq	%rbx, %rdi
000000010001ae26	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001ae2b	jmp	0x10001b0c9
000000010001ae30	movq	0x10(%r14), %r11
000000010001ae34	movq	0x18(%r14), %rdx
000000010001ae38	movl	0x8(%r14), %r9d
000000010001ae3c	movl	0xc(%r14), %r10d
000000010001ae40	movq	0x20(%r14), %r13
000000010001ae44	movq	(%r14), %rax
000000010001ae47	cmpl	$0x3, %r9d
000000010001ae4b	je	0x10001b0db
000000010001ae51	testq	%rax, %rax
000000010001ae54	jne	0x10001b0e9
000000010001ae5a	cmpl	$0x2, %r9d
000000010001ae5e	jne	0x10001b24e
000000010001ae64	movl	$0x3, %r9d
000000010001ae6a	cmpb	$0x0, 0x50(%r15)
000000010001ae6f	jne	0x10001b278
000000010001ae75	movq	0x30(%r15), %rax
000000010001ae79	movq	0x38(%r15), %rdi
000000010001ae7d	movq	0x48(%r15), %rcx
000000010001ae81	movq	0x20(%r15), %rdx
000000010001ae85	movq	0x28(%r15), %rsi
000000010001ae89	nopl	(%rax)
000000010001ae90	cmpq	%rax, %rdi
000000010001ae93	je	0x10001b090
000000010001ae99	movq	%rdi, %r8
000000010001ae9c	addq	$-0x20, %rdi
000000010001aea0	movq	%rdi, 0x38(%r15)
000000010001aea4	cmpq	%rcx, -0x8(%r8)
000000010001aea8	jbe	0x10001b08b
000000010001aeae	cmpq	0x8(%rdi), %rdx
000000010001aeb2	jae	0x10001ae90
000000010001aeb4	cmpq	(%rdi), %rsi
000000010001aeb7	jbe	0x10001ae90
000000010001aeb9	movq	%r12, -0x68(%rbp)
000000010001aebd	movq	-0x10(%r8), %rdi
000000010001aec1	movq	0x18(%r15), %rax
000000010001aec5	movq	0x20(%rax), %rsi
000000010001aec9	cmpq	%rsi, %rdi
000000010001aecc	jae	0x10001b2cb
000000010001aed2	imulq	$0x218, %rdi, %r12              ## imm = 0x218
000000010001aed9	addq	0x18(%rax), %r12
000000010001aedd	movq	(%r15), %rax
000000010001aee0	movq	%rax, -0x60(%rbp)
000000010001aee4	movq	0x10(%r15), %r13
000000010001aee8	leaq	-0x138(%rbp), %rdi
000000010001aeef	movq	%r12, %rsi
000000010001aef2	movq	%r13, %rdx
000000010001aef5	callq	__ZN9addr2line16ResUnit$LT$R$GT$18dwarf_and_unit_dwo17h56824fa67f4616cbE ## addr2line::ResUnit$LT$R$GT$::dwarf_and_unit_dwo::h56824fa67f4616cb
000000010001aefa	movq	-0x60(%rbp), %r10
000000010001aefe	movq	%r12, -0x160(%rbp)
000000010001af05	movq	%r10, -0x150(%rbp)
000000010001af0c	movq	%r13, -0x30(%rbp)
000000010001af10	movq	%r13, -0x158(%rbp)
000000010001af17	movq	-0x108(%rbp), %r8
000000010001af1e	testq	%r8, %r8
000000010001af21	je	0x10001af9a
000000010001af23	movq	%r12, %rdx
000000010001af26	movq	-0x110(%rbp), %rax
000000010001af2d	movq	%rax, -0x88(%rbp)
000000010001af34	movq	-0x118(%rbp), %rax
000000010001af3b	movq	%rax, -0x90(%rbp)
000000010001af42	movq	-0x120(%rbp), %rax
000000010001af49	movq	%rax, -0x98(%rbp)
000000010001af50	movq	-0x128(%rbp), %rax
000000010001af57	movq	%rax, -0xa0(%rbp)
000000010001af5e	movq	-0x138(%rbp), %rax
000000010001af65	movq	-0x130(%rbp), %rcx
000000010001af6c	movq	%rcx, -0xa8(%rbp)
000000010001af73	movq	%rax, -0xb0(%rbp)
000000010001af7a	movq	-0x100(%rbp), %rdi
000000010001af81	movq	-0xf8(%rbp), %rsi
000000010001af88	movq	%r10, -0x48(%rbp)
000000010001af8c	movq	-0x30(%rbp), %rax
000000010001af90	movq	%rax, -0x58(%rbp)
000000010001af94	movq	%rdx, -0x40(%rbp)
000000010001af98	jmp	0x10001b00a
000000010001af9a	movq	-0x120(%rbp), %rax
000000010001afa1	movq	%rax, -0x168(%rbp)
000000010001afa8	movq	-0x128(%rbp), %rax
000000010001afaf	movq	%rax, -0x170(%rbp)
000000010001afb6	movq	-0x138(%rbp), %rax
000000010001afbd	movq	-0x130(%rbp), %rcx
000000010001afc4	movq	%rcx, -0x178(%rbp)
000000010001afcb	movq	%rax, -0x180(%rbp)
000000010001afd2	leaq	-0xb0(%rbp), %rdi
000000010001afd9	leaq	-0x160(%rbp), %rsi
000000010001afe0	leaq	-0x180(%rbp), %rdx
000000010001afe7	movq	%r8, %r13
000000010001afea	callq	__ZN9addr2line16ResUnit$LT$R$GT$25find_function_or_location28_$u7b$$u7b$closure$u7d$$u7d$17heaf045e62a829c56E ## addr2line::ResUnit$LT$R$GT$::find_function_or_location::_$u7b$$u7b$closure$u7d$$u7d$::heaf045e62a829c56
000000010001afef	movq	%r13, %r8
000000010001aff2	movq	-0x40(%rbp), %r12
000000010001aff6	movq	-0x58(%rbp), %rax
000000010001affa	movq	%rax, -0x30(%rbp)
000000010001affe	movq	-0x48(%rbp), %r10
000000010001b002	movq	-0x50(%rbp), %rsi
000000010001b006	movq	-0x38(%rbp), %rdi
000000010001b00a	movq	-0xb0(%rbp), %rax
000000010001b011	movq	-0xa8(%rbp), %r9
000000010001b018	movq	-0xa0(%rbp), %r11
000000010001b01f	movq	-0x98(%rbp), %rdx
000000010001b026	movq	-0x90(%rbp), %rcx
000000010001b02d	movq	%rax, (%r14)
000000010001b030	movq	-0x88(%rbp), %rax
000000010001b037	movq	%r9, 0x8(%r14)
000000010001b03b	movq	%r11, 0x10(%r14)
000000010001b03f	movq	%rdx, 0x18(%r14)
000000010001b043	movq	%rcx, 0x20(%r14)
000000010001b047	movq	%rax, 0x28(%r14)
000000010001b04b	movq	%r8, 0x30(%r14)
000000010001b04f	movq	%rdi, -0x38(%rbp)
000000010001b053	movq	%rdi, 0x38(%r14)
000000010001b057	movq	%rsi, -0x50(%rbp)
000000010001b05b	movq	%rsi, 0x40(%r14)
000000010001b05f	movq	%r12, 0x48(%r14)
000000010001b063	movq	%rcx, %r13
000000010001b066	movq	-0x30(%rbp), %rax
000000010001b06a	movq	%rax, 0x50(%r14)
000000010001b06e	movq	%r10, 0x58(%r14)
000000010001b072	movq	%r9, %r10
000000010001b075	shrq	$0x20, %r10
000000010001b079	testq	%r8, %r8
000000010001b07c	movq	-0x68(%rbp), %r12
000000010001b080	je	0x10001ae44
000000010001b086	jmp	0x10001ad8c
000000010001b08b	movb	$0x1, 0x50(%r15)
000000010001b090	xorl	%r15d, %r15d
000000010001b093	movl	%r9d, (%rbx)
000000010001b096	movl	%r10d, 0x4(%rbx)
000000010001b09a	movq	%r11, 0x8(%rbx)
000000010001b09e	movq	%rcx, 0x10(%rbx)
000000010001b0a2	movq	%r13, 0x18(%rbx)
000000010001b0a6	movq	%r8, 0x20(%rbx)
000000010001b0aa	movq	%rsi, 0x28(%rbx)
000000010001b0ae	movq	%r15, 0x30(%rbx)
000000010001b0b2	movq	%rdx, 0x38(%rbx)
000000010001b0b6	movq	%rdi, 0x40(%rbx)
000000010001b0ba	movq	%rdx, 0x48(%rbx)
000000010001b0be	movq	%rax, 0x50(%rbx)
000000010001b0c2	movb	$0x2, 0xb0(%rbx)
000000010001b0c9	addq	$0x158, %rsp                    ## imm = 0x158
000000010001b0d0	popq	%rbx
000000010001b0d1	popq	%r12
000000010001b0d3	popq	%r13
000000010001b0d5	popq	%r14
000000010001b0d7	popq	%r15
000000010001b0d9	popq	%rbp
000000010001b0da	retq
000000010001b0db	movl	$0x5, %r9d
000000010001b0e1	movq	%rdx, %rcx
000000010001b0e4	movq	%rax, %r15
000000010001b0e7	jmp	0x10001b093
000000010001b0e9	movq	%r10, -0x60(%rbp)
000000010001b0ed	movq	(%r15), %rcx
000000010001b0f0	movq	$0x8, -0x138(%rbp)
000000010001b0fb	movq	$0x0, -0x130(%rbp)
000000010001b106	movq	$0x0, -0x128(%rbp)
000000010001b111	movq	0x18(%rax), %rsi
000000010001b115	movq	%rsi, -0x50(%rbp)
000000010001b119	testq	%rsi, %rsi
000000010001b11c	movq	%rdx, -0x148(%rbp)
000000010001b123	movq	%rax, -0x140(%rbp)
000000010001b12a	je	0x10001b291
000000010001b130	movq	%rcx, -0x68(%rbp)
000000010001b134	movq	0x10(%rax), %rcx
000000010001b138	movq	%rcx, -0x30(%rbp)
000000010001b13c	movq	(%rax), %rcx
000000010001b13f	movq	%rcx, -0x58(%rbp)
000000010001b143	movq	0x8(%rax), %rax
000000010001b147	movq	%rax, -0x48(%rbp)
000000010001b14b	movl	$0x8, %eax
000000010001b150	movq	%rax, -0x38(%rbp)
000000010001b154	xorl	%esi, %esi
000000010001b156	leaq	-0x138(%rbp), %rdi
000000010001b15d	movq	%r9, -0x80(%rbp)
000000010001b161	movq	%r11, -0x78(%rbp)
000000010001b165	movq	%r13, -0x70(%rbp)
000000010001b169	movq	-0x50(%rbp), %rax
000000010001b16d	movq	%rax, %r13
000000010001b170	xorl	%ecx, %ecx
000000010001b172	jmp	0x10001b183
000000010001b174	movq	%r13, %rax
000000010001b177	movq	%rax, %r13
000000010001b17a	subq	%rcx, %r13
000000010001b17d	jbe	0x10001b283
000000010001b183	shrq	%r13
000000010001b186	addq	%rcx, %r13
000000010001b189	movq	%r13, %rdx
000000010001b18c	shlq	$0x5, %rdx
000000010001b190	movq	-0x30(%rbp), %r8
000000010001b194	leaq	(%r8,%rdx), %r9
000000010001b198	cmpq	%rsi, 0x10(%r8,%rdx)
000000010001b19d	ja	0x10001b174
000000010001b19f	jb	0x10001b1b0
000000010001b1a1	movq	-0x68(%rbp), %r8
000000010001b1a5	cmpq	%r8, (%r9)
000000010001b1a8	ja	0x10001b174
000000010001b1aa	cmpq	%r8, 0x8(%r9)
000000010001b1ae	ja	0x10001b1c3
000000010001b1b0	incq	%r13
000000010001b1b3	movq	%r13, %rcx
000000010001b1b6	movq	%rax, %r13
000000010001b1b9	subq	%rcx, %r13
000000010001b1bc	ja	0x10001b183
000000010001b1be	jmp	0x10001b283
000000010001b1c3	movq	-0x30(%rbp), %rax
000000010001b1c7	movq	0x18(%rax,%rdx), %rcx
000000010001b1cc	movq	%rcx, %rax
000000010001b1cf	movq	%rcx, -0x40(%rbp)
000000010001b1d3	cmpq	-0x48(%rbp), %rcx
000000010001b1d7	jae	0x10001b2d7
000000010001b1dd	cmpq	-0x130(%rbp), %rsi
000000010001b1e4	jne	0x10001b202
000000010001b1e6	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h86a8fb43ae9ea87aE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h86a8fb43ae9ea87a
000000010001b1eb	movq	-0x138(%rbp), %rcx
000000010001b1f2	movq	-0x128(%rbp), %rsi
000000010001b1f9	leaq	-0x138(%rbp), %rdi
000000010001b200	jmp	0x10001b206
000000010001b202	movq	-0x38(%rbp), %rcx
000000010001b206	movq	-0x40(%rbp), %rax
000000010001b20a	leaq	(%rax,%rax,2), %rax
000000010001b20e	shlq	$0x4, %rax
000000010001b212	addq	-0x58(%rbp), %rax
000000010001b216	movq	%rcx, -0x38(%rbp)
000000010001b21a	movq	%rax, (%rcx,%rsi,8)
000000010001b21e	incq	%rsi
000000010001b221	movq	%rsi, -0x128(%rbp)
000000010001b228	incq	%r13
000000010001b22b	movq	%r13, %rax
000000010001b22e	shlq	$0x5, %rax
000000010001b232	addq	%rax, -0x30(%rbp)
000000010001b236	subq	%r13, -0x50(%rbp)
000000010001b23a	movq	-0x80(%rbp), %r9
000000010001b23e	movq	-0x78(%rbp), %r11
000000010001b242	movq	-0x70(%rbp), %r13
000000010001b246	jne	0x10001b169
000000010001b24c	jmp	0x10001b293
000000010001b24e	movl	%r9d, %eax
000000010001b251	movq	%r11, %rcx
000000010001b254	movq	%rdx, %r14
000000010001b257	movq	%r10, %rdx
000000010001b25a	shlq	$0x20, %rdx
000000010001b25e	orq	%rax, %rdx
000000010001b261	movl	$0x4, %r9d
000000010001b267	xorl	%r15d, %r15d
000000010001b26a	movq	%rdx, %r11
000000010001b26d	movq	%r13, %r8
000000010001b270	movq	%r14, %r13
000000010001b273	jmp	0x10001b093
000000010001b278	xorl	%r15d, %r15d
000000010001b27b	movq	%rdx, %rcx
000000010001b27e	jmp	0x10001b093
000000010001b283	movq	-0x80(%rbp), %r9
000000010001b287	movq	-0x78(%rbp), %r11
000000010001b28b	movq	-0x70(%rbp), %r13
000000010001b28f	jmp	0x10001b293
000000010001b291	xorl	%esi, %esi
000000010001b293	movq	-0x138(%rbp), %rdx
000000010001b29a	movq	-0x130(%rbp), %rdi
000000010001b2a1	leaq	(%rdx,%rsi,8), %rax
000000010001b2a5	movq	0x8(%r15), %r8
000000010001b2a9	movq	0x10(%r15), %rcx
000000010001b2ad	movq	(%rcx), %rsi
000000010001b2b0	addq	$0x10, %rsi
000000010001b2b4	movq	-0x148(%rbp), %rcx
000000010001b2bb	movq	-0x60(%rbp), %r10
000000010001b2bf	movq	-0x140(%rbp), %r15
000000010001b2c6	jmp	0x10001b093
000000010001b2cb	leaq	0x2d5a6(%rip), %rdx
000000010001b2d2	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010001b2d7	leaq	0x2d5fa(%rip), %rdx
000000010001b2de	movq	-0x40(%rbp), %rdi
000000010001b2e2	movq	-0x48(%rbp), %rsi
000000010001b2e6	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010001b2eb	ud2
000000010001b2ed	movq	%rax, %rbx
000000010001b2f0	movq	-0x138(%rbp), %rax
000000010001b2f7	movq	%rax, -0x38(%rbp)
000000010001b2fb	jmp	0x10001b300
000000010001b2fd	movq	%rax, %rbx
000000010001b300	movq	-0x130(%rbp), %rsi
000000010001b307	movq	-0x38(%rbp), %rdi
000000010001b30b	callq	__ZN4core3ptr168drop_in_place$LT$alloc..vec..Vec$LT$$RF$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h9efa9e2ff9c85467E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$RF$addr2line..function..InlinedFunction$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::h9efa9e2ff9c85467
000000010001b310	cmpq	$0x0, (%r12)
000000010001b315	je	0x10001b31f
000000010001b317	movq	%r14, %rdi
000000010001b31a	callq	__ZN4core3ptr130drop_in_place$LT$addr2line..SplitDwarfLoad$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h83a3ab6b07dc3c8aE ## core::ptr::drop_in_place$LT$addr2line..SplitDwarfLoad$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h83a3ab6b07dc3c8a
000000010001b31f	movq	%rbx, %rdi
000000010001b322	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001b327	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001b32c	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001b331	nopw	%cs:(%rax,%rax)
000000010001b33b	nopl	(%rax,%rax)
__ZN9addr2line4lazy17LazyCell$LT$T$GT$11borrow_with17h35abc8a956476deeE:
000000010001b340	pushq	%rbp
000000010001b341	movq	%rsp, %rbp
000000010001b344	pushq	%r15
000000010001b346	pushq	%r14
000000010001b348	pushq	%r12
000000010001b34a	pushq	%rbx
000000010001b34b	subq	$0x120, %rsp                    ## imm = 0x120
000000010001b352	movq	%rdi, %rbx
000000010001b355	cmpq	$0x0, (%rdi)
000000010001b359	jne	0x10001b3c3
000000010001b35b	movq	(%rsi), %r14
000000010001b35e	movq	0x8(%rsi), %rax
000000010001b362	movq	0x10(%rsi), %r12
000000010001b366	movq	(%rax), %rsi
000000010001b369	leaq	-0x138(%rbp), %r15
000000010001b370	movq	%r15, %rdi
000000010001b373	callq	__ZN93_$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h667fbe8abcedc734E ## _$LT$gimli..read..line..LineProgramHeader$LT$R$C$Offset$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h667fbe8abcedc734
000000010001b378	movq	(%r12), %rcx
000000010001b37c	leaq	-0x40(%rbp), %rdi
000000010001b380	movq	%r14, %rsi
000000010001b383	movq	%r15, %rdx
000000010001b386	callq	__ZN9addr2line5Lines5parse17h74bb7e00c6eb3bb5E ## addr2line::Lines::parse::h74bb7e00c6eb3bb5
000000010001b38b	cmpq	$0x0, (%rbx)
000000010001b38f	je	0x10001b39c
000000010001b391	leaq	-0x40(%rbp), %rdi
000000010001b395	callq	__ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$17hdd078504879d0965E ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$::hdd078504879d0965
000000010001b39a	jmp	0x10001b3c3
000000010001b39c	movq	-0x28(%rbp), %rax
000000010001b3a0	movq	%rax, 0x20(%rbx)
000000010001b3a4	movq	-0x30(%rbp), %rax
000000010001b3a8	movq	%rax, 0x18(%rbx)
000000010001b3ac	movq	-0x40(%rbp), %rax
000000010001b3b0	movq	-0x38(%rbp), %rcx
000000010001b3b4	movq	%rcx, 0x10(%rbx)
000000010001b3b8	movq	%rax, 0x8(%rbx)
000000010001b3bc	movq	$0x1, (%rbx)
000000010001b3c3	addq	$0x8, %rbx
000000010001b3c7	movq	%rbx, %rax
000000010001b3ca	addq	$0x120, %rsp                    ## imm = 0x120
000000010001b3d1	popq	%rbx
000000010001b3d2	popq	%r12
000000010001b3d4	popq	%r14
000000010001b3d6	popq	%r15
000000010001b3d8	popq	%rbp
000000010001b3d9	retq
000000010001b3da	nopw	(%rax,%rax)
__ZN9addr2line5Lines5parse17h74bb7e00c6eb3bb5E:
000000010001b3e0	pushq	%rbp
000000010001b3e1	movq	%rsp, %rbp
000000010001b3e4	pushq	%r15
000000010001b3e6	pushq	%r14
000000010001b3e8	pushq	%r13
000000010001b3ea	pushq	%r12
000000010001b3ec	pushq	%rbx
000000010001b3ed	subq	$0x2c8, %rsp                    ## imm = 0x2C8
000000010001b3f4	movq	%rcx, -0x290(%rbp)
000000010001b3fb	movq	%rdx, %rbx
000000010001b3fe	movq	%rsi, -0x288(%rbp)
000000010001b405	movq	%rdi, -0xf8(%rbp)
000000010001b40c	movq	$0x8, -0xd0(%rbp)
000000010001b417	movq	$0x0, -0xc8(%rbp)
000000010001b422	movq	$0x0, -0xc0(%rbp)
000000010001b42d	movq	$0x8, -0xe8(%rbp)
000000010001b438	movq	$0x0, -0xe0(%rbp)
000000010001b443	movq	$0x0, -0xd8(%rbp)
000000010001b44e	leaq	-0x260(%rbp), %rdi
000000010001b455	movl	$0xb0, %edx
000000010001b45a	movq	%rbx, %rsi
000000010001b45d	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001b462	movq	0xb0(%rbx), %rax
000000010001b469	movq	0xb8(%rbx), %rcx
000000010001b470	movl	0xe8(%rbx), %edx
000000010001b476	movl	%edx, -0x178(%rbp)
000000010001b47c	movq	0xe0(%rbx), %rdx
000000010001b483	movq	%rdx, -0x180(%rbp)
000000010001b48a	movq	0xd8(%rbx), %rdx
000000010001b491	movq	%rdx, -0x188(%rbp)
000000010001b498	movq	0xd0(%rbx), %rdx
000000010001b49f	movq	%rdx, -0x190(%rbp)
000000010001b4a6	movq	0xc8(%rbx), %rdx
000000010001b4ad	movq	%rdx, -0x198(%rbp)
000000010001b4b4	movq	0xc0(%rbx), %rdx
000000010001b4bb	movq	%rdx, -0x1a0(%rbp)
000000010001b4c2	movzbl	0xec(%rbx), %edx
000000010001b4c9	movl	0xf4(%rbx), %esi
000000010001b4cf	movl	%esi, -0x16c(%rbp)
000000010001b4d5	movq	0xed(%rbx), %rsi
000000010001b4dc	movq	%rsi, -0x173(%rbp)
000000010001b4e3	movq	%rax, -0x1b0(%rbp)
000000010001b4ea	movq	%rcx, -0x1a8(%rbp)
000000010001b4f1	movb	%dl, -0x174(%rbp)
000000010001b4f7	movq	$0x0, -0x168(%rbp)
000000010001b502	movq	$0x0, -0x160(%rbp)
000000010001b50d	movq	$0x1, -0x158(%rbp)
000000010001b518	movq	$0x1, -0x150(%rbp)
000000010001b523	movq	$0x0, -0x148(%rbp)
000000010001b52e	movq	$0x0, -0x140(%rbp)
000000010001b539	movq	$0x0, -0x138(%rbp)
000000010001b544	movb	$0x0, -0x130(%rbp)
000000010001b54b	movb	%dl, -0x12f(%rbp)
000000010001b551	movl	$0x0, -0x12e(%rbp)
000000010001b55b	movq	%rax, -0x128(%rbp)
000000010001b562	movq	%rcx, -0x120(%rbp)
000000010001b569	movl	$0x8, %eax
000000010001b56e	movq	%rax, -0x100(%rbp)
000000010001b575	xorl	%r12d, %r12d
000000010001b578	xorl	%eax, %eax
000000010001b57a	movq	%rax, -0xa0(%rbp)
000000010001b581	movl	$0x8, %eax
000000010001b586	movq	%rax, -0x108(%rbp)
000000010001b58d	movl	$0x8, %ecx
000000010001b592	xorl	%esi, %esi
000000010001b594	movq	%rax, -0x88(%rbp)
000000010001b59b	xorl	%eax, %eax
000000010001b59d	movq	%rax, -0x90(%rbp)
000000010001b5a4	movq	%rcx, -0xb8(%rbp)
000000010001b5ab	movq	%rsi, -0x30(%rbp)
000000010001b5af	cmpb	$0x0, -0x12d(%rbp)
000000010001b5b6	je	0x10001b61c
000000010001b5b8	movzbl	-0x174(%rbp), %eax
000000010001b5bf	leaq	-0x168(%rbp), %rcx
000000010001b5c6	movq	$0x0, 0x8(%rcx)
000000010001b5ce	movq	$0x0, (%rcx)
000000010001b5d5	movq	$0x1, -0x158(%rbp)
000000010001b5e0	movq	$0x1, -0x150(%rbp)
000000010001b5eb	movb	$0x0, -0x130(%rbp)
000000010001b5f2	leaq	-0x260(%rbp), %rcx
000000010001b5f9	movq	$0x0, 0x120(%rcx)
000000010001b604	movq	$0x0, 0x118(%rcx)
000000010001b60f	movb	%al, -0x12f(%rbp)
000000010001b615	movb	$0x0, -0x12d(%rbp)
000000010001b61c	movq	$0x0, -0x138(%rbp)
000000010001b627	movb	$0x0, -0x12e(%rbp)
000000010001b62e	movw	$0x0, -0x12c(%rbp)
000000010001b637	movq	-0x120(%rbp), %rdi
000000010001b63e	testq	%rdi, %rdi
000000010001b641	je	0x10001c356
000000010001b647	movq	-0x128(%rbp), %rdx
000000010001b64e	leaq	-0x1(%rdi), %rax
000000010001b652	leaq	0x1(%rdx), %rsi
000000010001b656	movq	%rsi, -0x128(%rbp)
000000010001b65d	movq	%rax, -0x120(%rbp)
000000010001b664	movzbl	(%rdx), %r8d
000000010001b668	testl	%r8d, %r8d
000000010001b66b	je	0x10001b8d0
000000010001b671	movzbl	-0x16f(%rbp), %ecx
000000010001b678	cmpb	%cl, %r8b
000000010001b67b	jae	0x10001b940
000000010001b681	leal	-0x1(%r8), %r9d
000000010001b685	cmpl	$0xb, %r9d
000000010001b689	ja	0x10001b7c2
000000010001b68f	leaq	0x1e7a(%rip), %r10
000000010001b696	movslq	(%r10,%r9,4), %r8
000000010001b69a	addq	%r10, %r8
000000010001b69d	jmpq	*%r8
000000010001b6a0	testq	%rax, %rax
000000010001b6a3	je	0x10001c347
000000010001b6a9	movl	$0x2, %eax
000000010001b6ae	subq	%rdi, %rax
000000010001b6b1	leaq	0x2(%rdx), %r8
000000010001b6b5	xorl	%esi, %esi
000000010001b6b7	xorl	%ecx, %ecx
000000010001b6b9	nopl	(%rax)
000000010001b6c0	movzbl	-0x1(%r8), %r9d
000000010001b6c5	cmpl	$0x3f, %ecx
000000010001b6c8	jne	0x10001b6d4
000000010001b6ca	cmpb	$0x2, %r9b
000000010001b6ce	jae	0x10001cbab
000000010001b6d4	movzbl	%r9b, %r9d
000000010001b6d8	movl	%r9d, %r10d
000000010001b6db	andl	$0x7f, %r10d
000000010001b6df	shlq	%cl, %r10
000000010001b6e2	orq	%r10, %rsi
000000010001b6e5	testb	%r9b, %r9b
000000010001b6e8	jns	0x10001b889
000000010001b6ee	addl	$0x7, %ecx
000000010001b6f1	incq	%rax
000000010001b6f4	incq	%r8
000000010001b6f7	cmpq	$0x1, %rax
000000010001b6fb	jne	0x10001b6c0
000000010001b6fd	jmp	0x10001c32f
000000010001b702	testq	%rax, %rax
000000010001b705	je	0x10001c347
000000010001b70b	movl	$0x2, %eax
000000010001b710	subq	%rdi, %rax
000000010001b713	leaq	0x2(%rdx), %r8
000000010001b717	xorl	%esi, %esi
000000010001b719	xorl	%ecx, %ecx
000000010001b71b	nopl	(%rax,%rax)
000000010001b720	movzbl	-0x1(%r8), %r9d
000000010001b725	cmpl	$0x3f, %ecx
000000010001b728	jne	0x10001b734
000000010001b72a	cmpb	$0x2, %r9b
000000010001b72e	jae	0x10001ce2c
000000010001b734	movzbl	%r9b, %r9d
000000010001b738	movl	%r9d, %r10d
000000010001b73b	andl	$0x7f, %r10d
000000010001b73f	shlq	%cl, %r10
000000010001b742	orq	%r10, %rsi
000000010001b745	testb	%r9b, %r9b
000000010001b748	jns	0x10001b849
000000010001b74e	addl	$0x7, %ecx
000000010001b751	incq	%rax
000000010001b754	incq	%r8
000000010001b757	cmpq	$0x1, %rax
000000010001b75b	jne	0x10001b720
000000010001b75d	jmp	0x10001c32f
000000010001b762	testq	%rax, %rax
000000010001b765	je	0x10001c347
000000010001b76b	movl	$0x2, %eax
000000010001b770	subq	%rdi, %rax
000000010001b773	leaq	0x2(%rdx), %r8
000000010001b777	xorl	%esi, %esi
000000010001b779	xorl	%ecx, %ecx
000000010001b77b	nopl	(%rax,%rax)
000000010001b780	movzbl	-0x1(%r8), %r9d
000000010001b785	cmpl	$0x3f, %ecx
000000010001b788	jne	0x10001b794
000000010001b78a	cmpb	$0x2, %r9b
000000010001b78e	jae	0x10001cbab
000000010001b794	movzbl	%r9b, %r9d
000000010001b798	movl	%r9d, %r10d
000000010001b79b	andl	$0x7f, %r10d
000000010001b79f	shlq	%cl, %r10
000000010001b7a2	orq	%r10, %rsi
000000010001b7a5	testb	%r9b, %r9b
000000010001b7a8	jns	0x10001b869
000000010001b7ae	addl	$0x7, %ecx
000000010001b7b1	incq	%rax
000000010001b7b4	incq	%r8
000000010001b7b7	cmpq	$0x1, %rax
000000010001b7bb	jne	0x10001b780
000000010001b7bd	jmp	0x10001c32f
000000010001b7c2	movq	-0x220(%rbp), %rbx
000000010001b7c9	movq	-0x218(%rbp), %rcx
000000010001b7d0	decb	%r8b
000000010001b7d3	movzbl	%r8b, %r8d
000000010001b7d7	cmpq	%r8, %rcx
000000010001b7da	jb	0x10001ce49
000000010001b7e0	addq	%r8, %rbx
000000010001b7e3	cmpq	%r8, %rcx
000000010001b7e6	je	0x10001ce49
000000010001b7ec	movzbl	(%rbx), %r8d
000000010001b7f0	testl	%r8d, %r8d
000000010001b7f3	je	0x10001b637
000000010001b7f9	cmpl	$0x1, %r8d
000000010001b7fd	jne	0x10001bdcb
000000010001b803	testq	%rax, %rax
000000010001b806	je	0x10001c347
000000010001b80c	movl	$0x2, %eax
000000010001b811	subq	%rdi, %rax
000000010001b814	leaq	0x2(%rdx), %rcx
000000010001b818	movl	$0x3f, %esi
000000010001b81d	movzbl	-0x1(%rcx), %r8d
000000010001b822	testl	%esi, %esi
000000010001b824	jne	0x10001b830
000000010001b826	cmpb	$0x2, %r8b
000000010001b82a	jae	0x10001ce25
000000010001b830	testb	%r8b, %r8b
000000010001b833	jns	0x10001b8a9
000000010001b835	addl	$-0x7, %esi
000000010001b838	incq	%rax
000000010001b83b	incq	%rcx
000000010001b83e	cmpq	$0x1, %rax
000000010001b842	jne	0x10001b81d
000000010001b844	jmp	0x10001c32f
000000010001b849	movq	%r8, -0x128(%rbp)
000000010001b850	negq	%rax
000000010001b853	movq	%rax, -0x120(%rbp)
000000010001b85a	movq	%rsi, -0x140(%rbp)
000000010001b861	movq	%rax, %rdi
000000010001b864	jmp	0x10001b63e
000000010001b869	movq	%r8, -0x128(%rbp)
000000010001b870	negq	%rax
000000010001b873	movq	%rax, -0x120(%rbp)
000000010001b87a	movq	%rsi, -0x148(%rbp)
000000010001b881	movq	%rax, %rdi
000000010001b884	jmp	0x10001b63e
000000010001b889	movq	%r8, -0x128(%rbp)
000000010001b890	negq	%rax
000000010001b893	movq	%rax, -0x120(%rbp)
000000010001b89a	movq	%rsi, -0x158(%rbp)
000000010001b8a1	movq	%rax, %rdi
000000010001b8a4	jmp	0x10001b63e
000000010001b8a9	movq	%rcx, -0x128(%rbp)
000000010001b8b0	negq	%rax
000000010001b8b3	movq	%rax, -0x120(%rbp)
000000010001b8ba	movq	%rax, %rdi
000000010001b8bd	jmp	0x10001b63e
000000010001b8c2	nopw	%cs:(%rax,%rax)
000000010001b8cc	nopl	(%rax)
000000010001b8d0	testq	%rax, %rax
000000010001b8d3	je	0x10001c347
000000010001b8d9	leaq	-0x1(%rdi), %rsi
000000010001b8dd	xorl	%r8d, %r8d
000000010001b8e0	xorl	%r10d, %r10d
000000010001b8e3	xorl	%ecx, %ecx
000000010001b8e5	nopw	%cs:(%rax,%rax)
000000010001b8ef	nop
000000010001b8f0	movzbl	0x1(%rdx,%r8), %r9d
000000010001b8f6	movb	$0x6, %al
000000010001b8f8	cmpl	$0x3f, %ecx
000000010001b8fb	jne	0x10001b907
000000010001b8fd	cmpb	$0x2, %r9b
000000010001b901	jae	0x10001cee2
000000010001b907	movzbl	%r9b, %r9d
000000010001b90b	movl	%r9d, %r11d
000000010001b90e	andl	$0x7f, %r11d
000000010001b912	shlq	%cl, %r11
000000010001b915	orq	%r11, %r10
000000010001b918	testb	%r9b, %r9b
000000010001b91b	jns	0x10001ba6e
000000010001b921	addl	$0x7, %ecx
000000010001b924	incq	%r8
000000010001b927	cmpq	%r8, %rsi
000000010001b92a	jne	0x10001b8f0
000000010001b92c	jmp	0x10001c32f
000000010001b931	nopw	%cs:(%rax,%rax)
000000010001b93b	nopl	(%rax,%rax)
000000010001b940	movzbl	-0x170(%rbp), %edx
000000010001b947	testb	%dl, %dl
000000010001b949	je	0x10001d243
000000010001b94f	subb	%cl, %r8b
000000010001b952	movzbl	%r8b, %eax
000000010001b956	divb	%dl
000000010001b958	movl	%eax, %ebx
000000010001b95a	movzbl	%ah, %esi
000000010001b95d	movsbq	-0x171(%rbp), %rax
000000010001b965	addq	%rax, %rsi
000000010001b968	leaq	-0x168(%rbp), %rdi
000000010001b96f	callq	__ZN5gimli4read4line7LineRow18apply_line_advance17h46f040cb9f770b60E ## gimli::read::line::LineRow::apply_line_advance::h46f040cb9f770b60
000000010001b974	movzbl	%bl, %eax
000000010001b977	movzbl	-0x173(%rbp), %ecx
000000010001b97e	movzbl	-0x172(%rbp), %esi
000000010001b985	cmpl	$0x1, %esi
000000010001b988	jne	0x10001b9b5
000000010001b98a	imulq	%rax, %rcx
000000010001b98e	addq	%rcx, -0x168(%rbp)
000000010001b995	movq	$0x0, -0x160(%rbp)
000000010001b9a0	cmpb	$0x0, -0x130(%rbp)
000000010001b9a7	movzbl	-0x12d(%rbp), %eax
000000010001b9ae	jne	0x10001b9ef
000000010001b9b0	jmp	0x10001c132
000000010001b9b5	testl	%esi, %esi
000000010001b9b7	je	0x10001d258
000000010001b9bd	addq	-0x160(%rbp), %rax
000000010001b9c4	xorl	%edx, %edx
000000010001b9c6	divq	%rsi
000000010001b9c9	imulq	%rcx, %rax
000000010001b9cd	addq	%rax, -0x168(%rbp)
000000010001b9d4	movq	%rdx, -0x160(%rbp)
000000010001b9db	cmpb	$0x0, -0x130(%rbp)
000000010001b9e2	movzbl	-0x12d(%rbp), %eax
000000010001b9e9	je	0x10001c132
000000010001b9ef	testb	%al, %al
000000010001b9f1	je	0x10001b61c
000000010001b9f7	movzbl	-0x174(%rbp), %eax
000000010001b9fe	leaq	-0x168(%rbp), %rcx
000000010001ba05	movq	$0x0, 0x8(%rcx)
000000010001ba0d	movq	$0x0, (%rcx)
000000010001ba14	movq	$0x1, -0x158(%rbp)
000000010001ba1f	movq	$0x1, -0x150(%rbp)
000000010001ba2a	leaq	-0x260(%rbp), %rcx
000000010001ba31	movb	$0x0, 0x130(%rcx)
000000010001ba38	movq	$0x0, 0x128(%rcx)
000000010001ba43	movq	$0x0, 0x120(%rcx)
000000010001ba4e	movq	$0x0, 0x118(%rcx)
000000010001ba59	movb	%al, -0x12f(%rbp)
000000010001ba5f	movl	$0x0, -0x12e(%rbp)
000000010001ba69	jmp	0x10001b637
000000010001ba6e	movq	%rdi, %rcx
000000010001ba71	subq	%r8, %rcx
000000010001ba74	addq	$-0x2, %rcx
000000010001ba78	cmpq	%r10, %rcx
000000010001ba7b	jb	0x10001ce44
000000010001ba81	subq	%r10, %rdi
000000010001ba84	subq	%r8, %rdi
000000010001ba87	addq	$-0x2, %rdi
000000010001ba8b	leaq	(%r8,%r10), %r9
000000010001ba8f	leaq	0x2(%rdx,%r9), %rbx
000000010001ba94	movq	%rbx, -0x128(%rbp)
000000010001ba9b	movq	%rdi, -0x120(%rbp)
000000010001baa2	testq	%r10, %r10
000000010001baa5	je	0x10001ce44
000000010001baab	movzbl	0x2(%rdx,%r8), %ecx
000000010001bab1	decl	%ecx
000000010001bab3	cmpl	$0x3, %ecx
000000010001bab6	ja	0x10001b637
000000010001babc	leaq	-0x1(%r10), %rdi
000000010001bac0	leaq	0x3(%rdx,%r8), %r11
000000010001bac5	leaq	0x1a74(%rip), %rsi
000000010001bacc	movslq	(%rsi,%rcx,4), %rcx
000000010001bad0	addq	%rsi, %rcx
000000010001bad3	jmpq	*%rcx
000000010001bad5	movb	$0x1, -0x12d(%rbp)
000000010001badc	cmpb	$0x0, -0x130(%rbp)
000000010001bae3	movzbl	-0x12d(%rbp), %eax
000000010001baea	jne	0x10001b9ef
000000010001baf0	jmp	0x10001c132
000000010001baf5	xorb	$0x1, -0x12f(%rbp)
000000010001bafc	jmp	0x10001b637
000000010001bb01	movb	$0x1, -0x12c(%rbp)
000000010001bb08	jmp	0x10001b637
000000010001bb0d	cmpq	$0x1, %rax
000000010001bb11	jbe	0x10001c347
000000010001bb17	addq	$-0x3, %rdi
000000010001bb1b	leaq	0x3(%rdx), %rax
000000010001bb1f	movq	%rax, -0x128(%rbp)
000000010001bb26	movq	%rdi, -0x120(%rbp)
000000010001bb2d	movzwl	0x1(%rdx), %eax
000000010001bb31	addq	%rax, -0x168(%rbp)
000000010001bb38	movq	$0x0, -0x160(%rbp)
000000010001bb43	jmp	0x10001b637
000000010001bb48	movb	$0x1, -0x12e(%rbp)
000000010001bb4f	jmp	0x10001b637
000000010001bb54	movzbl	-0x170(%rbp), %edx
000000010001bb5b	movl	$0x19, %esi
000000010001bb60	testb	%dl, %dl
000000010001bb62	je	0x10001d28b
000000010001bb68	notb	%cl
000000010001bb6a	movzbl	%cl, %eax
000000010001bb6d	divb	%dl
000000010001bb6f	movzbl	%al, %eax
000000010001bb72	movzbl	-0x173(%rbp), %ecx
000000010001bb79	movzbl	-0x172(%rbp), %edi
000000010001bb80	cmpl	$0x1, %edi
000000010001bb83	jne	0x10001bd56
000000010001bb89	imulq	%rax, %rcx
000000010001bb8d	addq	%rcx, -0x168(%rbp)
000000010001bb94	movq	$0x0, -0x160(%rbp)
000000010001bb9f	jmp	0x10001b637
000000010001bba4	testq	%rax, %rax
000000010001bba7	je	0x10001c347
000000010001bbad	movl	$0x2, %esi
000000010001bbb2	subq	%rdi, %rsi
000000010001bbb5	leaq	0x2(%rdx), %r8
000000010001bbb9	xorl	%eax, %eax
000000010001bbbb	xorl	%ecx, %ecx
000000010001bbbd	nopl	(%rax)
000000010001bbc0	movzbl	-0x1(%r8), %r9d
000000010001bbc5	cmpl	$0x3f, %ecx
000000010001bbc8	jne	0x10001bbd4
000000010001bbca	cmpb	$0x2, %r9b
000000010001bbce	jae	0x10001ce25
000000010001bbd4	movzbl	%r9b, %r9d
000000010001bbd8	movl	%r9d, %r10d
000000010001bbdb	andl	$0x7f, %r10d
000000010001bbdf	shlq	%cl, %r10
000000010001bbe2	orq	%r10, %rax
000000010001bbe5	testb	%r9b, %r9b
000000010001bbe8	jns	0x10001bd9a
000000010001bbee	addl	$0x7, %ecx
000000010001bbf1	incq	%rsi
000000010001bbf4	incq	%r8
000000010001bbf7	cmpq	$0x1, %rsi
000000010001bbfb	jne	0x10001bbc0
000000010001bbfd	jmp	0x10001c32f
000000010001bc02	leaq	0x1(%rdx), %rbx
000000010001bc06	addq	$0x2, %rdx
000000010001bc0a	addq	$-0x2, %rdi
000000010001bc0e	xorl	%ecx, %ecx
000000010001bc10	xorl	%esi, %esi
000000010001bc12	jmp	0x10001bc41
000000010001bc14	nopw	%cs:(%rax,%rax)
000000010001bc1e	nop
000000010001bc20	movl	%eax, %r8d
000000010001bc23	andl	$0x7f, %r8d
000000010001bc27	shlq	%cl, %r8
000000010001bc2a	orq	%r8, %rsi
000000010001bc2d	addl	$0x7, %ecx
000000010001bc30	incq	%rbx
000000010001bc33	incq	%rdx
000000010001bc36	decq	%rdi
000000010001bc39	testb	%al, %al
000000010001bc3b	jns	0x10001bd6f
000000010001bc41	cmpq	$-0x1, %rdi
000000010001bc45	je	0x10001ce21
000000010001bc4b	movq	%rdx, -0x128(%rbp)
000000010001bc52	movq	%rdi, -0x120(%rbp)
000000010001bc59	movzbl	-0x1(%rdx), %eax
000000010001bc5d	cmpl	$0x3f, %ecx
000000010001bc60	jne	0x10001bc20
000000010001bc62	cmpb	$0x7f, %al
000000010001bc64	je	0x10001bc20
000000010001bc66	testl	%eax, %eax
000000010001bc68	je	0x10001bc20
000000010001bc6a	jmp	0x10001cedd
000000010001bc6f	movb	$0x1, -0x12b(%rbp)
000000010001bc76	jmp	0x10001b637
000000010001bc7b	cmpw	$0x5, -0x176(%rbp)
000000010001bc83	jae	0x10001b637
000000010001bc89	testq	%rdi, %rdi
000000010001bc8c	je	0x10001d1b4
000000010001bc92	leaq	0x3(%rdx,%r8), %rbx
000000010001bc97	leaq	-0x1(%r10), %rcx
000000010001bc9b	addq	%rdx, %r8
000000010001bc9e	leaq	-0x3(%r10), %rdi
000000010001bca2	leaq	-0x4(%r10), %rsi
000000010001bca6	xorl	%r15d, %r15d
000000010001bca9	nopl	(%rax)
000000010001bcb0	cmpb	$0x0, 0x3(%r8,%r15)
000000010001bcb6	je	0x10001bef5
000000010001bcbc	incq	%r15
000000010001bcbf	decq	%rdi
000000010001bcc2	decq	%rsi
000000010001bcc5	cmpq	%r15, %rcx
000000010001bcc8	jne	0x10001bcb0
000000010001bcca	jmp	0x10001ce49
000000010001bccf	testq	%rdi, %rdi
000000010001bcd2	je	0x10001d1a0
000000010001bcd8	xorl	%edx, %edx
000000010001bcda	xorl	%ecx, %ecx
000000010001bcdc	nopl	(%rax)
000000010001bce0	movzbl	(%r11), %esi
000000010001bce4	cmpl	$0x3f, %ecx
000000010001bce7	jne	0x10001bcf3
000000010001bce9	cmpb	$0x2, %sil
000000010001bced	jae	0x10001cee2
000000010001bcf3	movzbl	%sil, %esi
000000010001bcf7	movl	%esi, %r8d
000000010001bcfa	andl	$0x7f, %r8d
000000010001bcfe	shlq	%cl, %r8
000000010001bd01	orq	%r8, %rdx
000000010001bd04	testb	%sil, %sil
000000010001bd07	jns	0x10001be8c
000000010001bd0d	decq	%rdi
000000010001bd10	incq	%r11
000000010001bd13	addl	$0x7, %ecx
000000010001bd16	testq	%rdi, %rdi
000000010001bd19	jne	0x10001bce0
000000010001bd1b	jmp	0x10001ce49
000000010001bd20	movzbl	-0x178(%rbp), %esi
000000010001bd27	movl	%esi, %eax
000000010001bd29	decl	%eax
000000010001bd2b	cmpl	$0x7, %eax
000000010001bd2e	ja	0x10001d1dc
000000010001bd34	leaq	0x1815(%rip), %rcx
000000010001bd3b	movslq	(%rcx,%rax,4), %rax
000000010001bd3f	addq	%rcx, %rax
000000010001bd42	jmpq	*%rax
000000010001bd44	testq	%rdi, %rdi
000000010001bd47	je	0x10001d1e0
000000010001bd4d	movzbl	(%r11), %ebx
000000010001bd51	jmp	0x10001bfc9
000000010001bd56	testl	%edi, %edi
000000010001bd58	je	0x10001d25d
000000010001bd5e	addq	-0x160(%rbp), %rax
000000010001bd65	xorl	%edx, %edx
000000010001bd67	divq	%rdi
000000010001bd6a	jmp	0x10001bf61
000000010001bd6f	movq	$-0x1, %rdx
000000010001bd76	shlq	%cl, %rdx
000000010001bd79	testb	$0x40, %al
000000010001bd7b	cmoveq	%r12, %rdx
000000010001bd7f	cmpl	$0x40, %ecx
000000010001bd82	cmovgeq	%r12, %rdx
000000010001bd86	orq	%rdx, %rsi
000000010001bd89	leaq	-0x168(%rbp), %rdi
000000010001bd90	callq	__ZN5gimli4read4line7LineRow18apply_line_advance17h46f040cb9f770b60E ## gimli::read::line::LineRow::apply_line_advance::h46f040cb9f770b60
000000010001bd95	jmp	0x10001b637
000000010001bd9a	movq	%r8, -0x128(%rbp)
000000010001bda1	negq	%rsi
000000010001bda4	movq	%rsi, -0x120(%rbp)
000000010001bdab	movzbl	-0x173(%rbp), %ecx
000000010001bdb2	movzbl	-0x172(%rbp), %esi
000000010001bdb9	cmpl	$0x1, %esi
000000010001bdbc	jne	0x10001bf4d
000000010001bdc2	imulq	%rcx, %rax
000000010001bdc6	jmp	0x10001bb31
000000010001bdcb	negq	%rdx
000000010001bdce	movq	%rsi, %rdi
000000010001bdd1	movq	%rax, %r9
000000010001bdd4	xorl	%ecx, %ecx
000000010001bdd6	testq	%r9, %r9
000000010001bdd9	je	0x10001ced1
000000010001bddf	movq	%rcx, -0xa8(%rbp)
000000010001bde6	movl	$0x1, %r14d
000000010001bdec	movq	%r9, -0x270(%rbp)
000000010001bdf3	subq	%r9, %r14
000000010001bdf6	leaq	0x1(%rdi), %r15
000000010001bdfa	leaq	(%rdx,%rdi), %r11
000000010001bdfe	xorl	%r13d, %r13d
000000010001be01	xorl	%ecx, %ecx
000000010001be03	nopw	%cs:(%rax,%rax)
000000010001be0d	nopl	(%rax)
000000010001be10	movzbl	-0x1(%r15), %r9d
000000010001be15	cmpl	$0x3f, %ecx
000000010001be18	jne	0x10001be24
000000010001be1a	cmpb	$0x2, %r9b
000000010001be1e	jae	0x10001ceb4
000000010001be24	movzbl	%r9b, %r10d
000000010001be28	movl	%r10d, %r9d
000000010001be2b	andl	$0x7f, %r9d
000000010001be2f	shlq	%cl, %r9
000000010001be32	orq	%r9, %r13
000000010001be35	testb	%r10b, %r10b
000000010001be38	jns	0x10001be51
000000010001be3a	addl	$0x7, %ecx
000000010001be3d	incq	%r14
000000010001be40	incq	%r15
000000010001be43	incq	%r11
000000010001be46	cmpq	$0x1, %r14
000000010001be4a	jne	0x10001be10
000000010001be4c	jmp	0x10001ceb8
000000010001be51	movq	%r15, -0x128(%rbp)
000000010001be58	negq	%r14
000000010001be5b	movq	%r14, -0x120(%rbp)
000000010001be62	movq	-0xa8(%rbp), %rcx
000000010001be69	incq	%rcx
000000010001be6c	movq	%r15, %rdi
000000010001be6f	movq	%r14, %r9
000000010001be72	movq	%r13, %rbx
000000010001be75	cmpq	%r8, %rcx
000000010001be78	jne	0x10001bdd6
000000010001be7e	cmpq	%r11, %rax
000000010001be81	jae	0x10001b637
000000010001be87	jmp	0x10001c347
000000010001be8c	movq	%rdx, -0x138(%rbp)
000000010001be93	jmp	0x10001b637
000000010001be98	cmpq	$0x2, %rdi
000000010001be9c	jb	0x10001bf78
000000010001bea2	movzwl	0x3(%rdx,%r8), %ebx
000000010001bea8	movw	%bx, -0x77(%rbp)
000000010001beac	movb	$0x4b, %al
000000010001beae	jmp	0x10001bfc1
000000010001beb3	cmpq	$0x8, %rdi
000000010001beb7	jb	0x10001d1ed
000000010001bebd	movq	(%r11), %rbx
000000010001bec0	jmp	0x10001bfc9
000000010001bec5	cmpq	$0x4, %rdi
000000010001bec9	jb	0x10001bf9c
000000010001becf	movzwl	0x4(%rdx,%r8), %eax
000000010001bed5	movzbl	0x3(%rdx,%r8), %ecx
000000010001bedb	movzbl	0x6(%rdx,%r8), %edx
000000010001bee1	movb	%cl, -0x75(%rbp)
000000010001bee4	movb	%dl, -0x72(%rbp)
000000010001bee7	movw	%ax, -0x74(%rbp)
000000010001beeb	movl	-0x75(%rbp), %ebx
000000010001beee	movb	$0x4b, %al
000000010001bef0	jmp	0x10001bfc1
000000010001bef5	addq	$-0x2, %r10
000000010001bef9	cmpq	%r15, %r10
000000010001befc	je	0x10001d239
000000010001bf02	leaq	0x4(%r15,%r8), %r8
000000010001bf07	xorl	%r14d, %r14d
000000010001bf0a	xorl	%ecx, %ecx
000000010001bf0c	movzbl	(%r8), %r10d
000000010001bf10	cmpl	$0x3f, %ecx
000000010001bf13	jne	0x10001bf1f
000000010001bf15	cmpb	$0x2, %r10b
000000010001bf19	jae	0x10001cee2
000000010001bf1f	movzbl	%r10b, %r10d
000000010001bf23	movl	%r10d, %r11d
000000010001bf26	andl	$0x7f, %r11d
000000010001bf2a	shlq	%cl, %r11
000000010001bf2d	orq	%r11, %r14
000000010001bf30	testb	%r10b, %r10b
000000010001bf33	jns	0x10001bffb
000000010001bf39	incq	%r8
000000010001bf3c	addl	$0x7, %ecx
000000010001bf3f	decq	%rsi
000000010001bf42	addq	$-0x1, %rdi
000000010001bf46	jb	0x10001bf0c
000000010001bf48	jmp	0x10001d196
000000010001bf4d	testl	%esi, %esi
000000010001bf4f	je	0x10001d258
000000010001bf55	addq	-0x160(%rbp), %rax
000000010001bf5c	xorl	%edx, %edx
000000010001bf5e	divq	%rsi
000000010001bf61	imulq	%rcx, %rax
000000010001bf65	addq	%rax, -0x168(%rbp)
000000010001bf6c	movq	%rdx, -0x160(%rbp)
000000010001bf73	jmp	0x10001b637
000000010001bf78	leaq	0x3(%rdx,%r8), %rbx
000000010001bf7d	movw	$0x0, -0x78(%rbp)
000000010001bf83	movl	$0x0, -0x76(%rbp)
000000010001bf8a	movb	$0x0, -0x72(%rbp)
000000010001bf8e	movl	-0x78(%rbp), %eax
000000010001bf91	movl	%eax, -0x48(%rbp)
000000010001bf94	movl	-0x75(%rbp), %eax
000000010001bf97	movl	%eax, -0x45(%rbp)
000000010001bf9a	jmp	0x10001bfbf
000000010001bf9c	leaq	0x3(%rdx,%r8), %rbx
000000010001bfa1	movl	$0x0, -0x78(%rbp)
000000010001bfa8	movb	$0x0, -0x72(%rbp)
000000010001bfac	movw	$0x0, -0x74(%rbp)
000000010001bfb2	movl	-0x75(%rbp), %eax
000000010001bfb5	movl	%eax, -0x45(%rbp)
000000010001bfb8	movl	$0x0, -0x48(%rbp)
000000010001bfbf	movb	$0x13, %al
000000010001bfc1	cmpb	$0x4b, %al
000000010001bfc3	jne	0x10001d1be
000000010001bfc9	movzbl	%sil, %eax
000000010001bfcd	imull	$0x38, %eax, %ecx
000000010001bfd0	movq	$-0x1, %rax
000000010001bfd7	shrq	%cl, %rax
000000010001bfda	cmpq	%rax, %rbx
000000010001bfdd	sete	-0x130(%rbp)
000000010001bfe4	movq	%rbx, -0x168(%rbp)
000000010001bfeb	movq	$0x0, -0x160(%rbp)
000000010001bff6	jmp	0x10001b637
000000010001bffb	testq	%rdi, %rdi
000000010001bffe	je	0x10001d275
000000010001c004	leaq	0x1(%r8), %rdx
000000010001c008	xorl	%r13d, %r13d
000000010001c00b	xorl	%ecx, %ecx
000000010001c00d	movzbl	(%rdx), %r9d
000000010001c011	cmpl	$0x3f, %ecx
000000010001c014	jne	0x10001c020
000000010001c016	cmpb	$0x2, %r9b
000000010001c01a	jae	0x10001cee2
000000010001c020	movzbl	%r9b, %r9d
000000010001c024	movl	%r9d, %r10d
000000010001c027	andl	$0x7f, %r10d
000000010001c02b	shlq	%cl, %r10
000000010001c02e	orq	%r10, %r13
000000010001c031	testb	%r9b, %r9b
000000010001c034	jns	0x10001c047
000000010001c036	incq	%rdx
000000010001c039	addl	$0x7, %ecx
000000010001c03c	addq	$-0x1, %rsi
000000010001c040	jb	0x10001c00d
000000010001c042	jmp	0x10001d1aa
000000010001c047	testq	%rsi, %rsi
000000010001c04a	je	0x10001d280
000000010001c050	leaq	0x1(%rdx), %rdi
000000010001c054	xorl	%r8d, %r8d
000000010001c057	xorl	%ecx, %ecx
000000010001c059	movq	%rcx, -0xa8(%rbp)
000000010001c060	xorl	%ecx, %ecx
000000010001c062	movzbl	(%rdi), %r9d
000000010001c066	cmpl	$0x3f, %ecx
000000010001c069	jne	0x10001c075
000000010001c06b	cmpb	$0x2, %r9b
000000010001c06f	jae	0x10001cee2
000000010001c075	movzbl	%r9b, %r9d
000000010001c079	movl	%r9d, %r10d
000000010001c07c	andl	$0x7f, %r10d
000000010001c080	shlq	%cl, %r10
000000010001c083	orq	%r10, -0xa8(%rbp)
000000010001c08a	testb	%r9b, %r9b
000000010001c08d	jns	0x10001c0a2
000000010001c08f	incq	%rdi
000000010001c092	addl	$0x7, %ecx
000000010001c095	incq	%r8
000000010001c098	cmpq	%r8, %rsi
000000010001c09b	jne	0x10001c062
000000010001c09d	jmp	0x10001d1d2
000000010001c0a2	movq	-0x1b8(%rbp), %rsi
000000010001c0a9	cmpq	-0x1c0(%rbp), %rsi
000000010001c0b0	jne	0x10001c0c5
000000010001c0b2	leaq	-0x1c8(%rbp), %rdi
000000010001c0b9	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h764d5260e2433607E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h764d5260e2433607
000000010001c0be	movq	-0x1b8(%rbp), %rsi
000000010001c0c5	movq	%r14, %rax
000000010001c0c8	shrq	$0x8, %rax
000000010001c0cc	movq	-0x1c8(%rbp), %rcx
000000010001c0d3	movq	%rsi, %rdx
000000010001c0d6	shlq	$0x6, %rdx
000000010001c0da	movq	$0x1f, (%rcx,%rdx)
000000010001c0e2	movq	%rbx, 0x8(%rcx,%rdx)
000000010001c0e7	movq	%r15, 0x10(%rcx,%rdx)
000000010001c0ec	movb	%r14b, 0x18(%rcx,%rdx)
000000010001c0f1	movl	%eax, 0x19(%rcx,%rdx)
000000010001c0f5	movq	%rax, %rdi
000000010001c0f8	shrq	$0x30, %rdi
000000010001c0fc	movb	%dil, 0x1f(%rcx,%rdx)
000000010001c101	shrq	$0x20, %rax
000000010001c105	movw	%ax, 0x1d(%rcx,%rdx)
000000010001c10a	movq	%r13, 0x20(%rcx,%rdx)
000000010001c10f	movq	-0xa8(%rbp), %rax
000000010001c116	movq	%rax, 0x28(%rcx,%rdx)
000000010001c11b	xorps	%xmm0, %xmm0
000000010001c11e	movups	%xmm0, 0x30(%rcx,%rdx)
000000010001c123	incq	%rsi
000000010001c126	movq	%rsi, -0x1b8(%rbp)
000000010001c12d	jmp	0x10001b637
000000010001c132	testb	%al, %al
000000010001c134	movq	-0x30(%rbp), %rsi
000000010001c138	movq	-0xb8(%rbp), %rcx
000000010001c13f	jne	0x10001c1e6
000000010001c145	movq	-0x168(%rbp), %r13
000000010001c14c	movq	-0x158(%rbp), %r15
000000010001c153	movq	-0x150(%rbp), %r14
000000010001c15a	movq	-0x148(%rbp), %rbx
000000010001c161	testq	%rsi, %rsi
000000010001c164	je	0x10001c17d
000000010001c166	testq	%rcx, %rcx
000000010001c169	je	0x10001c17d
000000010001c16b	leaq	-0x1(%rsi), %rax
000000010001c16f	leaq	(%rax,%rax,2), %rax
000000010001c173	cmpq	%r13, (%rcx,%rax,8)
000000010001c177	je	0x10001c204
000000010001c17d	cmpq	-0xe0(%rbp), %rsi
000000010001c184	jne	0x10001c1a2
000000010001c186	leaq	-0xe8(%rbp), %rdi
000000010001c18d	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
000000010001c192	movq	-0xe8(%rbp), %rcx
000000010001c199	movq	-0xd8(%rbp), %rsi
000000010001c1a0	jmp	0x10001c1a9
000000010001c1a2	movq	-0x108(%rbp), %rcx
000000010001c1a9	leaq	(%rsi,%rsi,2), %rax
000000010001c1ad	movq	%r13, (%rcx,%rax,8)
000000010001c1b1	movq	%r15, 0x8(%rcx,%rax,8)
000000010001c1b6	movl	%r14d, 0x10(%rcx,%rax,8)
000000010001c1bb	movl	%ebx, 0x14(%rcx,%rax,8)
000000010001c1bf	incq	%rsi
000000010001c1c2	movq	%rsi, -0xd8(%rbp)
000000010001c1c9	movq	%rcx, %rax
000000010001c1cc	movq	%rcx, -0x108(%rbp)
000000010001c1d3	movq	%rcx, -0x88(%rbp)
000000010001c1da	movq	%rsi, -0x90(%rbp)
000000010001c1e1	jmp	0x10001b5a4
000000010001c1e6	cmpq	$0x0, -0x90(%rbp)
000000010001c1ee	je	0x10001b5a4
000000010001c1f4	cmpq	$0x0, -0x88(%rbp)
000000010001c1fc	je	0x10001b5a4
000000010001c202	jmp	0x10001c214
000000010001c204	movq	%r15, 0x8(%rcx,%rax,8)
000000010001c209	movl	%r14d, 0x10(%rcx,%rax,8)
000000010001c20e	movl	%ebx, 0x14(%rcx,%rax,8)
000000010001c212	jmp	0x10001c1d3
000000010001c214	movq	-0x88(%rbp), %rax
000000010001c21b	movq	(%rax), %rax
000000010001c21e	movq	%rax, -0x30(%rbp)
000000010001c222	movq	-0x168(%rbp), %r13
000000010001c229	movq	-0xe0(%rbp), %rcx
000000010001c230	movq	$0x8, -0xe8(%rbp)
000000010001c23b	leaq	-0xe0(%rbp), %rax
000000010001c242	movq	$0x0, 0x8(%rax)
000000010001c24a	movq	$0x0, (%rax)
000000010001c251	cmpq	-0x90(%rbp), %rcx
000000010001c258	jbe	0x10001c29d
000000010001c25a	movq	%rcx, %r15
000000010001c25d	leaq	(,%rcx,8), %rax
000000010001c265	leaq	(%rax,%rax,2), %rsi
000000010001c269	movq	-0x90(%rbp), %rax
000000010001c270	leaq	(,%rax,8), %rax
000000010001c278	leaq	(%rax,%rax,2), %rbx
000000010001c27c	movl	$0x8, %edx
000000010001c281	movq	-0x88(%rbp), %rdi
000000010001c288	movq	%rbx, %rcx
000000010001c28b	callq	___rust_realloc
000000010001c290	movq	%rax, %r14
000000010001c293	testq	%rax, %rax
000000010001c296	jne	0x10001c2a4
000000010001c298	jmp	0x10001d3dd
000000010001c29d	movq	-0x88(%rbp), %r14
000000010001c2a4	movq	-0xa0(%rbp), %rax
000000010001c2ab	cmpq	-0xc8(%rbp), %rax
000000010001c2b2	jne	0x10001c2e3
000000010001c2b4	leaq	-0xd0(%rbp), %rdi
000000010001c2bb	movq	-0xa0(%rbp), %rsi
000000010001c2c2	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
000000010001c2c7	movq	-0xd0(%rbp), %rax
000000010001c2ce	movq	%rax, -0x100(%rbp)
000000010001c2d5	movq	-0xc0(%rbp), %rax
000000010001c2dc	movq	%rax, -0xa0(%rbp)
000000010001c2e3	movq	-0xa0(%rbp), %rdx
000000010001c2ea	movq	%rdx, %rax
000000010001c2ed	shlq	$0x5, %rax
000000010001c2f1	movq	-0x100(%rbp), %rcx
000000010001c2f8	movq	%r14, (%rcx,%rax)
000000010001c2fc	movq	-0x90(%rbp), %rsi
000000010001c303	movq	%rsi, 0x8(%rcx,%rax)
000000010001c308	movq	-0x30(%rbp), %rsi
000000010001c30c	movq	%rsi, 0x10(%rcx,%rax)
000000010001c311	movq	%r13, 0x18(%rcx,%rax)
000000010001c316	incq	%rdx
000000010001c319	movq	%rdx, %rax
000000010001c31c	movq	%rdx, -0xa0(%rbp)
000000010001c323	movq	%rdx, -0xc0(%rbp)
000000010001c32a	jmp	0x10001b581
000000010001c32f	addq	%rdi, %rdx
000000010001c332	movq	%rdx, -0x128(%rbp)
000000010001c339	movq	$0x0, -0x120(%rbp)
000000010001c344	movq	%rdx, %rsi
000000010001c347	movb	$0x13, %al
000000010001c349	xorl	%r12d, %r12d
000000010001c34c	xorl	%ecx, %ecx
000000010001c34e	movq	%rsi, %rbx
000000010001c351	jmp	0x10001cee4
000000010001c356	movq	-0xd0(%rbp), %rax
000000010001c35d	movq	%rax, -0xb0(%rbp)
000000010001c364	movq	-0xc0(%rbp), %r12
000000010001c36b	cmpq	$0x15, %r12
000000010001c36f	jae	0x10001c394
000000010001c371	cmpq	$0x1, %r12
000000010001c375	jbe	0x10001cad2
000000010001c37b	movl	$0x1, %edx
000000010001c380	movq	-0xb0(%rbp), %rdi
000000010001c387	movq	%r12, %rsi
000000010001c38a	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h4cf9c9fb15d0f1bcE ## core::slice::sort::insertion_sort_shift_left::h4cf9c9fb15d0f1bc
000000010001c38f	jmp	0x10001cad2
000000010001c394	movq	%r12, %r14
000000010001c397	shrq	%r14
000000010001c39a	movq	%r14, %r15
000000010001c39d	shlq	$0x5, %r15
000000010001c3a1	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r13
000000010001c3a8	movzbl	(%r13), %eax
000000010001c3ad	movl	$0x8, %esi
000000010001c3b2	movq	%r15, %rdi
000000010001c3b5	callq	___rust_alloc
000000010001c3ba	testq	%rax, %rax
000000010001c3bd	je	0x10001d3ab
000000010001c3c3	movq	%rax, %rbx
000000010001c3c6	movq	%r15, -0x2c8(%rbp)
000000010001c3cd	movq	%r14, -0x2c0(%rbp)
000000010001c3d4	movzbl	(%r13), %eax
000000010001c3d9	movl	$0x100, %edi                    ## imm = 0x100
000000010001c3de	movl	$0x8, %esi
000000010001c3e3	callq	___rust_alloc
000000010001c3e8	testq	%rax, %rax
000000010001c3eb	movq	%rbx, -0x30(%rbp)
000000010001c3ef	je	0x10001d3c3
000000010001c3f5	movq	%rax, %r14
000000010001c3f8	movq	-0xb0(%rbp), %rax
000000010001c3ff	leaq	0x50(%rax), %rcx
000000010001c403	movq	%rcx, -0x280(%rbp)
000000010001c40a	addq	$-0x20, %rax
000000010001c40e	movq	%rax, -0x298(%rbp)
000000010001c415	movl	$0x10, %eax
000000010001c41a	movq	%rax, -0xf0(%rbp)
000000010001c421	xorl	%ecx, %ecx
000000010001c423	leaq	0x2bfc6(%rip), %rax
000000010001c42a	movq	%rax, -0x278(%rbp)
000000010001c431	xorl	%r13d, %r13d
000000010001c434	movq	%r12, -0x268(%rbp)
000000010001c43b	jmp	0x10001c454
000000010001c43d	nopl	(%rax)
000000010001c440	movq	-0x30(%rbp), %r15
000000010001c444	movq	-0x98(%rbp), %rcx
000000010001c44b	cmpq	%r12, %rcx
000000010001c44e	jae	0x10001caa6
000000010001c454	movq	%rcx, %r15
000000010001c457	movq	%r12, %rdx
000000010001c45a	subq	%rcx, %rdx
000000010001c45d	movq	%rcx, %rsi
000000010001c460	shlq	$0x5, %rsi
000000010001c464	movq	-0xb0(%rbp), %rax
000000010001c46b	leaq	(%rax,%rsi), %rdi
000000010001c46f	cmpq	$0x2, %rdx
000000010001c473	jae	0x10001c4f0
000000010001c475	movq	%r12, %rsi
000000010001c478	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rcx
000000010001c47f	movq	%rsi, %rbx
000000010001c482	subq	%r15, %rbx
000000010001c485	jb	0x10001d321
000000010001c48b	cmpq	%r12, %rsi
000000010001c48e	ja	0x10001d321
000000010001c494	jae	0x10001c520
000000010001c49a	cmpq	$0xa, %rdx
000000010001c49e	jae	0x10001c520
000000010001c4a4	leaq	0xa(%r15), %rbx
000000010001c4a8	cmpq	%r12, %rbx
000000010001c4ab	cmovaeq	%r12, %rbx
000000010001c4af	movq	%rbx, -0x98(%rbp)
000000010001c4b6	subq	%r15, %rbx
000000010001c4b9	jb	0x10001d342
000000010001c4bf	cmpq	$0x2, %rdx
000000010001c4c3	movl	$0x1, %eax
000000010001c4c8	cmovbq	%rax, %rdx
000000010001c4cc	movq	%rbx, %rsi
000000010001c4cf	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h4cf9c9fb15d0f1bcE ## core::slice::sort::insertion_sort_shift_left::h4cf9c9fb15d0f1bc
000000010001c4d4	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rcx
000000010001c4db	cmpq	-0xf0(%rbp), %r13
000000010001c4e2	je	0x10001c530
000000010001c4e4	jmp	0x10001c59e
000000010001c4e9	nopl	(%rax)
000000010001c4f0	movq	0x10(%rdi), %rax
000000010001c4f4	movq	0x30(%rdi), %rcx
000000010001c4f8	cmpq	%rax, %rcx
000000010001c4fb	jae	0x10001c940
000000010001c501	cmpq	$0x2, %rdx
000000010001c505	jne	0x10001c954
000000010001c50b	leaq	0x2(%r15), %rsi
000000010001c50f	movl	$0x2, %edx
000000010001c514	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rcx
000000010001c51b	jmp	0x10001c9d1
000000010001c520	movq	%rsi, -0x98(%rbp)
000000010001c527	cmpq	-0xf0(%rbp), %r13
000000010001c52e	jne	0x10001c59e
000000010001c530	movq	%r14, -0x80(%rbp)
000000010001c534	leaq	(%r13,%r13), %rax
000000010001c539	movq	%rax, -0xf0(%rbp)
000000010001c540	movq	%r13, %rdi
000000010001c543	shlq	$0x5, %rdi
000000010001c547	movzbl	(%rcx), %eax
000000010001c54a	movl	$0x8, %esi
000000010001c54f	callq	___rust_alloc
000000010001c554	testq	%rax, %rax
000000010001c557	je	0x10001d356
000000010001c55d	movq	%rax, %r14
000000010001c560	movq	%r13, %r12
000000010001c563	shlq	$0x4, %r12
000000010001c567	movq	%rax, %rdi
000000010001c56a	movq	%r13, -0xb8(%rbp)
000000010001c571	movq	-0x80(%rbp), %r13
000000010001c575	movq	%r13, %rsi
000000010001c578	movq	%r12, %rdx
000000010001c57b	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001c580	movl	$0x8, %edx
000000010001c585	movq	%r13, %rdi
000000010001c588	movq	-0xb8(%rbp), %r13
000000010001c58f	movq	%r12, %rsi
000000010001c592	callq	___rust_dealloc
000000010001c597	movq	-0x268(%rbp), %r12
000000010001c59e	movq	%r13, %rax
000000010001c5a1	shlq	$0x4, %rax
000000010001c5a5	movq	%rbx, (%r14,%rax)
000000010001c5a9	movq	%r15, 0x8(%r14,%rax)
000000010001c5ae	incq	%r13
000000010001c5b1	cmpq	$0x2, %r13
000000010001c5b5	jb	0x10001c440
000000010001c5bb	movq	-0x30(%rbp), %r15
000000010001c5bf	movq	%r14, -0x80(%rbp)
000000010001c5c3	jmp	0x10001c650
000000010001c5c8	nopl	(%rax,%rax)
000000010001c5d0	movq	%rdi, %r13
000000010001c5d3	movq	%r12, %r14
000000010001c5d6	movq	%r15, %rsi
000000010001c5d9	subq	%rsi, %rbx
000000010001c5dc	movq	%r14, %rdi
000000010001c5df	movq	%rbx, %rdx
000000010001c5e2	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001c5e7	movq	-0xa0(%rbp), %rax
000000010001c5ee	addq	%r13, %rax
000000010001c5f1	movq	-0xa8(%rbp), %rcx
000000010001c5f8	movq	%rax, (%rcx)
000000010001c5fb	movq	-0x88(%rbp), %rax
000000010001c602	movq	-0x270(%rbp), %rcx
000000010001c609	movq	%rax, (%rcx)
000000010001c60c	movq	-0x100(%rbp), %rdi
000000010001c613	leaq	0x10(%rdi), %rsi
000000010001c617	movq	-0x90(%rbp), %rax
000000010001c61e	notq	%rax
000000010001c621	movq	-0x108(%rbp), %rdx
000000010001c628	addq	%rax, %rdx
000000010001c62b	shlq	$0x4, %rdx
000000010001c62f	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010001c634	movq	-0xb8(%rbp), %r13
000000010001c63b	cmpq	$0x1, %r13
000000010001c63f	movq	-0x80(%rbp), %r14
000000010001c643	movq	-0x268(%rbp), %r12
000000010001c64a	jbe	0x10001c930
000000010001c650	movq	%r13, %r9
000000010001c653	leaq	-0x1(%r13), %r8
000000010001c657	movq	%r8, %rcx
000000010001c65a	shlq	$0x4, %rcx
000000010001c65e	movq	(%r14,%rcx), %rax
000000010001c662	movq	0x8(%r14,%rcx), %rcx
000000010001c667	addq	%rax, %rcx
000000010001c66a	cmpq	%r12, %rcx
000000010001c66d	je	0x10001c6c0
000000010001c66f	movq	%r9, %rdx
000000010001c672	shlq	$0x4, %rdx
000000010001c676	movq	-0x20(%rdx,%r14), %rsi
000000010001c67b	cmpq	%rax, %rsi
000000010001c67e	jbe	0x10001c6c0
000000010001c680	cmpq	$0x3, %r9
000000010001c684	jb	0x10001ca88
000000010001c68a	leaq	-0x3(%r9), %r10
000000010001c68e	movq	%r10, %rcx
000000010001c691	shlq	$0x4, %rcx
000000010001c695	movq	(%r14,%rcx), %rcx
000000010001c699	leaq	(%rsi,%rax), %rdi
000000010001c69d	cmpq	%rdi, %rcx
000000010001c6a0	jbe	0x10001c6d5
000000010001c6a2	cmpq	$0x4, %r9
000000010001c6a6	jb	0x10001ca93
000000010001c6ac	addq	%rcx, %rsi
000000010001c6af	cmpq	%rsi, -0x40(%rdx,%r14)
000000010001c6b4	jbe	0x10001c6d5
000000010001c6b6	jmp	0x10001ca9e
000000010001c6bb	nopl	(%rax,%rax)
000000010001c6c0	cmpq	$0x3, %r9
000000010001c6c4	jb	0x10001c6da
000000010001c6c6	leaq	-0x3(%r9), %r10
000000010001c6ca	movq	%r10, %rcx
000000010001c6cd	shlq	$0x4, %rcx
000000010001c6d1	movq	(%r14,%rcx), %rcx
000000010001c6d5	cmpq	%rax, %rcx
000000010001c6d8	jb	0x10001c6de
000000010001c6da	leaq	-0x2(%r9), %r10
000000010001c6de	cmpq	%r10, %r9
000000010001c6e1	jbe	0x10001d29b
000000010001c6e7	movq	%r8, -0xb8(%rbp)
000000010001c6ee	leaq	0x1(%r10), %rax
000000010001c6f2	cmpq	%rax, %r9
000000010001c6f5	jbe	0x10001d2af
000000010001c6fb	movq	%r10, %rcx
000000010001c6fe	shlq	$0x4, %rcx
000000010001c702	movq	0x8(%r14,%rcx), %rdi
000000010001c707	shlq	$0x4, %rax
000000010001c70b	movq	(%r14,%rax), %rdx
000000010001c70f	movq	0x8(%r14,%rax), %r13
000000010001c714	addq	%rdx, %r13
000000010001c717	movq	%r13, %r15
000000010001c71a	subq	%rdi, %r15
000000010001c71d	jb	0x10001d2f2
000000010001c723	cmpq	%r12, %r13
000000010001c726	ja	0x10001d306
000000010001c72c	movq	%rdx, -0xa0(%rbp)
000000010001c733	movq	%r10, -0x90(%rbp)
000000010001c73a	movq	%r9, -0x108(%rbp)
000000010001c741	leaq	(%r14,%rcx), %rdx
000000010001c745	movq	%rdx, -0x100(%rbp)
000000010001c74c	movq	(%r14,%rcx), %rdx
000000010001c750	leaq	(%r14,%rax), %rcx
000000010001c754	movq	%rcx, -0xa8(%rbp)
000000010001c75b	leaq	0x8(%r14,%rax), %rax
000000010001c760	movq	%rax, -0x270(%rbp)
000000010001c767	movq	%rdi, -0x88(%rbp)
000000010001c76e	movq	%rdi, %r14
000000010001c771	shlq	$0x5, %r14
000000010001c775	addq	-0xb0(%rbp), %r14
000000010001c77c	movq	%rdx, %rbx
000000010001c77f	shlq	$0x5, %rbx
000000010001c783	leaq	(%r14,%rbx), %r12
000000010001c787	shlq	$0x5, %r13
000000010001c78b	movq	%r15, %rax
000000010001c78e	subq	%rdx, %rax
000000010001c791	movq	%rdx, -0x2a0(%rbp)
000000010001c798	cmpq	%rdx, %rax
000000010001c79b	jae	0x10001c870
000000010001c7a1	movq	%rax, -0x2d0(%rbp)
000000010001c7a8	movq	%rax, %rbx
000000010001c7ab	shlq	$0x5, %rbx
000000010001c7af	movq	-0x30(%rbp), %r15
000000010001c7b3	movq	%r15, %rdi
000000010001c7b6	movq	%r12, %rsi
000000010001c7b9	movq	%rbx, %rdx
000000010001c7bc	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001c7c1	addq	%r15, %rbx
000000010001c7c4	movq	-0x2a0(%rbp), %rdi
000000010001c7cb	testq	%rdi, %rdi
000000010001c7ce	jle	0x10001c5d0
000000010001c7d4	cmpq	$0x0, -0x2d0(%rbp)
000000010001c7dc	jle	0x10001c5d0
000000010001c7e2	addq	-0x298(%rbp), %r13
000000010001c7e9	nopl	(%rax)
000000010001c7f0	movq	%rbx, %rax
000000010001c7f3	movq	%r12, %rcx
000000010001c7f6	movq	-0x10(%rbx), %rdx
000000010001c7fa	movq	-0x10(%r12), %rsi
000000010001c7ff	cmpq	%rsi, %rdx
000000010001c802	movl	$0x0, %r12d
000000010001c808	sbbq	%r12, %r12
000000010001c80b	cmpq	%rsi, %rdx
000000010001c80e	movl	$0x0, %ebx
000000010001c813	adcq	$-0x1, %rbx
000000010001c817	shlq	$0x5, %r12
000000010001c81b	addq	%rcx, %r12
000000010001c81e	shlq	$0x5, %rbx
000000010001c822	addq	%rax, %rbx
000000010001c825	cmpq	%rsi, %rdx
000000010001c828	movq	%rbx, %rax
000000010001c82b	cmovbq	%r12, %rax
000000010001c82f	movq	0x18(%rax), %rcx
000000010001c833	movq	%rcx, 0x18(%r13)
000000010001c837	movq	0x10(%rax), %rcx
000000010001c83b	movq	%rcx, 0x10(%r13)
000000010001c83f	movq	(%rax), %rcx
000000010001c842	movq	0x8(%rax), %rax
000000010001c846	movq	%rax, 0x8(%r13)
000000010001c84a	movq	%rcx, (%r13)
000000010001c84e	cmpq	%r14, %r12
000000010001c851	jbe	0x10001c5d0
000000010001c857	addq	$-0x20, %r13
000000010001c85b	cmpq	%r15, %rbx
000000010001c85e	ja	0x10001c7f0
000000010001c860	jmp	0x10001c5d0
000000010001c865	nopw	%cs:(%rax,%rax)
000000010001c86f	nop
000000010001c870	movq	-0x30(%rbp), %rdi
000000010001c874	movq	%r14, %rsi
000000010001c877	movq	%rbx, %rdx
000000010001c87a	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001c87f	addq	-0x30(%rbp), %rbx
000000010001c883	movq	-0x2a0(%rbp), %r9
000000010001c88a	testq	%r9, %r9
000000010001c88d	jle	0x10001c920
000000010001c893	cmpq	%r9, %r15
000000010001c896	jle	0x10001c920
000000010001c89c	addq	-0xb0(%rbp), %r13
000000010001c8a3	movq	-0x30(%rbp), %r15
000000010001c8a7	movq	%r15, %rsi
000000010001c8aa	nopw	(%rax,%rax)
000000010001c8b0	movq	%rsi, %rdx
000000010001c8b3	movq	0x10(%r12), %rcx
000000010001c8b8	xorl	%esi, %esi
000000010001c8ba	xorl	%eax, %eax
000000010001c8bc	cmpq	0x10(%rdx), %rcx
000000010001c8c0	setae	%sil
000000010001c8c4	setb	%cl
000000010001c8c7	movq	%rdx, %rdi
000000010001c8ca	cmovbq	%r12, %rdi
000000010001c8ce	movq	0x18(%rdi), %r8
000000010001c8d2	movq	%r8, 0x18(%r14)
000000010001c8d6	movq	0x10(%rdi), %r8
000000010001c8da	movq	%r8, 0x10(%r14)
000000010001c8de	movq	(%rdi), %r8
000000010001c8e1	movq	0x8(%rdi), %rdi
000000010001c8e5	movq	%rdi, 0x8(%r14)
000000010001c8e9	movq	%r8, (%r14)
000000010001c8ec	addq	$0x20, %r14
000000010001c8f0	shlq	$0x5, %rsi
000000010001c8f4	addq	%rdx, %rsi
000000010001c8f7	cmpq	%rbx, %rsi
000000010001c8fa	jae	0x10001c90a
000000010001c8fc	movb	%cl, %al
000000010001c8fe	shlq	$0x5, %rax
000000010001c902	addq	%rax, %r12
000000010001c905	cmpq	%r13, %r12
000000010001c908	jb	0x10001c8b0
000000010001c90a	movq	%r9, %r13
000000010001c90d	jmp	0x10001c5d9
000000010001c912	nopw	%cs:(%rax,%rax)
000000010001c91c	nopl	(%rax)
000000010001c920	movq	%r9, %r13
000000010001c923	movq	-0x30(%rbp), %r15
000000010001c927	jmp	0x10001c5d6
000000010001c92c	nopl	(%rax)
000000010001c930	movl	$0x1, %r13d
000000010001c936	jmp	0x10001c444
000000010001c93b	nopl	(%rax,%rax)
000000010001c940	cmpq	$0x2, %rdx
000000010001c944	jne	0x10001c989
000000010001c946	leaq	0x2(%r15), %rsi
000000010001c94a	movl	$0x2, %edx
000000010001c94f	jmp	0x10001c478
000000010001c954	addq	-0x280(%rbp), %rsi
000000010001c95b	movl	$0x2, %r8d
000000010001c961	movq	%rcx, %r9
000000010001c964	nopw	%cs:(%rax,%rax)
000000010001c96e	nop
000000010001c970	movq	%r9, %r10
000000010001c973	movq	(%rsi), %r9
000000010001c976	cmpq	%r10, %r9
000000010001c979	jae	0x10001c9ba
000000010001c97b	incq	%r8
000000010001c97e	addq	$0x20, %rsi
000000010001c982	cmpq	%r8, %rdx
000000010001c985	jne	0x10001c970
000000010001c987	jmp	0x10001c9b7
000000010001c989	addq	-0x280(%rbp), %rsi
000000010001c990	movl	$0x2, %r8d
000000010001c996	movq	%rcx, %r9
000000010001c999	nopl	(%rax)
000000010001c9a0	movq	%r9, %r10
000000010001c9a3	movq	(%rsi), %r9
000000010001c9a6	cmpq	%r10, %r9
000000010001c9a9	jb	0x10001c9ba
000000010001c9ab	incq	%r8
000000010001c9ae	addq	$0x20, %rsi
000000010001c9b2	cmpq	%r8, %rdx
000000010001c9b5	jne	0x10001c9a0
000000010001c9b7	movq	%rdx, %r8
000000010001c9ba	leaq	(%r8,%r15), %rsi
000000010001c9be	movq	%r8, %rdx
000000010001c9c1	cmpq	%rax, %rcx
000000010001c9c4	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rcx
000000010001c9cb	jae	0x10001c47f
000000010001c9d1	cmpq	%r15, %rsi
000000010001c9d4	jb	0x10001d388
000000010001c9da	cmpq	%r12, %rsi
000000010001c9dd	ja	0x10001d370
000000010001c9e3	cmpq	$0x2, %rdx
000000010001c9e7	jb	0x10001c47f
000000010001c9ed	movq	%rsi, %r10
000000010001c9f0	movq	%rdx, %rax
000000010001c9f3	shrq	%rax
000000010001c9f6	leaq	(%r15,%rdx), %rcx
000000010001c9fa	shlq	$0x5, %rcx
000000010001c9fe	addq	-0x298(%rbp), %rcx
000000010001ca05	movq	%rdi, %rsi
000000010001ca08	nopl	(%rax,%rax)
000000010001ca10	movq	0x18(%rsi), %r8
000000010001ca14	movq	%r8, -0x60(%rbp)
000000010001ca18	movq	0x10(%rsi), %r8
000000010001ca1c	movq	%r8, -0x68(%rbp)
000000010001ca20	movq	(%rsi), %r8
000000010001ca23	movq	0x8(%rsi), %r9
000000010001ca27	movq	%r9, -0x70(%rbp)
000000010001ca2b	movq	%r8, -0x78(%rbp)
000000010001ca2f	movq	0x18(%rcx), %r8
000000010001ca33	movq	%r8, 0x18(%rsi)
000000010001ca37	movq	0x10(%rcx), %r8
000000010001ca3b	movq	%r8, 0x10(%rsi)
000000010001ca3f	movq	(%rcx), %r8
000000010001ca42	movq	0x8(%rcx), %r9
000000010001ca46	movq	%r9, 0x8(%rsi)
000000010001ca4a	movq	%r8, (%rsi)
000000010001ca4d	movq	-0x60(%rbp), %r8
000000010001ca51	movq	%r8, 0x18(%rcx)
000000010001ca55	movq	-0x68(%rbp), %r8
000000010001ca59	movq	%r8, 0x10(%rcx)
000000010001ca5d	movq	-0x78(%rbp), %r8
000000010001ca61	movq	-0x70(%rbp), %r9
000000010001ca65	movq	%r9, 0x8(%rcx)
000000010001ca69	movq	%r8, (%rcx)
000000010001ca6c	addq	$0x20, %rsi
000000010001ca70	addq	$-0x20, %rcx
000000010001ca74	decq	%rax
000000010001ca77	jne	0x10001ca10
000000010001ca79	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rcx
000000010001ca80	movq	%r10, %rsi
000000010001ca83	jmp	0x10001c47f
000000010001ca88	movl	$0x2, %r13d
000000010001ca8e	jmp	0x10001c444
000000010001ca93	movl	$0x3, %r13d
000000010001ca99	jmp	0x10001c444
000000010001ca9e	movq	%r9, %r13
000000010001caa1	jmp	0x10001c444
000000010001caa6	movq	-0xf0(%rbp), %rsi
000000010001caad	shlq	$0x4, %rsi
000000010001cab1	movl	$0x8, %edx
000000010001cab6	movq	%r14, %rdi
000000010001cab9	callq	___rust_dealloc
000000010001cabe	movl	$0x8, %edx
000000010001cac3	movq	%r15, %rdi
000000010001cac6	movq	-0x2c8(%rbp), %rsi
000000010001cacd	callq	___rust_dealloc
000000010001cad2	movq	$0x8, -0x48(%rbp)
000000010001cada	movq	$0x0, -0x40(%rbp)
000000010001cae2	movq	$0x0, -0x38(%rbp)
000000010001caea	cmpw	$0x5, -0x176(%rbp)
000000010001caf2	jae	0x10001cb0a
000000010001caf4	cmpl	$0x2e, -0x260(%rbp)
000000010001cafb	je	0x10001cbb9
000000010001cb01	leaq	-0x260(%rbp), %r8
000000010001cb08	jmp	0x10001cb1f
000000010001cb0a	cmpq	$0x0, -0x1b8(%rbp)
000000010001cb12	je	0x10001cbb9
000000010001cb18	movq	-0x1c8(%rbp), %r8
000000010001cb1f	leaq	-0x78(%rbp), %rdi
000000010001cb23	leaq	-0x260(%rbp), %rcx
000000010001cb2a	movq	-0x288(%rbp), %rsi
000000010001cb31	movq	%r8, %rdx
000000010001cb34	movq	-0x290(%rbp), %r8
000000010001cb3b	callq	__ZN9addr2line11render_file17h6caa0ddfd6657ac9E ## addr2line::render_file::h6caa0ddfd6657ac9
000000010001cb40	movq	-0x78(%rbp), %rax
000000010001cb44	testq	%rax, %rax
000000010001cb47	je	0x10001ce55
000000010001cb4d	movq	-0x70(%rbp), %rcx
000000010001cb51	movq	-0x68(%rbp), %rdx
000000010001cb55	movq	%rdx, -0x110(%rbp)
000000010001cb5c	movq	%rcx, -0x118(%rbp)
000000010001cb63	movq	%rax, -0x2b8(%rbp)
000000010001cb6a	movq	%rcx, -0x2b0(%rbp)
000000010001cb71	movq	%rdx, -0x2a8(%rbp)
000000010001cb78	leaq	-0x48(%rbp), %rdi
000000010001cb7c	xorl	%esi, %esi
000000010001cb7e	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
000000010001cb83	movq	-0x48(%rbp), %r12
000000010001cb87	movq	-0x38(%rbp), %rbx
000000010001cb8b	leaq	(%rbx,%rbx,2), %rax
000000010001cb8f	movq	-0x2a8(%rbp), %rcx
000000010001cb96	movq	%rcx, 0x10(%r12,%rax,8)
000000010001cb9b	movq	-0x2b8(%rbp), %rcx
000000010001cba2	movq	-0x2b0(%rbp), %rdx
000000010001cba9	jmp	0x10001cbf9
000000010001cbab	movq	%r8, -0x128(%rbp)
000000010001cbb2	movb	$0x6, %al
000000010001cbb4	jmp	0x10001cedf
000000010001cbb9	movq	$0x1, -0x78(%rbp)
000000010001cbc1	movq	$0x0, -0x70(%rbp)
000000010001cbc9	movq	$0x0, -0x68(%rbp)
000000010001cbd1	leaq	-0x48(%rbp), %rdi
000000010001cbd5	xorl	%esi, %esi
000000010001cbd7	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
000000010001cbdc	movq	-0x48(%rbp), %r12
000000010001cbe0	movq	-0x38(%rbp), %rbx
000000010001cbe4	leaq	(%rbx,%rbx,2), %rax
000000010001cbe8	movq	-0x68(%rbp), %rcx
000000010001cbec	movq	%rcx, 0x10(%r12,%rax,8)
000000010001cbf1	movq	-0x78(%rbp), %rcx
000000010001cbf5	movq	-0x70(%rbp), %rdx
000000010001cbf9	movq	%rdx, 0x8(%r12,%rax,8)
000000010001cbfe	movq	%rcx, (%r12,%rax,8)
000000010001cc02	incq	%rbx
000000010001cc05	movq	%rbx, -0x38(%rbp)
000000010001cc09	leaq	-0x70(%rbp), %r13
000000010001cc0d	movl	$0x1, %r15d
000000010001cc13	xorl	%r14d, %r14d
000000010001cc16	jmp	0x10001cc5d
000000010001cc18	nopl	(%rax,%rax)
000000010001cc20	movq	-0x48(%rbp), %r12
000000010001cc24	movq	-0x38(%rbp), %rbx
000000010001cc28	leaq	(%rbx,%rbx,2), %rax
000000010001cc2c	movq	-0x2d8(%rbp), %rcx
000000010001cc33	movq	%rcx, 0x10(%r12,%rax,8)
000000010001cc38	movq	-0x2e8(%rbp), %rcx
000000010001cc3f	movq	-0x2e0(%rbp), %rdx
000000010001cc46	movq	%rdx, 0x8(%r12,%rax,8)
000000010001cc4b	movq	%rcx, (%r12,%rax,8)
000000010001cc4f	incq	%rbx
000000010001cc52	movq	%rbx, -0x38(%rbp)
000000010001cc56	incq	%r15
000000010001cc59	addq	$0x40, %r14
000000010001cc5d	cmpw	$0x5, -0x176(%rbp)
000000010001cc65	jae	0x10001cc90
000000010001cc67	testq	%r15, %r15
000000010001cc6a	je	0x10001ccad
000000010001cc6c	leaq	-0x1(%r15), %rax
000000010001cc70	cmpq	-0x1b8(%rbp), %rax
000000010001cc77	jae	0x10001cd4f
000000010001cc7d	movq	-0x1c8(%rbp), %rdx
000000010001cc84	addq	%r14, %rdx
000000010001cc87	jmp	0x10001ccd0
000000010001cc89	nopl	(%rax)
000000010001cc90	cmpq	%r15, -0x1b8(%rbp)
000000010001cc97	jbe	0x10001cd4f
000000010001cc9d	movq	%r15, %rdx
000000010001cca0	shlq	$0x6, %rdx
000000010001cca4	addq	-0x1c8(%rbp), %rdx
000000010001ccab	jmp	0x10001ccd0
000000010001ccad	cmpl	$0x2e, -0x260(%rbp)
000000010001ccb4	leaq	-0x260(%rbp), %rdx
000000010001ccbb	je	0x10001cd4f
000000010001ccc1	nopw	%cs:(%rax,%rax)
000000010001cccb	nopl	(%rax,%rax)
000000010001ccd0	leaq	-0x78(%rbp), %rdi
000000010001ccd4	movq	-0x288(%rbp), %rsi
000000010001ccdb	leaq	-0x260(%rbp), %rcx
000000010001cce2	movq	-0x290(%rbp), %r8
000000010001cce9	callq	__ZN9addr2line11render_file17h6caa0ddfd6657ac9E ## addr2line::render_file::h6caa0ddfd6657ac9
000000010001ccee	movq	-0x78(%rbp), %rax
000000010001ccf2	movq	(%r13), %rcx
000000010001ccf6	movq	0x8(%r13), %rdx
000000010001ccfa	movq	%rcx, -0x118(%rbp)
000000010001cd01	movq	%rdx, -0x110(%rbp)
000000010001cd08	testq	%rax, %rax
000000010001cd0b	je	0x10001cdbc
000000010001cd11	movq	%rax, -0x2e8(%rbp)
000000010001cd18	movq	-0x118(%rbp), %rax
000000010001cd1f	movq	-0x110(%rbp), %rcx
000000010001cd26	leaq	-0x2e0(%rbp), %rdx
000000010001cd2d	movq	%rcx, 0x8(%rdx)
000000010001cd31	movq	%rax, (%rdx)
000000010001cd34	cmpq	-0x40(%rbp), %rbx
000000010001cd38	jne	0x10001cc28
000000010001cd3e	leaq	-0x48(%rbp), %rdi
000000010001cd42	movq	%rbx, %rsi
000000010001cd45	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbe854c7653c63bbaE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hbe854c7653c63bba
000000010001cd4a	jmp	0x10001cc20
000000010001cd4f	movq	-0x38(%rbp), %r14
000000010001cd53	movq	%r14, -0x68(%rbp)
000000010001cd57	movq	-0x48(%rbp), %rcx
000000010001cd5b	movq	-0x40(%rbp), %rax
000000010001cd5f	movq	%rax, -0x70(%rbp)
000000010001cd63	movq	%rcx, -0x78(%rbp)
000000010001cd67	cmpq	%r14, %rax
000000010001cd6a	jbe	0x10001ceab
000000010001cd70	movq	-0x78(%rbp), %rdi
000000010001cd74	shlq	$0x3, %rax
000000010001cd78	leaq	(%rax,%rax,2), %rsi
000000010001cd7c	testq	%r14, %r14
000000010001cd7f	je	0x10001d048
000000010001cd85	leaq	(,%r14,8), %rax
000000010001cd8d	leaq	(%rax,%rax,2), %rbx
000000010001cd91	movl	$0x8, %edx
000000010001cd96	movq	%rbx, %rcx
000000010001cd99	callq	___rust_realloc
000000010001cd9e	movq	%rax, %r15
000000010001cda1	testq	%rax, %rax
000000010001cda4	jne	0x10001d058
000000010001cdaa	movl	$0x8, %edi
000000010001cdaf	movq	%rbx, %rsi
000000010001cdb2	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001cdb7	jmp	0x10001d3ea
000000010001cdbc	movq	-0x118(%rbp), %rax
000000010001cdc3	movq	-0x110(%rbp), %rcx
000000010001cdca	movq	-0xf8(%rbp), %rdx
000000010001cdd1	movq	%rcx, 0x10(%rdx)
000000010001cdd5	movq	%rax, 0x8(%rdx)
000000010001cdd9	movq	$0x0, (%rdx)
000000010001cde0	movq	-0x48(%rbp), %r14
000000010001cde4	testq	%rbx, %rbx
000000010001cde7	je	0x10001ce87
000000010001cded	leaq	0x8(%r14), %r15
000000010001cdf1	jmp	0x10001ce09
000000010001cdf3	nopw	%cs:(%rax,%rax)
000000010001cdfd	nopl	(%rax)
000000010001ce00	addq	$0x18, %r15
000000010001ce04	decq	%rbx
000000010001ce07	je	0x10001ce87
000000010001ce09	movq	(%r15), %rsi
000000010001ce0c	testq	%rsi, %rsi
000000010001ce0f	je	0x10001ce00
000000010001ce11	movq	-0x8(%r15), %rdi
000000010001ce15	movl	$0x1, %edx
000000010001ce1a	callq	___rust_dealloc
000000010001ce1f	jmp	0x10001ce00
000000010001ce21	movb	$0x13, %al
000000010001ce23	jmp	0x10001ce4e
000000010001ce25	movb	$0x6, %al
000000010001ce27	jmp	0x10001cee2
000000010001ce2c	movq	%r8, -0x128(%rbp)
000000010001ce33	negq	%rax
000000010001ce36	movq	%rax, -0x120(%rbp)
000000010001ce3d	movb	$0x6, %al
000000010001ce3f	jmp	0x10001cedf
000000010001ce44	leaq	0x2(%rdx,%r8), %rbx
000000010001ce49	movb	$0x13, %al
000000010001ce4b	xorl	%r12d, %r12d
000000010001ce4e	xorl	%ecx, %ecx
000000010001ce50	jmp	0x10001cee4
000000010001ce55	movq	-0x70(%rbp), %rax
000000010001ce59	movq	-0x68(%rbp), %rcx
000000010001ce5d	movq	%rcx, -0x110(%rbp)
000000010001ce64	movq	%rax, -0x118(%rbp)
000000010001ce6b	movq	-0xf8(%rbp), %rdx
000000010001ce72	movq	%rcx, 0x10(%rdx)
000000010001ce76	movq	%rax, 0x8(%rdx)
000000010001ce7a	movq	$0x0, (%rdx)
000000010001ce81	movl	$0x8, %r14d
000000010001ce87	movq	-0x40(%rbp), %rax
000000010001ce8b	testq	%rax, %rax
000000010001ce8e	je	0x10001cf1c
000000010001ce94	shlq	$0x3, %rax
000000010001ce98	leaq	(%rax,%rax,2), %rsi
000000010001ce9c	movl	$0x8, %edx
000000010001cea1	movq	%r14, %rdi
000000010001cea4	callq	___rust_dealloc
000000010001cea9	jmp	0x10001cf1c
000000010001ceab	movq	-0x78(%rbp), %r15
000000010001ceaf	jmp	0x10001d058
000000010001ceb4	movb	$0x6, %al
000000010001ceb6	jmp	0x10001ce4e
000000010001ceb8	addq	-0x270(%rbp), %rdi
000000010001cebf	movq	%rdi, -0x128(%rbp)
000000010001cec6	movq	$0x0, -0x120(%rbp)
000000010001ced1	movb	$0x13, %al
000000010001ced3	xorl	%r12d, %r12d
000000010001ced6	xorl	%ecx, %ecx
000000010001ced8	movq	%rdi, %rbx
000000010001cedb	jmp	0x10001cee4
000000010001cedd	movb	$0x7, %al
000000010001cedf	xorl	%r12d, %r12d
000000010001cee2	xorl	%ecx, %ecx
000000010001cee4	orq	%rcx, %r12
000000010001cee7	movzbl	%al, %eax
000000010001ceea	orq	%r12, %rax
000000010001ceed	leaq	0x26dfc(%rip), %rcx
000000010001cef4	movq	%rcx, -0x128(%rbp)
000000010001cefb	movq	$0x0, -0x120(%rbp)
000000010001cf06	movq	-0xf8(%rbp), %rcx
000000010001cf0d	movq	%rax, 0x8(%rcx)
000000010001cf11	movq	%rbx, 0x10(%rcx)
000000010001cf15	movq	$0x0, (%rcx)
000000010001cf1c	movq	-0x208(%rbp), %rsi
000000010001cf23	testq	%rsi, %rsi
000000010001cf26	je	0x10001cf3d
000000010001cf28	movq	-0x210(%rbp), %rdi
000000010001cf2f	shlq	$0x2, %rsi
000000010001cf33	movl	$0x2, %edx
000000010001cf38	callq	___rust_dealloc
000000010001cf3d	movq	-0x1f0(%rbp), %rax
000000010001cf44	testq	%rax, %rax
000000010001cf47	je	0x10001cf62
000000010001cf49	movq	-0x1f8(%rbp), %rdi
000000010001cf50	shlq	$0x3, %rax
000000010001cf54	leaq	(%rax,%rax,2), %rsi
000000010001cf58	movl	$0x8, %edx
000000010001cf5d	callq	___rust_dealloc
000000010001cf62	movq	-0x1d8(%rbp), %rsi
000000010001cf69	testq	%rsi, %rsi
000000010001cf6c	je	0x10001cf83
000000010001cf6e	movq	-0x1e0(%rbp), %rdi
000000010001cf75	shlq	$0x2, %rsi
000000010001cf79	movl	$0x2, %edx
000000010001cf7e	callq	___rust_dealloc
000000010001cf83	movq	-0x1c0(%rbp), %rsi
000000010001cf8a	testq	%rsi, %rsi
000000010001cf8d	je	0x10001cfa4
000000010001cf8f	movq	-0x1c8(%rbp), %rdi
000000010001cf96	shlq	$0x6, %rsi
000000010001cf9a	movl	$0x8, %edx
000000010001cf9f	callq	___rust_dealloc
000000010001cfa4	movq	-0xe0(%rbp), %rax
000000010001cfab	testq	%rax, %rax
000000010001cfae	je	0x10001cfc9
000000010001cfb0	movq	-0xe8(%rbp), %rdi
000000010001cfb7	shlq	$0x3, %rax
000000010001cfbb	leaq	(%rax,%rax,2), %rsi
000000010001cfbf	movl	$0x8, %edx
000000010001cfc4	callq	___rust_dealloc
000000010001cfc9	movq	-0xd0(%rbp), %rbx
000000010001cfd0	movq	-0xc0(%rbp), %r14
000000010001cfd7	testq	%r14, %r14
000000010001cfda	je	0x10001d019
000000010001cfdc	leaq	0x8(%rbx), %r15
000000010001cfe0	jmp	0x10001cff9
000000010001cfe2	nopw	%cs:(%rax,%rax)
000000010001cfec	nopl	(%rax)
000000010001cff0	addq	$0x20, %r15
000000010001cff4	decq	%r14
000000010001cff7	je	0x10001d019
000000010001cff9	movq	(%r15), %rax
000000010001cffc	testq	%rax, %rax
000000010001cfff	je	0x10001cff0
000000010001d001	movq	-0x8(%r15), %rdi
000000010001d005	shlq	$0x3, %rax
000000010001d009	leaq	(%rax,%rax,2), %rsi
000000010001d00d	movl	$0x8, %edx
000000010001d012	callq	___rust_dealloc
000000010001d017	jmp	0x10001cff0
000000010001d019	movq	-0xc8(%rbp), %rsi
000000010001d020	testq	%rsi, %rsi
000000010001d023	je	0x10001d036
000000010001d025	shlq	$0x5, %rsi
000000010001d029	movl	$0x8, %edx
000000010001d02e	movq	%rbx, %rdi
000000010001d031	callq	___rust_dealloc
000000010001d036	addq	$0x2c8, %rsp                    ## imm = 0x2C8
000000010001d03d	popq	%rbx
000000010001d03e	popq	%r12
000000010001d040	popq	%r13
000000010001d042	popq	%r14
000000010001d044	popq	%r15
000000010001d046	popq	%rbp
000000010001d047	retq
000000010001d048	movl	$0x8, %r15d
000000010001d04e	movl	$0x8, %edx
000000010001d053	callq	___rust_dealloc
000000010001d058	movq	-0xc0(%rbp), %r13
000000010001d05f	movq	%r13, -0x68(%rbp)
000000010001d063	movq	-0xd0(%rbp), %rax
000000010001d06a	movq	-0xc8(%rbp), %rsi
000000010001d071	movq	%rsi, -0x70(%rbp)
000000010001d075	movq	%rax, -0x78(%rbp)
000000010001d079	cmpq	%r13, %rsi
000000010001d07c	jbe	0x10001d0b9
000000010001d07e	movq	-0x78(%rbp), %rdi
000000010001d082	shlq	$0x5, %rsi
000000010001d086	testq	%r13, %r13
000000010001d089	je	0x10001d0bf
000000010001d08b	movq	%r13, %rbx
000000010001d08e	shlq	$0x5, %rbx
000000010001d092	movl	$0x8, %edx
000000010001d097	movq	%rbx, %rcx
000000010001d09a	callq	___rust_realloc
000000010001d09f	movq	%rax, %r12
000000010001d0a2	testq	%rax, %rax
000000010001d0a5	jne	0x10001d0cf
000000010001d0a7	movl	$0x8, %edi
000000010001d0ac	movq	%rbx, %rsi
000000010001d0af	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001d0b4	jmp	0x10001d3ea
000000010001d0b9	movq	-0x78(%rbp), %r12
000000010001d0bd	jmp	0x10001d0cf
000000010001d0bf	movl	$0x8, %r12d
000000010001d0c5	movl	$0x8, %edx
000000010001d0ca	callq	___rust_dealloc
000000010001d0cf	movq	-0xf8(%rbp), %rax
000000010001d0d6	movq	%r15, (%rax)
000000010001d0d9	movq	%r14, 0x8(%rax)
000000010001d0dd	movq	%r12, 0x10(%rax)
000000010001d0e1	movq	%r13, 0x18(%rax)
000000010001d0e5	movq	-0x208(%rbp), %rsi
000000010001d0ec	testq	%rsi, %rsi
000000010001d0ef	je	0x10001d106
000000010001d0f1	movq	-0x210(%rbp), %rdi
000000010001d0f8	shlq	$0x2, %rsi
000000010001d0fc	movl	$0x2, %edx
000000010001d101	callq	___rust_dealloc
000000010001d106	movq	-0x1f0(%rbp), %rax
000000010001d10d	testq	%rax, %rax
000000010001d110	je	0x10001d12b
000000010001d112	movq	-0x1f8(%rbp), %rdi
000000010001d119	shlq	$0x3, %rax
000000010001d11d	leaq	(%rax,%rax,2), %rsi
000000010001d121	movl	$0x8, %edx
000000010001d126	callq	___rust_dealloc
000000010001d12b	movq	-0x1d8(%rbp), %rsi
000000010001d132	testq	%rsi, %rsi
000000010001d135	je	0x10001d14c
000000010001d137	movq	-0x1e0(%rbp), %rdi
000000010001d13e	shlq	$0x2, %rsi
000000010001d142	movl	$0x2, %edx
000000010001d147	callq	___rust_dealloc
000000010001d14c	movq	-0x1c0(%rbp), %rsi
000000010001d153	testq	%rsi, %rsi
000000010001d156	je	0x10001d16d
000000010001d158	movq	-0x1c8(%rbp), %rdi
000000010001d15f	shlq	$0x6, %rsi
000000010001d163	movl	$0x8, %edx
000000010001d168	callq	___rust_dealloc
000000010001d16d	movq	-0xe0(%rbp), %rax
000000010001d174	testq	%rax, %rax
000000010001d177	je	0x10001d036
000000010001d17d	movq	-0xe8(%rbp), %rdi
000000010001d184	shlq	$0x3, %rax
000000010001d188	leaq	(%rax,%rax,2), %rsi
000000010001d18c	movl	$0x8, %edx
000000010001d191	jmp	0x10001d031
000000010001d196	leaq	0x2(%rdx,%r9), %rbx
000000010001d19b	jmp	0x10001ce49
000000010001d1a0	leaq	0x3(%rdx,%r8), %rbx
000000010001d1a5	jmp	0x10001ce49
000000010001d1aa	leaq	0x1(%rdi,%r8), %rbx
000000010001d1af	jmp	0x10001ce49
000000010001d1b4	leaq	0x3(%rdx,%r8), %rsi
000000010001d1b9	jmp	0x10001c347
000000010001d1be	movzbl	-0x48(%rbp), %esi
000000010001d1c2	movl	-0x47(%rbp), %edx
000000010001d1c5	movzwl	-0x43(%rbp), %ecx
000000010001d1c9	shlq	$0x20, %rcx
000000010001d1cd	orq	%rdx, %rcx
000000010001d1d0	jmp	0x10001d228
000000010001d1d2	leaq	0x1(%rsi,%rdx), %rbx
000000010001d1d7	jmp	0x10001ce49
000000010001d1dc	movb	$0x17, %al
000000010001d1de	jmp	0x10001d228
000000010001d1e0	leaq	0x3(%rdx,%r8), %rbx
000000010001d1e5	movb	$0x13, %al
000000010001d1e7	xorl	%ecx, %ecx
000000010001d1e9	xorl	%esi, %esi
000000010001d1eb	jmp	0x10001d228
000000010001d1ed	leaq	0x3(%rdx,%r8), %rax
000000010001d1f2	movb	$0x0, -0x72(%rbp)
000000010001d1f6	movw	$0x0, -0x74(%rbp)
000000010001d1fc	movl	$0x0, -0x78(%rbp)
000000010001d203	movq	%rax, -0x71(%rbp)
000000010001d207	movq	-0x78(%rbp), %rsi
000000010001d20b	movl	-0x70(%rbp), %eax
000000010001d20e	movl	-0x6d(%rbp), %ecx
000000010001d211	movl	%eax, -0x40(%rbp)
000000010001d214	movl	%ecx, -0x3d(%rbp)
000000010001d217	movq	%rsi, -0x48(%rbp)
000000010001d21b	movq	%rsi, %rcx
000000010001d21e	shrq	$0x8, %rcx
000000010001d222	movb	$0x13, %al
000000010001d224	movq	-0x41(%rbp), %rbx
000000010001d228	shlq	$0x10, %rcx
000000010001d22c	movzbl	%sil, %r12d
000000010001d230	shlq	$0x8, %r12
000000010001d234	jmp	0x10001cee4
000000010001d239	leaq	0x4(%r15,%r8), %rbx
000000010001d23e	jmp	0x10001ce49
000000010001d243	movl	$0x39, %esi
000000010001d248	leaq	_str.5(%rip), %rdi
000000010001d24f	leaq	0x2b4aa(%rip), %rdx
000000010001d256	jmp	0x10001d26b
000000010001d258	movl	$0x19, %esi
000000010001d25d	leaq	_str.4(%rip), %rdi
000000010001d264	leaq	0x2b4ad(%rip), %rdx
000000010001d26b	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001d270	jmp	0x10001d3ea
000000010001d275	incq	%r8
000000010001d278	movq	%r8, %rbx
000000010001d27b	jmp	0x10001ce49
000000010001d280	incq	%rdx
000000010001d283	movq	%rdx, %rbx
000000010001d286	jmp	0x10001ce49
000000010001d28b	leaq	_str.4(%rip), %rdi
000000010001d292	leaq	0x2b497(%rip), %rdx
000000010001d299	jmp	0x10001d26b
000000010001d29b	leaq	0x2b006(%rip), %rax
000000010001d2a2	movq	%rax, -0x78(%rbp)
000000010001d2a6	leaq	0x2b15b(%rip), %rsi
000000010001d2ad	jmp	0x10001d2c1
000000010001d2af	leaq	0x2aff2(%rip), %rax
000000010001d2b6	movq	%rax, -0x78(%rbp)
000000010001d2ba	leaq	0x2b15f(%rip), %rsi
000000010001d2c1	leaq	-0x78(%rbp), %rdi
000000010001d2c5	movq	$0x1, 0x8(%rdi)
000000010001d2cd	movq	$0x0, 0x20(%rdi)
000000010001d2d5	leaq	0x26a14(%rip), %rax
000000010001d2dc	movq	%rax, 0x10(%rdi)
000000010001d2e0	movq	$0x0, 0x18(%rdi)
000000010001d2e8	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001d2ed	jmp	0x10001d3ea
000000010001d2f2	leaq	0x2b13f(%rip), %rdx
000000010001d2f9	movq	%r13, %rsi
000000010001d2fc	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010001d301	jmp	0x10001d3ea
000000010001d306	leaq	0x2b12b(%rip), %rdx
000000010001d30d	movq	%r13, %rdi
000000010001d310	movq	-0x268(%rbp), %rsi
000000010001d317	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001d31c	jmp	0x10001d3ea
000000010001d321	movq	%r14, -0x80(%rbp)
000000010001d325	leaq	0x26b4b(%rip), %rdi
000000010001d32c	leaq	0x2b195(%rip), %rdx
000000010001d333	movl	$0x2c, %esi
000000010001d338	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001d33d	jmp	0x10001d3ea
000000010001d342	movq	%r14, -0x80(%rbp)
000000010001d346	leaq	0x2b163(%rip), %rax
000000010001d34d	movq	%rax, -0x278(%rbp)
000000010001d354	jmp	0x10001d393
000000010001d356	leaq	0x26994(%rip), %rdi
000000010001d35d	leaq	0x2b11c(%rip), %rdx
000000010001d364	movl	$0x2b, %esi
000000010001d369	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001d36e	jmp	0x10001d3ea
000000010001d370	movq	%r14, -0x80(%rbp)
000000010001d374	leaq	0x2b075(%rip), %rdx
000000010001d37b	movq	%rsi, %rdi
000000010001d37e	movq	%r12, %rsi
000000010001d381	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001d386	jmp	0x10001d3ea
000000010001d388	movq	%rsi, -0x98(%rbp)
000000010001d38f	movq	%r14, -0x80(%rbp)
000000010001d393	movq	%r15, %rdi
000000010001d396	movq	-0x98(%rbp), %rsi
000000010001d39d	movq	-0x278(%rbp), %rdx
000000010001d3a4	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010001d3a9	jmp	0x10001d3ea
000000010001d3ab	leaq	0x2b09e(%rip), %rdx
000000010001d3b2	movl	$0x2b, %esi
000000010001d3b7	leaq	0x26933(%rip), %rdi
000000010001d3be	jmp	0x10001d26b
000000010001d3c3	leaq	0x26927(%rip), %rdi
000000010001d3ca	leaq	0x2b097(%rip), %rdx
000000010001d3d1	movl	$0x2b, %esi
000000010001d3d6	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001d3db	jmp	0x10001d3ea
000000010001d3dd	movl	$0x8, %edi
000000010001d3e2	movq	%rbx, %rsi
000000010001d3e5	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001d3ea	ud2
000000010001d3ec	movq	%rax, %rbx
000000010001d3ef	movq	-0x88(%rbp), %rdi
000000010001d3f6	movq	%r15, %rsi
000000010001d3f9	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
000000010001d3fe	jmp	0x10001d4cd
000000010001d403	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001d408	movq	%rax, %rbx
000000010001d40b	movq	%r14, %rdi
000000010001d40e	movq	-0x90(%rbp), %rsi
000000010001d415	callq	__ZN4core3ptr44drop_in_place$LT$addr2line..LineSequence$GT$17h4ea072f64cce4f0dE ## core::ptr::drop_in_place$LT$addr2line..LineSequence$GT$::h4ea072f64cce4f0d
000000010001d41a	jmp	0x10001d4cd
000000010001d41f	movq	%rax, %rbx
000000010001d422	leaq	-0x78(%rbp), %rdi
000000010001d426	callq	__ZN4core3ptr67drop_in_place$LT$alloc..vec..Vec$LT$addr2line..LineSequence$GT$$GT$17h1b328d54e7d1bbf1E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..LineSequence$GT$$GT$::h1b328d54e7d1bbf1
000000010001d42b	movq	%r15, %rdi
000000010001d42e	movq	%r14, %rsi
000000010001d431	callq	__ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$$u5b$alloc..string..String$u5d$$GT$$GT$17h3867f5b1c43d19faE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$alloc..string..String$u5d$$GT$$GT$::h3867f5b1c43d19fa
000000010001d436	movb	$0x1, %r14b
000000010001d439	jmp	0x10001d4d0
000000010001d43e	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001d443	movq	%rax, %rbx
000000010001d446	leaq	-0x78(%rbp), %rdi
000000010001d44a	callq	__ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e4caf9edc689ef1E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$::h9e4caf9edc689ef1
000000010001d44f	jmp	0x10001d4cd
000000010001d451	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001d456	jmp	0x10001d4ca
000000010001d458	movq	%rax, %rbx
000000010001d45b	leaq	-0x2b8(%rbp), %rdi
000000010001d462	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010001d467	jmp	0x10001d49a
000000010001d469	movq	%rax, %rbx
000000010001d46c	leaq	-0x78(%rbp), %rdi
000000010001d470	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010001d475	jmp	0x10001d49a
000000010001d477	movq	%rax, %rbx
000000010001d47a	jmp	0x10001d4b8
000000010001d47c	jmp	0x10001d497
000000010001d47e	movq	%rax, %rbx
000000010001d481	leaq	-0x2e8(%rbp), %rdi
000000010001d488	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010001d48d	jmp	0x10001d49a
000000010001d48f	movq	%r14, -0x80(%rbp)
000000010001d493	jmp	0x10001d4a5
000000010001d495	jmp	0x10001d4ca
000000010001d497	movq	%rax, %rbx
000000010001d49a	leaq	-0x48(%rbp), %rdi
000000010001d49e	callq	__ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h9e4caf9edc689ef1E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$::h9e4caf9edc689ef1
000000010001d4a3	jmp	0x10001d4cd
000000010001d4a5	movq	%rax, %rbx
000000010001d4a8	movq	-0x80(%rbp), %rdi
000000010001d4ac	movq	-0xf0(%rbp), %rsi
000000010001d4b3	callq	__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h89b8635dff4455ae
000000010001d4b8	movq	-0x30(%rbp), %rdi
000000010001d4bc	movq	-0x2c0(%rbp), %rsi
000000010001d4c3	callq	__ZN4core3ptr437drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h0b7ec5dfbeae34faE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h0b7ec5dfbeae34fa
000000010001d4c8	jmp	0x10001d4cd
000000010001d4ca	movq	%rax, %rbx
000000010001d4cd	xorl	%r14d, %r14d
000000010001d4d0	leaq	-0x260(%rbp), %rdi
000000010001d4d7	callq	__ZN4core3ptr275drop_in_place$LT$gimli..read..line..LineRows$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$C$usize$GT$$GT$17h77e6324a62f4e013E ## core::ptr::drop_in_place$LT$gimli..read..line..LineRows$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$C$usize$GT$$GT$::h77e6324a62f4e013
000000010001d4dc	movq	-0xe8(%rbp), %rdi
000000010001d4e3	movq	-0xe0(%rbp), %rsi
000000010001d4ea	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
000000010001d4ef	testb	%r14b, %r14b
000000010001d4f2	jne	0x10001d500
000000010001d4f4	leaq	-0xd0(%rbp), %rdi
000000010001d4fb	callq	__ZN4core3ptr67drop_in_place$LT$alloc..vec..Vec$LT$addr2line..LineSequence$GT$$GT$17h1b328d54e7d1bbf1E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..LineSequence$GT$$GT$::h1b328d54e7d1bbf1
000000010001d500	movq	%rbx, %rdi
000000010001d503	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001d508	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001d50d	nopl	(%rax)
000000010001d510	lretl
000000010001d511	inb	$0xff, %al
000000010001d513	callq	*-0x190d0001(%rsi,%riz,8)
000000010001d51a	.byte 0xff #bad opcode
000000010001d51b	callq	*0x52ffffe1(%rax)
000000010001d521	loop	0x10001d522
000000010001d523	jmpq	*%rbp
000000010001d525	inl	$0xff, %eax
000000010001d527	.byte 0xff #bad opcode
000000010001d528	cmpb	%ah, %dh
000000010001d52a	.byte 0xff #bad opcode
000000010001d52b	incl	-0x1(%rsi,%riz,8)
000000010001d52f	.byte 0xff #bad opcode
000000010001d530	std
000000010001d531	inl	$0xff, %eax
000000010001d533	pushq	%rcx
000000010001d535	inl	$0xff, %eax
000000010001d537	lcalll	*-0x19(%rdi)
000000010001d53a	.byte 0xff #bad opcode
000000010001d53b	pushq	%rdx
000000010001d53d	loope	0x10001d53e
000000010001d53f	callq	*-0x1f00001b(%rbp)
000000010001d545	outl	%eax, $0xff
000000010001d547	.byte 0xff #bad opcode
000000010001d548	cmpl	%edi, %esp
000000010001d54a	.byte 0xff #bad opcode
000000010001d54b	decl	-0xb000019(%rdi)
000000010001d551	outl	%eax, $0xff
000000010001d553	decl	-0x17(%rax)
000000010001d556	.byte 0xff #bad opcode
000000010001d557	decl	-0x168a0001(%rsp,%rdi,8)
000000010001d55e	.byte 0xff #bad opcode
000000010001d55f	decl	-0x3730001(%rsp,%rdi,8)
000000010001d566	.byte 0xff #bad opcode
000000010001d567	decl	-0x169c0001(%rsp,%rdi,8)
000000010001d56e	.byte 0xff #bad opcode
000000010001d56f	callq	*0x48(%rbp)
000000010001d572	movl	%esp, %ebp
000000010001d574	pushq	%r15
000000010001d576	pushq	%r14
000000010001d578	pushq	%r13
000000010001d57a	pushq	%r12
000000010001d57c	pushq	%rbx
000000010001d57d	subq	$0xc8, %rsp
000000010001d584	movq	%rcx, %rax
000000010001d587	movq	%rdx, %r12
000000010001d58a	movq	%rdi, %rbx
000000010001d58d	movq	0x30(%rdx), %rdi
000000010001d591	movq	0x38(%rdx), %rcx
000000010001d595	movzbl	0x49(%rdx), %r13d
000000010001d59a	xorl	%r15d, %r15d
000000010001d59d	cmpb	$0x8, %r13b
000000010001d5a1	sete	%r15b
000000010001d5a5	movq	%rcx, %rdx
000000010001d5a8	subq	%rdi, %rdx
000000010001d5ab	leaq	0x4(%rdx,%r15,8), %rdx
000000010001d5b0	movq	%rax, %r14
000000010001d5b3	subq	%rdx, %r14
000000010001d5b6	jb	0x10001d650
000000010001d5bc	cmpq	%r14, %rdi
000000010001d5bf	jbe	0x10001d650
000000010001d5c5	movl	%esi, -0x34(%rbp)
000000010001d5c8	movq	%r8, -0xa0(%rbp)
000000010001d5cf	movq	%r9, -0x30(%rbp)
000000010001d5d3	movq	0x28(%r12), %r11
000000010001d5d8	movq	0x158(%r12), %r9
000000010001d5e0	leaq	0x10(%r9), %r10
000000010001d5e4	movq	%r12, -0xd8(%rbp)
000000010001d5eb	movq	%r10, -0xd0(%rbp)
000000010001d5f2	movq	$0x0, -0xc8(%rbp)
000000010001d5fd	movb	$0x13, %dl
000000010001d5ff	cmpq	%r14, %rdi
000000010001d602	je	0x10001d65e
000000010001d604	leaq	0x4(,%r15,8), %r8
000000010001d60c	leaq	(%r11,%rdi), %rsi
000000010001d610	subq	%r8, %rax
000000010001d613	subq	%rcx, %rax
000000010001d616	xorl	%r8d, %r8d
000000010001d619	xorl	%ecx, %ecx
000000010001d61b	nopl	(%rax,%rax)
000000010001d620	movzbl	(%rsi,%rax), %r14d
000000010001d625	cmpl	$0x3f, %ecx
000000010001d628	jne	0x10001d630
000000010001d62a	cmpb	$0x1, %r14b
000000010001d62e	ja	0x10001d666
000000010001d630	movzbl	%r14b, %r14d
000000010001d634	movl	%r14d, %r15d
000000010001d637	andl	$0x7f, %r15d
000000010001d63b	shlq	%cl, %r15
000000010001d63e	orq	%r15, %r8
000000010001d641	testb	%r14b, %r14b
000000010001d644	jns	0x10001d699
000000010001d646	addl	$0x7, %ecx
000000010001d649	incq	%rax
000000010001d64c	jne	0x10001d620
000000010001d64e	jmp	0x10001d668
000000010001d650	movq	$0x38, 0x8(%rbx)
000000010001d658	movq	%r12, 0x10(%rbx)
000000010001d65c	jmp	0x10001d680
000000010001d65e	addq	%r14, %r11
000000010001d661	movq	%r11, %rsi
000000010001d664	jmp	0x10001d668
000000010001d666	movb	$0x6, %dl
000000010001d668	movb	%dl, 0x8(%rbx)
000000010001d66b	movb	$0x0, 0x9(%rbx)
000000010001d66f	movw	$0x0, 0xe(%rbx)
000000010001d675	movl	$0x0, 0xa(%rbx)
000000010001d67c	movq	%rsi, 0x10(%rbx)
000000010001d680	movq	$0x1, (%rbx)
000000010001d687	addq	$0xc8, %rsp
000000010001d68e	popq	%rbx
000000010001d68f	popq	%r12
000000010001d691	popq	%r13
000000010001d693	popq	%r14
000000010001d695	popq	%r15
000000010001d697	popq	%rbp
000000010001d698	retq
000000010001d699	addq	%rdi, %r11
000000010001d69c	leaq	0x1(%rax,%r11), %rcx
000000010001d6a1	movq	%rcx, -0xe8(%rbp)
000000010001d6a8	notq	%rax
000000010001d6ab	movq	%rax, -0xe0(%rbp)
000000010001d6b2	testq	%r8, %r8
000000010001d6b5	je	0x10001d854
000000010001d6bb	leaq	-0x1(%r8), %rax
000000010001d6bf	cmpq	0x20(%r9), %rax
000000010001d6c3	jae	0x10001d85d
000000010001d6c9	imulq	$0x70, %rax, %rdi
000000010001d6cd	addq	(%r10), %rdi
000000010001d6d0	cmpb	$0x1, 0x6a(%rdi)
000000010001d6d4	jne	0x10001d6e1
000000010001d6d6	movq	$0x1, -0xc8(%rbp)
000000010001d6e1	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
000000010001d6e6	movq	%rax, -0x98(%rbp)
000000010001d6ed	testq	%rdx, %rdx
000000010001d6f0	je	0x10001d939
000000010001d6f6	movq	%rdx, %r15
000000010001d6f9	movq	0x188(%r12), %rax
000000010001d701	movq	%rax, -0x80(%rbp)
000000010001d705	shlq	$0x4, %r15
000000010001d709	movl	$0x2e, %eax
000000010001d70e	movq	%rax, -0x78(%rbp)
000000010001d712	xorl	%r14d, %r14d
000000010001d715	xorl	%eax, %eax
000000010001d717	movq	%rax, -0x70(%rbp)
000000010001d71b	jmp	0x10001d74d
000000010001d71d	leaq	-0x68(%rbp), %rdi
000000010001d721	leaq	-0xc0(%rbp), %rsi
000000010001d728	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001d72d	movq	-0x68(%rbp), %rax
000000010001d731	movq	%rax, -0x78(%rbp)
000000010001d735	movq	-0x60(%rbp), %rax
000000010001d739	movq	%rax, -0x90(%rbp)
000000010001d740	addq	$0x10, %r14
000000010001d744	cmpq	%r14, %r15
000000010001d747	je	0x10001d915
000000010001d74d	movq	-0x98(%rbp), %rcx
000000010001d754	movq	(%rcx,%r14), %rax
000000010001d758	movq	0x8(%rcx,%r14), %rcx
000000010001d75d	movq	%rcx, -0x48(%rbp)
000000010001d761	movq	%rax, -0x50(%rbp)
000000010001d765	movq	-0xd8(%rbp), %rdx
000000010001d76c	movl	0x48(%rdx), %edx
000000010001d76f	movq	%rcx, -0x60(%rbp)
000000010001d773	movq	%rax, -0x68(%rbp)
000000010001d777	leaq	-0xc0(%rbp), %rdi
000000010001d77e	leaq	-0xe8(%rbp), %rsi
000000010001d785	leaq	-0x68(%rbp), %rcx
000000010001d789	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
000000010001d78e	cmpl	$0x2e, -0xc0(%rbp)
000000010001d795	je	0x10001d8fa
000000010001d79b	movzwl	-0xa8(%rbp), %eax
000000010001d7a2	cmpl	$0x46, %eax
000000010001d7a5	jle	0x10001d7f5
000000010001d7a7	cmpl	$0x47, %eax
000000010001d7aa	je	0x10001d71d
000000010001d7b0	cmpl	$0x6e, %eax
000000010001d7b3	je	0x10001d7bc
000000010001d7b5	cmpl	$0x2007, %eax                   ## imm = 0x2007
000000010001d7ba	jne	0x10001d740
000000010001d7bc	leaq	-0x68(%rbp), %rdi
000000010001d7c0	leaq	-0xc0(%rbp), %rsi
000000010001d7c7	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001d7cc	movzbl	%r13b, %edx
000000010001d7d0	leaq	-0x50(%rbp), %rdi
000000010001d7d4	movq	-0x30(%rbp), %rsi
000000010001d7d8	movq	-0x80(%rbp), %rcx
000000010001d7dc	leaq	-0x68(%rbp), %r8
000000010001d7e0	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
000000010001d7e5	cmpq	$0x0, -0x50(%rbp)
000000010001d7ea	jne	0x10001d740
000000010001d7f0	jmp	0x10001d94d
000000010001d7f5	cmpl	$0x3, %eax
000000010001d7f8	je	0x10001d808
000000010001d7fa	cmpl	$0x31, %eax
000000010001d7fd	je	0x10001d71d
000000010001d803	jmp	0x10001d740
000000010001d808	leaq	-0x68(%rbp), %rdi
000000010001d80c	leaq	-0xc0(%rbp), %rsi
000000010001d813	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001d818	movzbl	%r13b, %edx
000000010001d81c	leaq	-0x50(%rbp), %rdi
000000010001d820	movq	-0x30(%rbp), %rsi
000000010001d824	movq	-0x80(%rbp), %rcx
000000010001d828	leaq	-0x68(%rbp), %r8
000000010001d82c	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
000000010001d831	cmpq	$0x0, -0x50(%rbp)
000000010001d836	jne	0x10001d740
000000010001d83c	movq	-0x48(%rbp), %rax
000000010001d840	movq	%rax, -0x70(%rbp)
000000010001d844	movq	-0x40(%rbp), %rax
000000010001d848	movq	%rax, -0x88(%rbp)
000000010001d84f	jmp	0x10001d740
000000010001d854	movb	$0x37, 0x8(%rbx)
000000010001d858	jmp	0x10001d680
000000010001d85d	movq	0x28(%r9), %rdi
000000010001d861	movb	$0x12, %dl
000000010001d863	testq	%rdi, %rdi
000000010001d866	je	0x10001d8f3
000000010001d86c	movq	0x30(%r9), %rax
000000010001d870	xorl	%esi, %esi
000000010001d872	movl	$0xff, %ecx
000000010001d877	movzwl	0x532(%rdi), %r11d
000000010001d87f	imulq	$0x70, %r11, %r14
000000010001d883	movq	$-0x1, %r9
000000010001d88a	movl	$0x70, %r10d
000000010001d890	leaq	(%r14,%r10), %r15
000000010001d894	cmpq	$0x70, %r15
000000010001d898	je	0x10001d8c5
000000010001d89a	xorl	%r15d, %r15d
000000010001d89d	cmpq	%r8, 0x4e0(%rdi,%r9,8)
000000010001d8a5	setne	%r15b
000000010001d8a9	cmoval	%ecx, %r15d
000000010001d8ad	incq	%r9
000000010001d8b0	addq	$-0x70, %r10
000000010001d8b4	cmpb	$0x1, %r15b
000000010001d8b8	je	0x10001d890
000000010001d8ba	movzbl	%r15b, %r11d
000000010001d8be	testl	%r11d, %r11d
000000010001d8c1	jne	0x10001d8c8
000000010001d8c3	jmp	0x10001d8dc
000000010001d8c5	movq	%r11, %r9
000000010001d8c8	subq	$0x1, %rax
000000010001d8cc	jb	0x10001d668
000000010001d8d2	movq	0x538(%rdi,%r9,8), %rdi
000000010001d8da	jmp	0x10001d877
000000010001d8dc	testq	%rdi, %rdi
000000010001d8df	je	0x10001d8f3
000000010001d8e1	subq	%r10, %rdi
000000010001d8e4	cmpb	$0x1, 0x6a(%rdi)
000000010001d8e8	je	0x10001d6d6
000000010001d8ee	jmp	0x10001d6e1
000000010001d8f3	xorl	%esi, %esi
000000010001d8f5	jmp	0x10001d668
000000010001d8fa	movq	-0xb8(%rbp), %rax
000000010001d901	movq	-0xb0(%rbp), %rcx
000000010001d908	movq	%rcx, 0x10(%rbx)
000000010001d90c	movq	%rax, 0x8(%rbx)
000000010001d910	jmp	0x10001d680
000000010001d915	movq	-0x70(%rbp), %rax
000000010001d919	testq	%rax, %rax
000000010001d91c	je	0x10001d92f
000000010001d91e	movq	%rax, 0x8(%rbx)
000000010001d922	movq	-0x88(%rbp), %rax
000000010001d929	movq	%rax, 0x10(%rbx)
000000010001d92d	jmp	0x10001d941
000000010001d92f	movq	-0x78(%rbp), %rsi
000000010001d933	cmpq	$0x2e, %rsi
000000010001d937	jne	0x10001d95f
000000010001d939	movq	$0x0, 0x8(%rbx)
000000010001d941	movq	$0x0, (%rbx)
000000010001d948	jmp	0x10001d687
000000010001d94d	movq	-0x48(%rbp), %rax
000000010001d951	movq	-0x40(%rbp), %rcx
000000010001d955	movq	%rax, 0x8(%rbx)
000000010001d959	movq	%rcx, 0x10(%rbx)
000000010001d95d	jmp	0x10001d941
000000010001d95f	movq	0x10(%rbp), %rax
000000010001d963	decq	%rax
000000010001d966	movzbl	-0x34(%rbp), %ecx
000000010001d96a	movq	%rbx, %rdi
000000010001d96d	movq	-0x90(%rbp), %rdx
000000010001d974	movq	%r12, %r8
000000010001d977	movq	-0xa0(%rbp), %r9
000000010001d97e	pushq	%rax
000000010001d97f	pushq	-0x30(%rbp)
000000010001d982	callq	__ZN9addr2line8function9name_attr17hddb3ff298bb6b83bE ## addr2line::function::name_attr::hddb3ff298bb6b83b
000000010001d987	addq	$0x10, %rsp
000000010001d98b	jmp	0x10001d687
__ZN9addr2line8function17Function$LT$R$GT$14parse_children17h79cbbd2299db91a1E:
000000010001d990	pushq	%rbp
000000010001d991	movq	%rsp, %rbp
000000010001d994	pushq	%r15
000000010001d996	pushq	%r14
000000010001d998	pushq	%r13
000000010001d99a	pushq	%r12
000000010001d99c	pushq	%rbx
000000010001d99d	subq	$0x1b8, %rsp                    ## imm = 0x1B8
000000010001d9a4	movq	%r9, -0x188(%rbp)
000000010001d9ab	movl	%ecx, -0x160(%rbp)
000000010001d9b1	movq	%rsi, %r12
000000010001d9b4	movq	%rdi, %r13
000000010001d9b7	movq	0x10(%rbp), %rcx
000000010001d9bb	movq	%r8, -0x158(%rbp)
000000010001d9c2	movl	0x48(%r8), %esi
000000010001d9c6	leaq	0xc0(%rcx), %rax
000000010001d9cd	addq	$0xb0, %rcx
000000010001d9d4	movq	%rsi, -0x128(%rbp)
000000010001d9db	shrl	$0x10, %esi
000000010001d9de	movl	%esi, -0xf4(%rbp)
000000010001d9e4	cmpw	$0x5, %si
000000010001d9e8	setae	-0x59(%rbp)
000000010001d9ec	cmovaeq	%rax, %rcx
000000010001d9f0	movq	%rcx, -0x1c8(%rbp)
000000010001d9f7	movq	0x20(%r12), %r15
000000010001d9fc	movq	%rdx, -0x1d0(%rbp)
000000010001da03	cmpq	%rdx, %r15
000000010001da06	jle	0x10001e854
000000010001da0c	movq	0x28(%rbp), %rdi
000000010001da10	movq	-0x158(%rbp), %rsi
000000010001da17	movzwl	0x4a(%rsi), %eax
000000010001da1b	movw	%ax, -0xda(%rbp)
000000010001da22	movzbl	0x49(%rsi), %eax
000000010001da26	movb	%al, -0x39(%rbp)
000000010001da29	movq	0x188(%rsi), %rax
000000010001da30	movq	%rax, -0x180(%rbp)
000000010001da37	movq	0x1a0(%rsi), %rax
000000010001da3e	movq	%rax, -0x108(%rbp)
000000010001da45	movq	-0x128(%rbp), %rbx
000000010001da4c	movzbl	%bh, %eax
000000010001da4f	movq	%rax, -0x1a0(%rbp)
000000010001da56	movl	%ebx, %eax
000000010001da58	andl	$0xff00, %eax                   ## imm = 0xFF00
000000010001da5d	movl	%eax, -0x15c(%rbp)
000000010001da63	movq	0x10(%r12), %rax
000000010001da68	movq	0x38(%rax), %rcx
000000010001da6c	addq	(%r12), %rcx
000000010001da70	xorl	%edx, %edx
000000010001da72	cmpb	$0x8, 0x49(%rax)
000000010001da76	sete	%dl
000000010001da79	leaq	(%rcx,%rdx,8), %r14
000000010001da7d	movq	0x30(%rax), %rcx
000000010001da81	addq	0x28(%rax), %rcx
000000010001da85	movq	0x190(%rsi), %rax
000000010001da8c	movq	%rax, -0x138(%rbp)
000000010001da93	subq	%rcx, %r14
000000010001da96	movzbl	%bl, %eax
000000010001da99	movq	%rax, -0x170(%rbp)
000000010001daa0	addq	$0x4, %r14
000000010001daa4	movq	0x180(%rsi), %rax
000000010001daab	movq	%rax, -0x1a8(%rbp)
000000010001dab2	leaq	0x1(%rdi), %rax
000000010001dab6	movq	%rax, -0x1b8(%rbp)
000000010001dabd	leaq	0xe68(%rip), %rbx
000000010001dac4	movq	%r13, -0x68(%rbp)
000000010001dac8	jmp	0x10001dba6
000000010001dacd	movq	-0xe8(%rbp), %rdx
000000010001dad4	movq	-0x100(%rbp), %r8
000000010001dadb	movq	(%rdi), %rax
000000010001dade	movq	%rsi, %rcx
000000010001dae1	shlq	$0x5, %rcx
000000010001dae5	movq	%rdx, (%rax,%rcx)
000000010001dae9	movq	%r8, 0x8(%rax,%rcx)
000000010001daee	movq	0x28(%rbp), %rdx
000000010001daf2	movq	%rdx, 0x10(%rax,%rcx)
000000010001daf7	movq	%rbx, 0x18(%rax,%rcx)
000000010001dafc	incq	%rsi
000000010001daff	movq	%rsi, 0x10(%rdi)
000000010001db03	leaq	-0x98(%rbp), %rdi
000000010001db0a	movq	%r12, %rsi
000000010001db0d	movq	%r15, %rdx
000000010001db10	movl	-0xf8(%rbp), %ecx
000000010001db16	movq	-0x158(%rbp), %r8
000000010001db1d	movq	-0x188(%rbp), %r9
000000010001db24	pushq	-0x1b8(%rbp)
000000010001db2a	pushq	0x20(%rbp)
000000010001db2d	pushq	0x18(%rbp)
000000010001db30	pushq	0x10(%rbp)
000000010001db33	callq	__ZN9addr2line8function17Function$LT$R$GT$14parse_children17h79cbbd2299db91a1E ## addr2line::function::Function$LT$R$GT$::parse_children::h79cbbd2299db91a1
000000010001db38	addq	$0x20, %rsp
000000010001db3c	movq	-0x68(%rbp), %rdi
000000010001db40	leaq	0xde5(%rip), %rbx
000000010001db47	movq	-0xd8(%rbp), %rdx
000000010001db4e	movzbl	-0x98(%rbp), %r13d
000000010001db56	cmpb	$0x4b, %r13b
000000010001db5a	jne	0x10001e90e
000000010001db60	movq	%rdi, %r13
000000010001db63	movq	%rdx, -0xd8(%rbp)
000000010001db6a	movq	0x10(%r12), %rax
000000010001db6f	movq	0x20(%r12), %r15
000000010001db74	movq	0x30(%rax), %rcx
000000010001db78	movq	0x38(%rax), %rdx
000000010001db7c	xorl	%esi, %esi
000000010001db7e	cmpb	$0x8, 0x49(%rax)
000000010001db82	sete	%sil
000000010001db86	addq	(%r12), %rdx
000000010001db8a	addq	0x28(%rax), %rcx
000000010001db8e	leaq	(%rdx,%rsi,8), %r14
000000010001db92	subq	%rcx, %r14
000000010001db95	addq	$0x4, %r14
000000010001db99	cmpq	-0x1d0(%rbp), %r15
000000010001dba0	jle	0x10001e854
000000010001dba6	leaq	-0xd0(%rbp), %rdi
000000010001dbad	movq	%r12, %rsi
000000010001dbb0	callq	__ZN5gimli4read4unit19EntriesRaw$LT$R$GT$17read_abbreviation17hcdac73cef64242f0E ## gimli::read::unit::EntriesRaw$LT$R$GT$::read_abbreviation::hcdac73cef64242f0
000000010001dbb5	movzbl	-0xd0(%rbp), %eax
000000010001dbbc	cmpb	$0x4b, %al
000000010001dbbe	jne	0x10001e884
000000010001dbc4	movq	-0xc8(%rbp), %rdi
000000010001dbcb	testq	%rdi, %rdi
000000010001dbce	je	0x10001db6a
000000010001dbd0	movzwl	0x68(%rdi), %eax
000000010001dbd4	cmpl	$0x1d, %eax
000000010001dbd7	je	0x10001dc90
000000010001dbdd	cmpl	$0x2e, %eax
000000010001dbe0	je	0x10001dc55
000000010001dbe2	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
000000010001dbe7	movq	%rdx, %r8
000000010001dbea	movq	0x10(%r12), %rcx
000000010001dbef	movl	0x48(%rcx), %edx
000000010001dbf2	leaq	-0xd0(%rbp), %rdi
000000010001dbf9	movq	%r12, %rsi
000000010001dbfc	movq	%rax, %rcx
000000010001dbff	callq	__ZN5gimli4read4unit15skip_attributes17ha570d863da4597bbE ## gimli::read::unit::skip_attributes::ha570d863da4597bb
000000010001dc04	movzbl	-0xd0(%rbp), %eax
000000010001dc0b	cmpb	$0x4b, %al
000000010001dc0d	je	0x10001db6a
000000010001dc13	jmp	0x10001e8b9
000000010001dc18	nopl	(%rax,%rax)
000000010001dc20	cmpq	%r15, 0x20(%r12)
000000010001dc25	jle	0x10001db6a
000000010001dc2b	leaq	-0xd0(%rbp), %rdi
000000010001dc32	movq	%r12, %rsi
000000010001dc35	callq	__ZN5gimli4read4unit19EntriesRaw$LT$R$GT$17read_abbreviation17hcdac73cef64242f0E ## gimli::read::unit::EntriesRaw$LT$R$GT$::read_abbreviation::hcdac73cef64242f0
000000010001dc3a	movzbl	-0xd0(%rbp), %eax
000000010001dc41	cmpb	$0x4b, %al
000000010001dc43	jne	0x10001e85b
000000010001dc49	movq	-0xc8(%rbp), %rdi
000000010001dc50	testq	%rdi, %rdi
000000010001dc53	je	0x10001dc20
000000010001dc55	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
000000010001dc5a	movq	%rdx, %r8
000000010001dc5d	movq	0x10(%r12), %rcx
000000010001dc62	movl	0x48(%rcx), %edx
000000010001dc65	leaq	-0xd0(%rbp), %rdi
000000010001dc6c	movq	%r12, %rsi
000000010001dc6f	movq	%rax, %rcx
000000010001dc72	callq	__ZN5gimli4read4unit15skip_attributes17ha570d863da4597bbE ## gimli::read::unit::skip_attributes::ha570d863da4597bb
000000010001dc77	movzbl	-0xd0(%rbp), %eax
000000010001dc7e	cmpb	$0x4b, %al
000000010001dc80	je	0x10001dc20
000000010001dc82	jmp	0x10001e85b
000000010001dc87	nopw	(%rax,%rax)
000000010001dc90	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
000000010001dc95	movq	%rax, -0x1d8(%rbp)
000000010001dc9c	movl	-0x160(%rbp), %eax
000000010001dca2	movzbl	%al, %eax
000000010001dca5	movl	%eax, -0xf8(%rbp)
000000010001dcab	testq	%rdx, %rdx
000000010001dcae	movq	%r15, -0x1c0(%rbp)
000000010001dcb5	je	0x10001e439
000000010001dcbb	shlq	$0x4, %rdx
000000010001dcbf	xorl	%r13d, %r13d
000000010001dcc2	xorl	%eax, %eax
000000010001dcc4	movq	%rax, -0x88(%rbp)
000000010001dccb	xorl	%eax, %eax
000000010001dccd	movq	%rax, -0x120(%rbp)
000000010001dcd4	xorl	%eax, %eax
000000010001dcd6	movq	%rax, -0x148(%rbp)
000000010001dcdd	xorl	%eax, %eax
000000010001dcdf	movq	%rax, -0x150(%rbp)
000000010001dce6	xorl	%eax, %eax
000000010001dce8	movq	%rax, -0x118(%rbp)
000000010001dcef	xorl	%eax, %eax
000000010001dcf1	movq	%rax, -0x110(%rbp)
000000010001dcf8	xorl	%eax, %eax
000000010001dcfa	movq	%rax, -0x130(%rbp)
000000010001dd01	xorl	%eax, %eax
000000010001dd03	movq	%rax, -0xf0(%rbp)
000000010001dd0a	jmp	0x10001dd30
000000010001dd0c	leaq	0xc19(%rip), %rbx
000000010001dd13	nopw	%cs:(%rax,%rax)
000000010001dd1d	nopl	(%rax)
000000010001dd20	addq	$0x10, %r13
000000010001dd24	movq	%r15, %rdx
000000010001dd27	cmpq	%r13, %r15
000000010001dd2a	je	0x10001e481
000000010001dd30	movq	%rdx, %r15
000000010001dd33	movq	-0x1d8(%rbp), %rcx
000000010001dd3a	movq	(%rcx,%r13), %rax
000000010001dd3e	movq	0x8(%rcx,%r13), %rcx
000000010001dd43	movq	%rcx, -0x50(%rbp)
000000010001dd47	movq	%rax, -0x58(%rbp)
000000010001dd4b	movq	0x10(%r12), %rdx
000000010001dd50	movl	0x48(%rdx), %edx
000000010001dd53	movq	%rcx, -0x78(%rbp)
000000010001dd57	movq	%rax, -0x80(%rbp)
000000010001dd5b	leaq	-0xd0(%rbp), %rdi
000000010001dd62	movq	%r12, %rsi
000000010001dd65	leaq	-0x80(%rbp), %rcx
000000010001dd69	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
000000010001dd6e	movq	-0xd0(%rbp), %rax
000000010001dd75	cmpq	$0x2e, %rax
000000010001dd79	je	0x10001e624
000000010001dd7f	movzwl	-0xb8(%rbp), %ecx
000000010001dd86	leal	-0x3(%rcx), %edx
000000010001dd89	cmpl	$0x56, %edx
000000010001dd8c	ja	0x10001de10
000000010001dd92	movslq	(%rbx,%rdx,4), %rcx
000000010001dd96	addq	%rbx, %rcx
000000010001dd99	jmpq	*%rcx
000000010001dd9b	cmpq	$0x0, -0x88(%rbp)
000000010001dda3	jne	0x10001dd20
000000010001dda9	leaq	-0x80(%rbp), %rdi
000000010001ddad	leaq	-0xd0(%rbp), %rsi
000000010001ddb4	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001ddb9	movq	-0x80(%rbp), %rsi
000000010001ddbd	movq	-0x78(%rbp), %rdx
000000010001ddc1	leaq	-0x58(%rbp), %rdi
000000010001ddc5	movl	-0xf8(%rbp), %ecx
000000010001ddcb	movq	-0x158(%rbp), %r8
000000010001ddd2	movq	-0x188(%rbp), %r9
000000010001ddd9	pushq	$0x10
000000010001dddb	pushq	0x10(%rbp)
000000010001ddde	callq	__ZN9addr2line8function9name_attr17hddb3ff298bb6b83bE ## addr2line::function::name_attr::hddb3ff298bb6b83b
000000010001dde3	addq	$0x10, %rsp
000000010001dde7	cmpq	$0x0, -0x58(%rbp)
000000010001ddec	movq	-0x50(%rbp), %rax
000000010001ddf0	movq	%rax, -0x88(%rbp)
000000010001ddf7	movq	-0x48(%rbp), %rcx
000000010001ddfb	jne	0x10001e703
000000010001de01	movq	%rcx, -0x140(%rbp)
000000010001de08	jmp	0x10001dd20
000000010001de0d	nopl	(%rax)
000000010001de10	cmpl	$0x6e, %ecx
000000010001de13	je	0x10001de21
000000010001de15	cmpl	$0x2007, %ecx                   ## imm = 0x2007
000000010001de1b	jne	0x10001dd20
000000010001de21	leaq	-0x80(%rbp), %rbx
000000010001de25	movq	%rbx, %rdi
000000010001de28	leaq	-0xd0(%rbp), %rsi
000000010001de2f	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001de34	movzbl	-0x39(%rbp), %edx
000000010001de38	leaq	-0x58(%rbp), %rdi
000000010001de3c	movq	0x10(%rbp), %rsi
000000010001de40	movq	-0x180(%rbp), %rcx
000000010001de47	movq	%rbx, %r8
000000010001de4a	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
000000010001de4f	cmpq	$0x0, -0x58(%rbp)
000000010001de54	jne	0x10001dd0c
000000010001de5a	movq	-0x48(%rbp), %rax
000000010001de5e	movq	%rax, -0x140(%rbp)
000000010001de65	movq	-0x50(%rbp), %rax
000000010001de69	movq	%rax, -0x88(%rbp)
000000010001de70	jmp	0x10001dd0c
000000010001de75	cmpq	$0x0, -0x88(%rbp)
000000010001de7d	jne	0x10001dd20
000000010001de83	leaq	-0x80(%rbp), %rbx
000000010001de87	movq	%rbx, %rdi
000000010001de8a	leaq	-0xd0(%rbp), %rsi
000000010001de91	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001de96	movzbl	-0x39(%rbp), %edx
000000010001de9a	leaq	-0x58(%rbp), %rdi
000000010001de9e	movq	0x10(%rbp), %rsi
000000010001dea2	movq	-0x180(%rbp), %rcx
000000010001dea9	movq	%rbx, %r8
000000010001deac	callq	__ZN5gimli4read5dwarf14Dwarf$LT$R$GT$11attr_string17h87635d10a83ce3a3E ## gimli::read::dwarf::Dwarf$LT$R$GT$::attr_string::h87635d10a83ce3a3
000000010001deb1	cmpq	$0x0, -0x58(%rbp)
000000010001deb6	jne	0x10001e1d8
000000010001debc	movq	-0x50(%rbp), %rax
000000010001dec0	movq	%rax, -0x88(%rbp)
000000010001dec7	movq	-0x48(%rbp), %rax
000000010001decb	leaq	0xa5a(%rip), %rbx
000000010001ded2	jmp	0x10001e1ef
000000010001ded7	leaq	-0x80(%rbp), %rdi
000000010001dedb	leaq	-0xd0(%rbp), %rsi
000000010001dee2	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001dee7	movq	-0x80(%rbp), %rax
000000010001deeb	testq	%rax, %rax
000000010001deee	je	0x10001e111
000000010001def4	cmpl	$0xc, %eax
000000010001def7	jne	0x10001dd20
000000010001defd	movq	0x10(%rbp), %rcx
000000010001df01	movq	0x10(%rcx), %rax
000000010001df05	movq	0x18(%rcx), %rcx
000000010001df09	movq	-0x138(%rbp), %rdx
000000010001df10	subq	%rdx, %rcx
000000010001df13	jb	0x10001e7f5
000000010001df19	addq	%rdx, %rax
000000010001df1c	movq	-0x78(%rbp), %rdx
000000010001df20	movq	-0x170(%rbp), %rdi
000000010001df27	imulq	%rdi, %rdx
000000010001df2b	movq	%rcx, %rsi
000000010001df2e	subq	%rdx, %rsi
000000010001df31	jb	0x10001e7f5
000000010001df37	decl	%edi
000000010001df39	cmpl	$0x7, %edi
000000010001df3c	ja	0x10001e7d6
000000010001df42	addq	%rdx, %rax
000000010001df45	leaq	0xb8c(%rip), %r8
000000010001df4c	movslq	(%r8,%rdi,4), %rdi
000000010001df50	addq	%r8, %rdi
000000010001df53	jmpq	*%rdi
000000010001df55	cmpq	%rdx, %rcx
000000010001df58	je	0x10001e7e4
000000010001df5e	movzbl	(%rax), %eax
000000010001df61	jmp	0x10001e3c1
000000010001df66	leaq	-0x80(%rbp), %rdi
000000010001df6a	leaq	-0xd0(%rbp), %rsi
000000010001df71	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001df76	movq	-0x80(%rbp), %rax
000000010001df7a	testq	%rax, %rax
000000010001df7d	je	0x10001e1a0
000000010001df83	cmpl	$0x7, %eax
000000010001df86	je	0x10001e1bc
000000010001df8c	cmpl	$0xc, %eax
000000010001df8f	jne	0x10001dd20
000000010001df95	movq	0x10(%rbp), %rcx
000000010001df99	movq	0x10(%rcx), %rax
000000010001df9d	movq	0x18(%rcx), %rcx
000000010001dfa1	movq	-0x138(%rbp), %rdx
000000010001dfa8	subq	%rdx, %rcx
000000010001dfab	jb	0x10001e7f5
000000010001dfb1	addq	%rdx, %rax
000000010001dfb4	movq	-0x78(%rbp), %rdx
000000010001dfb8	movq	-0x170(%rbp), %rdi
000000010001dfbf	imulq	%rdi, %rdx
000000010001dfc3	movq	%rcx, %rsi
000000010001dfc6	subq	%rdx, %rsi
000000010001dfc9	jb	0x10001e7f5
000000010001dfcf	decl	%edi
000000010001dfd1	cmpl	$0x7, %edi
000000010001dfd4	ja	0x10001e7d6
000000010001dfda	addq	%rdx, %rax
000000010001dfdd	leaq	0xad4(%rip), %r8
000000010001dfe4	movslq	(%r8,%rdi,4), %rdi
000000010001dfe8	addq	%r8, %rdi
000000010001dfeb	jmpq	*%rdi
000000010001dfed	cmpq	%rdx, %rcx
000000010001dff0	je	0x10001e7e4
000000010001dff6	movzbl	(%rax), %eax
000000010001dff9	jmp	0x10001e421
000000010001dffe	leaq	-0x80(%rbp), %rdi
000000010001e002	leaq	-0xd0(%rbp), %rsi
000000010001e009	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001e00e	movq	-0x80(%rbp), %rcx
000000010001e012	movq	-0x78(%rbp), %rax
000000010001e016	cmpq	$0x18, %rcx
000000010001e01a	je	0x10001e12d
000000010001e020	cmpl	$0x16, %ecx
000000010001e023	jne	0x10001e18b
000000010001e029	cmpw	$0x5, -0xf4(%rbp)
000000010001e031	movl	$0x0, %edx
000000010001e036	cmovbq	-0x108(%rbp), %rdx
000000010001e03e	movq	0x10(%rbp), %rcx
000000010001e042	cmpb	$0x0, 0xe0(%rcx)
000000010001e049	movl	$0x0, %ecx
000000010001e04e	cmoveq	%rcx, %rdx
000000010001e052	jmp	0x10001e22b
000000010001e057	addq	$-0x2, %rax
000000010001e05b	cmpq	$0x5, %rax
000000010001e05f	ja	0x10001e273
000000010001e065	leaq	0xa1c(%rip), %rcx
000000010001e06c	movslq	(%rcx,%rax,4), %rax
000000010001e070	addq	%rcx, %rax
000000010001e073	jmpq	*%rax
000000010001e075	movq	-0xc8(%rbp), %rax
000000010001e07c	jmp	0x10001e275
000000010001e081	leaq	-0x80(%rbp), %rdi
000000010001e085	leaq	-0xd0(%rbp), %rsi
000000010001e08c	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
000000010001e091	cmpl	$0x2c, -0x80(%rbp)
000000010001e095	jne	0x10001dd20
000000010001e09b	cmpw	$0x5, -0xda(%rbp)
000000010001e0a3	setae	%al
000000010001e0a6	movq	-0x78(%rbp), %rcx
000000010001e0aa	testq	%rcx, %rcx
000000010001e0ad	setne	%dl
000000010001e0b0	orb	%al, %dl
000000010001e0b2	movq	-0x178(%rbp), %rax
000000010001e0b9	cmovneq	%rcx, %rax
000000010001e0bd	movq	%rax, -0x178(%rbp)
000000010001e0c4	movl	$0x1, %eax
000000010001e0c9	movq	-0x120(%rbp), %rcx
000000010001e0d0	cmovneq	%rax, %rcx
000000010001e0d4	movq	%rcx, -0x120(%rbp)
000000010001e0db	jmp	0x10001dd20
000000010001e0e0	addq	$-0x2, %rax
000000010001e0e4	cmpq	$0x5, %rax
000000010001e0e8	ja	0x10001e2c5
000000010001e0ee	leaq	0x9ab(%rip), %rcx
000000010001e0f5	movslq	(%rcx,%rax,4), %rax
000000010001e0f9	addq	%rcx, %rax
000000010001e0fc	jmpq	*%rax
000000010001e0fe	movq	-0xc8(%rbp), %rax
000000010001e105	movq	%rax, -0x148(%rbp)
000000010001e10c	jmp	0x10001dd20
000000010001e111	movl	$0x1, %eax
000000010001e116	movq	%rax, -0x118(%rbp)
000000010001e11d	movq	-0x78(%rbp), %rax
000000010001e121	movq	%rax, -0xe8(%rbp)
000000010001e128	jmp	0x10001dd20
000000010001e12d	movq	0x10(%rbp), %rcx
000000010001e131	movq	0xc0(%rcx), %rsi
000000010001e138	movq	0xc8(%rcx), %rcx
000000010001e13f	movq	-0x108(%rbp), %rdx
000000010001e146	subq	%rdx, %rcx
000000010001e149	jb	0x10001e71d
000000010001e14f	addq	%rdx, %rsi
000000010001e152	imulq	-0x1a0(%rbp), %rax
000000010001e15a	subq	%rax, %rcx
000000010001e15d	movq	%rsi, %rdx
000000010001e160	jb	0x10001e79e
000000010001e166	addq	%rax, %rdx
000000010001e169	cmpl	$0x800, -0x15c(%rbp)            ## imm = 0x800
000000010001e173	jne	0x10001e202
000000010001e179	cmpq	$0x7, %rcx
000000010001e17d	jbe	0x10001e726
000000010001e183	movq	(%rdx), %rdx
000000010001e186	jmp	0x10001e224
000000010001e18b	xorl	%eax, %eax
000000010001e18d	movq	%rax, -0xf0(%rbp)
000000010001e194	movq	-0xd8(%rbp), %rdx
000000010001e19b	jmp	0x10001e23a
000000010001e1a0	movl	$0x1, %eax
000000010001e1a5	movq	%rax, -0x110(%rbp)
000000010001e1ac	movq	-0x78(%rbp), %rax
000000010001e1b0	movq	%rax, -0x100(%rbp)
000000010001e1b7	jmp	0x10001dd20
000000010001e1bc	movl	$0x1, %eax
000000010001e1c1	movq	%rax, -0x130(%rbp)
000000010001e1c8	movq	-0x78(%rbp), %rax
000000010001e1cc	movq	%rax, -0x190(%rbp)
000000010001e1d3	jmp	0x10001dd20
000000010001e1d8	xorl	%eax, %eax
000000010001e1da	movq	%rax, -0x88(%rbp)
000000010001e1e1	leaq	0x744(%rip), %rbx
000000010001e1e8	movq	-0x198(%rbp), %rax
000000010001e1ef	movq	%rax, -0x198(%rbp)
000000010001e1f6	movq	%rax, -0x140(%rbp)
000000010001e1fd	jmp	0x10001dd20
000000010001e202	cmpq	$0x4, %rcx
000000010001e206	jb	0x10001e762
000000010001e20c	movzwl	0x1(%rdx), %eax
000000010001e210	movzbl	(%rdx), %ecx
000000010001e213	movzbl	0x3(%rdx), %edx
000000010001e217	movb	%cl, -0x55(%rbp)
000000010001e21a	movb	%dl, -0x52(%rbp)
000000010001e21d	movw	%ax, -0x54(%rbp)
000000010001e221	movl	-0x55(%rbp), %edx
000000010001e224	movq	-0x108(%rbp), %rax
000000010001e22b	addq	%rax, %rdx
000000010001e22e	movl	$0x1, %eax
000000010001e233	movq	%rax, -0xf0(%rbp)
000000010001e23a	movq	%rdx, -0xd8(%rbp)
000000010001e241	movq	%rdx, -0x1b0(%rbp)
000000010001e248	jmp	0x10001dd20
000000010001e24d	movzbl	-0xc8(%rbp), %eax
000000010001e254	jmp	0x10001e275
000000010001e256	movzwl	-0xc8(%rbp), %eax
000000010001e25d	jmp	0x10001e275
000000010001e25f	movl	-0xc8(%rbp), %eax
000000010001e265	jmp	0x10001e275
000000010001e267	movq	-0xc8(%rbp), %rax
000000010001e26e	testq	%rax, %rax
000000010001e271	jns	0x10001e275
000000010001e273	xorl	%eax, %eax
000000010001e275	movq	%rax, -0x150(%rbp)
000000010001e27c	jmp	0x10001dd20
000000010001e281	movzbl	-0xc8(%rbp), %eax
000000010001e288	movq	%rax, -0x148(%rbp)
000000010001e28f	jmp	0x10001dd20
000000010001e294	movzwl	-0xc8(%rbp), %eax
000000010001e29b	movq	%rax, -0x148(%rbp)
000000010001e2a2	jmp	0x10001dd20
000000010001e2a7	movl	-0xc8(%rbp), %eax
000000010001e2ad	movq	%rax, -0x148(%rbp)
000000010001e2b4	jmp	0x10001dd20
000000010001e2b9	movq	-0xc8(%rbp), %rax
000000010001e2c0	testq	%rax, %rax
000000010001e2c3	jns	0x10001e2c7
000000010001e2c5	xorl	%eax, %eax
000000010001e2c7	movq	%rax, -0x148(%rbp)
000000010001e2ce	jmp	0x10001dd20
000000010001e2d3	cmpq	$0x2, %rsi
000000010001e2d7	jb	0x10001e379
000000010001e2dd	movzwl	(%rax), %eax
000000010001e2e0	movw	%ax, -0x57(%rbp)
000000010001e2e4	movb	$0x4b, %cl
000000010001e2e6	jmp	0x10001e3b8
000000010001e2eb	cmpq	$0x4, %rsi
000000010001e2ef	jb	0x10001e398
000000010001e2f5	movzwl	0x1(%rax), %ecx
000000010001e2f9	movzbl	(%rax), %edx
000000010001e2fc	movzbl	0x3(%rax), %eax
000000010001e300	movb	%dl, -0x55(%rbp)
000000010001e303	movb	%al, -0x52(%rbp)
000000010001e306	movw	%cx, -0x54(%rbp)
000000010001e30a	movl	-0x55(%rbp), %eax
000000010001e30d	movb	$0x4b, %cl
000000010001e30f	jmp	0x10001e3b8
000000010001e314	cmpq	$0x8, %rsi
000000010001e318	jb	0x10001e823
000000010001e31e	movq	(%rax), %rax
000000010001e321	jmp	0x10001e3c1
000000010001e326	cmpq	$0x2, %rsi
000000010001e32a	jb	0x10001e3d9
000000010001e330	movzwl	(%rax), %eax
000000010001e333	movw	%ax, -0x57(%rbp)
000000010001e337	movb	$0x4b, %cl
000000010001e339	jmp	0x10001e418
000000010001e33e	cmpq	$0x4, %rsi
000000010001e342	jb	0x10001e3f8
000000010001e348	movzwl	0x1(%rax), %ecx
000000010001e34c	movzbl	(%rax), %edx
000000010001e34f	movzbl	0x3(%rax), %eax
000000010001e353	movb	%dl, -0x55(%rbp)
000000010001e356	movb	%al, -0x52(%rbp)
000000010001e359	movw	%cx, -0x54(%rbp)
000000010001e35d	movl	-0x55(%rbp), %eax
000000010001e360	movb	$0x4b, %cl
000000010001e362	jmp	0x10001e418
000000010001e367	cmpq	$0x8, %rsi
000000010001e36b	jb	0x10001e823
000000010001e371	movq	(%rax), %rax
000000010001e374	jmp	0x10001e421
000000010001e379	movw	$0x0, -0x58(%rbp)
000000010001e37f	movl	$0x0, -0x56(%rbp)
000000010001e386	movb	$0x0, -0x52(%rbp)
000000010001e38a	movl	-0x58(%rbp), %ecx
000000010001e38d	movl	%ecx, -0x38(%rbp)
000000010001e390	movl	-0x55(%rbp), %ecx
000000010001e393	movl	%ecx, -0x35(%rbp)
000000010001e396	jmp	0x10001e3b6
000000010001e398	movl	$0x0, -0x58(%rbp)
000000010001e39f	movb	$0x0, -0x52(%rbp)
000000010001e3a3	movw	$0x0, -0x54(%rbp)
000000010001e3a9	movl	-0x55(%rbp), %ecx
000000010001e3ac	movl	%ecx, -0x35(%rbp)
000000010001e3af	movl	$0x0, -0x38(%rbp)
000000010001e3b6	movb	$0x13, %cl
000000010001e3b8	cmpb	$0x4b, %cl
000000010001e3bb	jne	0x10001e7ff
000000010001e3c1	movl	$0x1, %ecx
000000010001e3c6	movq	%rcx, -0x118(%rbp)
000000010001e3cd	movq	%rax, -0xe8(%rbp)
000000010001e3d4	jmp	0x10001dd20
000000010001e3d9	movw	$0x0, -0x58(%rbp)
000000010001e3df	movl	$0x0, -0x56(%rbp)
000000010001e3e6	movb	$0x0, -0x52(%rbp)
000000010001e3ea	movl	-0x58(%rbp), %ecx
000000010001e3ed	movl	%ecx, -0x38(%rbp)
000000010001e3f0	movl	-0x55(%rbp), %ecx
000000010001e3f3	movl	%ecx, -0x35(%rbp)
000000010001e3f6	jmp	0x10001e416
000000010001e3f8	movl	$0x0, -0x58(%rbp)
000000010001e3ff	movb	$0x0, -0x52(%rbp)
000000010001e403	movw	$0x0, -0x54(%rbp)
000000010001e409	movl	-0x55(%rbp), %ecx
000000010001e40c	movl	%ecx, -0x35(%rbp)
000000010001e40f	movl	$0x0, -0x38(%rbp)
000000010001e416	movb	$0x13, %cl
000000010001e418	cmpb	$0x4b, %cl
000000010001e41b	jne	0x10001e7ff
000000010001e421	movl	$0x1, %ecx
000000010001e426	movq	%rcx, -0x110(%rbp)
000000010001e42d	movq	%rax, -0x100(%rbp)
000000010001e434	jmp	0x10001dd20
000000010001e439	xorl	%eax, %eax
000000010001e43b	movq	%rax, -0xf0(%rbp)
000000010001e442	xorl	%eax, %eax
000000010001e444	movq	%rax, -0x130(%rbp)
000000010001e44b	xorl	%eax, %eax
000000010001e44d	movq	%rax, -0x110(%rbp)
000000010001e454	xorl	%eax, %eax
000000010001e456	movq	%rax, -0x118(%rbp)
000000010001e45d	xorl	%eax, %eax
000000010001e45f	movq	%rax, -0x150(%rbp)
000000010001e466	xorl	%eax, %eax
000000010001e468	movq	%rax, -0x148(%rbp)
000000010001e46f	xorl	%eax, %eax
000000010001e471	movq	%rax, -0x120(%rbp)
000000010001e478	xorl	%eax, %eax
000000010001e47a	movq	%rax, -0x88(%rbp)
000000010001e481	movq	0x18(%rbp), %r13
000000010001e485	movq	0x10(%r13), %rbx
000000010001e489	movq	%rbx, %rax
000000010001e48c	cmpq	0x8(%r13), %rbx
000000010001e490	jne	0x10001e4a1
000000010001e492	movq	%r13, %rdi
000000010001e495	movq	%rbx, %rsi
000000010001e498	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h41e95bb8703263d1E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h41e95bb8703263d1
000000010001e49d	movq	0x10(%r13), %rax
000000010001e4a1	movq	(%r13), %rcx
000000010001e4a5	leaq	(%rax,%rax,2), %rdx
000000010001e4a9	shlq	$0x4, %rdx
000000010001e4ad	movq	-0x120(%rbp), %rsi
000000010001e4b4	movq	%rsi, (%rcx,%rdx)
000000010001e4b8	movq	-0x178(%rbp), %rsi
000000010001e4bf	movq	%rsi, 0x8(%rcx,%rdx)
000000010001e4c4	movq	%r14, 0x10(%rcx,%rdx)
000000010001e4c9	movq	-0x88(%rbp), %rsi
000000010001e4d0	movq	%rsi, 0x18(%rcx,%rdx)
000000010001e4d5	movq	-0x140(%rbp), %rsi
000000010001e4dc	movq	%rsi, 0x20(%rcx,%rdx)
000000010001e4e1	movq	-0x148(%rbp), %rsi
000000010001e4e8	movl	%esi, 0x28(%rcx,%rdx)
000000010001e4ec	movq	-0x150(%rbp), %rsi
000000010001e4f3	movl	%esi, 0x2c(%rcx,%rdx)
000000010001e4f7	incq	%rax
000000010001e4fa	movq	%rax, 0x10(%r13)
000000010001e4fe	cmpq	$0x0, -0xf0(%rbp)
000000010001e506	movq	-0x1c0(%rbp), %r15
000000010001e50d	je	0x10001e649
000000010001e513	movq	-0x1c8(%rbp), %rax
000000010001e51a	movq	(%rax), %r14
000000010001e51d	movq	0x8(%rax), %rax
000000010001e521	movq	-0x1b0(%rbp), %rsi
000000010001e528	subq	%rsi, %rax
000000010001e52b	jb	0x10001e8d5
000000010001e531	movq	0x10(%rbp), %rdx
000000010001e535	movq	0x10(%rdx), %rcx
000000010001e539	movq	0x18(%rdx), %rdx
000000010001e53d	addq	%rsi, %r14
000000010001e540	movq	%rcx, -0xd0(%rbp)
000000010001e547	movq	%rdx, -0xc8(%rbp)
000000010001e54e	movq	-0x1a8(%rbp), %rcx
000000010001e555	movq	%rcx, -0xc0(%rbp)
000000010001e55c	movq	-0x138(%rbp), %rcx
000000010001e563	movq	%rcx, -0xb8(%rbp)
000000010001e56a	movq	%r14, -0xb0(%rbp)
000000010001e571	movq	%rax, -0xa8(%rbp)
000000010001e578	movq	-0x128(%rbp), %rax
000000010001e57f	movw	%ax, -0xa0(%rbp)
000000010001e586	movl	-0xf4(%rbp), %eax
000000010001e58c	movw	%ax, -0x9e(%rbp)
000000010001e593	movzbl	-0x59(%rbp), %eax
000000010001e597	movb	%al, -0x9c(%rbp)
000000010001e59d	jmp	0x10001e5c8
000000010001e59f	nop
000000010001e5a0	movq	(%rdi), %rax
000000010001e5a3	movq	%rsi, %rcx
000000010001e5a6	shlq	$0x5, %rcx
000000010001e5aa	movq	%r13, (%rax,%rcx)
000000010001e5ae	movq	%r14, 0x8(%rax,%rcx)
000000010001e5b3	movq	0x28(%rbp), %rdx
000000010001e5b7	movq	%rdx, 0x10(%rax,%rcx)
000000010001e5bc	movq	%rbx, 0x18(%rax,%rcx)
000000010001e5c1	incq	%rsi
000000010001e5c4	movq	%rsi, 0x10(%rdi)
000000010001e5c8	leaq	-0x80(%rbp), %rdi
000000010001e5cc	leaq	-0xd0(%rbp), %rsi
000000010001e5d3	callq	__ZN5gimli4read8rnglists20RngListIter$LT$R$GT$4next17hc7d810ddd7ca0bc1E ## gimli::read::rnglists::RngListIter$LT$R$GT$::next::hc7d810ddd7ca0bc1
000000010001e5d8	movq	-0x80(%rbp), %rax
000000010001e5dc	movq	-0x78(%rbp), %r13
000000010001e5e0	movq	-0x70(%rbp), %r14
000000010001e5e4	cmpq	$0x1, %rax
000000010001e5e8	jne	0x10001e60c
000000010001e5ea	cmpq	%r14, %r13
000000010001e5ed	jae	0x10001e5c8
000000010001e5ef	movq	0x20(%rbp), %rdi
000000010001e5f3	movq	0x10(%rdi), %rsi
000000010001e5f7	cmpq	0x8(%rdi), %rsi
000000010001e5fb	jne	0x10001e5a0
000000010001e5fd	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
000000010001e602	movq	0x20(%rbp), %rdi
000000010001e606	movq	0x10(%rdi), %rsi
000000010001e60a	jmp	0x10001e5a0
000000010001e60c	cmpl	$0x2, %eax
000000010001e60f	jne	0x10001db03
000000010001e615	cmpb	$0x4b, %r13b
000000010001e619	je	0x10001db03
000000010001e61f	jmp	0x10001e8de
000000010001e624	leaq	-0xc8(%rbp), %rcx
000000010001e62b	movq	(%rcx), %rax
000000010001e62e	movq	0x8(%rcx), %rcx
000000010001e632	movq	%rcx, -0x90(%rbp)
000000010001e639	movq	%rax, -0x98(%rbp)
000000010001e640	movq	-0x68(%rbp), %rdi
000000010001e644	jmp	0x10001db47
000000010001e649	cmpq	$0x0, -0x110(%rbp)
000000010001e651	movq	-0x118(%rbp), %rax
000000010001e658	je	0x10001e697
000000010001e65a	testq	%rax, %rax
000000010001e65d	je	0x10001e697
000000010001e65f	movq	-0x100(%rbp), %rax
000000010001e666	cmpq	%rax, -0xe8(%rbp)
000000010001e66d	jae	0x10001db03
000000010001e673	movq	0x20(%rbp), %rdi
000000010001e677	movq	0x10(%rdi), %rsi
000000010001e67b	cmpq	0x8(%rdi), %rsi
000000010001e67f	jne	0x10001dacd
000000010001e685	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
000000010001e68a	movq	0x20(%rbp), %rdi
000000010001e68e	movq	0x10(%rdi), %rsi
000000010001e692	jmp	0x10001dacd
000000010001e697	cmpq	$0x0, -0x130(%rbp)
000000010001e69f	je	0x10001db03
000000010001e6a5	testq	%rax, %rax
000000010001e6a8	je	0x10001db03
000000010001e6ae	movq	-0x190(%rbp), %rax
000000010001e6b5	movq	-0xe8(%rbp), %rcx
000000010001e6bc	leaq	(%rcx,%rax), %r14
000000010001e6c0	cmpq	%r14, %rcx
000000010001e6c3	jae	0x10001db03
000000010001e6c9	movq	0x20(%rbp), %rdi
000000010001e6cd	movq	0x10(%rdi), %rsi
000000010001e6d1	cmpq	0x8(%rdi), %rsi
000000010001e6d5	jne	0x10001e6e4
000000010001e6d7	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
000000010001e6dc	movq	0x20(%rbp), %rdi
000000010001e6e0	movq	0x10(%rdi), %rsi
000000010001e6e4	movq	(%rdi), %rax
000000010001e6e7	movq	%rsi, %rcx
000000010001e6ea	shlq	$0x5, %rcx
000000010001e6ee	movq	-0xe8(%rbp), %rdx
000000010001e6f5	movq	%rdx, (%rax,%rcx)
000000010001e6f9	movq	%r14, 0x8(%rax,%rcx)
000000010001e6fe	jmp	0x10001daee
000000010001e703	movq	-0x88(%rbp), %rax
000000010001e70a	movq	%rax, -0x98(%rbp)
000000010001e711	movq	%rcx, -0x90(%rbp)
000000010001e718	jmp	0x10001e640
000000010001e71d	movq	-0x68(%rbp), %rdi
000000010001e721	movq	%rsi, %rdx
000000010001e724	jmp	0x10001e7a2
000000010001e726	movb	$0x0, -0x52(%rbp)
000000010001e72a	movw	$0x0, -0x54(%rbp)
000000010001e730	movl	$0x0, -0x58(%rbp)
000000010001e737	movq	%rdx, -0x51(%rbp)
000000010001e73b	movq	-0x58(%rbp), %rsi
000000010001e73f	leaq	-0x50(%rbp), %rcx
000000010001e743	movl	(%rcx), %eax
000000010001e745	movl	0x3(%rcx), %ecx
000000010001e748	leaq	-0x30(%rbp), %rdx
000000010001e74c	movl	%eax, (%rdx)
000000010001e74e	movl	%ecx, 0x3(%rdx)
000000010001e751	movq	%rsi, -0x168(%rbp)
000000010001e758	movq	%rsi, -0x38(%rbp)
000000010001e75c	movq	-0x31(%rbp), %rdx
000000010001e760	jmp	0x10001e79e
000000010001e762	movl	$0x0, -0x58(%rbp)
000000010001e769	movb	$0x0, -0x52(%rbp)
000000010001e76d	movw	$0x0, -0x54(%rbp)
000000010001e773	movl	-0x55(%rbp), %eax
000000010001e776	movl	%eax, -0x35(%rbp)
000000010001e779	movl	$0x0, -0x38(%rbp)
000000010001e780	movzbl	-0x32(%rbp), %eax
000000010001e784	shll	$0x10, %eax
000000010001e787	movzwl	-0x34(%rbp), %ecx
000000010001e78b	orl	%eax, %ecx
000000010001e78d	shlq	$0x20, %rcx
000000010001e791	movl	-0x38(%rbp), %eax
000000010001e794	orq	%rcx, %rax
000000010001e797	movq	%rax, -0x168(%rbp)
000000010001e79e	movq	-0x68(%rbp), %rdi
000000010001e7a2	movq	-0x168(%rbp), %rax
000000010001e7a9	shlq	$0x8, %rax
000000010001e7ad	orq	$0x13, %rax
000000010001e7b1	movq	%rax, -0x98(%rbp)
000000010001e7b8	movq	%rdx, -0x90(%rbp)
000000010001e7bf	movzbl	-0x98(%rbp), %r13d
000000010001e7c7	cmpb	$0x4b, %r13b
000000010001e7cb	je	0x10001db60
000000010001e7d1	jmp	0x10001e90e
000000010001e7d6	movq	-0x128(%rbp), %rax
000000010001e7dd	movb	%al, -0x38(%rbp)
000000010001e7e0	movb	$0x17, %cl
000000010001e7e2	jmp	0x10001e7fb
000000010001e7e4	movb	$0x0, -0x38(%rbp)
000000010001e7e8	movw	$0x0, -0x33(%rbp)
000000010001e7ee	movl	$0x0, -0x37(%rbp)
000000010001e7f5	movq	%rax, -0x31(%rbp)
000000010001e7f9	movb	$0x13, %cl
000000010001e7fb	movq	-0x31(%rbp), %rax
000000010001e7ff	movl	-0x38(%rbp), %edx
000000010001e802	movl	-0x35(%rbp), %esi
000000010001e805	leaq	-0x97(%rbp), %rdi
000000010001e80c	movl	%esi, 0x3(%rdi)
000000010001e80f	movl	%edx, (%rdi)
000000010001e811	movb	%cl, -0x98(%rbp)
000000010001e817	movq	%rax, -0x90(%rbp)
000000010001e81e	jmp	0x10001e640
000000010001e823	movb	$0x0, -0x52(%rbp)
000000010001e827	movw	$0x0, -0x54(%rbp)
000000010001e82d	movl	$0x0, -0x58(%rbp)
000000010001e834	movq	%rax, -0x51(%rbp)
000000010001e838	movq	-0x58(%rbp), %rax
000000010001e83c	leaq	-0x50(%rbp), %rdx
000000010001e840	movl	(%rdx), %ecx
000000010001e842	movl	0x3(%rdx), %edx
000000010001e845	leaq	-0x30(%rbp), %rsi
000000010001e849	movl	%ecx, (%rsi)
000000010001e84b	movl	%edx, 0x3(%rsi)
000000010001e84e	movq	%rax, -0x38(%rbp)
000000010001e852	jmp	0x10001e7f9
000000010001e854	movb	$0x4b, (%r13)
000000010001e859	jmp	0x10001e8a7
000000010001e85b	movl	-0xcf(%rbp), %ecx
000000010001e861	movl	-0xcc(%rbp), %edx
000000010001e867	movl	%edx, -0x7d(%rbp)
000000010001e86a	movl	%ecx, -0x80(%rbp)
000000010001e86d	movq	-0xc8(%rbp), %rcx
000000010001e874	movl	-0x80(%rbp), %edx
000000010001e877	movl	-0x7d(%rbp), %esi
000000010001e87a	movl	%esi, 0x4(%r13)
000000010001e87e	movl	%edx, 0x1(%r13)
000000010001e882	jmp	0x10001e89f
000000010001e884	movl	-0xcf(%rbp), %ecx
000000010001e88a	movl	-0xcc(%rbp), %edx
000000010001e890	movl	%edx, 0x4(%r13)
000000010001e894	movl	%ecx, 0x1(%r13)
000000010001e898	movq	-0xc8(%rbp), %rcx
000000010001e89f	movb	%al, (%r13)
000000010001e8a3	movq	%rcx, 0x8(%r13)
000000010001e8a7	addq	$0x1b8, %rsp                    ## imm = 0x1B8
000000010001e8ae	popq	%rbx
000000010001e8af	popq	%r12
000000010001e8b1	popq	%r13
000000010001e8b3	popq	%r14
000000010001e8b5	popq	%r15
000000010001e8b7	popq	%rbp
000000010001e8b8	retq
000000010001e8b9	movq	-0xcf(%rbp), %rcx
000000010001e8c0	movq	-0xc8(%rbp), %rdx
000000010001e8c7	movq	%rdx, 0x8(%r13)
000000010001e8cb	movq	%rcx, 0x1(%r13)
000000010001e8cf	movb	%al, (%r13)
000000010001e8d3	jmp	0x10001e8a7
000000010001e8d5	movb	$0x13, %r13b
000000010001e8d8	xorl	%eax, %eax
000000010001e8da	xorl	%ecx, %ecx
000000010001e8dc	jmp	0x10001e8ec
000000010001e8de	movq	%r13, %rcx
000000010001e8e1	shrq	$0x8, %rcx
000000010001e8e5	movq	%r13, %rax
000000010001e8e8	shrq	$0x10, %rax
000000010001e8ec	movq	-0x68(%rbp), %rdi
000000010001e8f0	movb	%cl, -0x97(%rbp)
000000010001e8f6	movl	%eax, -0x96(%rbp)
000000010001e8fc	shrq	$0x20, %rax
000000010001e900	movw	%ax, -0x92(%rbp)
000000010001e907	movq	%r14, -0x90(%rbp)
000000010001e90e	leaq	-0x97(%rbp), %rcx
000000010001e915	movq	(%rcx), %rax
000000010001e918	movq	0x7(%rcx), %rcx
000000010001e91c	movq	%rcx, 0x8(%rdi)
000000010001e920	movq	%rax, 0x1(%rdi)
000000010001e924	movb	%r13b, (%rdi)
000000010001e927	jmp	0x10001e8a7
000000010001e92c	cmc
000000010001e92e	.byte 0xff #bad opcode
000000010001e92f	pushq	%rsp
000000010001e931	.byte 0xf3 #bad opcode
000000010001e932	.byte 0xff #bad opcode
000000010001e933	pushq	%rsp
000000010001e935	.byte 0xf3 #bad opcode
000000010001e936	.byte 0xff #bad opcode
000000010001e937	pushq	%rsp
000000010001e939	.byte 0xf3 #bad opcode
000000010001e93a	.byte 0xff #bad opcode
000000010001e93b	pushq	%rsp
000000010001e93d	.byte 0xf3 #bad opcode
000000010001e93e	.byte 0xff #bad opcode
000000010001e93f	pushq	%rsp
000000010001e941	.byte 0xf3 #bad opcode
000000010001e942	.byte 0xff #bad opcode
000000010001e943	pushq	%rsp
000000010001e945	.byte 0xf3 #bad opcode
000000010001e946	.byte 0xff #bad opcode
000000010001e947	pushq	%rsp
000000010001e949	.byte 0xf3 #bad opcode
000000010001e94a	.byte 0xff #bad opcode
000000010001e94b	pushq	%rsp
000000010001e94d	.byte 0xf3 #bad opcode
000000010001e94e	.byte 0xff #bad opcode
000000010001e94f	pushq	%rsp
000000010001e951	.byte 0xf3 #bad opcode
000000010001e952	.byte 0xff #bad opcode
000000010001e953	pushq	%rsp
000000010001e955	.byte 0xf3 #bad opcode
000000010001e956	.byte 0xff #bad opcode
000000010001e957	pushq	%rsp
000000010001e959	.byte 0xf3 #bad opcode
000000010001e95a	.byte 0xff #bad opcode
000000010001e95b	pushq	%rsp
000000010001e95d	.byte 0xf3 #bad opcode
000000010001e95e	.byte 0xff #bad opcode
000000010001e95f	pushq	%rsp
000000010001e961	.byte 0xf3 #bad opcode
000000010001e962	.byte 0xff #bad opcode
000000010001e963	ljmpl	*0x3afffff5(%rbx)
000000010001e969	idivb	%bh
000000010001e96b	pushq	%rsp
000000010001e96d	.byte 0xf3 #bad opcode
000000010001e96e	.byte 0xff #bad opcode
000000010001e96f	pushq	%rsp
000000010001e971	.byte 0xf3 #bad opcode
000000010001e972	.byte 0xff #bad opcode
000000010001e973	pushq	%rsp
000000010001e975	.byte 0xf3 #bad opcode
000000010001e976	.byte 0xff #bad opcode
000000010001e977	pushq	%rsp
000000010001e979	.byte 0xf3 #bad opcode
000000010001e97a	.byte 0xff #bad opcode
000000010001e97b	pushq	%rsp
000000010001e97d	.byte 0xf3 #bad opcode
000000010001e97e	.byte 0xff #bad opcode
000000010001e97f	pushq	%rsp
000000010001e981	.byte 0xf3 #bad opcode
000000010001e982	.byte 0xff #bad opcode
000000010001e983	pushq	%rsp
000000010001e985	.byte 0xf3 #bad opcode
000000010001e986	.byte 0xff #bad opcode
000000010001e987	pushq	%rsp
000000010001e989	.byte 0xf3 #bad opcode
000000010001e98a	.byte 0xff #bad opcode
000000010001e98b	pushq	%rsp
000000010001e98d	.byte 0xf3 #bad opcode
000000010001e98e	.byte 0xff #bad opcode
000000010001e98f	pushq	%rsp
000000010001e991	.byte 0xf3 #bad opcode
000000010001e992	.byte 0xff #bad opcode
000000010001e993	pushq	%rsp
000000010001e995	.byte 0xf3 #bad opcode
000000010001e996	.byte 0xff #bad opcode
000000010001e997	pushq	%rsp
000000010001e999	.byte 0xf3 #bad opcode
000000010001e99a	.byte 0xff #bad opcode
000000010001e99b	pushq	%rsp
000000010001e99d	.byte 0xf3 #bad opcode
000000010001e99e	.byte 0xff #bad opcode
000000010001e99f	pushq	%rsp
000000010001e9a1	.byte 0xf3 #bad opcode
000000010001e9a2	.byte 0xff #bad opcode
000000010001e9a3	pushq	%rsp
000000010001e9a5	.byte 0xf3 #bad opcode
000000010001e9a6	.byte 0xff #bad opcode
000000010001e9a7	pushq	%rsp
000000010001e9a9	.byte 0xf3 #bad opcode
000000010001e9aa	.byte 0xff #bad opcode
000000010001e9ab	pushq	%rsp
000000010001e9ad	.byte 0xf3 #bad opcode
000000010001e9ae	.byte 0xff #bad opcode
000000010001e9af	pushq	%rsp
000000010001e9b1	.byte 0xf3 #bad opcode
000000010001e9b2	.byte 0xff #bad opcode
000000010001e9b3	pushq	%rsp
000000010001e9b5	.byte 0xf3 #bad opcode
000000010001e9b6	.byte 0xff #bad opcode
000000010001e9b7	pushq	%rsp
000000010001e9b9	.byte 0xf3 #bad opcode
000000010001e9ba	.byte 0xff #bad opcode
000000010001e9bb	pushq	%rsp
000000010001e9bd	.byte 0xf3 #bad opcode
000000010001e9be	.byte 0xff #bad opcode
000000010001e9bf	pushq	%rsp
000000010001e9c1	.byte 0xf3 #bad opcode
000000010001e9c2	.byte 0xff #bad opcode
000000010001e9c3	pushq	%rsp
000000010001e9c5	.byte 0xf3 #bad opcode
000000010001e9c6	.byte 0xff #bad opcode
000000010001e9c7	pushq	%rsp
000000010001e9c9	.byte 0xf3 #bad opcode
000000010001e9ca	.byte 0xff #bad opcode
000000010001e9cb	pushq	%rsp
000000010001e9cd	.byte 0xf3 #bad opcode
000000010001e9ce	.byte 0xff #bad opcode
000000010001e9cf	pushq	%rsp
000000010001e9d1	.byte 0xf3 #bad opcode
000000010001e9d2	.byte 0xff #bad opcode
000000010001e9d3	pushq	%rsp
000000010001e9d5	.byte 0xf3 #bad opcode
000000010001e9d6	.byte 0xff #bad opcode
000000010001e9d7	pushq	%rsp
000000010001e9d9	.byte 0xf3 #bad opcode
000000010001e9da	.byte 0xff #bad opcode
000000010001e9db	pushq	%rsp
000000010001e9dd	.byte 0xf3 #bad opcode
000000010001e9de	.byte 0xff #bad opcode
000000010001e9df	pushq	%rsp
000000010001e9e1	.byte 0xf3 #bad opcode
000000010001e9e2	.byte 0xff #bad opcode
000000010001e9e3	ljmpl	*-0xc(%rdi)
000000010001e9e6	.byte 0xff #bad opcode
000000010001e9e7	pushq	%rsp
000000010001e9e9	.byte 0xf3 #bad opcode
000000010001e9ea	.byte 0xff #bad opcode
000000010001e9eb	pushq	%rsp
000000010001e9ed	.byte 0xf3 #bad opcode
000000010001e9ee	.byte 0xff #bad opcode
000000010001e9ef	pushq	%rsp
000000010001e9f1	.byte 0xf3 #bad opcode
000000010001e9f2	.byte 0xff #bad opcode
000000010001e9f3	pushq	%rsp
000000010001e9f5	.byte 0xf3 #bad opcode
000000010001e9f6	.byte 0xff #bad opcode
000000010001e9f7	pushq	%rsp
000000010001e9f9	.byte 0xf3 #bad opcode
000000010001e9fa	.byte 0xff #bad opcode
000000010001e9fb	pushq	%rsp
000000010001e9fd	.byte 0xf3 #bad opcode
000000010001e9fe	.byte 0xff #bad opcode
000000010001e9ff	pushq	%rsp
000000010001ea01	.byte 0xf3 #bad opcode
000000010001ea02	.byte 0xff #bad opcode
000000010001ea03	pushq	%rsp
000000010001ea05	.byte 0xf3 #bad opcode
000000010001ea06	.byte 0xff #bad opcode
000000010001ea07	pushq	%rsp
000000010001ea09	.byte 0xf3 #bad opcode
000000010001ea0a	.byte 0xff #bad opcode
000000010001ea0b	pushq	%rsp
000000010001ea0d	.byte 0xf3 #bad opcode
000000010001ea0e	.byte 0xff #bad opcode
000000010001ea0f	pushq	%rsp
000000010001ea11	.byte 0xf3 #bad opcode
000000010001ea12	.byte 0xff #bad opcode
000000010001ea13	pushq	%rsp
000000010001ea15	.byte 0xf3 #bad opcode
000000010001ea16	.byte 0xff #bad opcode
000000010001ea17	pushq	%rsp
000000010001ea19	.byte 0xf3 #bad opcode
000000010001ea1a	.byte 0xff #bad opcode
000000010001ea1b	pushq	%rsp
000000010001ea1d	.byte 0xf3 #bad opcode
000000010001ea1e	.byte 0xff #bad opcode
000000010001ea1f	pushq	%rsp
000000010001ea21	.byte 0xf3 #bad opcode
000000010001ea22	.byte 0xff #bad opcode
000000010001ea23	pushq	%rsp
000000010001ea25	.byte 0xf3 #bad opcode
000000010001ea26	.byte 0xff #bad opcode
000000010001ea27	pushq	%rsp
000000010001ea29	.byte 0xf3 #bad opcode
000000010001ea2a	.byte 0xff #bad opcode
000000010001ea2b	pushq	%rsp
000000010001ea2d	.byte 0xf3 #bad opcode
000000010001ea2e	.byte 0xff #bad opcode
000000010001ea2f	pushq	%rsp
000000010001ea31	.byte 0xf3 #bad opcode
000000010001ea32	.byte 0xff #bad opcode
000000010001ea33	pushq	%rsp
000000010001ea35	.byte 0xf3 #bad opcode
000000010001ea36	.byte 0xff #bad opcode
000000010001ea37	pushq	%rsp
000000010001ea39	.byte 0xf3 #bad opcode
000000010001ea3a	.byte 0xff #bad opcode
000000010001ea3b	ljmpl	*-0xc(%rdi)
000000010001ea3e	.byte 0xff #bad opcode
000000010001ea3f	pushq	%rsp
000000010001ea41	.byte 0xf3 #bad opcode
000000010001ea42	.byte 0xff #bad opcode
000000010001ea43	pushq	%rsp
000000010001ea45	.byte 0xf3 #bad opcode
000000010001ea46	.byte 0xff #bad opcode
000000010001ea47	pushq	%rsp
000000010001ea49	.byte 0xf3 #bad opcode
000000010001ea4a	.byte 0xff #bad opcode
000000010001ea4b	pushq	%rsp
000000010001ea4d	.byte 0xf3 #bad opcode
000000010001ea4e	.byte 0xff #bad opcode
000000010001ea4f	pushq	%rsp
000000010001ea51	.byte 0xf3 #bad opcode
000000010001ea52	.byte 0xff #bad opcode
000000010001ea53	pushq	%rsp
000000010001ea55	.byte 0xf3 #bad opcode
000000010001ea56	.byte 0xff #bad opcode
000000010001ea57	pushq	%rsp
000000010001ea59	.byte 0xf3 #bad opcode
000000010001ea5a	.byte 0xff #bad opcode
000000010001ea5b	pushq	%rsp
000000010001ea5d	.byte 0xf3 #bad opcode
000000010001ea5e	.byte 0xff #bad opcode
000000010001ea5f	pushq	%rsp
000000010001ea61	.byte 0xf3 #bad opcode
000000010001ea62	.byte 0xff #bad opcode
000000010001ea63	pushq	%rsp
000000010001ea65	.byte 0xf3 #bad opcode
000000010001ea66	.byte 0xff #bad opcode
000000010001ea67	pushq	%rsp
000000010001ea69	.byte 0xf3 #bad opcode
000000010001ea6a	.byte 0xff #bad opcode
000000010001ea6b	pushq	%rsp
000000010001ea6d	.byte 0xf3 #bad opcode
000000010001ea6e	.byte 0xff #bad opcode
000000010001ea6f	pushq	%rsp
000000010001ea71	.byte 0xf3 #bad opcode
000000010001ea72	.byte 0xff #bad opcode
000000010001ea73	callq	*%rdx
000000010001ea75	idivb	%bh
000000010001ea77	pushq	%rsp
000000010001ea79	.byte 0xf3 #bad opcode
000000010001ea7a	.byte 0xff #bad opcode
000000010001ea7b	ljmpl	*(%rbx)
000000010001ea7d	idivl	%edi
000000010001ea7f	callq	*-0x9(%rbp)
000000010001ea82	.byte 0xff #bad opcode
000000010001ea83	pushq	-0x83a0001(%rdi,%rsi,8)
000000010001ea8a	.byte 0xff #bad opcode
000000010001ea8b	decl	%esi
000000010001ea8d	idivl	%edi
000000010001ea8f	callq	*%rdi
000000010001ea91	idivl	%edi
000000010001ea93	.byte 0xff #bad opcode
000000010001ea94	inl	%dx, %eax
000000010001ea95	cmc
000000010001ea96	.byte 0xff #bad opcode
000000010001ea97	.byte 0xff #bad opcode
000000010001ea98	fcompi	%st(7), %st
000000010001ea9a	.byte 0xff #bad opcode
000000010001ea9b	.byte 0xff #bad opcode
000000010001ea9c	inl	%dx, %eax
000000010001ea9d	cmc
000000010001ea9e	.byte 0xff #bad opcode
000000010001ea9f	jmpq	*%rcx
000000010001eaa1	idivl	%edi
000000010001eaa3	pushq	%rsp
000000010001eaa5	idivl	%edi
000000010001eaa7	incl	(%rdi)
000000010001eaa9	clc
000000010001eaaa	.byte 0xff #bad opcode
000000010001eaab	lcalll	*-0xa(%rsi)
000000010001eaae	.byte 0xff #bad opcode
000000010001eaaf	lcalll	*(%rcx)
000000010001eab1	clc
000000010001eab2	.byte 0xff #bad opcode
000000010001eab3	lcalll	*-0xa(%rsi)
000000010001eab6	.byte 0xff #bad opcode
000000010001eab7	pushq	0x6efffff5(%rip)
000000010001eabd	clc
000000010001eabe	.byte 0xff #bad opcode
000000010001eabf	lcalll	*(%rsi)
000000010001eac1	std
000000010001eac2	.byte 0xff #bad opcode
000000010001eac3	incl	0x1efffff8(%rsi)
000000010001eac9	std
000000010001eaca	.byte 0xff #bad opcode
000000010001eacb	lcalll	*(%rsi)
000000010001eacd	std
000000010001eace	.byte 0xff #bad opcode
000000010001eacf	lcalll	*(%rsi)
000000010001ead1	std
000000010001ead2	.byte 0xff #bad opcode
000000010001ead3	ljmpl	*0x7dfffff8(%rdi)
000000010001ead9	hlt
000000010001eada	.byte 0xff #bad opcode
000000010001eadb	.byte 0xff #bad opcode
000000010001eadc	sti
000000010001eadd	idivl	%edi
000000010001eadf	.byte 0xff #bad opcode
000000010001eae0	.byte 0xfe #bad opcode
000000010001eae1	cld
000000010001eae2	.byte 0xff #bad opcode
000000010001eae3	callq	*(%rbx)
000000010001eae5	clc
000000010001eae6	.byte 0xff #bad opcode
000000010001eae7	.byte 0xff #bad opcode
000000010001eae8	.byte 0xfe #bad opcode
000000010001eae9	cld
000000010001eaea	.byte 0xff #bad opcode
000000010001eaeb	.byte 0xff #bad opcode
000000010001eaec	.byte 0xfe #bad opcode
000000010001eaed	cld
000000010001eaee	.byte 0xff #bad opcode
000000010001eaef	.byte 0xff #bad opcode
000000010001eaf0	.byte 0xfe #bad opcode
000000010001eaf1	cld
000000010001eaf2	.byte 0xff #bad opcode
000000010001eaf3	.byte 0xff #bad opcode
000000010001eaf4	cmpb	$-0x8, %al
000000010001eaf6	.byte 0xff #bad opcode
000000010001eaf7	decl	(%rdi)
000000010001eaf9	.byte 0x1f #bad opcode
000000010001eafa	testb	%al, (%rax)
000000010001eafc	addb	%al, (%rax)
000000010001eafe	addb	%al, (%rax)
__ZN9addr2line8function9name_attr17hddb3ff298bb6b83bE:
000000010001eb00	pushq	%rbp
000000010001eb01	movq	%rsp, %rbp
000000010001eb04	pushq	%r15
000000010001eb06	pushq	%r14
000000010001eb08	pushq	%r13
000000010001eb0a	pushq	%r12
000000010001eb0c	pushq	%rbx
000000010001eb0d	subq	$0x28, %rsp
000000010001eb11	movq	%rdi, %r14
000000010001eb14	movq	0x18(%rbp), %r13
000000010001eb18	testq	%r13, %r13
000000010001eb1b	je	0x10001eb82
000000010001eb1d	movq	%r9, %rbx
000000010001eb20	movq	%rdx, %rax
000000010001eb23	movq	0x10(%rbp), %r15
000000010001eb27	cmpq	$0xd, %rsi
000000010001eb2b	je	0x10001eb93
000000010001eb2d	cmpq	$0xe, %rsi
000000010001eb31	je	0x10001eba5
000000010001eb33	cmpq	$0xf, %rsi
000000010001eb37	jne	0x10001eb82
000000010001eb39	cmpq	$0x0, 0xd0(%r15)
000000010001eb41	je	0x10001eb82
000000010001eb43	leaq	-0x40(%rbp), %rdi
000000010001eb47	movq	%rbx, %rsi
000000010001eb4a	movq	%rax, %rdx
000000010001eb4d	movl	$0x1, %ecx
000000010001eb52	callq	__ZN9addr2line16Context$LT$R$GT$9find_unit17h6f79f3fa12b4b7a6E ## addr2line::Context$LT$R$GT$::find_unit::h6f79f3fa12b4b7a6
000000010001eb57	cmpq	$0x0, -0x40(%rbp)
000000010001eb5c	movq	-0x38(%rbp), %rdx
000000010001eb60	movq	-0x30(%rbp), %rcx
000000010001eb64	jne	0x10001ebca
000000010001eb66	movq	0xd0(%r15), %r9
000000010001eb6d	addq	$0x10, %r9
000000010001eb71	movq	%r13, (%rsp)
000000010001eb75	movq	%r14, %rdi
000000010001eb78	movl	$0x1, %esi
000000010001eb7d	movq	%rbx, %r8
000000010001eb80	jmp	0x10001ebeb
000000010001eb82	movq	$0x0, 0x8(%r14)
000000010001eb8a	movq	$0x0, (%r14)
000000010001eb91	jmp	0x10001ebf0
000000010001eb93	movq	%r13, (%rsp)
000000010001eb97	movzbl	%cl, %esi
000000010001eb9a	movq	%r14, %rdi
000000010001eb9d	movq	%r8, %rdx
000000010001eba0	movq	%rax, %rcx
000000010001eba3	jmp	0x10001ebe5
000000010001eba5	movzbl	%cl, %r12d
000000010001eba9	leaq	-0x40(%rbp), %rdi
000000010001ebad	movq	%rbx, %rsi
000000010001ebb0	movq	%rax, %rdx
000000010001ebb3	movl	%r12d, %ecx
000000010001ebb6	callq	__ZN9addr2line16Context$LT$R$GT$9find_unit17h6f79f3fa12b4b7a6E ## addr2line::Context$LT$R$GT$::find_unit::h6f79f3fa12b4b7a6
000000010001ebbb	cmpq	$0x0, -0x40(%rbp)
000000010001ebc0	movq	-0x38(%rbp), %rdx
000000010001ebc4	movq	-0x30(%rbp), %rcx
000000010001ebc8	je	0x10001ebdb
000000010001ebca	movq	%rdx, 0x8(%r14)
000000010001ebce	movq	%rcx, 0x10(%r14)
000000010001ebd2	movq	$0x1, (%r14)
000000010001ebd9	jmp	0x10001ebf0
000000010001ebdb	movq	%r13, (%rsp)
000000010001ebdf	movq	%r14, %rdi
000000010001ebe2	movl	%r12d, %esi
000000010001ebe5	movq	%rbx, %r8
000000010001ebe8	movq	%r15, %r9
000000010001ebeb	callq	__ZN9addr2line8function10name_entry17hfec6a7f8da302182E ## addr2line::function::name_entry::hfec6a7f8da302182
000000010001ebf0	addq	$0x28, %rsp
000000010001ebf4	popq	%rbx
000000010001ebf5	popq	%r12
000000010001ebf7	popq	%r13
000000010001ebf9	popq	%r14
000000010001ebfb	popq	%r15
000000010001ebfd	popq	%rbp
000000010001ebfe	retq
000000010001ebff	nop
__ZN3std2rt19lang_start_internal17h4f6dde0e5153fc54E:
000000010001ec00	pushq	%rbp
000000010001ec01	movq	%rsp, %rbp
000000010001ec04	pushq	%r15
000000010001ec06	pushq	%r14
000000010001ec08	pushq	%r13
000000010001ec0a	pushq	%r12
000000010001ec0c	pushq	%rbx
000000010001ec0d	subq	$0x88, %rsp
000000010001ec14	movl	%r8d, %r15d
000000010001ec17	movq	%rsi, -0xa8(%rbp)
000000010001ec1e	movq	%rdi, %r14
000000010001ec21	xorl	%edi, %edi
000000010001ec23	movl	$0x1, %esi
000000010001ec28	xorl	%eax, %eax
000000010001ec2a	callq	0x10004279c                     ## symbol stub for: _fcntl
000000010001ec2f	cmpl	$-0x1, %eax
000000010001ec32	jne	0x10001ec5c
000000010001ec34	callq	0x10004274e                     ## symbol stub for: ___error
000000010001ec39	cmpl	$0x9, (%rax)
000000010001ec3c	jne	0x10001ec5c
000000010001ec3e	leaq	0x26591(%rip), %rdi
000000010001ec45	movl	$0x2, %esi
000000010001ec4a	xorl	%edx, %edx
000000010001ec4c	xorl	%eax, %eax
000000010001ec4e	callq	0x1000427e4                     ## symbol stub for: _open
000000010001ec53	cmpl	$-0x1, %eax
000000010001ec56	je	0x10001f0f6
000000010001ec5c	movl	$0x1, %edi
000000010001ec61	movl	$0x1, %esi
000000010001ec66	xorl	%eax, %eax
000000010001ec68	callq	0x10004279c                     ## symbol stub for: _fcntl
000000010001ec6d	cmpl	$-0x1, %eax
000000010001ec70	jne	0x10001ec9a
000000010001ec72	callq	0x10004274e                     ## symbol stub for: ___error
000000010001ec77	cmpl	$0x9, (%rax)
000000010001ec7a	jne	0x10001ec9a
000000010001ec7c	leaq	0x26553(%rip), %rdi
000000010001ec83	movl	$0x2, %esi
000000010001ec88	xorl	%edx, %edx
000000010001ec8a	xorl	%eax, %eax
000000010001ec8c	callq	0x1000427e4                     ## symbol stub for: _open
000000010001ec91	cmpl	$-0x1, %eax
000000010001ec94	je	0x10001f0f6
000000010001ec9a	movl	$0x2, %edi
000000010001ec9f	movl	$0x1, %esi
000000010001eca4	xorl	%eax, %eax
000000010001eca6	callq	0x10004279c                     ## symbol stub for: _fcntl
000000010001ecab	cmpl	$-0x1, %eax
000000010001ecae	jne	0x10001ecd8
000000010001ecb0	callq	0x10004274e                     ## symbol stub for: ___error
000000010001ecb5	cmpl	$0x9, (%rax)
000000010001ecb8	jne	0x10001ecd8
000000010001ecba	leaq	0x26515(%rip), %rdi
000000010001ecc1	movl	$0x2, %esi
000000010001ecc6	xorl	%edx, %edx
000000010001ecc8	xorl	%eax, %eax
000000010001ecca	callq	0x1000427e4                     ## symbol stub for: _open
000000010001eccf	cmpl	$-0x1, %eax
000000010001ecd2	je	0x10001f0f6
000000010001ecd8	cmpb	$0x3, %r15b
000000010001ecdc	ja	0x10001f0fb
000000010001ece2	movl	$0x1, %esi
000000010001ece7	movzbl	%r15b, %eax
000000010001eceb	leaq	0x542(%rip), %rcx
000000010001ecf2	movslq	(%rcx,%rax,4), %rax
000000010001ecf6	addq	%rcx, %rax
000000010001ecf9	jmpq	*%rax
000000010001ecfb	movb	$0x1, 0x2d50e(%rip)
000000010001ed02	jmp	0x10001ed21
000000010001ed04	xorl	%esi, %esi
000000010001ed06	movb	$0x1, 0x2d503(%rip)
000000010001ed0d	movl	$0xd, %edi
000000010001ed12	callq	0x100042868                     ## symbol stub for: _signal
000000010001ed17	cmpq	$-0x1, %rax
000000010001ed1b	je	0x10001f0b2
000000010001ed21	xorps	%xmm0, %xmm0
000000010001ed24	movaps	%xmm0, -0x70(%rbp)
000000010001ed28	leaq	-0x70(%rbp), %rdx
000000010001ed2c	movl	$0xb, %edi
000000010001ed31	xorl	%esi, %esi
000000010001ed33	callq	0x10004285c                     ## symbol stub for: _sigaction
000000010001ed38	cmpq	$0x0, -0x70(%rbp)
000000010001ed3d	jne	0x10001ed68
000000010001ed3f	movl	$0x41, -0x64(%rbp)
000000010001ed46	leaq	__ZN3std3sys4unix14stack_overflow3imp14signal_handler17h09e630a5a350602cE(%rip), %rax ## std::sys::unix::stack_overflow::imp::signal_handler::h09e630a5a350602c
000000010001ed4d	movq	%rax, -0x70(%rbp)
000000010001ed51	leaq	-0x70(%rbp), %rsi
000000010001ed55	movl	$0xb, %edi
000000010001ed5a	xorl	%edx, %edx
000000010001ed5c	callq	0x10004285c                     ## symbol stub for: _sigaction
000000010001ed61	movb	$0x1, 0x2d498(%rip)
000000010001ed68	leaq	-0x70(%rbp), %rdx
000000010001ed6c	movl	$0xa, %edi
000000010001ed71	xorl	%esi, %esi
000000010001ed73	callq	0x10004285c                     ## symbol stub for: _sigaction
000000010001ed78	cmpq	$0x0, -0x70(%rbp)
000000010001ed7d	jne	0x10001eda8
000000010001ed7f	movl	$0x41, -0x64(%rbp)
000000010001ed86	leaq	__ZN3std3sys4unix14stack_overflow3imp14signal_handler17h09e630a5a350602cE(%rip), %rax ## std::sys::unix::stack_overflow::imp::signal_handler::h09e630a5a350602c
000000010001ed8d	movq	%rax, -0x70(%rbp)
000000010001ed91	leaq	-0x70(%rbp), %rsi
000000010001ed95	movl	$0xa, %edi
000000010001ed9a	xorl	%edx, %edx
000000010001ed9c	callq	0x10004285c                     ## symbol stub for: _sigaction
000000010001eda1	movb	$0x1, 0x2d458(%rip)
000000010001eda8	callq	__ZN3std3sys4unix14stack_overflow3imp12make_handler17hdba3d388867d2683E ## std::sys::unix::stack_overflow::imp::make_handler::hdba3d388867d2683
000000010001edad	movq	%rax, __ZN3std3sys4unix14stack_overflow3imp13MAIN_ALTSTACK17hfff2f1a25dac3a0eE.0(%rip) ## std::sys::unix::stack_overflow::imp::MAIN_ALTSTACK::hfff2f1a25dac3a0e (.0)
000000010001edb4	movl	$0x0, -0x34(%rbp)
000000010001edbb	movq	$0x0, -0x3c(%rbp)
000000010001edc3	movq	$0x0, -0x44(%rbp)
000000010001edcb	movq	$0x0, -0x4c(%rbp)
000000010001edd3	movq	$0x0, -0x54(%rbp)
000000010001eddb	movq	$0x0, -0x5c(%rbp)
000000010001ede3	movq	$0x0, -0x64(%rbp)
000000010001edeb	movq	$0x0, -0x6c(%rbp)
000000010001edf3	movl	$0x6e69616d, -0x70(%rbp)        ## imm = 0x6E69616D
000000010001edfa	leaq	-0x70(%rbp), %rdi
000000010001edfe	callq	0x10004284a                     ## symbol stub for: _pthread_setname_np
000000010001ee03	movl	$0x1d, %edi
000000010001ee08	callq	0x10004287a                     ## symbol stub for: _sysconf
000000010001ee0d	movq	%rax, __ZN3std3sys4unix6thread5guard9PAGE_SIZE17ha20564f71510d8a6E.0(%rip) ## std::sys::unix::thread::guard::PAGE_SIZE::ha20564f71510d8a6 (.0)
000000010001ee14	movq	__ZN3std3sys4unix6thread5guard9PAGE_SIZE17ha20564f71510d8a6E.0(%rip), %r13 ## std::sys::unix::thread::guard::PAGE_SIZE::ha20564f71510d8a6 (.0)
000000010001ee1b	testq	%r13, %r13
000000010001ee1e	je	0x10001ef5a
000000010001ee24	movq	%rax, %r12
000000010001ee27	callq	0x100042844                     ## symbol stub for: _pthread_self
000000010001ee2c	movq	%rax, %r15
000000010001ee2f	movq	%rax, %rdi
000000010001ee32	callq	0x1000427f6                     ## symbol stub for: _pthread_get_stackaddr_np
000000010001ee37	movq	%rax, %rbx
000000010001ee3a	movq	%r15, %rdi
000000010001ee3d	callq	0x1000427fc                     ## symbol stub for: _pthread_get_stacksize_np
000000010001ee42	subq	%rax, %rbx
000000010001ee45	movq	%rbx, %rax
000000010001ee48	xorl	%edx, %edx
000000010001ee4a	divq	%r13
000000010001ee4d	subq	%rdx, %r13
000000010001ee50	testq	%rdx, %rdx
000000010001ee53	cmoveq	%rdx, %r13
000000010001ee57	addq	%rbx, %r13
000000010001ee5a	movq	%r13, %rdi
000000010001ee5d	movq	%r12, %rsi
000000010001ee60	movl	$0x3, %edx
000000010001ee65	movl	$0x1012, %ecx                   ## imm = 0x1012
000000010001ee6a	movl	$0xffffffff, %r8d               ## imm = 0xFFFFFFFF
000000010001ee70	xorl	%r9d, %r9d
000000010001ee73	callq	0x1000427d2                     ## symbol stub for: _mmap
000000010001ee78	cmpq	$-0x1, %rax
000000010001ee7c	je	0x10001ef72
000000010001ee82	cmpq	%r13, %rax
000000010001ee85	jne	0x10001ef72
000000010001ee8b	movq	%r13, %rdi
000000010001ee8e	movq	%r12, %rsi
000000010001ee91	xorl	%edx, %edx
000000010001ee93	callq	0x1000427d8                     ## symbol stub for: _mprotect
000000010001ee98	testl	%eax, %eax
000000010001ee9a	jne	0x10001efe1
000000010001eea0	leaq	0x26abd(%rip), %rsi
000000010001eea7	leaq	-0xa0(%rbp), %r15
000000010001eeae	movl	$0x4, %edx
000000010001eeb3	movq	%r15, %rdi
000000010001eeb6	callq	__ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hef8c413dc80fb552E ## _$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$::spec_new_impl::hef8c413dc80fb552
000000010001eebb	movq	-0xa0(%rbp), %rbx
000000010001eec2	testq	%rbx, %rbx
000000010001eec5	jne	0x10001f050
000000010001eecb	movq	-0x98(%rbp), %rdi
000000010001eed2	movq	-0x90(%rbp), %rsi
000000010001eed9	callq	__ZN3std6thread6Thread3new17h0a35214ffb5d302cE ## std::thread::Thread::new::h0a35214ffb5d302c
000000010001eede	addq	%r13, %r12
000000010001eee1	movq	$0x1, -0x70(%rbp)
000000010001eee9	movq	%r13, -0x68(%rbp)
000000010001eeed	movq	%r12, -0x60(%rbp)
000000010001eef1	leaq	-0x70(%rbp), %rdi
000000010001eef5	movq	%rax, %rsi
000000010001eef8	callq	__ZN3std10sys_common11thread_info3set17h43b8bf2b61c84fd7E ## std::sys_common::thread_info::set::h43b8bf2b61c84fd7
000000010001eefd	movq	%r14, %rdi
000000010001ef00	movq	-0xa8(%rbp), %rax
000000010001ef07	callq	*0x28(%rax)
000000010001ef0a	movslq	%eax, %rbx
000000010001ef0d	movq	__ZN3std2rt7cleanup7CLEANUP17h2e2fd9a04373aa77E(%rip), %rax ## std::rt::cleanup::CLEANUP::h2e2fd9a04373aa77
000000010001ef14	cmpq	$0x3, %rax
000000010001ef18	je	0x10001ef45
000000010001ef1a	movb	$0x1, -0xa0(%rbp)
000000010001ef21	movq	%r15, -0x70(%rbp)
000000010001ef25	leaq	__ZN3std2rt7cleanup7CLEANUP17h2e2fd9a04373aa77E(%rip), %rdi ## std::rt::cleanup::CLEANUP::h2e2fd9a04373aa77
000000010001ef2c	leaq	0x29e95(%rip), %rcx
000000010001ef33	leaq	0x299ee(%rip), %r8
000000010001ef3a	leaq	-0x70(%rbp), %rdx
000000010001ef3e	xorl	%esi, %esi
000000010001ef40	callq	__ZN3std10sys_common4once5queue4Once4call17hf241db9abbfabd67E ## std::sys_common::once::queue::Once::call::hf241db9abbfabd67
000000010001ef45	movq	%rbx, %rax
000000010001ef48	addq	$0x88, %rsp
000000010001ef4f	popq	%rbx
000000010001ef50	popq	%r12
000000010001ef52	popq	%r13
000000010001ef54	popq	%r14
000000010001ef56	popq	%r15
000000010001ef58	popq	%rbp
000000010001ef59	retq
000000010001ef5a	leaq	0x2a4a7(%rip), %rdx
000000010001ef61	movl	$0x20, %esi
000000010001ef66	leaq	0x2636f(%rip), %rdi
000000010001ef6d	jmp	0x10001f10e
000000010001ef72	callq	0x10004274e                     ## symbol stub for: ___error
000000010001ef77	movl	(%rax), %eax
000000010001ef79	shlq	$0x20, %rax
000000010001ef7d	orq	$0x2, %rax
000000010001ef81	movq	%rax, -0x80(%rbp)
000000010001ef85	leaq	-0x80(%rbp), %rax
000000010001ef89	movq	%rax, -0xa0(%rbp)
000000010001ef90	leaq	__ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h285969cfd8ae8b36E(%rip), %rax ## _$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$::fmt::h285969cfd8ae8b36
000000010001ef97	movq	%rax, -0x98(%rbp)
000000010001ef9e	leaq	0x2a4a3(%rip), %rax
000000010001efa5	movq	%rax, -0x70(%rbp)
000000010001efa9	movq	$0x1, -0x68(%rbp)
000000010001efb1	movq	$0x0, -0x50(%rbp)
000000010001efb9	leaq	-0xa0(%rbp), %rax
000000010001efc0	movq	%rax, -0x60(%rbp)
000000010001efc4	movq	$0x1, -0x58(%rbp)
000000010001efcc	leaq	0x2a485(%rip), %rsi
000000010001efd3	leaq	-0x70(%rbp), %rdi
000000010001efd7	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001efdc	jmp	0x10001f113
000000010001efe1	callq	0x10004274e                     ## symbol stub for: ___error
000000010001efe6	movl	(%rax), %eax
000000010001efe8	shlq	$0x20, %rax
000000010001efec	orq	$0x2, %rax
000000010001eff0	movq	%rax, -0x80(%rbp)
000000010001eff4	leaq	-0x80(%rbp), %rax
000000010001eff8	movq	%rax, -0xa0(%rbp)
000000010001efff	leaq	__ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h285969cfd8ae8b36E(%rip), %rax ## _$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$::fmt::h285969cfd8ae8b36
000000010001f006	movq	%rax, -0x98(%rbp)
000000010001f00d	leaq	0x2a40c(%rip), %rax
000000010001f014	movq	%rax, -0x70(%rbp)
000000010001f018	movq	$0x1, -0x68(%rbp)
000000010001f020	movq	$0x0, -0x50(%rbp)
000000010001f028	leaq	-0xa0(%rbp), %rax
000000010001f02f	movq	%rax, -0x60(%rbp)
000000010001f033	movq	$0x1, -0x58(%rbp)
000000010001f03b	leaq	0x2a3ee(%rip), %rsi
000000010001f042	leaq	-0x70(%rbp), %rdi
000000010001f046	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001f04b	jmp	0x10001f113
000000010001f050	movq	%r15, -0xb0(%rbp)
000000010001f057	leaq	-0xb0(%rbp), %rax
000000010001f05e	movq	%rax, -0x80(%rbp)
000000010001f062	leaq	__ZN70_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hce5481c21441c8d7E(%rip), %rax ## _$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..fmt..Debug$GT$::fmt::hce5481c21441c8d7
000000010001f069	movq	%rax, -0x78(%rbp)
000000010001f06d	leaq	0x29894(%rip), %rax
000000010001f074	movq	%rax, -0x70(%rbp)
000000010001f078	movq	$0x2, -0x68(%rbp)
000000010001f080	movq	$0x0, -0x50(%rbp)
000000010001f088	leaq	-0x80(%rbp), %rax
000000010001f08c	movq	%rax, -0x60(%rbp)
000000010001f090	movq	$0x1, -0x58(%rbp)
000000010001f098	leaq	-0xa0(%rbp), %rdi
000000010001f09f	leaq	-0x70(%rbp), %rsi
000000010001f0a3	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
000000010001f0a8	movq	%rax, %rdi
000000010001f0ab	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
000000010001f0b0	jmp	0x10001f0f1
000000010001f0b2	leaq	0x2a3b7(%rip), %rax
000000010001f0b9	movq	%rax, -0x70(%rbp)
000000010001f0bd	movq	$0x1, -0x68(%rbp)
000000010001f0c5	movq	$0x0, -0x50(%rbp)
000000010001f0cd	leaq	-0xa0(%rbp), %rdi
000000010001f0d4	movq	%rdi, -0x60(%rbp)
000000010001f0d8	movq	$0x0, -0x58(%rbp)
000000010001f0e0	leaq	-0x70(%rbp), %rsi
000000010001f0e4	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
000000010001f0e9	movq	%rax, %rdi
000000010001f0ec	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
000000010001f0f1	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010001f0f6	callq	0x100042772                     ## symbol stub for: _abort
000000010001f0fb	leaq	0x2a37e(%rip), %rdx
000000010001f102	movl	$0x28, %esi
000000010001f107	leaq	0x24e33(%rip), %rdi
000000010001f10e	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010001f113	ud2
000000010001f115	movq	%rax, %rdi
000000010001f118	jmp	0x10001f20a
000000010001f11d	movq	%rax, %rdi
000000010001f120	callq	___rust_panic_cleanup
000000010001f125	movq	%rax, %r14
000000010001f128	movq	%rdx, %r12
000000010001f12b	lock
000000010001f12c	decq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip) ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
000000010001f133	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.0(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.0)
000000010001f13a	callq	*(%rdi)
000000010001f13c	decq	(%rax)
000000010001f13f	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.1(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.1)
000000010001f146	callq	*(%rdi)
000000010001f148	movb	$0x0, (%rax)
000000010001f14b	movq	%r14, %rdi
000000010001f14e	callq	*(%rdx)
000000010001f150	movq	0x8(%r12), %rsi
000000010001f155	movl	$0x65, %ebx
000000010001f15a	testq	%rsi, %rsi
000000010001f15d	je	0x10001ef0d
000000010001f163	movq	0x10(%r12), %rdx
000000010001f168	movq	%r14, %rdi
000000010001f16b	callq	___rust_dealloc
000000010001f170	jmp	0x10001ef0d
000000010001f175	movq	%rax, %rbx
000000010001f178	movq	%r14, %rdi
000000010001f17b	movq	%r12, %rsi
000000010001f17e	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010001f183	movq	%rbx, %rdi
000000010001f186	callq	___rust_panic_cleanup
000000010001f18b	lock
000000010001f18c	decq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip) ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
000000010001f193	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.0(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.0)
000000010001f19a	callq	*(%rdi)
000000010001f19c	decq	(%rax)
000000010001f19f	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.1(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.1)
000000010001f1a6	callq	*(%rdi)
000000010001f1a8	movb	$0x0, (%rax)
000000010001f1ab	callq	__ZN3std2rt19lang_start_internal28_$u7b$$u7b$closure$u7d$$u7d$17h3cbb75f98472c8baE ## std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h3cbb75f98472c8ba
000000010001f1b0	movq	%rax, %r14
000000010001f1b3	leaq	-0x80(%rbp), %rdi
000000010001f1b7	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
000000010001f1bc	jmp	0x10001f207
000000010001f1be	movq	%rax, %r14
000000010001f1c1	leaq	-0x80(%rbp), %rdi
000000010001f1c5	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
000000010001f1ca	jmp	0x10001f207
000000010001f1cc	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001f1d1	movq	%rax, %r14
000000010001f1d4	cmpq	$0x0, -0xa0(%rbp)
000000010001f1dc	jne	0x10001f1f1
000000010001f1de	testq	%rbx, %rbx
000000010001f1e1	je	0x10001f207
000000010001f1e3	leaq	-0x98(%rbp), %rdi
000000010001f1ea	callq	__ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h2a334d9c2fc48269E ## core::ptr::drop_in_place$LT$alloc..ffi..c_str..CString$GT$::h2a334d9c2fc48269
000000010001f1ef	jmp	0x10001f207
000000010001f1f1	leaq	-0xa0(%rbp), %rdi
000000010001f1f8	callq	__ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17hb9a156d2c28948abE ## core::ptr::drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$::hb9a156d2c28948ab
000000010001f1fd	jmp	0x10001f207
000000010001f1ff	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001f204	movq	%rax, %r14
000000010001f207	movq	%r14, %rdi
000000010001f20a	callq	___rust_panic_cleanup
000000010001f20f	lock
000000010001f210	decq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip) ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
000000010001f217	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.0(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.0)
000000010001f21e	callq	*(%rdi)
000000010001f220	decq	(%rax)
000000010001f223	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.1(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.1)
000000010001f22a	callq	*(%rdi)
000000010001f22c	movb	$0x0, (%rax)
000000010001f22f	callq	__ZN4core3ops8function6FnOnce9call_once17h2c867f3c33f16eccE ## core::ops::function::FnOnce::call_once::h2c867f3c33f16ecc
000000010001f234	fsqrt
000000010001f236	.byte 0xff #bad opcode
000000010001f237	incl	%edi
000000010001f239	cli
000000010001f23a	.byte 0xff #bad opcode
000000010001f23b	callq	*%rdx
000000010001f23d	cli
000000010001f23e	.byte 0xff #bad opcode
000000010001f23f	callq	*%rax
000000010001f241	cli
000000010001f242	.byte 0xff #bad opcode
000000010001f243	jmpq	*0x2e(%rsi)
000000010001f246	nopl	(%rax,%rax)
000000010001f24e	nop
__ZN3std2rt19lang_start_internal28_$u7b$$u7b$closure$u7d$$u7d$17hed88a2ac8af3b822E:
000000010001f250	pushq	%rbp
000000010001f251	movq	%rsp, %rbp
000000010001f254	subq	$0x40, %rsp
000000010001f258	leaq	0x296e1(%rip), %rax
000000010001f25f	movq	%rax, -0x38(%rbp)
000000010001f263	movq	$0x1, -0x30(%rbp)
000000010001f26b	movq	$0x0, -0x18(%rbp)
000000010001f273	leaq	-0x8(%rbp), %rdi
000000010001f277	movq	%rdi, -0x28(%rbp)
000000010001f27b	movq	$0x0, -0x20(%rbp)
000000010001f283	leaq	-0x38(%rbp), %rsi
000000010001f287	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
000000010001f28c	movq	%rax, %rdi
000000010001f28f	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
000000010001f294	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010001f299	nopl	(%rax)
__ZN3std2rt19lang_start_internal28_$u7b$$u7b$closure$u7d$$u7d$17h3cbb75f98472c8baE:
000000010001f2a0	pushq	%rbp
000000010001f2a1	movq	%rsp, %rbp
000000010001f2a4	subq	$0x40, %rsp
000000010001f2a8	leaq	0x296a1(%rip), %rax
000000010001f2af	movq	%rax, -0x38(%rbp)
000000010001f2b3	movq	$0x1, -0x30(%rbp)
000000010001f2bb	movq	$0x0, -0x18(%rbp)
000000010001f2c3	leaq	-0x8(%rbp), %rdi
000000010001f2c7	movq	%rdi, -0x28(%rbp)
000000010001f2cb	movq	$0x0, -0x20(%rbp)
000000010001f2d3	leaq	-0x38(%rbp), %rsi
000000010001f2d7	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
000000010001f2dc	movq	%rax, %rdi
000000010001f2df	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
000000010001f2e4	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010001f2e9	nopl	(%rax)
__ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h75cb3609e71fa1c2E:
000000010001f2f0	pushq	%rbp
000000010001f2f1	movq	%rsp, %rbp
000000010001f2f4	pushq	%rbx
000000010001f2f5	subq	$0x18, %rsp
000000010001f2f9	leaq	0x2525d(%rip), %rdx
000000010001f300	leaq	-0x18(%rbp), %rbx
000000010001f304	movl	$0xb, %ecx
000000010001f309	movq	%rbx, %rdi
000000010001f30c	callq	__ZN4core3fmt9Formatter12debug_struct17h53b6b171d80fedffE ## core::fmt::Formatter::debug_struct::h53b6b171d80fedff
000000010001f311	movq	%rbx, %rdi
000000010001f314	callq	__ZN4core3fmt8builders11DebugStruct6finish17he31cc25ca0a4d1e9E ## core::fmt::builders::DebugStruct::finish::he31cc25ca0a4d1e9
000000010001f319	addq	$0x18, %rsp
000000010001f31d	popq	%rbx
000000010001f31e	popq	%rbp
000000010001f31f	retq
__ZN3std6thread7current17h204a63d2bfe370a2E:
000000010001f320	pushq	%rbp
000000010001f321	movq	%rsp, %rbp
000000010001f324	callq	__ZN3std10sys_common11thread_info14current_thread17h4102400ece1054ccE ## std::sys_common::thread_info::current_thread::h4102400ece1054cc
000000010001f329	testq	%rax, %rax
000000010001f32c	je	0x10001f330
000000010001f32e	popq	%rbp
000000010001f32f	retq
000000010001f330	leaq	0x25232(%rip), %rdi
000000010001f337	leaq	0x29622(%rip), %rdx
000000010001f33e	movl	$0x5e, %esi
000000010001f343	callq	__ZN4core6option13expect_failed17he6bc26adfac46087E ## core::option::expect_failed::he6bc26adfac46087
000000010001f348	nopl	(%rax,%rax)
__ZN3std6thread6Thread3new17h0a35214ffb5d302cE:
000000010001f350	pushq	%rbp
000000010001f351	movq	%rsp, %rbp
000000010001f354	pushq	%r15
000000010001f356	pushq	%r14
000000010001f358	pushq	%r13
000000010001f35a	pushq	%r12
000000010001f35c	pushq	%rbx
000000010001f35d	subq	$0x48, %rsp
000000010001f361	movq	%rsi, %r14
000000010001f364	movq	%rdi, %r15
000000010001f367	movq	%rdi, -0x38(%rbp)
000000010001f36b	movq	%rsi, -0x30(%rbp)
000000010001f36f	movl	$0x8, %edi
000000010001f374	movl	$0x28, %esi
000000010001f379	callq	__ZN5alloc4sync32arcinner_layout_for_value_layout17h1f210eb2a4ff3987E ## alloc::sync::arcinner_layout_for_value_layout::h1f210eb2a4ff3987
000000010001f37e	movq	%rax, %r13
000000010001f381	movq	%rdx, %r12
000000010001f384	testq	%rdx, %rdx
000000010001f387	je	0x10001f40d
000000010001f38d	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010001f394	movzbl	(%rax), %eax
000000010001f397	movq	%r12, %rdi
000000010001f39a	movq	%r13, %rsi
000000010001f39d	callq	___rust_alloc
000000010001f3a2	movq	%rax, %rbx
000000010001f3a5	testq	%rbx, %rbx
000000010001f3a8	je	0x10001f415
000000010001f3aa	movq	$0x1, (%rbx)
000000010001f3b1	movq	$0x1, 0x8(%rbx)
000000010001f3b9	movq	%r15, 0x18(%rbx)
000000010001f3bd	movq	%r14, 0x20(%rbx)
000000010001f3c1	movq	__ZN3std6thread8ThreadId3new7COUNTER17hc0ad3d6d573771dcE(%rip), %rax ## std::thread::ThreadId::new::COUNTER::hc0ad3d6d573771dc
000000010001f3c8	nopl	(%rax,%rax)
000000010001f3d0	movq	%rax, %rcx
000000010001f3d3	incq	%rcx
000000010001f3d6	je	0x10001f422
000000010001f3d8	lock
000000010001f3d9	cmpxchgq	%rcx, __ZN3std6thread8ThreadId3new7COUNTER17hc0ad3d6d573771dcE(%rip) ## std::thread::ThreadId::new::COUNTER::hc0ad3d6d573771dc
000000010001f3e1	jne	0x10001f3d0
000000010001f3e3	movq	%rcx, 0x10(%rbx)
000000010001f3e7	xorl	%edi, %edi
000000010001f3e9	callq	0x10004278a                     ## symbol stub for: _dispatch_semaphore_create
000000010001f3ee	testq	%rax, %rax
000000010001f3f1	je	0x10001f429
000000010001f3f3	movq	%rax, 0x28(%rbx)
000000010001f3f7	movb	$0x0, 0x30(%rbx)
000000010001f3fb	movq	%rbx, %rax
000000010001f3fe	addq	$0x48, %rsp
000000010001f402	popq	%rbx
000000010001f403	popq	%r12
000000010001f405	popq	%r13
000000010001f407	popq	%r14
000000010001f409	popq	%r15
000000010001f40b	popq	%rbp
000000010001f40c	retq
000000010001f40d	movq	%r13, %rbx
000000010001f410	testq	%rbx, %rbx
000000010001f413	jne	0x10001f3aa
000000010001f415	movq	%r13, %rdi
000000010001f418	movq	%r12, %rsi
000000010001f41b	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001f420	jmp	0x10001f467
000000010001f422	callq	__ZN3std6thread8ThreadId3new9exhausted17hc5501be4d58a3bb3E ## std::thread::ThreadId::new::exhausted::hc5501be4d58a3bb3
000000010001f427	jmp	0x10001f467
000000010001f429	leaq	0x2a128(%rip), %rax
000000010001f430	movq	%rax, -0x68(%rbp)
000000010001f434	movq	$0x1, -0x60(%rbp)
000000010001f43c	movq	$0x0, -0x48(%rbp)
000000010001f444	leaq	0x248a5(%rip), %rax
000000010001f44b	movq	%rax, -0x58(%rbp)
000000010001f44f	movq	$0x0, -0x50(%rbp)
000000010001f457	leaq	0x2a10a(%rip), %rsi
000000010001f45e	leaq	-0x68(%rbp), %rdi
000000010001f462	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001f467	ud2
000000010001f469	movq	%rax, %r14
000000010001f46c	leaq	-0x38(%rbp), %rdi
000000010001f470	callq	__ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h98e97f0838c8df4cE ## core::ptr::drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$::h98e97f0838c8df4c
000000010001f475	movq	%r14, %rdi
000000010001f478	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001f47d	movq	%rax, %r14
000000010001f480	movq	%rbx, %rdi
000000010001f483	callq	__ZN4core3ptr107drop_in_place$LT$alloc..sync..Arc$LT$core..mem..maybe_uninit..MaybeUninit$LT$std..thread..Inner$GT$$GT$$GT$17h44a1d2a8ab827230E ## core::ptr::drop_in_place$LT$alloc..sync..Arc$LT$core..mem..maybe_uninit..MaybeUninit$LT$std..thread..Inner$GT$$GT$$GT$::h44a1d2a8ab827230
000000010001f488	movq	%r14, %rdi
000000010001f48b	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
__ZN3std3env11current_dir17hd7f78cc2b88ab0fcE:
000000010001f490	pushq	%rbp
000000010001f491	movq	%rsp, %rbp
000000010001f494	pushq	%r15
000000010001f496	pushq	%r14
000000010001f498	pushq	%r13
000000010001f49a	pushq	%r12
000000010001f49c	pushq	%rbx
000000010001f49d	subq	$0x18, %rsp
000000010001f4a1	movq	%rdi, %rbx
000000010001f4a4	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010001f4ab	movzbl	(%rax), %eax
000000010001f4ae	movl	$0x200, %r14d                   ## imm = 0x200
000000010001f4b4	movl	$0x200, %edi                    ## imm = 0x200
000000010001f4b9	movl	$0x1, %esi
000000010001f4be	callq	___rust_alloc
000000010001f4c3	testq	%rax, %rax
000000010001f4c6	je	0x10001f60d
000000010001f4cc	movq	%rax, %r15
000000010001f4cf	movq	%rax, -0x40(%rbp)
000000010001f4d3	movq	$0x200, -0x38(%rbp)             ## imm = 0x200
000000010001f4db	movq	$0x0, -0x30(%rbp)
000000010001f4e3	movl	$0x200, %esi                    ## imm = 0x200
000000010001f4e8	movq	%rax, %rdi
000000010001f4eb	callq	0x1000427ae                     ## symbol stub for: _getcwd
000000010001f4f0	testq	%rax, %rax
000000010001f4f3	je	0x10001f544
000000010001f4f5	movq	%r15, %rdi
000000010001f4f8	callq	__ZN4core3ffi5c_str4CStr8from_ptr9strlen_rt17h8fdb3db5c71cd065E ## core::ffi::c_str::CStr::from_ptr::strlen_rt::h8fdb3db5c71cd065
000000010001f4fd	movq	%rax, %r12
000000010001f500	movq	%rax, -0x30(%rbp)
000000010001f504	cmpq	%rax, %r14
000000010001f507	jbe	0x10001f5e4
000000010001f50d	testq	%r12, %r12
000000010001f510	je	0x10001f5c6
000000010001f516	movl	$0x1, %edx
000000010001f51b	movq	%r15, %rdi
000000010001f51e	movq	%r14, %rsi
000000010001f521	movq	%r12, %rcx
000000010001f524	callq	___rust_realloc
000000010001f529	movq	%rax, %r13
000000010001f52c	testq	%rax, %rax
000000010001f52f	jne	0x10001f5dc
000000010001f535	movl	$0x1, %edi
000000010001f53a	movq	%r12, %rsi
000000010001f53d	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001f542	ud2
000000010001f544	callq	0x10004274e                     ## symbol stub for: ___error
000000010001f549	movl	(%rax), %eax
000000010001f54b	cmpl	$0x22, %eax
000000010001f54e	jne	0x10001f59c
000000010001f550	leaq	-0x40(%rbp), %r12
000000010001f554	nopw	%cs:(%rax,%rax)
000000010001f55e	nop
000000010001f560	movq	%r14, -0x30(%rbp)
000000010001f564	movl	$0x1, %edx
000000010001f569	movq	%r12, %rdi
000000010001f56c	movq	%r14, %rsi
000000010001f56f	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
000000010001f574	movq	-0x40(%rbp), %r15
000000010001f578	movq	-0x38(%rbp), %r14
000000010001f57c	movq	%r15, %rdi
000000010001f57f	movq	%r14, %rsi
000000010001f582	callq	0x1000427ae                     ## symbol stub for: _getcwd
000000010001f587	testq	%rax, %rax
000000010001f58a	jne	0x10001f4f5
000000010001f590	callq	0x10004274e                     ## symbol stub for: ___error
000000010001f595	movl	(%rax), %eax
000000010001f597	cmpl	$0x22, %eax
000000010001f59a	je	0x10001f560
000000010001f59c	shlq	$0x20, %rax
000000010001f5a0	orq	$0x2, %rax
000000010001f5a4	movq	%rax, 0x8(%rbx)
000000010001f5a8	movq	$0x0, (%rbx)
000000010001f5af	testq	%r14, %r14
000000010001f5b2	je	0x10001f5fb
000000010001f5b4	movl	$0x1, %edx
000000010001f5b9	movq	%r15, %rdi
000000010001f5bc	movq	%r14, %rsi
000000010001f5bf	callq	___rust_dealloc
000000010001f5c4	jmp	0x10001f5fb
000000010001f5c6	movl	$0x1, %r13d
000000010001f5cc	movl	$0x1, %edx
000000010001f5d1	movq	%r15, %rdi
000000010001f5d4	movq	%r14, %rsi
000000010001f5d7	callq	___rust_dealloc
000000010001f5dc	movq	%r13, -0x40(%rbp)
000000010001f5e0	movq	%r12, -0x38(%rbp)
000000010001f5e4	movq	-0x30(%rbp), %rax
000000010001f5e8	movq	%rax, 0x10(%rbx)
000000010001f5ec	movq	-0x40(%rbp), %rax
000000010001f5f0	movq	-0x38(%rbp), %rcx
000000010001f5f4	movq	%rcx, 0x8(%rbx)
000000010001f5f8	movq	%rax, (%rbx)
000000010001f5fb	movq	%rbx, %rax
000000010001f5fe	addq	$0x18, %rsp
000000010001f602	popq	%rbx
000000010001f603	popq	%r12
000000010001f605	popq	%r13
000000010001f607	popq	%r14
000000010001f609	popq	%r15
000000010001f60b	popq	%rbp
000000010001f60c	retq
000000010001f60d	movl	$0x1, %edi
000000010001f612	movl	$0x200, %esi                    ## imm = 0x200
000000010001f617	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001f61c	jmp	0x10001f61e
000000010001f61e	movq	%rax, %rbx
000000010001f621	leaq	-0x40(%rbp), %rdi
000000010001f625	callq	__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9ac2a42193cc6e4aE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$::h9ac2a42193cc6e4a
000000010001f62a	movq	%rbx, %rdi
000000010001f62d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001f632	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001f637	nopw	(%rax,%rax)
__ZN3std3env7_var_os17h1dd2de5ff46afc4dE:
000000010001f640	pushq	%rbp
000000010001f641	movq	%rsp, %rbp
000000010001f644	pushq	%r15
000000010001f646	pushq	%r14
000000010001f648	pushq	%r13
000000010001f64a	pushq	%r12
000000010001f64c	pushq	%rbx
000000010001f64d	subq	$0x198, %rsp                    ## imm = 0x198
000000010001f654	movq	%rdx, %r14
000000010001f657	movq	%rdi, %rbx
000000010001f65a	cmpq	$0x17f, %rdx                    ## imm = 0x17F
000000010001f661	ja	0x10001f74f
000000010001f667	leaq	-0x1c0(%rbp), %r15
000000010001f66e	movq	%r15, %rdi
000000010001f671	movq	%r14, %rdx
000000010001f674	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001f679	movb	$0x0, -0x1c0(%rbp,%r14)
000000010001f682	incq	%r14
000000010001f685	leaq	-0x40(%rbp), %rdi
000000010001f689	movq	%r15, %rsi
000000010001f68c	movq	%r14, %rdx
000000010001f68f	callq	__ZN4core3ffi5c_str4CStr19from_bytes_with_nul17hb2e722b352771ae9E ## core::ffi::c_str::CStr::from_bytes_with_nul::hb2e722b352771ae9
000000010001f694	cmpq	$0x0, -0x40(%rbp)
000000010001f699	je	0x10001f6b1
000000010001f69b	movl	$0x1, %eax
000000010001f6a0	leaq	0x297f9(%rip), %r14
000000010001f6a7	testq	%rax, %rax
000000010001f6aa	jne	0x10001f6f7
000000010001f6ac	jmp	0x10001f762
000000010001f6b1	movq	-0x38(%rbp), %r14
000000010001f6b5	leaq	__ZN3std3sys4unix2os8ENV_LOCK17h4ba658aa49256137E(%rip), %rdi ## std::sys::unix::os::ENV_LOCK::h4ba658aa49256137
000000010001f6bc	callq	__ZN3std3sys4unix5locks14pthread_rwlock6RwLock4read17hea9fe8563f9fb3c3E ## std::sys::unix::locks::pthread_rwlock::RwLock::read::hea9fe8563f9fb3c3
000000010001f6c1	movzbl	0x2cb28(%rip), %eax
000000010001f6c8	movq	%r14, %rdi
000000010001f6cb	callq	0x1000427b4                     ## symbol stub for: _getenv
000000010001f6d0	movq	%rax, %r14
000000010001f6d3	movq	__ZN3std3sys4unix2os8ENV_LOCK17h4ba658aa49256137E(%rip), %rdi ## std::sys::unix::os::ENV_LOCK::h4ba658aa49256137
000000010001f6da	testq	%rdi, %rdi
000000010001f6dd	je	0x10001f7e5
000000010001f6e3	lock
000000010001f6e4	decq	0xc8(%rdi)
000000010001f6eb	callq	0x10004283e                     ## symbol stub for: _pthread_rwlock_unlock
000000010001f6f0	xorl	%eax, %eax
000000010001f6f2	testq	%rax, %rax
000000010001f6f5	je	0x10001f762
000000010001f6f7	movl	%r14d, %eax
000000010001f6fa	andl	$0x3, %eax
000000010001f6fd	leaq	-0x2(%rax), %rcx
000000010001f701	cmpq	$0x2, %rcx
000000010001f705	jb	0x10001f7a8
000000010001f70b	testq	%rax, %rax
000000010001f70e	je	0x10001f7a8
000000010001f714	leaq	-0x1(%r14), %r15
000000010001f718	movq	-0x1(%r14), %r12
000000010001f71c	movq	0x7(%r14), %r14
000000010001f720	movq	%r12, %rdi
000000010001f723	callq	*(%r14)
000000010001f726	movq	0x8(%r14), %rsi
000000010001f72a	testq	%rsi, %rsi
000000010001f72d	je	0x10001f73b
000000010001f72f	movq	0x10(%r14), %rdx
000000010001f733	movq	%r12, %rdi
000000010001f736	callq	___rust_dealloc
000000010001f73b	movl	$0x18, %esi
000000010001f740	movl	$0x8, %edx
000000010001f745	movq	%r15, %rdi
000000010001f748	callq	___rust_dealloc
000000010001f74d	jmp	0x10001f7a8
000000010001f74f	movq	%rsi, %rdi
000000010001f752	movq	%r14, %rsi
000000010001f755	callq	__ZN3std3sys6common14small_c_string24run_with_cstr_allocating17h1bea8d19210b405dE ## std::sys::common::small_c_string::run_with_cstr_allocating::h1bea8d19210b405d
000000010001f75a	movq	%rdx, %r14
000000010001f75d	testq	%rax, %rax
000000010001f760	jne	0x10001f6f7
000000010001f762	testq	%r14, %r14
000000010001f765	je	0x10001f7a8
000000010001f767	movq	%r14, %rdi
000000010001f76a	callq	__ZN4core3ffi5c_str4CStr8from_ptr9strlen_rt17h8fdb3db5c71cd065E ## core::ffi::c_str::CStr::from_ptr::strlen_rt::h8fdb3db5c71cd065
000000010001f76f	movq	%rax, %r15
000000010001f772	testq	%rax, %rax
000000010001f775	je	0x10001f7b1
000000010001f777	setns	%al
000000010001f77a	js	0x10001f7f9
000000010001f77c	movzbl	%al, %r12d
000000010001f780	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010001f787	movzbl	(%rax), %eax
000000010001f78a	movq	%r15, %rdi
000000010001f78d	movq	%r12, %rsi
000000010001f790	callq	___rust_alloc
000000010001f795	movq	%rax, %r13
000000010001f798	testq	%rax, %rax
000000010001f79b	jne	0x10001f7b7
000000010001f79d	movq	%r12, %rdi
000000010001f7a0	movq	%r15, %rsi
000000010001f7a3	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010001f7a8	movq	$0x0, (%rbx)
000000010001f7af	jmp	0x10001f7d0
000000010001f7b1	movl	$0x1, %r13d
000000010001f7b7	movq	%r13, %rdi
000000010001f7ba	movq	%r14, %rsi
000000010001f7bd	movq	%r15, %rdx
000000010001f7c0	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010001f7c5	movq	%r13, (%rbx)
000000010001f7c8	movq	%r15, 0x8(%rbx)
000000010001f7cc	movq	%r15, 0x10(%rbx)
000000010001f7d0	movq	%rbx, %rax
000000010001f7d3	addq	$0x198, %rsp                    ## imm = 0x198
000000010001f7da	popq	%rbx
000000010001f7db	popq	%r12
000000010001f7dd	popq	%r13
000000010001f7df	popq	%r14
000000010001f7e1	popq	%r15
000000010001f7e3	popq	%rbp
000000010001f7e4	retq
000000010001f7e5	leaq	__ZN3std3sys4unix2os8ENV_LOCK17h4ba658aa49256137E(%rip), %rdi ## std::sys::unix::os::ENV_LOCK::h4ba658aa49256137
000000010001f7ec	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h90e0eaa82f4e03f2E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h90e0eaa82f4e03f2
000000010001f7f1	movq	%rax, %rdi
000000010001f7f4	jmp	0x10001f6e3
000000010001f7f9	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010001f7fe	movq	%rax, %rbx
000000010001f801	movq	%r12, %rdi
000000010001f804	movq	%r14, %rsi
000000010001f807	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010001f80c	movq	%r15, %rdi
000000010001f80f	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010001f814	movq	%rbx, %rdi
000000010001f817	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001f81c	nopl	(%rax)
__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$9flush_buf17h427c3bc684e5dfc1E:
000000010001f820	pushq	%rbp
000000010001f821	movq	%rsp, %rbp
000000010001f824	pushq	%r15
000000010001f826	pushq	%r14
000000010001f828	pushq	%r13
000000010001f82a	pushq	%r12
000000010001f82c	pushq	%rbx
000000010001f82d	subq	$0x18, %rsp
000000010001f831	movq	0x10(%rdi), %r13
000000010001f835	testq	%r13, %r13
000000010001f838	je	0x10001f8f2
000000010001f83e	movq	%rdi, %rbx
000000010001f841	xorl	%r15d, %r15d
000000010001f844	leaq	0x29165(%rip), %rax
000000010001f84b	movq	%rax, -0x30(%rbp)
000000010001f84f	movq	%rdi, -0x38(%rbp)
000000010001f853	jmp	0x10001f868
000000010001f855	nopw	%cs:(%rax,%rax)
000000010001f85f	nop
000000010001f860	movq	%r14, %r13
000000010001f863	cmpq	%r15, %r14
000000010001f866	jbe	0x10001f8d7
000000010001f868	movb	$0x1, 0x18(%rbx)
000000010001f86c	movq	%r13, %r14
000000010001f86f	subq	%r15, %r13
000000010001f872	jb	0x10001f959
000000010001f878	movq	(%rbx), %r12
000000010001f87b	leaq	(%r12,%r15), %rsi
000000010001f87f	cmpq	$0x7ffffffe, %r13               ## imm = 0x7FFFFFFE
000000010001f886	movl	$0x7ffffffe, %edx               ## imm = 0x7FFFFFFE
000000010001f88b	cmovbq	%r13, %rdx
000000010001f88f	movl	$0x1, %edi
000000010001f894	movq	%rsi, -0x40(%rbp)
000000010001f898	callq	0x100042880                     ## symbol stub for: _write
000000010001f89d	cmpq	$-0x1, %rax
000000010001f8a1	jne	0x10001f8b3
000000010001f8a3	callq	0x10004274e                     ## symbol stub for: ___error
000000010001f8a8	movl	(%rax), %edi
000000010001f8aa	movq	%r13, %rax
000000010001f8ad	cmpq	$0x9, %rdi
000000010001f8b1	jne	0x10001f8c1
000000010001f8b3	movb	$0x0, 0x18(%rbx)
000000010001f8b7	testq	%rax, %rax
000000010001f8ba	je	0x10001f91b
000000010001f8bc	addq	%rax, %r15
000000010001f8bf	jmp	0x10001f860
000000010001f8c1	movb	$0x0, 0x18(%rbx)
000000010001f8c5	movq	%rdi, %rbx
000000010001f8c8	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
000000010001f8cd	cmpb	$0x23, %al
000000010001f8cf	jne	0x10001f90b
000000010001f8d1	movq	-0x38(%rbp), %rbx
000000010001f8d5	jmp	0x10001f860
000000010001f8d7	testq	%r15, %r15
000000010001f8da	je	0x10001f8f2
000000010001f8dc	cmpq	%r15, %r13
000000010001f8df	jb	0x10001f970
000000010001f8e5	movq	$0x0, 0x10(%rbx)
000000010001f8ed	subq	%r15, %r13
000000010001f8f0	jne	0x10001f8f6
000000010001f8f2	xorl	%eax, %eax
000000010001f8f4	jmp	0x10001f94a
000000010001f8f6	movq	(%rbx), %rdi
000000010001f8f9	addq	%rdi, %r15
000000010001f8fc	movq	%r15, %rsi
000000010001f8ff	movq	%r13, %rdx
000000010001f902	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010001f907	xorl	%eax, %eax
000000010001f909	jmp	0x10001f946
000000010001f90b	shlq	$0x20, %rbx
000000010001f90f	orq	$0x2, %rbx
000000010001f913	movq	%rbx, -0x30(%rbp)
000000010001f917	movq	-0x38(%rbp), %rbx
000000010001f91b	testq	%r15, %r15
000000010001f91e	je	0x10001f92d
000000010001f920	movq	$0x0, 0x10(%rbx)
000000010001f928	cmpq	%r15, %r14
000000010001f92b	jne	0x10001f933
000000010001f92d	movq	-0x30(%rbp), %rax
000000010001f931	jmp	0x10001f94a
000000010001f933	movq	%r12, %rdi
000000010001f936	movq	-0x40(%rbp), %rsi
000000010001f93a	movq	%r13, %rdx
000000010001f93d	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010001f942	movq	-0x30(%rbp), %rax
000000010001f946	movq	%r13, 0x10(%rbx)
000000010001f94a	addq	$0x18, %rsp
000000010001f94e	popq	%rbx
000000010001f94f	popq	%r12
000000010001f951	popq	%r13
000000010001f953	popq	%r14
000000010001f955	popq	%r15
000000010001f957	popq	%rbp
000000010001f958	retq
000000010001f959	movq	%rbx, %r12
000000010001f95c	leaq	0x29065(%rip), %rdx
000000010001f963	movq	%r15, %rdi
000000010001f966	movq	%r14, %rsi
000000010001f969	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010001f96e	ud2
000000010001f970	leaq	0x28d41(%rip), %rdx
000000010001f977	movq	%r15, %rdi
000000010001f97a	movq	%r13, %rsi
000000010001f97d	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010001f982	movq	%rax, %rbx
000000010001f985	movq	%r12, %rdi
000000010001f988	movq	%r15, %rsi
000000010001f98b	callq	__ZN4core3ptr90drop_in_place$LT$std..io..buffered..bufwriter..BufWriter$LT$W$GT$..flush_buf..BufGuard$GT$17h483e5f5a6c6e2d95E ## core::ptr::drop_in_place$LT$std..io..buffered..bufwriter..BufWriter$LT$W$GT$..flush_buf..BufGuard$GT$::h483e5f5a6c6e2d95
000000010001f990	movq	%rbx, %rdi
000000010001f993	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001f998	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010001f99d	nopl	(%rax)
__ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hb1fda1062b891dd4E:
000000010001f9a0	pushq	%rbp
000000010001f9a1	movq	%rsp, %rbp
000000010001f9a4	popq	%rbp
000000010001f9a5	jmp	__ZN3std2io5error83_$LT$impl$u20$core..fmt..Debug$u20$for$u20$std..io..error..repr_bitpacked..Repr$GT$3fmt17h1831934e82eefc91E ## std::io::error::_$LT$impl$u20$core..fmt..Debug$u20$for$u20$std..io..error..repr_bitpacked..Repr$GT$::fmt::h1831934e82eefc91
000000010001f9aa	nopw	(%rax,%rax)
__ZN3std2io5error83_$LT$impl$u20$core..fmt..Debug$u20$for$u20$std..io..error..repr_bitpacked..Repr$GT$3fmt17h1831934e82eefc91E:
000000010001f9b0	pushq	%rbp
000000010001f9b1	movq	%rsp, %rbp
000000010001f9b4	pushq	%r15
000000010001f9b6	pushq	%r14
000000010001f9b8	pushq	%rbx
000000010001f9b9	subq	$0x118, %rsp                    ## imm = 0x118
000000010001f9c0	movq	(%rdi), %rbx
000000010001f9c3	movl	%ebx, %eax
000000010001f9c5	andl	$0x3, %eax
000000010001f9c8	leaq	0x391(%rip), %rcx
000000010001f9cf	movslq	(%rcx,%rax,4), %rax
000000010001f9d3	addq	%rcx, %rax
000000010001f9d6	jmpq	*%rax
000000010001f9d8	leaq	0x24fd3(%rip), %rdx
000000010001f9df	leaq	-0xf0(%rbp), %r14
000000010001f9e6	movl	$0x5, %ecx
000000010001f9eb	movq	%r14, %rdi
000000010001f9ee	callq	__ZN4core3fmt9Formatter12debug_struct17h53b6b171d80fedffE ## core::fmt::Formatter::debug_struct::h53b6b171d80fedff
000000010001f9f3	leaq	0x10(%rbx), %rcx
000000010001f9f7	leaq	0x25f6e(%rip), %rsi
000000010001f9fe	leaq	0x29023(%rip), %r8
000000010001fa05	movl	$0x4, %edx
000000010001fa0a	movq	%r14, %rdi
000000010001fa0d	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010001fa12	leaq	0x24f92(%rip), %rsi
000000010001fa19	leaq	0x29048(%rip), %r8
000000010001fa20	movl	$0x7, %edx
000000010001fa25	movq	%rax, %rdi
000000010001fa28	movq	%rbx, %rcx
000000010001fa2b	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010001fa30	movq	%rax, %rdi
000000010001fa33	callq	__ZN4core3fmt8builders11DebugStruct6finish17he31cc25ca0a4d1e9E ## core::fmt::builders::DebugStruct::finish::he31cc25ca0a4d1e9
000000010001fa38	jmp	0x10001fcfb
000000010001fa3d	leaq	-0x1(%rbx), %rax
000000010001fa41	addq	$0xf, %rbx
000000010001fa45	movq	%rax, -0xf0(%rbp)
000000010001fa4c	leaq	0x298c5(%rip), %rax
000000010001fa53	movq	%rax, 0x20(%rsp)
000000010001fa58	leaq	-0xf0(%rbp), %rax
000000010001fa5f	movq	%rax, 0x18(%rsp)
000000010001fa64	leaq	0x25514(%rip), %rax
000000010001fa6b	movq	%rax, 0x8(%rsp)
000000010001fa70	leaq	0x28fb1(%rip), %rax
000000010001fa77	movq	%rax, (%rsp)
000000010001fa7b	movq	$0x5, 0x10(%rsp)
000000010001fa84	leaq	0x254ee(%rip), %rax
000000010001fa8b	leaq	0x25eda(%rip), %rcx
000000010001fa92	movl	$0x6, %edx
000000010001fa97	movl	$0x4, %r8d
000000010001fa9d	movq	%rsi, %rdi
000000010001faa0	movq	%rax, %rsi
000000010001faa3	movq	%rbx, %r9
000000010001faa6	callq	__ZN4core3fmt9Formatter26debug_struct_field2_finish17h224cdebad454e5faE ## core::fmt::Formatter::debug_struct_field2_finish::h224cdebad454e5fa
000000010001faab	jmp	0x10001fcfb
000000010001fab0	shrq	$0x20, %rbx
000000010001fab4	movl	%ebx, -0x20(%rbp)
000000010001fab7	leaq	0x24eeb(%rip), %rdx
000000010001fabe	leaq	-0x100(%rbp), %rbx
000000010001fac5	movl	$0x2, %ecx
000000010001faca	movq	%rbx, %rdi
000000010001facd	callq	__ZN4core3fmt9Formatter12debug_struct17h53b6b171d80fedffE ## core::fmt::Formatter::debug_struct::h53b6b171d80fedff
000000010001fad2	leaq	0x25e8f(%rip), %rsi
000000010001fad9	leaq	0x28f28(%rip), %r8
000000010001fae0	leaq	-0x20(%rbp), %rcx
000000010001fae4	movl	$0x4, %edx
000000010001fae9	movq	%rbx, %rdi
000000010001faec	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010001faf1	movq	%rax, %rbx
000000010001faf4	movl	-0x20(%rbp), %edi
000000010001faf7	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
000000010001fafc	movb	%al, -0x19(%rbp)
000000010001faff	leaq	0x25e66(%rip), %rsi
000000010001fb06	leaq	0x28f1b(%rip), %r8
000000010001fb0d	leaq	-0x19(%rbp), %rcx
000000010001fb11	movl	$0x4, %edx
000000010001fb16	movq	%rbx, %rdi
000000010001fb19	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010001fb1e	movq	%rax, %rbx
000000010001fb21	movl	-0x20(%rbp), %edi
000000010001fb24	xorps	%xmm0, %xmm0
000000010001fb27	movaps	%xmm0, -0x80(%rbp)
000000010001fb2b	movaps	%xmm0, -0x90(%rbp)
000000010001fb32	movaps	%xmm0, -0xa0(%rbp)
000000010001fb39	movaps	%xmm0, -0xb0(%rbp)
000000010001fb40	movaps	%xmm0, -0xc0(%rbp)
000000010001fb47	movaps	%xmm0, -0xd0(%rbp)
000000010001fb4e	movaps	%xmm0, -0xe0(%rbp)
000000010001fb55	movaps	%xmm0, -0xf0(%rbp)
000000010001fb5c	leaq	-0xf0(%rbp), %rsi
000000010001fb63	movl	$0x80, %edx
000000010001fb68	callq	0x10004286e                     ## symbol stub for: _strerror_r
000000010001fb6d	testl	%eax, %eax
000000010001fb6f	js	0x10001fd0d
000000010001fb75	leaq	-0xf0(%rbp), %r14
000000010001fb7c	movq	%r14, %rdi
000000010001fb7f	callq	__ZN4core3ffi5c_str4CStr8from_ptr9strlen_rt17h8fdb3db5c71cd065E ## core::ffi::c_str::CStr::from_ptr::strlen_rt::h8fdb3db5c71cd065
000000010001fb84	leaq	-0x50(%rbp), %r15
000000010001fb88	movq	%r15, %rdi
000000010001fb8b	movq	%r14, %rsi
000000010001fb8e	movq	%rax, %rdx
000000010001fb91	callq	__ZN5alloc6string6String15from_utf8_lossy17hf6cd95066e5242f9E ## alloc::string::String::from_utf8_lossy::hf6cd95066e5242f9
000000010001fb96	leaq	-0x68(%rbp), %r14
000000010001fb9a	movq	%r14, %rdi
000000010001fb9d	movq	%r15, %rsi
000000010001fba0	callq	__ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hc7f9a95ff05a0bbcE ## _$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$::from::hc7f9a95ff05a0bbc
000000010001fba5	leaq	0x24dff(%rip), %rsi
000000010001fbac	leaq	0x28e95(%rip), %r8
000000010001fbb3	movl	$0x7, %edx
000000010001fbb8	movq	%rbx, %rdi
000000010001fbbb	movq	%r14, %rcx
000000010001fbbe	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010001fbc3	movq	%rax, %rdi
000000010001fbc6	callq	__ZN4core3fmt8builders11DebugStruct6finish17he31cc25ca0a4d1e9E ## core::fmt::builders::DebugStruct::finish::he31cc25ca0a4d1e9
000000010001fbcb	movl	%eax, %ebx
000000010001fbcd	movq	-0x60(%rbp), %rsi
000000010001fbd1	testq	%rsi, %rsi
000000010001fbd4	je	0x10001fcfd
000000010001fbda	movq	-0x68(%rbp), %rdi
000000010001fbde	movl	$0x1, %edx
000000010001fbe3	callq	___rust_dealloc
000000010001fbe8	jmp	0x10001fcfd
000000010001fbed	shrq	$0x20, %rbx
000000010001fbf1	cmpl	$0x28, %ebx
000000010001fbf4	ja	0x10001fc0f
000000010001fbf6	xorl	%eax, %eax
000000010001fbf8	leaq	0x171(%rip), %rcx
000000010001fbff	movslq	(%rcx,%rbx,4), %rdx
000000010001fc03	addq	%rcx, %rdx
000000010001fc06	jmpq	*%rdx
000000010001fc08	movb	$0x1, %al
000000010001fc0a	jmp	0x10001fcc2
000000010001fc0f	movb	$0x29, %al
000000010001fc11	jmp	0x10001fcc2
000000010001fc16	movb	$0x2, %al
000000010001fc18	jmp	0x10001fcc2
000000010001fc1d	movb	$0x3, %al
000000010001fc1f	jmp	0x10001fcc2
000000010001fc24	movb	$0x4, %al
000000010001fc26	jmp	0x10001fcc2
000000010001fc2b	movb	$0x5, %al
000000010001fc2d	jmp	0x10001fcc2
000000010001fc32	movb	$0x6, %al
000000010001fc34	jmp	0x10001fcc2
000000010001fc39	movb	$0x7, %al
000000010001fc3b	jmp	0x10001fcc2
000000010001fc40	movb	$0x8, %al
000000010001fc42	jmp	0x10001fcc2
000000010001fc44	movb	$0x9, %al
000000010001fc46	jmp	0x10001fcc2
000000010001fc48	movb	$0xa, %al
000000010001fc4a	jmp	0x10001fcc2
000000010001fc4c	movb	$0xb, %al
000000010001fc4e	jmp	0x10001fcc2
000000010001fc50	movb	$0xc, %al
000000010001fc52	jmp	0x10001fcc2
000000010001fc54	movb	$0xd, %al
000000010001fc56	jmp	0x10001fcc2
000000010001fc58	movb	$0xe, %al
000000010001fc5a	jmp	0x10001fcc2
000000010001fc5c	movb	$0xf, %al
000000010001fc5e	jmp	0x10001fcc2
000000010001fc60	movb	$0x10, %al
000000010001fc62	jmp	0x10001fcc2
000000010001fc64	movb	$0x11, %al
000000010001fc66	jmp	0x10001fcc2
000000010001fc68	movb	$0x12, %al
000000010001fc6a	jmp	0x10001fcc2
000000010001fc6c	movb	$0x13, %al
000000010001fc6e	jmp	0x10001fcc2
000000010001fc70	movb	$0x14, %al
000000010001fc72	jmp	0x10001fcc2
000000010001fc74	movb	$0x15, %al
000000010001fc76	jmp	0x10001fcc2
000000010001fc78	movb	$0x16, %al
000000010001fc7a	jmp	0x10001fcc2
000000010001fc7c	movb	$0x17, %al
000000010001fc7e	jmp	0x10001fcc2
000000010001fc80	movb	$0x18, %al
000000010001fc82	jmp	0x10001fcc2
000000010001fc84	movb	$0x19, %al
000000010001fc86	jmp	0x10001fcc2
000000010001fc88	movb	$0x1a, %al
000000010001fc8a	jmp	0x10001fcc2
000000010001fc8c	movb	$0x1b, %al
000000010001fc8e	jmp	0x10001fcc2
000000010001fc90	movb	$0x1c, %al
000000010001fc92	jmp	0x10001fcc2
000000010001fc94	movb	$0x1d, %al
000000010001fc96	jmp	0x10001fcc2
000000010001fc98	movb	$0x1e, %al
000000010001fc9a	jmp	0x10001fcc2
000000010001fc9c	movb	$0x1f, %al
000000010001fc9e	jmp	0x10001fcc2
000000010001fca0	movb	$0x20, %al
000000010001fca2	jmp	0x10001fcc2
000000010001fca4	movb	$0x21, %al
000000010001fca6	jmp	0x10001fcc2
000000010001fca8	movb	$0x22, %al
000000010001fcaa	jmp	0x10001fcc2
000000010001fcac	movb	$0x23, %al
000000010001fcae	jmp	0x10001fcc2
000000010001fcb0	movb	$0x24, %al
000000010001fcb2	jmp	0x10001fcc2
000000010001fcb4	movb	$0x25, %al
000000010001fcb6	jmp	0x10001fcc2
000000010001fcb8	movb	$0x26, %al
000000010001fcba	jmp	0x10001fcc2
000000010001fcbc	movb	$0x27, %al
000000010001fcbe	jmp	0x10001fcc2
000000010001fcc0	movb	$0x28, %al
000000010001fcc2	movb	%al, -0x50(%rbp)
000000010001fcc5	leaq	0x25ca4(%rip), %rdx
000000010001fccc	leaq	-0xf0(%rbp), %rbx
000000010001fcd3	movl	$0x4, %ecx
000000010001fcd8	movq	%rbx, %rdi
000000010001fcdb	callq	__ZN4core3fmt9Formatter11debug_tuple17habb12f7d8f2d3eb2E ## core::fmt::Formatter::debug_tuple::habb12f7d8f2d3eb2
000000010001fce0	leaq	0x28d41(%rip), %rdx
000000010001fce7	leaq	-0x50(%rbp), %rsi
000000010001fceb	movq	%rbx, %rdi
000000010001fcee	callq	__ZN4core3fmt8builders10DebugTuple5field17hde51ac2d3aad1932E ## core::fmt::builders::DebugTuple::field::hde51ac2d3aad1932
000000010001fcf3	movq	%rax, %rdi
000000010001fcf6	callq	__ZN4core3fmt8builders10DebugTuple6finish17ha860931e67ea6decE ## core::fmt::builders::DebugTuple::finish::ha860931e67ea6dec
000000010001fcfb	movl	%eax, %ebx
000000010001fcfd	movl	%ebx, %eax
000000010001fcff	addq	$0x118, %rsp                    ## imm = 0x118
000000010001fd06	popq	%rbx
000000010001fd07	popq	%r14
000000010001fd09	popq	%r15
000000010001fd0b	popq	%rbp
000000010001fd0c	retq
000000010001fd0d	leaq	0x2964c(%rip), %rax
000000010001fd14	movq	%rax, -0x50(%rbp)
000000010001fd18	movq	$0x1, -0x48(%rbp)
000000010001fd20	movq	$0x0, -0x30(%rbp)
000000010001fd28	leaq	0x23fc1(%rip), %rax
000000010001fd2f	movq	%rax, -0x40(%rbp)
000000010001fd33	movq	$0x0, -0x38(%rbp)
000000010001fd3b	leaq	0x2962e(%rip), %rsi
000000010001fd42	leaq	-0x50(%rbp), %rdi
000000010001fd46	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010001fd4b	movq	%rax, %rbx
000000010001fd4e	leaq	-0x68(%rbp), %rdi
000000010001fd52	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010001fd57	movq	%rbx, %rdi
000000010001fd5a	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010001fd5f	nop
000000010001fd60	js	0x10001fd5e
000000010001fd62	.byte 0xff #bad opcode
000000010001fd63	.byte 0xff #bad opcode
000000010001fd64	.byte 0xdd #bad opcode
000000010001fd65	cld
000000010001fd66	.byte 0xff #bad opcode
000000010001fd67	callq	*-0x3(%rax)
000000010001fd6a	.byte 0xff #bad opcode
000000010001fd6b	decl	0x52fffffe(%rbp)
000000010001fd71	.byte 0xff #bad opcode
000000010001fd72	.byte 0xff #bad opcode
000000010001fd73	lcalll	*-0x59000002(%rax)
000000010001fd79	.byte 0xfe #bad opcode
000000010001fd7a	.byte 0xff #bad opcode
000000010001fd7b	ljmpl	*-0x4b000002(%rbp)
000000010001fd81	.byte 0xfe #bad opcode
000000010001fd82	.byte 0xff #bad opcode
000000010001fd83	.byte 0xff #bad opcode
000000010001fd84	movl	$0xc2fffffe, %ebx               ## imm = 0xC2FFFFFE
000000010001fd89	.byte 0xfe #bad opcode
000000010001fd8a	.byte 0xff #bad opcode
000000010001fd8b	decl	%ecx
000000010001fd8d	.byte 0xfe #bad opcode
000000010001fd8e	.byte 0xff #bad opcode
000000010001fd8f	callq	*%rax
000000010001fd91	.byte 0xfe #bad opcode
000000010001fd92	.byte 0xff #bad opcode
000000010001fd93	callq	*%rsp
000000010001fd95	.byte 0xfe #bad opcode
000000010001fd96	.byte 0xff #bad opcode
000000010001fd97	.byte 0xff #bad opcode
000000010001fd98	fdivr	%st(6), %st
000000010001fd9a	.byte 0xff #bad opcode
000000010001fd9b	.byte 0xff #bad opcode
000000010001fd9c	fdivr	%st, %st(6)
000000010001fd9e	.byte 0xff #bad opcode
000000010001fd9f	jmpq	*%rax
000000010001fda1	.byte 0xfe #bad opcode
000000010001fda2	.byte 0xff #bad opcode
000000010001fda3	jmpq	*%rsp
000000010001fda5	.byte 0xfe #bad opcode
000000010001fda6	.byte 0xff #bad opcode
000000010001fda7	.byte 0xff #bad opcode
000000010001fda8	callq	0xed01fdab
000000010001fdad	.byte 0xfe #bad opcode
000000010001fdae	.byte 0xff #bad opcode
000000010001fdaf	pushq	%rax
000000010001fdb1	.byte 0xfe #bad opcode
000000010001fdb2	.byte 0xff #bad opcode
000000010001fdb3	pushq	%rsp
000000010001fdb5	.byte 0xfe #bad opcode
000000010001fdb6	.byte 0xff #bad opcode
000000010001fdb7	.byte 0xff #bad opcode
000000010001fdb8	clc
000000010001fdb9	.byte 0xfe #bad opcode
000000010001fdba	.byte 0xff #bad opcode
000000010001fdbb	.byte 0xff #bad opcode
000000010001fdbc	cld
000000010001fdbd	.byte 0xfe #bad opcode
000000010001fdbe	.byte 0xff #bad opcode
000000010001fdbf	incl	(%rax)
000000010001fdc1	.byte 0xff #bad opcode
000000010001fdc2	.byte 0xff #bad opcode
000000010001fdc3	incl	(%rdi,%rdi,8)
000000010001fdc6	.byte 0xff #bad opcode
000000010001fdc7	decl	(%rax)
000000010001fdc9	.byte 0xff #bad opcode
000000010001fdca	.byte 0xff #bad opcode
000000010001fdcb	decl	(%rdi,%rdi,8)
000000010001fdce	.byte 0xff #bad opcode
000000010001fdcf	callq	*(%rax)
000000010001fdd1	.byte 0xff #bad opcode
000000010001fdd2	.byte 0xff #bad opcode
000000010001fdd3	callq	*(%rdi,%rdi,8)
000000010001fdd6	.byte 0xff #bad opcode
000000010001fdd7	lcalll	*(%rax)
000000010001fdd9	.byte 0xff #bad opcode
000000010001fdda	.byte 0xff #bad opcode
000000010001fddb	lcalll	*(%rdi,%rdi,8)
000000010001fdde	.byte 0xff #bad opcode
000000010001fddf	jmpq	*(%rax)
000000010001fde1	.byte 0xff #bad opcode
000000010001fde2	.byte 0xff #bad opcode
000000010001fde3	jmpq	*(%rdi,%rdi,8)
000000010001fde6	.byte 0xff #bad opcode
000000010001fde7	ljmpl	*(%rax)
000000010001fde9	.byte 0xff #bad opcode
000000010001fdea	.byte 0xff #bad opcode
000000010001fdeb	ljmpl	*(%rdi,%rdi,8)
000000010001fdee	.byte 0xff #bad opcode
000000010001fdef	pushq	(%rax)
000000010001fdf1	.byte 0xff #bad opcode
000000010001fdf2	.byte 0xff #bad opcode
000000010001fdf3	pushq	(%rdi,%rdi,8)
000000010001fdf6	.byte 0xff #bad opcode
000000010001fdf7	.byte 0xff #bad opcode
000000010001fdf8	cmpb	%bh, %bh
000000010001fdfa	.byte 0xff #bad opcode
000000010001fdfb	.byte 0xff #bad opcode
000000010001fdfc	cmpb	$-0x1, %al
000000010001fdfe	.byte 0xff #bad opcode
000000010001fdff	incl	-0x1(%rax)
000000010001fe02	.byte 0xff #bad opcode
000000010001fe03	incl	-0x1(%rdi,%rdi,8)
000000010001fe07	decl	-0x1(%rax)
000000010001fe0a	.byte 0xff #bad opcode
000000010001fe0b	decl	-0x1(%rdi,%rdi,8)
000000010001fe0f	callq	*-0x1(%rax)
000000010001fe12	.byte 0xff #bad opcode
000000010001fe13	jmpq	*0x2e(%rsi)
000000010001fe16	nopl	(%rax,%rax)
000000010001fe1e	nop
__ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h285969cfd8ae8b36E:
000000010001fe20	pushq	%rbp
000000010001fe21	movq	%rsp, %rbp
000000010001fe24	pushq	%r15
000000010001fe26	pushq	%r14
000000010001fe28	pushq	%rbx
000000010001fe29	subq	$0xd8, %rsp
000000010001fe30	movq	%rsi, %rbx
000000010001fe33	movq	(%rdi), %rdi
000000010001fe36	movl	%edi, %eax
000000010001fe38	andl	$0x3, %eax
000000010001fe3b	leaq	0x4c6(%rip), %rcx
000000010001fe42	movslq	(%rcx,%rax,4), %rax
000000010001fe46	addq	%rcx, %rax
000000010001fe49	jmpq	*%rax
000000010001fe4b	movq	(%rdi), %rax
000000010001fe4e	movq	0x8(%rdi), %rsi
000000010001fe52	movq	%rax, %rdi
000000010001fe55	movq	%rbx, %rdx
000000010001fe58	addq	$0xd8, %rsp
000000010001fe5f	popq	%rbx
000000010001fe60	popq	%r14
000000010001fe62	popq	%r15
000000010001fe64	popq	%rbp
000000010001fe65	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010001fe6a	shrq	$0x20, %rdi
000000010001fe6e	movl	%edi, -0x1c(%rbp)
000000010001fe71	xorps	%xmm0, %xmm0
000000010001fe74	movaps	%xmm0, -0x80(%rbp)
000000010001fe78	movaps	%xmm0, -0x90(%rbp)
000000010001fe7f	movaps	%xmm0, -0xa0(%rbp)
000000010001fe86	movaps	%xmm0, -0xb0(%rbp)
000000010001fe8d	movaps	%xmm0, -0xc0(%rbp)
000000010001fe94	movaps	%xmm0, -0xd0(%rbp)
000000010001fe9b	movaps	%xmm0, -0xe0(%rbp)
000000010001fea2	movaps	%xmm0, -0xf0(%rbp)
000000010001fea9	leaq	-0xf0(%rbp), %rsi
000000010001feb0	movl	$0x80, %edx
000000010001feb5	callq	0x10004286e                     ## symbol stub for: _strerror_r
000000010001feba	testl	%eax, %eax
000000010001febc	js	0x1000202b5
000000010001fec2	leaq	-0xf0(%rbp), %r14
000000010001fec9	movq	%r14, %rdi
000000010001fecc	callq	__ZN4core3ffi5c_str4CStr8from_ptr9strlen_rt17h8fdb3db5c71cd065E ## core::ffi::c_str::CStr::from_ptr::strlen_rt::h8fdb3db5c71cd065
000000010001fed1	leaq	-0x68(%rbp), %r15
000000010001fed5	movq	%r15, %rdi
000000010001fed8	movq	%r14, %rsi
000000010001fedb	movq	%rax, %rdx
000000010001fede	callq	__ZN5alloc6string6String15from_utf8_lossy17hf6cd95066e5242f9E ## alloc::string::String::from_utf8_lossy::hf6cd95066e5242f9
000000010001fee3	leaq	-0x38(%rbp), %r14
000000010001fee7	movq	%r14, %rdi
000000010001feea	movq	%r15, %rsi
000000010001feed	callq	__ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hc7f9a95ff05a0bbcE ## _$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$::from::hc7f9a95ff05a0bbc
000000010001fef2	movq	%r14, -0x68(%rbp)
000000010001fef6	leaq	__ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17ha59db4e74282d1a9E(%rip), %rax ## _$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$::fmt::ha59db4e74282d1a9
000000010001fefd	movq	%rax, -0x60(%rbp)
000000010001ff01	leaq	-0x1c(%rbp), %rax
000000010001ff05	movq	%rax, -0x58(%rbp)
000000010001ff09	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h4b5ed76a5f3e8336E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$::fmt::h4b5ed76a5f3e8336
000000010001ff10	movq	%rax, -0x50(%rbp)
000000010001ff14	leaq	0x28b6d(%rip), %rax
000000010001ff1b	movq	%rax, -0xf0(%rbp)
000000010001ff22	movq	$0x3, -0xe8(%rbp)
000000010001ff2d	movq	$0x0, -0xd0(%rbp)
000000010001ff38	movq	%r15, -0xe0(%rbp)
000000010001ff3f	movq	$0x2, -0xd8(%rbp)
000000010001ff4a	leaq	-0xf0(%rbp), %rsi
000000010001ff51	movq	%rbx, %rdi
000000010001ff54	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
000000010001ff59	movl	%eax, %ebx
000000010001ff5b	movq	-0x30(%rbp), %rsi
000000010001ff5f	testq	%rsi, %rsi
000000010001ff62	je	0x1000202a5
000000010001ff68	movq	-0x38(%rbp), %rdi
000000010001ff6c	movl	$0x1, %edx
000000010001ff71	callq	___rust_dealloc
000000010001ff76	jmp	0x1000202a5
000000010001ff7b	movq	-0x1(%rdi), %rax
000000010001ff7f	movq	0x7(%rdi), %rcx
000000010001ff83	movq	0x20(%rcx), %rcx
000000010001ff87	movq	%rax, %rdi
000000010001ff8a	movq	%rbx, %rsi
000000010001ff8d	addq	$0xd8, %rsp
000000010001ff94	popq	%rbx
000000010001ff95	popq	%r14
000000010001ff97	popq	%r15
000000010001ff99	popq	%rbp
000000010001ff9a	jmpq	*%rcx
000000010001ff9c	shrq	$0x20, %rdi
000000010001ffa0	leaq	0x371(%rip), %rax
000000010001ffa7	movslq	(%rax,%rdi,4), %rcx
000000010001ffab	addq	%rax, %rcx
000000010001ffae	jmpq	*%rcx
000000010001ffb0	leaq	0x23ca9(%rip), %rax
000000010001ffb7	movl	$0x10, %ecx
000000010001ffbc	jmp	0x10002023f
000000010001ffc1	leaq	0x2474c(%rip), %rax
000000010001ffc8	movl	$0x11, %ecx
000000010001ffcd	jmp	0x10002023f
000000010001ffd2	leaq	0x2474c(%rip), %rax
000000010001ffd9	movl	$0x12, %ecx
000000010001ffde	jmp	0x10002023f
000000010001ffe3	leaq	0x23c86(%rip), %rax
000000010001ffea	movl	$0x10, %ecx
000000010001ffef	jmp	0x10002023f
000000010001fff4	leaq	0x23c85(%rip), %rax
000000010001fffb	movl	$0x10, %ecx
0000000100020000	jmp	0x10002023f
0000000100020005	leaq	0x2472b(%rip), %rax
000000010002000c	jmp	0x10002023a
0000000100020011	leaq	0x24732(%rip), %rax
0000000100020018	movl	$0x12, %ecx
000000010002001d	jmp	0x10002023f
0000000100020022	leaq	0x24733(%rip), %rax
0000000100020029	movl	$0xd, %ecx
000000010002002e	jmp	0x10002023f
0000000100020033	leaq	0x2472f(%rip), %rax
000000010002003a	movl	$0xe, %ecx
000000010002003f	jmp	0x10002023f
0000000100020044	leaq	0x2472c(%rip), %rax
000000010002004b	movl	$0x15, %ecx
0000000100020050	jmp	0x10002023f
0000000100020055	leaq	0x24730(%rip), %rax
000000010002005c	movl	$0xc, %ecx
0000000100020061	jmp	0x10002023f
0000000100020066	leaq	0x2472b(%rip), %rax
000000010002006d	movl	$0xb, %ecx
0000000100020072	jmp	0x10002023f
0000000100020077	leaq	0x24725(%rip), %rax
000000010002007e	movl	$0x15, %ecx
0000000100020083	jmp	0x10002023f
0000000100020088	leaq	0x24729(%rip), %rax
000000010002008f	movl	$0x15, %ecx
0000000100020094	jmp	0x10002023f
0000000100020099	leaq	0x2472d(%rip), %rax
00000001000200a0	movl	$0xf, %ecx
00000001000200a5	jmp	0x10002023f
00000001000200aa	leaq	0x2472b(%rip), %rax
00000001000200b1	movl	$0xe, %ecx
00000001000200b6	jmp	0x10002023f
00000001000200bb	leaq	0x24728(%rip), %rax
00000001000200c2	jmp	0x10002023a
00000001000200c7	leaq	0x2472f(%rip), %rax
00000001000200ce	movl	$0x26, %ecx
00000001000200d3	jmp	0x10002023f
00000001000200d8	leaq	0x24744(%rip), %rax
00000001000200df	movl	$0x38, %ecx
00000001000200e4	jmp	0x10002023f
00000001000200e9	leaq	0x2476b(%rip), %rax
00000001000200f0	movl	$0x19, %ecx
00000001000200f5	jmp	0x10002023f
00000001000200fa	leaq	0x24773(%rip), %rax
0000000100020101	movl	$0x17, %ecx
0000000100020106	jmp	0x10002023f
000000010002010b	leaq	0x24779(%rip), %rax
0000000100020112	movl	$0xc, %ecx
0000000100020117	jmp	0x10002023f
000000010002011c	leaq	0x24774(%rip), %rax
0000000100020123	movl	$0x9, %ecx
0000000100020128	jmp	0x10002023f
000000010002012d	leaq	0x2476c(%rip), %rax
0000000100020134	movl	$0xa, %ecx
0000000100020139	jmp	0x10002023f
000000010002013e	leaq	0x23b4b(%rip), %rax
0000000100020145	movl	$0x10, %ecx
000000010002014a	jmp	0x10002023f
000000010002014f	leaq	0x24754(%rip), %rax
0000000100020156	movl	$0x17, %ecx
000000010002015b	jmp	0x10002023f
0000000100020160	leaq	0x2475a(%rip), %rax
0000000100020167	movl	$0x19, %ecx
000000010002016c	jmp	0x10002023f
0000000100020171	leaq	0x24762(%rip), %rax
0000000100020178	movl	$0xe, %ecx
000000010002017d	jmp	0x10002023f
0000000100020182	leaq	0x2475f(%rip), %rax
0000000100020189	movl	$0xd, %ecx
000000010002018e	jmp	0x10002023f
0000000100020193	leaq	0x2475b(%rip), %rax
000000010002019a	movl	$0x14, %ecx
000000010002019f	jmp	0x10002023f
00000001000201a4	leaq	0x257d5(%rip), %rax
00000001000201ab	movl	$0x8, %ecx
00000001000201b0	jmp	0x10002023f
00000001000201b5	leaq	0x2474d(%rip), %rax
00000001000201bc	movl	$0x1b, %ecx
00000001000201c1	jmp	0x10002023f
00000001000201c3	leaq	0x2475a(%rip), %rax
00000001000201ca	movl	$0xe, %ecx
00000001000201cf	jmp	0x10002023f
00000001000201d1	leaq	0x23ac8(%rip), %rax
00000001000201d8	movl	$0x10, %ecx
00000001000201dd	jmp	0x10002023f
00000001000201df	leaq	0x2474c(%rip), %rax
00000001000201e6	movl	$0x16, %ecx
00000001000201eb	jmp	0x10002023f
00000001000201ed	leaq	0x24754(%rip), %rax
00000001000201f4	movl	$0x15, %ecx
00000001000201f9	jmp	0x10002023f
00000001000201fb	leaq	0x2475b(%rip), %rax
0000000100020202	movl	$0xb, %ecx
0000000100020207	jmp	0x10002023f
0000000100020209	leaq	0x24758(%rip), %rax
0000000100020210	movl	$0x16, %ecx
0000000100020215	jmp	0x10002023f
0000000100020217	leaq	0x24760(%rip), %rax
000000010002021e	movl	$0xd, %ecx
0000000100020223	jmp	0x10002023f
0000000100020225	leaq	0x2475f(%rip), %rax
000000010002022c	movl	$0xb, %ecx
0000000100020231	jmp	0x10002023f
0000000100020233	leaq	0x2475c(%rip), %rax
000000010002023a	movl	$0x13, %ecx
000000010002023f	movq	%rax, -0x68(%rbp)
0000000100020243	movq	%rcx, -0x60(%rbp)
0000000100020247	leaq	-0x68(%rbp), %rax
000000010002024b	movq	%rax, -0x38(%rbp)
000000010002024f	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
0000000100020256	movq	%rax, -0x30(%rbp)
000000010002025a	leaq	0x2877f(%rip), %rax
0000000100020261	movq	%rax, -0xf0(%rbp)
0000000100020268	movq	$0x1, -0xe8(%rbp)
0000000100020273	movq	$0x0, -0xd0(%rbp)
000000010002027e	leaq	-0x38(%rbp), %rax
0000000100020282	movq	%rax, -0xe0(%rbp)
0000000100020289	movq	$0x1, -0xd8(%rbp)
0000000100020294	leaq	-0xf0(%rbp), %rsi
000000010002029b	movq	%rbx, %rdi
000000010002029e	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
00000001000202a3	movl	%eax, %ebx
00000001000202a5	movl	%ebx, %eax
00000001000202a7	addq	$0xd8, %rsp
00000001000202ae	popq	%rbx
00000001000202af	popq	%r14
00000001000202b1	popq	%r15
00000001000202b3	popq	%rbp
00000001000202b4	retq
00000001000202b5	leaq	0x290a4(%rip), %rax
00000001000202bc	movq	%rax, -0x68(%rbp)
00000001000202c0	movq	$0x1, -0x60(%rbp)
00000001000202c8	movq	$0x0, -0x48(%rbp)
00000001000202d0	leaq	0x23a19(%rip), %rax
00000001000202d7	movq	%rax, -0x58(%rbp)
00000001000202db	movq	$0x0, -0x50(%rbp)
00000001000202e3	leaq	0x29086(%rip), %rsi
00000001000202ea	leaq	-0x68(%rbp), %rdi
00000001000202ee	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000202f3	movq	%rax, %rbx
00000001000202f6	leaq	-0x38(%rbp), %rdi
00000001000202fa	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
00000001000202ff	movq	%rbx, %rdi
0000000100020302	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100020307	nop
0000000100020308	sti
000000010002030a	.byte 0xff #bad opcode
000000010002030b	pushq	-0x4(%rbx)
000000010002030e	.byte 0xff #bad opcode
000000010002030f	jmpq	*-0x5(%rdx)
0000000100020312	.byte 0xff #bad opcode
0000000100020313	callq	*-0x3670001(%rsp,%rdi,8)
000000010002031a	.byte 0xff #bad opcode
000000010002031b	ljmpl	*-0x45000004(%rcx)
0000000100020321	cld
0000000100020322	.byte 0xff #bad opcode
0000000100020323	decl	%ebx
0000000100020325	cld
0000000100020326	.byte 0xff #bad opcode
0000000100020327	.byte 0xff #bad opcode
0000000100020328	fdivr	%st, %st(4)
000000010002032a	.byte 0xff #bad opcode
000000010002032b	.byte 0xff #bad opcode
000000010002032c	inl	%dx, %eax
000000010002032d	cld
000000010002032e	.byte 0xff #bad opcode
000000010002032f	.byte 0xff #bad opcode
0000000100020330	stc
0000000100020331	cld
0000000100020332	.byte 0xff #bad opcode
0000000100020333	decl	(%rdx)
0000000100020335	std
0000000100020336	.byte 0xff #bad opcode
0000000100020337	lcalll	*(%rbx)
0000000100020339	std
000000010002033a	.byte 0xff #bad opcode
000000010002033b	ljmpl	*-0x2c20001(,%rdi,8)
0000000100020342	.byte 0xff #bad opcode
0000000100020343	decl	-0x3(%rsi)
0000000100020346	.byte 0xff #bad opcode
0000000100020347	lcalll	*-0x3(%rdi)
000000010002034a	.byte 0xff #bad opcode
000000010002034b	pushq	-0x3(%rax)
000000010002034e	.byte 0xff #bad opcode
000000010002034f	incl	-0x6d000003(%rcx)
0000000100020355	std
0000000100020356	.byte 0xff #bad opcode
0000000100020357	jmpq	*-0x50000003(%rbx)
000000010002035d	std
000000010002035e	.byte 0xff #bad opcode
000000010002035f	incl	%eax
0000000100020361	std
0000000100020362	.byte 0xff #bad opcode
0000000100020363	callq	*%rcx
0000000100020365	std
0000000100020366	.byte 0xff #bad opcode
0000000100020367	jmpq	*%rdx
0000000100020369	std
000000010002036a	.byte 0xff #bad opcode
000000010002036b	pushq	%rbx
000000010002036d	std
000000010002036e	.byte 0xff #bad opcode
000000010002036f	incl	(%rsi,%rdi,8)
0000000100020372	.byte 0xff #bad opcode
0000000100020373	callq	*0x26fffffe(%rip)
0000000100020379	.byte 0xfe #bad opcode
000000010002037a	.byte 0xff #bad opcode
000000010002037b	pushq	(%rdi)
000000010002037d	.byte 0xfe #bad opcode
000000010002037e	.byte 0xff #bad opcode
000000010002037f	decl	-0x2(%rax)
0000000100020382	.byte 0xff #bad opcode
0000000100020383	lcalll	*-0x2(%rcx)
0000000100020386	.byte 0xff #bad opcode
0000000100020387	ljmpl	*-0x2(%rdx)
000000010002038a	.byte 0xff #bad opcode
000000010002038b	.byte 0xff #bad opcode
000000010002038c	jnp	0x10002038c
000000010002038e	.byte 0xff #bad opcode
000000010002038f	decl	-0x1620001(%rsi,%rdi,8)
0000000100020396	.byte 0xff #bad opcode
0000000100020397	ljmpl	*-0x46000002(%rbx)
000000010002039d	.byte 0xfe #bad opcode
000000010002039e	.byte 0xff #bad opcode
000000010002039f	incl	%edi
00000001000203a1	.byte 0xfe #bad opcode
00000001000203a2	.byte 0xff #bad opcode
00000001000203a3	callq	*%rbp
00000001000203a5	.byte 0xfe #bad opcode
00000001000203a6	.byte 0xff #bad opcode
00000001000203a7	jmpq	*%rbx
00000001000203a9	.byte 0xfe #bad opcode
00000001000203aa	.byte 0xff #bad opcode
00000001000203ab	pushq	%rcx
00000001000203ad	.byte 0xfe #bad opcode
00000001000203ae	.byte 0xff #bad opcode
00000001000203af	.byte 0xff #bad opcode
00000001000203b0	.byte 0xff #bad opcode
00000001000203b1	.byte 0xfe #bad opcode
00000001000203b2	.byte 0xff #bad opcode
00000001000203b3	decl	0x1bffffff(%rip)
00000001000203b9	.byte 0xff #bad opcode
00000001000203ba	.byte 0xff #bad opcode
00000001000203bb	decl	(%rdi)
00000001000203bd	.byte 0x1f #bad opcode
00000001000203be	addb	%dl, 0x48(%rbp)
00000001000203c2	movl	%esp, %ebp
00000001000203c4	pushq	%r15
00000001000203c6	pushq	%r14
00000001000203c8	pushq	%r13
00000001000203ca	pushq	%r12
00000001000203cc	pushq	%rbx
00000001000203cd	pushq	%rax
00000001000203ce	movq	%rcx, %rbx
00000001000203d1	movq	%rdx, %r12
00000001000203d4	movq	%rsi, %r15
00000001000203d7	movq	%rdi, %r14
00000001000203da	movq	0x8(%rsi), %rax
00000001000203de	movq	0x10(%rsi), %r13
00000001000203e2	subq	%r13, %rax
00000001000203e5	cmpq	%rcx, %rax
00000001000203e8	jb	0x10002041f
00000001000203ea	movq	(%r15), %rdi
00000001000203ed	addq	%r13, %rdi
00000001000203f0	movq	%r12, %rsi
00000001000203f3	movq	%rbx, %rdx
00000001000203f6	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000203fb	addq	%rbx, %r13
00000001000203fe	movq	%r13, 0x10(%r15)
0000000100020402	movq	%rbx, 0x8(%r14)
0000000100020406	movq	$0x0, (%r14)
000000010002040d	movq	%r14, %rax
0000000100020410	addq	$0x8, %rsp
0000000100020414	popq	%rbx
0000000100020415	popq	%r12
0000000100020417	popq	%r13
0000000100020419	popq	%r14
000000010002041b	popq	%r15
000000010002041d	popq	%rbp
000000010002041e	retq
000000010002041f	movq	%r15, %rdi
0000000100020422	movq	%r13, %rsi
0000000100020425	movq	%rbx, %rdx
0000000100020428	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
000000010002042d	movq	0x10(%r15), %r13
0000000100020431	jmp	0x1000203ea
0000000100020433	nopw	%cs:(%rax,%rax)
000000010002043d	nopl	(%rax)
__ZN3std2io5impls74_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..vec..Vec$LT$u8$C$A$GT$$GT$14write_vectored17h4584d0bbb533cd95E:
0000000100020440	pushq	%rbp
0000000100020441	movq	%rsp, %rbp
0000000100020444	pushq	%r15
0000000100020446	pushq	%r14
0000000100020448	pushq	%r13
000000010002044a	pushq	%r12
000000010002044c	pushq	%rbx
000000010002044d	subq	$0x18, %rsp
0000000100020451	movq	%rdi, %rbx
0000000100020454	testq	%rcx, %rcx
0000000100020457	je	0x100020475
0000000100020459	movq	%rcx, %r14
000000010002045c	movq	%rdx, %r15
000000010002045f	movq	%rsi, %r8
0000000100020462	movl	%r14d, %eax
0000000100020465	andl	$0x3, %eax
0000000100020468	cmpq	$0x4, %rcx
000000010002046c	jae	0x10002047d
000000010002046e	xorl	%ecx, %ecx
0000000100020470	xorl	%r13d, %r13d
0000000100020473	jmp	0x1000204ac
0000000100020475	xorl	%r13d, %r13d
0000000100020478	jmp	0x100020558
000000010002047d	movq	%r14, %rdx
0000000100020480	andq	$-0x4, %rdx
0000000100020484	leaq	0x38(%r15), %rsi
0000000100020488	xorl	%ecx, %ecx
000000010002048a	xorl	%r13d, %r13d
000000010002048d	nopl	(%rax)
0000000100020490	addq	-0x30(%rsi), %r13
0000000100020494	addq	-0x20(%rsi), %r13
0000000100020498	addq	-0x10(%rsi), %r13
000000010002049c	addq	(%rsi), %r13
000000010002049f	addq	$0x4, %rcx
00000001000204a3	addq	$0x40, %rsi
00000001000204a7	cmpq	%rcx, %rdx
00000001000204aa	jne	0x100020490
00000001000204ac	testq	%rax, %rax
00000001000204af	je	0x1000204cd
00000001000204b1	shlq	$0x4, %rcx
00000001000204b5	leaq	0x8(%rcx,%r15), %rcx
00000001000204ba	shlq	$0x4, %rax
00000001000204be	xorl	%edx, %edx
00000001000204c0	addq	(%rcx,%rdx), %r13
00000001000204c4	addq	$0x10, %rdx
00000001000204c8	cmpq	%rdx, %rax
00000001000204cb	jne	0x1000204c0
00000001000204cd	movq	0x8(%r8), %rax
00000001000204d1	movq	0x10(%r8), %rsi
00000001000204d5	subq	%rsi, %rax
00000001000204d8	cmpq	%r13, %rax
00000001000204db	movq	%r8, -0x30(%rbp)
00000001000204df	jb	0x100020575
00000001000204e5	testq	%r14, %r14
00000001000204e8	je	0x100020558
00000001000204ea	movq	%rbx, -0x38(%rbp)
00000001000204ee	shlq	$0x4, %r14
00000001000204f2	addq	%r15, %r14
00000001000204f5	movq	0x10(%r8), %rbx
00000001000204f9	movq	%r14, -0x40(%rbp)
00000001000204fd	jmp	0x100020529
00000001000204ff	nop
0000000100020500	movq	(%r8), %rdi
0000000100020503	addq	%rbx, %rdi
0000000100020506	movq	%r12, %rsi
0000000100020509	movq	%r14, %rdx
000000010002050c	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100020511	movq	-0x30(%rbp), %r8
0000000100020515	addq	%r14, %rbx
0000000100020518	movq	%rbx, 0x10(%r8)
000000010002051c	addq	$0x10, %r15
0000000100020520	movq	-0x40(%rbp), %r14
0000000100020524	cmpq	%r14, %r15
0000000100020527	je	0x100020554
0000000100020529	movq	(%r15), %r12
000000010002052c	movq	0x8(%r15), %r14
0000000100020530	movq	0x8(%r8), %rax
0000000100020534	subq	%rbx, %rax
0000000100020537	cmpq	%r14, %rax
000000010002053a	jae	0x100020500
000000010002053c	movq	%r8, %rdi
000000010002053f	movq	%rbx, %rsi
0000000100020542	movq	%r14, %rdx
0000000100020545	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
000000010002054a	movq	-0x30(%rbp), %r8
000000010002054e	movq	0x10(%r8), %rbx
0000000100020552	jmp	0x100020500
0000000100020554	movq	-0x38(%rbp), %rbx
0000000100020558	movq	%r13, 0x8(%rbx)
000000010002055c	movq	$0x0, (%rbx)
0000000100020563	movq	%rbx, %rax
0000000100020566	addq	$0x18, %rsp
000000010002056a	popq	%rbx
000000010002056b	popq	%r12
000000010002056d	popq	%r13
000000010002056f	popq	%r14
0000000100020571	popq	%r15
0000000100020573	popq	%rbp
0000000100020574	retq
0000000100020575	movq	%r8, %rdi
0000000100020578	movq	%r13, %rdx
000000010002057b	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
0000000100020580	movq	-0x30(%rbp), %r8
0000000100020584	testq	%r14, %r14
0000000100020587	jne	0x1000204ea
000000010002058d	jmp	0x100020558
000000010002058f	nop
__ZN3std2io5impls74_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..vec..Vec$LT$u8$C$A$GT$$GT$17is_write_vectored17h8bbd95539adac2d4E:
0000000100020590	pushq	%rbp
0000000100020591	movq	%rsp, %rbp
0000000100020594	movb	$0x1, %al
0000000100020596	popq	%rbp
0000000100020597	retq
0000000100020598	nopl	(%rax,%rax)
__ZN3std2io5impls74_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..vec..Vec$LT$u8$C$A$GT$$GT$9write_all17h190a4ccf136a2bd9E:
00000001000205a0	pushq	%rbp
00000001000205a1	movq	%rsp, %rbp
00000001000205a4	pushq	%r15
00000001000205a6	pushq	%r14
00000001000205a8	pushq	%r12
00000001000205aa	pushq	%rbx
00000001000205ab	movq	%rdx, %rbx
00000001000205ae	movq	%rsi, %r15
00000001000205b1	movq	%rdi, %r14
00000001000205b4	movq	0x8(%rdi), %rax
00000001000205b8	movq	0x10(%rdi), %r12
00000001000205bc	subq	%r12, %rax
00000001000205bf	cmpq	%rdx, %rax
00000001000205c2	jb	0x1000205e7
00000001000205c4	movq	(%r14), %rdi
00000001000205c7	addq	%r12, %rdi
00000001000205ca	movq	%r15, %rsi
00000001000205cd	movq	%rbx, %rdx
00000001000205d0	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000205d5	addq	%rbx, %r12
00000001000205d8	movq	%r12, 0x10(%r14)
00000001000205dc	xorl	%eax, %eax
00000001000205de	popq	%rbx
00000001000205df	popq	%r12
00000001000205e1	popq	%r14
00000001000205e3	popq	%r15
00000001000205e5	popq	%rbp
00000001000205e6	retq
00000001000205e7	movq	%r14, %rdi
00000001000205ea	movq	%r12, %rsi
00000001000205ed	movq	%rbx, %rdx
00000001000205f0	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
00000001000205f5	movq	0x10(%r14), %r12
00000001000205f9	jmp	0x1000205c4
00000001000205fb	nopl	(%rax,%rax)
__ZN3std2io5impls74_$LT$impl$u20$std..io..Write$u20$for$u20$alloc..vec..Vec$LT$u8$C$A$GT$$GT$5flush17ha626201184299afcE:
0000000100020600	pushq	%rbp
0000000100020601	movq	%rsp, %rbp
0000000100020604	xorl	%eax, %eax
0000000100020606	popq	%rbp
0000000100020607	retq
0000000100020608	nopl	(%rax,%rax)
__ZN60_$LT$std..io..stdio..StdoutRaw$u20$as$u20$std..io..Write$GT$9write_all17h603b64199341aa00E:
0000000100020610	pushq	%rbp
0000000100020611	movq	%rsp, %rbp
0000000100020614	pushq	%r15
0000000100020616	pushq	%r14
0000000100020618	pushq	%rbx
0000000100020619	pushq	%rax
000000010002061a	testq	%rdx, %rdx
000000010002061d	je	0x100020684
000000010002061f	movq	%rdx, %rbx
0000000100020622	movq	%rsi, %r14
0000000100020625	jmp	0x100020649
0000000100020627	nopw	(%rax,%rax)
0000000100020630	callq	0x10004274e                     ## symbol stub for: ___error
0000000100020635	movl	(%rax), %r15d
0000000100020638	movl	%r15d, %edi
000000010002063b	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
0000000100020640	cmpb	$0x23, %al
0000000100020642	jne	0x1000206aa
0000000100020644	testq	%rbx, %rbx
0000000100020647	je	0x100020684
0000000100020649	cmpq	$0x7ffffffe, %rbx               ## imm = 0x7FFFFFFE
0000000100020650	movl	$0x7ffffffe, %edx               ## imm = 0x7FFFFFFE
0000000100020655	cmovbq	%rbx, %rdx
0000000100020659	movl	$0x1, %edi
000000010002065e	movq	%r14, %rsi
0000000100020661	callq	0x100042880                     ## symbol stub for: _write
0000000100020666	cmpq	$-0x1, %rax
000000010002066a	je	0x100020630
000000010002066c	testq	%rax, %rax
000000010002066f	je	0x100020695
0000000100020671	movq	%rbx, %rcx
0000000100020674	subq	%rax, %rcx
0000000100020677	jb	0x1000206d5
0000000100020679	addq	%rax, %r14
000000010002067c	movq	%rcx, %rbx
000000010002067f	testq	%rbx, %rbx
0000000100020682	jne	0x100020649
0000000100020684	xorl	%r15d, %r15d
0000000100020687	movq	%r15, %rax
000000010002068a	addq	$0x8, %rsp
000000010002068e	popq	%rbx
000000010002068f	popq	%r14
0000000100020691	popq	%r15
0000000100020693	popq	%rbp
0000000100020694	retq
0000000100020695	leaq	0x28504(%rip), %r15
000000010002069c	movl	%r15d, %eax
000000010002069f	andl	$0x3, %eax
00000001000206a2	cmpq	$0x2, %rax
00000001000206a6	jae	0x1000206be
00000001000206a8	jmp	0x100020687
00000001000206aa	shlq	$0x20, %r15
00000001000206ae	orq	$0x2, %r15
00000001000206b2	movl	%r15d, %eax
00000001000206b5	andl	$0x3, %eax
00000001000206b8	cmpq	$0x2, %rax
00000001000206bc	jb	0x100020687
00000001000206be	cmpl	$0x2, %eax
00000001000206c1	jne	0x100020687
00000001000206c3	movq	%r15, %rax
00000001000206c6	shrq	$0x20, %rax
00000001000206ca	xorl	%ecx, %ecx
00000001000206cc	cmpl	$0x9, %eax
00000001000206cf	cmoveq	%rcx, %r15
00000001000206d3	jmp	0x100020687
00000001000206d5	leaq	0x284dc(%rip), %rdx
00000001000206dc	movq	%rax, %rdi
00000001000206df	movq	%rbx, %rsi
00000001000206e2	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
00000001000206e7	nopw	(%rax,%rax)
__ZN61_$LT$$RF$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$9write_fmt17ha79b8b8a7b45e655E:
00000001000206f0	pushq	%rbp
00000001000206f1	movq	%rsp, %rbp
00000001000206f4	pushq	%r15
00000001000206f6	pushq	%r14
00000001000206f8	pushq	%r12
00000001000206fa	pushq	%rbx
00000001000206fb	subq	$0x50, %rsp
00000001000206ff	movq	%rsi, %rbx
0000000100020702	movq	(%rdi), %rax
0000000100020705	movq	(%rax), %r14
0000000100020708	movq	0x8(%r14), %rcx
000000010002070c	leaq	__ZN3std4sync7remutex25current_thread_unique_ptr1X7__getit3VAL17hd275f0301f7246beE(%rip), %rdi ## std::sync::remutex::current_thread_unique_ptr::X::__getit::VAL::hd275f0301f7246be
0000000100020713	callq	*(%rdi)
0000000100020715	cmpq	%rax, %rcx
0000000100020718	jne	0x10002072c
000000010002071a	movl	0x38(%r14), %eax
000000010002071e	incl	%eax
0000000100020720	je	0x100020862
0000000100020726	movl	%eax, 0x38(%r14)
000000010002072a	jmp	0x100020752
000000010002072c	movq	(%r14), %rdi
000000010002072f	testq	%rdi, %rdi
0000000100020732	je	0x10002084b
0000000100020738	callq	0x10004280e                     ## symbol stub for: _pthread_mutex_lock
000000010002073d	leaq	__ZN3std4sync7remutex25current_thread_unique_ptr1X7__getit3VAL17hd275f0301f7246beE(%rip), %rdi ## std::sync::remutex::current_thread_unique_ptr::X::__getit::VAL::hd275f0301f7246be
0000000100020744	callq	*(%rdi)
0000000100020746	movq	%rax, 0x8(%r14)
000000010002074a	movl	$0x1, 0x38(%r14)
0000000100020752	movq	%r14, -0x28(%rbp)
0000000100020756	movq	0x28(%rbx), %rax
000000010002075a	movq	%rax, -0x40(%rbp)
000000010002075e	movq	0x20(%rbx), %rax
0000000100020762	movq	%rax, -0x48(%rbp)
0000000100020766	movq	0x18(%rbx), %rax
000000010002076a	movq	%rax, -0x50(%rbp)
000000010002076e	movq	0x10(%rbx), %rax
0000000100020772	movq	%rax, -0x58(%rbp)
0000000100020776	movq	(%rbx), %rax
0000000100020779	movq	0x8(%rbx), %rcx
000000010002077d	movq	%rcx, -0x60(%rbp)
0000000100020781	movq	%rax, -0x68(%rbp)
0000000100020785	leaq	-0x28(%rbp), %rax
0000000100020789	movq	%rax, -0x38(%rbp)
000000010002078d	movq	$0x0, -0x30(%rbp)
0000000100020795	leaq	0x2844c(%rip), %rsi
000000010002079c	leaq	-0x38(%rbp), %rdi
00000001000207a0	leaq	-0x68(%rbp), %rdx
00000001000207a4	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
00000001000207a9	movq	-0x30(%rbp), %rcx
00000001000207ad	testb	%al, %al
00000001000207af	je	0x1000207c1
00000001000207b1	testq	%rcx, %rcx
00000001000207b4	leaq	0x28415(%rip), %rbx
00000001000207bb	cmovneq	%rcx, %rbx
00000001000207bf	jmp	0x10002081a
00000001000207c1	testq	%rcx, %rcx
00000001000207c4	je	0x100020818
00000001000207c6	movl	%ecx, %eax
00000001000207c8	andl	$0x3, %eax
00000001000207cb	xorl	%ebx, %ebx
00000001000207cd	leaq	-0x2(%rax), %rdx
00000001000207d1	cmpq	$0x2, %rdx
00000001000207d5	jb	0x10002081a
00000001000207d7	testq	%rax, %rax
00000001000207da	je	0x10002081a
00000001000207dc	leaq	-0x1(%rcx), %rbx
00000001000207e0	movq	-0x1(%rcx), %r15
00000001000207e4	movq	0x7(%rcx), %r12
00000001000207e8	movq	%r15, %rdi
00000001000207eb	callq	*(%r12)
00000001000207ef	movq	0x8(%r12), %rsi
00000001000207f4	testq	%rsi, %rsi
00000001000207f7	je	0x100020806
00000001000207f9	movq	0x10(%r12), %rdx
00000001000207fe	movq	%r15, %rdi
0000000100020801	callq	___rust_dealloc
0000000100020806	movl	$0x18, %esi
000000010002080b	movl	$0x8, %edx
0000000100020810	movq	%rbx, %rdi
0000000100020813	callq	___rust_dealloc
0000000100020818	xorl	%ebx, %ebx
000000010002081a	movq	-0x28(%rbp), %rdi
000000010002081e	decl	0x38(%rdi)
0000000100020821	jne	0x10002083b
0000000100020823	movq	$0x0, 0x8(%rdi)
000000010002082b	movq	(%rdi), %rax
000000010002082e	testq	%rax, %rax
0000000100020831	je	0x10002085b
0000000100020833	movq	%rax, %rdi
0000000100020836	callq	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
000000010002083b	movq	%rbx, %rax
000000010002083e	addq	$0x50, %rsp
0000000100020842	popq	%rbx
0000000100020843	popq	%r12
0000000100020845	popq	%r14
0000000100020847	popq	%r15
0000000100020849	popq	%rbp
000000010002084a	retq
000000010002084b	movq	%r14, %rdi
000000010002084e	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
0000000100020853	movq	%rax, %rdi
0000000100020856	jmp	0x100020738
000000010002085b	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
0000000100020860	jmp	0x100020833
0000000100020862	leaq	0x2430a(%rip), %rdi
0000000100020869	leaq	0x28618(%rip), %rdx
0000000100020870	movl	$0x26, %esi
0000000100020875	callq	__ZN4core6option13expect_failed17he6bc26adfac46087E ## core::option::expect_failed::he6bc26adfac46087
000000010002087a	movq	%rax, %r14
000000010002087d	movq	%r15, %rdi
0000000100020880	movq	%r12, %rsi
0000000100020883	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100020888	movq	%rbx, %rdi
000000010002088b	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100020890	jmp	0x10002089e
0000000100020892	movq	%rax, %r14
0000000100020895	leaq	-0x38(%rbp), %rdi
0000000100020899	callq	__ZN4core3ptr88drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h34ebf8100cc30064E ## core::ptr::drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$::h34ebf8100cc30064
000000010002089e	movq	-0x28(%rbp), %rdi
00000001000208a2	callq	__ZN4core3ptr169drop_in_place$LT$std..sync..remutex..ReentrantMutexGuard$LT$core..cell..RefCell$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$$GT$$GT$17h5ea03d896a7878bdE ## core::ptr::drop_in_place$LT$std..sync..remutex..ReentrantMutexGuard$LT$core..cell..RefCell$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$$GT$$GT$::h5ea03d896a7878bd
00000001000208a7	movq	%r14, %rdi
00000001000208aa	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000208af	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000208b4	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000208b9	nopl	(%rax)
__ZN61_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$9write_all17hceead3af801541f1E:
00000001000208c0	pushq	%rbp
00000001000208c1	movq	%rsp, %rbp
00000001000208c4	pushq	%r15
00000001000208c6	pushq	%r14
00000001000208c8	pushq	%r13
00000001000208ca	pushq	%r12
00000001000208cc	pushq	%rbx
00000001000208cd	subq	$0x18, %rsp
00000001000208d1	movq	(%rdi), %rbx
00000001000208d4	cmpq	$0x0, 0x10(%rbx)
00000001000208d9	jne	0x100020a5a
00000001000208df	movq	%rdx, %r14
00000001000208e2	movq	%rsi, %r15
00000001000208e5	leaq	0x10(%rbx), %r12
00000001000208e9	movq	$-0x1, 0x10(%rbx)
00000001000208f1	movl	$0xa, %edi
00000001000208f6	callq	__ZN4core5slice6memchr7memrchr17hdf86f1da36afe5e5E ## core::slice::memchr::memrchr::hdf86f1da36afe5e5
00000001000208fb	leaq	0x18(%rbx), %rcx
00000001000208ff	movq	%rcx, -0x40(%rbp)
0000000100020903	testq	%rax, %rax
0000000100020906	je	0x10002094f
0000000100020908	movq	%rdx, %r13
000000010002090b	movq	%r12, -0x38(%rbp)
000000010002090f	incq	%r13
0000000100020912	cmpq	%r14, %r13
0000000100020915	ja	0x100020a7d
000000010002091b	movq	0x28(%rbx), %r12
000000010002091f	testq	%r12, %r12
0000000100020922	je	0x100020996
0000000100020924	movq	0x20(%rbx), %rax
0000000100020928	subq	%r12, %rax
000000010002092b	cmpq	%r13, %rax
000000010002092e	jbe	0x1000209a7
0000000100020930	movq	0x18(%rbx), %rdi
0000000100020934	addq	%r12, %rdi
0000000100020937	movq	%r15, %rsi
000000010002093a	movq	%r13, %rdx
000000010002093d	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100020942	addq	%r13, %r12
0000000100020945	movq	%r12, 0x28(%rbx)
0000000100020949	movq	-0x38(%rbp), %r12
000000010002094d	jmp	0x1000209c3
000000010002094f	movq	0x28(%rbx), %r13
0000000100020953	testq	%r13, %r13
0000000100020956	je	0x100020a08
000000010002095c	movq	-0x40(%rbp), %rax
0000000100020960	movq	(%rax), %rax
0000000100020963	cmpb	$0xa, -0x1(%r13,%rax)
0000000100020969	jne	0x100020981
000000010002096b	movq	-0x40(%rbp), %rdi
000000010002096f	callq	__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$9flush_buf17h427c3bc684e5dfc1E ## std::io::buffered::bufwriter::BufWriter$LT$W$GT$::flush_buf::h427c3bc684e5dfc1
0000000100020974	testq	%rax, %rax
0000000100020977	jne	0x100020a47
000000010002097d	movq	0x28(%rbx), %r13
0000000100020981	movq	0x20(%rbx), %rax
0000000100020985	subq	%r13, %rax
0000000100020988	cmpq	%r14, %rax
000000010002098b	ja	0x100020a17
0000000100020991	jmp	0x100020a38
0000000100020996	movq	%r15, %rsi
0000000100020999	movq	%r13, %rdx
000000010002099c	movq	-0x38(%rbp), %r12
00000001000209a0	callq	__ZN60_$LT$std..io..stdio..StdoutRaw$u20$as$u20$std..io..Write$GT$9write_all17h603b64199341aa00E ## _$LT$std..io..stdio..StdoutRaw$u20$as$u20$std..io..Write$GT$::write_all::h603b64199341aa00
00000001000209a5	jmp	0x1000209cc
00000001000209a7	movq	-0x40(%rbp), %rdi
00000001000209ab	movq	%r15, %rsi
00000001000209ae	movq	%r13, %rdx
00000001000209b1	movq	-0x38(%rbp), %r12
00000001000209b5	callq	__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$14write_all_cold17hc95933a537e440bdE ## std::io::buffered::bufwriter::BufWriter$LT$W$GT$::write_all_cold::hc95933a537e440bd
00000001000209ba	testq	%rax, %rax
00000001000209bd	jne	0x100020a47
00000001000209c3	movq	-0x40(%rbp), %rdi
00000001000209c7	callq	__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$9flush_buf17h427c3bc684e5dfc1E ## std::io::buffered::bufwriter::BufWriter$LT$W$GT$::flush_buf::h427c3bc684e5dfc1
00000001000209cc	testq	%rax, %rax
00000001000209cf	jne	0x100020a47
00000001000209d1	addq	%r13, %r15
00000001000209d4	subq	%r13, %r14
00000001000209d7	movq	0x20(%rbx), %rax
00000001000209db	movq	0x28(%rbx), %r12
00000001000209df	subq	%r12, %rax
00000001000209e2	cmpq	%r14, %rax
00000001000209e5	jbe	0x100020a34
00000001000209e7	movq	0x18(%rbx), %rdi
00000001000209eb	addq	%r12, %rdi
00000001000209ee	movq	%r15, %rsi
00000001000209f1	movq	%r14, %rdx
00000001000209f4	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000209f9	addq	%r14, %r12
00000001000209fc	movq	%r12, 0x28(%rbx)
0000000100020a00	xorl	%eax, %eax
0000000100020a02	movq	-0x38(%rbp), %r12
0000000100020a06	jmp	0x100020a47
0000000100020a08	xorl	%r13d, %r13d
0000000100020a0b	movq	0x20(%rbx), %rax
0000000100020a0f	subq	%r13, %rax
0000000100020a12	cmpq	%r14, %rax
0000000100020a15	jbe	0x100020a38
0000000100020a17	movq	0x18(%rbx), %rdi
0000000100020a1b	addq	%r13, %rdi
0000000100020a1e	movq	%r15, %rsi
0000000100020a21	movq	%r14, %rdx
0000000100020a24	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100020a29	addq	%r14, %r13
0000000100020a2c	movq	%r13, 0x28(%rbx)
0000000100020a30	xorl	%eax, %eax
0000000100020a32	jmp	0x100020a47
0000000100020a34	movq	-0x38(%rbp), %r12
0000000100020a38	movq	-0x40(%rbp), %rdi
0000000100020a3c	movq	%r15, %rsi
0000000100020a3f	movq	%r14, %rdx
0000000100020a42	callq	__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$14write_all_cold17hc95933a537e440bdE ## std::io::buffered::bufwriter::BufWriter$LT$W$GT$::write_all_cold::hc95933a537e440bd
0000000100020a47	incq	(%r12)
0000000100020a4b	addq	$0x18, %rsp
0000000100020a4f	popq	%rbx
0000000100020a50	popq	%r12
0000000100020a52	popq	%r13
0000000100020a54	popq	%r14
0000000100020a56	popq	%r15
0000000100020a58	popq	%rbp
0000000100020a59	retq
0000000100020a5a	leaq	0x2324f(%rip), %rdi
0000000100020a61	leaq	0x27bc0(%rip), %rcx
0000000100020a68	leaq	0x28061(%rip), %r8
0000000100020a6f	leaq	-0x30(%rbp), %rdx
0000000100020a73	movl	$0x10, %esi
0000000100020a78	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100020a7d	leaq	0x2331a(%rip), %rdi
0000000100020a84	leaq	0x27f65(%rip), %rdx
0000000100020a8b	movl	$0x23, %esi
0000000100020a90	movq	-0x38(%rbp), %r12
0000000100020a94	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100020a99	ud2
0000000100020a9b	movq	%rax, %r14
0000000100020a9e	movq	%r12, %rdi
0000000100020aa1	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
0000000100020aa6	movq	%r14, %rdi
0000000100020aa9	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100020aae	nop
__ZN3std2io5stdio31print_to_buffer_if_capture_used17h4ef8fe2b4c1a7848E:
0000000100020ab0	pushq	%rbp
0000000100020ab1	movq	%rsp, %rbp
0000000100020ab4	pushq	%r15
0000000100020ab6	pushq	%r14
0000000100020ab8	pushq	%r13
0000000100020aba	pushq	%r12
0000000100020abc	pushq	%rbx
0000000100020abd	subq	$0x18, %rsp
0000000100020ac1	movzbl	__ZN3std2io5stdio19OUTPUT_CAPTURE_USED17he5176a8685b0923eE.0(%rip), %eax ## std::io::stdio::OUTPUT_CAPTURE_USED::he5176a8685b0923e (.0)
0000000100020ac8	testb	%al, %al
0000000100020aca	je	0x100020c00
0000000100020ad0	movq	%rdi, %r13
0000000100020ad3	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
0000000100020ada	callq	*(%rdi)
0000000100020adc	cmpq	$0x0, (%rax)
0000000100020ae0	je	0x100020aeb
0000000100020ae2	movq	%rax, %r14
0000000100020ae5	addq	$0x8, %r14
0000000100020ae9	jmp	0x100020b00
0000000100020aeb	xorl	%ebx, %ebx
0000000100020aed	xorl	%edi, %edi
0000000100020aef	callq	__ZN3std3sys6common12thread_local10fast_local12Key$LT$T$GT$14try_initialize17hcfbbaac63aec0d68E ## std::sys::common::thread_local::fast_local::Key$LT$T$GT$::try_initialize::hcfbbaac63aec0d68
0000000100020af4	movq	%rax, %r14
0000000100020af7	testq	%rax, %rax
0000000100020afa	je	0x100020c02
0000000100020b00	movq	(%r14), %rbx
0000000100020b03	movq	$0x0, (%r14)
0000000100020b0a	testq	%rbx, %rbx
0000000100020b0d	je	0x100020c00
0000000100020b13	leaq	0x10(%rbx), %r15
0000000100020b17	movq	0x10(%rbx), %rdi
0000000100020b1b	testq	%rdi, %rdi
0000000100020b1e	jne	0x100020b2b
0000000100020b20	movq	%r15, %rdi
0000000100020b23	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
0000000100020b28	movq	%rax, %rdi
0000000100020b2b	callq	0x10004280e                     ## symbol stub for: _pthread_mutex_lock
0000000100020b30	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rax ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
0000000100020b37	shlq	$0x1, %rax
0000000100020b3b	testq	%rax, %rax
0000000100020b3e	jne	0x100020c13
0000000100020b44	xorl	%r12d, %r12d
0000000100020b47	movzbl	0x18(%rbx), %eax
0000000100020b4b	leaq	0x20(%rbx), %rdi
0000000100020b4f	movq	%r13, %rsi
0000000100020b52	callq	__ZN3std2io5Write9write_fmt17hcdcf0af42e4ab420E ## std::io::Write::write_fmt::hcdcf0af42e4ab420
0000000100020b57	testq	%rax, %rax
0000000100020b5a	je	0x100020bb3
0000000100020b5c	movl	%eax, %ecx
0000000100020b5e	andl	$0x3, %ecx
0000000100020b61	leaq	-0x2(%rcx), %rdx
0000000100020b65	cmpq	$0x2, %rdx
0000000100020b69	jb	0x100020bb3
0000000100020b6b	testq	%rcx, %rcx
0000000100020b6e	je	0x100020bb3
0000000100020b70	movq	%rax, %rcx
0000000100020b73	decq	%rcx
0000000100020b76	movq	%rcx, -0x38(%rbp)
0000000100020b7a	movq	-0x1(%rax), %rdi
0000000100020b7e	movq	0x7(%rax), %r13
0000000100020b82	movq	%rdi, -0x30(%rbp)
0000000100020b86	callq	*(%r13)
0000000100020b8a	movq	0x8(%r13), %rsi
0000000100020b8e	testq	%rsi, %rsi
0000000100020b91	je	0x100020ba0
0000000100020b93	movq	0x10(%r13), %rdx
0000000100020b97	movq	-0x30(%rbp), %rdi
0000000100020b9b	callq	___rust_dealloc
0000000100020ba0	movl	$0x18, %esi
0000000100020ba5	movl	$0x8, %edx
0000000100020baa	movq	-0x38(%rbp), %rdi
0000000100020bae	callq	___rust_dealloc
0000000100020bb3	testb	%r12b, %r12b
0000000100020bb6	jne	0x100020bce
0000000100020bb8	movabsq	$0x7fffffffffffffff, %rax       ## imm = 0x7FFFFFFFFFFFFFFF
0000000100020bc2	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rcx ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
0000000100020bc9	testq	%rax, %rcx
0000000100020bcc	jne	0x100020c24
0000000100020bce	movq	(%r15), %rdi
0000000100020bd1	testq	%rdi, %rdi
0000000100020bd4	jne	0x100020be1
0000000100020bd6	movq	%r15, %rdi
0000000100020bd9	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
0000000100020bde	movq	%rax, %rdi
0000000100020be1	callq	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
0000000100020be6	movq	(%r14), %rdi
0000000100020be9	movq	%rbx, (%r14)
0000000100020bec	movb	$0x1, %bl
0000000100020bee	testq	%rdi, %rdi
0000000100020bf1	je	0x100020c02
0000000100020bf3	lock
0000000100020bf4	decq	(%rdi)
0000000100020bf7	jne	0x100020c02
0000000100020bf9	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
0000000100020bfe	jmp	0x100020c02
0000000100020c00	xorl	%ebx, %ebx
0000000100020c02	movl	%ebx, %eax
0000000100020c04	addq	$0x18, %rsp
0000000100020c08	popq	%rbx
0000000100020c09	popq	%r12
0000000100020c0b	popq	%r13
0000000100020c0d	popq	%r14
0000000100020c0f	popq	%r15
0000000100020c11	popq	%rbp
0000000100020c12	retq
0000000100020c13	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
0000000100020c18	movl	%eax, %r12d
0000000100020c1b	xorb	$0x1, %r12b
0000000100020c1f	jmp	0x100020b47
0000000100020c24	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
0000000100020c29	testb	%al, %al
0000000100020c2b	jne	0x100020bce
0000000100020c2d	movb	$0x1, 0x18(%rbx)
0000000100020c31	jmp	0x100020bce
0000000100020c33	movq	%rax, %r14
0000000100020c36	movq	-0x30(%rbp), %rdi
0000000100020c3a	movq	%r13, %rsi
0000000100020c3d	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100020c42	movq	-0x38(%rbp), %rdi
0000000100020c46	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100020c4b	jmp	0x100020c55
0000000100020c4d	movq	%rax, %r14
0000000100020c50	jmp	0x100020c61
0000000100020c52	movq	%rax, %r14
0000000100020c55	movzbl	%r12b, %esi
0000000100020c59	movq	%r15, %rdi
0000000100020c5c	callq	__ZN4core3ptr46drop_in_place$LT$std..io..stdio..StdinLock$GT$17h1f998272c9deb625E ## core::ptr::drop_in_place$LT$std..io..stdio..StdinLock$GT$::h1f998272c9deb625
0000000100020c61	movq	%rbx, %rdi
0000000100020c64	callq	__ZN4core3ptr101drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h230a050644404e8bE ## core::ptr::drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$::h230a050644404e8b
0000000100020c69	movq	%r14, %rdi
0000000100020c6c	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100020c71	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100020c76	nopw	%cs:(%rax,%rax)
__ZN3std2io5stdio6_print17h14e4a658f0d1dd1dE:
0000000100020c80	pushq	%rbp
0000000100020c81	movq	%rsp, %rbp
0000000100020c84	pushq	%rbx
0000000100020c85	subq	$0xa8, %rsp
0000000100020c8c	movq	0x28(%rdi), %rax
0000000100020c90	movq	%rax, -0x48(%rbp)
0000000100020c94	movq	0x20(%rdi), %rax
0000000100020c98	movq	%rax, -0x50(%rbp)
0000000100020c9c	movq	0x18(%rdi), %rax
0000000100020ca0	movq	%rax, -0x58(%rbp)
0000000100020ca4	movq	0x10(%rdi), %rax
0000000100020ca8	movq	%rax, -0x60(%rbp)
0000000100020cac	movq	(%rdi), %rax
0000000100020caf	movq	0x8(%rdi), %rcx
0000000100020cb3	movq	%rcx, -0x68(%rbp)
0000000100020cb7	movq	%rax, -0x70(%rbp)
0000000100020cbb	leaq	0x23d9b(%rip), %rax
0000000100020cc2	movq	%rax, -0x88(%rbp)
0000000100020cc9	movq	$0x6, -0x80(%rbp)
0000000100020cd1	movq	0x28(%rdi), %rax
0000000100020cd5	movq	%rax, -0x10(%rbp)
0000000100020cd9	movq	0x20(%rdi), %rax
0000000100020cdd	movq	%rax, -0x18(%rbp)
0000000100020ce1	movq	0x18(%rdi), %rax
0000000100020ce5	movq	%rax, -0x20(%rbp)
0000000100020ce9	movq	0x10(%rdi), %rax
0000000100020ced	movq	%rax, -0x28(%rbp)
0000000100020cf1	movq	(%rdi), %rax
0000000100020cf4	movq	0x8(%rdi), %rcx
0000000100020cf8	movq	%rcx, -0x30(%rbp)
0000000100020cfc	movq	%rax, -0x38(%rbp)
0000000100020d00	leaq	-0x38(%rbp), %rdi
0000000100020d04	callq	__ZN3std2io5stdio31print_to_buffer_if_capture_used17h4ef8fe2b4c1a7848E ## std::io::stdio::print_to_buffer_if_capture_used::h4ef8fe2b4c1a7848
0000000100020d09	testb	%al, %al
0000000100020d0b	jne	0x100020d78
0000000100020d0d	movq	0x2b4a4(%rip), %rax
0000000100020d14	cmpq	$0x3, %rax
0000000100020d18	jne	0x100020d82
0000000100020d1a	leaq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rax ## std::io::stdio::STDOUT::hae8c83b8691d76e5
0000000100020d21	movq	%rax, -0x78(%rbp)
0000000100020d25	movq	-0x48(%rbp), %rax
0000000100020d29	movq	%rax, -0x10(%rbp)
0000000100020d2d	movq	-0x50(%rbp), %rax
0000000100020d31	movq	%rax, -0x18(%rbp)
0000000100020d35	movq	-0x58(%rbp), %rax
0000000100020d39	movq	%rax, -0x20(%rbp)
0000000100020d3d	movq	-0x60(%rbp), %rax
0000000100020d41	movq	%rax, -0x28(%rbp)
0000000100020d45	movq	-0x70(%rbp), %rax
0000000100020d49	movq	-0x68(%rbp), %rcx
0000000100020d4d	movq	%rcx, -0x30(%rbp)
0000000100020d51	movq	%rax, -0x38(%rbp)
0000000100020d55	leaq	-0x78(%rbp), %rax
0000000100020d59	movq	%rax, -0xa8(%rbp)
0000000100020d60	leaq	-0xa8(%rbp), %rbx
0000000100020d67	leaq	-0x38(%rbp), %rsi
0000000100020d6b	movq	%rbx, %rdi
0000000100020d6e	callq	__ZN61_$LT$$RF$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$9write_fmt17ha79b8b8a7b45e655E ## _$LT$$RF$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_fmt::ha79b8b8a7b45e655
0000000100020d73	testq	%rax, %rax
0000000100020d76	jne	0x100020d89
0000000100020d78	addq	$0xa8, %rsp
0000000100020d7f	popq	%rbx
0000000100020d80	popq	%rbp
0000000100020d81	retq
0000000100020d82	callq	__ZN3std4sync9once_lock17OnceLock$LT$T$GT$10initialize17h4c35b04ff102c93aE ## std::sync::once_lock::OnceLock$LT$T$GT$::initialize::h4c35b04ff102c93a
0000000100020d87	jmp	0x100020d1a
0000000100020d89	movq	%rax, -0x40(%rbp)
0000000100020d8d	leaq	-0x88(%rbp), %rax
0000000100020d94	movq	%rax, -0xa8(%rbp)
0000000100020d9b	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
0000000100020da2	movq	%rax, -0xa0(%rbp)
0000000100020da9	leaq	-0x40(%rbp), %rax
0000000100020dad	movq	%rax, -0x98(%rbp)
0000000100020db4	leaq	__ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h285969cfd8ae8b36E(%rip), %rax ## _$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$::fmt::h285969cfd8ae8b36
0000000100020dbb	movq	%rax, -0x90(%rbp)
0000000100020dc2	leaq	0x27d37(%rip), %rax
0000000100020dc9	movq	%rax, -0x38(%rbp)
0000000100020dcd	movq	$0x2, -0x30(%rbp)
0000000100020dd5	movq	$0x0, -0x18(%rbp)
0000000100020ddd	movq	%rbx, -0x28(%rbp)
0000000100020de1	movq	$0x2, -0x20(%rbp)
0000000100020de9	leaq	0x27d30(%rip), %rsi
0000000100020df0	leaq	-0x38(%rbp), %rdi
0000000100020df4	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100020df9	ud2
0000000100020dfb	movq	%rax, %rbx
0000000100020dfe	leaq	-0x40(%rbp), %rdi
0000000100020e02	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
0000000100020e07	movq	%rbx, %rdi
0000000100020e0a	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100020e0f	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100020e14	nopw	%cs:(%rax,%rax)
0000000100020e1e	nop
__ZN3std2io5Write9write_all17h996d4d0b3d038812E:
0000000100020e20	pushq	%rbp
0000000100020e21	movq	%rsp, %rbp
0000000100020e24	pushq	%r15
0000000100020e26	pushq	%r14
0000000100020e28	pushq	%r12
0000000100020e2a	pushq	%rbx
0000000100020e2b	testq	%rdx, %rdx
0000000100020e2e	je	0x100020e94
0000000100020e30	movq	%rdx, %r14
0000000100020e33	movq	%rsi, %r15
0000000100020e36	leaq	0x27d63(%rip), %rbx
0000000100020e3d	jmp	0x100020e59
0000000100020e3f	nop
0000000100020e40	callq	0x10004274e                     ## symbol stub for: ___error
0000000100020e45	movl	(%rax), %r12d
0000000100020e48	movl	%r12d, %edi
0000000100020e4b	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
0000000100020e50	cmpb	$0x23, %al
0000000100020e52	jne	0x100020ea2
0000000100020e54	testq	%r14, %r14
0000000100020e57	je	0x100020e94
0000000100020e59	cmpq	$0x7ffffffe, %r14               ## imm = 0x7FFFFFFE
0000000100020e60	movl	$0x7ffffffe, %edx               ## imm = 0x7FFFFFFE
0000000100020e65	cmovbq	%r14, %rdx
0000000100020e69	movl	$0x2, %edi
0000000100020e6e	movq	%r15, %rsi
0000000100020e71	callq	0x100042880                     ## symbol stub for: _write
0000000100020e76	cmpq	$-0x1, %rax
0000000100020e7a	je	0x100020e40
0000000100020e7c	testq	%rax, %rax
0000000100020e7f	je	0x100020e96
0000000100020e81	movq	%r14, %rcx
0000000100020e84	subq	%rax, %rcx
0000000100020e87	jb	0x100020eaf
0000000100020e89	addq	%rax, %r15
0000000100020e8c	movq	%rcx, %r14
0000000100020e8f	testq	%r14, %r14
0000000100020e92	jne	0x100020e59
0000000100020e94	xorl	%ebx, %ebx
0000000100020e96	movq	%rbx, %rax
0000000100020e99	popq	%rbx
0000000100020e9a	popq	%r12
0000000100020e9c	popq	%r14
0000000100020e9e	popq	%r15
0000000100020ea0	popq	%rbp
0000000100020ea1	retq
0000000100020ea2	shlq	$0x20, %r12
0000000100020ea6	orq	$0x2, %r12
0000000100020eaa	movq	%r12, %rbx
0000000100020ead	jmp	0x100020e96
0000000100020eaf	leaq	0x27d02(%rip), %rdx
0000000100020eb6	movq	%rax, %rdi
0000000100020eb9	movq	%r14, %rsi
0000000100020ebc	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100020ec1	nopw	%cs:(%rax,%rax)
0000000100020ecb	nopl	(%rax,%rax)
__ZN3std2io5Write18write_all_vectored17h0a50ffa96259f670E:
0000000100020ed0	pushq	%rbp
0000000100020ed1	movq	%rsp, %rbp
0000000100020ed4	pushq	%r15
0000000100020ed6	pushq	%r14
0000000100020ed8	pushq	%r13
0000000100020eda	pushq	%r12
0000000100020edc	pushq	%rbx
0000000100020edd	subq	$0x58, %rsp
0000000100020ee1	testq	%rdx, %rdx
0000000100020ee4	je	0x1000210fe
0000000100020eea	movq	%rdx, %r8
0000000100020eed	movq	%rsi, %rbx
0000000100020ef0	movq	%rdi, %r9
0000000100020ef3	movq	%rdx, %rax
0000000100020ef6	shlq	$0x4, %rax
0000000100020efa	xorl	%ecx, %ecx
0000000100020efc	xorl	%edi, %edi
0000000100020efe	nop
0000000100020f00	cmpq	$0x0, 0x8(%rbx,%rcx)
0000000100020f06	jne	0x100020f14
0000000100020f08	incq	%rdi
0000000100020f0b	addq	$0x10, %rcx
0000000100020f0f	cmpq	%rcx, %rax
0000000100020f12	jne	0x100020f00
0000000100020f14	cmpq	%r8, %rdi
0000000100020f17	ja	0x100021118
0000000100020f1d	subq	%rdi, %r8
0000000100020f20	je	0x1000210fe
0000000100020f26	shlq	$0x4, %rdi
0000000100020f2a	addq	%rdi, %rbx
0000000100020f2d	movq	%r9, -0x30(%rbp)
0000000100020f31	jmp	0x100020f52
0000000100020f33	nopw	%cs:(%rax,%rax)
0000000100020f3d	nopl	(%rax)
0000000100020f40	cmpq	%rax, %r13
0000000100020f43	jne	0x100021127
0000000100020f49	testq	%r8, %r8
0000000100020f4c	je	0x1000210fe
0000000100020f52	leaq	-0x1(%r8), %rcx
0000000100020f56	movl	%r8d, %eax
0000000100020f59	andl	$0x3, %eax
0000000100020f5c	cmpq	$0x3, %rcx
0000000100020f60	jae	0x100020f70
0000000100020f62	xorl	%ecx, %ecx
0000000100020f64	xorl	%r13d, %r13d
0000000100020f67	jmp	0x100020f9c
0000000100020f69	nopl	(%rax)
0000000100020f70	movq	%r8, %rdx
0000000100020f73	andq	$-0x4, %rdx
0000000100020f77	leaq	0x38(%rbx), %rsi
0000000100020f7b	xorl	%ecx, %ecx
0000000100020f7d	xorl	%r13d, %r13d
0000000100020f80	addq	-0x30(%rsi), %r13
0000000100020f84	addq	-0x20(%rsi), %r13
0000000100020f88	addq	-0x10(%rsi), %r13
0000000100020f8c	addq	(%rsi), %r13
0000000100020f8f	addq	$0x4, %rcx
0000000100020f93	addq	$0x40, %rsi
0000000100020f97	cmpq	%rcx, %rdx
0000000100020f9a	jne	0x100020f80
0000000100020f9c	testq	%rax, %rax
0000000100020f9f	je	0x100020fbd
0000000100020fa1	shlq	$0x4, %rcx
0000000100020fa5	leaq	0x8(%rbx,%rcx), %rcx
0000000100020faa	shlq	$0x4, %rax
0000000100020fae	xorl	%edx, %edx
0000000100020fb0	addq	(%rcx,%rdx), %r13
0000000100020fb4	addq	$0x10, %rdx
0000000100020fb8	cmpq	%rdx, %rax
0000000100020fbb	jne	0x100020fb0
0000000100020fbd	movq	%r8, -0x48(%rbp)
0000000100020fc1	movq	%r8, %r14
0000000100020fc4	shlq	$0x4, %r14
0000000100020fc8	movq	0x8(%r9), %rax
0000000100020fcc	movq	0x10(%r9), %r12
0000000100020fd0	subq	%r12, %rax
0000000100020fd3	cmpq	%r13, %rax
0000000100020fd6	jb	0x1000210e3
0000000100020fdc	movq	%r14, -0x38(%rbp)
0000000100020fe0	leaq	(%rbx,%r14), %rax
0000000100020fe4	movq	%rax, -0x50(%rbp)
0000000100020fe8	movq	%rbx, -0x40(%rbp)
0000000100020fec	movq	%rbx, %r14
0000000100020fef	jmp	0x100021026
0000000100020ff1	nopw	%cs:(%rax,%rax)
0000000100020ffb	nopl	(%rax,%rax)
0000000100021000	movq	(%r9), %rdi
0000000100021003	addq	%r12, %rdi
0000000100021006	movq	%r15, %rsi
0000000100021009	movq	%rbx, %rdx
000000010002100c	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100021011	movq	-0x30(%rbp), %r9
0000000100021015	addq	%rbx, %r12
0000000100021018	movq	%r12, 0x10(%r9)
000000010002101c	addq	$0x10, %r14
0000000100021020	cmpq	-0x50(%rbp), %r14
0000000100021024	je	0x100021060
0000000100021026	movq	(%r14), %r15
0000000100021029	movq	0x8(%r14), %rbx
000000010002102d	movq	0x8(%r9), %rax
0000000100021031	subq	%r12, %rax
0000000100021034	cmpq	%rbx, %rax
0000000100021037	jae	0x100021000
0000000100021039	movq	%r9, %rdi
000000010002103c	movq	%r12, %rsi
000000010002103f	movq	%rbx, %rdx
0000000100021042	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
0000000100021047	movq	-0x30(%rbp), %r9
000000010002104b	movq	0x10(%r9), %r12
000000010002104f	jmp	0x100021000
0000000100021051	nopw	%cs:(%rax,%rax)
000000010002105b	nopl	(%rax,%rax)
0000000100021060	testq	%r13, %r13
0000000100021063	je	0x10002110f
0000000100021069	xorl	%ecx, %ecx
000000010002106b	xorl	%edi, %edi
000000010002106d	xorl	%edx, %edx
000000010002106f	movq	-0x48(%rbp), %r8
0000000100021073	movq	-0x40(%rbp), %rsi
0000000100021077	movq	-0x38(%rbp), %r10
000000010002107b	nopl	(%rax,%rax)
0000000100021080	movq	0x8(%rsi,%rcx), %rax
0000000100021085	addq	%rdx, %rax
0000000100021088	cmpq	%r13, %rax
000000010002108b	ja	0x1000210a0
000000010002108d	incq	%rdi
0000000100021090	addq	$0x10, %rcx
0000000100021094	movq	%rax, %rdx
0000000100021097	cmpq	%rcx, %r10
000000010002109a	jne	0x100021080
000000010002109c	jmp	0x1000210a3
000000010002109e	nop
00000001000210a0	movq	%rdx, %rax
00000001000210a3	cmpq	%rdi, %r8
00000001000210a6	jb	0x100021118
00000001000210a8	movq	%rdi, %rdx
00000001000210ab	shlq	$0x4, %rdx
00000001000210af	leaq	(%rsi,%rdx), %rbx
00000001000210b3	subq	%rdi, %r8
00000001000210b6	je	0x100020f40
00000001000210bc	subq	%rax, %r13
00000001000210bf	movq	0x8(%rsi,%rdx), %rax
00000001000210c4	subq	%r13, %rax
00000001000210c7	jb	0x100021165
00000001000210cd	leaq	0x8(%rsi,%rdx), %rdx
00000001000210d2	movq	%rax, (%rdx)
00000001000210d5	addq	%r13, (%rbx)
00000001000210d8	testq	%r8, %r8
00000001000210db	jne	0x100020f52
00000001000210e1	jmp	0x1000210fe
00000001000210e3	movq	%r9, %rdi
00000001000210e6	movq	%r12, %rsi
00000001000210e9	movq	%r13, %rdx
00000001000210ec	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
00000001000210f1	movq	-0x30(%rbp), %r9
00000001000210f5	movq	0x10(%r9), %r12
00000001000210f9	jmp	0x100020fdc
00000001000210fe	xorl	%eax, %eax
0000000100021100	addq	$0x58, %rsp
0000000100021104	popq	%rbx
0000000100021105	popq	%r12
0000000100021107	popq	%r13
0000000100021109	popq	%r14
000000010002110b	popq	%r15
000000010002110d	popq	%rbp
000000010002110e	retq
000000010002110f	leaq	0x27a8a(%rip), %rax
0000000100021116	jmp	0x100021100
0000000100021118	leaq	0x27a19(%rip), %rdx
000000010002111f	movq	%r8, %rsi
0000000100021122	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100021127	leaq	0x27a22(%rip), %rax
000000010002112e	movq	%rax, -0x80(%rbp)
0000000100021132	movq	$0x1, -0x78(%rbp)
000000010002113a	movq	$0x0, -0x60(%rbp)
0000000100021142	leaq	0x22ba7(%rip), %rax
0000000100021149	movq	%rax, -0x70(%rbp)
000000010002114d	movq	$0x0, -0x68(%rbp)
0000000100021155	leaq	0x27a04(%rip), %rsi
000000010002115c	leaq	-0x80(%rbp), %rdi
0000000100021160	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100021165	leaq	0x27a0c(%rip), %rax
000000010002116c	movq	%rax, -0x80(%rbp)
0000000100021170	movq	$0x1, -0x78(%rbp)
0000000100021178	movq	$0x0, -0x60(%rbp)
0000000100021180	leaq	0x22b69(%rip), %rax
0000000100021187	movq	%rax, -0x70(%rbp)
000000010002118b	movq	$0x0, -0x68(%rbp)
0000000100021193	leaq	0x279ee(%rip), %rsi
000000010002119a	leaq	-0x80(%rbp), %rdi
000000010002119e	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000211a3	nopw	%cs:(%rax,%rax)
00000001000211ad	nopl	(%rax)
__ZN3std2io5Write18write_all_vectored17hdb20b5b7e870c8f1E:
00000001000211b0	pushq	%rbp
00000001000211b1	movq	%rsp, %rbp
00000001000211b4	pushq	%r15
00000001000211b6	pushq	%r14
00000001000211b8	pushq	%r12
00000001000211ba	pushq	%rbx
00000001000211bb	subq	$0x30, %rsp
00000001000211bf	testq	%rdx, %rdx
00000001000211c2	je	0x10002131b
00000001000211c8	movq	%rdx, %rbx
00000001000211cb	movq	%rsi, %r14
00000001000211ce	movq	%rdx, %rax
00000001000211d1	shlq	$0x4, %rax
00000001000211d5	xorl	%ecx, %ecx
00000001000211d7	xorl	%edi, %edi
00000001000211d9	nopl	(%rax)
00000001000211e0	cmpq	$0x0, 0x8(%r14,%rcx)
00000001000211e6	jne	0x1000211f4
00000001000211e8	incq	%rdi
00000001000211eb	addq	$0x10, %rcx
00000001000211ef	cmpq	%rcx, %rax
00000001000211f2	jne	0x1000211e0
00000001000211f4	cmpq	%rbx, %rdi
00000001000211f7	ja	0x10002133b
00000001000211fd	subq	%rdi, %rbx
0000000100021200	je	0x10002131b
0000000100021206	shlq	$0x4, %rdi
000000010002120a	addq	%rdi, %r14
000000010002120d	leaq	0x2798c(%rip), %r15
0000000100021214	jmp	0x100021247
0000000100021216	nopw	%cs:(%rax,%rax)
0000000100021220	callq	0x10004274e                     ## symbol stub for: ___error
0000000100021225	movl	(%rax), %r12d
0000000100021228	movl	%r12d, %edi
000000010002122b	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
0000000100021230	movq	%r14, %rcx
0000000100021233	cmpb	$0x23, %al
0000000100021235	jne	0x10002132e
000000010002123b	movq	%rcx, %r14
000000010002123e	testq	%rbx, %rbx
0000000100021241	je	0x10002131b
0000000100021247	cmpq	$0x400, %rbx                    ## imm = 0x400
000000010002124e	movl	$0x400, %edx                    ## imm = 0x400
0000000100021253	cmovbq	%rbx, %rdx
0000000100021257	movl	$0x2, %edi
000000010002125c	movq	%r14, %rsi
000000010002125f	callq	0x100042886                     ## symbol stub for: _writev
0000000100021264	cmpq	$-0x1, %rax
0000000100021268	je	0x100021220
000000010002126a	testq	%rax, %rax
000000010002126d	je	0x10002131e
0000000100021273	movq	%rbx, %rcx
0000000100021276	shlq	$0x4, %rcx
000000010002127a	xorl	%esi, %esi
000000010002127c	xorl	%edi, %edi
000000010002127e	xorl	%r8d, %r8d
0000000100021281	nopw	%cs:(%rax,%rax)
000000010002128b	nopl	(%rax,%rax)
0000000100021290	movq	0x8(%r14,%rsi), %rdx
0000000100021295	addq	%r8, %rdx
0000000100021298	cmpq	%rax, %rdx
000000010002129b	ja	0x1000212b0
000000010002129d	incq	%rdi
00000001000212a0	addq	$0x10, %rsi
00000001000212a4	movq	%rdx, %r8
00000001000212a7	cmpq	%rsi, %rcx
00000001000212aa	jne	0x100021290
00000001000212ac	jmp	0x1000212b3
00000001000212ae	nop
00000001000212b0	movq	%r8, %rdx
00000001000212b3	cmpq	%rdi, %rbx
00000001000212b6	jb	0x10002133b
00000001000212bc	movq	%rdi, %rsi
00000001000212bf	shlq	$0x4, %rsi
00000001000212c3	leaq	(%r14,%rsi), %rcx
00000001000212c7	subq	%rdi, %rbx
00000001000212ca	jne	0x1000212f0
00000001000212cc	cmpq	%rdx, %rax
00000001000212cf	jne	0x100021388
00000001000212d5	cmpq	$-0x1, %rax
00000001000212d9	movq	%rcx, %r14
00000001000212dc	testq	%rbx, %rbx
00000001000212df	jne	0x100021247
00000001000212e5	jmp	0x10002131b
00000001000212e7	nopw	(%rax,%rax)
00000001000212f0	movq	%rax, %rdi
00000001000212f3	subq	%rdx, %rdi
00000001000212f6	movq	0x8(%r14,%rsi), %rdx
00000001000212fb	subq	%rdi, %rdx
00000001000212fe	jb	0x10002134a
0000000100021300	leaq	0x8(%r14,%rsi), %rsi
0000000100021305	movq	%rdx, (%rsi)
0000000100021308	addq	%rdi, (%rcx)
000000010002130b	cmpq	$-0x1, %rax
000000010002130f	movq	%rcx, %r14
0000000100021312	testq	%rbx, %rbx
0000000100021315	jne	0x100021247
000000010002131b	xorl	%r15d, %r15d
000000010002131e	movq	%r15, %rax
0000000100021321	addq	$0x30, %rsp
0000000100021325	popq	%rbx
0000000100021326	popq	%r12
0000000100021328	popq	%r14
000000010002132a	popq	%r15
000000010002132c	popq	%rbp
000000010002132d	retq
000000010002132e	shlq	$0x20, %r12
0000000100021332	orq	$0x2, %r12
0000000100021336	movq	%r12, %r15
0000000100021339	jmp	0x10002131e
000000010002133b	leaq	0x277f6(%rip), %rdx
0000000100021342	movq	%rbx, %rsi
0000000100021345	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010002134a	leaq	0x27827(%rip), %rax
0000000100021351	movq	%rax, -0x50(%rbp)
0000000100021355	movq	$0x1, -0x48(%rbp)
000000010002135d	movq	$0x0, -0x30(%rbp)
0000000100021365	leaq	0x22984(%rip), %rax
000000010002136c	movq	%rax, -0x40(%rbp)
0000000100021370	movq	$0x0, -0x38(%rbp)
0000000100021378	leaq	0x27809(%rip), %rsi
000000010002137f	leaq	-0x50(%rbp), %rdi
0000000100021383	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100021388	leaq	0x277c1(%rip), %rax
000000010002138f	movq	%rax, -0x50(%rbp)
0000000100021393	movq	$0x1, -0x48(%rbp)
000000010002139b	movq	$0x0, -0x30(%rbp)
00000001000213a3	leaq	0x22946(%rip), %rax
00000001000213aa	movq	%rax, -0x40(%rbp)
00000001000213ae	movq	$0x0, -0x38(%rbp)
00000001000213b6	leaq	0x277a3(%rip), %rsi
00000001000213bd	leaq	-0x50(%rbp), %rdi
00000001000213c1	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000213c6	nopw	%cs:(%rax,%rax)
__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E:
00000001000213d0	pushq	%rbp
00000001000213d1	movq	%rsp, %rbp
00000001000213d4	pushq	%r15
00000001000213d6	pushq	%r14
00000001000213d8	pushq	%r12
00000001000213da	pushq	%rbx
00000001000213db	subq	$0x40, %rsp
00000001000213df	movq	%rdi, -0x30(%rbp)
00000001000213e3	movq	$0x0, -0x28(%rbp)
00000001000213eb	movq	0x28(%rsi), %rax
00000001000213ef	movq	%rax, -0x38(%rbp)
00000001000213f3	movq	0x20(%rsi), %rax
00000001000213f7	movq	%rax, -0x40(%rbp)
00000001000213fb	movq	0x18(%rsi), %rax
00000001000213ff	movq	%rax, -0x48(%rbp)
0000000100021403	movq	0x10(%rsi), %rax
0000000100021407	movq	%rax, -0x50(%rbp)
000000010002140b	movq	(%rsi), %rax
000000010002140e	movq	0x8(%rsi), %rcx
0000000100021412	movq	%rcx, -0x58(%rbp)
0000000100021416	movq	%rax, -0x60(%rbp)
000000010002141a	leaq	0x277f7(%rip), %rsi
0000000100021421	leaq	-0x30(%rbp), %rdi
0000000100021425	leaq	-0x60(%rbp), %rdx
0000000100021429	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010002142e	movq	-0x28(%rbp), %rcx
0000000100021432	testb	%al, %al
0000000100021434	je	0x100021446
0000000100021436	testq	%rcx, %rcx
0000000100021439	leaq	0x27790(%rip), %rax
0000000100021440	cmovneq	%rcx, %rax
0000000100021444	jmp	0x10002149f
0000000100021446	testq	%rcx, %rcx
0000000100021449	je	0x10002149d
000000010002144b	movl	%ecx, %edx
000000010002144d	andl	$0x3, %edx
0000000100021450	xorl	%eax, %eax
0000000100021452	leaq	-0x2(%rdx), %rsi
0000000100021456	cmpq	$0x2, %rsi
000000010002145a	jb	0x10002149f
000000010002145c	testq	%rdx, %rdx
000000010002145f	je	0x10002149f
0000000100021461	leaq	-0x1(%rcx), %rbx
0000000100021465	movq	-0x1(%rcx), %r15
0000000100021469	movq	0x7(%rcx), %r12
000000010002146d	movq	%r15, %rdi
0000000100021470	callq	*(%r12)
0000000100021474	movq	0x8(%r12), %rsi
0000000100021479	testq	%rsi, %rsi
000000010002147c	je	0x10002148b
000000010002147e	movq	0x10(%r12), %rdx
0000000100021483	movq	%r15, %rdi
0000000100021486	callq	___rust_dealloc
000000010002148b	movl	$0x18, %esi
0000000100021490	movl	$0x8, %edx
0000000100021495	movq	%rbx, %rdi
0000000100021498	callq	___rust_dealloc
000000010002149d	xorl	%eax, %eax
000000010002149f	addq	$0x40, %rsp
00000001000214a3	popq	%rbx
00000001000214a4	popq	%r12
00000001000214a6	popq	%r14
00000001000214a8	popq	%r15
00000001000214aa	popq	%rbp
00000001000214ab	retq
00000001000214ac	movq	%rax, %r14
00000001000214af	movq	%r15, %rdi
00000001000214b2	movq	%r12, %rsi
00000001000214b5	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
00000001000214ba	movq	%rbx, %rdi
00000001000214bd	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
00000001000214c2	jmp	0x1000214d0
00000001000214c4	movq	%rax, %r14
00000001000214c7	leaq	-0x30(%rbp), %rdi
00000001000214cb	callq	__ZN4core3ptr88drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h34ebf8100cc30064E ## core::ptr::drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$::h34ebf8100cc30064
00000001000214d0	movq	%r14, %rdi
00000001000214d3	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000214d8	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000214dd	nopl	(%rax)
__ZN3std2io5Write9write_fmt17hcdcf0af42e4ab420E:
00000001000214e0	pushq	%rbp
00000001000214e1	movq	%rsp, %rbp
00000001000214e4	pushq	%r15
00000001000214e6	pushq	%r14
00000001000214e8	pushq	%r12
00000001000214ea	pushq	%rbx
00000001000214eb	subq	$0x40, %rsp
00000001000214ef	movq	%rdi, -0x30(%rbp)
00000001000214f3	movq	$0x0, -0x28(%rbp)
00000001000214fb	movq	0x28(%rsi), %rax
00000001000214ff	movq	%rax, -0x38(%rbp)
0000000100021503	movq	0x20(%rsi), %rax
0000000100021507	movq	%rax, -0x40(%rbp)
000000010002150b	movq	0x18(%rsi), %rax
000000010002150f	movq	%rax, -0x48(%rbp)
0000000100021513	movq	0x10(%rsi), %rax
0000000100021517	movq	%rax, -0x50(%rbp)
000000010002151b	movq	(%rsi), %rax
000000010002151e	movq	0x8(%rsi), %rcx
0000000100021522	movq	%rcx, -0x58(%rbp)
0000000100021526	movq	%rax, -0x60(%rbp)
000000010002152a	leaq	0x27717(%rip), %rsi
0000000100021531	leaq	-0x30(%rbp), %rdi
0000000100021535	leaq	-0x60(%rbp), %rdx
0000000100021539	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010002153e	movq	-0x28(%rbp), %rcx
0000000100021542	testb	%al, %al
0000000100021544	je	0x100021556
0000000100021546	testq	%rcx, %rcx
0000000100021549	leaq	0x27680(%rip), %rax
0000000100021550	cmovneq	%rcx, %rax
0000000100021554	jmp	0x1000215af
0000000100021556	testq	%rcx, %rcx
0000000100021559	je	0x1000215ad
000000010002155b	movl	%ecx, %edx
000000010002155d	andl	$0x3, %edx
0000000100021560	xorl	%eax, %eax
0000000100021562	leaq	-0x2(%rdx), %rsi
0000000100021566	cmpq	$0x2, %rsi
000000010002156a	jb	0x1000215af
000000010002156c	testq	%rdx, %rdx
000000010002156f	je	0x1000215af
0000000100021571	leaq	-0x1(%rcx), %rbx
0000000100021575	movq	-0x1(%rcx), %r15
0000000100021579	movq	0x7(%rcx), %r12
000000010002157d	movq	%r15, %rdi
0000000100021580	callq	*(%r12)
0000000100021584	movq	0x8(%r12), %rsi
0000000100021589	testq	%rsi, %rsi
000000010002158c	je	0x10002159b
000000010002158e	movq	0x10(%r12), %rdx
0000000100021593	movq	%r15, %rdi
0000000100021596	callq	___rust_dealloc
000000010002159b	movl	$0x18, %esi
00000001000215a0	movl	$0x8, %edx
00000001000215a5	movq	%rbx, %rdi
00000001000215a8	callq	___rust_dealloc
00000001000215ad	xorl	%eax, %eax
00000001000215af	addq	$0x40, %rsp
00000001000215b3	popq	%rbx
00000001000215b4	popq	%r12
00000001000215b6	popq	%r14
00000001000215b8	popq	%r15
00000001000215ba	popq	%rbp
00000001000215bb	retq
00000001000215bc	movq	%rax, %r14
00000001000215bf	movq	%r15, %rdi
00000001000215c2	movq	%r12, %rsi
00000001000215c5	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
00000001000215ca	movq	%rbx, %rdi
00000001000215cd	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
00000001000215d2	jmp	0x1000215e0
00000001000215d4	movq	%rax, %r14
00000001000215d7	leaq	-0x30(%rbp), %rdi
00000001000215db	callq	__ZN4core3ptr88drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h34ebf8100cc30064E ## core::ptr::drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$::h34ebf8100cc30064
00000001000215e0	movq	%r14, %rdi
00000001000215e3	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000215e8	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000215ed	nopl	(%rax)
__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h424af07061250d47E:
00000001000215f0	pushq	%rbp
00000001000215f1	movq	%rsp, %rbp
00000001000215f4	pushq	%r15
00000001000215f6	pushq	%r14
00000001000215f8	pushq	%r13
00000001000215fa	pushq	%r12
00000001000215fc	pushq	%rbx
00000001000215fd	pushq	%rax
00000001000215fe	testq	%rdx, %rdx
0000000100021601	je	0x100021668
0000000100021603	movq	%rdx, %r15
0000000100021606	movq	%rsi, %r12
0000000100021609	movq	%rdi, %rbx
000000010002160c	jmp	0x100021629
000000010002160e	nop
0000000100021610	callq	0x10004274e                     ## symbol stub for: ___error
0000000100021615	movl	(%rax), %r14d
0000000100021618	movl	%r14d, %edi
000000010002161b	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
0000000100021620	cmpb	$0x23, %al
0000000100021622	jne	0x10002167e
0000000100021624	testq	%r15, %r15
0000000100021627	je	0x100021668
0000000100021629	cmpq	$0x7ffffffe, %r15               ## imm = 0x7FFFFFFE
0000000100021630	movl	$0x7ffffffe, %edx               ## imm = 0x7FFFFFFE
0000000100021635	cmovbq	%r15, %rdx
0000000100021639	movl	$0x2, %edi
000000010002163e	movq	%r12, %rsi
0000000100021641	callq	0x100042880                     ## symbol stub for: _write
0000000100021646	cmpq	$-0x1, %rax
000000010002164a	je	0x100021610
000000010002164c	testq	%rax, %rax
000000010002164f	je	0x10002166c
0000000100021651	movq	%r15, %rcx
0000000100021654	subq	%rax, %rcx
0000000100021657	jb	0x1000216f2
000000010002165d	addq	%rax, %r12
0000000100021660	movq	%rcx, %r15
0000000100021663	testq	%r15, %r15
0000000100021666	jne	0x100021629
0000000100021668	xorl	%eax, %eax
000000010002166a	jmp	0x1000216e3
000000010002166c	leaq	0x2752d(%rip), %r14
0000000100021673	movq	0x8(%rbx), %rax
0000000100021677	testq	%rax, %rax
000000010002167a	jne	0x10002168f
000000010002167c	jmp	0x1000216dd
000000010002167e	shlq	$0x20, %r14
0000000100021682	orq	$0x2, %r14
0000000100021686	movq	0x8(%rbx), %rax
000000010002168a	testq	%rax, %rax
000000010002168d	je	0x1000216dd
000000010002168f	movl	%eax, %ecx
0000000100021691	andl	$0x3, %ecx
0000000100021694	leaq	-0x2(%rcx), %rdx
0000000100021698	cmpq	$0x2, %rdx
000000010002169c	jb	0x1000216dd
000000010002169e	testq	%rcx, %rcx
00000001000216a1	je	0x1000216dd
00000001000216a3	leaq	-0x1(%rax), %r15
00000001000216a7	movq	-0x1(%rax), %r12
00000001000216ab	movq	0x7(%rax), %r13
00000001000216af	movq	%r12, %rdi
00000001000216b2	callq	*(%r13)
00000001000216b6	movq	0x8(%r13), %rsi
00000001000216ba	testq	%rsi, %rsi
00000001000216bd	je	0x1000216cb
00000001000216bf	movq	0x10(%r13), %rdx
00000001000216c3	movq	%r12, %rdi
00000001000216c6	callq	___rust_dealloc
00000001000216cb	movl	$0x18, %esi
00000001000216d0	movl	$0x8, %edx
00000001000216d5	movq	%r15, %rdi
00000001000216d8	callq	___rust_dealloc
00000001000216dd	movq	%r14, 0x8(%rbx)
00000001000216e1	movb	$0x1, %al
00000001000216e3	addq	$0x8, %rsp
00000001000216e7	popq	%rbx
00000001000216e8	popq	%r12
00000001000216ea	popq	%r13
00000001000216ec	popq	%r14
00000001000216ee	popq	%r15
00000001000216f0	popq	%rbp
00000001000216f1	retq
00000001000216f2	leaq	0x274bf(%rip), %rdx
00000001000216f9	movq	%rax, %rdi
00000001000216fc	movq	%r15, %rsi
00000001000216ff	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100021704	movq	%rax, -0x30(%rbp)
0000000100021708	movq	%r12, %rdi
000000010002170b	movq	%r13, %rsi
000000010002170e	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100021713	movq	%r15, %rdi
0000000100021716	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002171b	movq	%r14, 0x8(%rbx)
000000010002171f	movq	-0x30(%rbp), %rdi
0000000100021723	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100021728	nopl	(%rax,%rax)
__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h4d42f71a0055d1efE:
0000000100021730	pushq	%rbp
0000000100021731	movq	%rsp, %rbp
0000000100021734	pushq	%r15
0000000100021736	pushq	%r14
0000000100021738	pushq	%r12
000000010002173a	pushq	%rbx
000000010002173b	movq	%rdx, %rbx
000000010002173e	movq	%rsi, %r15
0000000100021741	movq	(%rdi), %r14
0000000100021744	movq	0x8(%r14), %rax
0000000100021748	movq	0x10(%r14), %r12
000000010002174c	subq	%r12, %rax
000000010002174f	cmpq	%rdx, %rax
0000000100021752	jb	0x100021777
0000000100021754	movq	(%r14), %rdi
0000000100021757	addq	%r12, %rdi
000000010002175a	movq	%r15, %rsi
000000010002175d	movq	%rbx, %rdx
0000000100021760	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100021765	addq	%rbx, %r12
0000000100021768	movq	%r12, 0x10(%r14)
000000010002176c	xorl	%eax, %eax
000000010002176e	popq	%rbx
000000010002176f	popq	%r12
0000000100021771	popq	%r14
0000000100021773	popq	%r15
0000000100021775	popq	%rbp
0000000100021776	retq
0000000100021777	movq	%r14, %rdi
000000010002177a	movq	%r12, %rsi
000000010002177d	movq	%rbx, %rdx
0000000100021780	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
0000000100021785	movq	0x10(%r14), %r12
0000000100021789	jmp	0x100021754
000000010002178b	nopl	(%rax,%rax)
__ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc9ede58f8971c9a4E:
0000000100021790	pushq	%rbp
0000000100021791	movq	%rsp, %rbp
0000000100021794	pushq	%r15
0000000100021796	pushq	%r14
0000000100021798	pushq	%r13
000000010002179a	pushq	%r12
000000010002179c	pushq	%rbx
000000010002179d	pushq	%rax
000000010002179e	movq	%rdi, %rbx
00000001000217a1	movq	(%rdi), %rdi
00000001000217a4	callq	__ZN61_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$9write_all17hceead3af801541f1E ## _$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$::write_all::hceead3af801541f1
00000001000217a9	movq	%rax, %r14
00000001000217ac	testq	%rax, %rax
00000001000217af	je	0x10002180c
00000001000217b1	movq	0x8(%rbx), %rax
00000001000217b5	testq	%rax, %rax
00000001000217b8	je	0x100021808
00000001000217ba	movl	%eax, %ecx
00000001000217bc	andl	$0x3, %ecx
00000001000217bf	leaq	-0x2(%rcx), %rdx
00000001000217c3	cmpq	$0x2, %rdx
00000001000217c7	jb	0x100021808
00000001000217c9	testq	%rcx, %rcx
00000001000217cc	je	0x100021808
00000001000217ce	leaq	-0x1(%rax), %r15
00000001000217d2	movq	-0x1(%rax), %r12
00000001000217d6	movq	0x7(%rax), %r13
00000001000217da	movq	%r12, %rdi
00000001000217dd	callq	*(%r13)
00000001000217e1	movq	0x8(%r13), %rsi
00000001000217e5	testq	%rsi, %rsi
00000001000217e8	je	0x1000217f6
00000001000217ea	movq	0x10(%r13), %rdx
00000001000217ee	movq	%r12, %rdi
00000001000217f1	callq	___rust_dealloc
00000001000217f6	movl	$0x18, %esi
00000001000217fb	movl	$0x8, %edx
0000000100021800	movq	%r15, %rdi
0000000100021803	callq	___rust_dealloc
0000000100021808	movq	%r14, 0x8(%rbx)
000000010002180c	testq	%r14, %r14
000000010002180f	setne	%al
0000000100021812	addq	$0x8, %rsp
0000000100021816	popq	%rbx
0000000100021817	popq	%r12
0000000100021819	popq	%r13
000000010002181b	popq	%r14
000000010002181d	popq	%r15
000000010002181f	popq	%rbp
0000000100021820	retq
0000000100021821	movq	%rax, -0x30(%rbp)
0000000100021825	movq	%r12, %rdi
0000000100021828	movq	%r13, %rsi
000000010002182b	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100021830	movq	%r15, %rdi
0000000100021833	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100021838	movq	%r14, 0x8(%rbx)
000000010002183c	movq	-0x30(%rbp), %rdi
0000000100021840	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100021845	nopw	%cs:(%rax,%rax)
000000010002184f	nop
__ZN3std5panic19get_backtrace_style17hf696eaea4064bfd2E:
0000000100021850	pushq	%rbp
0000000100021851	movq	%rsp, %rbp
0000000100021854	pushq	%rbx
0000000100021855	subq	$0x18, %rsp
0000000100021859	movq	__ZN3std5panic14SHOULD_CAPTURE17h9dab6cb85e46b02fE.0(%rip), %rax ## std::panic::SHOULD_CAPTURE::h9dab6cb85e46b02f (.0)
0000000100021860	cmpq	$0x3, %rax
0000000100021864	ja	0x1000218fb
000000010002186a	xorl	%ebx, %ebx
000000010002186c	leaq	0xa1(%rip), %rcx
0000000100021873	movslq	(%rcx,%rax,4), %rax
0000000100021877	addq	%rcx, %rax
000000010002187a	jmpq	*%rax
000000010002187c	leaq	0x22df0(%rip), %rsi
0000000100021883	leaq	-0x20(%rbp), %rdi
0000000100021887	movl	$0xe, %edx
000000010002188c	callq	__ZN3std3env7_var_os17h1dd2de5ff46afc4dE ## std::env::_var_os::h1dd2de5ff46afc4d
0000000100021891	movq	-0x20(%rbp), %rdi
0000000100021895	testq	%rdi, %rdi
0000000100021898	je	0x1000218c0
000000010002189a	movq	-0x18(%rbp), %rsi
000000010002189e	movq	-0x10(%rbp), %rax
00000001000218a2	cmpq	$0x4, %rax
00000001000218a6	je	0x1000218c9
00000001000218a8	cmpq	$0x1, %rax
00000001000218ac	jne	0x1000218d4
00000001000218ae	cmpb	$0x30, (%rdi)
00000001000218b1	sete	%bl
00000001000218b4	addb	%bl, %bl
00000001000218b6	jmp	0x1000218d6
00000001000218b8	movb	$0x1, %bl
00000001000218ba	jmp	0x1000218f2
00000001000218bc	movb	$0x2, %bl
00000001000218be	jmp	0x1000218f2
00000001000218c0	movl	$0x3, %eax
00000001000218c5	movb	$0x2, %bl
00000001000218c7	jmp	0x1000218eb
00000001000218c9	cmpl	$0x6c6c7566, (%rdi)             ## imm = 0x6C6C7566
00000001000218cf	sete	%bl
00000001000218d2	jmp	0x1000218d6
00000001000218d4	xorl	%ebx, %ebx
00000001000218d6	testq	%rsi, %rsi
00000001000218d9	je	0x1000218e5
00000001000218db	movl	$0x1, %edx
00000001000218e0	callq	___rust_dealloc
00000001000218e5	leal	0x1(%rbx), %eax
00000001000218e8	movzbl	%al, %eax
00000001000218eb	movq	%rax, __ZN3std5panic14SHOULD_CAPTURE17h9dab6cb85e46b02fE.0(%rip) ## std::panic::SHOULD_CAPTURE::h9dab6cb85e46b02f (.0)
00000001000218f2	movl	%ebx, %eax
00000001000218f4	addq	$0x18, %rsp
00000001000218f8	popq	%rbx
00000001000218f9	popq	%rbp
00000001000218fa	retq
00000001000218fb	leaq	0x2263f(%rip), %rdi
0000000100021902	leaq	0x2736f(%rip), %rdx
0000000100021909	movl	$0x28, %esi
000000010002190e	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100021913	nop
0000000100021914	pushq	$-0x21000001                    ## imm = 0xDEFFFFFF
0000000100021919	.byte 0xff #bad opcode
000000010002191a	.byte 0xff #bad opcode
000000010002191b	jmpq	*-0x570001(%rdi,%rdi,8)
0000000100021922	.byte 0xff #bad opcode
0000000100021923	jmpq	*0x2e(%rsi)
0000000100021926	nopl	(%rax,%rax)
000000010002192e	nop
__ZN3std4path10Components7as_path17hc95de799d49c8389E:
0000000100021930	pushq	%rbp
0000000100021931	movq	%rsp, %rbp
0000000100021934	pushq	%r15
0000000100021936	pushq	%r14
0000000100021938	pushq	%r13
000000010002193a	pushq	%r12
000000010002193c	pushq	%rbx
000000010002193d	subq	$0xa8, %rsp
0000000100021944	movq	(%rdi), %rbx
0000000100021947	movq	0x8(%rdi), %r14
000000010002194b	movzbl	0x10(%rdi), %eax
000000010002194f	cmpl	$0x6, %eax
0000000100021952	je	0x10002198b
0000000100021954	movq	0x30(%rdi), %rcx
0000000100021958	movq	%rcx, -0x99(%rbp)
000000010002195f	movq	0x29(%rdi), %rcx
0000000100021963	movq	%rcx, -0xa0(%rbp)
000000010002196a	movq	0x21(%rdi), %rcx
000000010002196e	movq	%rcx, -0xa8(%rbp)
0000000100021975	movq	0x11(%rdi), %rcx
0000000100021979	movq	0x19(%rdi), %rdx
000000010002197d	movq	%rdx, -0xb0(%rbp)
0000000100021984	movq	%rcx, -0xb8(%rbp)
000000010002198b	movzbl	0x3a(%rdi), %r8d
0000000100021990	movzbl	0x38(%rdi), %ecx
0000000100021994	movzbl	0x39(%rdi), %edx
0000000100021998	movq	%rbx, -0x70(%rbp)
000000010002199c	movq	%r14, -0x68(%rbp)
00000001000219a0	movb	%al, -0x60(%rbp)
00000001000219a3	movq	-0xb8(%rbp), %rsi
00000001000219aa	movq	-0xb0(%rbp), %rdi
00000001000219b1	movq	%rsi, -0x5f(%rbp)
00000001000219b5	movq	%rdi, -0x57(%rbp)
00000001000219b9	movq	-0xa8(%rbp), %rsi
00000001000219c0	movq	%rsi, -0x4f(%rbp)
00000001000219c4	movq	-0xa0(%rbp), %rsi
00000001000219cb	movq	%rsi, -0x47(%rbp)
00000001000219cf	movq	-0x99(%rbp), %rsi
00000001000219d6	movq	%rsi, -0x40(%rbp)
00000001000219da	movb	%r8b, -0x36(%rbp)
00000001000219de	movb	%cl, -0x38(%rbp)
00000001000219e1	movb	%dl, -0x37(%rbp)
00000001000219e4	cmpb	$0x2, %cl
00000001000219e7	jne	0x100021ab4
00000001000219ed	testq	%r14, %r14
00000001000219f0	je	0x100021b8b
00000001000219f6	cmpb	$0x3, %al
00000001000219f8	jae	0x100021a50
00000001000219fa	nopw	(%rax,%rax)
0000000100021a00	xorl	%esi, %esi
0000000100021a02	nopw	%cs:(%rax,%rax)
0000000100021a0c	nopl	(%rax)
0000000100021a10	cmpb	$0x2f, (%rbx,%rsi)
0000000100021a14	je	0x100021a30
0000000100021a16	incq	%rsi
0000000100021a19	cmpq	%rsi, %r14
0000000100021a1c	jne	0x100021a10
0000000100021a1e	xorl	%edi, %edi
0000000100021a20	movq	%r14, %rsi
0000000100021a23	testq	%rsi, %rsi
0000000100021a26	je	0x100021a3a
0000000100021a28	jmp	0x100021aac
0000000100021a2d	nopl	(%rax)
0000000100021a30	movl	$0x1, %edi
0000000100021a35	testq	%rsi, %rsi
0000000100021a38	jne	0x100021aac
0000000100021a3a	cmpq	%rdi, %r14
0000000100021a3d	jb	0x100021ea9
0000000100021a43	addq	%rdi, %rbx
0000000100021a46	subq	%rdi, %r14
0000000100021a49	jne	0x100021a00
0000000100021a4b	jmp	0x100021aa9
0000000100021a4d	nopl	(%rax)
0000000100021a50	xorl	%edi, %edi
0000000100021a52	nopw	%cs:(%rax,%rax)
0000000100021a5c	nopl	(%rax)
0000000100021a60	cmpb	$0x2f, (%rbx,%rdi)
0000000100021a64	je	0x100021a80
0000000100021a66	incq	%rdi
0000000100021a69	cmpq	%rdi, %r14
0000000100021a6c	jne	0x100021a60
0000000100021a6e	xorl	%esi, %esi
0000000100021a70	movq	%r14, %rdi
0000000100021a73	testq	%rdi, %rdi
0000000100021a76	jne	0x100021a8a
0000000100021a78	jmp	0x100021a95
0000000100021a7a	nopw	(%rax,%rax)
0000000100021a80	movl	$0x1, %esi
0000000100021a85	testq	%rdi, %rdi
0000000100021a88	je	0x100021a95
0000000100021a8a	cmpq	$0x1, %rdi
0000000100021a8e	jne	0x100021aac
0000000100021a90	cmpb	$0x2e, (%rbx)
0000000100021a93	jne	0x100021aac
0000000100021a95	addq	%rsi, %rdi
0000000100021a98	cmpq	%rdi, %r14
0000000100021a9b	jb	0x100021eae
0000000100021aa1	addq	%rdi, %rbx
0000000100021aa4	subq	%rdi, %r14
0000000100021aa7	jne	0x100021a50
0000000100021aa9	xorl	%r14d, %r14d
0000000100021aac	movq	%rbx, -0x70(%rbp)
0000000100021ab0	movq	%r14, -0x68(%rbp)
0000000100021ab4	cmpb	$0x2, %dl
0000000100021ab7	jne	0x100021e8e
0000000100021abd	xorl	%r13d, %r13d
0000000100021ac0	cmpb	$0x1, %cl
0000000100021ac3	setne	%dl
0000000100021ac6	sbbl	%r13d, %r13d
0000000100021ac9	movzbl	%r8b, %r15d
0000000100021acd	orb	%dl, %r13b
0000000100021ad0	cmpb	$0x6, %al
0000000100021ad2	leaq	-0x50(%rbp), %rdx
0000000100021ad6	movl	$0x10, %r12d
0000000100021adc	cmovneq	%rdx, %r12
0000000100021ae0	leaq	-0x40(%rbp), %rdx
0000000100021ae4	movl	$0x20, %esi
0000000100021ae9	cmovneq	%rdx, %rsi
0000000100021aed	testb	%cl, %cl
0000000100021aef	je	0x100021b9c
0000000100021af5	movzbl	%r13b, %eax
0000000100021af9	cmpb	$-0x1, %al
0000000100021afb	je	0x100021b05
0000000100021afd	testl	%eax, %eax
0000000100021aff	jne	0x100021c3b
0000000100021b05	cmpb	$-0x1, %r13b
0000000100021b09	je	0x100021b13
0000000100021b0b	testl	%eax, %eax
0000000100021b0d	jne	0x100021dbc
0000000100021b13	leaq	-0x70(%rbp), %rdi
0000000100021b17	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100021b1c	movzbl	%al, %eax
0000000100021b1f	addq	%r15, %rax
0000000100021b22	cmpq	%rax, %r14
0000000100021b25	jbe	0x100021e8e
0000000100021b2b	movq	%r15, %r12
0000000100021b2e	leaq	-0x70(%rbp), %r13
0000000100021b32	nopw	%cs:(%rax,%rax)
0000000100021b3c	nopl	(%rax)
0000000100021b40	leaq	-0xb8(%rbp), %rdi
0000000100021b47	movq	%r13, %rsi
0000000100021b4a	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021b4f	cmpb	$0xa, -0xb0(%rbp)
0000000100021b56	jne	0x100021e8e
0000000100021b5c	movq	%r14, %r15
0000000100021b5f	subq	-0xb8(%rbp), %r15
0000000100021b66	jb	0x100021ec0
0000000100021b6c	movq	%r15, -0x68(%rbp)
0000000100021b70	movq	%r13, %rdi
0000000100021b73	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100021b78	movzbl	%al, %eax
0000000100021b7b	addq	%r12, %rax
0000000100021b7e	movq	%r15, %r14
0000000100021b81	cmpq	%rax, %r15
0000000100021b84	ja	0x100021b40
0000000100021b86	jmp	0x100021e91
0000000100021b8b	xorl	%r14d, %r14d
0000000100021b8e	cmpb	$0x2, %dl
0000000100021b91	je	0x100021abd
0000000100021b97	jmp	0x100021e8e
0000000100021b9c	movq	%rsi, -0xc8(%rbp)
0000000100021ba3	movb	%r8b, -0x29(%rbp)
0000000100021ba7	cmpb	$0x6, %al
0000000100021ba9	jne	0x100021c86
0000000100021baf	movzbl	%r13b, %eax
0000000100021bb3	cmpb	$-0x1, %r13b
0000000100021bb7	je	0x100021bc1
0000000100021bb9	testl	%eax, %eax
0000000100021bbb	jne	0x100021e0d
0000000100021bc1	cmpb	$-0x1, %r13b
0000000100021bc5	je	0x100021bcf
0000000100021bc7	testl	%eax, %eax
0000000100021bc9	jne	0x100021e50
0000000100021bcf	leaq	-0x70(%rbp), %rdi
0000000100021bd3	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100021bd8	movzbl	%al, %eax
0000000100021bdb	addq	%r15, %rax
0000000100021bde	cmpq	%rax, %r14
0000000100021be1	jbe	0x100021e8e
0000000100021be7	movq	%r15, %r12
0000000100021bea	leaq	-0x70(%rbp), %r13
0000000100021bee	nop
0000000100021bf0	leaq	-0xb8(%rbp), %rdi
0000000100021bf7	movq	%r13, %rsi
0000000100021bfa	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021bff	cmpb	$0xa, -0xb0(%rbp)
0000000100021c06	jne	0x100021e8e
0000000100021c0c	movq	%r14, %r15
0000000100021c0f	subq	-0xb8(%rbp), %r15
0000000100021c16	jb	0x100021ec0
0000000100021c1c	movq	%r15, -0x68(%rbp)
0000000100021c20	movq	%r13, %rdi
0000000100021c23	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100021c28	movzbl	%al, %eax
0000000100021c2b	addq	%r12, %rax
0000000100021c2e	movq	%r15, %r14
0000000100021c31	cmpq	%rax, %r15
0000000100021c34	ja	0x100021bf0
0000000100021c36	jmp	0x100021e91
0000000100021c3b	testq	%r14, %r14
0000000100021c3e	je	0x100021e4b
0000000100021c44	leaq	-0xb8(%rbp), %r12
0000000100021c4b	leaq	-0x70(%rbp), %r13
0000000100021c4f	nop
0000000100021c50	movq	%r12, %rdi
0000000100021c53	movq	%r13, %rsi
0000000100021c56	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021c5b	cmpb	$0xa, -0xb0(%rbp)
0000000100021c62	jne	0x100021e8e
0000000100021c68	movq	%r14, %r15
0000000100021c6b	subq	-0xb8(%rbp), %r15
0000000100021c72	jb	0x100021ec0
0000000100021c78	movq	%r15, -0x68(%rbp)
0000000100021c7c	movq	%r15, %r14
0000000100021c7f	jne	0x100021c50
0000000100021c81	jmp	0x100021e4b
0000000100021c86	movzbl	%r13b, %ecx
0000000100021c8a	movl	%ecx, -0x74(%rbp)
0000000100021c8d	movl	%eax, %eax
0000000100021c8f	leaq	0x23e(%rip), %rcx
0000000100021c96	movslq	(%rcx,%rax,4), %rax
0000000100021c9a	addq	%rcx, %rax
0000000100021c9d	movq	%rax, -0xc0(%rbp)
0000000100021ca4	cmpb	$-0x1, %r13b
0000000100021ca8	movq	-0xc8(%rbp), %r15
0000000100021caf	je	0x100021ce0
0000000100021cb1	nopw	%cs:(%rax,%rax)
0000000100021cbb	nopl	(%rax,%rax)
0000000100021cc0	cmpl	$0x0, -0x74(%rbp)
0000000100021cc4	je	0x100021ce0
0000000100021cc6	xorl	%ecx, %ecx
0000000100021cc8	xorl	%eax, %eax
0000000100021cca	movl	$0x6, %edx
0000000100021ccf	jmpq	*-0xc0(%rbp)
0000000100021cd5	nopw	%cs:(%rax,%rax)
0000000100021cdf	nop
0000000100021ce0	leaq	-0x70(%rbp), %rdi
0000000100021ce4	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100021ce9	movzbl	%al, %eax
0000000100021cec	movzbl	-0x29(%rbp), %ecx
0000000100021cf0	movl	$0x6, %edx
0000000100021cf5	jmpq	*-0xc0(%rbp)
0000000100021cfb	movq	(%r12), %rdx
0000000100021cff	addq	$0x4, %rdx
0000000100021d03	jmp	0x100021d60
0000000100021d05	nopw	%cs:(%rax,%rax)
0000000100021d0f	nop
0000000100021d10	movq	(%r12), %rdx
0000000100021d14	movq	(%r15), %rsi
0000000100021d17	leaq	0x1(%rsi), %rdi
0000000100021d1b	testq	%rsi, %rsi
0000000100021d1e	cmoveq	%rsi, %rdi
0000000100021d22	leaq	0x8(%rdx,%rdi), %rdx
0000000100021d27	jmp	0x100021d60
0000000100021d29	nopl	(%rax)
0000000100021d30	movq	(%r12), %rdx
0000000100021d34	movq	(%r15), %rsi
0000000100021d37	leaq	0x1(%rsi), %rdi
0000000100021d3b	testq	%rsi, %rsi
0000000100021d3e	cmoveq	%rsi, %rdi
0000000100021d42	leaq	0x2(%rdx,%rdi), %rdx
0000000100021d47	jmp	0x100021d60
0000000100021d49	nopl	(%rax)
0000000100021d50	movl	$0x2, %edx
0000000100021d55	nopw	%cs:(%rax,%rax)
0000000100021d5f	nop
0000000100021d60	addq	%rdx, %rax
0000000100021d63	movzbl	%cl, %ecx
0000000100021d66	addq	%rax, %rcx
0000000100021d69	cmpq	%rcx, %r14
0000000100021d6c	jbe	0x100021e8e
0000000100021d72	leaq	-0xb8(%rbp), %rdi
0000000100021d79	leaq	-0x70(%rbp), %rsi
0000000100021d7d	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021d82	cmpb	$0xa, -0xb0(%rbp)
0000000100021d89	jne	0x100021e8e
0000000100021d8f	movq	%r14, %r15
0000000100021d92	subq	-0xb8(%rbp), %r15
0000000100021d99	jb	0x100021ec0
0000000100021d9f	movq	%r15, -0x68(%rbp)
0000000100021da3	movq	%r15, %r14
0000000100021da6	cmpb	$-0x1, %r13b
0000000100021daa	movq	-0xc8(%rbp), %r15
0000000100021db1	jne	0x100021cc0
0000000100021db7	jmp	0x100021ce0
0000000100021dbc	cmpq	%r15, %r14
0000000100021dbf	jbe	0x100021e8e
0000000100021dc5	movq	%r15, %r12
0000000100021dc8	leaq	-0x70(%rbp), %r13
0000000100021dcc	nopl	(%rax)
0000000100021dd0	leaq	-0xb8(%rbp), %rdi
0000000100021dd7	movq	%r13, %rsi
0000000100021dda	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021ddf	cmpb	$0xa, -0xb0(%rbp)
0000000100021de6	jne	0x100021e8e
0000000100021dec	movq	%r14, %r15
0000000100021def	subq	-0xb8(%rbp), %r15
0000000100021df6	jb	0x100021ec0
0000000100021dfc	movq	%r15, -0x68(%rbp)
0000000100021e00	movq	%r15, %r14
0000000100021e03	cmpq	%r12, %r15
0000000100021e06	ja	0x100021dd0
0000000100021e08	jmp	0x100021e91
0000000100021e0d	testq	%r14, %r14
0000000100021e10	je	0x100021e4b
0000000100021e12	leaq	-0xb8(%rbp), %r12
0000000100021e19	leaq	-0x70(%rbp), %r13
0000000100021e1d	xorl	%r15d, %r15d
0000000100021e20	movq	%r12, %rdi
0000000100021e23	movq	%r13, %rsi
0000000100021e26	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021e2b	cmpb	$0xa, -0xb0(%rbp)
0000000100021e32	jne	0x100021e8e
0000000100021e34	movq	%r14, %rax
0000000100021e37	subq	-0xb8(%rbp), %rax
0000000100021e3e	jb	0x100021ebd
0000000100021e40	movq	%rax, -0x68(%rbp)
0000000100021e44	movq	%rax, %r14
0000000100021e47	jne	0x100021e20
0000000100021e49	jmp	0x100021e91
0000000100021e4b	xorl	%r15d, %r15d
0000000100021e4e	jmp	0x100021e91
0000000100021e50	cmpq	%r15, %r14
0000000100021e53	jbe	0x100021e8e
0000000100021e55	movq	%r15, %r12
0000000100021e58	leaq	-0x70(%rbp), %r13
0000000100021e5c	leaq	-0xb8(%rbp), %rdi
0000000100021e63	movq	%r13, %rsi
0000000100021e66	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100021e6b	cmpb	$0xa, -0xb0(%rbp)
0000000100021e72	jne	0x100021e8e
0000000100021e74	movq	%r14, %r15
0000000100021e77	subq	-0xb8(%rbp), %r15
0000000100021e7e	jb	0x100021ec0
0000000100021e80	movq	%r15, -0x68(%rbp)
0000000100021e84	movq	%r15, %r14
0000000100021e87	cmpq	%r12, %r15
0000000100021e8a	ja	0x100021e5c
0000000100021e8c	jmp	0x100021e91
0000000100021e8e	movq	%r14, %r15
0000000100021e91	movq	%rbx, %rax
0000000100021e94	movq	%r15, %rdx
0000000100021e97	addq	$0xa8, %rsp
0000000100021e9e	popq	%rbx
0000000100021e9f	popq	%r12
0000000100021ea1	popq	%r13
0000000100021ea3	popq	%r14
0000000100021ea5	popq	%r15
0000000100021ea7	popq	%rbp
0000000100021ea8	retq
0000000100021ea9	movl	$0x1, %edi
0000000100021eae	leaq	0x26e23(%rip), %rdx
0000000100021eb5	movq	%r14, %rsi
0000000100021eb8	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100021ebd	movq	%rax, %r15
0000000100021ec0	leaq	0x26e29(%rip), %rdx
0000000100021ec7	movq	%r15, %rdi
0000000100021eca	movq	%r14, %rsi
0000000100021ecd	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100021ed2	nop
0000000100021ed4	.byte 0x27 #bad opcode
0000000100021ed5	.byte 0xfe #bad opcode
0000000100021ed6	.byte 0xff #bad opcode
0000000100021ed7	.byte 0xff #bad opcode
0000000100021ed8	cmpb	$-0x2, %al
0000000100021eda	.byte 0xff #bad opcode
0000000100021edb	decl	-0x1d80001(%rsi,%rdi,8)
0000000100021ee2	.byte 0xff #bad opcode
0000000100021ee3	lcalll	*-0x1(%rsi,%rdi,8)
0000000100021ee7	.byte 0xff #bad opcode
0000000100021ee8	jl	0x100021ee8
0000000100021eea	.byte 0xff #bad opcode
0000000100021eeb	decl	(%rdi)
0000000100021eed	.byte 0x1f #bad opcode
0000000100021eee	addb	%dl, 0x48(%rbp)
0000000100021ef2	movl	%esp, %ebp
0000000100021ef4	xorl	%eax, %eax
0000000100021ef6	cmpb	$0x0, 0x3a(%rdi)
0000000100021efa	jne	0x100021fc5
0000000100021f00	movq	%rdi, %rcx
0000000100021f03	movzbl	0x10(%rdi), %edx
0000000100021f07	cmpb	$0x5, %dl
0000000100021f0a	jb	0x100021fc5
0000000100021f10	movq	(%rcx), %rax
0000000100021f13	movq	0x8(%rcx), %rsi
0000000100021f17	cmpb	$0x0, 0x38(%rcx)
0000000100021f1b	je	0x100021f21
0000000100021f1d	xorl	%edi, %edi
0000000100021f1f	jmp	0x100021f90
0000000100021f21	addq	$0x10, %rcx
0000000100021f25	xorl	%edi, %edi
0000000100021f27	cmpb	$0x6, %dl
0000000100021f2a	cmoveq	%rdi, %rcx
0000000100021f2e	je	0x100021f90
0000000100021f30	movzbl	(%rcx), %edx
0000000100021f33	movl	$0x6, %edi
0000000100021f38	leaq	0x95(%rip), %r8
0000000100021f3f	movslq	(%r8,%rdx,4), %rdx
0000000100021f43	addq	%r8, %rdx
0000000100021f46	jmpq	*%rdx
0000000100021f48	movq	0x10(%rcx), %rdi
0000000100021f4c	addq	$0x4, %rdi
0000000100021f50	jmp	0x100021f8b
0000000100021f52	movq	0x10(%rcx), %rdx
0000000100021f56	movq	0x20(%rcx), %rcx
0000000100021f5a	leaq	0x1(%rcx), %rdi
0000000100021f5e	testq	%rcx, %rcx
0000000100021f61	cmoveq	%rcx, %rdi
0000000100021f65	leaq	0x8(%rdx,%rdi), %rdi
0000000100021f6a	jmp	0x100021f8b
0000000100021f6c	movq	0x10(%rcx), %rdx
0000000100021f70	movq	0x20(%rcx), %rcx
0000000100021f74	leaq	0x1(%rcx), %rdi
0000000100021f78	testq	%rcx, %rcx
0000000100021f7b	cmoveq	%rcx, %rdi
0000000100021f7f	leaq	0x2(%rdx,%rdi), %rdi
0000000100021f84	jmp	0x100021f8b
0000000100021f86	movl	$0x2, %edi
0000000100021f8b	cmpq	%rdi, %rsi
0000000100021f8e	jb	0x100021fc7
0000000100021f90	cmpq	%rsi, %rdi
0000000100021f93	jne	0x100021f99
0000000100021f95	xorl	%eax, %eax
0000000100021f97	popq	%rbp
0000000100021f98	retq
0000000100021f99	addq	%rax, %rsi
0000000100021f9c	leaq	0x1(%rax,%rdi), %rcx
0000000100021fa1	cmpq	%rsi, %rcx
0000000100021fa4	sete	%r8b
0000000100021fa8	movzbl	(%rax,%rdi), %edx
0000000100021fac	cmpb	$0x2e, %dl
0000000100021faf	sete	%al
0000000100021fb2	andb	%r8b, %al
0000000100021fb5	cmpq	%rsi, %rcx
0000000100021fb8	je	0x100021fc5
0000000100021fba	cmpb	$0x2e, %dl
0000000100021fbd	jne	0x100021fc5
0000000100021fbf	cmpb	$0x2f, (%rcx)
0000000100021fc2	sete	%al
0000000100021fc5	popq	%rbp
0000000100021fc6	retq
0000000100021fc7	leaq	0x26cc2(%rip), %rdx
0000000100021fce	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100021fd3	nop
0000000100021fd4	je	0x100021fd5
0000000100021fd6	.byte 0xff #bad opcode
0000000100021fd7	.byte 0xff #bad opcode
0000000100021fd8	jle	0x100021fd9
0000000100021fda	.byte 0xff #bad opcode
0000000100021fdb	pushq	0x74ffffff(%rdi)
0000000100021fe1	.byte 0xff #bad opcode
0000000100021fe2	.byte 0xff #bad opcode
0000000100021fe3	lcalll	*-0x4d000001(%rax)
0000000100021fe9	.byte 0xff #bad opcode
0000000100021fea	.byte 0xff #bad opcode
0000000100021feb	decl	(%rdi)
0000000100021fed	.byte 0x1f #bad opcode
0000000100021fee	addb	%dl, 0x48(%rbp)
0000000100021ff2	movl	%esp, %ebp
0000000100021ff4	pushq	%r15
0000000100021ff6	pushq	%r14
0000000100021ff8	pushq	%r12
0000000100021ffa	pushq	%rbx
0000000100021ffb	movq	%rsi, %r14
0000000100021ffe	movzbl	0x38(%rsi), %r12d
0000000100022003	xorl	%r15d, %r15d
0000000100022006	cmpb	$0x1, %r12b
000000010002200a	setne	%cl
000000010002200d	movl	$0x0, %eax
0000000100022012	sbbl	%eax, %eax
0000000100022014	movq	%rdi, %rbx
0000000100022017	orb	%cl, %al
0000000100022019	movzbl	%al, %ecx
000000010002201c	cmpb	$-0x1, %cl
000000010002201f	je	0x100022025
0000000100022021	testl	%ecx, %ecx
0000000100022023	jne	0x100022075
0000000100022025	movzbl	0x3a(%r14), %r15d
000000010002202a	cmpb	$-0x1, %al
000000010002202c	je	0x100022032
000000010002202e	testl	%ecx, %ecx
0000000100022030	jne	0x100022075
0000000100022032	movq	%r14, %rdi
0000000100022035	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
000000010002203a	movzbl	%al, %eax
000000010002203d	testb	%r12b, %r12b
0000000100022040	jne	0x10002207c
0000000100022042	leaq	0x10(%r14), %rdx
0000000100022046	xorl	%ecx, %ecx
0000000100022048	cmpb	$0x6, 0x10(%r14)
000000010002204d	cmoveq	%rcx, %rdx
0000000100022051	je	0x10002207e
0000000100022053	movzbl	(%rdx), %esi
0000000100022056	movl	$0x6, %ecx
000000010002205b	leaq	0x132(%rip), %rdi
0000000100022062	movslq	(%rdi,%rsi,4), %rsi
0000000100022066	addq	%rdi, %rsi
0000000100022069	jmpq	*%rsi
000000010002206b	movq	0x10(%rdx), %rcx
000000010002206f	addq	$0x4, %rcx
0000000100022073	jmp	0x10002207e
0000000100022075	xorl	%eax, %eax
0000000100022077	testb	%r12b, %r12b
000000010002207a	je	0x100022042
000000010002207c	xorl	%ecx, %ecx
000000010002207e	addq	%rcx, %rax
0000000100022081	movzbl	%r15b, %edi
0000000100022085	addq	%rax, %rdi
0000000100022088	movq	0x8(%r14), %rsi
000000010002208c	cmpq	%rdi, %rsi
000000010002208f	jb	0x10002217c
0000000100022095	movq	(%r14), %r8
0000000100022098	leaq	(%r8,%rdi), %rax
000000010002209c	movq	$-0x1, %rdx
00000001000220a3	xorl	%ecx, %ecx
00000001000220a5	movq	%rdi, %r9
00000001000220a8	nopl	(%rax,%rax)
00000001000220b0	cmpq	%r9, %rsi
00000001000220b3	je	0x1000220e3
00000001000220b5	leaq	-0x1(%r8), %r10
00000001000220b9	incq	%r9
00000001000220bc	incq	%rdx
00000001000220bf	cmpb	$0x2f, -0x1(%r8,%rsi)
00000001000220c5	movq	%r10, %r8
00000001000220c8	jne	0x1000220b0
00000001000220ca	movq	%rsi, %rdi
00000001000220cd	subq	%rdx, %rdi
00000001000220d0	cmpq	%rdi, %rsi
00000001000220d3	jb	0x100022188
00000001000220d9	leaq	0x1(%r10,%rsi), %rax
00000001000220de	movl	$0x1, %ecx
00000001000220e3	subq	%rdi, %rsi
00000001000220e6	je	0x10002210b
00000001000220e8	movb	$0x9, %dl
00000001000220ea	cmpq	$0x2, %rsi
00000001000220ee	je	0x10002210f
00000001000220f0	cmpq	$0x1, %rsi
00000001000220f4	jne	0x10002211e
00000001000220f6	cmpb	$0x2e, (%rax)
00000001000220f9	jne	0x10002211e
00000001000220fb	xorl	%edx, %edx
00000001000220fd	cmpb	$0x3, 0x10(%r14)
0000000100022102	setae	%dl
0000000100022105	leal	0x7(%rdx,%rdx,2), %edx
0000000100022109	jmp	0x10002211e
000000010002210b	movb	$0xa, %dl
000000010002210d	jmp	0x10002211e
000000010002210f	cmpb	$0x2e, (%rax)
0000000100022112	jne	0x10002211e
0000000100022114	cmpb	$0x2e, 0x1(%rax)
0000000100022118	sete	%dl
000000010002211b	xorb	$0x9, %dl
000000010002211e	addq	%rsi, %rcx
0000000100022121	movq	%rcx, (%rbx)
0000000100022124	movb	%dl, 0x8(%rbx)
0000000100022127	movq	%rax, 0x10(%rbx)
000000010002212b	movq	%rsi, 0x18(%rbx)
000000010002212f	popq	%rbx
0000000100022130	popq	%r12
0000000100022132	popq	%r14
0000000100022134	popq	%r15
0000000100022136	popq	%rbp
0000000100022137	retq
0000000100022138	movq	0x10(%rdx), %rcx
000000010002213c	movq	0x20(%rdx), %rdx
0000000100022140	leaq	0x1(%rdx), %rsi
0000000100022144	testq	%rdx, %rdx
0000000100022147	cmoveq	%rdx, %rsi
000000010002214b	leaq	0x8(%rcx,%rsi), %rcx
0000000100022150	jmp	0x10002207e
0000000100022155	movq	0x10(%rdx), %rcx
0000000100022159	movq	0x20(%rdx), %rdx
000000010002215d	leaq	0x1(%rdx), %rsi
0000000100022161	testq	%rdx, %rdx
0000000100022164	cmoveq	%rdx, %rsi
0000000100022168	leaq	0x2(%rcx,%rsi), %rcx
000000010002216d	jmp	0x10002207e
0000000100022172	movl	$0x2, %ecx
0000000100022177	jmp	0x10002207e
000000010002217c	leaq	0x26b25(%rip), %rdx
0000000100022183	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100022188	leaq	0x26b31(%rip), %rdx
000000010002218f	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100022194	xlatb
0000000100022195	.byte 0xfe #bad opcode
0000000100022196	.byte 0xff #bad opcode
0000000100022197	jmpq	*-0x1150001(%rdi,%rdi,8)
000000010002219e	.byte 0xff #bad opcode
000000010002219f	callq	*%rdi
00000001000221a1	.byte 0xfe #bad opcode
00000001000221a2	.byte 0xff #bad opcode
00000001000221a3	incl	%ecx
00000001000221a5	.byte 0xff #bad opcode
00000001000221a6	.byte 0xff #bad opcode
00000001000221a7	.byte 0xff #bad opcode
00000001000221a8	fdivrp	%st, %st(7)
00000001000221aa	.byte 0xff #bad opcode
00000001000221ab	decl	(%rdi)
00000001000221ad	.byte 0x1f #bad opcode
00000001000221ae	addb	%dl, 0x48(%rbp)
00000001000221b2	movl	%esp, %ebp
00000001000221b4	pushq	%r15
00000001000221b6	pushq	%r14
00000001000221b8	pushq	%r13
00000001000221ba	pushq	%r12
00000001000221bc	pushq	%rbx
00000001000221bd	subq	$0x18, %rsp
00000001000221c1	movq	%rdi, %r8
00000001000221c4	movzbl	0x38(%rsi), %r13d
00000001000221c9	cmpb	$0x3, %r13b
00000001000221cd	je	0x1000223ee
00000001000221d3	movq	%rsi, %r11
00000001000221d6	movzbl	0x39(%rsi), %ebx
00000001000221da	cmpb	$0x3, %bl
00000001000221dd	je	0x1000223ee
00000001000221e3	cmpb	%bl, %r13b
00000001000221e6	ja	0x1000223ee
00000001000221ec	movq	(%r11), %r15
00000001000221ef	leaq	0x10(%r11), %rax
00000001000221f3	movzbl	0x10(%r11), %r9d
00000001000221f8	xorl	%ecx, %ecx
00000001000221fa	cmpl	$0x3, %r9d
00000001000221fe	setae	%cl
0000000100022201	xorl	%r10d, %r10d
0000000100022204	cmpl	$0x6, %r9d
0000000100022208	leal	0x7(%rcx,%rcx,2), %r14d
000000010002220d	movzbl	0x3a(%r11), %r12d
0000000100022212	cmovneq	%rax, %r10
0000000100022216	nopw	%cs:(%rax,%rax)
0000000100022220	testb	%r13b, %r13b
0000000100022223	je	0x1000222b0
0000000100022229	movzbl	%r13b, %eax
000000010002222d	cmpl	$0x1, %eax
0000000100022230	jne	0x1000222e0
0000000100022236	movb	$0x2, 0x38(%r11)
000000010002223b	testb	%r12b, %r12b
000000010002223e	jne	0x1000223c9
0000000100022244	movb	$0x2, %r13b
0000000100022247	cmpl	$0x3, %r9d
000000010002224b	jb	0x1000223b2
0000000100022251	cmpl	$0x5, %r9d
0000000100022255	je	0x1000223b2
000000010002225b	cmpl	$0x6, %r9d
000000010002225f	jne	0x100022439
0000000100022265	movb	%r12b, -0x29(%rbp)
0000000100022269	movl	%r14d, -0x30(%rbp)
000000010002226d	movb	%bl, -0x2a(%rbp)
0000000100022270	movq	%r10, %r14
0000000100022273	movl	%r9d, %ebx
0000000100022276	movq	%r8, -0x38(%rbp)
000000010002227a	movq	%r11, %r12
000000010002227d	movq	%r11, %rdi
0000000100022280	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100022285	testb	%al, %al
0000000100022287	jne	0x10002243f
000000010002228d	movq	%r15, %rdi
0000000100022290	movq	-0x38(%rbp), %r8
0000000100022294	movl	%ebx, %r9d
0000000100022297	movq	%r14, %r10
000000010002229a	movq	%r12, %r11
000000010002229d	movzbl	-0x2a(%rbp), %ebx
00000001000222a1	movl	-0x30(%rbp), %r14d
00000001000222a5	movzbl	-0x29(%rbp), %r12d
00000001000222aa	jmp	0x1000223b5
00000001000222af	nop
00000001000222b0	cmpb	$0x6, %r9b
00000001000222b4	je	0x1000223aa
00000001000222ba	movzbl	(%r10), %ecx
00000001000222be	leaq	0x2d3(%rip), %rdx
00000001000222c5	movslq	(%rdx,%rcx,4), %rax
00000001000222c9	addq	%rdx, %rax
00000001000222cc	jmpq	*%rax
00000001000222ce	movq	0x10(%r10), %rax
00000001000222d2	addq	$0x4, %rax
00000001000222d6	jmp	0x1000223a5
00000001000222db	nopl	(%rax,%rax)
00000001000222e0	movq	0x8(%r11), %rsi
00000001000222e4	testq	%rsi, %rsi
00000001000222e7	je	0x1000223e9
00000001000222ed	xorl	%eax, %eax
00000001000222ef	nop
00000001000222f0	cmpb	$0x2f, (%r15,%rax)
00000001000222f5	je	0x10002230d
00000001000222f7	incq	%rax
00000001000222fa	cmpq	%rax, %rsi
00000001000222fd	jne	0x1000222f0
00000001000222ff	xorl	%edi, %edi
0000000100022301	movq	%rsi, %rax
0000000100022304	testq	%rax, %rax
0000000100022307	jne	0x100022317
0000000100022309	movb	$0xa, %cl
000000010002230b	jmp	0x100022350
000000010002230d	movl	$0x1, %edi
0000000100022312	testq	%rax, %rax
0000000100022315	je	0x100022309
0000000100022317	movb	$0x9, %cl
0000000100022319	cmpq	$0x2, %rax
000000010002231d	je	0x100022337
000000010002231f	cmpq	$0x1, %rax
0000000100022323	jne	0x100022350
0000000100022325	cmpb	$0x2e, (%r15)
0000000100022329	movzbl	%r14b, %ecx
000000010002232d	movl	$0x9, %edx
0000000100022332	cmovnel	%edx, %ecx
0000000100022335	jmp	0x100022350
0000000100022337	cmpb	$0x2e, (%r15)
000000010002233b	jne	0x100022350
000000010002233d	cmpb	$0x2e, 0x1(%r15)
0000000100022342	sete	%cl
0000000100022345	xorb	$0x9, %cl
0000000100022348	nopl	(%rax,%rax)
0000000100022350	addq	%rax, %rdi
0000000100022353	movq	%rsi, %rdx
0000000100022356	subq	%rdi, %rdx
0000000100022359	jb	0x10002254a
000000010002235f	addq	%r15, %rdi
0000000100022362	movq	%rdi, (%r11)
0000000100022365	movq	%rdx, 0x8(%r11)
0000000100022369	cmpb	$0xa, %cl
000000010002236c	je	0x1000223b5
000000010002236e	jmp	0x100022404
0000000100022373	movq	0x10(%r10), %rax
0000000100022377	movq	0x20(%r10), %rdx
000000010002237b	leaq	0x1(%rdx), %rsi
000000010002237f	testq	%rdx, %rdx
0000000100022382	cmoveq	%rdx, %rsi
0000000100022386	leaq	0x8(%rax,%rsi), %rax
000000010002238b	jmp	0x1000223a5
000000010002238d	movq	0x10(%r10), %rax
0000000100022391	movq	0x20(%r10), %rdx
0000000100022395	leaq	0x1(%rdx), %rsi
0000000100022399	testq	%rdx, %rdx
000000010002239c	cmoveq	%rdx, %rsi
00000001000223a0	leaq	0x2(%rax,%rsi), %rax
00000001000223a5	testq	%rax, %rax
00000001000223a8	jne	0x100022411
00000001000223aa	movb	$0x1, 0x38(%r11)
00000001000223af	movb	$0x1, %r13b
00000001000223b2	movq	%r15, %rdi
00000001000223b5	cmpb	$0x3, %r13b
00000001000223b9	je	0x1000223ee
00000001000223bb	movq	%rdi, %r15
00000001000223be	cmpb	%bl, %r13b
00000001000223c1	jbe	0x100022220
00000001000223c7	jmp	0x1000223ee
00000001000223c9	movq	0x8(%r11), %rax
00000001000223cd	testq	%rax, %rax
00000001000223d0	je	0x100022556
00000001000223d6	decq	%rax
00000001000223d9	incq	%r15
00000001000223dc	movq	%r15, (%r11)
00000001000223df	movq	%rax, 0x8(%r11)
00000001000223e3	movb	$0x6, (%r8)
00000001000223e7	jmp	0x1000223f2
00000001000223e9	movb	$0x3, 0x38(%r11)
00000001000223ee	movb	$0xa, (%r8)
00000001000223f2	movq	%r8, %rax
00000001000223f5	addq	$0x18, %rsp
00000001000223f9	popq	%rbx
00000001000223fa	popq	%r12
00000001000223fc	popq	%r13
00000001000223fe	popq	%r14
0000000100022400	popq	%r15
0000000100022402	popq	%rbp
0000000100022403	retq
0000000100022404	movb	%cl, (%r8)
0000000100022407	movq	%r15, 0x8(%r8)
000000010002240b	movq	%rax, 0x10(%r8)
000000010002240f	jmp	0x1000223f2
0000000100022411	movb	$0x1, 0x38(%r11)
0000000100022416	movq	0x8(%r11), %rsi
000000010002241a	movl	$0x6, %edi
000000010002241f	leaq	0x18a(%rip), %rax
0000000100022426	movslq	(%rax,%rcx,4), %rdx
000000010002242a	addq	%rax, %rdx
000000010002242d	jmpq	*%rdx
000000010002242f	movq	0x10(%r10), %rdi
0000000100022433	addq	$0x4, %rdi
0000000100022437	jmp	0x10002249f
0000000100022439	movb	$0x6, (%r8)
000000010002243d	jmp	0x1000223f2
000000010002243f	movq	0x8(%r12), %rax
0000000100022444	testq	%rax, %rax
0000000100022447	movq	-0x38(%rbp), %r8
000000010002244b	je	0x100022584
0000000100022451	decq	%rax
0000000100022454	incq	%r15
0000000100022457	movq	%r15, (%r12)
000000010002245b	movq	%rax, 0x8(%r12)
0000000100022460	movb	$0x7, (%r8)
0000000100022464	jmp	0x1000223f2
0000000100022466	movq	0x10(%r10), %rax
000000010002246a	movq	0x20(%r10), %rdx
000000010002246e	leaq	0x1(%rdx), %rdi
0000000100022472	testq	%rdx, %rdx
0000000100022475	cmoveq	%rdx, %rdi
0000000100022479	leaq	0x8(%rax,%rdi), %rdi
000000010002247e	jmp	0x10002249f
0000000100022480	movq	0x10(%r10), %rax
0000000100022484	movq	0x20(%r10), %rdx
0000000100022488	leaq	0x1(%rdx), %rdi
000000010002248c	testq	%rdx, %rdx
000000010002248f	cmoveq	%rdx, %rdi
0000000100022493	leaq	0x2(%rax,%rdi), %rdi
0000000100022498	jmp	0x10002249f
000000010002249a	movl	$0x2, %edi
000000010002249f	cmpq	%rsi, %rdi
00000001000224a2	ja	0x100022569
00000001000224a8	movl	$0x6, %eax
00000001000224ad	leaq	0x114(%rip), %rdx
00000001000224b4	movslq	(%rdx,%rcx,4), %rcx
00000001000224b8	addq	%rdx, %rcx
00000001000224bb	jmpq	*%rcx
00000001000224bd	movq	0x10(%r10), %rax
00000001000224c1	addq	$0x4, %rax
00000001000224c5	jmp	0x100022500
00000001000224c7	movq	0x10(%r10), %rax
00000001000224cb	movq	0x20(%r10), %rcx
00000001000224cf	leaq	0x1(%rcx), %rdx
00000001000224d3	testq	%rcx, %rcx
00000001000224d6	cmoveq	%rcx, %rdx
00000001000224da	leaq	0x8(%rax,%rdx), %rax
00000001000224df	jmp	0x100022500
00000001000224e1	movq	0x10(%r10), %rax
00000001000224e5	movq	0x20(%r10), %rcx
00000001000224e9	leaq	0x1(%rcx), %rdx
00000001000224ed	testq	%rcx, %rcx
00000001000224f0	cmoveq	%rcx, %rdx
00000001000224f4	leaq	0x2(%rax,%rdx), %rax
00000001000224f9	jmp	0x100022500
00000001000224fb	movl	$0x2, %eax
0000000100022500	movq	%rsi, %rcx
0000000100022503	subq	%rax, %rcx
0000000100022506	jb	0x100022575
0000000100022508	addq	%r15, %rax
000000010002250b	movq	%rax, (%r11)
000000010002250e	movq	%rcx, 0x8(%r11)
0000000100022512	movq	0x30(%r11), %rax
0000000100022516	movq	%rax, 0x20(%r8)
000000010002251a	movq	0x29(%r11), %rax
000000010002251e	movq	%rax, 0x19(%r8)
0000000100022522	movq	0x21(%r11), %rax
0000000100022526	movq	%rax, 0x11(%r8)
000000010002252a	movq	0x11(%r11), %rax
000000010002252e	movq	0x19(%r11), %rcx
0000000100022532	movq	%rcx, 0x9(%r8)
0000000100022536	movq	%rax, 0x1(%r8)
000000010002253a	movb	%r9b, (%r8)
000000010002253d	movq	%r15, 0x28(%r8)
0000000100022541	movq	%rdi, 0x30(%r8)
0000000100022545	jmp	0x1000223f2
000000010002254a	leaq	0x26817(%rip), %rdx
0000000100022551	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100022556	leaq	0x267f3(%rip), %rdx
000000010002255d	movl	$0x1, %edi
0000000100022562	xorl	%esi, %esi
0000000100022564	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100022569	leaq	0x26798(%rip), %rdx
0000000100022570	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100022575	leaq	0x267a4(%rip), %rdx
000000010002257c	movq	%rax, %rdi
000000010002257f	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100022584	leaq	0x267ad(%rip), %rdx
000000010002258b	movl	$0x1, %edi
0000000100022590	xorl	%esi, %esi
0000000100022592	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100022597	nop
0000000100022598	std
000000010002259a	.byte 0xff #bad opcode
000000010002259b	.byte 0xff #bad opcode
000000010002259c	.byte 0xdb #bad opcode
000000010002259d	std
000000010002259e	.byte 0xff #bad opcode
000000010002259f	.byte 0xff #bad opcode
00000001000225a0	jns	0x1000225a0
00000001000225a2	.byte 0xff #bad opcode
00000001000225a3	pushq	(%rsi)
00000001000225a5	std
00000001000225a6	.byte 0xff #bad opcode
00000001000225a7	pushq	%rbp
00000001000225a9	std
00000001000225aa	.byte 0xff #bad opcode
00000001000225ab	.byte 0xff #bad opcode
00000001000225ac	jns	0x1000225ac
00000001000225ae	.byte 0xff #bad opcode
00000001000225af	.byte 0xff #bad opcode
00000001000225b0	jg	0x1000225b0
00000001000225b2	.byte 0xff #bad opcode
00000001000225b3	pushq	-0x10000002(%rsi)
00000001000225b9	.byte 0xfe #bad opcode
00000001000225ba	.byte 0xff #bad opcode
00000001000225bb	.byte 0xff #bad opcode
00000001000225bc	jg	0x1000225bc
00000001000225be	.byte 0xff #bad opcode
00000001000225bf	callq	*%rax
00000001000225c1	.byte 0xfe #bad opcode
00000001000225c2	.byte 0xff #bad opcode
00000001000225c3	.byte 0xff #bad opcode
00000001000225c4	.byte 0xea #bad opcode
00000001000225c5	.byte 0xfe #bad opcode
00000001000225c6	.byte 0xff #bad opcode
00000001000225c7	pushq	%rbp
00000001000225c9	.byte 0xfe #bad opcode
00000001000225ca	.byte 0xff #bad opcode
00000001000225cb	.byte 0xff #bad opcode
00000001000225cc	.byte 0xff #bad opcode
00000001000225cd	.byte 0xfe #bad opcode
00000001000225ce	.byte 0xff #bad opcode
00000001000225cf	.byte 0xff #bad opcode
00000001000225d0	cmpb	%bh, %bh
00000001000225d2	.byte 0xff #bad opcode
00000001000225d3	pushq	%rbp
00000001000225d5	.byte 0xfe #bad opcode
00000001000225d6	.byte 0xff #bad opcode
00000001000225d7	lcalll	*(%rcx)
00000001000225d9	.byte 0xff #bad opcode
00000001000225da	.byte 0xff #bad opcode
00000001000225db	pushq	(%rbx)
00000001000225dd	.byte 0xff #bad opcode
00000001000225de	.byte 0xff #bad opcode
00000001000225df	callq	*0x48(%rbp)
00000001000225e2	movl	%esp, %ebp
00000001000225e4	pushq	%r15
00000001000225e6	pushq	%r14
00000001000225e8	pushq	%r13
00000001000225ea	pushq	%r12
00000001000225ec	pushq	%rbx
00000001000225ed	subq	$0xa8, %rsp
00000001000225f4	movq	%rdi, -0x48(%rbp)
00000001000225f8	movzbl	0x38(%rsi), %r12d
00000001000225fd	cmpb	$0x3, %r12b
0000000100022601	je	0x100022a0e
0000000100022607	movq	%rsi, %r14
000000010002260a	movzbl	0x39(%rsi), %ecx
000000010002260e	cmpb	$0x3, %cl
0000000100022611	je	0x100022a0e
0000000100022617	cmpb	%cl, %r12b
000000010002261a	ja	0x100022a0e
0000000100022620	xorl	%edx, %edx
0000000100022622	cmpb	$0x1, %r12b
0000000100022626	setne	%al
0000000100022629	movl	$0x0, %r13d
000000010002262f	sbbl	%r13d, %r13d
0000000100022632	orb	%al, %r13b
0000000100022635	leaq	0x10(%r14), %rax
0000000100022639	movzbl	0x10(%r14), %r8d
000000010002263e	cmpl	$0x6, %r8d
0000000100022642	cmovneq	%rax, %rdx
0000000100022646	movq	%rdx, -0x38(%rbp)
000000010002264a	movzbl	0x3a(%r14), %ebx
000000010002264f	movzbl	%r13b, %eax
0000000100022653	movl	%eax, -0x3c(%rbp)
0000000100022656	testb	%r12b, %r12b
0000000100022659	movl	%r8d, -0x2c(%rbp)
000000010002265d	je	0x1000227b0
0000000100022663	movq	0x8(%r14), %r15
0000000100022667	cmpb	$-0x1, %r13b
000000010002266b	je	0x100022677
000000010002266d	cmpl	$0x0, -0x3c(%rbp)
0000000100022671	jne	0x10002294d
0000000100022677	movzbl	%bl, %eax
000000010002267a	movq	%rax, -0x88(%rbp)
0000000100022681	jmp	0x1000226a0
0000000100022683	nopw	%cs:(%rax,%rax)
000000010002268d	nopl	(%rax)
0000000100022690	movb	$0x1, 0x39(%r14)
0000000100022695	movb	$0x1, %cl
0000000100022697	cmpb	%cl, %r12b
000000010002269a	ja	0x100022a0e
00000001000226a0	cmpb	$0x1, %cl
00000001000226a3	je	0x1000226e0
00000001000226a5	movzbl	%cl, %eax
00000001000226a8	cmpl	$0x2, %eax
00000001000226ab	jne	0x100022b8a
00000001000226b1	cmpb	$-0x1, %r13b
00000001000226b5	je	0x1000226bd
00000001000226b7	cmpl	$0x0, -0x3c(%rbp)
00000001000226bb	jne	0x100022720
00000001000226bd	movq	%r14, %rdi
00000001000226c0	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
00000001000226c5	movl	-0x2c(%rbp), %r8d
00000001000226c9	movzbl	%al, %eax
00000001000226cc	addq	-0x88(%rbp), %rax
00000001000226d3	cmpq	%rax, %r15
00000001000226d6	jbe	0x100022690
00000001000226d8	jmp	0x100022732
00000001000226da	nopw	(%rax,%rax)
00000001000226e0	movb	$0x0, 0x39(%r14)
00000001000226e5	testb	%bl, %bl
00000001000226e7	jne	0x100022a2e
00000001000226ed	xorl	%ecx, %ecx
00000001000226ef	cmpl	$0x3, %r8d
00000001000226f3	jb	0x100022697
00000001000226f5	cmpl	$0x5, %r8d
00000001000226f9	je	0x100022697
00000001000226fb	cmpl	$0x6, %r8d
00000001000226ff	jne	0x100022a3c
0000000100022705	movq	%r14, %rdi
0000000100022708	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
000000010002270d	testb	%al, %al
000000010002270f	jne	0x100022be1
0000000100022715	xorl	%ecx, %ecx
0000000100022717	movl	-0x2c(%rbp), %r8d
000000010002271b	jmp	0x100022697
0000000100022720	xorl	%eax, %eax
0000000100022722	addq	-0x88(%rbp), %rax
0000000100022729	cmpq	%rax, %r15
000000010002272c	jbe	0x100022690
0000000100022732	leaq	-0xc8(%rbp), %rdi
0000000100022739	movq	%r14, %rsi
000000010002273c	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100022741	movq	%r15, %rdi
0000000100022744	movzbl	-0xc0(%rbp), %eax
000000010002274b	leaq	-0xbf(%rbp), %rsi
0000000100022752	movq	(%rsi), %rcx
0000000100022755	movq	0x8(%rsi), %rdx
0000000100022759	movq	%rcx, -0x80(%rbp)
000000010002275d	movq	%rdx, -0x78(%rbp)
0000000100022761	movq	0x10(%rsi), %rcx
0000000100022765	movq	%rcx, -0x70(%rbp)
0000000100022769	movq	0x18(%rsi), %rcx
000000010002276d	movq	%rcx, -0x68(%rbp)
0000000100022771	movq	0x20(%rsi), %rcx
0000000100022775	movq	%rcx, -0x60(%rbp)
0000000100022779	movq	0x28(%rsi), %rcx
000000010002277d	movq	%rcx, -0x58(%rbp)
0000000100022781	movq	0x2f(%rsi), %rcx
0000000100022785	movq	%rcx, -0x51(%rbp)
0000000100022789	subq	-0xc8(%rbp), %rdi
0000000100022790	jb	0x100022c8e
0000000100022796	movq	%rdi, 0x8(%r14)
000000010002279a	cmpb	$0xa, %al
000000010002279c	movl	-0x2c(%rbp), %r8d
00000001000227a0	jne	0x100022b40
00000001000227a6	movb	$0x2, %cl
00000001000227a8	movq	%rdi, %r15
00000001000227ab	jmp	0x100022697
00000001000227b0	leaq	0x4f9(%rip), %r12
00000001000227b7	jmp	0x1000227c7
00000001000227b9	nopl	(%rax)
00000001000227c0	movb	$0x1, 0x39(%r14)
00000001000227c5	movb	$0x1, %cl
00000001000227c7	cmpb	$0x1, %cl
00000001000227ca	je	0x100022810
00000001000227cc	movzbl	%cl, %eax
00000001000227cf	cmpl	$0x2, %eax
00000001000227d2	jne	0x100022b8a
00000001000227d8	movq	0x8(%r14), %r15
00000001000227dc	cmpb	$-0x1, %r13b
00000001000227e0	je	0x1000227e8
00000001000227e2	cmpl	$0x0, -0x3c(%rbp)
00000001000227e6	jne	0x10002284c
00000001000227e8	movq	%r14, %rdi
00000001000227eb	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
00000001000227f0	movl	-0x2c(%rbp), %r8d
00000001000227f4	movzbl	%al, %eax
00000001000227f7	movl	%ebx, %ecx
00000001000227f9	cmpb	$0x6, %r8b
00000001000227fd	jne	0x100022856
00000001000227ff	xorl	%edx, %edx
0000000100022801	jmp	0x1000228c0
0000000100022806	nopw	%cs:(%rax,%rax)
0000000100022810	movb	$0x0, 0x39(%r14)
0000000100022815	testb	%bl, %bl
0000000100022817	jne	0x100022a2a
000000010002281d	xorl	%ecx, %ecx
000000010002281f	cmpl	$0x3, %r8d
0000000100022823	jb	0x1000227c7
0000000100022825	cmpl	$0x5, %r8d
0000000100022829	je	0x1000227c7
000000010002282b	cmpl	$0x6, %r8d
000000010002282f	jne	0x100022a3c
0000000100022835	movq	%r14, %rdi
0000000100022838	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
000000010002283d	movl	-0x2c(%rbp), %r8d
0000000100022841	xorl	%ecx, %ecx
0000000100022843	testb	%al, %al
0000000100022845	je	0x1000227c7
0000000100022847	jmp	0x100022bdd
000000010002284c	xorl	%ecx, %ecx
000000010002284e	xorl	%eax, %eax
0000000100022850	cmpb	$0x6, %r8b
0000000100022854	je	0x1000227ff
0000000100022856	movq	-0x38(%rbp), %rdx
000000010002285a	movzbl	(%rdx), %esi
000000010002285d	movl	$0x6, %edx
0000000100022862	movslq	(%r12,%rsi,4), %rsi
0000000100022866	addq	%r12, %rsi
0000000100022869	jmpq	*%rsi
000000010002286b	movq	-0x38(%rbp), %rdx
000000010002286f	movq	0x10(%rdx), %rdx
0000000100022873	addq	$0x4, %rdx
0000000100022877	jmp	0x1000228c0
0000000100022879	movq	-0x38(%rbp), %rsi
000000010002287d	movq	0x10(%rsi), %rdx
0000000100022881	movq	0x20(%rsi), %rsi
0000000100022885	leaq	0x1(%rsi), %rdi
0000000100022889	testq	%rsi, %rsi
000000010002288c	cmoveq	%rsi, %rdi
0000000100022890	leaq	0x8(%rdx,%rdi), %rdx
0000000100022895	jmp	0x1000228c0
0000000100022897	movq	-0x38(%rbp), %rsi
000000010002289b	movq	0x10(%rsi), %rdx
000000010002289f	movq	0x20(%rsi), %rsi
00000001000228a3	leaq	0x1(%rsi), %rdi
00000001000228a7	testq	%rsi, %rsi
00000001000228aa	cmoveq	%rsi, %rdi
00000001000228ae	leaq	0x2(%rdx,%rdi), %rdx
00000001000228b3	jmp	0x1000228c0
00000001000228b5	movl	$0x2, %edx
00000001000228ba	nopw	(%rax,%rax)
00000001000228c0	addq	%rdx, %rax
00000001000228c3	movzbl	%cl, %ecx
00000001000228c6	addq	%rax, %rcx
00000001000228c9	cmpq	%rcx, %r15
00000001000228cc	jbe	0x1000227c0
00000001000228d2	leaq	-0xc8(%rbp), %rdi
00000001000228d9	movq	%r14, %rsi
00000001000228dc	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
00000001000228e1	movq	%r15, %rdi
00000001000228e4	movzbl	-0xc0(%rbp), %eax
00000001000228eb	leaq	-0xbf(%rbp), %rsi
00000001000228f2	movq	(%rsi), %rcx
00000001000228f5	movq	0x8(%rsi), %rdx
00000001000228f9	movq	%rcx, -0x80(%rbp)
00000001000228fd	movq	%rdx, -0x78(%rbp)
0000000100022901	movq	0x10(%rsi), %rcx
0000000100022905	movq	%rcx, -0x70(%rbp)
0000000100022909	movq	0x18(%rsi), %rcx
000000010002290d	movq	%rcx, -0x68(%rbp)
0000000100022911	movq	0x20(%rsi), %rcx
0000000100022915	movq	%rcx, -0x60(%rbp)
0000000100022919	movq	0x28(%rsi), %rcx
000000010002291d	movq	%rcx, -0x58(%rbp)
0000000100022921	movq	0x2f(%rsi), %rcx
0000000100022925	movq	%rcx, -0x51(%rbp)
0000000100022929	subq	-0xc8(%rbp), %rdi
0000000100022930	jb	0x100022c8e
0000000100022936	movq	%rdi, 0x8(%r14)
000000010002293a	cmpb	$0xa, %al
000000010002293c	movl	-0x2c(%rbp), %r8d
0000000100022940	jne	0x100022b40
0000000100022946	movb	$0x2, %cl
0000000100022948	jmp	0x1000227c7
000000010002294d	leaq	-0xc8(%rbp), %r13
0000000100022954	testb	%bl, %bl
0000000100022956	je	0x100022a45
000000010002295c	movq	%r15, %rbx
000000010002295f	jmp	0x100022982
0000000100022961	nopw	%cs:(%rax,%rax)
000000010002296b	nopl	(%rax,%rax)
0000000100022970	movb	$0x1, 0x39(%r14)
0000000100022975	movb	$0x1, %cl
0000000100022977	xorl	%ebx, %ebx
0000000100022979	cmpb	%cl, %r12b
000000010002297c	ja	0x100022a0e
0000000100022982	cmpb	$0x2, %cl
0000000100022985	jne	0x100022b83
000000010002298b	testq	%rbx, %rbx
000000010002298e	je	0x100022970
0000000100022990	movq	%r13, %rdi
0000000100022993	movq	%r14, %rsi
0000000100022996	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
000000010002299b	movq	%rbx, %r15
000000010002299e	movzbl	-0xc0(%rbp), %eax
00000001000229a5	leaq	-0xbf(%rbp), %rsi
00000001000229ac	movq	(%rsi), %rcx
00000001000229af	movq	0x8(%rsi), %rdx
00000001000229b3	movq	%rcx, -0x80(%rbp)
00000001000229b7	movq	%rdx, -0x78(%rbp)
00000001000229bb	movq	0x10(%rsi), %rcx
00000001000229bf	movq	%rcx, -0x70(%rbp)
00000001000229c3	movq	0x18(%rsi), %rcx
00000001000229c7	movq	%rcx, -0x68(%rbp)
00000001000229cb	movq	0x20(%rsi), %rcx
00000001000229cf	movq	%rcx, -0x60(%rbp)
00000001000229d3	movq	0x28(%rsi), %rcx
00000001000229d7	movq	%rcx, -0x58(%rbp)
00000001000229db	movq	0x2f(%rsi), %rcx
00000001000229df	movq	%rcx, -0x51(%rbp)
00000001000229e3	subq	-0xc8(%rbp), %r15
00000001000229ea	jb	0x100022c88
00000001000229f0	movq	%r15, 0x8(%r14)
00000001000229f4	cmpb	$0xa, %al
00000001000229f6	movl	-0x2c(%rbp), %r8d
00000001000229fa	jne	0x100022b40
0000000100022a00	movb	$0x2, %cl
0000000100022a02	movq	%r15, %rbx
0000000100022a05	cmpb	%cl, %r12b
0000000100022a08	jbe	0x100022982
0000000100022a0e	movq	-0x48(%rbp), %rsi
0000000100022a12	movb	$0xa, (%rsi)
0000000100022a15	movq	%rsi, %rax
0000000100022a18	addq	$0xa8, %rsp
0000000100022a1f	popq	%rbx
0000000100022a20	popq	%r12
0000000100022a22	popq	%r13
0000000100022a24	popq	%r14
0000000100022a26	popq	%r15
0000000100022a28	popq	%rbp
0000000100022a29	retq
0000000100022a2a	movq	0x8(%r14), %r15
0000000100022a2e	subq	$0x1, %r15
0000000100022a32	jb	0x100022bcc
0000000100022a38	movq	%r15, 0x8(%r14)
0000000100022a3c	movq	-0x48(%rbp), %rsi
0000000100022a40	movb	$0x6, (%rsi)
0000000100022a43	jmp	0x100022a15
0000000100022a45	movq	%r15, %rbx
0000000100022a48	jmp	0x100022a65
0000000100022a4a	movb	$0x1, 0x39(%r14)
0000000100022a4f	movb	$0x1, %cl
0000000100022a51	xorl	%ebx, %ebx
0000000100022a53	nopw	%cs:(%rax,%rax)
0000000100022a5d	nopl	(%rax)
0000000100022a60	cmpb	%cl, %r12b
0000000100022a63	ja	0x100022a0e
0000000100022a65	cmpb	$0x1, %cl
0000000100022a68	je	0x100022b00
0000000100022a6e	movzbl	%cl, %eax
0000000100022a71	cmpl	$0x2, %eax
0000000100022a74	jne	0x100022b8a
0000000100022a7a	testq	%rbx, %rbx
0000000100022a7d	je	0x100022a4a
0000000100022a7f	movq	%r13, %rdi
0000000100022a82	movq	%r14, %rsi
0000000100022a85	callq	__ZN3std4path10Components25parse_next_component_back17hd5b26593935b3ed6E ## std::path::Components::parse_next_component_back::hd5b26593935b3ed6
0000000100022a8a	movq	%rbx, %r15
0000000100022a8d	movzbl	-0xc0(%rbp), %eax
0000000100022a94	leaq	-0xbf(%rbp), %rsi
0000000100022a9b	movq	(%rsi), %rcx
0000000100022a9e	movq	0x8(%rsi), %rdx
0000000100022aa2	movq	%rcx, -0x80(%rbp)
0000000100022aa6	movq	%rdx, -0x78(%rbp)
0000000100022aaa	movq	0x10(%rsi), %rcx
0000000100022aae	movq	%rcx, -0x70(%rbp)
0000000100022ab2	movq	0x18(%rsi), %rcx
0000000100022ab6	movq	%rcx, -0x68(%rbp)
0000000100022aba	movq	0x20(%rsi), %rcx
0000000100022abe	movq	%rcx, -0x60(%rbp)
0000000100022ac2	movq	0x28(%rsi), %rcx
0000000100022ac6	movq	%rcx, -0x58(%rbp)
0000000100022aca	movq	0x2f(%rsi), %rcx
0000000100022ace	movq	%rcx, -0x51(%rbp)
0000000100022ad2	subq	-0xc8(%rbp), %r15
0000000100022ad9	jb	0x100022c88
0000000100022adf	movq	%r15, 0x8(%r14)
0000000100022ae3	cmpb	$0xa, %al
0000000100022ae5	movl	-0x2c(%rbp), %r8d
0000000100022ae9	jne	0x100022b40
0000000100022aeb	movb	$0x2, %cl
0000000100022aed	movq	%r15, %rbx
0000000100022af0	jmp	0x100022a60
0000000100022af5	nopw	%cs:(%rax,%rax)
0000000100022aff	nop
0000000100022b00	movb	$0x0, 0x39(%r14)
0000000100022b05	xorl	%ecx, %ecx
0000000100022b07	cmpl	$0x3, %r8d
0000000100022b0b	jb	0x100022a60
0000000100022b11	cmpl	$0x5, %r8d
0000000100022b15	je	0x100022a60
0000000100022b1b	cmpl	$0x6, %r8d
0000000100022b1f	jne	0x100022a3c
0000000100022b25	movq	%r14, %rdi
0000000100022b28	callq	__ZN3std4path10Components15include_cur_dir17h9920d763fe8448a2E ## std::path::Components::include_cur_dir::h9920d763fe8448a2
0000000100022b2d	testb	%al, %al
0000000100022b2f	jne	0x100022be1
0000000100022b35	xorl	%ecx, %ecx
0000000100022b37	movl	-0x2c(%rbp), %r8d
0000000100022b3b	jmp	0x100022a60
0000000100022b40	movq	-0x48(%rbp), %rsi
0000000100022b44	movb	%al, (%rsi)
0000000100022b46	movq	-0x80(%rbp), %rax
0000000100022b4a	movq	-0x78(%rbp), %rcx
0000000100022b4e	movq	%rax, 0x1(%rsi)
0000000100022b52	movq	%rcx, 0x9(%rsi)
0000000100022b56	movq	-0x70(%rbp), %rax
0000000100022b5a	movq	%rax, 0x11(%rsi)
0000000100022b5e	movq	-0x68(%rbp), %rax
0000000100022b62	movq	%rax, 0x19(%rsi)
0000000100022b66	movq	-0x60(%rbp), %rax
0000000100022b6a	movq	%rax, 0x21(%rsi)
0000000100022b6e	movq	-0x58(%rbp), %rax
0000000100022b72	movq	%rax, 0x29(%rsi)
0000000100022b76	movq	-0x51(%rbp), %rax
0000000100022b7a	movq	%rax, 0x30(%rsi)
0000000100022b7e	jmp	0x100022a15
0000000100022b83	movzbl	%cl, %eax
0000000100022b86	testl	%eax, %eax
0000000100022b88	jne	0x100022bbd
0000000100022b8a	cmpb	$0x6, %r8b
0000000100022b8e	movq	-0x48(%rbp), %rsi
0000000100022b92	je	0x100022c7e
0000000100022b98	movq	-0x38(%rbp), %rax
0000000100022b9c	movzbl	(%rax), %eax
0000000100022b9f	leaq	0x122(%rip), %rcx
0000000100022ba6	movslq	(%rcx,%rax,4), %rax
0000000100022baa	addq	%rcx, %rax
0000000100022bad	jmpq	*%rax
0000000100022baf	movq	-0x38(%rbp), %rax
0000000100022bb3	movq	0x10(%rax), %rax
0000000100022bb7	addq	$0x4, %rax
0000000100022bbb	jmp	0x100022c35
0000000100022bbd	movb	$0x0, 0x39(%r14)
0000000100022bc2	subq	$0x1, %r15
0000000100022bc6	jae	0x100022a38
0000000100022bcc	leaq	0x261c5(%rip), %rdx
0000000100022bd3	movq	%r15, %rdi
0000000100022bd6	xorl	%esi, %esi
0000000100022bd8	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100022bdd	movq	0x8(%r14), %r15
0000000100022be1	subq	$0x1, %r15
0000000100022be5	jb	0x100022c9d
0000000100022beb	movq	%r15, 0x8(%r14)
0000000100022bef	movq	-0x48(%rbp), %rsi
0000000100022bf3	movb	$0x7, (%rsi)
0000000100022bf6	jmp	0x100022a15
0000000100022bfb	movq	-0x38(%rbp), %rcx
0000000100022bff	movq	0x10(%rcx), %rax
0000000100022c03	movq	0x20(%rcx), %rcx
0000000100022c07	leaq	0x1(%rcx), %rdx
0000000100022c0b	testq	%rcx, %rcx
0000000100022c0e	cmoveq	%rcx, %rdx
0000000100022c12	leaq	0x8(%rax,%rdx), %rax
0000000100022c17	jmp	0x100022c35
0000000100022c19	movq	-0x38(%rbp), %rcx
0000000100022c1d	movq	0x10(%rcx), %rax
0000000100022c21	movq	0x20(%rcx), %rcx
0000000100022c25	leaq	0x1(%rcx), %rdx
0000000100022c29	testq	%rcx, %rcx
0000000100022c2c	cmoveq	%rcx, %rdx
0000000100022c30	leaq	0x2(%rax,%rdx), %rax
0000000100022c35	testq	%rax, %rax
0000000100022c38	je	0x100022c7e
0000000100022c3a	movb	$0x3, 0x39(%r14)
0000000100022c3f	movq	(%r14), %rax
0000000100022c42	movq	0x8(%r14), %rcx
0000000100022c46	movq	0x30(%r14), %rdx
0000000100022c4a	movq	%rdx, 0x20(%rsi)
0000000100022c4e	movq	0x29(%r14), %rdx
0000000100022c52	movq	%rdx, 0x19(%rsi)
0000000100022c56	movq	0x21(%r14), %rdx
0000000100022c5a	movq	%rdx, 0x11(%rsi)
0000000100022c5e	movq	0x19(%r14), %rdx
0000000100022c62	movq	%rdx, 0x9(%rsi)
0000000100022c66	movq	0x11(%r14), %rdx
0000000100022c6a	movq	%rdx, 0x1(%rsi)
0000000100022c6e	movb	%r8b, (%rsi)
0000000100022c71	movq	%rax, 0x28(%rsi)
0000000100022c75	movq	%rcx, 0x30(%rsi)
0000000100022c79	jmp	0x100022a15
0000000100022c7e	movb	$0x3, 0x39(%r14)
0000000100022c83	jmp	0x100022a12
0000000100022c88	movq	%r15, %rdi
0000000100022c8b	movq	%rbx, %r15
0000000100022c8e	leaq	0x2611b(%rip), %rdx
0000000100022c95	movq	%r15, %rsi
0000000100022c98	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100022c9d	leaq	0x260dc(%rip), %rdx
0000000100022ca4	movq	%r15, %rdi
0000000100022ca7	xorl	%esi, %esi
0000000100022ca9	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100022cae	nop
0000000100022cb0	movl	$0xc9fffffb, %ebx               ## imm = 0xC9FFFFFB
0000000100022cb5	sti
0000000100022cb6	.byte 0xff #bad opcode
0000000100022cb7	callq	*(%rax)
0000000100022cb9	cld
0000000100022cba	.byte 0xff #bad opcode
0000000100022cbb	.byte 0xff #bad opcode
0000000100022cbc	movl	$0xe7fffffb, %ebx               ## imm = 0xE7FFFFFB
0000000100022cc1	sti
0000000100022cc2	.byte 0xff #bad opcode
0000000100022cc3	incl	-0x18000004(%rip)
0000000100022cc9	.byte 0xfe #bad opcode
0000000100022cca	.byte 0xff #bad opcode
0000000100022ccb	pushq	(%rbx)
0000000100022ccd	.byte 0xff #bad opcode
0000000100022cce	.byte 0xff #bad opcode
0000000100022ccf	pushq	-0x1(%rdx)
0000000100022cd2	.byte 0xff #bad opcode
0000000100022cd3	jmpq	*%rdi
0000000100022cd5	.byte 0xfe #bad opcode
0000000100022cd6	.byte 0xff #bad opcode
0000000100022cd7	callq	*-0x1(%rcx)
0000000100022cda	.byte 0xff #bad opcode
0000000100022cdb	pushq	-0x1(%rdx)
0000000100022cde	.byte 0xff #bad opcode
0000000100022cdf	callq	*0x48(%rbp)
0000000100022ce2	movl	%esp, %ebp
0000000100022ce4	pushq	%r15
0000000100022ce6	pushq	%r14
0000000100022ce8	pushq	%r13
0000000100022cea	pushq	%r12
0000000100022cec	pushq	%rbx
0000000100022ced	subq	$0x158, %rsp                    ## imm = 0x158
0000000100022cf4	testq	%rsi, %rsi
0000000100022cf7	je	0x100022d01
0000000100022cf9	movb	$0x1, %r8b
0000000100022cfc	cmpb	$0x2f, (%rdi)
0000000100022cff	je	0x100022d04
0000000100022d01	xorl	%r8d, %r8d
0000000100022d04	testq	%rcx, %rcx
0000000100022d07	je	0x100022d10
0000000100022d09	movb	$0x1, %al
0000000100022d0b	cmpb	$0x2f, (%rdx)
0000000100022d0e	je	0x100022d12
0000000100022d10	xorl	%eax, %eax
0000000100022d12	movq	%rdx, -0x180(%rbp)
0000000100022d19	movq	%rcx, -0x178(%rbp)
0000000100022d20	movb	$0x6, -0x170(%rbp)
0000000100022d27	movb	%al, -0x146(%rbp)
0000000100022d2d	movw	$0x200, -0x148(%rbp)            ## imm = 0x200
0000000100022d36	leaq	-0x12f(%rbp), %rbx
0000000100022d3d	movb	$0x6, %r9b
0000000100022d40	movb	$0x2, %dl
0000000100022d42	xorl	%r10d, %r10d
0000000100022d45	cmpb	$0x6, %r9b
0000000100022d49	je	0x100022d87
0000000100022d4b	nopl	(%rax,%rax)
0000000100022d50	movq	-0x41(%rbp), %rax
0000000100022d54	movq	%rax, -0xb1(%rbp)
0000000100022d5b	movq	-0x48(%rbp), %rax
0000000100022d5f	movq	%rax, -0xb8(%rbp)
0000000100022d66	movq	-0x50(%rbp), %rax
0000000100022d6a	movq	%rax, -0xc0(%rbp)
0000000100022d71	movq	-0x60(%rbp), %rax
0000000100022d75	movq	-0x58(%rbp), %rcx
0000000100022d79	movq	%rcx, -0xc8(%rbp)
0000000100022d80	movq	%rax, -0xd0(%rbp)
0000000100022d87	movq	%rdi, -0x100(%rbp)
0000000100022d8e	movq	%rdi, -0x140(%rbp)
0000000100022d95	movq	%rsi, %r13
0000000100022d98	movq	%rsi, -0x138(%rbp)
0000000100022d9f	movb	%r9b, -0x29(%rbp)
0000000100022da3	movb	%r9b, -0x130(%rbp)
0000000100022daa	movq	-0xb1(%rbp), %rax
0000000100022db1	movq	%rax, 0x1f(%rbx)
0000000100022db5	movq	-0xb8(%rbp), %rax
0000000100022dbc	movq	%rax, 0x18(%rbx)
0000000100022dc0	movq	-0xc0(%rbp), %rax
0000000100022dc7	movq	%rax, 0x10(%rbx)
0000000100022dcb	movq	-0xd0(%rbp), %rax
0000000100022dd2	movq	-0xc8(%rbp), %rcx
0000000100022dd9	movq	%rcx, 0x8(%rbx)
0000000100022ddd	movq	%rax, (%rbx)
0000000100022de0	movl	%r8d, %r14d
0000000100022de3	movb	%r8b, -0x106(%rbp)
0000000100022dea	movl	%r10d, %r12d
0000000100022ded	movb	%r10b, -0x108(%rbp)
0000000100022df4	movl	%edx, %r15d
0000000100022df7	movb	%dl, -0x107(%rbp)
0000000100022dfd	leaq	-0xd0(%rbp), %rdi
0000000100022e04	leaq	-0x140(%rbp), %rsi
0000000100022e0b	callq	__ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha31051903aba823eE ## _$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha31051903aba823e
0000000100022e10	leaq	-0x98(%rbp), %rdi
0000000100022e17	leaq	-0x180(%rbp), %rsi
0000000100022e1e	callq	__ZN80_$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha31051903aba823eE ## _$LT$std..path..Components$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha31051903aba823e
0000000100022e23	movzbl	-0x98(%rbp), %eax
0000000100022e2a	cmpb	$0xa, -0xd0(%rbp)
0000000100022e31	je	0x100022eca
0000000100022e37	cmpb	$0xa, %al
0000000100022e39	je	0x100022ece
0000000100022e3f	leaq	-0xd0(%rbp), %rdi
0000000100022e46	leaq	-0x98(%rbp), %rsi
0000000100022e4d	callq	__ZN61_$LT$std..path..Component$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6b5f0981ec8041e0E ## _$LT$std..path..Component$u20$as$u20$core..cmp..PartialEq$GT$::eq::h6b5f0981ec8041e0
0000000100022e52	testb	%al, %al
0000000100022e54	je	0x100022f18
0000000100022e5a	movq	-0x140(%rbp), %rdi
0000000100022e61	movq	-0x138(%rbp), %rsi
0000000100022e68	movzbl	-0x130(%rbp), %r9d
0000000100022e70	movq	(%rbx), %rax
0000000100022e73	movq	0x8(%rbx), %rcx
0000000100022e77	movq	%rax, -0x60(%rbp)
0000000100022e7b	movq	%rcx, -0x58(%rbp)
0000000100022e7f	movq	0x10(%rbx), %rax
0000000100022e83	movq	%rax, -0x50(%rbp)
0000000100022e87	movq	0x18(%rbx), %rax
0000000100022e8b	movq	%rax, -0x48(%rbp)
0000000100022e8f	movq	0x1f(%rbx), %rax
0000000100022e93	movq	%rax, -0x41(%rbp)
0000000100022e97	movzbl	-0x108(%rbp), %r10d
0000000100022e9f	movzbl	-0x107(%rbp), %edx
0000000100022ea6	movzbl	-0x106(%rbp), %r8d
0000000100022eae	movzbl	0x2e(%rbx), %eax
0000000100022eb2	movb	%al, -0x34(%rbp)
0000000100022eb5	movl	0x2a(%rbx), %eax
0000000100022eb8	movl	%eax, -0x38(%rbp)
0000000100022ebb	cmpb	$0x6, %r9b
0000000100022ebf	jne	0x100022d50
0000000100022ec5	jmp	0x100022d87
0000000100022eca	cmpb	$0xa, %al
0000000100022ecc	jne	0x100022f18
0000000100022ece	movq	-0x41(%rbp), %rax
0000000100022ed2	movq	%rax, -0xd9(%rbp)
0000000100022ed9	movq	-0x48(%rbp), %rax
0000000100022edd	movq	%rax, -0xe0(%rbp)
0000000100022ee4	movq	-0x50(%rbp), %rax
0000000100022ee8	movq	%rax, -0xe8(%rbp)
0000000100022eef	movq	-0x60(%rbp), %rax
0000000100022ef3	movq	-0x58(%rbp), %rcx
0000000100022ef7	movq	%rcx, -0xf0(%rbp)
0000000100022efe	movq	%rax, -0xf8(%rbp)
0000000100022f05	movl	-0x38(%rbp), %eax
0000000100022f08	movl	%eax, -0x30(%rbp)
0000000100022f0b	movzbl	-0x34(%rbp), %eax
0000000100022f0f	movb	%al, -0x2c(%rbp)
0000000100022f12	cmpb	$0x2, %r14b
0000000100022f16	jne	0x100022f1f
0000000100022f18	xorl	%eax, %eax
0000000100022f1a	jmp	0x100022fb8
0000000100022f1f	movq	-0xd9(%rbp), %rax
0000000100022f26	movq	%rax, -0xa0(%rbp)
0000000100022f2d	movq	-0xe0(%rbp), %rax
0000000100022f34	movq	%rax, -0xa7(%rbp)
0000000100022f3b	movq	-0xe8(%rbp), %rax
0000000100022f42	movq	%rax, -0xaf(%rbp)
0000000100022f49	movq	-0xf8(%rbp), %rax
0000000100022f50	movq	-0xf0(%rbp), %rcx
0000000100022f57	movq	%rcx, -0xb7(%rbp)
0000000100022f5e	movq	%rax, -0xbf(%rbp)
0000000100022f65	movl	-0x30(%rbp), %eax
0000000100022f68	movl	%eax, -0x95(%rbp)
0000000100022f6e	movzbl	-0x2c(%rbp), %eax
0000000100022f72	movb	%al, -0x91(%rbp)
0000000100022f78	movq	-0x100(%rbp), %rax
0000000100022f7f	movq	%rax, -0xd0(%rbp)
0000000100022f86	movq	%r13, -0xc8(%rbp)
0000000100022f8d	movzbl	-0x29(%rbp), %eax
0000000100022f91	movb	%al, -0xc0(%rbp)
0000000100022f97	movb	%r12b, -0x98(%rbp)
0000000100022f9e	movb	%r15b, -0x97(%rbp)
0000000100022fa5	movb	%r14b, -0x96(%rbp)
0000000100022fac	leaq	-0xd0(%rbp), %rdi
0000000100022fb3	callq	__ZN3std4path10Components7as_path17hc95de799d49c8389E ## std::path::Components::as_path::hc95de799d49c8389
0000000100022fb8	addq	$0x158, %rsp                    ## imm = 0x158
0000000100022fbf	popq	%rbx
0000000100022fc0	popq	%r12
0000000100022fc2	popq	%r13
0000000100022fc4	popq	%r14
0000000100022fc6	popq	%r15
0000000100022fc8	popq	%rbp
0000000100022fc9	retq
0000000100022fca	nopw	(%rax,%rax)
__ZN3std4path4Path5_join17h2ed87663efb153faE:
0000000100022fd0	pushq	%rbp
0000000100022fd1	movq	%rsp, %rbp
0000000100022fd4	pushq	%r15
0000000100022fd6	pushq	%r14
0000000100022fd8	pushq	%r13
0000000100022fda	pushq	%r12
0000000100022fdc	pushq	%rbx
0000000100022fdd	subq	$0x28, %rsp
0000000100022fe1	movq	%r8, %r14
0000000100022fe4	movq	%rcx, -0x48(%rbp)
0000000100022fe8	movq	%rdx, %r15
0000000100022feb	movq	%rsi, %r12
0000000100022fee	movq	%rdi, %rbx
0000000100022ff1	testq	%rdx, %rdx
0000000100022ff4	je	0x100023055
0000000100022ff6	movq	%rbx, -0x50(%rbp)
0000000100022ffa	setns	%al
0000000100022ffd	js	0x100023128
0000000100023003	movzbl	%al, %ebx
0000000100023006	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002300d	movzbl	(%rax), %eax
0000000100023010	movq	%r15, %rdi
0000000100023013	movq	%rbx, %rsi
0000000100023016	callq	___rust_alloc
000000010002301b	testq	%rax, %rax
000000010002301e	je	0x10002312d
0000000100023024	movq	%rax, %r13
0000000100023027	movq	%rax, %rdi
000000010002302a	movq	%r12, %rsi
000000010002302d	movq	%r15, %rdx
0000000100023030	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100023035	movq	%r13, -0x40(%rbp)
0000000100023039	movq	%r15, -0x38(%rbp)
000000010002303d	movq	%r15, -0x30(%rbp)
0000000100023041	cmpb	$0x2f, -0x1(%r15,%r13)
0000000100023047	setne	%al
000000010002304a	movq	-0x50(%rbp), %rbx
000000010002304e	testq	%r14, %r14
0000000100023051	jne	0x100023082
0000000100023053	jmp	0x100023090
0000000100023055	movl	$0x1, %r13d
000000010002305b	movl	$0x1, %edi
0000000100023060	movq	%r12, %rsi
0000000100023063	movq	%r15, %rdx
0000000100023066	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002306b	movq	$0x1, -0x40(%rbp)
0000000100023073	movq	%r15, -0x38(%rbp)
0000000100023077	movq	%r15, -0x30(%rbp)
000000010002307b	xorl	%eax, %eax
000000010002307d	testq	%r14, %r14
0000000100023080	je	0x100023090
0000000100023082	movq	-0x48(%rbp), %rcx
0000000100023086	cmpb	$0x2f, (%rcx)
0000000100023089	jne	0x100023090
000000010002308b	xorl	%r12d, %r12d
000000010002308e	jmp	0x1000230ba
0000000100023090	testb	%al, %al
0000000100023092	je	0x1000230c8
0000000100023094	leaq	-0x40(%rbp), %rdi
0000000100023098	movl	$0x1, %edx
000000010002309d	movq	%r15, %rsi
00000001000230a0	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
00000001000230a5	movq	-0x40(%rbp), %r13
00000001000230a9	movq	-0x38(%rbp), %r15
00000001000230ad	movq	-0x30(%rbp), %r12
00000001000230b1	movb	$0x2f, (%r13,%r12)
00000001000230b7	incq	%r12
00000001000230ba	movq	%r12, -0x30(%rbp)
00000001000230be	subq	%r12, %r15
00000001000230c1	cmpq	%r14, %r15
00000001000230c4	jb	0x1000230d3
00000001000230c6	jmp	0x1000230ea
00000001000230c8	movq	%r15, %r12
00000001000230cb	subq	%r12, %r15
00000001000230ce	cmpq	%r14, %r15
00000001000230d1	jae	0x1000230ea
00000001000230d3	leaq	-0x40(%rbp), %rdi
00000001000230d7	movq	%r12, %rsi
00000001000230da	movq	%r14, %rdx
00000001000230dd	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h53c5f70843385dc4
00000001000230e2	movq	-0x40(%rbp), %r13
00000001000230e6	movq	-0x30(%rbp), %r12
00000001000230ea	addq	%r12, %r13
00000001000230ed	movq	%r13, %rdi
00000001000230f0	movq	-0x48(%rbp), %rsi
00000001000230f4	movq	%r14, %rdx
00000001000230f7	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000230fc	addq	%r14, %r12
00000001000230ff	movq	%r12, -0x30(%rbp)
0000000100023103	movq	-0x40(%rbp), %rax
0000000100023107	movq	-0x38(%rbp), %rcx
000000010002310b	movq	%rax, (%rbx)
000000010002310e	movq	%rcx, 0x8(%rbx)
0000000100023112	movq	%r12, 0x10(%rbx)
0000000100023116	movq	%rbx, %rax
0000000100023119	addq	$0x28, %rsp
000000010002311d	popq	%rbx
000000010002311e	popq	%r12
0000000100023120	popq	%r13
0000000100023122	popq	%r14
0000000100023124	popq	%r15
0000000100023126	popq	%rbp
0000000100023127	retq
0000000100023128	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010002312d	movq	%rbx, %rdi
0000000100023130	movq	%r15, %rsi
0000000100023133	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100023138	movq	%rax, %rbx
000000010002313b	leaq	-0x40(%rbp), %rdi
000000010002313f	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
0000000100023144	movq	%rbx, %rdi
0000000100023147	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002314c	nopl	(%rax)
__ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h333b6b74bb192f0dE:
0000000100023150	pushq	%rbp
0000000100023151	movq	%rsp, %rbp
0000000100023154	pushq	%rbx
0000000100023155	subq	$0x28, %rsp
0000000100023159	movq	(%rdi), %rax
000000010002315c	cmpb	$0x0, (%rax)
000000010002315f	movb	$0x0, (%rax)
0000000100023162	je	0x100023333
0000000100023168	movb	$0x0, -0x9(%rbp)
000000010002316c	movq	0x29045(%rip), %rax
0000000100023173	cmpq	$0x3, %rax
0000000100023177	jne	0x100023294
000000010002317d	cmpb	$0x0, -0x9(%rbp)
0000000100023181	jne	0x1000232a7
0000000100023187	movq	0x28ff2(%rip), %rcx
000000010002318e	leaq	__ZN3std4sync7remutex25current_thread_unique_ptr1X7__getit3VAL17hd275f0301f7246beE(%rip), %rdi ## std::sync::remutex::current_thread_unique_ptr::X::__getit::VAL::hd275f0301f7246be
0000000100023195	callq	*(%rdi)
0000000100023197	cmpq	%rax, %rcx
000000010002319a	jne	0x1000231be
000000010002319c	movl	0x2900e(%rip), %eax
00000001000231a2	incl	%eax
00000001000231a4	jne	0x1000231f0
00000001000231a6	leaq	0x219c6(%rip), %rdi
00000001000231ad	leaq	0x25cd4(%rip), %rdx
00000001000231b4	movl	$0x26, %esi
00000001000231b9	callq	__ZN4core6option13expect_failed17he6bc26adfac46087E ## core::option::expect_failed::he6bc26adfac46087
00000001000231be	movq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rdi ## std::io::stdio::STDOUT::hae8c83b8691d76e5
00000001000231c5	testq	%rdi, %rdi
00000001000231c8	je	0x100023302
00000001000231ce	callq	0x100042814                     ## symbol stub for: _pthread_mutex_trylock
00000001000231d3	testl	%eax, %eax
00000001000231d5	jne	0x1000232a7
00000001000231db	leaq	__ZN3std4sync7remutex25current_thread_unique_ptr1X7__getit3VAL17hd275f0301f7246beE(%rip), %rdi ## std::sync::remutex::current_thread_unique_ptr::X::__getit::VAL::hd275f0301f7246be
00000001000231e2	callq	*(%rdi)
00000001000231e4	movq	%rax, 0x28f95(%rip)
00000001000231eb	movl	$0x1, %eax
00000001000231f0	movl	%eax, 0x28fba(%rip)
00000001000231f6	movq	$0x1, -0x30(%rbp)
00000001000231fe	movq	$0x0, -0x28(%rbp)
0000000100023206	movq	$0x0, -0x20(%rbp)
000000010002320e	movb	$0x0, -0x18(%rbp)
0000000100023212	cmpq	$0x0, 0x28f6e(%rip)
000000010002321a	jne	0x10002334b
0000000100023220	movq	$-0x1, 0x28f5d(%rip)
000000010002322b	leaq	0x28f5e(%rip), %rdi
0000000100023232	callq	__ZN4core3ptr95drop_in_place$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$17hca91fb376b2cfe6cE ## core::ptr::drop_in_place$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$::hca91fb376b2cfe6c
0000000100023237	movq	-0x18(%rbp), %rax
000000010002323b	movq	%rax, 0x28f66(%rip)
0000000100023242	movq	-0x20(%rbp), %rax
0000000100023246	movq	%rax, 0x28f53(%rip)
000000010002324d	movq	-0x30(%rbp), %rax
0000000100023251	movq	-0x28(%rbp), %rcx
0000000100023255	movq	%rcx, 0x28f3c(%rip)
000000010002325c	movq	%rax, 0x28f2d(%rip)
0000000100023263	incq	0x28f1e(%rip)
000000010002326a	decl	0x28f40(%rip)
0000000100023270	jne	0x1000232a7
0000000100023272	movq	$0x0, 0x28f03(%rip)
000000010002327d	movq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rdi ## std::io::stdio::STDOUT::hae8c83b8691d76e5
0000000100023284	testq	%rdi, %rdi
0000000100023287	je	0x10002331f
000000010002328d	callq	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
0000000100023292	jmp	0x1000232a7
0000000100023294	leaq	-0x9(%rbp), %rdi
0000000100023298	callq	__ZN3std4sync9once_lock17OnceLock$LT$T$GT$10initialize17hfe0a812946b5aa4cE ## std::sync::once_lock::OnceLock$LT$T$GT$::initialize::hfe0a812946b5aa4c
000000010002329d	cmpb	$0x0, -0x9(%rbp)
00000001000232a1	je	0x100023187
00000001000232a7	movq	__ZN3std3sys4unix14stack_overflow3imp13MAIN_ALTSTACK17hfff2f1a25dac3a0eE.0(%rip), %rbx ## std::sys::unix::stack_overflow::imp::MAIN_ALTSTACK::hfff2f1a25dac3a0e (.0)
00000001000232ae	testq	%rbx, %rbx
00000001000232b1	je	0x1000232fb
00000001000232b3	movq	$0x0, -0x30(%rbp)
00000001000232bb	movq	$0x20000, -0x28(%rbp)           ## imm = 0x20000
00000001000232c3	movl	$0x4, -0x20(%rbp)
00000001000232ca	leaq	-0x30(%rbp), %rdi
00000001000232ce	xorl	%esi, %esi
00000001000232d0	callq	0x100042862                     ## symbol stub for: _sigaltstack
00000001000232d5	movl	$0x1d, %edi
00000001000232da	callq	0x10004287a                     ## symbol stub for: _sysconf
00000001000232df	subq	%rax, %rbx
00000001000232e2	movl	$0x1d, %edi
00000001000232e7	callq	0x10004287a                     ## symbol stub for: _sysconf
00000001000232ec	leaq	0x20000(%rax), %rsi
00000001000232f3	movq	%rbx, %rdi
00000001000232f6	callq	0x1000427de                     ## symbol stub for: _munmap
00000001000232fb	addq	$0x28, %rsp
00000001000232ff	popq	%rbx
0000000100023300	popq	%rbp
0000000100023301	retq
0000000100023302	leaq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rdi ## std::io::stdio::STDOUT::hae8c83b8691d76e5
0000000100023309	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
000000010002330e	movq	%rax, %rdi
0000000100023311	callq	0x100042814                     ## symbol stub for: _pthread_mutex_trylock
0000000100023316	testl	%eax, %eax
0000000100023318	jne	0x1000232a7
000000010002331a	jmp	0x1000231db
000000010002331f	leaq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rdi ## std::io::stdio::STDOUT::hae8c83b8691d76e5
0000000100023326	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
000000010002332b	movq	%rax, %rdi
000000010002332e	jmp	0x10002328d
0000000100023333	leaq	0x209b7(%rip), %rdi
000000010002333a	leaq	0x25aaf(%rip), %rdx
0000000100023341	movl	$0x2b, %esi
0000000100023346	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002334b	leaq	0x2095e(%rip), %rdi
0000000100023352	leaq	0x252cf(%rip), %rcx
0000000100023359	leaq	0x25758(%rip), %r8
0000000100023360	leaq	-0x10(%rbp), %rdx
0000000100023364	movl	$0x10, %esi
0000000100023369	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
000000010002336e	ud2
0000000100023370	movq	%rax, %rbx
0000000100023373	movq	-0x18(%rbp), %rax
0000000100023377	movq	%rax, 0x28e2a(%rip)
000000010002337e	movq	-0x20(%rbp), %rax
0000000100023382	movq	%rax, 0x28e17(%rip)
0000000100023389	movq	-0x30(%rbp), %rax
000000010002338d	movq	-0x28(%rbp), %rcx
0000000100023391	movq	%rcx, 0x28e00(%rip)
0000000100023398	movq	%rax, 0x28df1(%rip)
000000010002339f	leaq	0x28de2(%rip), %rdi
00000001000233a6	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
00000001000233ab	jmp	0x1000233b9
00000001000233ad	movq	%rax, %rbx
00000001000233b0	leaq	-0x30(%rbp), %rdi
00000001000233b4	callq	__ZN4core3ptr95drop_in_place$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$17hca91fb376b2cfe6cE ## core::ptr::drop_in_place$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$::hca91fb376b2cfe6c
00000001000233b9	leaq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rdi ## std::io::stdio::STDOUT::hae8c83b8691d76e5
00000001000233c0	callq	__ZN4core3ptr169drop_in_place$LT$std..sync..remutex..ReentrantMutexGuard$LT$core..cell..RefCell$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$$GT$$GT$17h5ea03d896a7878bdE ## core::ptr::drop_in_place$LT$std..sync..remutex..ReentrantMutexGuard$LT$core..cell..RefCell$LT$std..io..buffered..linewriter..LineWriter$LT$std..io..stdio..StdoutRaw$GT$$GT$$GT$$GT$::h5ea03d896a7878bd
00000001000233c5	movq	%rbx, %rdi
00000001000233c8	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000233cd	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000233d2	nopw	%cs:(%rax,%rax)
00000001000233dc	nopl	(%rax)
__ZN3std4sync4once4Once15call_once_force28_$u7b$$u7b$closure$u7d$$u7d$17h60ee154a5925fe80E:
00000001000233e0	pushq	%rbp
00000001000233e1	movq	%rsp, %rbp
00000001000233e4	movq	(%rdi), %rdx
00000001000233e7	movq	(%rdx), %rcx
00000001000233ea	movq	0x8(%rdx), %rax
00000001000233ee	movq	$0x0, (%rdx)
00000001000233f5	testq	%rcx, %rcx
00000001000233f8	je	0x100023439
00000001000233fa	movb	$0x1, (%rcx)
00000001000233fd	movq	$0x0, 0x10(%rax)
0000000100023405	movq	$0x0, 0x8(%rax)
000000010002340d	movq	$0x0, (%rax)
0000000100023414	movq	$0x1, 0x18(%rax)
000000010002341c	movq	$0x0, 0x20(%rax)
0000000100023424	movq	$0x0, 0x28(%rax)
000000010002342c	movb	$0x0, 0x30(%rax)
0000000100023430	movl	$0x0, 0x38(%rax)
0000000100023437	popq	%rbp
0000000100023438	retq
0000000100023439	leaq	0x208b1(%rip), %rdi
0000000100023440	leaq	0x25a29(%rip), %rdx
0000000100023447	movl	$0x2b, %esi
000000010002344c	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100023451	nopw	%cs:(%rax,%rax)
000000010002345b	nopl	(%rax,%rax)
__ZN3std4sync4once4Once15call_once_force28_$u7b$$u7b$closure$u7d$$u7d$17hb51b6ce1887acd50E:
0000000100023460	pushq	%rbp
0000000100023461	movq	%rsp, %rbp
0000000100023464	pushq	%rbx
0000000100023465	pushq	%rax
0000000100023466	movq	(%rdi), %rax
0000000100023469	movq	(%rax), %rbx
000000010002346c	movq	$0x0, (%rax)
0000000100023473	testq	%rbx, %rbx
0000000100023476	je	0x1000234d3
0000000100023478	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002347f	movzbl	(%rax), %eax
0000000100023482	movl	$0x400, %edi                    ## imm = 0x400
0000000100023487	movl	$0x1, %esi
000000010002348c	callq	___rust_alloc
0000000100023491	testq	%rax, %rax
0000000100023494	je	0x1000234eb
0000000100023496	movq	$0x0, 0x10(%rbx)
000000010002349e	movq	$0x0, 0x8(%rbx)
00000001000234a6	movq	$0x0, (%rbx)
00000001000234ad	movq	%rax, 0x18(%rbx)
00000001000234b1	movq	$0x400, 0x20(%rbx)              ## imm = 0x400
00000001000234b9	movq	$0x0, 0x28(%rbx)
00000001000234c1	movb	$0x0, 0x30(%rbx)
00000001000234c5	movl	$0x0, 0x38(%rbx)
00000001000234cc	addq	$0x8, %rsp
00000001000234d0	popq	%rbx
00000001000234d1	popq	%rbp
00000001000234d2	retq
00000001000234d3	leaq	0x20817(%rip), %rdi
00000001000234da	leaq	0x2598f(%rip), %rdx
00000001000234e1	movl	$0x2b, %esi
00000001000234e6	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
00000001000234eb	movl	$0x1, %edi
00000001000234f0	movl	$0x400, %esi                    ## imm = 0x400
00000001000234f5	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000234fa	nopw	(%rax,%rax)
__ZN3std10sys_common9backtrace5print17hb5816525719dec2dE:
0000000100023500	pushq	%rbp
0000000100023501	movq	%rsp, %rbp
0000000100023504	pushq	%r15
0000000100023506	pushq	%r14
0000000100023508	pushq	%r12
000000010002350a	pushq	%rbx
000000010002350b	subq	$0x50, %rsp
000000010002350f	movl	%edx, %r14d
0000000100023512	movq	%rsi, %r15
0000000100023515	movq	%rdi, %rbx
0000000100023518	movq	__ZN3std10sys_common9backtrace4lock4LOCK17h346d5f6a7734b824E(%rip), %rdi ## std::sys_common::backtrace::lock::LOCK::h346d5f6a7734b824
000000010002351f	testq	%rdi, %rdi
0000000100023522	je	0x1000235d9
0000000100023528	callq	0x10004280e                     ## symbol stub for: _pthread_mutex_lock
000000010002352d	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rax ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
0000000100023534	shlq	$0x1, %rax
0000000100023538	testq	%rax, %rax
000000010002353b	jne	0x1000235ed
0000000100023541	xorl	%r12d, %r12d
0000000100023544	movzbl	0x28c85(%rip), %eax
000000010002354b	movq	0x48(%r15), %rax
000000010002354f	movb	%r14b, -0x21(%rbp)
0000000100023553	leaq	-0x21(%rbp), %rcx
0000000100023557	movq	%rcx, -0x38(%rbp)
000000010002355b	leaq	__ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h9b8c7d4986eea143E(%rip), %rcx ## _$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$::fmt::h9b8c7d4986eea143
0000000100023562	movq	%rcx, -0x30(%rbp)
0000000100023566	leaq	0x25473(%rip), %rcx
000000010002356d	movq	%rcx, -0x68(%rbp)
0000000100023571	movq	$0x1, -0x60(%rbp)
0000000100023579	movq	$0x0, -0x48(%rbp)
0000000100023581	leaq	-0x38(%rbp), %rcx
0000000100023585	movq	%rcx, -0x58(%rbp)
0000000100023589	movq	$0x1, -0x50(%rbp)
0000000100023591	leaq	-0x68(%rbp), %rsi
0000000100023595	movq	%rbx, %rdi
0000000100023598	callq	*%rax
000000010002359a	movq	%rax, %rbx
000000010002359d	testb	%r12b, %r12b
00000001000235a0	jne	0x1000235b8
00000001000235a2	movabsq	$0x7fffffffffffffff, %rax       ## imm = 0x7FFFFFFFFFFFFFFF
00000001000235ac	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rcx ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
00000001000235b3	testq	%rax, %rcx
00000001000235b6	jne	0x10002360f
00000001000235b8	movq	__ZN3std10sys_common9backtrace4lock4LOCK17h346d5f6a7734b824E(%rip), %rdi ## std::sys_common::backtrace::lock::LOCK::h346d5f6a7734b824
00000001000235bf	testq	%rdi, %rdi
00000001000235c2	je	0x1000235fe
00000001000235c4	callq	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
00000001000235c9	movq	%rbx, %rax
00000001000235cc	addq	$0x50, %rsp
00000001000235d0	popq	%rbx
00000001000235d1	popq	%r12
00000001000235d3	popq	%r14
00000001000235d5	popq	%r15
00000001000235d7	popq	%rbp
00000001000235d8	retq
00000001000235d9	leaq	__ZN3std10sys_common9backtrace4lock4LOCK17h346d5f6a7734b824E(%rip), %rdi ## std::sys_common::backtrace::lock::LOCK::h346d5f6a7734b824
00000001000235e0	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
00000001000235e5	movq	%rax, %rdi
00000001000235e8	jmp	0x100023528
00000001000235ed	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
00000001000235f2	movl	%eax, %r12d
00000001000235f5	xorb	$0x1, %r12b
00000001000235f9	jmp	0x100023544
00000001000235fe	leaq	__ZN3std10sys_common9backtrace4lock4LOCK17h346d5f6a7734b824E(%rip), %rdi ## std::sys_common::backtrace::lock::LOCK::h346d5f6a7734b824
0000000100023605	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
000000010002360a	movq	%rax, %rdi
000000010002360d	jmp	0x1000235c4
000000010002360f	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
0000000100023614	testb	%al, %al
0000000100023616	jne	0x1000235b8
0000000100023618	movb	$0x1, 0x28bb1(%rip)
000000010002361f	jmp	0x1000235b8
0000000100023621	movq	%rax, %rbx
0000000100023624	movzbl	%r12b, %esi
0000000100023628	leaq	__ZN3std10sys_common9backtrace4lock4LOCK17h346d5f6a7734b824E(%rip), %rdi ## std::sys_common::backtrace::lock::LOCK::h346d5f6a7734b824
000000010002362f	callq	__ZN4core3ptr46drop_in_place$LT$std..io..stdio..StdinLock$GT$17h1f998272c9deb625E ## core::ptr::drop_in_place$LT$std..io..stdio..StdinLock$GT$::h1f998272c9deb625
0000000100023634	movq	%rbx, %rdi
0000000100023637	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002363c	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100023641	nopw	%cs:(%rax,%rax)
000000010002364b	nopl	(%rax,%rax)
__ZN91_$LT$std..sys_common..backtrace.._print..DisplayBacktrace$u20$as$u20$core..fmt..Display$GT$3fmt17h9b8c7d4986eea143E:
0000000100023650	pushq	%rbp
0000000100023651	movq	%rsp, %rbp
0000000100023654	pushq	%r15
0000000100023656	pushq	%r14
0000000100023658	pushq	%r13
000000010002365a	pushq	%r12
000000010002365c	pushq	%rbx
000000010002365d	subq	$0xa8, %rsp
0000000100023664	movq	%rsi, %rbx
0000000100023667	movzbl	(%rdi), %r12d
000000010002366b	movb	%r12b, -0x29(%rbp)
000000010002366f	leaq	-0x60(%rbp), %rdi
0000000100023673	callq	__ZN3std3env11current_dir17hd7f78cc2b88ab0fcE ## std::env::current_dir::hd7f78cc2b88ab0fc
0000000100023678	movq	-0x60(%rbp), %r14
000000010002367c	testq	%r14, %r14
000000010002367f	je	0x100023699
0000000100023681	movq	-0x58(%rbp), %rax
0000000100023685	movq	-0x50(%rbp), %rcx
0000000100023689	movq	%rcx, -0x88(%rbp)
0000000100023690	movq	%rax, -0x90(%rbp)
0000000100023697	jmp	0x1000236a2
0000000100023699	leaq	-0x60(%rbp), %rdi
000000010002369d	callq	__ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$std..path..PathBuf$C$std..io..error..Error$GT$$GT$17hd6d246a6125c6f66E ## core::ptr::drop_in_place$LT$core..result..Result$LT$std..path..PathBuf$C$std..io..error..Error$GT$$GT$::hd6d246a6125c6f66
00000001000236a2	movb	%r12b, -0x68(%rbp)
00000001000236a6	movq	%r14, -0x80(%rbp)
00000001000236aa	movq	-0x90(%rbp), %rax
00000001000236b1	movq	-0x88(%rbp), %rcx
00000001000236b8	movq	%rax, -0x78(%rbp)
00000001000236bc	movq	%rcx, -0x70(%rbp)
00000001000236c0	leaq	0x257f1(%rip), %rax
00000001000236c7	movq	%rax, -0x60(%rbp)
00000001000236cb	movq	$0x1, -0x58(%rbp)
00000001000236d3	movq	$0x0, -0x40(%rbp)
00000001000236db	leaq	0x2060e(%rip), %r13
00000001000236e2	movq	%r13, -0x50(%rbp)
00000001000236e6	movq	$0x0, -0x48(%rbp)
00000001000236ee	leaq	-0x60(%rbp), %r15
00000001000236f2	movq	%rbx, %rdi
00000001000236f5	movq	%r15, %rsi
00000001000236f8	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
00000001000236fd	testb	%al, %al
00000001000236ff	jne	0x1000237ad
0000000100023705	movq	%rbx, -0xd0(%rbp)
000000010002370c	movq	$0x0, -0xb8(%rbp)
0000000100023717	movb	%r12b, -0xb0(%rbp)
000000010002371e	leaq	-0x80(%rbp), %rax
0000000100023722	movq	%rax, -0xc8(%rbp)
0000000100023729	leaq	0x25798(%rip), %rax
0000000100023730	movq	%rax, -0xc0(%rbp)
0000000100023737	movq	$0x0, -0x98(%rbp)
0000000100023742	movb	$0x0, -0x2a(%rbp)
0000000100023746	testb	%r12b, %r12b
0000000100023749	setne	-0x2b(%rbp)
000000010002374d	leaq	-0x29(%rbp), %rax
0000000100023751	movq	%rax, -0x60(%rbp)
0000000100023755	leaq	-0x98(%rbp), %rax
000000010002375c	movq	%rax, -0x58(%rbp)
0000000100023760	leaq	-0x2b(%rbp), %rax
0000000100023764	movq	%rax, -0x50(%rbp)
0000000100023768	leaq	-0x2a(%rbp), %rax
000000010002376c	movq	%rax, -0x48(%rbp)
0000000100023770	leaq	-0xd0(%rbp), %rax
0000000100023777	movq	%rax, -0x40(%rbp)
000000010002377b	movq	%r15, -0xa8(%rbp)
0000000100023782	leaq	0x25a97(%rip), %rax
0000000100023789	movq	%rax, -0xa0(%rbp)
0000000100023790	leaq	__ZN3std12backtrace_rs9backtrace9libunwind5trace8trace_fn17ha593fba04f3f1cb9E(%rip), %rdi ## std::backtrace_rs::backtrace::libunwind::trace::trace_fn::ha593fba04f3f1cb9
0000000100023797	leaq	-0xa8(%rbp), %rsi
000000010002379e	callq	0x100042700                     ## symbol stub for: __Unwind_Backtrace
00000001000237a3	cmpb	$0x0, -0x2a(%rbp)
00000001000237a7	je	0x1000237dc
00000001000237a9	movq	-0x80(%rbp), %r14
00000001000237ad	testq	%r14, %r14
00000001000237b0	je	0x1000237c8
00000001000237b2	movq	-0x78(%rbp), %rsi
00000001000237b6	testq	%rsi, %rsi
00000001000237b9	je	0x1000237c8
00000001000237bb	movl	$0x1, %edx
00000001000237c0	movq	%r14, %rdi
00000001000237c3	callq	___rust_dealloc
00000001000237c8	movb	$0x1, %al
00000001000237ca	addq	$0xa8, %rsp
00000001000237d1	popq	%rbx
00000001000237d2	popq	%r12
00000001000237d4	popq	%r13
00000001000237d6	popq	%r14
00000001000237d8	popq	%r15
00000001000237da	popq	%rbp
00000001000237db	retq
00000001000237dc	cmpb	$0x0, -0x29(%rbp)
00000001000237e0	jne	0x100023819
00000001000237e2	leaq	0x25707(%rip), %rax
00000001000237e9	movq	%rax, -0x60(%rbp)
00000001000237ed	movq	$0x1, -0x58(%rbp)
00000001000237f5	movq	$0x0, -0x40(%rbp)
00000001000237fd	movq	%r13, -0x50(%rbp)
0000000100023801	movq	$0x0, -0x48(%rbp)
0000000100023809	leaq	-0x60(%rbp), %rsi
000000010002380d	movq	%rbx, %rdi
0000000100023810	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
0000000100023815	testb	%al, %al
0000000100023817	jne	0x1000237a9
0000000100023819	movq	-0x80(%rbp), %rdi
000000010002381d	testq	%rdi, %rdi
0000000100023820	je	0x100023835
0000000100023822	movq	-0x78(%rbp), %rsi
0000000100023826	testq	%rsi, %rsi
0000000100023829	je	0x100023835
000000010002382b	movl	$0x1, %edx
0000000100023830	callq	___rust_dealloc
0000000100023835	xorl	%eax, %eax
0000000100023837	jmp	0x1000237ca
0000000100023839	movq	%rax, %rbx
000000010002383c	leaq	-0x80(%rbp), %rdi
0000000100023840	callq	__ZN4core3ptr88drop_in_place$LT$std..sys_common..backtrace.._print_fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$17hf85a53bdd826fa87E ## core::ptr::drop_in_place$LT$std..sys_common..backtrace.._print_fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$::hf85a53bdd826fa87
0000000100023845	movq	%rbx, %rdi
0000000100023848	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002384d	nopl	(%rax)
__ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17h331ac29d00ea40d0E:
0000000100023850	pushq	%rbp
0000000100023851	movq	%rsp, %rbp
0000000100023854	movq	(%rdi), %rcx
0000000100023857	testq	%rcx, %rcx
000000010002385a	cmovneq	%rdi, %rcx
000000010002385e	movl	0x18(%rdi), %eax
0000000100023861	movq	%rsi, %rdi
0000000100023864	movq	%rdx, %rsi
0000000100023867	movl	%eax, %edx
0000000100023869	popq	%rbp
000000010002386a	jmp	__ZN3std10sys_common9backtrace15output_filename17hca0ea309d85a075fE ## std::sys_common::backtrace::output_filename::hca0ea309d85a075f
000000010002386f	nop
__ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$17hc92fc457acaa3ee5E:
0000000100023870	pushq	%rbp
0000000100023871	movq	%rsp, %rbp
0000000100023874	pushq	%r15
0000000100023876	pushq	%r14
0000000100023878	pushq	%r13
000000010002387a	pushq	%r12
000000010002387c	pushq	%rbx
000000010002387d	subq	$0x98, %rsp
0000000100023884	movq	%rsi, %r14
0000000100023887	movq	%rdi, %rbx
000000010002388a	movq	(%rdi), %rax
000000010002388d	cmpb	$0x0, (%rax)
0000000100023890	jne	0x1000238a3
0000000100023892	movq	0x8(%rbx), %rcx
0000000100023896	cmpq	$0x64, (%rcx)
000000010002389a	jbe	0x1000238a3
000000010002389c	xorl	%eax, %eax
000000010002389e	jmp	0x100023969
00000001000238a3	movb	$0x0, -0x29(%rbp)
00000001000238a7	movq	0x10(%rbx), %r13
00000001000238ab	movq	0x18(%rbx), %r15
00000001000238af	movq	0x20(%rbx), %r12
00000001000238b3	leaq	-0x29(%rbp), %rcx
00000001000238b7	movq	%rcx, -0x90(%rbp)
00000001000238be	movq	%rax, -0x88(%rbp)
00000001000238c5	movq	%r13, -0x80(%rbp)
00000001000238c9	movq	%r15, -0x78(%rbp)
00000001000238cd	movq	%r12, -0x70(%rbp)
00000001000238d1	movq	%r14, -0x68(%rbp)
00000001000238d5	leaq	0x2596c(%rip), %rdx
00000001000238dc	leaq	-0x90(%rbp), %rsi
00000001000238e3	movq	%r14, %rdi
00000001000238e6	callq	__ZN3std12backtrace_rs9symbolize5gimli7resolve17h1bbe3a809d060985E ## std::backtrace_rs::symbolize::gimli::resolve::h1bbe3a809d060985
00000001000238eb	cmpb	$0x0, -0x29(%rbp)
00000001000238ef	jne	0x10002395b
00000001000238f1	cmpb	$0x0, (%r13)
00000001000238f6	je	0x10002395b
00000001000238f8	movq	%r12, -0x40(%rbp)
00000001000238fc	movq	$0x0, -0x38(%rbp)
0000000100023904	movq	0x8(%r14), %rsi
0000000100023908	cmpq	$0x0, (%r14)
000000010002390c	jne	0x100023919
000000010002390e	movq	%rsi, %rdi
0000000100023911	callq	0x100042712                     ## symbol stub for: __Unwind_GetIP
0000000100023916	movq	%rax, %rsi
0000000100023919	movq	$0x3, -0x90(%rbp)
0000000100023924	movq	$0x2, -0xa8(%rbp)
000000010002392f	movl	$0x0, (%rsp)
0000000100023936	leaq	-0x40(%rbp), %rdi
000000010002393a	leaq	-0x90(%rbp), %rdx
0000000100023941	leaq	-0xa8(%rbp), %rcx
0000000100023948	xorl	%r8d, %r8d
000000010002394b	callq	__ZN3std12backtrace_rs5print17BacktraceFrameFmt21print_raw_with_column17h3bbd800cdb83f1dcE ## std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column::h3bbd800cdb83f1dc
0000000100023950	movb	%al, (%r15)
0000000100023953	movq	-0x40(%rbp), %rax
0000000100023957	incq	0x18(%rax)
000000010002395b	movq	0x8(%rbx), %rax
000000010002395f	incq	(%rax)
0000000100023962	cmpb	$0x0, (%r15)
0000000100023966	sete	%al
0000000100023969	addq	$0x98, %rsp
0000000100023970	popq	%rbx
0000000100023971	popq	%r12
0000000100023973	popq	%r13
0000000100023975	popq	%r14
0000000100023977	popq	%r15
0000000100023979	popq	%rbp
000000010002397a	retq
000000010002397b	movq	%rax, %rbx
000000010002397e	movq	-0x40(%rbp), %rdi
0000000100023982	callq	__ZN4core3ptr64drop_in_place$LT$std..backtrace_rs..print..BacktraceFrameFmt$GT$17h276211c160656cbaE ## core::ptr::drop_in_place$LT$std..backtrace_rs..print..BacktraceFrameFmt$GT$::h276211c160656cba
0000000100023987	movq	%rbx, %rdi
000000010002398a	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002398f	nop
__ZN3std10sys_common9backtrace10_print_fmt28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2eb0bb03554a9286E:
0000000100023990	pushq	%rbp
0000000100023991	movq	%rsp, %rbp
0000000100023994	pushq	%r15
0000000100023996	pushq	%r14
0000000100023998	pushq	%r13
000000010002399a	pushq	%r12
000000010002399c	pushq	%rbx
000000010002399d	subq	$0xc8, %rsp
00000001000239a4	movq	%rsi, %r14
00000001000239a7	movq	%rdi, %rbx
00000001000239aa	movq	(%rdi), %rax
00000001000239ad	movb	$0x1, (%rax)
00000001000239b0	movq	0x8(%rdi), %rax
00000001000239b4	cmpb	$0x0, (%rax)
00000001000239b7	jne	0x1000239d5
00000001000239b9	leaq	-0x90(%rbp), %rdi
00000001000239c0	movq	%r14, %rsi
00000001000239c3	callq	__ZN3std12backtrace_rs9symbolize6Symbol4name17hae4ad776c61564a5E ## std::backtrace_rs::symbolize::Symbol::name::hae4ad776c61564a5
00000001000239c8	cmpl	$0x3, -0x90(%rbp)
00000001000239cf	jne	0x100023ab1
00000001000239d5	movq	0x10(%rbx), %rax
00000001000239d9	cmpb	$0x0, (%rax)
00000001000239dc	je	0x100023a9f
00000001000239e2	movq	0x20(%rbx), %rax
00000001000239e6	movq	%rax, -0x40(%rbp)
00000001000239ea	movq	$0x0, -0x38(%rbp)
00000001000239f2	movq	0x28(%rbx), %rax
00000001000239f6	movq	0x8(%rax), %r15
00000001000239fa	cmpq	$0x0, (%rax)
00000001000239fe	jne	0x100023a0b
0000000100023a00	movq	%r15, %rdi
0000000100023a03	callq	0x100042712                     ## symbol stub for: __Unwind_GetIP
0000000100023a08	movq	%rax, %r15
0000000100023a0b	leaq	-0xe0(%rbp), %rdi
0000000100023a12	movq	%r14, %rsi
0000000100023a15	callq	__ZN3std12backtrace_rs9symbolize6Symbol4name17hae4ad776c61564a5E ## std::backtrace_rs::symbolize::Symbol::name::hae4ad776c61564a5
0000000100023a1a	movl	(%r14), %r8d
0000000100023a1d	cmpl	$0x2, %r8d
0000000100023a21	je	0x100023a4e
0000000100023a23	cmpl	$0x3, %r8d
0000000100023a27	je	0x100023a4e
0000000100023a29	movq	0x10(%r14), %rax
0000000100023a2d	testq	%rax, %rax
0000000100023a30	je	0x100023a4e
0000000100023a32	movq	0x18(%r14), %rcx
0000000100023a36	movq	$0x0, -0x90(%rbp)
0000000100023a41	movq	%rax, -0x88(%rbp)
0000000100023a48	movq	%rcx, -0x80(%rbp)
0000000100023a4c	jmp	0x100023a59
0000000100023a4e	movq	$0x2, -0x90(%rbp)
0000000100023a59	xorl	%eax, %eax
0000000100023a5b	cmpl	$0x2, %r8d
0000000100023a5f	cmovael	%eax, %r8d
0000000100023a63	movl	0x4(%r14), %r9d
0000000100023a67	movl	0xc(%r14), %ecx
0000000100023a6b	cmovbl	0x8(%r14), %eax
0000000100023a70	movl	%ecx, 0x8(%rsp)
0000000100023a74	movl	%eax, (%rsp)
0000000100023a77	leaq	-0x40(%rbp), %rdi
0000000100023a7b	leaq	-0xe0(%rbp), %rdx
0000000100023a82	leaq	-0x90(%rbp), %rcx
0000000100023a89	movq	%r15, %rsi
0000000100023a8c	callq	__ZN3std12backtrace_rs5print17BacktraceFrameFmt21print_raw_with_column17h3bbd800cdb83f1dcE ## std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column::h3bbd800cdb83f1dc
0000000100023a91	movq	0x18(%rbx), %rcx
0000000100023a95	movb	%al, (%rcx)
0000000100023a97	movq	-0x40(%rbp), %rax
0000000100023a9b	incq	0x18(%rax)
0000000100023a9f	addq	$0xc8, %rsp
0000000100023aa6	popq	%rbx
0000000100023aa7	popq	%r12
0000000100023aa9	popq	%r13
0000000100023aab	popq	%r14
0000000100023aad	popq	%r15
0000000100023aaf	popq	%rbp
0000000100023ab0	retq
0000000100023ab1	leaq	-0xe0(%rbp), %rdi
0000000100023ab8	leaq	-0x90(%rbp), %rsi
0000000100023abf	movl	$0xa, %ecx
0000000100023ac4	rep		movsq	(%rsi), %es:(%rdi)
0000000100023ac7	cmpl	$0x2, -0xe0(%rbp)
0000000100023ace	je	0x100023af4
0000000100023ad0	leaq	-0xe0(%rbp), %rdi
0000000100023ad7	callq	__ZN14rustc_demangle8Demangle6as_str17h915ddc69429fd011E ## rustc_demangle::Demangle::as_str::h915ddc69429fd011
0000000100023adc	testq	%rax, %rax
0000000100023adf	je	0x100023af4
0000000100023ae1	movq	%rax, %r15
0000000100023ae4	movq	%rdx, %r12
0000000100023ae7	movq	0x10(%rbx), %r13
0000000100023aeb	cmpb	$0x0, (%r13)
0000000100023af0	jne	0x100023b32
0000000100023af2	jmp	0x100023b57
0000000100023af4	movq	-0xa0(%rbp), %rsi
0000000100023afb	movq	-0x98(%rbp), %rdx
0000000100023b02	leaq	-0x40(%rbp), %rdi
0000000100023b06	callq	__ZN4core3str8converts9from_utf817h1af6699b7ded4823E ## core::str::converts::from_utf8::h1af6699b7ded4823
0000000100023b0b	cmpq	$0x0, -0x40(%rbp)
0000000100023b10	jne	0x1000239d5
0000000100023b16	movq	-0x38(%rbp), %r15
0000000100023b1a	testq	%r15, %r15
0000000100023b1d	je	0x1000239d5
0000000100023b23	movq	-0x30(%rbp), %r12
0000000100023b27	movq	0x10(%rbx), %r13
0000000100023b2b	cmpb	$0x0, (%r13)
0000000100023b30	je	0x100023b57
0000000100023b32	leaq	0x2111c(%rip), %rdi
0000000100023b39	movl	$0x1c, %esi
0000000100023b3e	movq	%r15, %rdx
0000000100023b41	movq	%r12, %rcx
0000000100023b44	callq	__ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h58ff23c586846387E ## _$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$::is_contained_in::h58ff23c586846387
0000000100023b49	testb	%al, %al
0000000100023b4b	je	0x100023b57
0000000100023b4d	movb	$0x0, (%r13)
0000000100023b52	jmp	0x100023a9f
0000000100023b57	leaq	0x21113(%rip), %rdi
0000000100023b5e	movl	$0x1a, %esi
0000000100023b63	movq	%r15, %rdx
0000000100023b66	movq	%r12, %rcx
0000000100023b69	callq	__ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h58ff23c586846387E ## _$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$::is_contained_in::h58ff23c586846387
0000000100023b6e	testb	%al, %al
0000000100023b70	je	0x1000239d5
0000000100023b76	movb	$0x1, (%r13)
0000000100023b7b	jmp	0x100023a9f
0000000100023b80	movq	%rax, %rbx
0000000100023b83	movq	-0x40(%rbp), %rdi
0000000100023b87	callq	__ZN4core3ptr64drop_in_place$LT$std..backtrace_rs..print..BacktraceFrameFmt$GT$17h276211c160656cbaE ## core::ptr::drop_in_place$LT$std..backtrace_rs..print..BacktraceFrameFmt$GT$::h276211c160656cba
0000000100023b8c	movq	%rbx, %rdi
0000000100023b8f	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100023b94	nopw	%cs:(%rax,%rax)
0000000100023b9e	nop
__ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hd299ff4177db45a7E:
0000000100023ba0	pushq	%rbp
0000000100023ba1	movq	%rsp, %rbp
0000000100023ba4	callq	__ZN3std9panicking19begin_panic_handler28_$u7b$$u7b$closure$u7d$$u7d$17h29c0dd87214757f4E ## std::panicking::begin_panic_handler::_$u7b$$u7b$closure$u7d$$u7d$::h29c0dd87214757f4
0000000100023ba9	nopl	(%rax)
__ZN3std10sys_common9backtrace15output_filename17hca0ea309d85a075fE:
0000000100023bb0	pushq	%rbp
0000000100023bb1	movq	%rsp, %rbp
0000000100023bb4	pushq	%r15
0000000100023bb6	pushq	%r14
0000000100023bb8	pushq	%rbx
0000000100023bb9	subq	$0x68, %rsp
0000000100023bbd	movq	%rdi, %r14
0000000100023bc0	cmpq	$0x0, (%rsi)
0000000100023bc4	je	0x100023bdd
0000000100023bc6	movl	$0x9, %r15d
0000000100023bcc	leaq	0x210b8(%rip), %rbx
0000000100023bd3	testb	%dl, %dl
0000000100023bd5	jne	0x100023cb0
0000000100023bdb	jmp	0x100023bf6
0000000100023bdd	movq	0x8(%rsi), %rbx
0000000100023be1	movq	0x10(%rsi), %r15
0000000100023be5	testb	%dl, %dl
0000000100023be7	jne	0x100023cb0
0000000100023bed	testq	%r15, %r15
0000000100023bf0	je	0x100023cad
0000000100023bf6	testq	%rcx, %rcx
0000000100023bf9	je	0x100023cb0
0000000100023bff	cmpb	$0x2f, (%rbx)
0000000100023c02	jne	0x100023cb0
0000000100023c08	movq	(%rcx), %rdx
0000000100023c0b	movq	0x10(%rcx), %rcx
0000000100023c0f	movq	%rbx, %rdi
0000000100023c12	movq	%r15, %rsi
0000000100023c15	callq	__ZN3std4path4Path13_strip_prefix17hd0a3fe9723cbd29fE ## std::path::Path::_strip_prefix::hd0a3fe9723cbd29f
0000000100023c1a	testq	%rax, %rax
0000000100023c1d	je	0x100023cb0
0000000100023c23	leaq	-0x48(%rbp), %rdi
0000000100023c27	movq	%rax, %rsi
0000000100023c2a	callq	__ZN4core3str8converts9from_utf817h1af6699b7ded4823E ## core::str::converts::from_utf8::h1af6699b7ded4823
0000000100023c2f	cmpq	$0x0, -0x48(%rbp)
0000000100023c34	jne	0x100023cb0
0000000100023c36	movq	-0x40(%rbp), %rax
0000000100023c3a	testq	%rax, %rax
0000000100023c3d	je	0x100023cb0
0000000100023c3f	movq	-0x38(%rbp), %rcx
0000000100023c43	movq	%rax, -0x58(%rbp)
0000000100023c47	movq	%rcx, -0x50(%rbp)
0000000100023c4b	leaq	0x21d22(%rip), %rax
0000000100023c52	movq	%rax, -0x78(%rbp)
0000000100023c56	leaq	__ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h58c8d2487b4b288dE(%rip), %rax ## _$LT$char$u20$as$u20$core..fmt..Display$GT$::fmt::h58c8d2487b4b288d
0000000100023c5d	movq	%rax, -0x70(%rbp)
0000000100023c61	leaq	-0x58(%rbp), %rax
0000000100023c65	movq	%rax, -0x68(%rbp)
0000000100023c69	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
0000000100023c70	movq	%rax, -0x60(%rbp)
0000000100023c74	leaq	0x25285(%rip), %rax
0000000100023c7b	movq	%rax, -0x48(%rbp)
0000000100023c7f	movq	$0x2, -0x40(%rbp)
0000000100023c87	movq	$0x0, -0x28(%rbp)
0000000100023c8f	leaq	-0x78(%rbp), %rax
0000000100023c93	movq	%rax, -0x38(%rbp)
0000000100023c97	movq	$0x2, -0x30(%rbp)
0000000100023c9f	leaq	-0x48(%rbp), %rsi
0000000100023ca3	movq	%r14, %rdi
0000000100023ca6	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
0000000100023cab	jmp	0x100023cbe
0000000100023cad	xorl	%r15d, %r15d
0000000100023cb0	movq	%rbx, %rdi
0000000100023cb3	movq	%r15, %rsi
0000000100023cb6	movq	%r14, %rdx
0000000100023cb9	callq	__ZN68_$LT$std..sys..unix..os_str..Slice$u20$as$u20$core..fmt..Display$GT$3fmt17h369636da9f1ea90dE ## _$LT$std..sys..unix..os_str..Slice$u20$as$u20$core..fmt..Display$GT$::fmt::h369636da9f1ea90d
0000000100023cbe	addq	$0x68, %rsp
0000000100023cc2	popq	%rbx
0000000100023cc3	popq	%r14
0000000100023cc5	popq	%r15
0000000100023cc7	popq	%rbp
0000000100023cc8	retq
0000000100023cc9	movq	%rax, %r14
0000000100023ccc	xorl	%edi, %edi
0000000100023cce	movq	%rbx, %rsi
0000000100023cd1	callq	__ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h2ceb93c56e0c66b8E ## core::ptr::drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$::h2ceb93c56e0c66b8
0000000100023cd6	movq	%r14, %rdi
0000000100023cd9	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100023cde	nop
__ZN3std10sys_common11thread_info14current_thread17h4102400ece1054ccE:
0000000100023ce0	pushq	%rbp
0000000100023ce1	movq	%rsp, %rbp
0000000100023ce4	pushq	%rbx
0000000100023ce5	pushq	%rax
0000000100023ce6	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100023ced	callq	*(%rdi)
0000000100023cef	movzbl	(%rax), %eax
0000000100023cf2	cmpl	$0x1, %eax
0000000100023cf5	je	0x100023d8f
0000000100023cfb	testl	%eax, %eax
0000000100023cfd	jne	0x100023dd5
0000000100023d03	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100023d0a	callq	*(%rdi)
0000000100023d0c	cmpb	$0x1, (%rax)
0000000100023d0f	je	0x100023d2b
0000000100023d11	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::run_dtors::h1b9508fcca531689
0000000100023d18	xorl	%esi, %esi
0000000100023d1a	callq	0x10004276c                     ## symbol stub for: __tlv_atexit
0000000100023d1f	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100023d26	callq	*(%rdi)
0000000100023d28	movb	$0x1, (%rax)
0000000100023d2b	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100023d32	callq	*(%rdi)
0000000100023d34	movq	0x10(%rax), %rcx
0000000100023d38	cmpq	0x8(%rax), %rcx
0000000100023d3c	jne	0x100023d53
0000000100023d3e	movq	%rcx, %rdi
0000000100023d41	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h7504180b2f81aa9c
0000000100023d46	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100023d4d	callq	*(%rdi)
0000000100023d4f	movq	0x10(%rax), %rcx
0000000100023d53	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100023d5a	callq	*(%rdi)
0000000100023d5c	movq	%rax, %rdx
0000000100023d5f	movq	(%rax), %rsi
0000000100023d62	shlq	$0x4, %rcx
0000000100023d66	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023d6d	callq	*(%rdi)
0000000100023d6f	movq	%rax, (%rsi,%rcx)
0000000100023d73	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit7destroy17h7f1d3092d394857dE(%rip), %rax ## std::sys_common::thread_info::THREAD_INFO::__getit::destroy::h7f1d3092d394857d
0000000100023d7a	movq	%rax, 0x8(%rsi,%rcx)
0000000100023d7f	incq	0x10(%rdx)
0000000100023d83	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100023d8a	callq	*(%rdi)
0000000100023d8c	movb	$0x1, (%rax)
0000000100023d8f	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023d96	callq	*(%rdi)
0000000100023d98	cmpq	$0x0, (%rax)
0000000100023d9c	jne	0x100023e02
0000000100023d9e	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023da5	callq	*(%rdi)
0000000100023da7	movq	$-0x1, (%rax)
0000000100023dae	cmpl	$0x2, 0x8(%rax)
0000000100023db2	jne	0x100023dd9
0000000100023db4	xorl	%edi, %edi
0000000100023db6	callq	__ZN3std6thread6Thread3new17h0a35214ffb5d302cE ## std::thread::Thread::new::h0a35214ffb5d302c
0000000100023dbb	movq	%rax, %rcx
0000000100023dbe	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023dc5	callq	*(%rdi)
0000000100023dc7	movq	$0x0, 0x8(%rax)
0000000100023dcf	movq	%rcx, 0x20(%rax)
0000000100023dd3	jmp	0x100023de6
0000000100023dd5	xorl	%ecx, %ecx
0000000100023dd7	jmp	0x100023df8
0000000100023dd9	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023de0	callq	*(%rdi)
0000000100023de2	movq	0x20(%rax), %rcx
0000000100023de6	lock
0000000100023de7	incq	(%rcx)
0000000100023dea	jle	0x100023e25
0000000100023dec	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023df3	callq	*(%rdi)
0000000100023df5	incq	(%rax)
0000000100023df8	movq	%rcx, %rax
0000000100023dfb	addq	$0x8, %rsp
0000000100023dff	popq	%rbx
0000000100023e00	popq	%rbp
0000000100023e01	retq
0000000100023e02	leaq	0x1fea7(%rip), %rdi
0000000100023e09	leaq	0x24818(%rip), %rcx
0000000100023e10	leaq	0x25109(%rip), %r8
0000000100023e17	leaq	-0x10(%rbp), %rdx
0000000100023e1b	movl	$0x10, %esi
0000000100023e20	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100023e25	ud2
0000000100023e27	movq	%rax, %rbx
0000000100023e2a	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023e31	callq	*(%rdi)
0000000100023e33	movq	%rax, %rdi
0000000100023e36	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
0000000100023e3b	movq	%rbx, %rdi
0000000100023e3e	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100023e43	nopw	%cs:(%rax,%rax)
0000000100023e4d	nopl	(%rax)
__ZN3std10sys_common11thread_info3set17h43b8bf2b61c84fd7E:
0000000100023e50	pushq	%rbp
0000000100023e51	movq	%rsp, %rbp
0000000100023e54	pushq	%r14
0000000100023e56	pushq	%rbx
0000000100023e57	subq	$0x50, %rsp
0000000100023e5b	movq	%rsi, %rbx
0000000100023e5e	movq	%rdi, %r14
0000000100023e61	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100023e68	callq	*(%rdi)
0000000100023e6a	movzbl	(%rax), %eax
0000000100023e6d	cmpl	$0x1, %eax
0000000100023e70	je	0x100023f0a
0000000100023e76	testl	%eax, %eax
0000000100023e78	jne	0x100023fe4
0000000100023e7e	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100023e85	callq	*(%rdi)
0000000100023e87	cmpb	$0x1, (%rax)
0000000100023e8a	je	0x100023ea6
0000000100023e8c	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::run_dtors::h1b9508fcca531689
0000000100023e93	xorl	%esi, %esi
0000000100023e95	callq	0x10004276c                     ## symbol stub for: __tlv_atexit
0000000100023e9a	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100023ea1	callq	*(%rdi)
0000000100023ea3	movb	$0x1, (%rax)
0000000100023ea6	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100023ead	callq	*(%rdi)
0000000100023eaf	movq	0x10(%rax), %rcx
0000000100023eb3	cmpq	0x8(%rax), %rcx
0000000100023eb7	jne	0x100023ece
0000000100023eb9	movq	%rcx, %rdi
0000000100023ebc	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h7504180b2f81aa9c
0000000100023ec1	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100023ec8	callq	*(%rdi)
0000000100023eca	movq	0x10(%rax), %rcx
0000000100023ece	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100023ed5	callq	*(%rdi)
0000000100023ed7	movq	%rax, %rdx
0000000100023eda	movq	(%rax), %rsi
0000000100023edd	shlq	$0x4, %rcx
0000000100023ee1	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023ee8	callq	*(%rdi)
0000000100023eea	movq	%rax, (%rsi,%rcx)
0000000100023eee	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit7destroy17h7f1d3092d394857dE(%rip), %rax ## std::sys_common::thread_info::THREAD_INFO::__getit::destroy::h7f1d3092d394857d
0000000100023ef5	movq	%rax, 0x8(%rsi,%rcx)
0000000100023efa	incq	0x10(%rdx)
0000000100023efe	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100023f05	callq	*(%rdi)
0000000100023f07	movb	$0x1, (%rax)
0000000100023f0a	movq	0x10(%r14), %rax
0000000100023f0e	movq	%rax, -0x50(%rbp)
0000000100023f12	movq	(%r14), %rax
0000000100023f15	movq	0x8(%r14), %rcx
0000000100023f19	movq	%rcx, -0x58(%rbp)
0000000100023f1d	movq	%rax, -0x60(%rbp)
0000000100023f21	movq	%rbx, -0x48(%rbp)
0000000100023f25	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023f2c	callq	*(%rdi)
0000000100023f2e	cmpq	$0x0, (%rax)
0000000100023f32	jne	0x100023f7e
0000000100023f34	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023f3b	callq	*(%rdi)
0000000100023f3d	movq	$-0x1, (%rax)
0000000100023f44	cmpl	$0x2, 0x8(%rax)
0000000100023f48	jne	0x100023fa3
0000000100023f4a	movq	0x10(%r14), %rcx
0000000100023f4e	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100023f55	callq	*(%rdi)
0000000100023f57	movq	%rcx, 0x18(%rax)
0000000100023f5b	movq	(%r14), %rcx
0000000100023f5e	movq	0x8(%r14), %rdx
0000000100023f62	movq	%rdx, 0x10(%rax)
0000000100023f66	movq	%rcx, 0x8(%rax)
0000000100023f6a	movq	%rbx, 0x20(%rax)
0000000100023f6e	movq	$0x0, (%rax)
0000000100023f75	addq	$0x50, %rsp
0000000100023f79	popq	%rbx
0000000100023f7a	popq	%r14
0000000100023f7c	popq	%rbp
0000000100023f7d	retq
0000000100023f7e	leaq	0x1fd2b(%rip), %rdi
0000000100023f85	leaq	0x2469c(%rip), %rcx
0000000100023f8c	leaq	0x24fa5(%rip), %r8
0000000100023f93	leaq	-0x40(%rbp), %rdx
0000000100023f97	movl	$0x10, %esi
0000000100023f9c	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100023fa1	ud2
0000000100023fa3	leaq	0x24fa6(%rip), %rax
0000000100023faa	movq	%rax, -0x40(%rbp)
0000000100023fae	movq	$0x1, -0x38(%rbp)
0000000100023fb6	movq	$0x0, -0x20(%rbp)
0000000100023fbe	leaq	-0x40(%rbp), %rdi
0000000100023fc2	movq	%rdi, -0x30(%rbp)
0000000100023fc6	movq	$0x0, -0x28(%rbp)
0000000100023fce	leaq	-0x40(%rbp), %rsi
0000000100023fd2	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100023fd7	movq	%rax, %rdi
0000000100023fda	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
0000000100023fdf	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
0000000100023fe4	lock
0000000100023fe5	decq	(%rbx)
0000000100023fe8	jne	0x100023ff2
0000000100023fea	movq	%rbx, %rdi
0000000100023fed	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100023ff2	leaq	0x209ea(%rip), %rdi
0000000100023ff9	leaq	0x24608(%rip), %rcx
0000000100024000	leaq	0x24ae1(%rip), %r8
0000000100024007	leaq	-0x40(%rbp), %rdx
000000010002400b	movl	$0x46, %esi
0000000100024010	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100024015	movq	%rax, %r14
0000000100024018	movq	%rbx, %rdi
000000010002401b	callq	__ZN4core3ptr81drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mpmc..context..Inner$GT$$GT$17h6099fd9cab272d1cE ## core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mpmc..context..Inner$GT$$GT$::h6099fd9cab272d1c
0000000100024020	movq	%r14, %rdi
0000000100024023	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100024028	movq	%rax, %r14
000000010002402b	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100024032	callq	*(%rdi)
0000000100024034	movq	%rax, %rdi
0000000100024037	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
000000010002403c	jmp	0x100024041
000000010002403e	movq	%rax, %r14
0000000100024041	leaq	-0x48(%rbp), %rdi
0000000100024045	callq	__ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hee704b1b50093296E ## core::ptr::drop_in_place$LT$std..thread..Thread$GT$::hee704b1b50093296
000000010002404a	movq	%r14, %rdi
000000010002404d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100024052	nopw	%cs:(%rax,%rax)
000000010002405c	nopl	(%rax)
__ZN3std5alloc24default_alloc_error_hook17hc702668403a137d5E:
0000000100024060	pushq	%rbp
0000000100024061	movq	%rsp, %rbp
0000000100024064	pushq	%r15
0000000100024066	pushq	%r14
0000000100024068	pushq	%r12
000000010002406a	pushq	%rbx
000000010002406b	subq	$0x50, %rsp
000000010002406f	leaq	___rust_alloc_error_handler_should_panic(%rip), %rax
0000000100024076	cmpb	$0x0, (%rax)
0000000100024079	jne	0x10002412f
000000010002407f	movq	%rsi, -0x30(%rbp)
0000000100024083	leaq	-0x30(%rbp), %rax
0000000100024087	movq	%rax, -0x40(%rbp)
000000010002408b	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
0000000100024092	movq	%rax, -0x38(%rbp)
0000000100024096	leaq	0x24ec3(%rip), %rax
000000010002409d	movq	%rax, -0x70(%rbp)
00000001000240a1	movq	$0x2, -0x68(%rbp)
00000001000240a9	movq	$0x0, -0x50(%rbp)
00000001000240b1	leaq	-0x40(%rbp), %rax
00000001000240b5	movq	%rax, -0x60(%rbp)
00000001000240b9	movq	$0x1, -0x58(%rbp)
00000001000240c1	leaq	-0x28(%rbp), %rdi
00000001000240c5	leaq	-0x70(%rbp), %rsi
00000001000240c9	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
00000001000240ce	testq	%rax, %rax
00000001000240d1	je	0x100024122
00000001000240d3	movl	%eax, %ecx
00000001000240d5	andl	$0x3, %ecx
00000001000240d8	leaq	-0x2(%rcx), %rdx
00000001000240dc	cmpq	$0x2, %rdx
00000001000240e0	jb	0x100024122
00000001000240e2	testq	%rcx, %rcx
00000001000240e5	je	0x100024122
00000001000240e7	movq	%rax, %rbx
00000001000240ea	decq	%rbx
00000001000240ed	movq	-0x1(%rax), %r14
00000001000240f1	movq	0x7(%rax), %r15
00000001000240f5	movq	%r14, %rdi
00000001000240f8	callq	*(%r15)
00000001000240fb	movq	0x8(%r15), %rsi
00000001000240ff	testq	%rsi, %rsi
0000000100024102	je	0x100024110
0000000100024104	movq	0x10(%r15), %rdx
0000000100024108	movq	%r14, %rdi
000000010002410b	callq	___rust_dealloc
0000000100024110	movl	$0x18, %esi
0000000100024115	movl	$0x8, %edx
000000010002411a	movq	%rbx, %rdi
000000010002411d	callq	___rust_dealloc
0000000100024122	addq	$0x50, %rsp
0000000100024126	popq	%rbx
0000000100024127	popq	%r12
0000000100024129	popq	%r14
000000010002412b	popq	%r15
000000010002412d	popq	%rbp
000000010002412e	retq
000000010002412f	movq	%rsi, -0x30(%rbp)
0000000100024133	leaq	-0x30(%rbp), %rax
0000000100024137	movq	%rax, -0x40(%rbp)
000000010002413b	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
0000000100024142	movq	%rax, -0x38(%rbp)
0000000100024146	leaq	0x24e33(%rip), %rax
000000010002414d	movq	%rax, -0x70(%rbp)
0000000100024151	movq	$0x2, -0x68(%rbp)
0000000100024159	movq	$0x0, -0x50(%rbp)
0000000100024161	leaq	-0x40(%rbp), %rax
0000000100024165	movq	%rax, -0x60(%rbp)
0000000100024169	movq	$0x1, -0x58(%rbp)
0000000100024171	leaq	0x24e28(%rip), %rsi
0000000100024178	leaq	-0x70(%rbp), %rdi
000000010002417c	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100024181	movq	%rax, %r12
0000000100024184	movq	%r14, %rdi
0000000100024187	movq	%r15, %rsi
000000010002418a	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002418f	movq	%rbx, %rdi
0000000100024192	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100024197	movq	%r12, %rdi
000000010002419a	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002419f	nop
___rdl_alloc:
00000001000241a0	movq	%rdi, %rdx
00000001000241a3	cmpq	$0x10, %rsi
00000001000241a7	ja	0x1000241b6
00000001000241a9	cmpq	%rdx, %rsi
00000001000241ac	ja	0x1000241b6
00000001000241ae	movq	%rdx, %rdi
00000001000241b1	jmp	0x1000427ba                     ## symbol stub for: _malloc
00000001000241b6	movl	$0x80000000, %eax               ## imm = 0x80000000
00000001000241bb	cmpq	%rax, %rsi
00000001000241be	jbe	0x1000241c3
00000001000241c0	xorl	%eax, %eax
00000001000241c2	retq
00000001000241c3	pushq	%rbp
00000001000241c4	movq	%rsp, %rbp
00000001000241c7	subq	$0x10, %rsp
00000001000241cb	movq	$0x0, -0x8(%rbp)
00000001000241d3	cmpq	$0x9, %rsi
00000001000241d7	movl	$0x8, %eax
00000001000241dc	cmovaeq	%rsi, %rax
00000001000241e0	leaq	-0x8(%rbp), %rdi
00000001000241e4	movq	%rax, %rsi
00000001000241e7	callq	0x1000427f0                     ## symbol stub for: _posix_memalign
00000001000241ec	testl	%eax, %eax
00000001000241ee	jne	0x1000241fa
00000001000241f0	movq	-0x8(%rbp), %rax
00000001000241f4	addq	$0x10, %rsp
00000001000241f8	popq	%rbp
00000001000241f9	retq
00000001000241fa	xorl	%eax, %eax
00000001000241fc	addq	$0x10, %rsp
0000000100024200	popq	%rbp
0000000100024201	retq
0000000100024202	nopw	%cs:(%rax,%rax)
000000010002420c	nopl	(%rax)
___rdl_dealloc:
0000000100024210	pushq	%rbp
0000000100024211	movq	%rsp, %rbp
0000000100024214	popq	%rbp
0000000100024215	jmp	0x1000427a2                     ## symbol stub for: _free
000000010002421a	nopw	(%rax,%rax)
___rdl_realloc:
0000000100024220	pushq	%rbp
0000000100024221	movq	%rsp, %rbp
0000000100024224	pushq	%r15
0000000100024226	pushq	%r14
0000000100024228	pushq	%r12
000000010002422a	pushq	%rbx
000000010002422b	subq	$0x10, %rsp
000000010002422f	movq	%rcx, %r14
0000000100024232	movq	%rsi, %r15
0000000100024235	movq	%rdi, %rbx
0000000100024238	cmpq	$0x10, %rdx
000000010002423c	ja	0x10002425a
000000010002423e	cmpq	%r14, %rdx
0000000100024241	ja	0x10002425a
0000000100024243	movq	%rbx, %rdi
0000000100024246	movq	%r14, %rsi
0000000100024249	addq	$0x10, %rsp
000000010002424d	popq	%rbx
000000010002424e	popq	%r12
0000000100024250	popq	%r14
0000000100024252	popq	%r15
0000000100024254	popq	%rbp
0000000100024255	jmp	0x100042856                     ## symbol stub for: _realloc
000000010002425a	movl	$0x80000000, %eax               ## imm = 0x80000000
000000010002425f	cmpq	%rax, %rdx
0000000100024262	jbe	0x100024268
0000000100024264	xorl	%eax, %eax
0000000100024266	jmp	0x1000242ba
0000000100024268	movq	$0x0, -0x28(%rbp)
0000000100024270	cmpq	$0x9, %rdx
0000000100024274	movl	$0x8, %esi
0000000100024279	cmovaeq	%rdx, %rsi
000000010002427d	leaq	-0x28(%rbp), %rdi
0000000100024281	movq	%r14, %rdx
0000000100024284	callq	0x1000427f0                     ## symbol stub for: _posix_memalign
0000000100024289	movl	%eax, %ecx
000000010002428b	xorl	%eax, %eax
000000010002428d	testl	%ecx, %ecx
000000010002428f	jne	0x1000242ba
0000000100024291	movq	-0x28(%rbp), %r12
0000000100024295	testq	%r12, %r12
0000000100024298	je	0x1000242ba
000000010002429a	cmpq	%r14, %r15
000000010002429d	cmovbq	%r15, %r14
00000001000242a1	movq	%r12, %rdi
00000001000242a4	movq	%rbx, %rsi
00000001000242a7	movq	%r14, %rdx
00000001000242aa	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000242af	movq	%rbx, %rdi
00000001000242b2	callq	0x1000427a2                     ## symbol stub for: _free
00000001000242b7	movq	%r12, %rax
00000001000242ba	addq	$0x10, %rsp
00000001000242be	popq	%rbx
00000001000242bf	popq	%r12
00000001000242c1	popq	%r14
00000001000242c3	popq	%r15
00000001000242c5	popq	%rbp
00000001000242c6	retq
00000001000242c7	nopw	(%rax,%rax)
___rust_drop_panic:
00000001000242d0	pushq	%rbp
00000001000242d1	movq	%rsp, %rbp
00000001000242d4	pushq	%r15
00000001000242d6	pushq	%r14
00000001000242d8	pushq	%rbx
00000001000242d9	subq	$0x38, %rsp
00000001000242dd	leaq	0x24cd4(%rip), %rax
00000001000242e4	movq	%rax, -0x50(%rbp)
00000001000242e8	movq	$0x1, -0x48(%rbp)
00000001000242f0	movq	$0x0, -0x30(%rbp)
00000001000242f8	leaq	-0x20(%rbp), %rdi
00000001000242fc	movq	%rdi, -0x40(%rbp)
0000000100024300	movq	$0x0, -0x38(%rbp)
0000000100024308	leaq	-0x50(%rbp), %rsi
000000010002430c	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100024311	testq	%rax, %rax
0000000100024314	je	0x100024365
0000000100024316	movl	%eax, %ecx
0000000100024318	andl	$0x3, %ecx
000000010002431b	leaq	-0x2(%rcx), %rdx
000000010002431f	cmpq	$0x2, %rdx
0000000100024323	jb	0x100024365
0000000100024325	testq	%rcx, %rcx
0000000100024328	je	0x100024365
000000010002432a	movq	%rax, %rbx
000000010002432d	decq	%rbx
0000000100024330	movq	-0x1(%rax), %r14
0000000100024334	movq	0x7(%rax), %r15
0000000100024338	movq	%r14, %rdi
000000010002433b	callq	*(%r15)
000000010002433e	movq	0x8(%r15), %rsi
0000000100024342	testq	%rsi, %rsi
0000000100024345	je	0x100024353
0000000100024347	movq	0x10(%r15), %rdx
000000010002434b	movq	%r14, %rdi
000000010002434e	callq	___rust_dealloc
0000000100024353	movl	$0x18, %esi
0000000100024358	movl	$0x8, %edx
000000010002435d	movq	%rbx, %rdi
0000000100024360	callq	___rust_dealloc
0000000100024365	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010002436a	movq	%r14, %rdi
000000010002436d	movq	%r15, %rsi
0000000100024370	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100024375	movq	%rbx, %rdi
0000000100024378	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002437d	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100024382	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100024387	nopw	(%rax,%rax)
___rust_foreign_exception:
0000000100024390	pushq	%rbp
0000000100024391	movq	%rsp, %rbp
0000000100024394	pushq	%r15
0000000100024396	pushq	%r14
0000000100024398	pushq	%rbx
0000000100024399	subq	$0x38, %rsp
000000010002439d	leaq	0x24c24(%rip), %rax
00000001000243a4	movq	%rax, -0x50(%rbp)
00000001000243a8	movq	$0x1, -0x48(%rbp)
00000001000243b0	movq	$0x0, -0x30(%rbp)
00000001000243b8	leaq	-0x20(%rbp), %rdi
00000001000243bc	movq	%rdi, -0x40(%rbp)
00000001000243c0	movq	$0x0, -0x38(%rbp)
00000001000243c8	leaq	-0x50(%rbp), %rsi
00000001000243cc	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
00000001000243d1	testq	%rax, %rax
00000001000243d4	je	0x100024425
00000001000243d6	movl	%eax, %ecx
00000001000243d8	andl	$0x3, %ecx
00000001000243db	leaq	-0x2(%rcx), %rdx
00000001000243df	cmpq	$0x2, %rdx
00000001000243e3	jb	0x100024425
00000001000243e5	testq	%rcx, %rcx
00000001000243e8	je	0x100024425
00000001000243ea	movq	%rax, %rbx
00000001000243ed	decq	%rbx
00000001000243f0	movq	-0x1(%rax), %r14
00000001000243f4	movq	0x7(%rax), %r15
00000001000243f8	movq	%r14, %rdi
00000001000243fb	callq	*(%r15)
00000001000243fe	movq	0x8(%r15), %rsi
0000000100024402	testq	%rsi, %rsi
0000000100024405	je	0x100024413
0000000100024407	movq	0x10(%r15), %rdx
000000010002440b	movq	%r14, %rdi
000000010002440e	callq	___rust_dealloc
0000000100024413	movl	$0x18, %esi
0000000100024418	movl	$0x8, %edx
000000010002441d	movq	%rbx, %rdi
0000000100024420	callq	___rust_dealloc
0000000100024425	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010002442a	movq	%r14, %rdi
000000010002442d	movq	%r15, %rsi
0000000100024430	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100024435	movq	%rbx, %rdi
0000000100024438	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002443d	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100024442	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100024447	nopw	(%rax,%rax)
__ZN3std9panicking12default_hook17h2cb72824a505d11dE:
0000000100024450	pushq	%rbp
0000000100024451	movq	%rsp, %rbp
0000000100024454	pushq	%r15
0000000100024456	pushq	%r14
0000000100024458	pushq	%r13
000000010002445a	pushq	%r12
000000010002445c	pushq	%rbx
000000010002445d	subq	$0x58, %rsp
0000000100024461	movq	%rdi, %r14
0000000100024464	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.0(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.0)
000000010002446b	callq	*(%rdi)
000000010002446d	movq	%rax, %rcx
0000000100024470	movb	$0x1, %al
0000000100024472	cmpq	$0x1, (%rcx)
0000000100024476	ja	0x10002447d
0000000100024478	callq	__ZN3std5panic19get_backtrace_style17hf696eaea4064bfd2E ## std::panic::get_backtrace_style::hf696eaea4064bfd2
000000010002447d	movb	%al, -0x31(%rbp)
0000000100024480	movq	%r14, %rdi
0000000100024483	callq	__ZN4core5panic10panic_info9PanicInfo8location17hf1d748ac41880118E ## core::panic::panic_info::PanicInfo::location::hf1d748ac41880118
0000000100024488	testq	%rax, %rax
000000010002448b	je	0x1000246ed
0000000100024491	movq	%rax, -0x40(%rbp)
0000000100024495	movq	%r14, %rdi
0000000100024498	callq	__ZN4core5panic10panic_info9PanicInfo7payload17h2614b56217624438E ## core::panic::panic_info::PanicInfo::payload::h2614b56217624438
000000010002449d	movq	%rax, %rbx
00000001000244a0	movq	%rax, %rdi
00000001000244a3	callq	*0x18(%rdx)
00000001000244a6	testq	%rbx, %rbx
00000001000244a9	je	0x1000244d3
00000001000244ab	movabsq	$-0x3e5d376332e1843f, %rcx      ## imm = 0xC1A2C89CCD1E7BC1
00000001000244b5	xorq	%rcx, %rax
00000001000244b8	movabsq	$-0x243e97eff4e109c, %rcx       ## imm = 0xFDBC168100B1EF64
00000001000244c2	xorq	%rcx, %rdx
00000001000244c5	orq	%rax, %rdx
00000001000244c8	jne	0x1000244d3
00000001000244ca	movq	%rbx, %rax
00000001000244cd	addq	$0x8, %rax
00000001000244d1	jmp	0x10002451b
00000001000244d3	movq	%r14, %rdi
00000001000244d6	callq	__ZN4core5panic10panic_info9PanicInfo7payload17h2614b56217624438E ## core::panic::panic_info::PanicInfo::payload::h2614b56217624438
00000001000244db	movq	%rax, %rbx
00000001000244de	movq	%rax, %rdi
00000001000244e1	callq	*0x18(%rdx)
00000001000244e4	movl	$0xc, %ecx
00000001000244e9	leaq	0x208f5(%rip), %rsi
00000001000244f0	testq	%rbx, %rbx
00000001000244f3	je	0x100024521
00000001000244f5	movabsq	$-0x6c21651b7d3b4eb4, %rdi      ## imm = 0x93DE9AE482C4B14C
00000001000244ff	xorq	%rdi, %rax
0000000100024502	movabsq	$0x4ad571a26cddb860, %rdi       ## imm = 0x4AD571A26CDDB860
000000010002450c	xorq	%rdi, %rdx
000000010002450f	orq	%rax, %rdx
0000000100024512	jne	0x100024521
0000000100024514	movq	%rbx, %rax
0000000100024517	addq	$0x10, %rax
000000010002451b	movq	(%rbx), %rsi
000000010002451e	movq	(%rax), %rcx
0000000100024521	movq	%rsi, -0x50(%rbp)
0000000100024525	movq	%rcx, -0x48(%rbp)
0000000100024529	callq	__ZN3std10sys_common11thread_info14current_thread17h4102400ece1054ccE ## std::sys_common::thread_info::current_thread::h4102400ece1054cc
000000010002452e	movq	%rax, %rbx
0000000100024531	movl	$0x9, %eax
0000000100024536	leaq	0x208b4(%rip), %rcx
000000010002453d	testq	%rbx, %rbx
0000000100024540	je	0x100024555
0000000100024542	movq	0x18(%rbx), %rdx
0000000100024546	testq	%rdx, %rdx
0000000100024549	je	0x100024555
000000010002454b	movq	0x20(%rbx), %rax
000000010002454f	decq	%rax
0000000100024552	movq	%rdx, %rcx
0000000100024555	movq	%rcx, -0x60(%rbp)
0000000100024559	movq	%rax, -0x58(%rbp)
000000010002455d	leaq	-0x60(%rbp), %rax
0000000100024561	movq	%rax, -0x80(%rbp)
0000000100024565	leaq	-0x50(%rbp), %rax
0000000100024569	movq	%rax, -0x78(%rbp)
000000010002456d	leaq	-0x40(%rbp), %rax
0000000100024571	movq	%rax, -0x70(%rbp)
0000000100024575	leaq	-0x31(%rbp), %rax
0000000100024579	movq	%rax, -0x68(%rbp)
000000010002457d	movzbl	__ZN3std2io5stdio19OUTPUT_CAPTURE_USED17he5176a8685b0923eE.0(%rip), %eax ## std::io::stdio::OUTPUT_CAPTURE_USED::he5176a8685b0923e (.0)
0000000100024584	testb	%al, %al
0000000100024586	je	0x10002466b
000000010002458c	movb	$0x1, 0x27bdd(%rip)
0000000100024593	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
000000010002459a	callq	*(%rdi)
000000010002459c	cmpq	$0x0, (%rax)
00000001000245a0	je	0x1000245a8
00000001000245a2	addq	$0x8, %rax
00000001000245a6	jmp	0x1000245b8
00000001000245a8	xorl	%edi, %edi
00000001000245aa	callq	__ZN3std3sys6common12thread_local10fast_local12Key$LT$T$GT$14try_initialize17hcfbbaac63aec0d68E ## std::sys::common::thread_local::fast_local::Key$LT$T$GT$::try_initialize::hcfbbaac63aec0d68
00000001000245af	testq	%rax, %rax
00000001000245b2	je	0x100024705
00000001000245b8	movq	(%rax), %r14
00000001000245bb	movq	$0x0, (%rax)
00000001000245c2	testq	%r14, %r14
00000001000245c5	je	0x10002466b
00000001000245cb	leaq	0x10(%r14), %r15
00000001000245cf	movq	0x10(%r14), %rdi
00000001000245d3	testq	%rdi, %rdi
00000001000245d6	jne	0x1000245e3
00000001000245d8	movq	%r15, %rdi
00000001000245db	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
00000001000245e0	movq	%rax, %rdi
00000001000245e3	callq	0x10004280e                     ## symbol stub for: _pthread_mutex_lock
00000001000245e8	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rax ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
00000001000245ef	shlq	$0x1, %rax
00000001000245f3	testq	%rax, %rax
00000001000245f6	jne	0x1000246c5
00000001000245fc	xorl	%r13d, %r13d
00000001000245ff	movzbl	0x18(%r14), %eax
0000000100024604	leaq	0x20(%r14), %rsi
0000000100024608	leaq	0x249e1(%rip), %rdx
000000010002460f	leaq	-0x80(%rbp), %rdi
0000000100024613	callq	__ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17hfc88b82ae9ab0222E ## std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::hfc88b82ae9ab0222
0000000100024618	testb	%r13b, %r13b
000000010002461b	jne	0x100024637
000000010002461d	movabsq	$0x7fffffffffffffff, %rax       ## imm = 0x7FFFFFFFFFFFFFFF
0000000100024627	movq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip), %rcx ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
000000010002462e	testq	%rax, %rcx
0000000100024631	jne	0x1000246d6
0000000100024637	movq	(%r15), %rdi
000000010002463a	testq	%rdi, %rdi
000000010002463d	jne	0x10002464a
000000010002463f	movq	%r15, %rdi
0000000100024642	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h37ee5133a9f25da6
0000000100024647	movq	%rax, %rdi
000000010002464a	callq	0x10004281a                     ## symbol stub for: _pthread_mutex_unlock
000000010002464f	movb	$0x1, 0x27b1a(%rip)
0000000100024656	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
000000010002465d	callq	*(%rdi)
000000010002465f	cmpq	$0x0, (%rax)
0000000100024663	je	0x1000246a1
0000000100024665	addq	$0x8, %rax
0000000100024669	jmp	0x1000246ad
000000010002466b	leaq	0x249ce(%rip), %rdx
0000000100024672	leaq	-0x80(%rbp), %rdi
0000000100024676	leaq	-0x30(%rbp), %rsi
000000010002467a	callq	__ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17hfc88b82ae9ab0222E ## std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::hfc88b82ae9ab0222
000000010002467f	testq	%rbx, %rbx
0000000100024682	je	0x100024692
0000000100024684	lock
0000000100024685	decq	(%rbx)
0000000100024688	jne	0x100024692
000000010002468a	movq	%rbx, %rdi
000000010002468d	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100024692	addq	$0x58, %rsp
0000000100024696	popq	%rbx
0000000100024697	popq	%r12
0000000100024699	popq	%r13
000000010002469b	popq	%r14
000000010002469d	popq	%r15
000000010002469f	popq	%rbp
00000001000246a0	retq
00000001000246a1	xorl	%edi, %edi
00000001000246a3	callq	__ZN3std3sys6common12thread_local10fast_local12Key$LT$T$GT$14try_initialize17hcfbbaac63aec0d68E ## std::sys::common::thread_local::fast_local::Key$LT$T$GT$::try_initialize::hcfbbaac63aec0d68
00000001000246a8	testq	%rax, %rax
00000001000246ab	je	0x10002472a
00000001000246ad	movq	(%rax), %rdi
00000001000246b0	movq	%r14, (%rax)
00000001000246b3	testq	%rdi, %rdi
00000001000246b6	je	0x10002467f
00000001000246b8	lock
00000001000246b9	decq	(%rdi)
00000001000246bc	jne	0x10002467f
00000001000246be	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
00000001000246c3	jmp	0x10002467f
00000001000246c5	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
00000001000246ca	movl	%eax, %r13d
00000001000246cd	xorb	$0x1, %r13b
00000001000246d1	jmp	0x1000245ff
00000001000246d6	callq	__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E ## std::panicking::panic_count::is_zero_slow_path::h23a1fee99298e5e2
00000001000246db	testb	%al, %al
00000001000246dd	jne	0x100024637
00000001000246e3	movb	$0x1, 0x18(%r14)
00000001000246e8	jmp	0x100024637
00000001000246ed	leaq	0x1f5fd(%rip), %rdi
00000001000246f4	leaq	0x248dd(%rip), %rdx
00000001000246fb	movl	$0x2b, %esi
0000000100024700	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100024705	leaq	0x202d7(%rip), %rdi
000000010002470c	leaq	0x23ef5(%rip), %rcx
0000000100024713	leaq	0x243ce(%rip), %r8
000000010002471a	leaq	-0x30(%rbp), %rdx
000000010002471e	movl	$0x46, %esi
0000000100024723	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100024728	jmp	0x10002475b
000000010002472a	lock
000000010002472b	decq	(%r14)
000000010002472e	jne	0x100024738
0000000100024730	movq	%r14, %rdi
0000000100024733	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
0000000100024738	leaq	0x202a4(%rip), %rdi
000000010002473f	leaq	0x23ec2(%rip), %rcx
0000000100024746	leaq	0x2439b(%rip), %r8
000000010002474d	leaq	-0x30(%rbp), %rdx
0000000100024751	movl	$0x46, %esi
0000000100024756	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
000000010002475b	ud2
000000010002475d	jmp	0x10002479d
000000010002475f	movq	%rax, %r12
0000000100024762	movq	%r14, %rdi
0000000100024765	callq	__ZN4core3ptr84drop_in_place$LT$std..io..stdio..set_output_capture..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5262300040a0af7cE ## core::ptr::drop_in_place$LT$std..io..stdio..set_output_capture..$u7b$$u7b$closure$u7d$$u7d$$GT$::h5262300040a0af7c
000000010002476a	jmp	0x1000247a0
000000010002476c	jmp	0x10002479d
000000010002476e	movq	%rax, %r12
0000000100024771	xorl	%edi, %edi
0000000100024773	callq	__ZN4core3ptr84drop_in_place$LT$std..io..stdio..set_output_capture..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5262300040a0af7cE ## core::ptr::drop_in_place$LT$std..io..stdio..set_output_capture..$u7b$$u7b$closure$u7d$$u7d$$GT$::h5262300040a0af7c
0000000100024778	jmp	0x1000247a0
000000010002477a	movq	%rax, %r12
000000010002477d	jmp	0x10002478e
000000010002477f	movq	%rax, %r12
0000000100024782	movzbl	%r13b, %esi
0000000100024786	movq	%r15, %rdi
0000000100024789	callq	__ZN4core3ptr46drop_in_place$LT$std..io..stdio..StdinLock$GT$17h1f998272c9deb625E ## core::ptr::drop_in_place$LT$std..io..stdio..StdinLock$GT$::h1f998272c9deb625
000000010002478e	movq	%r14, %rdi
0000000100024791	callq	__ZN4core3ptr101drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h230a050644404e8bE ## core::ptr::drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$::h230a050644404e8b
0000000100024796	jmp	0x1000247a0
0000000100024798	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002479d	movq	%rax, %r12
00000001000247a0	movq	%rbx, %rdi
00000001000247a3	callq	__ZN4core3ptr68drop_in_place$LT$core..option..Option$LT$std..thread..Thread$GT$$GT$17h8fae294146e4bedfE ## core::ptr::drop_in_place$LT$core..option..Option$LT$std..thread..Thread$GT$$GT$::h8fae294146e4bedf
00000001000247a8	movq	%r12, %rdi
00000001000247ab	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
__ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$17hfc88b82ae9ab0222E:
00000001000247b0	pushq	%rbp
00000001000247b1	movq	%rsp, %rbp
00000001000247b4	pushq	%r15
00000001000247b6	pushq	%r14
00000001000247b8	pushq	%r13
00000001000247ba	pushq	%r12
00000001000247bc	pushq	%rbx
00000001000247bd	subq	$0x78, %rsp
00000001000247c1	movq	%rdx, %r15
00000001000247c4	movq	%rsi, %r14
00000001000247c7	movq	%rdi, %r12
00000001000247ca	movq	(%rdi), %rax
00000001000247cd	movq	0x8(%rdi), %rcx
00000001000247d1	movq	0x10(%rdi), %rdx
00000001000247d5	movq	%rax, -0x68(%rbp)
00000001000247d9	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
00000001000247e0	movq	%rax, -0x60(%rbp)
00000001000247e4	movq	%rcx, -0x58(%rbp)
00000001000247e8	movq	%rax, -0x50(%rbp)
00000001000247ec	movq	%rdx, -0x48(%rbp)
00000001000247f0	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65f36ad186248bf3E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h65f36ad186248bf3
00000001000247f7	movq	%rax, -0x40(%rbp)
00000001000247fb	leaq	0x2488e(%rip), %rax
0000000100024802	movq	%rax, -0x98(%rbp)
0000000100024809	movq	$0x4, -0x90(%rbp)
0000000100024814	movq	$0x0, -0x78(%rbp)
000000010002481c	leaq	-0x68(%rbp), %rax
0000000100024820	movq	%rax, -0x88(%rbp)
0000000100024827	movq	$0x3, -0x80(%rbp)
000000010002482f	movq	0x48(%r15), %r13
0000000100024833	leaq	-0x98(%rbp), %rsi
000000010002483a	movq	%r14, %rdi
000000010002483d	callq	*%r13
0000000100024840	testq	%rax, %rax
0000000100024843	je	0x10002489a
0000000100024845	movl	%eax, %ecx
0000000100024847	andl	$0x3, %ecx
000000010002484a	leaq	-0x2(%rcx), %rdx
000000010002484e	cmpq	$0x2, %rdx
0000000100024852	jb	0x10002489a
0000000100024854	testq	%rcx, %rcx
0000000100024857	je	0x10002489a
0000000100024859	movq	%rax, %rcx
000000010002485c	decq	%rcx
000000010002485f	movq	%rcx, -0x30(%rbp)
0000000100024863	movq	-0x1(%rax), %rdi
0000000100024867	movq	0x7(%rax), %rbx
000000010002486b	movq	%rdi, -0x38(%rbp)
000000010002486f	callq	*(%rbx)
0000000100024871	movq	0x8(%rbx), %rsi
0000000100024875	testq	%rsi, %rsi
0000000100024878	je	0x100024887
000000010002487a	movq	0x10(%rbx), %rdx
000000010002487e	movq	-0x38(%rbp), %rdi
0000000100024882	callq	___rust_dealloc
0000000100024887	movl	$0x18, %esi
000000010002488c	movl	$0x8, %edx
0000000100024891	movq	-0x30(%rbp), %rdi
0000000100024895	callq	___rust_dealloc
000000010002489a	movq	0x18(%r12), %rax
000000010002489f	movzbl	(%rax), %eax
00000001000248a2	cmpq	$0x3, %rax
00000001000248a6	jne	0x1000248b7
00000001000248a8	addq	$0x78, %rsp
00000001000248ac	popq	%rbx
00000001000248ad	popq	%r12
00000001000248af	popq	%r13
00000001000248b1	popq	%r14
00000001000248b3	popq	%r15
00000001000248b5	popq	%rbp
00000001000248b6	retq
00000001000248b7	cmpl	$0x2, %eax
00000001000248ba	je	0x100024906
00000001000248bc	movq	%r14, %rdi
00000001000248bf	movq	%r15, %rsi
00000001000248c2	cmpl	$0x1, %eax
00000001000248c5	jne	0x100024984
00000001000248cb	movl	$0x1, %edx
00000001000248d0	callq	__ZN3std10sys_common9backtrace5print17hb5816525719dec2dE ## std::sys_common::backtrace::print::hb5816525719dec2d
00000001000248d5	testq	%rax, %rax
00000001000248d8	je	0x1000248a8
00000001000248da	movl	%eax, %ecx
00000001000248dc	andl	$0x3, %ecx
00000001000248df	leaq	-0x2(%rcx), %rdx
00000001000248e3	cmpq	$0x2, %rdx
00000001000248e7	jb	0x1000248a8
00000001000248e9	testq	%rcx, %rcx
00000001000248ec	je	0x1000248a8
00000001000248ee	movq	%rax, %r14
00000001000248f1	decq	%r14
00000001000248f4	movq	-0x1(%rax), %r15
00000001000248f8	movq	0x7(%rax), %rbx
00000001000248fc	movq	%r15, %rdi
00000001000248ff	callq	*(%rbx)
0000000100024901	jmp	0x1000249c3
0000000100024906	xorl	%eax, %eax
0000000100024908	xchgb	%al, __ZN3std9panicking12default_hook28_$u7b$$u7b$closure$u7d$$u7d$11FIRST_PANIC17hf41a849d72153713E(%rip) ## std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::FIRST_PANIC::hf41a849d72153713
000000010002490e	testb	%al, %al
0000000100024910	je	0x1000248a8
0000000100024912	leaq	0x247b7(%rip), %rax
0000000100024919	movq	%rax, -0x68(%rbp)
000000010002491d	movq	$0x1, -0x60(%rbp)
0000000100024925	movq	$0x0, -0x48(%rbp)
000000010002492d	leaq	0x1f3bc(%rip), %rax
0000000100024934	movq	%rax, -0x58(%rbp)
0000000100024938	movq	$0x0, -0x50(%rbp)
0000000100024940	leaq	-0x68(%rbp), %rsi
0000000100024944	movq	%r14, %rdi
0000000100024947	callq	*%r13
000000010002494a	testq	%rax, %rax
000000010002494d	je	0x1000248a8
0000000100024953	movl	%eax, %ecx
0000000100024955	andl	$0x3, %ecx
0000000100024958	leaq	-0x2(%rcx), %rdx
000000010002495c	cmpq	$0x2, %rdx
0000000100024960	jb	0x1000248a8
0000000100024966	testq	%rcx, %rcx
0000000100024969	je	0x1000248a8
000000010002496f	movq	%rax, %r14
0000000100024972	decq	%r14
0000000100024975	movq	-0x1(%rax), %r15
0000000100024979	movq	0x7(%rax), %rbx
000000010002497d	movq	%r15, %rdi
0000000100024980	callq	*(%rbx)
0000000100024982	jmp	0x1000249c3
0000000100024984	xorl	%edx, %edx
0000000100024986	callq	__ZN3std10sys_common9backtrace5print17hb5816525719dec2dE ## std::sys_common::backtrace::print::hb5816525719dec2d
000000010002498b	testq	%rax, %rax
000000010002498e	je	0x1000248a8
0000000100024994	movl	%eax, %ecx
0000000100024996	andl	$0x3, %ecx
0000000100024999	leaq	-0x2(%rcx), %rdx
000000010002499d	cmpq	$0x2, %rdx
00000001000249a1	jb	0x1000248a8
00000001000249a7	testq	%rcx, %rcx
00000001000249aa	je	0x1000248a8
00000001000249b0	movq	%rax, %r14
00000001000249b3	decq	%r14
00000001000249b6	movq	-0x1(%rax), %r15
00000001000249ba	movq	0x7(%rax), %rbx
00000001000249be	movq	%r15, %rdi
00000001000249c1	callq	*(%rbx)
00000001000249c3	movq	0x8(%rbx), %rsi
00000001000249c7	testq	%rsi, %rsi
00000001000249ca	je	0x1000249d8
00000001000249cc	movq	0x10(%rbx), %rdx
00000001000249d0	movq	%r15, %rdi
00000001000249d3	callq	___rust_dealloc
00000001000249d8	movl	$0x18, %esi
00000001000249dd	movl	$0x8, %edx
00000001000249e2	movq	%r14, %rdi
00000001000249e5	callq	___rust_dealloc
00000001000249ea	jmp	0x1000248a8
00000001000249ef	jmp	0x1000249f3
00000001000249f1	jmp	0x1000249f3
00000001000249f3	movq	%r14, -0x30(%rbp)
00000001000249f7	movq	%rax, %r14
00000001000249fa	movq	%r15, %rdi
00000001000249fd	jmp	0x100024a06
00000001000249ff	movq	%rax, %r14
0000000100024a02	movq	-0x38(%rbp), %rdi
0000000100024a06	movq	%rbx, %rsi
0000000100024a09	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
0000000100024a0e	movq	-0x30(%rbp), %rdi
0000000100024a12	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100024a17	movq	%r14, %rdi
0000000100024a1a	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100024a1f	nop
_rust_begin_unwind:
0000000100024a20	pushq	%rbp
0000000100024a21	movq	%rsp, %rbp
0000000100024a24	pushq	%r14
0000000100024a26	pushq	%rbx
0000000100024a27	subq	$0x20, %rsp
0000000100024a2b	movq	%rdi, %rbx
0000000100024a2e	callq	__ZN4core5panic10panic_info9PanicInfo8location17hf1d748ac41880118E ## core::panic::panic_info::PanicInfo::location::hf1d748ac41880118
0000000100024a33	testq	%rax, %rax
0000000100024a36	jne	0x100024a50
0000000100024a38	leaq	0x1f2b2(%rip), %rdi
0000000100024a3f	leaq	0x2469a(%rip), %rdx
0000000100024a46	movl	$0x2b, %esi
0000000100024a4b	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100024a50	movq	%rax, %r14
0000000100024a53	movq	%rbx, %rdi
0000000100024a56	callq	__ZN4core5panic10panic_info9PanicInfo7message17hdb60b92dfa50382eE ## core::panic::panic_info::PanicInfo::message::hdb60b92dfa50382e
0000000100024a5b	testq	%rax, %rax
0000000100024a5e	jne	0x100024a78
0000000100024a60	leaq	0x1f28a(%rip), %rdi
0000000100024a67	leaq	0x2468a(%rip), %rdx
0000000100024a6e	movl	$0x2b, %esi
0000000100024a73	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100024a78	movq	%rax, -0x28(%rbp)
0000000100024a7c	movq	%rbx, -0x20(%rbp)
0000000100024a80	movq	%r14, -0x18(%rbp)
0000000100024a84	leaq	-0x28(%rbp), %rdi
0000000100024a88	callq	__ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hd299ff4177db45a7E ## std::sys_common::backtrace::__rust_end_short_backtrace::hd299ff4177db45a7
0000000100024a8d	nopl	(%rax)
__ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5f4d4f4a3b6be188E:
0000000100024a90	pushq	%rbp
0000000100024a91	movq	%rsp, %rbp
0000000100024a94	pushq	%r15
0000000100024a96	pushq	%r14
0000000100024a98	pushq	%rbx
0000000100024a99	subq	$0x38, %rsp
0000000100024a9d	movq	%rdi, %rbx
0000000100024aa0	leaq	0x8(%rdi), %r15
0000000100024aa4	cmpq	$0x0, 0x8(%rdi)
0000000100024aa9	jne	0x100024af5
0000000100024aab	movq	(%rbx), %rdx
0000000100024aae	movq	$0x1, -0x48(%rbp)
0000000100024ab6	movq	$0x0, -0x40(%rbp)
0000000100024abe	movq	$0x0, -0x38(%rbp)
0000000100024ac6	leaq	-0x48(%rbp), %r14
0000000100024aca	movq	%r14, -0x50(%rbp)
0000000100024ace	leaq	0x23813(%rip), %rsi
0000000100024ad5	leaq	-0x50(%rbp), %rdi
0000000100024ad9	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
0000000100024ade	movq	-0x38(%rbp), %rax
0000000100024ae2	movq	%rax, 0x10(%r15)
0000000100024ae6	movq	-0x48(%rbp), %rax
0000000100024aea	movq	-0x40(%rbp), %rcx
0000000100024aee	movq	%rcx, 0x8(%r15)
0000000100024af2	movq	%rax, (%r15)
0000000100024af5	movq	0x10(%r15), %rax
0000000100024af9	movq	%rax, -0x20(%rbp)
0000000100024afd	movq	(%r15), %rax
0000000100024b00	movq	0x8(%r15), %rcx
0000000100024b04	movq	%rcx, -0x28(%rbp)
0000000100024b08	movq	%rax, -0x30(%rbp)
0000000100024b0c	movq	$0x1, 0x8(%rbx)
0000000100024b14	movq	$0x0, 0x10(%rbx)
0000000100024b1c	movq	$0x0, 0x18(%rbx)
0000000100024b24	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100024b2b	movzbl	(%rax), %eax
0000000100024b2e	movl	$0x18, %edi
0000000100024b33	movl	$0x8, %esi
0000000100024b38	callq	___rust_alloc
0000000100024b3d	testq	%rax, %rax
0000000100024b40	je	0x100024b6b
0000000100024b42	movq	-0x20(%rbp), %rcx
0000000100024b46	movq	%rcx, 0x10(%rax)
0000000100024b4a	movq	-0x30(%rbp), %rcx
0000000100024b4e	movq	-0x28(%rbp), %rdx
0000000100024b52	movq	%rdx, 0x8(%rax)
0000000100024b56	movq	%rcx, (%rax)
0000000100024b59	leaq	0x245b0(%rip), %rdx
0000000100024b60	addq	$0x38, %rsp
0000000100024b64	popq	%rbx
0000000100024b65	popq	%r14
0000000100024b67	popq	%r15
0000000100024b69	popq	%rbp
0000000100024b6a	retq
0000000100024b6b	movl	$0x8, %edi
0000000100024b70	movl	$0x18, %esi
0000000100024b75	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100024b7a	ud2
0000000100024b7c	movq	%rax, %rbx
0000000100024b7f	jmp	0x100024b88
0000000100024b81	movq	%rax, %rbx
0000000100024b84	leaq	-0x30(%rbp), %r14
0000000100024b88	movq	%r14, %rdi
0000000100024b8b	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
0000000100024b90	movq	%rbx, %rdi
0000000100024b93	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100024b98	nopl	(%rax,%rax)
__ZN90_$LT$std..panicking..begin_panic_handler..PanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$3get17h11888826d58f1848E:
0000000100024ba0	pushq	%rbp
0000000100024ba1	movq	%rsp, %rbp
0000000100024ba4	pushq	%rbx
0000000100024ba5	subq	$0x28, %rsp
0000000100024ba9	leaq	0x8(%rdi), %rbx
0000000100024bad	cmpq	$0x0, 0x8(%rdi)
0000000100024bb2	jne	0x100024bfe
0000000100024bb4	movq	(%rdi), %rdx
0000000100024bb7	movq	$0x1, -0x20(%rbp)
0000000100024bbf	movq	$0x0, -0x18(%rbp)
0000000100024bc7	movq	$0x0, -0x10(%rbp)
0000000100024bcf	leaq	-0x20(%rbp), %rax
0000000100024bd3	movq	%rax, -0x28(%rbp)
0000000100024bd7	leaq	0x2370a(%rip), %rsi
0000000100024bde	leaq	-0x28(%rbp), %rdi
0000000100024be2	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
0000000100024be7	movq	-0x10(%rbp), %rax
0000000100024beb	movq	%rax, 0x10(%rbx)
0000000100024bef	movq	-0x20(%rbp), %rax
0000000100024bf3	movq	-0x18(%rbp), %rcx
0000000100024bf7	movq	%rcx, 0x8(%rbx)
0000000100024bfb	movq	%rax, (%rbx)
0000000100024bfe	leaq	0x2450b(%rip), %rdx
0000000100024c05	movq	%rbx, %rax
0000000100024c08	addq	$0x28, %rsp
0000000100024c0c	popq	%rbx
0000000100024c0d	popq	%rbp
0000000100024c0e	retq
0000000100024c0f	movq	%rax, %rbx
0000000100024c12	leaq	-0x20(%rbp), %rdi
0000000100024c16	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
0000000100024c1b	movq	%rbx, %rdi
0000000100024c1e	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100024c23	nopw	%cs:(%rax,%rax)
0000000100024c2d	nopl	(%rax)
__ZN93_$LT$std..panicking..begin_panic_handler..StrPanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h3921eb9af70417f2E:
0000000100024c30	pushq	%rbp
0000000100024c31	movq	%rsp, %rbp
0000000100024c34	pushq	%r14
0000000100024c36	pushq	%rbx
0000000100024c37	movq	(%rdi), %rbx
0000000100024c3a	movq	0x8(%rdi), %r14
0000000100024c3e	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100024c45	movzbl	(%rax), %eax
0000000100024c48	movl	$0x10, %edi
0000000100024c4d	movl	$0x8, %esi
0000000100024c52	callq	___rust_alloc
0000000100024c57	testq	%rax, %rax
0000000100024c5a	je	0x100024c6f
0000000100024c5c	movq	%rbx, (%rax)
0000000100024c5f	movq	%r14, 0x8(%rax)
0000000100024c63	leaq	0x244c6(%rip), %rdx
0000000100024c6a	popq	%rbx
0000000100024c6b	popq	%r14
0000000100024c6d	popq	%rbp
0000000100024c6e	retq
0000000100024c6f	movl	$0x8, %edi
0000000100024c74	movl	$0x10, %esi
0000000100024c79	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100024c7e	nop
__ZN93_$LT$std..panicking..begin_panic_handler..StrPanicPayload$u20$as$u20$core..panic..BoxMeUp$GT$3get17ha862c8861862473dE:
0000000100024c80	pushq	%rbp
0000000100024c81	movq	%rsp, %rbp
0000000100024c84	movq	%rdi, %rax
0000000100024c87	leaq	0x244a2(%rip), %rdx
0000000100024c8e	popq	%rbp
0000000100024c8f	retq
__ZN3std9panicking19begin_panic_handler28_$u7b$$u7b$closure$u7d$$u7d$17h29c0dd87214757f4E:
0000000100024c90	pushq	%rbp
0000000100024c91	movq	%rsp, %rbp
0000000100024c94	pushq	%r15
0000000100024c96	pushq	%r14
0000000100024c98	pushq	%rbx
0000000100024c99	subq	$0x28, %rsp
0000000100024c9d	movq	%rdi, %rbx
0000000100024ca0	movq	(%rdi), %rax
0000000100024ca3	movq	0x8(%rax), %rdx
0000000100024ca7	movq	0x18(%rax), %rcx
0000000100024cab	cmpq	$0x1, %rdx
0000000100024caf	je	0x100024cc6
0000000100024cb1	testq	%rdx, %rdx
0000000100024cb4	jne	0x100024d12
0000000100024cb6	testq	%rcx, %rcx
0000000100024cb9	jne	0x100024d12
0000000100024cbb	leaq	0x1f02e(%rip), %rax
0000000100024cc2	xorl	%ecx, %ecx
0000000100024cc4	jmp	0x100024cd5
0000000100024cc6	testq	%rcx, %rcx
0000000100024cc9	jne	0x100024d12
0000000100024ccb	movq	(%rax), %rcx
0000000100024cce	movq	(%rcx), %rax
0000000100024cd1	movq	0x8(%rcx), %rcx
0000000100024cd5	movq	%rax, -0x38(%rbp)
0000000100024cd9	movq	%rcx, -0x30(%rbp)
0000000100024cdd	movq	0x8(%rbx), %r14
0000000100024ce1	movq	%r14, %rdi
0000000100024ce4	callq	__ZN4core5panic10panic_info9PanicInfo7message17hdb60b92dfa50382eE ## core::panic::panic_info::PanicInfo::message::hdb60b92dfa50382e
0000000100024ce9	movq	%rax, %r15
0000000100024cec	movq	0x10(%rbx), %rbx
0000000100024cf0	movq	%r14, %rdi
0000000100024cf3	callq	__ZN4core5panic10panic_info9PanicInfo10can_unwind17hf21b386442f2c70aE ## core::panic::panic_info::PanicInfo::can_unwind::hf21b386442f2c70a
0000000100024cf8	movzbl	%al, %r8d
0000000100024cfc	leaq	0x2444d(%rip), %rsi
0000000100024d03	leaq	-0x38(%rbp), %rdi
0000000100024d07	movq	%r15, %rdx
0000000100024d0a	movq	%rbx, %rcx
0000000100024d0d	callq	__ZN3std9panicking20rust_panic_with_hook17hc7199b95a24a631dE ## std::panicking::rust_panic_with_hook::hc7199b95a24a631d
0000000100024d12	movq	%rax, -0x38(%rbp)
0000000100024d16	movq	$0x0, -0x30(%rbp)
0000000100024d1e	movq	0x8(%rbx), %r15
0000000100024d22	movq	%r15, %rdi
0000000100024d25	callq	__ZN4core5panic10panic_info9PanicInfo7message17hdb60b92dfa50382eE ## core::panic::panic_info::PanicInfo::message::hdb60b92dfa50382e
0000000100024d2a	movq	%rax, %r14
0000000100024d2d	movq	0x10(%rbx), %rbx
0000000100024d31	movq	%r15, %rdi
0000000100024d34	callq	__ZN4core5panic10panic_info9PanicInfo10can_unwind17hf21b386442f2c70aE ## core::panic::panic_info::PanicInfo::can_unwind::hf21b386442f2c70a
0000000100024d39	movzbl	%al, %r8d
0000000100024d3d	leaq	0x24434(%rip), %rsi
0000000100024d44	leaq	-0x38(%rbp), %rdi
0000000100024d48	movq	%r14, %rdx
0000000100024d4b	movq	%rbx, %rcx
0000000100024d4e	callq	__ZN3std9panicking20rust_panic_with_hook17hc7199b95a24a631dE ## std::panicking::rust_panic_with_hook::hc7199b95a24a631d
0000000100024d53	ud2
0000000100024d55	movq	%rax, %rbx
0000000100024d58	leaq	-0x38(%rbp), %rdi
0000000100024d5c	callq	__ZN4core3ptr70drop_in_place$LT$std..panicking..begin_panic_handler..PanicPayload$GT$17h3825b29a191eb780E ## core::ptr::drop_in_place$LT$std..panicking..begin_panic_handler..PanicPayload$GT$::h3825b29a191eb780
0000000100024d61	movq	%rbx, %rdi
0000000100024d64	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100024d69	nopl	(%rax)
__ZN3std9panicking20rust_panic_with_hook17hc7199b95a24a631dE:
0000000100024d70	pushq	%rbp
0000000100024d71	movq	%rsp, %rbp
0000000100024d74	pushq	%r15
0000000100024d76	pushq	%r14
0000000100024d78	pushq	%r13
0000000100024d7a	pushq	%r12
0000000100024d7c	pushq	%rbx
0000000100024d7d	subq	$0x78, %rsp
0000000100024d81	movl	%r8d, %ebx
0000000100024d84	lock
0000000100024d85	incq	__ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h53f5bcd4f0d847c9E(%rip) ## std::panicking::panic_count::GLOBAL_PANIC_COUNT::h53f5bcd4f0d847c9
0000000100024d8c	jle	0x100024e35
0000000100024d92	movq	%rsi, %r14
0000000100024d95	movq	%rdi, %r15
0000000100024d98	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.1(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.1)
0000000100024d9f	callq	*(%rdi)
0000000100024da1	cmpb	$0x0, (%rax)
0000000100024da4	jne	0x100024ee9
0000000100024daa	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.0(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.0)
0000000100024db1	callq	*(%rdi)
0000000100024db3	incq	(%rax)
0000000100024db6	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.1(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.1)
0000000100024dbd	callq	*(%rdi)
0000000100024dbf	movb	$0x1, (%rax)
0000000100024dc2	leaq	0x1ef27(%rip), %r13
0000000100024dc9	movq	%r13, -0x58(%rbp)
0000000100024dcd	leaq	0x243cc(%rip), %rax
0000000100024dd4	movq	%rax, -0x50(%rbp)
0000000100024dd8	movq	%rdx, -0x40(%rbp)
0000000100024ddc	movq	%rcx, -0x48(%rbp)
0000000100024de0	movb	%bl, -0x38(%rbp)
0000000100024de3	leaq	__ZN3std9panicking4HOOK17h170b0d95e2089f40E(%rip), %r12 ## std::panicking::HOOK::h170b0d95e2089f40
0000000100024dea	movq	%r12, %rdi
0000000100024ded	callq	__ZN3std3sys4unix5locks14pthread_rwlock6RwLock4read17hea9fe8563f9fb3c3E ## std::sys::unix::locks::pthread_rwlock::RwLock::read::hea9fe8563f9fb3c3
0000000100024df2	movzbl	0x2734f(%rip), %eax
0000000100024df9	leaq	0x27350(%rip), %rax
0000000100024e00	movq	%rax, -0x68(%rbp)
0000000100024e04	movq	%r12, -0x60(%rbp)
0000000100024e08	cmpq	$0x0, 0x27340(%rip)
0000000100024e10	movq	0x20(%r14), %rax
0000000100024e14	jne	0x100024f8c
0000000100024e1a	movq	%r15, %rdi
0000000100024e1d	callq	*%rax
0000000100024e1f	movq	%rax, -0x58(%rbp)
0000000100024e23	movq	%rdx, -0x50(%rbp)
0000000100024e27	leaq	-0x58(%rbp), %rdi
0000000100024e2b	callq	__ZN3std9panicking12default_hook17h2cb72824a505d11dE ## std::panicking::default_hook::h2cb72824a505d11d
0000000100024e30	jmp	0x100024fae
0000000100024e35	leaq	0x1eeb4(%rip), %rax
0000000100024e3c	movq	%rax, -0x58(%rbp)
0000000100024e40	leaq	0x24359(%rip), %rax
0000000100024e47	movq	%rax, -0x50(%rbp)
0000000100024e4b	movq	%rdx, -0x40(%rbp)
0000000100024e4f	movq	%rcx, -0x48(%rbp)
0000000100024e53	movb	%bl, -0x38(%rbp)
0000000100024e56	leaq	-0x58(%rbp), %rax
0000000100024e5a	movq	%rax, -0x68(%rbp)
0000000100024e5e	leaq	__ZN73_$LT$core..panic..panic_info..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17h60441752cb68794aE(%rip), %rax ## _$LT$core..panic..panic_info..PanicInfo$u20$as$u20$core..fmt..Display$GT$::fmt::h60441752cb68794a
0000000100024e65	movq	%rax, -0x60(%rbp)
0000000100024e69	leaq	0x24350(%rip), %rax
0000000100024e70	movq	%rax, -0x98(%rbp)
0000000100024e77	movq	$0x2, -0x90(%rbp)
0000000100024e82	movq	$0x0, -0x78(%rbp)
0000000100024e8a	leaq	-0x68(%rbp), %rax
0000000100024e8e	movq	%rax, -0x88(%rbp)
0000000100024e95	movq	$0x1, -0x80(%rbp)
0000000100024e9d	leaq	-0x30(%rbp), %rdi
0000000100024ea1	leaq	-0x98(%rbp), %rsi
0000000100024ea8	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100024ead	testq	%rax, %rax
0000000100024eb0	je	0x100024f87
0000000100024eb6	movl	%eax, %ecx
0000000100024eb8	andl	$0x3, %ecx
0000000100024ebb	leaq	-0x2(%rcx), %rdx
0000000100024ebf	cmpq	$0x2, %rdx
0000000100024ec3	jb	0x100024f87
0000000100024ec9	testq	%rcx, %rcx
0000000100024ecc	je	0x100024f87
0000000100024ed2	movq	%rax, %rbx
0000000100024ed5	decq	%rbx
0000000100024ed8	movq	-0x1(%rax), %r15
0000000100024edc	movq	0x7(%rax), %r12
0000000100024ee0	movq	%r15, %rdi
0000000100024ee3	callq	*(%r12)
0000000100024ee7	jmp	0x100024f5e
0000000100024ee9	leaq	0x242f0(%rip), %rax
0000000100024ef0	movq	%rax, -0x98(%rbp)
0000000100024ef7	movq	$0x1, -0x90(%rbp)
0000000100024f02	movq	$0x0, -0x78(%rbp)
0000000100024f0a	leaq	0x1eddf(%rip), %rax
0000000100024f11	movq	%rax, -0x88(%rbp)
0000000100024f18	movq	$0x0, -0x80(%rbp)
0000000100024f20	leaq	-0x30(%rbp), %rdi
0000000100024f24	leaq	-0x98(%rbp), %rsi
0000000100024f2b	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100024f30	testq	%rax, %rax
0000000100024f33	je	0x100024f87
0000000100024f35	movl	%eax, %ecx
0000000100024f37	andl	$0x3, %ecx
0000000100024f3a	leaq	-0x2(%rcx), %rdx
0000000100024f3e	cmpq	$0x2, %rdx
0000000100024f42	jb	0x100024f87
0000000100024f44	testq	%rcx, %rcx
0000000100024f47	je	0x100024f87
0000000100024f49	movq	%rax, %rbx
0000000100024f4c	decq	%rbx
0000000100024f4f	movq	-0x1(%rax), %r15
0000000100024f53	movq	0x7(%rax), %r12
0000000100024f57	movq	%r15, %rdi
0000000100024f5a	callq	*(%r12)
0000000100024f5e	movq	0x8(%r12), %rsi
0000000100024f63	testq	%rsi, %rsi
0000000100024f66	je	0x100024f75
0000000100024f68	movq	0x10(%r12), %rdx
0000000100024f6d	movq	%r15, %rdi
0000000100024f70	callq	___rust_dealloc
0000000100024f75	movl	$0x18, %esi
0000000100024f7a	movl	$0x8, %edx
0000000100024f7f	movq	%rbx, %rdi
0000000100024f82	callq	___rust_dealloc
0000000100024f87	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
0000000100024f8c	movq	%r15, %rdi
0000000100024f8f	callq	*%rax
0000000100024f91	movq	%rax, -0x58(%rbp)
0000000100024f95	movq	%rdx, -0x50(%rbp)
0000000100024f99	movq	0x271b0(%rip), %rdi
0000000100024fa0	movq	0x271b1(%rip), %rax
0000000100024fa7	leaq	-0x58(%rbp), %rsi
0000000100024fab	callq	*0x28(%rax)
0000000100024fae	movq	__ZN3std9panicking4HOOK17h170b0d95e2089f40E(%rip), %rax ## std::panicking::HOOK::h170b0d95e2089f40
0000000100024fb5	testq	%rax, %rax
0000000100024fb8	jne	0x100024fc6
0000000100024fba	leaq	__ZN3std9panicking4HOOK17h170b0d95e2089f40E(%rip), %rdi ## std::panicking::HOOK::h170b0d95e2089f40
0000000100024fc1	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h90e0eaa82f4e03f2E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h90e0eaa82f4e03f2
0000000100024fc6	lock
0000000100024fc7	decq	0xc8(%rax)
0000000100024fce	movq	%rax, %rdi
0000000100024fd1	callq	0x10004283e                     ## symbol stub for: _pthread_rwlock_unlock
0000000100024fd6	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.1(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.1)
0000000100024fdd	callq	*(%rdi)
0000000100024fdf	movb	$0x0, (%rax)
0000000100024fe2	testb	%bl, %bl
0000000100024fe4	je	0x100024ff1
0000000100024fe6	movq	%r15, %rdi
0000000100024fe9	movq	%r14, %rsi
0000000100024fec	callq	_rust_panic
0000000100024ff1	leaq	0x241f8(%rip), %rax
0000000100024ff8	movq	%rax, -0x98(%rbp)
0000000100024fff	movq	$0x1, -0x90(%rbp)
000000010002500a	movq	$0x0, -0x78(%rbp)
0000000100025012	movq	%r13, -0x88(%rbp)
0000000100025019	movq	$0x0, -0x80(%rbp)
0000000100025021	leaq	-0x30(%rbp), %rdi
0000000100025025	leaq	-0x98(%rbp), %rsi
000000010002502c	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100025031	movq	%rax, %rdi
0000000100025034	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
0000000100025039	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010002503e	jmp	0x100025040
0000000100025040	movq	%rax, %r14
0000000100025043	movq	%r15, %rdi
0000000100025046	movq	%r12, %rsi
0000000100025049	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002504e	movq	%rbx, %rdi
0000000100025051	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
0000000100025056	jmp	0x100025064
0000000100025058	movq	%rax, %r14
000000010002505b	leaq	-0x68(%rbp), %rdi
000000010002505f	callq	__ZN4core3ptr71drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$$LP$$RP$$GT$$GT$17h7e7d248397c4241aE ## core::ptr::drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$$LP$$RP$$GT$$GT$::h7e7d248397c4241a
0000000100025064	movq	%r14, %rdi
0000000100025067	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002506c	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100025071	nopw	%cs:(%rax,%rax)
000000010002507b	nopl	(%rax,%rax)
_rust_panic:
0000000100025080	pushq	%rbp
0000000100025081	movq	%rsp, %rbp
0000000100025084	subq	$0x50, %rsp
0000000100025088	callq	___rust_start_panic
000000010002508d	movl	%eax, -0xc(%rbp)
0000000100025090	leaq	-0xc(%rbp), %rax
0000000100025094	movq	%rax, -0x20(%rbp)
0000000100025098	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
000000010002509f	movq	%rax, -0x18(%rbp)
00000001000250a3	leaq	0x24156(%rip), %rax
00000001000250aa	movq	%rax, -0x50(%rbp)
00000001000250ae	movq	$0x2, -0x48(%rbp)
00000001000250b6	movq	$0x0, -0x30(%rbp)
00000001000250be	leaq	-0x20(%rbp), %rax
00000001000250c2	movq	%rax, -0x40(%rbp)
00000001000250c6	movq	$0x1, -0x38(%rbp)
00000001000250ce	leaq	-0x8(%rbp), %rdi
00000001000250d2	leaq	-0x50(%rbp), %rsi
00000001000250d6	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
00000001000250db	movq	%rax, %rdi
00000001000250de	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
00000001000250e3	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
00000001000250e8	nopl	(%rax,%rax)
__ZN3std11personality5dwarf2eh20read_encoded_pointer17h54f879e44fe8b9fbE:
00000001000250f0	pushq	%rbp
00000001000250f1	movq	%rsp, %rbp
00000001000250f4	pushq	%r14
00000001000250f6	pushq	%rbx
00000001000250f7	movl	%edx, %ebx
00000001000250f9	cmpb	$0x50, %bl
00000001000250fc	je	0x100025113
00000001000250fe	movzbl	%bl, %ecx
0000000100025101	movl	$0x1, %eax
0000000100025106	cmpl	$0xff, %ecx
000000010002510c	jne	0x10002512d
000000010002510e	popq	%rbx
000000010002510f	popq	%r14
0000000100025111	popq	%rbp
0000000100025112	retq
0000000100025113	movq	(%rdi), %rax
0000000100025116	addq	$0x7, %rax
000000010002511a	andq	$-0x8, %rax
000000010002511e	movq	(%rax), %rdx
0000000100025121	addq	$0x8, %rax
0000000100025125	movq	%rax, (%rdi)
0000000100025128	jmp	0x100025259
000000010002512d	movl	%ebx, %ecx
000000010002512f	andb	$0xf, %cl
0000000100025132	cmpb	$0xc, %cl
0000000100025135	ja	0x100025260
000000010002513b	movzbl	%cl, %ecx
000000010002513e	leaq	0x123(%rip), %rdx
0000000100025145	movslq	(%rdx,%rcx,4), %rcx
0000000100025149	addq	%rdx, %rcx
000000010002514c	jmpq	*%rcx
000000010002514e	movq	(%rdi), %r8
0000000100025151	movq	(%r8), %r14
0000000100025154	addq	$0x8, %r8
0000000100025158	jmp	0x100025205
000000010002515d	movq	(%rdi), %r8
0000000100025160	xorl	%r14d, %r14d
0000000100025163	xorl	%ecx, %ecx
0000000100025165	nopw	%cs:(%rax,%rax)
000000010002516f	nop
0000000100025170	movzbl	(%r8), %edx
0000000100025174	movl	%edx, %r9d
0000000100025177	andl	$0x7f, %r9d
000000010002517b	shlq	%cl, %r9
000000010002517e	incq	%r8
0000000100025181	orq	%r9, %r14
0000000100025184	addq	$0x7, %rcx
0000000100025188	testb	%dl, %dl
000000010002518a	js	0x100025170
000000010002518c	jmp	0x100025205
000000010002518e	movq	(%rdi), %r8
0000000100025191	movzwl	(%r8), %r14d
0000000100025195	addq	$0x2, %r8
0000000100025199	jmp	0x100025205
000000010002519b	movq	(%rdi), %r8
000000010002519e	movl	(%r8), %r14d
00000001000251a1	jmp	0x100025201
00000001000251a3	movq	(%rdi), %r8
00000001000251a6	xorl	%r14d, %r14d
00000001000251a9	xorl	%ecx, %ecx
00000001000251ab	nopl	(%rax,%rax)
00000001000251b0	movzbl	(%r8), %edx
00000001000251b4	movl	%edx, %r9d
00000001000251b7	andl	$0x7f, %r9d
00000001000251bb	shlq	%cl, %r9
00000001000251be	incq	%r8
00000001000251c1	orq	%r9, %r14
00000001000251c4	addl	$0x7, %ecx
00000001000251c7	testb	%dl, %dl
00000001000251c9	js	0x1000251b0
00000001000251cb	movq	%r8, (%rdi)
00000001000251ce	movq	$-0x1, %rdi
00000001000251d5	shlq	%cl, %rdi
00000001000251d8	xorl	%r9d, %r9d
00000001000251db	testb	$0x40, %dl
00000001000251de	cmoveq	%r9, %rdi
00000001000251e2	cmpl	$0x40, %ecx
00000001000251e5	cmovaeq	%r9, %rdi
00000001000251e9	orq	%rdi, %r14
00000001000251ec	jmp	0x100025208
00000001000251ee	movq	(%rdi), %r8
00000001000251f1	movswq	(%r8), %r14
00000001000251f5	addq	$0x2, %r8
00000001000251f9	jmp	0x100025205
00000001000251fb	movq	(%rdi), %r8
00000001000251fe	movslq	(%r8), %r14
0000000100025201	addq	$0x4, %r8
0000000100025205	movq	%r8, (%rdi)
0000000100025208	movl	%ebx, %ecx
000000010002520a	shrb	$0x4, %cl
000000010002520d	andb	$0x7, %cl
0000000100025210	cmpb	$0x4, %cl
0000000100025213	ja	0x100025260
0000000100025215	movzbl	%cl, %edx
0000000100025218	leaq	0x7d(%rip), %rcx
000000010002521f	movslq	(%rcx,%rdx,4), %rdi
0000000100025223	addq	%rcx, %rdi
0000000100025226	jmpq	*%rdi
0000000100025228	movq	%r8, %rdx
000000010002522b	jmp	0x10002524f
000000010002522d	movq	(%rsi), %rdi
0000000100025230	movq	0x8(%rsi), %rax
0000000100025234	jmp	0x10002523e
0000000100025236	movq	0x10(%rsi), %rdi
000000010002523a	movq	0x18(%rsi), %rax
000000010002523e	callq	*0x28(%rax)
0000000100025241	movq	%rax, %rdx
0000000100025244	jmp	0x10002524f
0000000100025246	movq	0x28(%rsi), %rdx
000000010002524a	testq	%rdx, %rdx
000000010002524d	je	0x100025260
000000010002524f	addq	%r14, %rdx
0000000100025252	testb	%bl, %bl
0000000100025254	jns	0x100025259
0000000100025256	movq	(%rdx), %rdx
0000000100025259	xorl	%eax, %eax
000000010002525b	popq	%rbx
000000010002525c	popq	%r14
000000010002525e	popq	%rbp
000000010002525f	retq
0000000100025260	popq	%rbx
0000000100025261	popq	%r14
0000000100025263	popq	%rbp
0000000100025264	retq
0000000100025265	nopl	(%rax)
0000000100025268	outb	%al, $0xfe
000000010002526a	.byte 0xff #bad opcode
000000010002526b	pushq	%rbp
000000010002526d	.byte 0xfe #bad opcode
000000010002526e	.byte 0xff #bad opcode
000000010002526f	jmpq	*(%rsi)
0000000100025271	.byte 0xff #bad opcode
0000000100025272	.byte 0xff #bad opcode
0000000100025273	pushq	(%rbx)
0000000100025275	.byte 0xff #bad opcode
0000000100025276	.byte 0xff #bad opcode
0000000100025277	jmpq	*%rsi
0000000100025279	.byte 0xfe #bad opcode
000000010002527a	.byte 0xff #bad opcode
000000010002527b	jmpq	*-0x59000002(%rsi)
0000000100025281	.byte 0xfe #bad opcode
0000000100025282	.byte 0xff #bad opcode
0000000100025283	jmpq	*-0x59000002(%rsi)
0000000100025289	.byte 0xfe #bad opcode
000000010002528a	.byte 0xff #bad opcode
000000010002528b	.byte 0xff #bad opcode
000000010002528c	cmpl	%edi, %edi
000000010002528e	.byte 0xff #bad opcode
000000010002528f	incl	-0x6c000001(%rsi)
0000000100025295	.byte 0xff #bad opcode
0000000100025296	.byte 0xff #bad opcode
0000000100025297	jmpq	*%rsi
0000000100025299	.byte 0xfe #bad opcode
000000010002529a	.byte 0xff #bad opcode
000000010002529b	pushq	-0x73000001(%rbx)
00000001000252a1	.byte 0xff #bad opcode
00000001000252a2	.byte 0xff #bad opcode
00000001000252a3	callq	*-0x65000001(%rcx)
00000001000252a9	.byte 0xff #bad opcode
00000001000252aa	.byte 0xff #bad opcode
00000001000252ab	ljmpl	*0x55ffffff(%rdx)
00000001000252b1	movq	%rsp, %rbp
00000001000252b4	pushq	%r15
00000001000252b6	pushq	%r14
00000001000252b8	pushq	%r12
00000001000252ba	pushq	%rbx
00000001000252bb	subq	$0x80, %rsp
00000001000252c2	movq	%rdi, %rbx
00000001000252c5	cmpl	$0x3, (%rsi)
00000001000252c8	jne	0x1000252d4
00000001000252ca	movq	0x8(%rsi), %r14
00000001000252ce	movq	0x10(%rsi), %r15
00000001000252d2	jmp	0x1000252e5
00000001000252d4	movq	0x28(%rsi), %r14
00000001000252d8	testq	%r14, %r14
00000001000252db	je	0x1000253b9
00000001000252e1	movq	0x30(%rsi), %r15
00000001000252e5	leaq	-0x98(%rbp), %rdi
00000001000252ec	movq	%r14, %rsi
00000001000252ef	movq	%r15, %rdx
00000001000252f2	callq	__ZN4core3str8converts9from_utf817h1af6699b7ded4823E ## core::str::converts::from_utf8::h1af6699b7ded4823
00000001000252f7	cmpq	$0x0, -0x98(%rbp)
00000001000252ff	movl	$0x2, %r12d
0000000100025305	jne	0x100025374
0000000100025307	movq	-0x90(%rbp), %rsi
000000010002530e	testq	%rsi, %rsi
0000000100025311	je	0x100025374
0000000100025313	movq	-0x88(%rbp), %rdx
000000010002531a	leaq	-0x98(%rbp), %rdi
0000000100025321	callq	__ZN14rustc_demangle12try_demangle17h569606a384f77f78E ## rustc_demangle::try_demangle::h569606a384f77f78
0000000100025326	movq	-0x98(%rbp), %rax
000000010002532d	cmpq	$0x2, %rax
0000000100025331	je	0x100025374
0000000100025333	movq	-0x60(%rbp), %rcx
0000000100025337	movq	%rcx, -0x28(%rbp)
000000010002533b	movq	-0x68(%rbp), %rcx
000000010002533f	movq	%rcx, -0x30(%rbp)
0000000100025343	movq	-0x70(%rbp), %rcx
0000000100025347	movq	%rcx, -0x38(%rbp)
000000010002534b	movq	-0x78(%rbp), %rcx
000000010002534f	movq	%rcx, -0x40(%rbp)
0000000100025353	movq	-0x80(%rbp), %rcx
0000000100025357	movq	%rcx, -0x48(%rbp)
000000010002535b	movq	-0x90(%rbp), %rcx
0000000100025362	movq	-0x88(%rbp), %rdx
0000000100025369	movq	%rdx, -0x50(%rbp)
000000010002536d	movq	%rcx, -0x58(%rbp)
0000000100025371	movq	%rax, %r12
0000000100025374	movq	-0x28(%rbp), %rax
0000000100025378	movq	%rax, 0x38(%rbx)
000000010002537c	movq	-0x30(%rbp), %rax
0000000100025380	movq	%rax, 0x30(%rbx)
0000000100025384	movq	-0x38(%rbp), %rax
0000000100025388	movq	%rax, 0x28(%rbx)
000000010002538c	movq	-0x40(%rbp), %rax
0000000100025390	movq	%rax, 0x20(%rbx)
0000000100025394	movq	-0x48(%rbp), %rax
0000000100025398	movq	%rax, 0x18(%rbx)
000000010002539c	movq	-0x58(%rbp), %rax
00000001000253a0	movq	-0x50(%rbp), %rcx
00000001000253a4	movq	%rcx, 0x10(%rbx)
00000001000253a8	movq	%rax, 0x8(%rbx)
00000001000253ac	movq	%r12, (%rbx)
00000001000253af	movq	%r14, 0x40(%rbx)
00000001000253b3	movq	%r15, 0x48(%rbx)
00000001000253b7	jmp	0x1000253c0
00000001000253b9	movq	$0x3, (%rbx)
00000001000253c0	addq	$0x80, %rsp
00000001000253c7	popq	%rbx
00000001000253c8	popq	%r12
00000001000253ca	popq	%r14
00000001000253cc	popq	%r15
00000001000253ce	popq	%rbp
00000001000253cf	retq
__ZN3std12backtrace_rs5print17BacktraceFrameFmt21print_raw_with_column17h3bbd800cdb83f1dcE:
00000001000253d0	pushq	%rbp
00000001000253d1	movq	%rsp, %rbp
00000001000253d4	pushq	%r15
00000001000253d6	pushq	%r14
00000001000253d8	pushq	%r13
00000001000253da	pushq	%r12
00000001000253dc	pushq	%rbx
00000001000253dd	subq	$0xe8, %rsp
00000001000253e4	movl	%r9d, -0xe4(%rbp)
00000001000253eb	movl	%r8d, -0xe8(%rbp)
00000001000253f2	movq	%rcx, -0xf0(%rbp)
00000001000253f9	movq	%rdx, %r13
00000001000253fc	movq	%rdi, %rbx
00000001000253ff	movq	(%rdi), %r12
0000000100025402	movq	0x8(%rdi), %r15
0000000100025406	movq	%rsi, -0x108(%rbp)
000000010002540d	testq	%rsi, %rsi
0000000100025410	jne	0x100025428
0000000100025412	cmpb	$0x0, 0x20(%r12)
0000000100025418	jne	0x100025428
000000010002541a	incq	%r15
000000010002541d	movq	%r15, 0x8(%rbx)
0000000100025421	xorl	%eax, %eax
0000000100025423	jmp	0x100025ae9
0000000100025428	movq	(%r12), %rdi
000000010002542c	testq	%r15, %r15
000000010002542f	je	0x100025525
0000000100025435	leaq	0x23e8c(%rip), %rax
000000010002543c	movq	%rax, -0x78(%rbp)
0000000100025440	movq	$0x1, -0x70(%rbp)
0000000100025448	movq	$0x0, -0x58(%rbp)
0000000100025450	leaq	0x1e899(%rip), %rax
0000000100025457	movq	%rax, -0x68(%rbp)
000000010002545b	movq	$0x0, -0x60(%rbp)
0000000100025463	leaq	-0x78(%rbp), %r14
0000000100025467	movq	%r14, %rsi
000000010002546a	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
000000010002546f	testb	%al, %al
0000000100025471	jne	0x100025ae7
0000000100025477	cmpb	$0x1, 0x20(%r12)
000000010002547d	jne	0x100025693
0000000100025483	movq	(%r12), %rdi
0000000100025487	leaq	__ZN4core3fmt2rt12USIZE_MARKER17hcfd356ec9799f49cE(%rip), %rax ## core::fmt::rt::USIZE_MARKER::hcfd356ec9799f49c
000000010002548e	movq	(%rax), %rax
0000000100025491	leaq	0x23548(%rip), %rcx
0000000100025498	movq	%rcx, -0xe0(%rbp)
000000010002549f	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rdx ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
00000001000254a6	movq	%rdx, -0xd8(%rbp)
00000001000254ad	leaq	0x204e4(%rip), %rdx
00000001000254b4	movq	%rdx, -0xd0(%rbp)
00000001000254bb	movq	%rax, -0xc8(%rbp)
00000001000254c2	movq	$0x2, -0x78(%rbp)
00000001000254ca	movq	$0x1, -0x68(%rbp)
00000001000254d2	movq	$0x1, -0x60(%rbp)
00000001000254da	movq	$0x0, -0x58(%rbp)
00000001000254e2	movq	$0x20, -0x50(%rbp)
00000001000254ea	movb	$0x3, -0x48(%rbp)
00000001000254ee	movq	%rcx, -0xb0(%rbp)
00000001000254f5	movq	$0x1, -0xa8(%rbp)
0000000100025500	movq	%r14, -0x90(%rbp)
0000000100025507	movq	$0x1, -0x88(%rbp)
0000000100025512	leaq	-0xe0(%rbp), %rax
0000000100025519	movq	%rax, -0xa0(%rbp)
0000000100025520	jmp	0x100025674
0000000100025525	leaq	0x18(%r12), %rax
000000010002552a	movq	%rax, -0xe0(%rbp)
0000000100025531	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
0000000100025538	movq	%rax, -0xd8(%rbp)
000000010002553f	movq	$0x2, -0x78(%rbp)
0000000100025547	movq	$0x0, -0x68(%rbp)
000000010002554f	movq	$0x4, -0x60(%rbp)
0000000100025557	movq	$0x0, -0x58(%rbp)
000000010002555f	movq	$0x20, -0x50(%rbp)
0000000100025567	movb	$0x3, -0x48(%rbp)
000000010002556b	leaq	0x23d16(%rip), %rax
0000000100025572	movq	%rax, -0xb0(%rbp)
0000000100025579	movq	$0x2, -0xa8(%rbp)
0000000100025584	leaq	-0x78(%rbp), %rax
0000000100025588	movq	%rax, -0x90(%rbp)
000000010002558f	movq	$0x1, -0x88(%rbp)
000000010002559a	leaq	-0xe0(%rbp), %r14
00000001000255a1	movq	%r14, -0xa0(%rbp)
00000001000255a8	movq	$0x1, -0x98(%rbp)
00000001000255b3	leaq	-0xb0(%rbp), %rsi
00000001000255ba	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
00000001000255bf	testb	%al, %al
00000001000255c1	jne	0x100025ae7
00000001000255c7	cmpb	$0x1, 0x20(%r12)
00000001000255cd	jne	0x100025693
00000001000255d3	movq	(%r12), %rdi
00000001000255d7	leaq	__ZN4core3fmt2rt12USIZE_MARKER17hcfd356ec9799f49cE(%rip), %rax ## core::fmt::rt::USIZE_MARKER::hcfd356ec9799f49c
00000001000255de	movq	(%rax), %rax
00000001000255e1	leaq	-0x108(%rbp), %rcx
00000001000255e8	movq	%rcx, -0xe0(%rbp)
00000001000255ef	leaq	__ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd73dfa743ab7413dE(%rip), %rcx ## _$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$::fmt::hd73dfa743ab7413d
00000001000255f6	movq	%rcx, -0xd8(%rbp)
00000001000255fd	leaq	0x2038c(%rip), %rcx
0000000100025604	movq	%rcx, -0xd0(%rbp)
000000010002560b	movq	%rax, -0xc8(%rbp)
0000000100025612	movq	$0x2, -0x78(%rbp)
000000010002561a	movq	$0x1, -0x68(%rbp)
0000000100025622	movq	$0x1, -0x60(%rbp)
000000010002562a	movq	$0x0, -0x58(%rbp)
0000000100025632	movq	$0x20, -0x50(%rbp)
000000010002563a	movb	$0x3, -0x48(%rbp)
000000010002563e	leaq	0x23c63(%rip), %rax
0000000100025645	movq	%rax, -0xb0(%rbp)
000000010002564c	movq	$0x2, -0xa8(%rbp)
0000000100025657	leaq	-0x78(%rbp), %rax
000000010002565b	movq	%rax, -0x90(%rbp)
0000000100025662	movq	$0x1, -0x88(%rbp)
000000010002566d	movq	%r14, -0xa0(%rbp)
0000000100025674	movq	$0x2, -0x98(%rbp)
000000010002567f	leaq	-0xb0(%rbp), %rsi
0000000100025686	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
000000010002568b	testb	%al, %al
000000010002568d	jne	0x100025ae7
0000000100025693	movq	(%r13), %rax
0000000100025697	cmpq	$0x3, %rax
000000010002569b	je	0x100025784
00000001000256a1	addq	$0x8, %r13
00000001000256a5	movzbl	0x20(%r12), %ecx
00000001000256ab	cmpq	$0x1, %rcx
00000001000256af	je	0x100025a66
00000001000256b5	testq	%rcx, %rcx
00000001000256b8	jne	0x100025784
00000001000256be	movq	%rax, -0x78(%rbp)
00000001000256c2	leaq	-0x70(%rbp), %rdi
00000001000256c6	movl	$0x9, %ecx
00000001000256cb	movq	%r13, %rsi
00000001000256ce	rep		movsq	(%rsi), %es:(%rdi)
00000001000256d1	movq	(%r12), %rdi
00000001000256d5	leaq	-0x78(%rbp), %rax
00000001000256d9	movq	%rax, -0x100(%rbp)
00000001000256e0	leaq	__ZN79_$LT$std..backtrace_rs..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h235d156f8508a906E(%rip), %rax ## _$LT$std..backtrace_rs..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$::fmt::h235d156f8508a906
00000001000256e7	movq	%rax, -0xf8(%rbp)
00000001000256ee	movq	$0x2, -0xb0(%rbp)
00000001000256f9	movq	$0x2, -0xa0(%rbp)
0000000100025704	movq	$0x0, -0x90(%rbp)
000000010002570f	movabsq	$0x400000020, %rax              ## imm = 0x400000020
0000000100025719	movq	%rax, -0x88(%rbp)
0000000100025720	movb	$0x3, -0x80(%rbp)
0000000100025724	leaq	0x232b5(%rip), %rax
000000010002572b	movq	%rax, -0xe0(%rbp)
0000000100025732	movq	$0x1, -0xd8(%rbp)
000000010002573d	leaq	-0xb0(%rbp), %rax
0000000100025744	movq	%rax, -0xc0(%rbp)
000000010002574b	movq	$0x1, -0xb8(%rbp)
0000000100025756	leaq	-0x100(%rbp), %rax
000000010002575d	movq	%rax, -0xd0(%rbp)
0000000100025764	movq	$0x1, -0xc8(%rbp)
000000010002576f	leaq	-0xe0(%rbp), %rsi
0000000100025776	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
000000010002577b	testb	%al, %al
000000010002577d	je	0x1000257c7
000000010002577f	jmp	0x100025ae7
0000000100025784	movq	(%r12), %rdi
0000000100025788	leaq	0x23b49(%rip), %rax
000000010002578f	movq	%rax, -0x78(%rbp)
0000000100025793	movq	$0x1, -0x70(%rbp)
000000010002579b	movq	$0x0, -0x58(%rbp)
00000001000257a3	leaq	0x1e546(%rip), %rax
00000001000257aa	movq	%rax, -0x68(%rbp)
00000001000257ae	movq	$0x0, -0x60(%rbp)
00000001000257b6	leaq	-0x78(%rbp), %rsi
00000001000257ba	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
00000001000257bf	testb	%al, %al
00000001000257c1	jne	0x100025ae7
00000001000257c7	movq	(%r12), %rdi
00000001000257cb	leaq	0x1ecfe(%rip), %rsi
00000001000257d2	movl	$0x1, %edx
00000001000257d7	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
00000001000257dc	testb	%al, %al
00000001000257de	jne	0x100025ae7
00000001000257e4	cmpl	$0x1, -0xe8(%rbp)
00000001000257eb	jne	0x10002541a
00000001000257f1	movq	-0xf0(%rbp), %rax
00000001000257f8	movq	(%rax), %r13
00000001000257fb	cmpq	$0x2, %r13
00000001000257ff	je	0x10002541a
0000000100025805	movl	-0xe4(%rbp), %eax
000000010002580b	movl	%eax, -0x100(%rbp)
0000000100025811	cmpb	$0x1, 0x20(%r12)
0000000100025817	jne	0x1000258dd
000000010002581d	movq	(%r12), %rdi
0000000100025821	leaq	__ZN4core3fmt2rt12USIZE_MARKER17hcfd356ec9799f49cE(%rip), %rax ## core::fmt::rt::USIZE_MARKER::hcfd356ec9799f49c
0000000100025828	movq	(%rax), %rax
000000010002582b	leaq	0x231ae(%rip), %rcx
0000000100025832	movq	%rcx, -0xe0(%rbp)
0000000100025839	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rdx ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
0000000100025840	movq	%rdx, -0xd8(%rbp)
0000000100025847	leaq	0x20142(%rip), %rdx
000000010002584e	movq	%rdx, -0xd0(%rbp)
0000000100025855	movq	%rax, -0xc8(%rbp)
000000010002585c	movq	$0x2, -0x78(%rbp)
0000000100025864	movq	$0x1, -0x68(%rbp)
000000010002586c	movq	$0x1, -0x60(%rbp)
0000000100025874	movq	$0x0, -0x58(%rbp)
000000010002587c	movq	$0x20, -0x50(%rbp)
0000000100025884	movb	$0x3, -0x48(%rbp)
0000000100025888	movq	%rcx, -0xb0(%rbp)
000000010002588f	movq	$0x1, -0xa8(%rbp)
000000010002589a	leaq	-0x78(%rbp), %rax
000000010002589e	movq	%rax, -0x90(%rbp)
00000001000258a5	movq	$0x1, -0x88(%rbp)
00000001000258b0	leaq	-0xe0(%rbp), %rax
00000001000258b7	movq	%rax, -0xa0(%rbp)
00000001000258be	movq	$0x2, -0x98(%rbp)
00000001000258c9	leaq	-0xb0(%rbp), %rsi
00000001000258d0	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
00000001000258d5	testb	%al, %al
00000001000258d7	jne	0x100025ae7
00000001000258dd	movq	(%r12), %rdi
00000001000258e1	leaq	0x23a00(%rip), %rax
00000001000258e8	movq	%rax, -0x78(%rbp)
00000001000258ec	movq	$0x1, -0x70(%rbp)
00000001000258f4	movq	$0x0, -0x58(%rbp)
00000001000258fc	leaq	0x1e3ed(%rip), %r14
0000000100025903	movq	%r14, -0x68(%rbp)
0000000100025907	movq	$0x0, -0x60(%rbp)
000000010002590f	leaq	-0x78(%rbp), %rsi
0000000100025913	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
0000000100025918	testb	%al, %al
000000010002591a	jne	0x100025ae7
0000000100025920	movq	-0xf0(%rbp), %r8
0000000100025927	addq	$0x8, %r8
000000010002592b	movq	0x8(%r12), %rdi
0000000100025930	movq	0x10(%r12), %rax
0000000100025935	movq	(%r12), %rsi
0000000100025939	movq	%rsi, -0x78(%rbp)
000000010002593d	leaq	-0x70(%rbp), %rdx
0000000100025941	movq	%r13, -0x70(%rbp)
0000000100025945	movq	(%r8), %rcx
0000000100025948	movq	0x8(%r8), %r8
000000010002594c	movq	%rcx, -0x68(%rbp)
0000000100025950	movq	%r8, -0x60(%rbp)
0000000100025954	callq	*0x20(%rax)
0000000100025957	testb	%al, %al
0000000100025959	jne	0x100025ae7
000000010002595f	movq	(%r12), %rdi
0000000100025963	leaq	-0x100(%rbp), %rax
000000010002596a	movq	%rax, -0xb0(%rbp)
0000000100025971	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
0000000100025978	movq	%rax, -0xa8(%rbp)
000000010002597f	leaq	0x23972(%rip), %rax
0000000100025986	movq	%rax, -0x78(%rbp)
000000010002598a	movq	$0x1, -0x70(%rbp)
0000000100025992	movq	$0x0, -0x58(%rbp)
000000010002599a	leaq	-0xb0(%rbp), %r13
00000001000259a1	movq	%r13, -0x68(%rbp)
00000001000259a5	movq	$0x1, -0x60(%rbp)
00000001000259ad	leaq	-0x78(%rbp), %rsi
00000001000259b1	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
00000001000259b6	testb	%al, %al
00000001000259b8	jne	0x100025ae7
00000001000259be	cmpl	$0x1, 0x10(%rbp)
00000001000259c2	jne	0x100025a25
00000001000259c4	movl	0x18(%rbp), %eax
00000001000259c7	movl	%eax, -0xe0(%rbp)
00000001000259cd	movq	(%r12), %rdi
00000001000259d1	leaq	-0xe0(%rbp), %rax
00000001000259d8	movq	%rax, -0xb0(%rbp)
00000001000259df	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
00000001000259e6	movq	%rax, -0xa8(%rbp)
00000001000259ed	leaq	0x23904(%rip), %rax
00000001000259f4	movq	%rax, -0x78(%rbp)
00000001000259f8	movq	$0x1, -0x70(%rbp)
0000000100025a00	movq	$0x0, -0x58(%rbp)
0000000100025a08	movq	%r13, -0x68(%rbp)
0000000100025a0c	movq	$0x1, -0x60(%rbp)
0000000100025a14	leaq	-0x78(%rbp), %rsi
0000000100025a18	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
0000000100025a1d	testb	%al, %al
0000000100025a1f	jne	0x100025ae7
0000000100025a25	movq	(%r12), %rdi
0000000100025a29	leaq	0x238d8(%rip), %rax
0000000100025a30	movq	%rax, -0x78(%rbp)
0000000100025a34	movq	$0x1, -0x70(%rbp)
0000000100025a3c	movq	$0x0, -0x58(%rbp)
0000000100025a44	movq	%r14, -0x68(%rbp)
0000000100025a48	movq	$0x0, -0x60(%rbp)
0000000100025a50	leaq	-0x78(%rbp), %rsi
0000000100025a54	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
0000000100025a59	testb	%al, %al
0000000100025a5b	je	0x10002541a
0000000100025a61	jmp	0x100025ae7
0000000100025a66	movq	%rax, -0x78(%rbp)
0000000100025a6a	leaq	-0x70(%rbp), %rdi
0000000100025a6e	movl	$0x9, %ecx
0000000100025a73	movq	%r13, %rsi
0000000100025a76	rep		movsq	(%rsi), %es:(%rdi)
0000000100025a79	movq	(%r12), %rdi
0000000100025a7d	leaq	-0x78(%rbp), %rax
0000000100025a81	movq	%rax, -0xe0(%rbp)
0000000100025a88	leaq	__ZN79_$LT$std..backtrace_rs..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h235d156f8508a906E(%rip), %rax ## _$LT$std..backtrace_rs..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$::fmt::h235d156f8508a906
0000000100025a8f	movq	%rax, -0xd8(%rbp)
0000000100025a96	leaq	0x22f43(%rip), %rax
0000000100025a9d	movq	%rax, -0xb0(%rbp)
0000000100025aa4	movq	$0x1, -0xa8(%rbp)
0000000100025aaf	movq	$0x0, -0x90(%rbp)
0000000100025aba	leaq	-0xe0(%rbp), %rax
0000000100025ac1	movq	%rax, -0xa0(%rbp)
0000000100025ac8	movq	$0x1, -0x98(%rbp)
0000000100025ad3	leaq	-0xb0(%rbp), %rsi
0000000100025ada	callq	__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E ## core::fmt::Formatter::write_fmt::h406266965a9d7271
0000000100025adf	testb	%al, %al
0000000100025ae1	je	0x1000257c7
0000000100025ae7	movb	$0x1, %al
0000000100025ae9	addq	$0xe8, %rsp
0000000100025af0	popq	%rbx
0000000100025af1	popq	%r12
0000000100025af3	popq	%r13
0000000100025af5	popq	%r14
0000000100025af7	popq	%r15
0000000100025af9	popq	%rbp
0000000100025afa	retq
0000000100025afb	nopl	(%rax,%rax)
__ZN62_$LT$std..io..error..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h95eec573c6d2cabfE:
0000000100025b00	pushq	%rbp
0000000100025b01	movq	%rsp, %rbp
0000000100025b04	movq	%rsi, %rax
0000000100025b07	movzbl	(%rdi), %ecx
0000000100025b0a	leaq	0x1fbff(%rip), %rdx
0000000100025b11	movq	(%rdx,%rcx,8), %rdx
0000000100025b15	leaq	0x1fd3c(%rip), %rdi
0000000100025b1c	movslq	(%rdi,%rcx,4), %rsi
0000000100025b20	addq	%rdi, %rsi
0000000100025b23	movq	%rax, %rdi
0000000100025b26	popq	%rbp
0000000100025b27	jmp	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100025b2c	nopl	(%rax)
__ZN61_$LT$std..path..Component$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6b5f0981ec8041e0E:
0000000100025b30	pushq	%rbp
0000000100025b31	movq	%rsp, %rbp
0000000100025b34	pushq	%r14
0000000100025b36	pushq	%rbx
0000000100025b37	movq	%rsi, %r14
0000000100025b3a	movq	%rdi, %rbx
0000000100025b3d	movzbl	(%rdi), %ecx
0000000100025b40	leal	-0x6(%rcx), %eax
0000000100025b43	movzbl	%al, %esi
0000000100025b46	leaq	0x1(%rsi), %rdx
0000000100025b4a	xorl	%eax, %eax
0000000100025b4c	cmpb	$0x4, %sil
0000000100025b50	cmovaeq	%rax, %rdx
0000000100025b54	movzbl	(%r14), %esi
0000000100025b58	leal	-0x6(%rsi), %edi
0000000100025b5b	movzbl	%dil, %r8d
0000000100025b5f	leaq	0x1(%r8), %r9
0000000100025b63	cmpb	$0x4, %r8b
0000000100025b67	cmovaeq	%rax, %r9
0000000100025b6b	cmpq	%r9, %rdx
0000000100025b6e	jne	0x100025b98
0000000100025b70	movb	$0x1, %al
0000000100025b72	testq	%rdx, %rdx
0000000100025b75	je	0x100025b9d
0000000100025b77	cmpl	$0x4, %edx
0000000100025b7a	jne	0x100025b98
0000000100025b7c	movq	0x10(%rbx), %rdx
0000000100025b80	cmpq	0x10(%r14), %rdx
0000000100025b84	jne	0x100025be7
0000000100025b86	movq	0x8(%r14), %rsi
0000000100025b8a	movq	0x8(%rbx), %rdi
0000000100025b8e	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100025b93	testl	%eax, %eax
0000000100025b95	sete	%al
0000000100025b98	popq	%rbx
0000000100025b99	popq	%r14
0000000100025b9b	popq	%rbp
0000000100025b9c	retq
0000000100025b9d	cmpb	$0x4, %dil
0000000100025ba1	jb	0x100025b98
0000000100025ba3	cmpb	%sil, %cl
0000000100025ba6	jne	0x100025be7
0000000100025ba8	leaq	0x49(%rip), %rax
0000000100025baf	movslq	(%rax,%rcx,4), %rcx
0000000100025bb3	addq	%rax, %rcx
0000000100025bb6	jmpq	*%rcx
0000000100025bb8	movq	0x10(%rbx), %rdx
0000000100025bbc	cmpq	0x10(%r14), %rdx
0000000100025bc0	jne	0x100025be7
0000000100025bc2	movq	0x8(%r14), %rsi
0000000100025bc6	movq	0x8(%rbx), %rdi
0000000100025bca	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100025bcf	testl	%eax, %eax
0000000100025bd1	jne	0x100025be7
0000000100025bd3	movq	0x20(%rbx), %rdx
0000000100025bd7	cmpq	0x20(%r14), %rdx
0000000100025bdb	jne	0x100025be7
0000000100025bdd	movq	0x18(%r14), %rsi
0000000100025be1	movq	0x18(%rbx), %rdi
0000000100025be5	jmp	0x100025b8e
0000000100025be7	xorl	%eax, %eax
0000000100025be9	popq	%rbx
0000000100025bea	popq	%r14
0000000100025bec	popq	%rbp
0000000100025bed	retq
0000000100025bee	movzbl	0x1(%rbx), %eax
0000000100025bf2	cmpb	0x1(%r14), %al
0000000100025bf6	jmp	0x100025b95
0000000100025bf8	testb	%bh, %bh
0000000100025bfa	.byte 0xff #bad opcode
0000000100025bfb	incl	%eax
0000000100025bfd	.byte 0xff #bad opcode
0000000100025bfe	.byte 0xff #bad opcode
0000000100025bff	pushq	%rsi
0000000100025c01	.byte 0xff #bad opcode
0000000100025c02	.byte 0xff #bad opcode
0000000100025c03	incl	-0x3f0001(%rdi,%rdi,8)
0000000100025c0a	.byte 0xff #bad opcode
0000000100025c0b	pushq	%rsi
0000000100025c0d	.byte 0xff #bad opcode
0000000100025c0e	.byte 0xff #bad opcode
0000000100025c0f	callq	*0x48(%rbp)
0000000100025c12	movl	%esp, %ebp
0000000100025c14	pushq	%rbx
0000000100025c15	pushq	%rax
0000000100025c16	movq	%rdi, %rbx
0000000100025c19	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
0000000100025c20	callq	*(%rdi)
0000000100025c22	movzbl	0x10(%rax), %eax
0000000100025c26	testq	%rax, %rax
0000000100025c29	je	0x100025c3d
0000000100025c2b	cmpl	$0x1, %eax
0000000100025c2e	je	0x100025cc1
0000000100025c34	xorl	%eax, %eax
0000000100025c36	addq	$0x8, %rsp
0000000100025c3a	popq	%rbx
0000000100025c3b	popq	%rbp
0000000100025c3c	retq
0000000100025c3d	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100025c44	callq	*(%rdi)
0000000100025c46	cmpb	$0x1, (%rax)
0000000100025c49	je	0x100025c65
0000000100025c4b	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::run_dtors::h1b9508fcca531689
0000000100025c52	xorl	%esi, %esi
0000000100025c54	callq	0x10004276c                     ## symbol stub for: __tlv_atexit
0000000100025c59	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100025c60	callq	*(%rdi)
0000000100025c62	movb	$0x1, (%rax)
0000000100025c65	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100025c6c	callq	*(%rdi)
0000000100025c6e	movq	0x10(%rax), %rcx
0000000100025c72	cmpq	0x8(%rax), %rcx
0000000100025c76	jne	0x100025c8d
0000000100025c78	movq	%rcx, %rdi
0000000100025c7b	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h7504180b2f81aa9c
0000000100025c80	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100025c87	callq	*(%rdi)
0000000100025c89	movq	0x10(%rax), %rcx
0000000100025c8d	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100025c94	callq	*(%rdi)
0000000100025c96	movq	%rax, %rdx
0000000100025c99	movq	(%rax), %rsi
0000000100025c9c	shlq	$0x4, %rcx
0000000100025ca0	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
0000000100025ca7	callq	*(%rdi)
0000000100025ca9	movq	%rax, (%rsi,%rcx)
0000000100025cad	leaq	__ZN3std3sys6common12thread_local10fast_local13destroy_value17hca7e5bf12a2f82e6E(%rip), %rdi ## std::sys::common::thread_local::fast_local::destroy_value::hca7e5bf12a2f82e6
0000000100025cb4	movq	%rdi, 0x8(%rsi,%rcx)
0000000100025cb9	incq	0x10(%rdx)
0000000100025cbd	movb	$0x1, 0x10(%rax)
0000000100025cc1	testq	%rbx, %rbx
0000000100025cc4	je	0x100025cdb
0000000100025cc6	movq	(%rbx), %rsi
0000000100025cc9	movq	$0x0, (%rbx)
0000000100025cd0	testq	%rsi, %rsi
0000000100025cd3	je	0x100025cdd
0000000100025cd5	movq	0x8(%rbx), %rsi
0000000100025cd9	jmp	0x100025cdd
0000000100025cdb	xorl	%esi, %esi
0000000100025cdd	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
0000000100025ce4	callq	*(%rdi)
0000000100025ce6	movq	%rax, %rdx
0000000100025ce9	movq	0x8(%rax), %rcx
0000000100025ced	addq	$0x8, %rax
0000000100025cf1	cmpq	$0x0, (%rdx)
0000000100025cf5	movq	$0x1, (%rdx)
0000000100025cfc	movq	%rsi, 0x8(%rdx)
0000000100025d00	je	0x100025c36
0000000100025d06	testq	%rcx, %rcx
0000000100025d09	je	0x100025c36
0000000100025d0f	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
0000000100025d16	callq	*(%rdi)
0000000100025d18	lock
0000000100025d19	decq	(%rcx)
0000000100025d1c	jne	0x100025d2f
0000000100025d1e	movq	%rcx, %rdi
0000000100025d21	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
0000000100025d26	leaq	__ZN3std2io5stdio14OUTPUT_CAPTURE7__getit5__KEY17hf47bd2d107570370E(%rip), %rdi ## std::io::stdio::OUTPUT_CAPTURE::__getit::__KEY::hf47bd2d107570370
0000000100025d2d	callq	*(%rdi)
0000000100025d2f	addq	$0x8, %rax
0000000100025d33	addq	$0x8, %rsp
0000000100025d37	popq	%rbx
0000000100025d38	popq	%rbp
0000000100025d39	retq
0000000100025d3a	nopw	(%rax,%rax)
__ZN3std3sys6common12thread_local10fast_local13destroy_value17hca7e5bf12a2f82e6E:
0000000100025d40	pushq	%rbp
0000000100025d41	movq	%rsp, %rbp
0000000100025d44	movq	%rdi, %rax
0000000100025d47	movq	0x8(%rdi), %rdi
0000000100025d4b	cmpq	$0x0, (%rax)
0000000100025d4f	movq	$0x0, (%rax)
0000000100025d56	movb	$0x2, 0x10(%rax)
0000000100025d5a	je	0x100025d6d
0000000100025d5c	testq	%rdi, %rdi
0000000100025d5f	je	0x100025d6d
0000000100025d61	lock
0000000100025d62	decq	(%rdi)
0000000100025d65	jne	0x100025d6d
0000000100025d67	popq	%rbp
0000000100025d68	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hdb38629ca0360069E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hdb38629ca0360069
0000000100025d6d	popq	%rbp
0000000100025d6e	retq
0000000100025d6f	nop
__ZN86_$LT$std..sys..unix..fs..ReadDir$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0660675dcc819650E:
0000000100025d70	pushq	%rbp
0000000100025d71	movq	%rsp, %rbp
0000000100025d74	pushq	%r15
0000000100025d76	pushq	%r14
0000000100025d78	pushq	%r13
0000000100025d7a	pushq	%r12
0000000100025d7c	pushq	%rbx
0000000100025d7d	subq	$0x428, %rsp                    ## imm = 0x428
0000000100025d84	movq	%rdi, %rbx
0000000100025d87	cmpb	$0x0, 0x8(%rsi)
0000000100025d8b	je	0x100025d99
0000000100025d8d	movq	$0x0, (%rbx)
0000000100025d94	jmp	0x100025ea8
0000000100025d99	movq	%rsi, %r14
0000000100025d9c	movq	(%rsi), %r13
0000000100025d9f	lock
0000000100025da0	incq	(%r13)
0000000100025da4	jle	0x100025ebd
0000000100025daa	movq	%r13, -0x450(%rbp)
0000000100025db1	leaq	-0x448(%rbp), %r15
0000000100025db8	movl	$0x418, %esi                    ## imm = 0x418
0000000100025dbd	movq	%r15, %rdi
0000000100025dc0	callq	0x100042748                     ## symbol stub for: ___bzero
0000000100025dc5	movq	$0x0, -0x30(%rbp)
0000000100025dcd	movq	0x28(%r13), %rdi
0000000100025dd1	leaq	-0x30(%rbp), %rdx
0000000100025dd5	movq	%r15, %rsi
0000000100025dd8	callq	0x100042850                     ## symbol stub for: _readdir_r$INODE64
0000000100025ddd	testl	%eax, %eax
0000000100025ddf	je	0x100025e24
0000000100025de1	cmpq	$0x0, -0x30(%rbp)
0000000100025de6	jne	0x100025ded
0000000100025de8	movb	$0x1, 0x8(%r14)
0000000100025ded	shlq	$0x20, %rax
0000000100025df1	orq	$0x2, %rax
0000000100025df5	movq	$0x0, 0x8(%rbx)
0000000100025dfd	movq	%rax, 0x10(%rbx)
0000000100025e01	movl	$0x1, %eax
0000000100025e06	movq	%rax, (%rbx)
0000000100025e09	movq	-0x450(%rbp), %rdi
0000000100025e10	lock
0000000100025e11	decq	(%rdi)
0000000100025e14	jne	0x100025ea8
0000000100025e1a	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
0000000100025e1f	jmp	0x100025ea8
0000000100025e24	leaq	-0x30(%rbp), %r12
0000000100025e28	jmp	0x100025e4c
0000000100025e2a	nopw	(%rax,%rax)
0000000100025e30	cmpb	$0x2e, -0x433(%rbp)
0000000100025e37	jne	0x100025e74
0000000100025e39	movq	0x28(%r13), %rdi
0000000100025e3d	movq	%r15, %rsi
0000000100025e40	movq	%r12, %rdx
0000000100025e43	callq	0x100042850                     ## symbol stub for: _readdir_r$INODE64
0000000100025e48	testl	%eax, %eax
0000000100025e4a	jne	0x100025de1
0000000100025e4c	cmpq	$0x0, -0x30(%rbp)
0000000100025e51	je	0x100025e92
0000000100025e53	movzwl	-0x436(%rbp), %eax
0000000100025e5a	cmpw	$0x1, %ax
0000000100025e5e	je	0x100025e30
0000000100025e60	cmpw	$0x2, %ax
0000000100025e64	jne	0x100025e74
0000000100025e66	movzwl	-0x433(%rbp), %eax
0000000100025e6d	cmpl	$0x2e2e, %eax                   ## imm = 0x2E2E
0000000100025e72	je	0x100025e39
0000000100025e74	leaq	0x8(%rbx), %rdi
0000000100025e78	leaq	-0x450(%rbp), %rsi
0000000100025e7f	movl	$0x420, %edx                    ## imm = 0x420
0000000100025e84	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100025e89	movq	$0x1, (%rbx)
0000000100025e90	jmp	0x100025ea8
0000000100025e92	xorl	%eax, %eax
0000000100025e94	movq	%rax, (%rbx)
0000000100025e97	movq	-0x450(%rbp), %rdi
0000000100025e9e	lock
0000000100025e9f	decq	(%rdi)
0000000100025ea2	je	0x100025e1a
0000000100025ea8	movq	%rbx, %rax
0000000100025eab	addq	$0x428, %rsp                    ## imm = 0x428
0000000100025eb2	popq	%rbx
0000000100025eb3	popq	%r12
0000000100025eb5	popq	%r13
0000000100025eb7	popq	%r14
0000000100025eb9	popq	%r15
0000000100025ebb	popq	%rbp
0000000100025ebc	retq
0000000100025ebd	ud2
0000000100025ebf	nop
__ZN65_$LT$std..sys..unix..fs..Dir$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0d39f6eaa3518a61E:
0000000100025ec0	pushq	%rbp
0000000100025ec1	movq	%rsp, %rbp
0000000100025ec4	pushq	%rbx
0000000100025ec5	subq	$0x48, %rsp
0000000100025ec9	movq	(%rdi), %rdi
0000000100025ecc	callq	0x10004277e                     ## symbol stub for: _closedir
0000000100025ed1	testl	%eax, %eax
0000000100025ed3	je	0x100025ee5
0000000100025ed5	callq	0x10004274e                     ## symbol stub for: ___error
0000000100025eda	movl	(%rax), %edi
0000000100025edc	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
0000000100025ee1	cmpb	$0x23, %al
0000000100025ee3	jne	0x100025eec
0000000100025ee5	addq	$0x48, %rsp
0000000100025ee9	popq	%rbx
0000000100025eea	popq	%rbp
0000000100025eeb	retq
0000000100025eec	callq	0x10004274e                     ## symbol stub for: ___error
0000000100025ef1	movl	(%rax), %eax
0000000100025ef3	shlq	$0x20, %rax
0000000100025ef7	orq	$0x2, %rax
0000000100025efb	movq	%rax, -0x10(%rbp)
0000000100025eff	leaq	-0x10(%rbp), %rax
0000000100025f03	movq	%rax, -0x20(%rbp)
0000000100025f07	leaq	__ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hb1fda1062b891dd4E(%rip), %rax ## _$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$::fmt::hb1fda1062b891dd4
0000000100025f0e	movq	%rax, -0x18(%rbp)
0000000100025f12	leaq	0x2341f(%rip), %rax
0000000100025f19	movq	%rax, -0x50(%rbp)
0000000100025f1d	movq	$0x1, -0x48(%rbp)
0000000100025f25	movq	$0x0, -0x30(%rbp)
0000000100025f2d	leaq	-0x20(%rbp), %rax
0000000100025f31	movq	%rax, -0x40(%rbp)
0000000100025f35	movq	$0x1, -0x38(%rbp)
0000000100025f3d	leaq	0x23404(%rip), %rsi
0000000100025f44	leaq	-0x50(%rbp), %rdi
0000000100025f48	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100025f4d	ud2
0000000100025f4f	movq	%rax, %rbx
0000000100025f52	leaq	-0x10(%rbp), %rdi
0000000100025f56	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
0000000100025f5b	movq	%rbx, %rdi
0000000100025f5e	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100025f63	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100025f68	nopl	(%rax,%rax)
__ZN3std3sys4unix2fs4File6open_c17h432d442dbe199fc7E:
0000000100025f70	pushq	%rbp
0000000100025f71	movq	%rsp, %rbp
0000000100025f74	pushq	%r15
0000000100025f76	pushq	%r14
0000000100025f78	pushq	%r13
0000000100025f7a	pushq	%r12
0000000100025f7c	pushq	%rbx
0000000100025f7d	pushq	%rax
0000000100025f7e	movq	%rsi, %r14
0000000100025f81	movq	%rdi, %r13
0000000100025f84	cmpb	$0x0, 0x6(%rdx)
0000000100025f88	movzbl	0x7(%rdx), %ecx
0000000100025f8c	movzbl	0x8(%rdx), %eax
0000000100025f90	je	0x100025fa8
0000000100025f92	movl	$0x100000a, %r15d               ## imm = 0x100000A
0000000100025f98	testb	%cl, %cl
0000000100025f9a	je	0x100025fc6
0000000100025f9c	testb	%al, %al
0000000100025f9e	jne	0x100025fec
0000000100025fa0	movl	$0x1000002, %r15d               ## imm = 0x1000002
0000000100025fa6	jmp	0x100025fbc
0000000100025fa8	movl	$0x1000009, %r15d               ## imm = 0x1000009
0000000100025fae	testb	%cl, %cl
0000000100025fb0	je	0x100025fe8
0000000100025fb2	testb	%al, %al
0000000100025fb4	jne	0x100025fec
0000000100025fb6	movl	$0x1000001, %r15d               ## imm = 0x1000001
0000000100025fbc	movzbl	0x9(%rdx), %eax
0000000100025fc0	movzbl	0xb(%rdx), %ecx
0000000100025fc4	jmp	0x10002600f
0000000100025fc6	testb	%al, %al
0000000100025fc8	jne	0x100025fec
0000000100025fca	cmpb	$0x0, 0x9(%rdx)
0000000100025fce	jne	0x100025ffc
0000000100025fd0	cmpb	$0x0, 0xa(%rdx)
0000000100025fd4	jne	0x100025ffc
0000000100025fd6	cmpb	$0x0, 0xb(%rdx)
0000000100025fda	jne	0x100025ffc
0000000100025fdc	xorl	%ecx, %ecx
0000000100025fde	movl	$0x1000000, %r15d               ## imm = 0x1000000
0000000100025fe4	xorl	%eax, %eax
0000000100025fe6	jmp	0x10002600f
0000000100025fe8	testb	%al, %al
0000000100025fea	je	0x100025ffc
0000000100025fec	movzbl	0x9(%rdx), %eax
0000000100025ff0	movzbl	0xb(%rdx), %ecx
0000000100025ff4	testb	%al, %al
0000000100025ff6	je	0x10002600f
0000000100025ff8	testb	%cl, %cl
0000000100025ffa	jne	0x10002600f
0000000100025ffc	movabsq	$0x1600000002, %rax             ## imm = 0x1600000002
0000000100026006	movq	%rax, 0x8(%r13)
000000010002600a	jmp	0x1000260a6
000000010002600f	cmpb	$0x0, 0xa(%rdx)
0000000100026013	je	0x100026026
0000000100026015	testb	%cl, %cl
0000000100026017	jne	0x10002602e
0000000100026019	movzbl	%al, %eax
000000010002601c	shll	$0xa, %eax
000000010002601f	orl	$0x200, %eax                    ## imm = 0x200
0000000100026024	jmp	0x100026033
0000000100026026	testb	%cl, %cl
0000000100026028	je	0x1000260be
000000010002602e	movl	$0xa00, %eax                    ## imm = 0xA00
0000000100026033	movl	(%rdx), %ecx
0000000100026035	andl	$-0x4, %ecx
0000000100026038	orl	%ecx, %r15d
000000010002603b	orl	%eax, %r15d
000000010002603e	movzwl	0x4(%rdx), %r12d
0000000100026043	xorl	%ebx, %ebx
0000000100026045	movq	%r14, %rdi
0000000100026048	movl	%r15d, %esi
000000010002604b	movl	%r12d, %edx
000000010002604e	xorl	%eax, %eax
0000000100026050	callq	0x1000427e4                     ## symbol stub for: _open
0000000100026055	cmpl	$-0x1, %eax
0000000100026058	jne	0x10002608d
000000010002605a	movq	%r13, -0x30(%rbp)
000000010002605e	nop
0000000100026060	callq	0x10004274e                     ## symbol stub for: ___error
0000000100026065	movl	(%rax), %r13d
0000000100026068	movl	%r13d, %edi
000000010002606b	callq	__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E ## std::sys::unix::decode_error_kind::h0dff83826cf4eeb8
0000000100026070	cmpb	$0x23, %al
0000000100026072	jne	0x100026093
0000000100026074	movq	%r14, %rdi
0000000100026077	movl	%r15d, %esi
000000010002607a	movl	%r12d, %edx
000000010002607d	xorl	%eax, %eax
000000010002607f	callq	0x1000427e4                     ## symbol stub for: _open
0000000100026084	cmpl	$-0x1, %eax
0000000100026087	je	0x100026060
0000000100026089	movq	-0x30(%rbp), %r13
000000010002608d	movl	%eax, 0x4(%r13)
0000000100026091	jmp	0x1000260ab
0000000100026093	shlq	$0x20, %r13
0000000100026097	orq	$0x2, %r13
000000010002609b	movq	-0x30(%rbp), %rax
000000010002609f	movq	%r13, 0x8(%rax)
00000001000260a3	movq	%rax, %r13
00000001000260a6	movl	$0x1, %ebx
00000001000260ab	movl	%ebx, (%r13)
00000001000260af	addq	$0x8, %rsp
00000001000260b3	popq	%rbx
00000001000260b4	popq	%r12
00000001000260b6	popq	%r13
00000001000260b8	popq	%r14
00000001000260ba	popq	%r15
00000001000260bc	popq	%rbp
00000001000260bd	retq
00000001000260be	movzbl	%al, %eax
00000001000260c1	shll	$0xa, %eax
00000001000260c4	jmp	0x100026033
00000001000260c9	nopl	(%rax)
__ZN3std3sys4unix2fs7readdir17h18e31159b936d34bE:
00000001000260d0	pushq	%rbp
00000001000260d1	movq	%rsp, %rbp
00000001000260d4	pushq	%r15
00000001000260d6	pushq	%r14
00000001000260d8	pushq	%r13
00000001000260da	pushq	%r12
00000001000260dc	pushq	%rbx
00000001000260dd	subq	$0x1a8, %rsp                    ## imm = 0x1A8
00000001000260e4	movq	%rdx, %r14
00000001000260e7	movq	%rsi, %r15
00000001000260ea	movq	%rdi, %rbx
00000001000260ed	cmpq	$0x17f, %rdx                    ## imm = 0x17F
00000001000260f4	ja	0x10002615d
00000001000260f6	leaq	-0x1c8(%rbp), %r12
00000001000260fd	movq	%r12, %rdi
0000000100026100	movq	%r15, %rsi
0000000100026103	movq	%r14, %rdx
0000000100026106	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002610b	movb	$0x0, -0x1c8(%rbp,%r14)
0000000100026114	leaq	0x1(%r14), %rdx
0000000100026118	leaq	-0x48(%rbp), %rdi
000000010002611c	movq	%r12, %rsi
000000010002611f	callq	__ZN4core3ffi5c_str4CStr19from_bytes_with_nul17hb2e722b352771ae9E ## core::ffi::c_str::CStr::from_bytes_with_nul::hb2e722b352771ae9
0000000100026124	cmpq	$0x0, -0x48(%rbp)
0000000100026129	je	0x10002613e
000000010002612b	movl	$0x1, %eax
0000000100026130	leaq	0x22d69(%rip), %r12
0000000100026137	testq	%rax, %rax
000000010002613a	jne	0x100026151
000000010002613c	jmp	0x100026170
000000010002613e	movq	-0x40(%rbp), %rdi
0000000100026142	callq	0x1000427ea                     ## symbol stub for: _opendir$INODE64
0000000100026147	movq	%rax, %r12
000000010002614a	xorl	%eax, %eax
000000010002614c	testq	%rax, %rax
000000010002614f	je	0x100026170
0000000100026151	movq	%r12, (%rbx)
0000000100026154	movb	$0x2, 0x8(%rbx)
0000000100026158	jmp	0x100026277
000000010002615d	movq	%r15, %rdi
0000000100026160	movq	%r14, %rsi
0000000100026163	callq	__ZN3std3sys6common14small_c_string24run_with_cstr_allocating17h4c28969c340409b1E ## std::sys::common::small_c_string::run_with_cstr_allocating::h4c28969c340409b1
0000000100026168	movq	%rdx, %r12
000000010002616b	testq	%rax, %rax
000000010002616e	jne	0x100026151
0000000100026170	testq	%r12, %r12
0000000100026173	je	0x1000261b0
0000000100026175	testq	%r14, %r14
0000000100026178	je	0x1000261cb
000000010002617a	setns	%al
000000010002617d	js	0x10002629d
0000000100026183	movzbl	%al, %esi
0000000100026186	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002618d	movzbl	(%rax), %eax
0000000100026190	movq	%r14, %rdi
0000000100026193	movq	%rsi, -0x30(%rbp)
0000000100026197	callq	___rust_alloc
000000010002619c	movq	%rax, %r13
000000010002619f	testq	%rax, %rax
00000001000261a2	jne	0x1000261d1
00000001000261a4	movq	-0x30(%rbp), %rdi
00000001000261a8	movq	%r14, %rsi
00000001000261ab	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000261b0	callq	0x10004274e                     ## symbol stub for: ___error
00000001000261b5	movl	(%rax), %eax
00000001000261b7	shlq	$0x20, %rax
00000001000261bb	orq	$0x2, %rax
00000001000261bf	movq	%rax, (%rbx)
00000001000261c2	movb	$0x2, 0x8(%rbx)
00000001000261c6	jmp	0x100026277
00000001000261cb	movl	$0x1, %r13d
00000001000261d1	movq	%r13, %rdi
00000001000261d4	movq	%r15, %rsi
00000001000261d7	movq	%r14, %rdx
00000001000261da	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000261df	movq	%r13, -0x1b8(%rbp)
00000001000261e6	movq	%r14, -0x1b0(%rbp)
00000001000261ed	movq	%r14, -0x1a8(%rbp)
00000001000261f4	movq	%r12, -0x1a0(%rbp)
00000001000261fb	movq	$0x1, -0x1c8(%rbp)
0000000100026206	movq	$0x1, -0x1c0(%rbp)
0000000100026211	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100026218	movzbl	(%rax), %eax
000000010002621b	movl	$0x30, %edi
0000000100026220	movl	$0x8, %esi
0000000100026225	callq	___rust_alloc
000000010002622a	testq	%rax, %rax
000000010002622d	je	0x10002628c
000000010002622f	movq	-0x1a0(%rbp), %rcx
0000000100026236	movq	%rcx, 0x28(%rax)
000000010002623a	movq	-0x1a8(%rbp), %rcx
0000000100026241	movq	%rcx, 0x20(%rax)
0000000100026245	movq	-0x1b0(%rbp), %rcx
000000010002624c	movq	%rcx, 0x18(%rax)
0000000100026250	movq	-0x1b8(%rbp), %rcx
0000000100026257	movq	%rcx, 0x10(%rax)
000000010002625b	movq	-0x1c8(%rbp), %rcx
0000000100026262	movq	-0x1c0(%rbp), %rdx
0000000100026269	movq	%rdx, 0x8(%rax)
000000010002626d	movq	%rcx, (%rax)
0000000100026270	movq	%rax, (%rbx)
0000000100026273	movb	$0x0, 0x8(%rbx)
0000000100026277	movq	%rbx, %rax
000000010002627a	addq	$0x1a8, %rsp                    ## imm = 0x1A8
0000000100026281	popq	%rbx
0000000100026282	popq	%r12
0000000100026284	popq	%r13
0000000100026286	popq	%r14
0000000100026288	popq	%r15
000000010002628a	popq	%rbp
000000010002628b	retq
000000010002628c	movl	$0x8, %edi
0000000100026291	movl	$0x30, %esi
0000000100026296	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002629b	ud2
000000010002629d	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
00000001000262a2	movq	%rax, %rbx
00000001000262a5	leaq	-0x1c8(%rbp), %rdi
00000001000262ac	callq	__ZN4core3ptr82drop_in_place$LT$alloc..sync..ArcInner$LT$std..sys..unix..fs..InnerReadDir$GT$$GT$17hd9d04299696c77b2E ## core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$std..sys..unix..fs..InnerReadDir$GT$$GT$::hd9d04299696c77b2
00000001000262b1	movq	%rbx, %rdi
00000001000262b4	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000262b9	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000262be	nop
__ZN68_$LT$std..sys..unix..os_str..Slice$u20$as$u20$core..fmt..Display$GT$3fmt17h369636da9f1ea90dE:
00000001000262c0	pushq	%rbp
00000001000262c1	movq	%rsp, %rbp
00000001000262c4	pushq	%r15
00000001000262c6	pushq	%r14
00000001000262c8	pushq	%r13
00000001000262ca	pushq	%r12
00000001000262cc	pushq	%rbx
00000001000262cd	subq	$0x58, %rsp
00000001000262d1	movq	%rdx, %rbx
00000001000262d4	testq	%rsi, %rsi
00000001000262d7	je	0x100026389
00000001000262dd	callq	__ZN4core3str5lossy10Utf8Chunks3new17h9a5c7d169aa2de52E ## core::str::lossy::Utf8Chunks::new::h9a5c7d169aa2de52
00000001000262e2	movq	%rax, -0x38(%rbp)
00000001000262e6	movq	%rdx, -0x30(%rbp)
00000001000262ea	leaq	-0x58(%rbp), %rdi
00000001000262ee	leaq	-0x38(%rbp), %rsi
00000001000262f2	callq	__ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc340660218f074abE ## _$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hc340660218f074ab
00000001000262f7	cmpq	$0x0, -0x58(%rbp)
00000001000262fc	je	0x100026384
0000000100026302	leaq	-0x78(%rbp), %r14
0000000100026306	leaq	-0x38(%rbp), %r12
000000010002630a	nopw	(%rax,%rax)
0000000100026310	movq	-0x40(%rbp), %rax
0000000100026314	movq	%rax, -0x60(%rbp)
0000000100026318	movq	-0x48(%rbp), %rax
000000010002631c	movq	%rax, -0x68(%rbp)
0000000100026320	movq	-0x58(%rbp), %rax
0000000100026324	movq	-0x50(%rbp), %rcx
0000000100026328	movq	%rcx, -0x70(%rbp)
000000010002632c	movq	%rax, -0x78(%rbp)
0000000100026330	movq	%r14, %rdi
0000000100026333	callq	__ZN4core3str5lossy9Utf8Chunk5valid17hccdc9e27ad836984E ## core::str::lossy::Utf8Chunk::valid::hccdc9e27ad836984
0000000100026338	movq	%rax, %r15
000000010002633b	movq	%rdx, %r13
000000010002633e	movq	%r14, %rdi
0000000100026341	callq	__ZN4core3str5lossy9Utf8Chunk7invalid17he07223169c69df7bE ## core::str::lossy::Utf8Chunk::invalid::he07223169c69df7b
0000000100026346	testq	%rdx, %rdx
0000000100026349	je	0x1000263a8
000000010002634b	movq	%rbx, %rdi
000000010002634e	movq	%r15, %rsi
0000000100026351	movq	%r13, %rdx
0000000100026354	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100026359	movb	$0x1, %r13b
000000010002635c	testb	%al, %al
000000010002635e	jne	0x1000263b9
0000000100026360	movq	%rbx, %rdi
0000000100026363	movl	$0xfffd, %esi                   ## imm = 0xFFFD
0000000100026368	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
000000010002636d	testb	%al, %al
000000010002636f	jne	0x1000263b9
0000000100026371	leaq	-0x58(%rbp), %rdi
0000000100026375	movq	%r12, %rsi
0000000100026378	callq	__ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc340660218f074abE ## _$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hc340660218f074ab
000000010002637d	cmpq	$0x0, -0x58(%rbp)
0000000100026382	jne	0x100026310
0000000100026384	xorl	%r13d, %r13d
0000000100026387	jmp	0x1000263b9
0000000100026389	leaq	0x1d960(%rip), %rdi
0000000100026390	xorl	%esi, %esi
0000000100026392	movq	%rbx, %rdx
0000000100026395	addq	$0x58, %rsp
0000000100026399	popq	%rbx
000000010002639a	popq	%r12
000000010002639c	popq	%r13
000000010002639e	popq	%r14
00000001000263a0	popq	%r15
00000001000263a2	popq	%rbp
00000001000263a3	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000263a8	movq	%r15, %rdi
00000001000263ab	movq	%r13, %rsi
00000001000263ae	movq	%rbx, %rdx
00000001000263b1	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000263b6	movl	%eax, %r13d
00000001000263b9	movl	%r13d, %eax
00000001000263bc	addq	$0x58, %rsp
00000001000263c0	popq	%rbx
00000001000263c1	popq	%r12
00000001000263c3	popq	%r13
00000001000263c5	popq	%r14
00000001000263c7	popq	%r15
00000001000263c9	popq	%rbp
00000001000263ca	retq
00000001000263cb	nopl	(%rax,%rax)
__ZN3std3sys4unix6os_str3Buf11into_string17h172054c7e1d77ea8E:
00000001000263d0	pushq	%rbp
00000001000263d1	movq	%rsp, %rbp
00000001000263d4	pushq	%r14
00000001000263d6	pushq	%rbx
00000001000263d7	subq	$0x60, %rsp
00000001000263db	movq	%rsi, %r14
00000001000263de	movq	%rdi, %rbx
00000001000263e1	movq	0x10(%rsi), %rdx
00000001000263e5	movq	%rdx, -0x60(%rbp)
00000001000263e9	movq	(%rsi), %rsi
00000001000263ec	movq	0x8(%r14), %rax
00000001000263f0	movq	%rax, -0x68(%rbp)
00000001000263f4	movq	%rsi, -0x70(%rbp)
00000001000263f8	leaq	-0x58(%rbp), %rdi
00000001000263fc	callq	__ZN4core3str8converts9from_utf817h1af6699b7ded4823E ## core::str::converts::from_utf8::h1af6699b7ded4823
0000000100026401	cmpq	$0x0, -0x58(%rbp)
0000000100026406	je	0x100026492
000000010002640c	movq	-0x50(%rbp), %rax
0000000100026410	movzbl	-0x48(%rbp), %ecx
0000000100026414	movl	-0x47(%rbp), %edx
0000000100026417	movl	%edx, -0x18(%rbp)
000000010002641a	movl	-0x44(%rbp), %edx
000000010002641d	movl	%edx, -0x15(%rbp)
0000000100026420	movq	(%r14), %rdx
0000000100026423	movq	0x8(%r14), %rsi
0000000100026427	movq	%rdx, -0x30(%rbp)
000000010002642b	movq	%rsi, -0x28(%rbp)
000000010002642f	movq	0x10(%r14), %rdx
0000000100026433	movq	%rdx, -0x20(%rbp)
0000000100026437	cmpb	$0x2, %cl
000000010002643a	je	0x1000264a9
000000010002643c	movq	0x10(%r14), %rdx
0000000100026440	movq	%rdx, -0x48(%rbp)
0000000100026444	movq	(%r14), %rdx
0000000100026447	movq	0x8(%r14), %rsi
000000010002644b	movq	%rsi, -0x50(%rbp)
000000010002644f	movq	%rdx, -0x58(%rbp)
0000000100026453	movq	%rax, -0x40(%rbp)
0000000100026457	movb	%cl, -0x38(%rbp)
000000010002645a	movl	-0x18(%rbp), %eax
000000010002645d	movl	-0x15(%rbp), %ecx
0000000100026460	movl	%eax, -0x37(%rbp)
0000000100026463	movl	%ecx, -0x34(%rbp)
0000000100026466	leaq	-0x70(%rbp), %rdi
000000010002646a	leaq	-0x58(%rbp), %rsi
000000010002646e	callq	__ZN5alloc6string13FromUtf8Error10into_bytes17hd4b354ab290f9941E ## alloc::string::FromUtf8Error::into_bytes::hd4b354ab290f9941
0000000100026473	movq	-0x60(%rbp), %rax
0000000100026477	movq	%rax, 0x18(%rbx)
000000010002647b	movq	-0x70(%rbp), %rax
000000010002647f	movq	-0x68(%rbp), %rcx
0000000100026483	movq	%rcx, 0x10(%rbx)
0000000100026487	movq	%rax, 0x8(%rbx)
000000010002648b	movl	$0x1, %eax
0000000100026490	jmp	0x1000264c3
0000000100026492	movq	0x10(%r14), %rax
0000000100026496	movq	%rax, -0x20(%rbp)
000000010002649a	movq	(%r14), %rax
000000010002649d	movq	0x8(%r14), %rcx
00000001000264a1	movq	%rcx, -0x28(%rbp)
00000001000264a5	movq	%rax, -0x30(%rbp)
00000001000264a9	movq	-0x20(%rbp), %rax
00000001000264ad	movq	%rax, 0x18(%rbx)
00000001000264b1	movq	-0x30(%rbp), %rax
00000001000264b5	movq	-0x28(%rbp), %rcx
00000001000264b9	movq	%rcx, 0x10(%rbx)
00000001000264bd	movq	%rax, 0x8(%rbx)
00000001000264c1	xorl	%eax, %eax
00000001000264c3	movq	%rax, (%rbx)
00000001000264c6	movq	%rbx, %rax
00000001000264c9	addq	$0x60, %rsp
00000001000264cd	popq	%rbx
00000001000264ce	popq	%r14
00000001000264d0	popq	%rbp
00000001000264d1	retq
00000001000264d2	movq	%rax, %rbx
00000001000264d5	leaq	-0x70(%rbp), %rdi
00000001000264d9	callq	__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9ac2a42193cc6e4aE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$::h9ac2a42193cc6e4a
00000001000264de	movq	%rbx, %rdi
00000001000264e1	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000264e6	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000264eb	nopl	(%rax,%rax)
__ZN3std3sys4unix14stack_overflow3imp14signal_handler17h09e630a5a350602cE:
00000001000264f0	pushq	%rbp
00000001000264f1	movq	%rsp, %rbp
00000001000264f4	pushq	%r15
00000001000264f6	pushq	%r14
00000001000264f8	pushq	%r13
00000001000264fa	pushq	%r12
00000001000264fc	pushq	%rbx
00000001000264fd	subq	$0x58, %rsp
0000000100026501	movq	%rsi, %r14
0000000100026504	movl	%edi, %ebx
0000000100026506	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
000000010002650d	callq	*(%rdi)
000000010002650f	movzbl	(%rax), %eax
0000000100026512	cmpl	$0x1, %eax
0000000100026515	je	0x1000265af
000000010002651b	testl	%eax, %eax
000000010002651d	jne	0x10002660a
0000000100026523	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
000000010002652a	callq	*(%rdi)
000000010002652c	cmpb	$0x1, (%rax)
000000010002652f	je	0x10002654b
0000000100026531	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::run_dtors::h1b9508fcca531689
0000000100026538	xorl	%esi, %esi
000000010002653a	callq	0x10004276c                     ## symbol stub for: __tlv_atexit
000000010002653f	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100026546	callq	*(%rdi)
0000000100026548	movb	$0x1, (%rax)
000000010002654b	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100026552	callq	*(%rdi)
0000000100026554	movq	0x10(%rax), %rcx
0000000100026558	cmpq	0x8(%rax), %rcx
000000010002655c	jne	0x100026573
000000010002655e	movq	%rcx, %rdi
0000000100026561	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h7504180b2f81aa9c
0000000100026566	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
000000010002656d	callq	*(%rdi)
000000010002656f	movq	0x10(%rax), %rcx
0000000100026573	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
000000010002657a	callq	*(%rdi)
000000010002657c	movq	%rax, %rdx
000000010002657f	movq	(%rax), %rsi
0000000100026582	shlq	$0x4, %rcx
0000000100026586	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
000000010002658d	callq	*(%rdi)
000000010002658f	movq	%rax, (%rsi,%rcx)
0000000100026593	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit7destroy17h7f1d3092d394857dE(%rip), %rax ## std::sys_common::thread_info::THREAD_INFO::__getit::destroy::h7f1d3092d394857d
000000010002659a	movq	%rax, 0x8(%rsi,%rcx)
000000010002659f	incq	0x10(%rdx)
00000001000265a3	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
00000001000265aa	callq	*(%rdi)
00000001000265ac	movb	$0x1, (%rax)
00000001000265af	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
00000001000265b6	callq	*(%rdi)
00000001000265b8	cmpq	$0x0, (%rax)
00000001000265bc	jne	0x1000266a6
00000001000265c2	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
00000001000265c9	callq	*(%rdi)
00000001000265cb	movq	$-0x1, (%rax)
00000001000265d2	movq	0x8(%rax), %rcx
00000001000265d6	testq	%rcx, %rcx
00000001000265d9	je	0x10002660f
00000001000265db	cmpl	$0x2, %ecx
00000001000265de	jne	0x100026614
00000001000265e0	xorl	%edi, %edi
00000001000265e2	callq	__ZN3std6thread6Thread3new17h0a35214ffb5d302cE ## std::thread::Thread::new::h0a35214ffb5d302c
00000001000265e7	movq	%rax, %rcx
00000001000265ea	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
00000001000265f1	callq	*(%rdi)
00000001000265f3	movq	$0x0, 0x8(%rax)
00000001000265fb	movq	%rcx, 0x20(%rax)
00000001000265ff	movq	(%rax), %rcx
0000000100026602	incq	%rcx
0000000100026605	xorl	%r12d, %r12d
0000000100026608	jmp	0x10002662d
000000010002660a	xorl	%r12d, %r12d
000000010002660d	jmp	0x100026639
000000010002660f	movq	%rcx, %r12
0000000100026612	jmp	0x10002662d
0000000100026614	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
000000010002661b	callq	*(%rdi)
000000010002661d	movq	0x10(%rax), %r13
0000000100026621	movq	0x18(%rax), %r15
0000000100026625	movl	$0x1, %r12d
000000010002662b	xorl	%ecx, %ecx
000000010002662d	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100026634	callq	*(%rdi)
0000000100026636	movq	%rcx, (%rax)
0000000100026639	movq	%r14, %rdi
000000010002663c	callq	__ZN4libc4unix3bsd5apple9siginfo_t7si_addr17h6e20e9ae5f88908dE ## libc::unix::bsd::apple::siginfo_t::si_addr::h6e20e9ae5f88908d
0000000100026641	testq	%r12, %r12
0000000100026644	sete	%cl
0000000100026647	cmpq	%rax, %r13
000000010002664a	setbe	%dl
000000010002664d	testq	%r12, %r12
0000000100026650	je	0x10002665b
0000000100026652	orb	%dl, %cl
0000000100026654	je	0x10002665b
0000000100026656	cmpq	%rax, %r15
0000000100026659	ja	0x100026687
000000010002665b	movq	$0x0, -0x50(%rbp)
0000000100026663	movq	$0x0, -0x58(%rbp)
000000010002666b	leaq	-0x58(%rbp), %rsi
000000010002666f	movl	%ebx, %edi
0000000100026671	xorl	%edx, %edx
0000000100026673	callq	0x10004285c                     ## symbol stub for: _sigaction
0000000100026678	addq	$0x58, %rsp
000000010002667c	popq	%rbx
000000010002667d	popq	%r12
000000010002667f	popq	%r13
0000000100026681	popq	%r14
0000000100026683	popq	%r15
0000000100026685	popq	%rbp
0000000100026686	retq
0000000100026687	callq	__ZN3std6thread7current17h204a63d2bfe370a2E ## std::thread::current::h204a63d2bfe370a2
000000010002668c	movq	%rax, %rbx
000000010002668f	movq	0x18(%rax), %rax
0000000100026693	testq	%rax, %rax
0000000100026696	jne	0x1000266cb
0000000100026698	movl	$0x9, %ecx
000000010002669d	leaq	0x1e5e7(%rip), %rax
00000001000266a4	jmp	0x1000266d2
00000001000266a6	leaq	0x1d603(%rip), %rdi
00000001000266ad	leaq	0x21f74(%rip), %rcx
00000001000266b4	leaq	0x22865(%rip), %r8
00000001000266bb	leaq	-0x58(%rbp), %rdx
00000001000266bf	movl	$0x10, %esi
00000001000266c4	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
00000001000266c9	ud2
00000001000266cb	movq	0x20(%rbx), %rcx
00000001000266cf	decq	%rcx
00000001000266d2	movq	%rax, -0x78(%rbp)
00000001000266d6	movq	%rcx, -0x70(%rbp)
00000001000266da	leaq	-0x78(%rbp), %rax
00000001000266de	movq	%rax, -0x68(%rbp)
00000001000266e2	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h5e05cf50b1eb1674E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h5e05cf50b1eb1674
00000001000266e9	movq	%rax, -0x60(%rbp)
00000001000266ed	leaq	0x22c94(%rip), %rax
00000001000266f4	movq	%rax, -0x58(%rbp)
00000001000266f8	movq	$0x2, -0x50(%rbp)
0000000100026700	movq	$0x0, -0x38(%rbp)
0000000100026708	leaq	-0x68(%rbp), %rax
000000010002670c	movq	%rax, -0x48(%rbp)
0000000100026710	movq	$0x1, -0x40(%rbp)
0000000100026718	leaq	-0x58(%rbp), %rdi
000000010002671c	leaq	-0x58(%rbp), %r14
0000000100026720	movq	%r14, %rsi
0000000100026723	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100026728	movq	%rax, %rdi
000000010002672b	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
0000000100026730	lock
0000000100026731	decq	(%rbx)
0000000100026734	jne	0x10002673e
0000000100026736	movq	%rbx, %rdi
0000000100026739	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
000000010002673e	leaq	0x22c63(%rip), %rax
0000000100026745	movq	%rax, -0x58(%rbp)
0000000100026749	movq	$0x1, -0x50(%rbp)
0000000100026751	movq	$0x0, -0x38(%rbp)
0000000100026759	movq	%r14, -0x48(%rbp)
000000010002675d	movq	$0x0, -0x40(%rbp)
0000000100026765	leaq	-0x58(%rbp), %rsi
0000000100026769	movq	%r14, %rdi
000000010002676c	callq	__ZN3std2io5Write9write_fmt17h9bc75e1a1578f329E ## std::io::Write::write_fmt::h9bc75e1a1578f329
0000000100026771	movq	%rax, %rdi
0000000100026774	callq	__ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h179015ebfe214a05E ## core::ptr::drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$::h179015ebfe214a05
0000000100026779	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
000000010002677e	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100026785	callq	*(%rdi)
0000000100026787	movq	%rax, %rdi
000000010002678a	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
000000010002678f	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100026794	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100026799	nopl	(%rax)
__ZN3std3sys4unix14stack_overflow3imp12make_handler17hdba3d388867d2683E:
00000001000267a0	pushq	%rbp
00000001000267a1	movq	%rsp, %rbp
00000001000267a4	pushq	%rbx
00000001000267a5	subq	$0x68, %rsp
00000001000267a9	movzbl	__ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17h014cc4cca5cc90b8E.0(%rip), %eax ## std::sys::unix::stack_overflow::imp::NEED_ALTSTACK::h014cc4cca5cc90b8 (.0)
00000001000267b0	testb	%al, %al
00000001000267b2	je	0x100026862
00000001000267b8	xorps	%xmm0, %xmm0
00000001000267bb	movaps	%xmm0, -0x30(%rbp)
00000001000267bf	movq	$0x0, -0x20(%rbp)
00000001000267c7	xorl	%ebx, %ebx
00000001000267c9	leaq	-0x30(%rbp), %rsi
00000001000267cd	xorl	%edi, %edi
00000001000267cf	callq	0x100042862                     ## symbol stub for: _sigaltstack
00000001000267d4	testb	$0x4, -0x20(%rbp)
00000001000267d8	je	0x100026864
00000001000267de	movl	$0x1d, %edi
00000001000267e3	callq	0x10004287a                     ## symbol stub for: _sysconf
00000001000267e8	leaq	0x20000(%rax), %rsi
00000001000267ef	xorl	%edi, %edi
00000001000267f1	movl	$0x3, %edx
00000001000267f6	movl	$0x1002, %ecx                   ## imm = 0x1002
00000001000267fb	movl	$0xffffffff, %r8d               ## imm = 0xFFFFFFFF
0000000100026801	xorl	%r9d, %r9d
0000000100026804	callq	0x1000427d2                     ## symbol stub for: _mmap
0000000100026809	cmpq	$-0x1, %rax
000000010002680d	je	0x10002686e
000000010002680f	movq	%rax, %rbx
0000000100026812	movl	$0x1d, %edi
0000000100026817	callq	0x10004287a                     ## symbol stub for: _sysconf
000000010002681c	movq	%rbx, %rdi
000000010002681f	movq	%rax, %rsi
0000000100026822	xorl	%edx, %edx
0000000100026824	callq	0x1000427d8                     ## symbol stub for: _mprotect
0000000100026829	testl	%eax, %eax
000000010002682b	jne	0x1000268d1
0000000100026831	movl	$0x1d, %edi
0000000100026836	callq	0x10004287a                     ## symbol stub for: _sysconf
000000010002683b	addq	%rax, %rbx
000000010002683e	movq	%rbx, -0x30(%rbp)
0000000100026842	movq	$0x20000, -0x28(%rbp)           ## imm = 0x20000
000000010002684a	movl	$0x0, -0x20(%rbp)
0000000100026851	leaq	-0x30(%rbp), %rdi
0000000100026855	xorl	%esi, %esi
0000000100026857	callq	0x100042862                     ## symbol stub for: _sigaltstack
000000010002685c	movq	-0x30(%rbp), %rbx
0000000100026860	jmp	0x100026864
0000000100026862	xorl	%ebx, %ebx
0000000100026864	movq	%rbx, %rax
0000000100026867	addq	$0x68, %rsp
000000010002686b	popq	%rbx
000000010002686c	popq	%rbp
000000010002686d	retq
000000010002686e	callq	0x10004274e                     ## symbol stub for: ___error
0000000100026873	movl	(%rax), %eax
0000000100026875	shlq	$0x20, %rax
0000000100026879	orq	$0x2, %rax
000000010002687d	movq	%rax, -0x10(%rbp)
0000000100026881	leaq	-0x10(%rbp), %rax
0000000100026885	movq	%rax, -0x40(%rbp)
0000000100026889	leaq	__ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h285969cfd8ae8b36E(%rip), %rax ## _$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$::fmt::h285969cfd8ae8b36
0000000100026890	movq	%rax, -0x38(%rbp)
0000000100026894	leaq	0x22b45(%rip), %rax
000000010002689b	movq	%rax, -0x70(%rbp)
000000010002689f	movq	$0x1, -0x68(%rbp)
00000001000268a7	movq	$0x0, -0x50(%rbp)
00000001000268af	leaq	-0x40(%rbp), %rax
00000001000268b3	movq	%rax, -0x60(%rbp)
00000001000268b7	movq	$0x1, -0x58(%rbp)
00000001000268bf	leaq	0x22b2a(%rip), %rsi
00000001000268c6	leaq	-0x70(%rbp), %rdi
00000001000268ca	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000268cf	jmp	0x100026932
00000001000268d1	callq	0x10004274e                     ## symbol stub for: ___error
00000001000268d6	movl	(%rax), %eax
00000001000268d8	shlq	$0x20, %rax
00000001000268dc	orq	$0x2, %rax
00000001000268e0	movq	%rax, -0x10(%rbp)
00000001000268e4	leaq	-0x10(%rbp), %rax
00000001000268e8	movq	%rax, -0x40(%rbp)
00000001000268ec	leaq	__ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h285969cfd8ae8b36E(%rip), %rax ## _$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$::fmt::h285969cfd8ae8b36
00000001000268f3	movq	%rax, -0x38(%rbp)
00000001000268f7	leaq	0x22aba(%rip), %rax
00000001000268fe	movq	%rax, -0x70(%rbp)
0000000100026902	movq	$0x1, -0x68(%rbp)
000000010002690a	movq	$0x0, -0x50(%rbp)
0000000100026912	leaq	-0x40(%rbp), %rax
0000000100026916	movq	%rax, -0x60(%rbp)
000000010002691a	movq	$0x1, -0x58(%rbp)
0000000100026922	leaq	0x22a9f(%rip), %rsi
0000000100026929	leaq	-0x70(%rbp), %rdi
000000010002692d	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100026932	ud2
0000000100026934	movq	%rax, %rbx
0000000100026937	leaq	-0x10(%rbp), %rdi
000000010002693b	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
0000000100026940	jmp	0x10002694e
0000000100026942	movq	%rax, %rbx
0000000100026945	leaq	-0x10(%rbp), %rdi
0000000100026949	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
000000010002694e	movq	%rbx, %rdi
0000000100026951	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100026956	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002695b	nopl	(%rax,%rax)
__ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17hfe06a7594dcf342aE:
0000000100026960	pushq	%rbp
0000000100026961	movq	%rsp, %rbp
0000000100026964	pushq	%rbx
0000000100026965	pushq	%rax
0000000100026966	movq	%rdi, %rbx
0000000100026969	cmpq	$0x7ffffffe, %rcx               ## imm = 0x7FFFFFFE
0000000100026970	movl	$0x7ffffffe, %eax               ## imm = 0x7FFFFFFE
0000000100026975	cmovbq	%rcx, %rax
0000000100026979	movl	$0x2, %edi
000000010002697e	movq	%rdx, %rsi
0000000100026981	movq	%rax, %rdx
0000000100026984	callq	0x100042880                     ## symbol stub for: _write
0000000100026989	cmpq	$-0x1, %rax
000000010002698d	je	0x100026997
000000010002698f	movq	%rax, 0x8(%rbx)
0000000100026993	xorl	%eax, %eax
0000000100026995	jmp	0x1000269af
0000000100026997	callq	0x10004274e                     ## symbol stub for: ___error
000000010002699c	movl	(%rax), %eax
000000010002699e	shlq	$0x20, %rax
00000001000269a2	orq	$0x2, %rax
00000001000269a6	movq	%rax, 0x8(%rbx)
00000001000269aa	movl	$0x1, %eax
00000001000269af	movq	%rax, (%rbx)
00000001000269b2	movq	%rbx, %rax
00000001000269b5	addq	$0x8, %rsp
00000001000269b9	popq	%rbx
00000001000269ba	popq	%rbp
00000001000269bb	retq
00000001000269bc	nopl	(%rax)
__ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$14write_vectored17h999521ac108de4feE:
00000001000269c0	pushq	%rbp
00000001000269c1	movq	%rsp, %rbp
00000001000269c4	pushq	%rbx
00000001000269c5	pushq	%rax
00000001000269c6	movq	%rdi, %rbx
00000001000269c9	cmpq	$0x400, %rcx                    ## imm = 0x400
00000001000269d0	movl	$0x400, %eax                    ## imm = 0x400
00000001000269d5	cmovbq	%rcx, %rax
00000001000269d9	movl	$0x2, %edi
00000001000269de	movq	%rdx, %rsi
00000001000269e1	movl	%eax, %edx
00000001000269e3	callq	0x100042886                     ## symbol stub for: _writev
00000001000269e8	cmpq	$-0x1, %rax
00000001000269ec	je	0x1000269f6
00000001000269ee	movq	%rax, 0x8(%rbx)
00000001000269f2	xorl	%eax, %eax
00000001000269f4	jmp	0x100026a0e
00000001000269f6	callq	0x10004274e                     ## symbol stub for: ___error
00000001000269fb	movl	(%rax), %eax
00000001000269fd	shlq	$0x20, %rax
0000000100026a01	orq	$0x2, %rax
0000000100026a05	movq	%rax, 0x8(%rbx)
0000000100026a09	movl	$0x1, %eax
0000000100026a0e	movq	%rax, (%rbx)
0000000100026a11	movq	%rbx, %rax
0000000100026a14	addq	$0x8, %rsp
0000000100026a18	popq	%rbx
0000000100026a19	popq	%rbp
0000000100026a1a	retq
0000000100026a1b	nopl	(%rax,%rax)
__ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$17is_write_vectored17hb26777ab70657218E:
0000000100026a20	pushq	%rbp
0000000100026a21	movq	%rsp, %rbp
0000000100026a24	movb	$0x1, %al
0000000100026a26	popq	%rbp
0000000100026a27	retq
0000000100026a28	nopl	(%rax,%rax)
__ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5flush17h616c98c132c8ee27E:
0000000100026a30	pushq	%rbp
0000000100026a31	movq	%rsp, %rbp
0000000100026a34	xorl	%eax, %eax
0000000100026a36	popq	%rbp
0000000100026a37	retq
0000000100026a38	nopl	(%rax,%rax)
__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E:
0000000100026a40	pushq	%rbp
0000000100026a41	movq	%rsp, %rbp
0000000100026a44	pushq	%r15
0000000100026a46	pushq	%r14
0000000100026a48	pushq	%r12
0000000100026a4a	pushq	%rbx
0000000100026a4b	nopl	(%rax,%rax)
0000000100026a50	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100026a57	callq	*(%rdi)
0000000100026a59	movq	(%rax), %rbx
0000000100026a5c	movq	0x8(%rax), %r14
0000000100026a60	movq	0x10(%rax), %r15
0000000100026a64	movq	$0x8, (%rax)
0000000100026a6b	movq	$0x0, 0x8(%rax)
0000000100026a73	movq	$0x0, 0x10(%rax)
0000000100026a7b	testq	%r15, %r15
0000000100026a7e	je	0x100026abd
0000000100026a80	shlq	$0x4, %r15
0000000100026a84	addq	%rbx, %r15
0000000100026a87	movq	%rbx, %r12
0000000100026a8a	nopw	(%rax,%rax)
0000000100026a90	movq	(%r12), %rdi
0000000100026a94	callq	*0x8(%r12)
0000000100026a99	addq	$0x10, %r12
0000000100026a9d	cmpq	%r15, %r12
0000000100026aa0	jne	0x100026a90
0000000100026aa2	testq	%r14, %r14
0000000100026aa5	je	0x100026a50
0000000100026aa7	shlq	$0x4, %r14
0000000100026aab	movl	$0x8, %edx
0000000100026ab0	movq	%rbx, %rdi
0000000100026ab3	movq	%r14, %rsi
0000000100026ab6	callq	___rust_dealloc
0000000100026abb	jmp	0x100026a50
0000000100026abd	testq	%r14, %r14
0000000100026ac0	je	0x100026ade
0000000100026ac2	shlq	$0x4, %r14
0000000100026ac6	movl	$0x8, %edx
0000000100026acb	movq	%rbx, %rdi
0000000100026ace	movq	%r14, %rsi
0000000100026ad1	popq	%rbx
0000000100026ad2	popq	%r12
0000000100026ad4	popq	%r14
0000000100026ad6	popq	%r15
0000000100026ad8	popq	%rbp
0000000100026ad9	jmp	___rust_dealloc
0000000100026ade	popq	%rbx
0000000100026adf	popq	%r12
0000000100026ae1	popq	%r14
0000000100026ae3	popq	%r15
0000000100026ae5	popq	%rbp
0000000100026ae6	retq
0000000100026ae7	nopw	(%rax,%rax)
__ZN3std3sys4unix17decode_error_kind17h0dff83826cf4eeb8E:
0000000100026af0	decl	%edi
0000000100026af2	movb	$0x28, %al
0000000100026af4	cmpl	$0x4d, %edi
0000000100026af7	ja	0x100026b0c
0000000100026af9	pushq	%rbp
0000000100026afa	movq	%rsp, %rbp
0000000100026afd	movslq	%edi, %rax
0000000100026b00	leaq	0x1edf9(%rip), %rcx
0000000100026b07	movzbl	(%rax,%rcx), %eax
0000000100026b0b	popq	%rbp
0000000100026b0c	retq
0000000100026b0d	nopl	(%rax)
__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E:
0000000100026b10	pushq	%rbp
0000000100026b11	movq	%rsp, %rbp
0000000100026b14	callq	0x100042772                     ## symbol stub for: _abort
0000000100026b19	nopl	(%rax)
__ZN108_$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$u20$as$u20$std..sys_common..lazy_box..LazyInit$GT$4init17h910a66c68d8d4cb0E:
0000000100026b20	pushq	%rbp
0000000100026b21	movq	%rsp, %rbp
0000000100026b24	pushq	%r14
0000000100026b26	pushq	%rbx
0000000100026b27	subq	$0x50, %rsp
0000000100026b2b	movq	$0x0, -0x20(%rbp)
0000000100026b33	movq	$0x0, -0x28(%rbp)
0000000100026b3b	movq	$0x0, -0x30(%rbp)
0000000100026b43	movq	$0x0, -0x38(%rbp)
0000000100026b4b	movq	$0x0, -0x40(%rbp)
0000000100026b53	movq	$0x0, -0x48(%rbp)
0000000100026b5b	movq	$0x0, -0x50(%rbp)
0000000100026b63	movq	$0x32aaaba7, -0x58(%rbp)        ## imm = 0x32AAABA7
0000000100026b6b	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100026b72	movzbl	(%rax), %eax
0000000100026b75	movl	$0x40, %edi
0000000100026b7a	movl	$0x8, %esi
0000000100026b7f	callq	___rust_alloc
0000000100026b84	testq	%rax, %rax
0000000100026b87	je	0x100026c14
0000000100026b8d	movq	%rax, %rbx
0000000100026b90	movq	$0x0, 0x38(%rax)
0000000100026b98	movq	$0x0, 0x30(%rax)
0000000100026ba0	movq	$0x0, 0x28(%rax)
0000000100026ba8	movq	$0x0, 0x20(%rax)
0000000100026bb0	movq	$0x0, 0x18(%rax)
0000000100026bb8	movq	$0x0, 0x10(%rax)
0000000100026bc0	movq	$0x0, 0x8(%rax)
0000000100026bc8	movq	$0x32aaaba7, (%rax)             ## imm = 0x32AAABA7
0000000100026bcf	leaq	-0x58(%rbp), %rdi
0000000100026bd3	callq	0x100042826                     ## symbol stub for: _pthread_mutexattr_init
0000000100026bd8	testl	%eax, %eax
0000000100026bda	jne	0x100026c28
0000000100026bdc	leaq	-0x58(%rbp), %rdi
0000000100026be0	xorl	%esi, %esi
0000000100026be2	callq	0x10004282c                     ## symbol stub for: _pthread_mutexattr_settype
0000000100026be7	testl	%eax, %eax
0000000100026be9	jne	0x100026c59
0000000100026beb	leaq	-0x58(%rbp), %rsi
0000000100026bef	movq	%rbx, %rdi
0000000100026bf2	callq	0x100042808                     ## symbol stub for: _pthread_mutex_init
0000000100026bf7	testl	%eax, %eax
0000000100026bf9	jne	0x100026c8a
0000000100026bff	leaq	-0x58(%rbp), %rdi
0000000100026c03	callq	0x100042820                     ## symbol stub for: _pthread_mutexattr_destroy
0000000100026c08	movq	%rbx, %rax
0000000100026c0b	addq	$0x50, %rsp
0000000100026c0f	popq	%rbx
0000000100026c10	popq	%r14
0000000100026c12	popq	%rbp
0000000100026c13	retq
0000000100026c14	movl	$0x8, %edi
0000000100026c19	movl	$0x40, %esi
0000000100026c1e	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100026c23	jmp	0x100026cb9
0000000100026c28	shlq	$0x20, %rax
0000000100026c2c	orq	$0x2, %rax
0000000100026c30	movq	%rax, -0x18(%rbp)
0000000100026c34	leaq	0x1d2da(%rip), %rdi
0000000100026c3b	leaq	0x219a6(%rip), %rcx
0000000100026c42	leaq	0x2284f(%rip), %r8
0000000100026c49	leaq	-0x18(%rbp), %rdx
0000000100026c4d	movl	$0x2b, %esi
0000000100026c52	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100026c57	jmp	0x100026cb9
0000000100026c59	shlq	$0x20, %rax
0000000100026c5d	orq	$0x2, %rax
0000000100026c61	movq	%rax, -0x18(%rbp)
0000000100026c65	leaq	0x1d2a9(%rip), %rdi
0000000100026c6c	leaq	0x21975(%rip), %rcx
0000000100026c73	leaq	0x22836(%rip), %r8
0000000100026c7a	leaq	-0x18(%rbp), %rdx
0000000100026c7e	movl	$0x2b, %esi
0000000100026c83	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100026c88	jmp	0x100026cb9
0000000100026c8a	shlq	$0x20, %rax
0000000100026c8e	orq	$0x2, %rax
0000000100026c92	movq	%rax, -0x18(%rbp)
0000000100026c96	leaq	0x1d278(%rip), %rdi
0000000100026c9d	leaq	0x21944(%rip), %rcx
0000000100026ca4	leaq	0x2281d(%rip), %r8
0000000100026cab	leaq	-0x18(%rbp), %rdx
0000000100026caf	movl	$0x2b, %esi
0000000100026cb4	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100026cb9	ud2
0000000100026cbb	movq	%rax, %r14
0000000100026cbe	leaq	-0x18(%rbp), %rdi
0000000100026cc2	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
0000000100026cc7	jmp	0x100026cda
0000000100026cc9	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100026cce	movq	%rax, %r14
0000000100026cd1	leaq	-0x18(%rbp), %rdi
0000000100026cd5	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
0000000100026cda	leaq	-0x58(%rbp), %rdi
0000000100026cde	callq	__ZN4core3ptr75drop_in_place$LT$std..sys..unix..locks..pthread_mutex..PthreadMutexAttr$GT$17h81eb9abf5a270324E ## core::ptr::drop_in_place$LT$std..sys..unix..locks..pthread_mutex..PthreadMutexAttr$GT$::h81eb9abf5a270324
0000000100026ce3	jmp	0x100026cf6
0000000100026ce5	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100026cea	movq	%rax, %r14
0000000100026ced	leaq	-0x18(%rbp), %rdi
0000000100026cf1	callq	__ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h7f60e87fd709b3aeE ## core::ptr::drop_in_place$LT$std..io..error..Error$GT$::h7f60e87fd709b3ae
0000000100026cf6	movq	%rbx, %rdi
0000000100026cf9	callq	__ZN4core3ptr98drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$GT$$GT$17h6ad273f69b8efddcE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$GT$$GT$::h6ad273f69b8efddc
0000000100026cfe	movq	%r14, %rdi
0000000100026d01	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100026d06	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100026d0b	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100026d10	movq	%rax, %r14
0000000100026d13	leaq	-0x58(%rbp), %rdi
0000000100026d17	callq	__ZN4core3ptr73drop_in_place$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$GT$17hb8f9a1966da7b753E ## core::ptr::drop_in_place$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$GT$::hb8f9a1966da7b753
0000000100026d1c	movq	%r14, %rdi
0000000100026d1f	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100026d24	nopw	%cs:(%rax,%rax)
0000000100026d2e	nop
__ZN3std3sys4unix5locks14pthread_rwlock6RwLock4read17hea9fe8563f9fb3c3E:
0000000100026d30	pushq	%rbp
0000000100026d31	movq	%rsp, %rbp
0000000100026d34	pushq	%rbx
0000000100026d35	subq	$0x48, %rsp
0000000100026d39	movq	(%rdi), %rbx
0000000100026d3c	testq	%rbx, %rbx
0000000100026d3f	je	0x100026d68
0000000100026d41	movq	%rbx, %rdi
0000000100026d44	callq	0x100042838                     ## symbol stub for: _pthread_rwlock_rdlock
0000000100026d49	movl	%eax, -0xc(%rbp)
0000000100026d4c	testl	%eax, %eax
0000000100026d4e	jne	0x100026d72
0000000100026d50	cmpb	$0x0, 0xd0(%rbx)
0000000100026d57	jne	0x100026dbe
0000000100026d59	lock
0000000100026d5a	incq	0xc8(%rbx)
0000000100026d61	addq	$0x48, %rsp
0000000100026d65	popq	%rbx
0000000100026d66	popq	%rbp
0000000100026d67	retq
0000000100026d68	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h90e0eaa82f4e03f2E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h90e0eaa82f4e03f2
0000000100026d6d	movq	%rax, %rbx
0000000100026d70	jmp	0x100026d41
0000000100026d72	cmpl	$0xb, %eax
0000000100026d75	je	0x100026dc6
0000000100026d77	cmpl	$0x23, %eax
0000000100026d7a	jne	0x100026e04
0000000100026d80	leaq	0x227a9(%rip), %rax
0000000100026d87	movq	%rax, -0x40(%rbp)
0000000100026d8b	movq	$0x1, -0x38(%rbp)
0000000100026d93	movq	$0x0, -0x20(%rbp)
0000000100026d9b	leaq	0x1cf4e(%rip), %rax
0000000100026da2	movq	%rax, -0x30(%rbp)
0000000100026da6	movq	$0x0, -0x28(%rbp)
0000000100026dae	leaq	0x2278b(%rip), %rsi
0000000100026db5	leaq	-0x40(%rbp), %rdi
0000000100026db9	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100026dbe	movq	%rbx, %rdi
0000000100026dc1	callq	0x10004283e                     ## symbol stub for: _pthread_rwlock_unlock
0000000100026dc6	leaq	0x2273b(%rip), %rax
0000000100026dcd	movq	%rax, -0x40(%rbp)
0000000100026dd1	movq	$0x1, -0x38(%rbp)
0000000100026dd9	movq	$0x0, -0x20(%rbp)
0000000100026de1	leaq	0x1cf08(%rip), %rax
0000000100026de8	movq	%rax, -0x30(%rbp)
0000000100026dec	movq	$0x0, -0x28(%rbp)
0000000100026df4	leaq	0x2271d(%rip), %rsi
0000000100026dfb	leaq	-0x40(%rbp), %rdi
0000000100026dff	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100026e04	leaq	-0xc(%rbp), %rsi
0000000100026e08	movq	%rsi, -0x50(%rbp)
0000000100026e0c	leaq	__ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h39f715977d295410E(%rip), %rax ## core::fmt::num::_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$::fmt::h39f715977d295410
0000000100026e13	movq	%rax, -0x48(%rbp)
0000000100026e17	leaq	0x226c2(%rip), %rax
0000000100026e1e	movq	%rax, -0x40(%rbp)
0000000100026e22	movq	$0x1, -0x38(%rbp)
0000000100026e2a	leaq	-0x50(%rbp), %rax
0000000100026e2e	movq	%rax, -0x30(%rbp)
0000000100026e32	movq	$0x1, -0x28(%rbp)
0000000100026e3a	movq	$0x0, -0x20(%rbp)
0000000100026e42	leaq	0x1eb2f(%rip), %rdx
0000000100026e49	leaq	0x226a0(%rip), %r8
0000000100026e50	leaq	-0x40(%rbp), %rcx
0000000100026e54	xorl	%edi, %edi
0000000100026e56	callq	__ZN4core9panicking13assert_failed17h04fd3a4c733da442E ## core::panicking::assert_failed::h04fd3a4c733da442
0000000100026e5b	nopl	(%rax,%rax)
__ZN83_$LT$std..sys_common..once..queue..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6e0e7f1101c340a0E:
0000000100026e60	pushq	%rbp
0000000100026e61	movq	%rsp, %rbp
0000000100026e64	pushq	%r14
0000000100026e66	pushq	%rbx
0000000100026e67	subq	$0x40, %rsp
0000000100026e6b	movq	(%rdi), %rcx
0000000100026e6e	movq	0x8(%rdi), %rax
0000000100026e72	xchgq	%rax, (%rcx)
0000000100026e75	movl	%eax, %ecx
0000000100026e77	andl	$0x3, %ecx
0000000100026e7a	movq	%rcx, -0x18(%rbp)
0000000100026e7e	cmpq	$0x2, %rcx
0000000100026e82	jne	0x100026f01
0000000100026e84	addq	$-0x2, %rax
0000000100026e88	jne	0x100026ea8
0000000100026e8a	addq	$0x40, %rsp
0000000100026e8e	popq	%rbx
0000000100026e8f	popq	%r14
0000000100026e91	popq	%rbp
0000000100026e92	retq
0000000100026e93	nopw	%cs:(%rax,%rax)
0000000100026e9d	nopl	(%rax)
0000000100026ea0	movq	%r14, %rax
0000000100026ea3	testq	%r14, %r14
0000000100026ea6	je	0x100026e8a
0000000100026ea8	movq	(%rax), %rbx
0000000100026eab	movq	0x8(%rax), %r14
0000000100026eaf	movq	$0x0, (%rax)
0000000100026eb6	testq	%rbx, %rbx
0000000100026eb9	je	0x100026ee9
0000000100026ebb	movb	$0x1, 0x10(%rax)
0000000100026ebf	movb	$0x1, %al
0000000100026ec1	xchgb	%al, 0x30(%rbx)
0000000100026ec4	cmpb	$-0x1, %al
0000000100026ec6	je	0x100026ed0
0000000100026ec8	lock
0000000100026ec9	decq	(%rbx)
0000000100026ecc	jne	0x100026ea0
0000000100026ece	jmp	0x100026edf
0000000100026ed0	movq	0x28(%rbx), %rdi
0000000100026ed4	callq	0x100042790                     ## symbol stub for: _dispatch_semaphore_signal
0000000100026ed9	lock
0000000100026eda	decq	(%rbx)
0000000100026edd	jne	0x100026ea0
0000000100026edf	movq	%rbx, %rdi
0000000100026ee2	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100026ee7	jmp	0x100026ea0
0000000100026ee9	leaq	0x1ce01(%rip), %rdi
0000000100026ef0	leaq	0x22699(%rip), %rdx
0000000100026ef7	movl	$0x2b, %esi
0000000100026efc	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100026f01	movq	$0x0, -0x48(%rbp)
0000000100026f09	leaq	-0x18(%rbp), %rdi
0000000100026f0d	leaq	-0x48(%rbp), %rsi
0000000100026f11	callq	__ZN4core9panicking13assert_failed17hadb438b5c2e6c647E ## core::panicking::assert_failed::hadb438b5c2e6c647
0000000100026f16	nopw	%cs:(%rax,%rax)
__ZN3std5alloc8rust_oom17h813d09b8765dee8bE:
0000000100026f20	pushq	%rbp
0000000100026f21	movq	%rsp, %rbp
0000000100026f24	movq	__ZN3std5alloc4HOOK17hb02b14334b2b1587E(%rip), %rax ## std::alloc::HOOK::hb02b14334b2b1587
0000000100026f2b	testq	%rax, %rax
0000000100026f2e	leaq	__ZN3std5alloc24default_alloc_error_hook17hc702668403a137d5E(%rip), %rcx ## std::alloc::default_alloc_error_hook::hc702668403a137d5
0000000100026f35	cmovneq	%rax, %rcx
0000000100026f39	callq	*%rcx
0000000100026f3b	callq	__ZN3std7process5abort17hf49bdb1ef04aeee2E ## std::process::abort::hf49bdb1ef04aeee2
___rg_oom:
0000000100026f40	pushq	%rbp
0000000100026f41	movq	%rsp, %rbp
0000000100026f44	movq	%rdi, %rax
0000000100026f47	movq	%rsi, %rdi
0000000100026f4a	movq	%rax, %rsi
0000000100026f4d	callq	__ZN3std5alloc8rust_oom17h813d09b8765dee8bE ## std::alloc::rust_oom::h813d09b8765dee8b
0000000100026f52	nopw	%cs:(%rax,%rax)
0000000100026f5c	nopl	(%rax)
__ZN3std11personality3gcc14find_eh_action28_$u7b$$u7b$closure$u7d$$u7d$17h33dfa67cdf81fd61E:
0000000100026f60	pushq	%rbp
0000000100026f61	movq	%rsp, %rbp
0000000100026f64	movq	(%rdi), %rax
0000000100026f67	movq	(%rax), %rdi
0000000100026f6a	popq	%rbp
0000000100026f6b	jmp	0x10004272a                     ## symbol stub for: __Unwind_GetTextRelBase
__ZN3std11personality3gcc14find_eh_action28_$u7b$$u7b$closure$u7d$$u7d$17h77bb7d64431b9f79E:
0000000100026f70	pushq	%rbp
0000000100026f71	movq	%rsp, %rbp
0000000100026f74	movq	(%rdi), %rax
0000000100026f77	movq	(%rax), %rdi
0000000100026f7a	popq	%rbp
0000000100026f7b	jmp	0x10004270c                     ## symbol stub for: __Unwind_GetDataRelBase
_rust_eh_personality:
0000000100026f80	pushq	%rbp
0000000100026f81	movq	%rsp, %rbp
0000000100026f84	pushq	%r15
0000000100026f86	pushq	%r14
0000000100026f88	pushq	%r13
0000000100026f8a	pushq	%r12
0000000100026f8c	pushq	%rbx
0000000100026f8d	subq	$0x98, %rsp
0000000100026f94	movl	%esi, -0x3c(%rbp)
0000000100026f97	movl	$0x3, -0x34(%rbp)
0000000100026f9e	cmpl	$0x1, %edi
0000000100026fa1	jne	0x100027294
0000000100026fa7	movq	%rcx, -0x60(%rbp)
0000000100026fab	movq	%r8, -0x78(%rbp)
0000000100026faf	movq	%r8, %rdi
0000000100026fb2	movq	%r8, %rbx
0000000100026fb5	callq	0x10004271e                     ## symbol stub for: __Unwind_GetLanguageSpecificData
0000000100026fba	movq	%rax, %r15
0000000100026fbd	movl	$0x0, -0x40(%rbp)
0000000100026fc4	leaq	-0x40(%rbp), %rsi
0000000100026fc8	movq	%rbx, %rdi
0000000100026fcb	callq	0x100042718                     ## symbol stub for: __Unwind_GetIPInfo
0000000100026fd0	movq	%rax, %r14
0000000100026fd3	cmpl	$0x1, -0x40(%rbp)
0000000100026fd7	sbbq	$0x0, %r14
0000000100026fdb	movq	%rbx, -0x68(%rbp)
0000000100026fdf	movq	%rbx, %rdi
0000000100026fe2	callq	0x100042724                     ## symbol stub for: __Unwind_GetRegionStart
0000000100026fe7	leaq	-0x78(%rbp), %rcx
0000000100026feb	movq	%rcx, -0x80(%rbp)
0000000100026fef	movq	%rcx, -0x88(%rbp)
0000000100026ff6	movq	%r14, -0x58(%rbp)
0000000100026ffa	movq	%r14, -0x98(%rbp)
0000000100027001	movq	%rax, %rcx
0000000100027004	movq	%rax, -0x50(%rbp)
0000000100027008	movq	%rax, -0x90(%rbp)
000000010002700f	leaq	-0x80(%rbp), %rax
0000000100027013	movq	%rax, -0xb8(%rbp)
000000010002701a	leaq	0x2259f(%rip), %rax
0000000100027021	movq	%rax, -0xb0(%rbp)
0000000100027028	leaq	-0x88(%rbp), %rax
000000010002702f	movq	%rax, -0xa8(%rbp)
0000000100027036	leaq	0x225b3(%rip), %rax
000000010002703d	movq	%rax, -0xa0(%rbp)
0000000100027044	testq	%r15, %r15
0000000100027047	je	0x100027228
000000010002704d	movzbl	(%r15), %eax
0000000100027051	incq	%r15
0000000100027054	movq	%r15, -0x30(%rbp)
0000000100027058	cmpb	$-0x1, %al
000000010002705a	je	0x100027082
000000010002705c	movzbl	%al, %edx
000000010002705f	leaq	-0x30(%rbp), %rdi
0000000100027063	leaq	-0xb8(%rbp), %rsi
000000010002706a	callq	__ZN3std11personality5dwarf2eh20read_encoded_pointer17h54f879e44fe8b9fbE ## std::personality::dwarf::eh::read_encoded_pointer::h54f879e44fe8b9fb
000000010002706f	movq	%rdx, -0x48(%rbp)
0000000100027073	testq	%rax, %rax
0000000100027076	jne	0x100027294
000000010002707c	movq	-0x30(%rbp), %r15
0000000100027080	jmp	0x10002708a
0000000100027082	movq	-0x50(%rbp), %rax
0000000100027086	movq	%rax, -0x48(%rbp)
000000010002708a	movzbl	(%r15), %eax
000000010002708e	incq	%r15
0000000100027091	movq	%r15, -0x30(%rbp)
0000000100027095	cmpb	$-0x1, %al
0000000100027097	je	0x1000270ae
0000000100027099	nopl	(%rax)
00000001000270a0	cmpb	$0x0, (%r15)
00000001000270a4	leaq	0x1(%r15), %r15
00000001000270a8	js	0x1000270a0
00000001000270aa	movq	%r15, -0x30(%rbp)
00000001000270ae	movzbl	(%r15), %eax
00000001000270b2	incq	%r15
00000001000270b5	movq	%r15, -0x30(%rbp)
00000001000270b9	xorl	%ebx, %ebx
00000001000270bb	xorl	%ecx, %ecx
00000001000270bd	nopl	(%rax)
00000001000270c0	movzbl	(%r15), %edx
00000001000270c4	movl	%edx, %esi
00000001000270c6	andl	$0x7f, %esi
00000001000270c9	shlq	%cl, %rsi
00000001000270cc	incq	%r15
00000001000270cf	orq	%rsi, %rbx
00000001000270d2	addq	$0x7, %rcx
00000001000270d6	testb	%dl, %dl
00000001000270d8	js	0x1000270c0
00000001000270da	movq	%r15, -0x30(%rbp)
00000001000270de	leaq	(%r15,%rbx), %rcx
00000001000270e2	movq	%rcx, -0x70(%rbp)
00000001000270e6	movzbl	%al, %eax
00000001000270e9	movl	%eax, -0x38(%rbp)
00000001000270ec	movq	%r15, %rax
00000001000270ef	nop
00000001000270f0	cmpq	-0x70(%rbp), %rax
00000001000270f4	jae	0x10002727c
00000001000270fa	leaq	-0x30(%rbp), %rdi
00000001000270fe	leaq	-0xb8(%rbp), %rsi
0000000100027105	movl	-0x38(%rbp), %edx
0000000100027108	callq	__ZN3std11personality5dwarf2eh20read_encoded_pointer17h54f879e44fe8b9fbE ## std::personality::dwarf::eh::read_encoded_pointer::h54f879e44fe8b9fb
000000010002710d	testq	%rax, %rax
0000000100027110	cmoveq	%rdx, %r13
0000000100027114	jne	0x100027294
000000010002711a	leaq	-0x30(%rbp), %rdi
000000010002711e	leaq	-0xb8(%rbp), %rsi
0000000100027125	movl	-0x38(%rbp), %edx
0000000100027128	callq	__ZN3std11personality5dwarf2eh20read_encoded_pointer17h54f879e44fe8b9fbE ## std::personality::dwarf::eh::read_encoded_pointer::h54f879e44fe8b9fb
000000010002712d	testq	%rax, %rax
0000000100027130	cmoveq	%rdx, %r12
0000000100027134	jne	0x100027294
000000010002713a	leaq	-0x30(%rbp), %rdi
000000010002713e	leaq	-0xb8(%rbp), %rsi
0000000100027145	movl	-0x38(%rbp), %edx
0000000100027148	callq	__ZN3std11personality5dwarf2eh20read_encoded_pointer17h54f879e44fe8b9fbE ## std::personality::dwarf::eh::read_encoded_pointer::h54f879e44fe8b9fb
000000010002714d	testq	%rax, %rax
0000000100027150	cmoveq	%rdx, %r14
0000000100027154	jne	0x100027294
000000010002715a	movq	-0x30(%rbp), %rax
000000010002715e	xorl	%edx, %edx
0000000100027160	xorl	%ecx, %ecx
0000000100027162	nopw	%cs:(%rax,%rax)
000000010002716c	nopl	(%rax)
0000000100027170	movzbl	(%rax), %esi
0000000100027173	movl	%esi, %edi
0000000100027175	andl	$0x7f, %edi
0000000100027178	shlq	%cl, %rdi
000000010002717b	incq	%rax
000000010002717e	orq	%rdi, %rdx
0000000100027181	addq	$0x7, %rcx
0000000100027185	testb	%sil, %sil
0000000100027188	js	0x100027170
000000010002718a	movq	%rax, -0x30(%rbp)
000000010002718e	movq	-0x50(%rbp), %rcx
0000000100027192	addq	%r13, %rcx
0000000100027195	cmpq	%rcx, -0x58(%rbp)
0000000100027199	jb	0x10002727c
000000010002719f	addq	%r12, %rcx
00000001000271a2	cmpq	%rcx, -0x58(%rbp)
00000001000271a6	jae	0x1000270f0
00000001000271ac	testq	%r14, %r14
00000001000271af	je	0x100027228
00000001000271b1	addq	-0x48(%rbp), %r14
00000001000271b5	testq	%rdx, %rdx
00000001000271b8	je	0x1000272ba
00000001000271be	addq	%rdx, %rbx
00000001000271c1	leaq	-0x1(%r15,%rbx), %rdx
00000001000271c6	xorl	%eax, %eax
00000001000271c8	xorl	%ecx, %ecx
00000001000271ca	nopw	(%rax,%rax)
00000001000271d0	movzbl	(%rdx), %esi
00000001000271d3	movl	%esi, %edi
00000001000271d5	andl	$0x7f, %edi
00000001000271d8	shlq	%cl, %rdi
00000001000271db	incq	%rdx
00000001000271de	orq	%rdi, %rax
00000001000271e1	addl	$0x7, %ecx
00000001000271e4	testb	%sil, %sil
00000001000271e7	js	0x1000271d0
00000001000271e9	movq	$-0x1, %rdx
00000001000271f0	shlq	%cl, %rdx
00000001000271f3	xorl	%edi, %edi
00000001000271f5	testb	$0x40, %sil
00000001000271f9	cmoveq	%rdi, %rdx
00000001000271fd	cmpl	$0x40, %ecx
0000000100027200	cmovaeq	%rdi, %rdx
0000000100027204	xorl	%esi, %esi
0000000100027206	movq	%rax, %rcx
0000000100027209	orq	%rdx, %rcx
000000010002720c	setg	%sil
0000000100027210	xorq	$0x3, %rsi
0000000100027214	orq	%rax, %rdx
0000000100027217	movl	$0x1, %ecx
000000010002721c	cmovneq	%rsi, %rcx
0000000100027220	testb	$0x1, -0x3c(%rbp)
0000000100027224	je	0x100027230
0000000100027226	jmp	0x100027287
0000000100027228	xorl	%ecx, %ecx
000000010002722a	testb	$0x1, -0x3c(%rbp)
000000010002722e	jne	0x100027287
0000000100027230	movl	$0x8, -0x34(%rbp)
0000000100027237	leaq	0x9a(%rip), %rax
000000010002723e	movslq	(%rax,%rcx,4), %rcx
0000000100027242	addq	%rax, %rcx
0000000100027245	jmpq	*%rcx
0000000100027247	movq	-0x68(%rbp), %rbx
000000010002724b	movq	%rbx, %rdi
000000010002724e	xorl	%esi, %esi
0000000100027250	movq	-0x60(%rbp), %rdx
0000000100027254	callq	0x10004273c                     ## symbol stub for: __Unwind_SetGR
0000000100027259	movq	%rbx, %rdi
000000010002725c	movl	$0x1, %esi
0000000100027261	xorl	%edx, %edx
0000000100027263	callq	0x10004273c                     ## symbol stub for: __Unwind_SetGR
0000000100027268	movq	%rbx, %rdi
000000010002726b	movq	%r14, %rsi
000000010002726e	callq	0x100042742                     ## symbol stub for: __Unwind_SetIP
0000000100027273	movl	$0x7, -0x34(%rbp)
000000010002727a	jmp	0x100027294
000000010002727c	movl	$0x4, %ecx
0000000100027281	testb	$0x1, -0x3c(%rbp)
0000000100027285	je	0x100027230
0000000100027287	leaq	0x1e6c2(%rip), %rax
000000010002728e	movl	(%rax,%rcx,4), %eax
0000000100027291	movl	%eax, -0x34(%rbp)
0000000100027294	movl	-0x34(%rbp), %eax
0000000100027297	addq	$0x98, %rsp
000000010002729e	popq	%rbx
000000010002729f	popq	%r12
00000001000272a1	popq	%r13
00000001000272a3	popq	%r14
00000001000272a5	popq	%r15
00000001000272a7	popq	%rbp
00000001000272a8	retq
00000001000272a9	testb	$0x8, -0x3c(%rbp)
00000001000272ad	jne	0x100027294
00000001000272af	jmp	0x100027247
00000001000272b1	movl	$0x2, -0x34(%rbp)
00000001000272b8	jmp	0x100027294
00000001000272ba	movl	$0x1, %ecx
00000001000272bf	testb	$0x1, -0x3c(%rbp)
00000001000272c3	je	0x100027230
00000001000272c9	jmp	0x100027287
00000001000272cb	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000272d0	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000272d5	nopl	(%rax)
00000001000272d8	movl	$0x6fffffff, %esp               ## imm = 0x6FFFFFFF
00000001000272dd	.byte 0xff #bad opcode
00000001000272de	.byte 0xff #bad opcode
00000001000272df	ljmpl	*-0x1(%rdi)
00000001000272e2	.byte 0xff #bad opcode
00000001000272e3	callq	*%rcx
00000001000272e5	.byte 0xff #bad opcode
00000001000272e6	.byte 0xff #bad opcode
00000001000272e7	.byte 0xff #bad opcode
00000001000272e8	fcos
00000001000272ea	.byte 0xff #bad opcode
00000001000272eb	decl	(%rdi)
00000001000272ed	.byte 0x1f #bad opcode
00000001000272ee	addb	%dl, 0x48(%rbp)
00000001000272f2	movl	%esp, %ebp
00000001000272f4	subq	$0x20, %rsp
00000001000272f8	movq	$0x0, -0x20(%rbp)
0000000100027300	movq	%rdi, -0x18(%rbp)
0000000100027304	movq	(%rsi), %rdi
0000000100027307	movq	0x8(%rsi), %rax
000000010002730b	leaq	-0x20(%rbp), %rsi
000000010002730f	callq	*0x20(%rax)
0000000100027312	xorb	$0x1, %al
0000000100027314	movzbl	%al, %eax
0000000100027317	leal	(%rax,%rax,8), %eax
000000010002731a	addq	$0x20, %rsp
000000010002731e	popq	%rbp
000000010002731f	retq
0000000100027320	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100027325	nopw	%cs:(%rax,%rax)
000000010002732f	nop
__ZN79_$LT$std..backtrace_rs..symbolize..SymbolName$u20$as$u20$core..fmt..Display$GT$3fmt17h235d156f8508a906E:
0000000100027330	pushq	%rbp
0000000100027331	movq	%rsp, %rbp
0000000100027334	pushq	%r15
0000000100027336	pushq	%r14
0000000100027338	pushq	%r13
000000010002733a	pushq	%r12
000000010002733c	pushq	%rbx
000000010002733d	subq	$0x28, %rsp
0000000100027341	cmpl	$0x2, (%rdi)
0000000100027344	jne	0x1000273b3
0000000100027346	movq	0x48(%rdi), %r14
000000010002734a	testq	%r14, %r14
000000010002734d	je	0x1000273df
0000000100027353	movq	%rsi, -0x30(%rbp)
0000000100027357	movq	0x40(%rdi), %r15
000000010002735b	nopl	(%rax,%rax)
0000000100027360	leaq	-0x48(%rbp), %rdi
0000000100027364	movq	%r15, %rsi
0000000100027367	movq	%r14, %rdx
000000010002736a	callq	__ZN4core3str8converts9from_utf817h1af6699b7ded4823E ## core::str::converts::from_utf8::h1af6699b7ded4823
000000010002736f	cmpq	$0x0, -0x48(%rbp)
0000000100027374	je	0x1000273c6
0000000100027376	movq	-0x40(%rbp), %r13
000000010002737a	movzbl	-0x38(%rbp), %ebx
000000010002737e	movzbl	-0x37(%rbp), %r12d
0000000100027383	movl	$0x3, %esi
0000000100027388	leaq	0x1d973(%rip), %rdi
000000010002738f	movq	-0x30(%rbp), %rdx
0000000100027393	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100027398	testb	%al, %al
000000010002739a	jne	0x1000273db
000000010002739c	testb	$0x1, %bl
000000010002739f	je	0x1000273df
00000001000273a1	addq	%r12, %r13
00000001000273a4	cmpq	%r13, %r14
00000001000273a7	jb	0x1000273f0
00000001000273a9	addq	%r13, %r15
00000001000273ac	subq	%r13, %r14
00000001000273af	jne	0x100027360
00000001000273b1	jmp	0x1000273df
00000001000273b3	addq	$0x28, %rsp
00000001000273b7	popq	%rbx
00000001000273b8	popq	%r12
00000001000273ba	popq	%r13
00000001000273bc	popq	%r14
00000001000273be	popq	%r15
00000001000273c0	popq	%rbp
00000001000273c1	jmp	__ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h69253d9fda19d534E ## _$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$::fmt::h69253d9fda19d534
00000001000273c6	movq	-0x40(%rbp), %rdi
00000001000273ca	movq	-0x38(%rbp), %rsi
00000001000273ce	movq	-0x30(%rbp), %rdx
00000001000273d2	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000273d7	testb	%al, %al
00000001000273d9	je	0x1000273df
00000001000273db	movb	$0x1, %al
00000001000273dd	jmp	0x1000273e1
00000001000273df	xorl	%eax, %eax
00000001000273e1	addq	$0x28, %rsp
00000001000273e5	popq	%rbx
00000001000273e6	popq	%r12
00000001000273e8	popq	%r13
00000001000273ea	popq	%r14
00000001000273ec	popq	%r15
00000001000273ee	popq	%rbp
00000001000273ef	retq
00000001000273f0	leaq	0x21e79(%rip), %rdx
00000001000273f7	movq	%r13, %rdi
00000001000273fa	movq	%r14, %rsi
00000001000273fd	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
0000000100027402	nopw	%cs:(%rax,%rax)
000000010002740c	nopl	(%rax)
__ZN3std12backtrace_rs9symbolize5gimli7Context3new17h15762e565e18f324E:
0000000100027410	pushq	%rbp
0000000100027411	movq	%rsp, %rbp
0000000100027414	pushq	%r15
0000000100027416	pushq	%r14
0000000100027418	pushq	%r13
000000010002741a	pushq	%r12
000000010002741c	pushq	%rbx
000000010002741d	subq	$0x7b8, %rsp                    ## imm = 0x7B8
0000000100027424	movq	%r8, -0x148(%rbp)
000000010002742b	movq	%rcx, -0x158(%rbp)
0000000100027432	movq	%rdx, -0xc8(%rbp)
0000000100027439	movq	%rsi, -0x140(%rbp)
0000000100027440	movq	%rdi, -0x218(%rbp)
0000000100027447	movl	$0xa, %edi
000000010002744c	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027451	movq	-0xc8(%rbp), %rdi
0000000100027458	movq	%rax, %rsi
000000010002745b	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027460	movq	%rdx, -0x80(%rbp)
0000000100027464	testq	%rax, %rax
0000000100027467	leaq	0x1c882(%rip), %rcx
000000010002746e	movq	%rax, %rdx
0000000100027471	cmoveq	%rcx, %rdx
0000000100027475	movq	%rdx, -0x40(%rbp)
0000000100027479	movq	-0x80(%rbp), %rcx
000000010002747d	cmoveq	%rax, %rcx
0000000100027481	movq	%rcx, -0x80(%rbp)
0000000100027485	movl	$0xb, %edi
000000010002748a	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
000000010002748f	movq	-0xc8(%rbp), %rdi
0000000100027496	movq	%rax, %rsi
0000000100027499	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002749e	movq	%rdx, -0xa0(%rbp)
00000001000274a5	testq	%rax, %rax
00000001000274a8	movq	%rax, %rdx
00000001000274ab	leaq	0x1c83e(%rip), %rcx
00000001000274b2	cmoveq	%rcx, %rdx
00000001000274b6	movq	%rdx, -0x100(%rbp)
00000001000274bd	movq	-0xa0(%rbp), %rcx
00000001000274c4	cmoveq	%rax, %rcx
00000001000274c8	movq	%rcx, -0xa0(%rbp)
00000001000274cf	movl	$0x10, %edi
00000001000274d4	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000274d9	movq	-0xc8(%rbp), %rdi
00000001000274e0	movq	%rax, %rsi
00000001000274e3	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000274e8	movq	%rdx, -0x30(%rbp)
00000001000274ec	testq	%rax, %rax
00000001000274ef	movq	%rax, %rdx
00000001000274f2	leaq	0x1c7f7(%rip), %rcx
00000001000274f9	cmoveq	%rcx, %rdx
00000001000274fd	movq	%rdx, -0xe0(%rbp)
0000000100027504	movq	-0x30(%rbp), %rcx
0000000100027508	cmoveq	%rax, %rcx
000000010002750c	movq	%rcx, -0x30(%rbp)
0000000100027510	movl	$0x11, %edi
0000000100027515	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
000000010002751a	movq	-0xc8(%rbp), %rdi
0000000100027521	movq	%rax, %rsi
0000000100027524	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027529	movq	%rdx, -0x38(%rbp)
000000010002752d	testq	%rax, %rax
0000000100027530	movq	%rax, %rdx
0000000100027533	leaq	0x1c7b6(%rip), %rcx
000000010002753a	cmoveq	%rcx, %rdx
000000010002753e	movq	%rdx, -0xd8(%rbp)
0000000100027545	movq	-0x38(%rbp), %rcx
0000000100027549	cmoveq	%rax, %rcx
000000010002754d	movq	%rcx, -0x38(%rbp)
0000000100027551	xorl	%edi, %edi
0000000100027553	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027558	movq	-0xc8(%rbp), %rdi
000000010002755f	movq	%rax, %rsi
0000000100027562	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027567	movq	%rdx, -0x58(%rbp)
000000010002756b	testq	%rax, %rax
000000010002756e	movq	%rax, %rdx
0000000100027571	leaq	0x1c778(%rip), %rcx
0000000100027578	cmoveq	%rcx, %rdx
000000010002757c	movq	%rdx, -0x48(%rbp)
0000000100027580	movq	-0x58(%rbp), %rcx
0000000100027584	cmoveq	%rax, %rcx
0000000100027588	movq	%rcx, -0x58(%rbp)
000000010002758c	movl	$0x1, %edi
0000000100027591	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027596	movq	-0xc8(%rbp), %rdi
000000010002759d	movq	%rax, %rsi
00000001000275a0	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000275a5	movq	%rdx, -0x90(%rbp)
00000001000275ac	testq	%rax, %rax
00000001000275af	movq	%rax, %rdx
00000001000275b2	leaq	0x1c737(%rip), %rcx
00000001000275b9	cmoveq	%rcx, %rdx
00000001000275bd	movq	%rdx, -0xd0(%rbp)
00000001000275c4	movq	-0x90(%rbp), %rcx
00000001000275cb	cmoveq	%rax, %rcx
00000001000275cf	movq	%rcx, -0x90(%rbp)
00000001000275d6	movl	$0x2, %edi
00000001000275db	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000275e0	movq	-0xc8(%rbp), %rdi
00000001000275e7	movq	%rax, %rsi
00000001000275ea	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000275ef	movq	%rdx, -0x50(%rbp)
00000001000275f3	testq	%rax, %rax
00000001000275f6	movq	%rax, %rdx
00000001000275f9	leaq	0x1c6f0(%rip), %rcx
0000000100027600	cmoveq	%rcx, %rdx
0000000100027604	movq	%rdx, -0x110(%rbp)
000000010002760b	movq	-0x50(%rbp), %rcx
000000010002760f	cmoveq	%rax, %rcx
0000000100027613	movq	%rcx, -0x50(%rbp)
0000000100027617	movl	$0x7, %edi
000000010002761c	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027621	movq	-0xc8(%rbp), %rdi
0000000100027628	movq	%rax, %rsi
000000010002762b	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027630	movq	%rdx, -0x68(%rbp)
0000000100027634	testq	%rax, %rax
0000000100027637	movq	%rax, %rdx
000000010002763a	leaq	0x1c6af(%rip), %rcx
0000000100027641	cmoveq	%rcx, %rdx
0000000100027645	movq	%rdx, -0xf8(%rbp)
000000010002764c	movq	-0x68(%rbp), %rcx
0000000100027650	cmoveq	%rax, %rcx
0000000100027654	movq	%rcx, -0x68(%rbp)
0000000100027658	movl	$0x8, %edi
000000010002765d	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027662	movq	-0xc8(%rbp), %rdi
0000000100027669	movq	%rax, %rsi
000000010002766c	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027671	movq	%rdx, -0x60(%rbp)
0000000100027675	testq	%rax, %rax
0000000100027678	movq	%rax, %rbx
000000010002767b	leaq	0x1c66e(%rip), %rcx
0000000100027682	cmoveq	%rcx, %rbx
0000000100027686	movq	-0x60(%rbp), %rcx
000000010002768a	cmoveq	%rax, %rcx
000000010002768e	movq	%rcx, -0x60(%rbp)
0000000100027692	movq	-0xc8(%rbp), %rdi
0000000100027699	movq	-0x140(%rbp), %rsi
00000001000276a0	callq	__ZN5gimli4read7Section4load17hed3fd51420ccf80eE ## gimli::read::Section::load::hed3fd51420ccf80e
00000001000276a5	movq	%rax, -0x88(%rbp)
00000001000276ac	movq	%rdx, -0x108(%rbp)
00000001000276b3	cmpq	$0x0, -0x88(%rbp)
00000001000276bb	je	0x100027f0b
00000001000276c1	movl	$0x12, %edi
00000001000276c6	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000276cb	movq	-0xc8(%rbp), %rdi
00000001000276d2	movq	%rax, %rsi
00000001000276d5	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000276da	movq	%rdx, -0xa8(%rbp)
00000001000276e1	testq	%rax, %rax
00000001000276e4	movq	%rax, %rdx
00000001000276e7	leaq	0x1c602(%rip), %rcx
00000001000276ee	cmoveq	%rcx, %rdx
00000001000276f2	movq	%rdx, -0x130(%rbp)
00000001000276f9	movq	-0xa8(%rbp), %rcx
0000000100027700	cmoveq	%rax, %rcx
0000000100027704	movq	%rcx, -0xa8(%rbp)
000000010002770b	movl	$0x13, %edi
0000000100027710	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027715	movq	-0xc8(%rbp), %rdi
000000010002771c	movq	%rax, %rsi
000000010002771f	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027724	movq	%rdx, %r14
0000000100027727	testq	%rax, %rax
000000010002772a	movq	%rax, %r12
000000010002772d	leaq	0x1c5bc(%rip), %rcx
0000000100027734	cmoveq	%rcx, %r12
0000000100027738	cmoveq	%rax, %r14
000000010002773c	movl	$0x15, %edi
0000000100027741	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027746	movq	-0xc8(%rbp), %rdi
000000010002774d	movq	%rax, %rsi
0000000100027750	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027755	movq	%rax, %r13
0000000100027758	movq	%rdx, %r15
000000010002775b	movq	$0x0, -0x4d8(%rbp)
0000000100027766	callq	__ZN5gimli4read6abbrev18AbbreviationsCache3new17h03edca24ae6be20cE ## gimli::read::abbrev::AbbreviationsCache::new::h03edca24ae6be20c
000000010002776b	movq	-0x48(%rbp), %rcx
000000010002776f	movq	%rcx, -0x7d0(%rbp)
0000000100027776	movq	-0x58(%rbp), %rcx
000000010002777a	movq	%rcx, -0x7c8(%rbp)
0000000100027781	movq	-0xd0(%rbp), %rcx
0000000100027788	movq	%rcx, -0x7c0(%rbp)
000000010002778f	movq	-0x90(%rbp), %rcx
0000000100027796	movq	%rcx, -0x7b8(%rbp)
000000010002779d	movq	-0x110(%rbp), %rcx
00000001000277a4	movq	%rcx, -0x7b0(%rbp)
00000001000277ab	movq	-0x50(%rbp), %rcx
00000001000277af	movq	%rcx, -0x7a8(%rbp)
00000001000277b6	movq	-0xf8(%rbp), %rcx
00000001000277bd	movq	%rcx, -0x7a0(%rbp)
00000001000277c4	movq	-0x68(%rbp), %rcx
00000001000277c8	movq	%rcx, -0x798(%rbp)
00000001000277cf	movq	%rbx, -0x790(%rbp)
00000001000277d6	movq	-0x60(%rbp), %rcx
00000001000277da	movq	%rcx, -0x788(%rbp)
00000001000277e1	movq	-0x88(%rbp), %rcx
00000001000277e8	movq	%rcx, -0x780(%rbp)
00000001000277ef	movq	-0x108(%rbp), %rcx
00000001000277f6	movq	%rcx, -0x778(%rbp)
00000001000277fd	movq	-0x130(%rbp), %rcx
0000000100027804	movq	%rcx, -0x770(%rbp)
000000010002780b	movq	-0xa8(%rbp), %rcx
0000000100027812	movq	%rcx, -0x768(%rbp)
0000000100027819	movq	%r12, -0x760(%rbp)
0000000100027820	movq	%r14, -0x758(%rbp)
0000000100027827	testq	%r13, %r13
000000010002782a	cmoveq	%r13, %r15
000000010002782e	leaq	0x1c4bb(%rip), %rcx
0000000100027835	cmoveq	%rcx, %r13
0000000100027839	movq	%r13, -0x750(%rbp)
0000000100027840	movq	%r15, -0x748(%rbp)
0000000100027847	movq	-0x40(%rbp), %rcx
000000010002784b	movq	%rcx, -0x740(%rbp)
0000000100027852	movq	-0x80(%rbp), %rcx
0000000100027856	movq	%rcx, -0x738(%rbp)
000000010002785d	movq	-0x100(%rbp), %rcx
0000000100027864	movq	%rcx, -0x730(%rbp)
000000010002786b	movq	-0xa0(%rbp), %rcx
0000000100027872	movq	%rcx, -0x728(%rbp)
0000000100027879	movq	-0xe0(%rbp), %rcx
0000000100027880	movq	%rcx, -0x720(%rbp)
0000000100027887	movq	-0x30(%rbp), %rcx
000000010002788b	movq	%rcx, -0x718(%rbp)
0000000100027892	movq	-0xd8(%rbp), %rcx
0000000100027899	movq	%rcx, -0x710(%rbp)
00000001000278a0	movq	-0x38(%rbp), %rcx
00000001000278a4	movq	%rcx, -0x708(%rbp)
00000001000278ab	movq	$0x0, -0x700(%rbp)
00000001000278b6	movq	%rax, -0x6f8(%rbp)
00000001000278bd	movb	$0x0, -0x6f0(%rbp)
00000001000278c4	movb	$0x1, %cl
00000001000278c6	movq	-0x158(%rbp), %rax
00000001000278cd	cmpb	$0x2, 0x78(%rax)
00000001000278d1	je	0x100027d73
00000001000278d7	leaq	-0x680(%rbp), %rdi
00000001000278de	movl	$0x10, %ecx
00000001000278e3	movq	-0x158(%rbp), %rsi
00000001000278ea	rep		movsq	(%rsi), %es:(%rdi)
00000001000278ed	movl	$0xa, %edi
00000001000278f2	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000278f7	leaq	-0x680(%rbp), %rdi
00000001000278fe	movq	%rax, %rsi
0000000100027901	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027906	movq	%rax, -0xa0(%rbp)
000000010002790d	movq	%rdx, -0x30(%rbp)
0000000100027911	movl	$0xb, %edi
0000000100027916	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
000000010002791b	leaq	-0x680(%rbp), %rdi
0000000100027922	movq	%rax, %rsi
0000000100027925	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002792a	movq	%rax, -0x38(%rbp)
000000010002792e	movq	%rdx, -0x58(%rbp)
0000000100027932	movl	$0x10, %edi
0000000100027937	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
000000010002793c	leaq	-0x680(%rbp), %rdi
0000000100027943	movq	%rax, %rsi
0000000100027946	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002794b	movq	%rax, -0x90(%rbp)
0000000100027952	movq	%rdx, -0x50(%rbp)
0000000100027956	movl	$0x11, %edi
000000010002795b	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027960	leaq	-0x680(%rbp), %rdi
0000000100027967	movq	%rax, %rsi
000000010002796a	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002796f	movq	%rax, -0x60(%rbp)
0000000100027973	movq	%rdx, -0x68(%rbp)
0000000100027977	xorl	%edi, %edi
0000000100027979	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
000000010002797e	leaq	-0x680(%rbp), %rdi
0000000100027985	movq	%rax, %rsi
0000000100027988	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002798d	movq	%rax, -0xa8(%rbp)
0000000100027994	movq	%rdx, -0x88(%rbp)
000000010002799b	movl	$0x1, %edi
00000001000279a0	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000279a5	leaq	-0x680(%rbp), %rdi
00000001000279ac	movq	%rax, %rsi
00000001000279af	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000279b4	movq	%rax, -0x100(%rbp)
00000001000279bb	movq	%rdx, -0x40(%rbp)
00000001000279bf	movl	$0x2, %edi
00000001000279c4	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000279c9	leaq	-0x680(%rbp), %rdi
00000001000279d0	movq	%rax, %rsi
00000001000279d3	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000279d8	movq	%rax, -0xd8(%rbp)
00000001000279df	movq	%rdx, -0xe0(%rbp)
00000001000279e6	movl	$0x7, %edi
00000001000279eb	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
00000001000279f0	leaq	-0x680(%rbp), %rdi
00000001000279f7	movq	%rax, %rsi
00000001000279fa	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
00000001000279ff	movq	%rax, -0xd0(%rbp)
0000000100027a06	movq	%rdx, -0x48(%rbp)
0000000100027a0a	movl	$0x8, %edi
0000000100027a0f	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027a14	leaq	-0x680(%rbp), %rdi
0000000100027a1b	movq	%rax, %rsi
0000000100027a1e	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027a23	movq	%rax, -0x110(%rbp)
0000000100027a2a	movq	%rdx, -0x80(%rbp)
0000000100027a2e	movl	$0x9, %edi
0000000100027a33	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027a38	leaq	-0x680(%rbp), %rdi
0000000100027a3f	movq	%rax, %rsi
0000000100027a42	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027a47	movq	%rax, -0x108(%rbp)
0000000100027a4e	movq	%rdx, -0xf8(%rbp)
0000000100027a55	movl	$0x12, %edi
0000000100027a5a	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027a5f	leaq	-0x680(%rbp), %rdi
0000000100027a66	movq	%rax, %rsi
0000000100027a69	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027a6e	movq	%rax, -0x130(%rbp)
0000000100027a75	movq	%rdx, %r15
0000000100027a78	movl	$0x13, %edi
0000000100027a7d	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027a82	leaq	-0x680(%rbp), %rdi
0000000100027a89	movq	%rax, %rsi
0000000100027a8c	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027a91	movq	%rax, %r14
0000000100027a94	movq	%rdx, %rbx
0000000100027a97	movl	$0x15, %edi
0000000100027a9c	callq	__ZN5gimli6common9SectionId4name17h0886f39cde208330E ## gimli::common::SectionId::name::h0886f39cde208330
0000000100027aa1	leaq	-0x680(%rbp), %rdi
0000000100027aa8	movq	%rax, %rsi
0000000100027aab	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
0000000100027ab0	movq	%rax, %r13
0000000100027ab3	movq	%rdx, %r12
0000000100027ab6	movq	$0x0, -0x4d8(%rbp)
0000000100027ac1	callq	__ZN5gimli4read6abbrev18AbbreviationsCache3new17h03edca24ae6be20cE ## gimli::read::abbrev::AbbreviationsCache::new::h03edca24ae6be20c
0000000100027ac6	movq	%rax, -0x178(%rbp)
0000000100027acd	testq	%r13, %r13
0000000100027ad0	cmoveq	%r13, %r12
0000000100027ad4	movq	%r12, -0x150(%rbp)
0000000100027adb	leaq	0x1c20e(%rip), %rcx
0000000100027ae2	cmoveq	%rcx, %r13
0000000100027ae6	testq	%r14, %r14
0000000100027ae9	cmoveq	%r14, %rbx
0000000100027aed	movq	%rbx, -0x228(%rbp)
0000000100027af4	cmoveq	%rcx, %r14
0000000100027af8	movq	%r14, -0x210(%rbp)
0000000100027aff	movq	-0x130(%rbp), %r14
0000000100027b06	testq	%r14, %r14
0000000100027b09	cmoveq	%r14, %r15
0000000100027b0d	movq	%r15, -0x6c0(%rbp)
0000000100027b14	cmoveq	%rcx, %r14
0000000100027b18	movq	-0x108(%rbp), %rbx
0000000100027b1f	testq	%rbx, %rbx
0000000100027b22	movq	-0xf8(%rbp), %r15
0000000100027b29	cmoveq	%rbx, %r15
0000000100027b2d	cmoveq	%rcx, %rbx
0000000100027b31	movq	-0x110(%rbp), %rax
0000000100027b38	testq	%rax, %rax
0000000100027b3b	movq	-0x80(%rbp), %rdx
0000000100027b3f	cmoveq	%rax, %rdx
0000000100027b43	movq	%rdx, -0x80(%rbp)
0000000100027b47	cmoveq	%rcx, %rax
0000000100027b4b	movq	-0xd0(%rbp), %r12
0000000100027b52	testq	%r12, %r12
0000000100027b55	movq	-0x48(%rbp), %r11
0000000100027b59	cmoveq	%r12, %r11
0000000100027b5d	cmoveq	%rcx, %r12
0000000100027b61	movq	-0xd8(%rbp), %r10
0000000100027b68	testq	%r10, %r10
0000000100027b6b	movq	-0xe0(%rbp), %r9
0000000100027b72	cmoveq	%r10, %r9
0000000100027b76	cmoveq	%rcx, %r10
0000000100027b7a	movq	-0x100(%rbp), %r8
0000000100027b81	testq	%r8, %r8
0000000100027b84	movq	-0x40(%rbp), %rdi
0000000100027b88	cmoveq	%r8, %rdi
0000000100027b8c	cmoveq	%rcx, %r8
0000000100027b90	movq	-0xa8(%rbp), %rsi
0000000100027b97	testq	%rsi, %rsi
0000000100027b9a	movq	-0x88(%rbp), %rdx
0000000100027ba1	cmoveq	%rsi, %rdx
0000000100027ba5	cmoveq	%rcx, %rsi
0000000100027ba9	movq	%rsi, -0x4c8(%rbp)
0000000100027bb0	movq	%rdx, -0x4c0(%rbp)
0000000100027bb7	movq	%r8, -0x4b8(%rbp)
0000000100027bbe	movq	%rdi, -0x4b0(%rbp)
0000000100027bc5	movq	%r10, -0x4a8(%rbp)
0000000100027bcc	movq	%r9, -0x4a0(%rbp)
0000000100027bd3	movq	%r12, -0x498(%rbp)
0000000100027bda	movq	%r11, -0x490(%rbp)
0000000100027be1	movq	%rax, -0x488(%rbp)
0000000100027be8	movq	-0x80(%rbp), %rax
0000000100027bec	movq	%rax, -0x480(%rbp)
0000000100027bf3	movq	%rbx, -0x478(%rbp)
0000000100027bfa	movq	%r15, -0x470(%rbp)
0000000100027c01	movq	%r14, -0x468(%rbp)
0000000100027c08	movq	-0x6c0(%rbp), %rax
0000000100027c0f	movq	%rax, -0x460(%rbp)
0000000100027c16	movq	-0x60(%rbp), %r15
0000000100027c1a	testq	%r15, %r15
0000000100027c1d	movq	-0x68(%rbp), %r11
0000000100027c21	cmoveq	%r15, %r11
0000000100027c25	movq	-0x210(%rbp), %rax
0000000100027c2c	movq	%rax, -0x458(%rbp)
0000000100027c33	cmoveq	%rcx, %r15
0000000100027c37	movq	-0x90(%rbp), %r9
0000000100027c3e	testq	%r9, %r9
0000000100027c41	movq	-0x50(%rbp), %r10
0000000100027c45	cmoveq	%r9, %r10
0000000100027c49	cmoveq	%rcx, %r9
0000000100027c4d	movq	-0x228(%rbp), %rax
0000000100027c54	movq	%rax, -0x450(%rbp)
0000000100027c5b	movq	-0x38(%rbp), %rdi
0000000100027c5f	testq	%rdi, %rdi
0000000100027c62	movq	-0x58(%rbp), %r8
0000000100027c66	cmoveq	%rdi, %r8
0000000100027c6a	movq	%r13, -0x448(%rbp)
0000000100027c71	cmoveq	%rcx, %rdi
0000000100027c75	movq	-0xa0(%rbp), %rdx
0000000100027c7c	testq	%rdx, %rdx
0000000100027c7f	movq	-0x30(%rbp), %rsi
0000000100027c83	cmoveq	%rdx, %rsi
0000000100027c87	cmoveq	%rcx, %rdx
0000000100027c8b	movq	-0x150(%rbp), %rax
0000000100027c92	movq	%rax, -0x440(%rbp)
0000000100027c99	movq	%rdx, -0x438(%rbp)
0000000100027ca0	movq	%rsi, -0x430(%rbp)
0000000100027ca7	movq	%rdi, -0x428(%rbp)
0000000100027cae	movq	%r8, -0x420(%rbp)
0000000100027cb5	movq	%r9, -0x418(%rbp)
0000000100027cbc	movq	%r10, -0x410(%rbp)
0000000100027cc3	movq	%r15, -0x408(%rbp)
0000000100027cca	movq	%r11, -0x400(%rbp)
0000000100027cd1	movq	$0x0, -0x3f8(%rbp)
0000000100027cdc	movq	-0x178(%rbp), %rax
0000000100027ce3	movq	%rax, -0x3f0(%rbp)
0000000100027cea	movb	$0x0, -0x3e8(%rbp)
0000000100027cf1	movq	$0x1, -0x4d8(%rbp)
0000000100027cfc	movq	$0x1, -0x4d0(%rbp)
0000000100027d07	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100027d0e	movzbl	(%rax), %eax
0000000100027d11	movl	$0xf8, %edi
0000000100027d16	movl	$0x8, %esi
0000000100027d1b	callq	___rust_alloc
0000000100027d20	testq	%rax, %rax
0000000100027d23	je	0x10002b5bd
0000000100027d29	movq	%rax, %rbx
0000000100027d2c	leaq	-0x4d8(%rbp), %rsi
0000000100027d33	movl	$0xf8, %edx
0000000100027d38	movq	%rax, %rdi
0000000100027d3b	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100027d40	movq	-0x700(%rbp), %rax
0000000100027d47	testq	%rax, %rax
0000000100027d4a	je	0x100027d5e
0000000100027d4c	lock
0000000100027d4d	decq	(%rax)
0000000100027d50	jne	0x100027d5e
0000000100027d52	leaq	-0x700(%rbp), %rdi
0000000100027d59	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
0000000100027d5e	movq	%rbx, -0x700(%rbp)
0000000100027d65	leaq	-0x680(%rbp), %rdi
0000000100027d6c	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
0000000100027d71	xorl	%ecx, %ecx
0000000100027d73	movl	%ecx, -0x110(%rbp)
0000000100027d79	leaq	-0x4c8(%rbp), %rdi
0000000100027d80	leaq	-0x7d0(%rbp), %rsi
0000000100027d87	movl	$0xe8, %edx
0000000100027d8c	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100027d91	movq	$0x1, -0x4d8(%rbp)
0000000100027d9c	movq	$0x1, -0x4d0(%rbp)
0000000100027da7	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100027dae	movzbl	(%rax), %eax
0000000100027db1	movl	$0xf8, %edi
0000000100027db6	movl	$0x8, %esi
0000000100027dbb	callq	___rust_alloc
0000000100027dc0	testq	%rax, %rax
0000000100027dc3	je	0x10002b57c
0000000100027dc9	movq	%rax, %rbx
0000000100027dcc	leaq	-0x4d8(%rbp), %rsi
0000000100027dd3	movl	$0xf8, %edx
0000000100027dd8	movq	%rax, %rdi
0000000100027ddb	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100027de0	movq	%rbx, -0x220(%rbp)
0000000100027de7	movq	%rbx, %rax
0000000100027dea	addq	$0x10, %rax
0000000100027dee	movq	%rax, -0x138(%rbp)
0000000100027df5	movq	$0x8, -0x170(%rbp)
0000000100027e00	movq	$0x0, -0x168(%rbp)
0000000100027e0b	movq	$0x0, -0x160(%rbp)
0000000100027e16	movq	0x30(%rbx), %rax
0000000100027e1a	movq	0x38(%rbx), %r15
0000000100027e1e	movq	%rax, -0x240(%rbp)
0000000100027e25	movq	%r15, -0x238(%rbp)
0000000100027e2c	movq	$0x0, -0x230(%rbp)
0000000100027e37	testq	%r15, %r15
0000000100027e3a	je	0x10002869f
0000000100027e40	movl	$0x8, %r13d
0000000100027e46	xorl	%esi, %esi
0000000100027e48	leaq	-0x4d8(%rbp), %rax
0000000100027e4f	movq	%rax, -0x130(%rbp)
0000000100027e56	xorl	%r14d, %r14d
0000000100027e59	jmp	0x100027e90
0000000100027e5b	nopl	(%rax,%rax)
0000000100027e60	movq	%rsi, %r12
0000000100027e63	movq	%r12, %rax
0000000100027e66	shlq	$0x4, %rax
0000000100027e6a	movq	%r15, (%r13,%rax)
0000000100027e6f	movq	%rbx, 0x8(%r13,%rax)
0000000100027e74	leaq	0x1(%r12), %rsi
0000000100027e79	movq	%rsi, -0x160(%rbp)
0000000100027e80	movq	-0x238(%rbp), %r15
0000000100027e87	testq	%r15, %r15
0000000100027e8a	je	0x100027f28
0000000100027e90	movq	%rsi, %r12
0000000100027e93	leaq	-0x4d8(%rbp), %rdi
0000000100027e9a	leaq	-0x240(%rbp), %rsi
0000000100027ea1	movq	%r14, %rdx
0000000100027ea4	callq	__ZN5gimli4read7aranges30ArangeHeader$LT$R$C$Offset$GT$5parse17h6fb9a4ac9468d866E ## gimli::read::aranges::ArangeHeader$LT$R$C$Offset$GT$::parse::h6fb9a4ac9468d866
0000000100027ea9	cmpb	$0x3, -0x4af(%rbp)
0000000100027eb0	je	0x1000287ab
0000000100027eb6	subq	-0x238(%rbp), %r15
0000000100027ebd	movq	-0x4c8(%rbp), %rbx
0000000100027ec4	movq	%r15, %r14
0000000100027ec7	addq	-0x230(%rbp), %r14
0000000100027ece	movq	-0x4b8(%rbp), %r15
0000000100027ed5	movq	%r14, -0x230(%rbp)
0000000100027edc	movq	%r12, %rsi
0000000100027edf	cmpq	-0x168(%rbp), %r12
0000000100027ee6	jne	0x100027e60
0000000100027eec	leaq	-0x170(%rbp), %rdi
0000000100027ef3	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h14d9ad67ad8f2594E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h14d9ad67ad8f2594
0000000100027ef8	movq	-0x170(%rbp), %r13
0000000100027eff	movq	-0x160(%rbp), %r12
0000000100027f06	jmp	0x100027e63
0000000100027f0b	movq	-0x218(%rbp), %rax
0000000100027f12	movb	$0x2, 0x200(%rax)
0000000100027f19	movb	$0x1, %bl
0000000100027f1b	movb	$0x1, %al
0000000100027f1d	movl	%eax, -0x110(%rbp)
0000000100027f23	jmp	0x1000287f7
0000000100027f28	movq	-0x170(%rbp), %rax
0000000100027f2f	movq	%rax, -0xa8(%rbp)
0000000100027f36	cmpq	$0x15, %rsi
0000000100027f3a	jae	0x100027f5c
0000000100027f3c	cmpq	$0x1, %rsi
0000000100027f40	jbe	0x10002869f
0000000100027f46	movl	$0x1, %edx
0000000100027f4b	movq	-0xa8(%rbp), %rdi
0000000100027f52	callq	__ZN4core5slice4sort25insertion_sort_shift_left17hef352169c08618acE ## core::slice::sort::insertion_sort_shift_left::hef352169c08618ac
0000000100027f57	jmp	0x10002869f
0000000100027f5c	movq	%rsi, -0x40(%rbp)
0000000100027f60	movq	%rsi, %rax
0000000100027f63	shrq	%rax
0000000100027f66	movq	%rax, -0x228(%rbp)
0000000100027f6d	movq	%rax, %rdi
0000000100027f70	shlq	$0x4, %rdi
0000000100027f74	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r14
0000000100027f7b	movzbl	(%r14), %eax
0000000100027f7f	movl	$0x8, %esi
0000000100027f84	movq	%rdi, -0x150(%rbp)
0000000100027f8b	callq	___rust_alloc
0000000100027f90	movq	%rax, -0x80(%rbp)
0000000100027f94	testq	%rax, %rax
0000000100027f97	je	0x10002b605
0000000100027f9d	movzbl	(%r14), %eax
0000000100027fa1	movl	$0x100, %edi                    ## imm = 0x100
0000000100027fa6	movl	$0x8, %esi
0000000100027fab	callq	___rust_alloc
0000000100027fb0	testq	%rax, %rax
0000000100027fb3	je	0x10002b61f
0000000100027fb9	movq	%rax, %rcx
0000000100027fbc	movl	$0x1, %eax
0000000100027fc1	subq	%r12, %rax
0000000100027fc4	movq	%rax, -0xf8(%rbp)
0000000100027fcb	movq	-0xa8(%rbp), %rax
0000000100027fd2	leaq	0x20(%rax), %rdx
0000000100027fd6	movq	%rdx, -0x108(%rbp)
0000000100027fdd	leaq	0x10(%rax), %rdx
0000000100027fe1	movq	%rdx, -0x178(%rbp)
0000000100027fe8	addq	$-0x10, %rax
0000000100027fec	movq	%rax, -0xd8(%rbp)
0000000100027ff3	movl	$0x10, %eax
0000000100027ff8	movq	%rax, -0xd0(%rbp)
0000000100027fff	xorl	%edx, %edx
0000000100028001	leaq	0x203e8(%rip), %rax
0000000100028008	movq	%rax, -0x210(%rbp)
000000010002800f	xorl	%r15d, %r15d
0000000100028012	movq	%rcx, %r12
0000000100028015	movq	-0x40(%rbp), %rsi
0000000100028019	jmp	0x100028033
000000010002801b	nopl	(%rax,%rax)
0000000100028020	movl	$0x1, %r15d
0000000100028026	movq	-0x48(%rbp), %rdx
000000010002802a	cmpq	%rsi, %rdx
000000010002802d	jae	0x100028672
0000000100028033	movq	%rdx, %r13
0000000100028036	movq	%rsi, %rdx
0000000100028039	subq	%r13, %rdx
000000010002803c	movq	%r13, %rax
000000010002803f	shlq	$0x4, %rax
0000000100028043	movq	-0xa8(%rbp), %rcx
000000010002804a	leaq	(%rcx,%rax), %rdi
000000010002804e	cmpq	$0x2, %rdx
0000000100028052	jae	0x1000280c0
0000000100028054	movq	%rsi, %r8
0000000100028057	movq	%r8, %rbx
000000010002805a	subq	%r13, %rbx
000000010002805d	jb	0x10002b4e2
0000000100028063	cmpq	%rsi, %r8
0000000100028066	ja	0x10002b4e2
000000010002806c	jae	0x100028100
0000000100028072	cmpq	$0xa, %rdx
0000000100028076	jae	0x100028100
000000010002807c	leaq	0xa(%r13), %rbx
0000000100028080	cmpq	%rsi, %rbx
0000000100028083	cmovaeq	%rsi, %rbx
0000000100028087	movq	%rbx, -0x48(%rbp)
000000010002808b	subq	%r13, %rbx
000000010002808e	jb	0x10002b4ff
0000000100028094	cmpq	$0x2, %rdx
0000000100028098	movl	$0x1, %eax
000000010002809d	cmovbq	%rax, %rdx
00000001000280a1	movq	%rbx, %rsi
00000001000280a4	callq	__ZN4core5slice4sort25insertion_sort_shift_left17hef352169c08618acE ## core::slice::sort::insertion_sort_shift_left::hef352169c08618ac
00000001000280a9	movq	-0x40(%rbp), %rsi
00000001000280ad	cmpq	-0xd0(%rbp), %r15
00000001000280b4	je	0x10002810d
00000001000280b6	jmp	0x10002817d
00000001000280bb	nopl	(%rax,%rax)
00000001000280c0	movq	%r15, -0xa0(%rbp)
00000001000280c7	movq	(%rdi), %rcx
00000001000280ca	movq	0x10(%rdi), %r15
00000001000280ce	cmpq	%rcx, %r15
00000001000280d1	jae	0x1000284d0
00000001000280d7	cmpq	$0x2, %rdx
00000001000280db	jne	0x1000284eb
00000001000280e1	leaq	0x2(%r13), %r8
00000001000280e5	movl	$0x2, %edx
00000001000280ea	movq	-0xa0(%rbp), %r15
00000001000280f1	jmp	0x10002858e
00000001000280f6	nopw	%cs:(%rax,%rax)
0000000100028100	movq	%r8, -0x48(%rbp)
0000000100028104	cmpq	-0xd0(%rbp), %r15
000000010002810b	jne	0x10002817d
000000010002810d	movq	%r13, -0xa0(%rbp)
0000000100028114	leaq	(%r15,%r15), %rax
0000000100028118	movq	%rax, -0xd0(%rbp)
000000010002811f	movq	%r15, %rdi
0000000100028122	shlq	$0x5, %rdi
0000000100028126	movzbl	(%r14), %eax
000000010002812a	movl	$0x8, %esi
000000010002812f	callq	___rust_alloc
0000000100028134	testq	%rax, %rax
0000000100028137	je	0x10002b512
000000010002813d	movq	%rax, %r14
0000000100028140	movq	%r15, %r13
0000000100028143	shlq	$0x4, %r15
0000000100028147	movq	%rax, %rdi
000000010002814a	movq	%r12, %rsi
000000010002814d	movq	%r15, %rdx
0000000100028150	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100028155	movl	$0x8, %edx
000000010002815a	movq	%r12, %rdi
000000010002815d	movq	%r15, %rsi
0000000100028160	movq	%r13, %r15
0000000100028163	callq	___rust_dealloc
0000000100028168	movq	%r14, %r12
000000010002816b	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r14
0000000100028172	movq	-0x40(%rbp), %rsi
0000000100028176	movq	-0xa0(%rbp), %r13
000000010002817d	movq	%r15, %rax
0000000100028180	shlq	$0x4, %rax
0000000100028184	movq	%rbx, (%r12,%rax)
0000000100028188	movq	%r13, 0x8(%r12,%rax)
000000010002818d	incq	%r15
0000000100028190	cmpq	$0x2, %r15
0000000100028194	jb	0x100028026
000000010002819a	movq	%r12, -0x100(%rbp)
00000001000281a1	jmp	0x100028225
00000001000281a6	nopw	%cs:(%rax,%rax)
00000001000281b0	movq	%rdi, %rbx
00000001000281b3	movq	%r12, %r15
00000001000281b6	movq	-0x80(%rbp), %rsi
00000001000281ba	subq	%rsi, %r14
00000001000281bd	movq	%r15, %rdi
00000001000281c0	movq	%r14, %rdx
00000001000281c3	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000281c8	movq	-0x90(%rbp), %rax
00000001000281cf	addq	%rbx, %rax
00000001000281d2	movq	-0x50(%rbp), %rcx
00000001000281d6	movq	%rax, (%rcx)
00000001000281d9	movq	-0x58(%rbp), %rax
00000001000281dd	movq	-0x68(%rbp), %rcx
00000001000281e1	movq	%rax, (%rcx)
00000001000281e4	leaq	0x10(%r13), %rsi
00000001000281e8	movq	-0x38(%rbp), %rax
00000001000281ec	notq	%rax
00000001000281ef	movq	-0x30(%rbp), %rdx
00000001000281f3	addq	%rax, %rdx
00000001000281f6	shlq	$0x4, %rdx
00000001000281fa	movq	%r13, %rdi
00000001000281fd	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100028202	movq	-0xa0(%rbp), %r15
0000000100028209	cmpq	$0x1, %r15
000000010002820d	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r14
0000000100028214	movq	-0x100(%rbp), %r12
000000010002821b	movq	-0x40(%rbp), %rsi
000000010002821f	jbe	0x100028020
0000000100028225	leaq	-0x1(%r15), %r9
0000000100028229	movq	%r9, %rcx
000000010002822c	shlq	$0x4, %rcx
0000000100028230	movq	(%r12,%rcx), %rax
0000000100028234	movq	0x8(%r12,%rcx), %rcx
0000000100028239	addq	%rax, %rcx
000000010002823c	cmpq	%rsi, %rcx
000000010002823f	je	0x100028290
0000000100028241	movq	%r15, %rdx
0000000100028244	shlq	$0x4, %rdx
0000000100028248	movq	-0x20(%rdx,%r12), %r8
000000010002824d	cmpq	%rax, %r8
0000000100028250	jbe	0x100028290
0000000100028252	cmpq	$0x3, %r15
0000000100028256	jb	0x1000285be
000000010002825c	leaq	-0x3(%r15), %r10
0000000100028260	movq	%r10, %rcx
0000000100028263	shlq	$0x4, %rcx
0000000100028267	movq	(%r12,%rcx), %rcx
000000010002826b	leaq	(%r8,%rax), %rdi
000000010002826f	cmpq	%rdi, %rcx
0000000100028272	jbe	0x1000282a5
0000000100028274	cmpq	$0x4, %r15
0000000100028278	jb	0x100028667
000000010002827e	addq	%rcx, %r8
0000000100028281	cmpq	%r8, -0x40(%rdx,%r12)
0000000100028286	jbe	0x1000282a5
0000000100028288	jmp	0x100028026
000000010002828d	nopl	(%rax)
0000000100028290	cmpq	$0x3, %r15
0000000100028294	jb	0x1000282aa
0000000100028296	leaq	-0x3(%r15), %r10
000000010002829a	movq	%r10, %rcx
000000010002829d	shlq	$0x4, %rcx
00000001000282a1	movq	(%r12,%rcx), %rcx
00000001000282a5	cmpq	%rax, %rcx
00000001000282a8	jb	0x1000282ae
00000001000282aa	leaq	-0x2(%r15), %r10
00000001000282ae	cmpq	%r10, %r15
00000001000282b1	jbe	0x10002b2a2
00000001000282b7	leaq	0x1(%r10), %rax
00000001000282bb	cmpq	%rax, %r15
00000001000282be	jbe	0x10002b263
00000001000282c4	movq	%r10, %rcx
00000001000282c7	shlq	$0x4, %rcx
00000001000282cb	movq	0x8(%r12,%rcx), %rdi
00000001000282d0	shlq	$0x4, %rax
00000001000282d4	movq	(%r12,%rax), %rdx
00000001000282d8	movq	0x8(%r12,%rax), %rbx
00000001000282dd	addq	%rdx, %rbx
00000001000282e0	movq	%rbx, %r13
00000001000282e3	subq	%rdi, %r13
00000001000282e6	jb	0x10002b27a
00000001000282ec	movq	%r9, -0xa0(%rbp)
00000001000282f3	cmpq	%rsi, %rbx
00000001000282f6	ja	0x10002b28e
00000001000282fc	movq	%rdx, -0x90(%rbp)
0000000100028303	movq	%r10, -0x38(%rbp)
0000000100028307	movq	%r15, -0x30(%rbp)
000000010002830b	leaq	(%r12,%rcx), %rdx
000000010002830f	movq	%rdx, -0x88(%rbp)
0000000100028316	movq	(%r12,%rcx), %rdx
000000010002831a	leaq	(%r12,%rax), %rcx
000000010002831e	movq	%rcx, -0x50(%rbp)
0000000100028322	leaq	0x8(%r12,%rax), %rax
0000000100028327	movq	%rax, -0x68(%rbp)
000000010002832b	movq	%rdi, -0x58(%rbp)
000000010002832f	movq	%rdi, %r15
0000000100028332	shlq	$0x4, %r15
0000000100028336	addq	-0xa8(%rbp), %r15
000000010002833d	movq	%rdx, %r14
0000000100028340	shlq	$0x4, %r14
0000000100028344	leaq	(%r15,%r14), %r12
0000000100028348	shlq	$0x4, %rbx
000000010002834c	movq	%r13, %rax
000000010002834f	subq	%rdx, %rax
0000000100028352	movq	%rdx, -0x60(%rbp)
0000000100028356	cmpq	%rdx, %rax
0000000100028359	jae	0x100028420
000000010002835f	movq	%rax, -0xe0(%rbp)
0000000100028366	movq	%rax, %r14
0000000100028369	shlq	$0x4, %r14
000000010002836d	movq	-0x80(%rbp), %r13
0000000100028371	movq	%r13, %rdi
0000000100028374	movq	%r12, %rsi
0000000100028377	movq	%r14, %rdx
000000010002837a	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002837f	addq	%r13, %r14
0000000100028382	movq	-0x60(%rbp), %rdi
0000000100028386	testq	%rdi, %rdi
0000000100028389	jle	0x1000284b5
000000010002838f	cmpq	$0x0, -0xe0(%rbp)
0000000100028397	movq	-0x88(%rbp), %r13
000000010002839e	jle	0x1000281b0
00000001000283a4	addq	-0xd8(%rbp), %rbx
00000001000283ab	nopl	(%rax,%rax)
00000001000283b0	movq	%r14, %rax
00000001000283b3	movq	%r12, %rcx
00000001000283b6	movq	-0x10(%r14), %rdx
00000001000283ba	movq	-0x10(%r12), %rsi
00000001000283bf	cmpq	%rsi, %rdx
00000001000283c2	movl	$0x0, %r12d
00000001000283c8	sbbq	%r12, %r12
00000001000283cb	cmpq	%rsi, %rdx
00000001000283ce	movl	$0x0, %r14d
00000001000283d4	adcq	$-0x1, %r14
00000001000283d8	shlq	$0x4, %r12
00000001000283dc	addq	%rcx, %r12
00000001000283df	shlq	$0x4, %r14
00000001000283e3	addq	%rax, %r14
00000001000283e6	cmpq	%rsi, %rdx
00000001000283e9	movq	%r14, %rax
00000001000283ec	cmovbq	%r12, %rax
00000001000283f0	movq	(%rax), %rcx
00000001000283f3	movq	0x8(%rax), %rax
00000001000283f7	movq	%rax, 0x8(%rbx)
00000001000283fb	movq	%rcx, (%rbx)
00000001000283fe	cmpq	%r15, %r12
0000000100028401	jbe	0x1000281b0
0000000100028407	addq	$-0x10, %rbx
000000010002840b	cmpq	-0x80(%rbp), %r14
000000010002840f	ja	0x1000283b0
0000000100028411	jmp	0x1000281b0
0000000100028416	nopw	%cs:(%rax,%rax)
0000000100028420	movq	-0x80(%rbp), %rdi
0000000100028424	movq	%r15, %rsi
0000000100028427	movq	%r14, %rdx
000000010002842a	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002842f	addq	-0x80(%rbp), %r14
0000000100028433	movq	-0x60(%rbp), %r9
0000000100028437	testq	%r9, %r9
000000010002843a	jle	0x1000284b0
000000010002843c	cmpq	%r9, %r13
000000010002843f	jle	0x1000284b0
0000000100028441	addq	-0xa8(%rbp), %rbx
0000000100028448	movq	-0x80(%rbp), %rsi
000000010002844c	movq	-0x88(%rbp), %r13
0000000100028453	nopw	%cs:(%rax,%rax)
000000010002845d	nopl	(%rax)
0000000100028460	movq	%rsi, %rdx
0000000100028463	movq	(%r12), %rcx
0000000100028467	xorl	%esi, %esi
0000000100028469	xorl	%eax, %eax
000000010002846b	cmpq	(%rdx), %rcx
000000010002846e	setae	%sil
0000000100028472	setb	%cl
0000000100028475	movq	%rdx, %rdi
0000000100028478	cmovbq	%r12, %rdi
000000010002847c	movq	(%rdi), %r8
000000010002847f	movq	0x8(%rdi), %rdi
0000000100028483	movq	%rdi, 0x8(%r15)
0000000100028487	movq	%r8, (%r15)
000000010002848a	addq	$0x10, %r15
000000010002848e	shlq	$0x4, %rsi
0000000100028492	addq	%rdx, %rsi
0000000100028495	cmpq	%r14, %rsi
0000000100028498	jae	0x1000284a8
000000010002849a	movb	%cl, %al
000000010002849c	shlq	$0x4, %rax
00000001000284a0	addq	%rax, %r12
00000001000284a3	cmpq	%rbx, %r12
00000001000284a6	jb	0x100028460
00000001000284a8	movq	%r9, %rbx
00000001000284ab	jmp	0x1000281ba
00000001000284b0	movq	%r9, %rbx
00000001000284b3	jmp	0x1000284bb
00000001000284b5	movq	%rdi, %rbx
00000001000284b8	movq	%r12, %r15
00000001000284bb	movq	-0x80(%rbp), %rsi
00000001000284bf	movq	-0x88(%rbp), %r13
00000001000284c6	jmp	0x1000281ba
00000001000284cb	nopl	(%rax,%rax)
00000001000284d0	cmpq	$0x2, %rdx
00000001000284d4	jne	0x10002852f
00000001000284d6	leaq	0x2(%r13), %r8
00000001000284da	movl	$0x2, %edx
00000001000284df	movq	-0xa0(%rbp), %r15
00000001000284e6	jmp	0x100028057
00000001000284eb	movq	-0xf8(%rbp), %rsi
00000001000284f2	leaq	(%rsi,%r13), %r9
00000001000284f6	movq	-0x108(%rbp), %rsi
00000001000284fd	leaq	(%rsi,%rax), %r10
0000000100028501	movl	$0x2, %r8d
0000000100028507	movq	%r15, %r11
000000010002850a	nopw	(%rax,%rax)
0000000100028510	movq	%r11, %rbx
0000000100028513	movq	(%r10), %r11
0000000100028516	cmpq	%rbx, %r11
0000000100028519	jae	0x100028570
000000010002851b	leaq	0x1(%r9,%r8), %rbx
0000000100028520	incq	%r8
0000000100028523	addq	$0x10, %r10
0000000100028527	cmpq	$0x2, %rbx
000000010002852b	jne	0x100028510
000000010002852d	jmp	0x10002856d
000000010002852f	movq	-0xf8(%rbp), %rsi
0000000100028536	leaq	(%rsi,%r13), %r9
000000010002853a	movq	-0x108(%rbp), %rsi
0000000100028541	leaq	(%rsi,%rax), %r10
0000000100028545	movl	$0x2, %r8d
000000010002854b	movq	%r15, %r11
000000010002854e	nop
0000000100028550	movq	%r11, %rbx
0000000100028553	movq	(%r10), %r11
0000000100028556	cmpq	%rbx, %r11
0000000100028559	jb	0x100028570
000000010002855b	leaq	0x1(%r9,%r8), %rbx
0000000100028560	incq	%r8
0000000100028563	addq	$0x10, %r10
0000000100028567	cmpq	$0x2, %rbx
000000010002856b	jne	0x100028550
000000010002856d	movq	%rdx, %r8
0000000100028570	leaq	(%r8,%r13), %rsi
0000000100028574	movq	%r8, %rdx
0000000100028577	movq	%rsi, %r8
000000010002857a	cmpq	%rcx, %r15
000000010002857d	movq	-0x40(%rbp), %rsi
0000000100028581	movq	-0xa0(%rbp), %r15
0000000100028588	jae	0x100028057
000000010002858e	cmpq	%r13, %r8
0000000100028591	jb	0x10002b560
0000000100028597	cmpq	%rsi, %r8
000000010002859a	ja	0x10002b54c
00000001000285a0	cmpq	$0x2, %rdx
00000001000285a4	jb	0x100028057
00000001000285aa	movq	%r8, %r11
00000001000285ad	movq	%rdx, %rcx
00000001000285b0	shrq	%rcx
00000001000285b3	cmpq	$0x1, %rcx
00000001000285b7	jne	0x1000285c9
00000001000285b9	xorl	%r10d, %r10d
00000001000285bc	jmp	0x100028621
00000001000285be	movl	$0x2, %r15d
00000001000285c4	jmp	0x100028026
00000001000285c9	movq	%rcx, %r8
00000001000285cc	andq	$-0x2, %r8
00000001000285d0	addq	-0x178(%rbp), %rax
00000001000285d7	leaq	(%r13,%rdx), %r9
00000001000285dc	shlq	$0x4, %r9
00000001000285e0	addq	-0xd8(%rbp), %r9
00000001000285e7	xorl	%r10d, %r10d
00000001000285ea	nopw	(%rax,%rax)
00000001000285f0	movups	-0x10(%rax), %xmm0
00000001000285f4	movups	(%r9), %xmm1
00000001000285f8	movups	%xmm1, -0x10(%rax)
00000001000285fc	movups	%xmm0, (%r9)
0000000100028600	movups	(%rax), %xmm0
0000000100028603	movups	-0x10(%r9), %xmm1
0000000100028608	movups	%xmm1, (%rax)
000000010002860b	movups	%xmm0, -0x10(%r9)
0000000100028610	addq	$0x2, %r10
0000000100028614	addq	$0x20, %rax
0000000100028618	addq	$-0x20, %r9
000000010002861c	cmpq	%r10, %r8
000000010002861f	jne	0x1000285f0
0000000100028621	testb	$0x2, %dl
0000000100028624	je	0x10002865f
0000000100028626	movq	%rdx, %rax
0000000100028629	shlq	$0x4, %rax
000000010002862d	addq	%rdi, %rax
0000000100028630	movq	%rcx, %r8
0000000100028633	shlq	$0x4, %r8
0000000100028637	subq	%r8, %rax
000000010002863a	movq	%r10, %r8
000000010002863d	notq	%r8
0000000100028640	addq	%rcx, %r8
0000000100028643	shlq	$0x4, %r10
0000000100028647	shlq	$0x4, %r8
000000010002864b	movups	(%rdi,%r10), %xmm0
0000000100028650	movups	(%rax,%r8), %xmm1
0000000100028655	movups	%xmm1, (%rdi,%r10)
000000010002865a	movups	%xmm0, (%rax,%r8)
000000010002865f	movq	%r11, %r8
0000000100028662	jmp	0x100028057
0000000100028667	movl	$0x3, %r15d
000000010002866d	jmp	0x100028026
0000000100028672	movq	-0xd0(%rbp), %rsi
0000000100028679	shlq	$0x4, %rsi
000000010002867d	movl	$0x8, %edx
0000000100028682	movq	%r12, %rdi
0000000100028685	callq	___rust_dealloc
000000010002868a	movl	$0x8, %edx
000000010002868f	movq	-0x80(%rbp), %rdi
0000000100028693	movq	-0x150(%rbp), %rsi
000000010002869a	callq	___rust_dealloc
000000010002869f	movq	$0x8, -0xc0(%rbp)
00000001000286aa	movq	$0x0, -0xb8(%rbp)
00000001000286b5	movq	$0x0, -0xb0(%rbp)
00000001000286c0	movq	$0x8, -0x128(%rbp)
00000001000286cb	movq	$0x0, -0x120(%rbp)
00000001000286d6	movq	$0x0, -0x118(%rbp)
00000001000286e1	movq	-0x138(%rbp), %rax
00000001000286e8	movq	0x30(%rax), %rcx
00000001000286ec	movq	0x38(%rax), %rax
00000001000286f0	movq	%rcx, -0x280(%rbp)
00000001000286f7	movq	%rax, -0x278(%rbp)
00000001000286fe	movq	$0x0, -0x270(%rbp)
0000000100028709	leaq	-0x4d8(%rbp), %rdi
0000000100028710	leaq	-0x280(%rbp), %rsi
0000000100028717	callq	__ZN5gimli4read4unit33DebugInfoUnitHeadersIter$LT$R$GT$4next17h8b6fac7ca58410afE ## gimli::read::unit::DebugInfoUnitHeadersIter$LT$R$GT$::next::h8b6fac7ca58410af
000000010002871c	movq	-0x4d8(%rbp), %rcx
0000000100028723	cmpq	$0x3, %rcx
0000000100028727	jne	0x100028854
000000010002872d	movq	-0x128(%rbp), %rbx
0000000100028734	movq	-0x118(%rbp), %r15
000000010002873b	incq	%r15
000000010002873e	movq	%rbx, %rdi
0000000100028741	nopw	%cs:(%rax,%rax)
000000010002874b	nopl	(%rax,%rax)
0000000100028750	cmpq	$0x1, %r15
0000000100028754	je	0x10002876a
0000000100028756	leaq	0x218(%rdi), %r14
000000010002875d	decq	%r15
0000000100028760	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
0000000100028765	movq	%r14, %rdi
0000000100028768	jmp	0x100028750
000000010002876a	movq	-0x120(%rbp), %rax
0000000100028771	testq	%rax, %rax
0000000100028774	je	0x10002878a
0000000100028776	imulq	$0x218, %rax, %rsi              ## imm = 0x218
000000010002877d	movl	$0x8, %edx
0000000100028782	movq	%rbx, %rdi
0000000100028785	callq	___rust_dealloc
000000010002878a	movq	-0xb8(%rbp), %rsi
0000000100028791	testq	%rsi, %rsi
0000000100028794	je	0x1000287ab
0000000100028796	movq	-0xc0(%rbp), %rdi
000000010002879d	shlq	$0x5, %rsi
00000001000287a1	movl	$0x8, %edx
00000001000287a6	callq	___rust_dealloc
00000001000287ab	movq	-0x168(%rbp), %rsi
00000001000287b2	testq	%rsi, %rsi
00000001000287b5	je	0x1000287cc
00000001000287b7	movq	-0x170(%rbp), %rdi
00000001000287be	shlq	$0x4, %rsi
00000001000287c2	movl	$0x8, %edx
00000001000287c7	callq	___rust_dealloc
00000001000287cc	movq	-0x220(%rbp), %rax
00000001000287d3	lock
00000001000287d4	decq	(%rax)
00000001000287d7	jne	0x1000287e7
00000001000287d9	movb	$0x1, %bl
00000001000287db	leaq	-0x220(%rbp), %rdi
00000001000287e2	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
00000001000287e7	movq	-0x218(%rbp), %rax
00000001000287ee	movb	$0x2, 0x200(%rax)
00000001000287f5	movb	$0x1, %bl
00000001000287f7	testb	%bl, %bl
00000001000287f9	je	0x100028814
00000001000287fb	movq	-0x148(%rbp), %rax
0000000100028802	cmpb	$0x2, 0x78(%rax)
0000000100028806	je	0x100028814
0000000100028808	movq	-0x148(%rbp), %rdi
000000010002880f	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
0000000100028814	cmpb	$0x0, -0x110(%rbp)
000000010002881b	je	0x100028836
000000010002881d	movq	-0x158(%rbp), %rax
0000000100028824	cmpb	$0x2, 0x78(%rax)
0000000100028828	je	0x100028836
000000010002882a	movq	-0x158(%rbp), %rdi
0000000100028831	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
0000000100028836	movq	-0xc8(%rbp), %rdi
000000010002883d	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
0000000100028842	addq	$0x7b8, %rsp                    ## imm = 0x7B8
0000000100028849	popq	%rbx
000000010002884a	popq	%r12
000000010002884c	popq	%r13
000000010002884e	popq	%r14
0000000100028850	popq	%r15
0000000100028852	popq	%rbp
0000000100028853	retq
0000000100028854	leaq	-0x670(%rbp), %r15
000000010002885b	leaq	-0x1b0(%rbp), %r14
0000000100028862	leaq	-0x4d8(%rbp), %rax
0000000100028869	movq	%rax, -0x108(%rbp)
0000000100028870	leaq	-0x280(%rbp), %r13
0000000100028877	nopw	(%rax,%rax)
0000000100028880	movq	-0x4d0(%rbp), %rbx
0000000100028887	movq	-0x4c8(%rbp), %rax
000000010002888e	leaq	-0x4c0(%rbp), %rsi
0000000100028895	movq	0x30(%rsi), %rdx
0000000100028899	movq	%rdx, -0x650(%rbp)
00000001000288a0	movq	0x28(%rsi), %rdx
00000001000288a4	movq	%rdx, -0x658(%rbp)
00000001000288ab	movq	0x20(%rsi), %rdx
00000001000288af	movq	%rdx, -0x660(%rbp)
00000001000288b6	movq	0x18(%rsi), %rdx
00000001000288ba	movq	%rdx, -0x668(%rbp)
00000001000288c1	movq	0x10(%rsi), %rdx
00000001000288c5	movq	%rdx, -0x670(%rbp)
00000001000288cc	movq	(%rsi), %rdx
00000001000288cf	movq	0x8(%rsi), %rsi
00000001000288d3	movq	%rsi, -0x678(%rbp)
00000001000288da	movq	%rdx, -0x680(%rbp)
00000001000288e1	movq	%rdx, -0x6e8(%rbp)
00000001000288e8	movq	%rsi, -0x6e0(%rbp)
00000001000288ef	movq	(%r15), %rdx
00000001000288f2	movq	0x8(%r15), %rsi
00000001000288f6	movq	%rdx, -0x2c0(%rbp)
00000001000288fd	movq	%rsi, -0x2b8(%rbp)
0000000100028904	movq	0x10(%r15), %rdx
0000000100028908	movq	%rdx, -0x2b0(%rbp)
000000010002890f	movq	0x18(%r15), %rdx
0000000100028913	movq	%rdx, -0x2a8(%rbp)
000000010002891a	movq	0x20(%r15), %rdx
000000010002891e	movq	%rdx, -0x2a0(%rbp)
0000000100028925	cmpq	$0x2, %rcx
0000000100028929	je	0x100029ddf
000000010002892f	testq	%rcx, %rcx
0000000100028932	jne	0x100028941
0000000100028934	movq	%rax, %rcx
0000000100028937	orq	$0x4, %rcx
000000010002893b	cmpq	$0x5, %rcx
000000010002893f	jne	0x100028966
0000000100028941	leaq	-0x4d8(%rbp), %rdi
0000000100028948	movq	%r13, %rsi
000000010002894b	callq	__ZN5gimli4read4unit33DebugInfoUnitHeadersIter$LT$R$GT$4next17h8b6fac7ca58410afE ## gimli::read::unit::DebugInfoUnitHeadersIter$LT$R$GT$::next::h8b6fac7ca58410af
0000000100028950	movq	-0x4d8(%rbp), %rcx
0000000100028957	cmpq	$0x3, %rcx
000000010002895b	jne	0x100028880
0000000100028961	jmp	0x10002872d
0000000100028966	movq	-0x118(%rbp), %r12
000000010002896d	movq	-0x138(%rbp), %rsi
0000000100028974	movq	$0x0, -0x1c8(%rbp)
000000010002897f	movq	%rbx, -0x1c0(%rbp)
0000000100028986	movq	%rax, -0x1b8(%rbp)
000000010002898d	movq	-0x6e8(%rbp), %rax
0000000100028994	movq	-0x6e0(%rbp), %rcx
000000010002899b	movq	%rcx, 0x8(%r14)
000000010002899f	movq	%rax, (%r14)
00000001000289a2	movq	-0x2a0(%rbp), %rax
00000001000289a9	movq	%rax, 0x30(%r14)
00000001000289ad	movq	-0x2a8(%rbp), %rax
00000001000289b4	movq	%rax, 0x28(%r14)
00000001000289b8	movq	-0x2b0(%rbp), %rax
00000001000289bf	movq	%rax, 0x20(%r14)
00000001000289c3	movq	-0x2c0(%rbp), %rax
00000001000289ca	movq	-0x2b8(%rbp), %rcx
00000001000289d1	movq	%rcx, 0x18(%r14)
00000001000289d5	movq	%rax, 0x10(%r14)
00000001000289d9	leaq	-0x4d8(%rbp), %rdi
00000001000289e0	leaq	-0x1c8(%rbp), %rdx
00000001000289e7	callq	__ZN5gimli4read5dwarf13Unit$LT$R$GT$3new17h1616263b38dd04dcE ## gimli::read::dwarf::Unit$LT$R$GT$::new::h1616263b38dd04dc
00000001000289ec	cmpl	$0x2, -0x4d8(%rbp)
00000001000289f3	je	0x100028941
00000001000289f9	movq	%r12, -0x80(%rbp)
00000001000289fd	movl	$0x1a8, %edx                    ## imm = 0x1A8
0000000100028a02	leaq	-0x680(%rbp), %r12
0000000100028a09	movq	%r12, %rdi
0000000100028a0c	leaq	-0x4d8(%rbp), %rsi
0000000100028a13	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100028a18	movq	-0x528(%rbp), %rdi
0000000100028a1f	leaq	0x10(%rdi), %rax
0000000100028a23	movq	-0x658(%rbp), %rsi
0000000100028a2a	movq	-0x650(%rbp), %r8
0000000100028a31	movq	%rsi, -0x1c8(%rbp)
0000000100028a38	movq	%r8, -0x1c0(%rbp)
0000000100028a3f	movq	%r12, -0x1b8(%rbp)
0000000100028a46	movq	%rax, -0x1b0(%rbp)
0000000100028a4d	movq	$0x0, -0x1a8(%rbp)
0000000100028a58	testq	%r8, %r8
0000000100028a5b	je	0x100029e31
0000000100028a61	movl	$0x1, %edx
0000000100028a66	subq	%r8, %rdx
0000000100028a69	leaq	0x1(%rsi), %r9
0000000100028a6d	xorl	%eax, %eax
0000000100028a6f	xorl	%ecx, %ecx
0000000100028a71	nopw	%cs:(%rax,%rax)
0000000100028a7b	nopl	(%rax,%rax)
0000000100028a80	movzbl	-0x1(%r9), %r10d
0000000100028a85	cmpl	$0x3f, %ecx
0000000100028a88	jne	0x100028a94
0000000100028a8a	cmpb	$0x2, %r10b
0000000100028a8e	jae	0x100029e16
0000000100028a94	movzbl	%r10b, %r10d
0000000100028a98	movl	%r10d, %r11d
0000000100028a9b	andl	$0x7f, %r11d
0000000100028a9f	shlq	%cl, %r11
0000000100028aa2	orq	%r11, %rax
0000000100028aa5	testb	%r10b, %r10b
0000000100028aa8	jns	0x100028abe
0000000100028aaa	addl	$0x7, %ecx
0000000100028aad	incq	%rdx
0000000100028ab0	incq	%r9
0000000100028ab3	cmpq	$0x1, %rdx
0000000100028ab7	jne	0x100028a80
0000000100028ab9	jmp	0x100029e1b
0000000100028abe	movq	%r9, -0x1c8(%rbp)
0000000100028ac5	negq	%rdx
0000000100028ac8	movq	%rdx, -0x1c0(%rbp)
0000000100028acf	testq	%rax, %rax
0000000100028ad2	jne	0x100028b81
0000000100028ad8	lock
0000000100028ad9	decq	(%rdi)
0000000100028adc	jne	0x100028ae3
0000000100028ade	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100028ae3	cmpl	$0x2f, -0x620(%rbp)
0000000100028aea	je	0x100028941
0000000100028af0	movq	-0x5c8(%rbp), %rsi
0000000100028af7	testq	%rsi, %rsi
0000000100028afa	je	0x100028b11
0000000100028afc	movq	-0x5d0(%rbp), %rdi
0000000100028b03	shlq	$0x2, %rsi
0000000100028b07	movl	$0x2, %edx
0000000100028b0c	callq	___rust_dealloc
0000000100028b11	movq	-0x5b0(%rbp), %rax
0000000100028b18	testq	%rax, %rax
0000000100028b1b	je	0x100028b36
0000000100028b1d	movq	-0x5b8(%rbp), %rdi
0000000100028b24	shlq	$0x3, %rax
0000000100028b28	leaq	(%rax,%rax,2), %rsi
0000000100028b2c	movl	$0x8, %edx
0000000100028b31	callq	___rust_dealloc
0000000100028b36	movq	-0x598(%rbp), %rsi
0000000100028b3d	testq	%rsi, %rsi
0000000100028b40	je	0x100028b57
0000000100028b42	movq	-0x5a0(%rbp), %rdi
0000000100028b49	shlq	$0x2, %rsi
0000000100028b4d	movl	$0x2, %edx
0000000100028b52	callq	___rust_dealloc
0000000100028b57	movq	-0x580(%rbp), %rsi
0000000100028b5e	testq	%rsi, %rsi
0000000100028b61	je	0x100028941
0000000100028b67	movq	-0x588(%rbp), %rdi
0000000100028b6e	shlq	$0x6, %rsi
0000000100028b72	movl	$0x8, %edx
0000000100028b77	callq	___rust_dealloc
0000000100028b7c	jmp	0x100028941
0000000100028b81	leaq	-0x1(%rax), %rcx
0000000100028b85	cmpq	0x20(%rdi), %rcx
0000000100028b89	jae	0x100028b98
0000000100028b8b	imulq	$0x70, %rcx, %rcx
0000000100028b8f	addq	0x10(%rdi), %rcx
0000000100028b93	jmp	0x100028c1f
0000000100028b98	movq	0x28(%rdi), %rcx
0000000100028b9c	testq	%rcx, %rcx
0000000100028b9f	je	0x100029e31
0000000100028ba5	movq	0x30(%rdi), %rdx
0000000100028ba9	movzwl	0x532(%rcx), %r8d
0000000100028bb1	imulq	$0x70, %r8, %r9
0000000100028bb5	movq	$-0x1, %rsi
0000000100028bbc	movl	$0x70, %edi
0000000100028bc1	leaq	(%r9,%rdi), %r10
0000000100028bc5	cmpq	$0x70, %r10
0000000100028bc9	je	0x100028bfc
0000000100028bcb	xorl	%r10d, %r10d
0000000100028bce	cmpq	%rax, 0x4e0(%rcx,%rsi,8)
0000000100028bd6	setne	%r10b
0000000100028bda	movl	$0xff, %r11d
0000000100028be0	cmoval	%r11d, %r10d
0000000100028be4	incq	%rsi
0000000100028be7	addq	$-0x70, %rdi
0000000100028beb	cmpb	$0x1, %r10b
0000000100028bef	je	0x100028bc1
0000000100028bf1	movzbl	%r10b, %r8d
0000000100028bf5	testl	%r8d, %r8d
0000000100028bf8	jne	0x100028bff
0000000100028bfa	jmp	0x100028c13
0000000100028bfc	movq	%r8, %rsi
0000000100028bff	subq	$0x1, %rdx
0000000100028c03	jb	0x100029e31
0000000100028c09	movq	0x538(%rcx,%rsi,8), %rcx
0000000100028c11	jmp	0x100028ba9
0000000100028c13	testq	%rcx, %rcx
0000000100028c16	je	0x100029e31
0000000100028c1c	subq	%rdi, %rcx
0000000100028c1f	cmpb	$0x1, 0x6a(%rcx)
0000000100028c23	jne	0x100028c30
0000000100028c25	movq	$0x1, -0x1a8(%rbp)
0000000100028c30	movq	%rcx, %rdi
0000000100028c33	callq	__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E ## _$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$::deref::h56aa4bb069c6ca35
0000000100028c38	movq	%rax, -0xa0(%rbp)
0000000100028c3f	testq	%rdx, %rdx
0000000100028c42	je	0x10002933b
0000000100028c48	shlq	$0x4, %rdx
0000000100028c4c	xorl	%edi, %edi
0000000100028c4e	xorl	%eax, %eax
0000000100028c50	movq	%rax, -0x38(%rbp)
0000000100028c54	xorl	%eax, %eax
0000000100028c56	movq	%rax, -0x90(%rbp)
0000000100028c5d	xorl	%eax, %eax
0000000100028c5f	movq	%rax, -0x68(%rbp)
0000000100028c63	xorl	%eax, %eax
0000000100028c65	movq	%rax, -0x88(%rbp)
0000000100028c6c	xorl	%eax, %eax
0000000100028c6e	movq	%rax, -0x58(%rbp)
0000000100028c72	movq	%rdx, -0x30(%rbp)
0000000100028c76	movq	-0xa0(%rbp), %rcx
0000000100028c7d	movq	(%rcx,%rdi), %rax
0000000100028c81	movq	%rdi, %r12
0000000100028c84	movq	0x8(%rcx,%rdi), %rcx
0000000100028c89	movq	%rcx, -0x7d8(%rbp)
0000000100028c90	movq	%rax, -0x7e0(%rbp)
0000000100028c97	movq	-0x1b8(%rbp), %rdx
0000000100028c9e	movl	0x48(%rdx), %edx
0000000100028ca1	movq	%rcx, -0xe8(%rbp)
0000000100028ca8	movq	%rax, -0xf0(%rbp)
0000000100028caf	leaq	-0x4d8(%rbp), %rdi
0000000100028cb6	leaq	-0x1c8(%rbp), %rsi
0000000100028cbd	leaq	-0xf0(%rbp), %rcx
0000000100028cc4	callq	__ZN5gimli4read4unit15parse_attribute17h17952ac8fc6ba1b0E ## gimli::read::unit::parse_attribute::h17952ac8fc6ba1b0
0000000100028cc9	movq	-0x4d8(%rbp), %rax
0000000100028cd0	cmpq	$0x2e, %rax
0000000100028cd4	je	0x100029e31
0000000100028cda	movq	-0x4c0(%rbp), %rcx
0000000100028ce1	movups	-0x4d0(%rbp), %xmm0
0000000100028ce8	movups	%xmm0, -0x200(%rbp)
0000000100028cef	movq	%rax, -0x208(%rbp)
0000000100028cf6	movq	%rcx, -0x1f0(%rbp)
0000000100028cfd	movzwl	%cx, %eax
0000000100028d00	cmpl	$0x12, %eax
0000000100028d03	jg	0x100028dc7
0000000100028d09	cmpl	$0x11, %eax
0000000100028d0c	je	0x100028e78
0000000100028d12	cmpl	$0x12, %eax
0000000100028d15	jne	0x1000291bd
0000000100028d1b	leaq	-0x4d8(%rbp), %rdi
0000000100028d22	leaq	-0x208(%rbp), %rsi
0000000100028d29	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100028d2e	movq	-0x4d8(%rbp), %rax
0000000100028d35	testq	%rax, %rax
0000000100028d38	je	0x100028fe6
0000000100028d3e	cmpl	$0x7, %eax
0000000100028d41	je	0x100028fc7
0000000100028d47	cmpl	$0xc, %eax
0000000100028d4a	jne	0x1000291bd
0000000100028d50	movq	-0x138(%rbp), %rcx
0000000100028d57	movq	-0x4f0(%rbp), %rdx
0000000100028d5e	movq	0x18(%rcx), %rax
0000000100028d62	subq	%rdx, %rax
0000000100028d65	jb	0x100029e31
0000000100028d6b	movq	%rdx, %r8
0000000100028d6e	movzbl	-0x638(%rbp), %edi
0000000100028d75	movq	-0x4d0(%rbp), %rdx
0000000100028d7c	imulq	%rdi, %rdx
0000000100028d80	movq	%rax, %rsi
0000000100028d83	subq	%rdx, %rsi
0000000100028d86	jb	0x100029e31
0000000100028d8c	decl	%edi
0000000100028d8e	cmpl	$0x7, %edi
0000000100028d91	ja	0x100029e31
0000000100028d97	addq	0x10(%rcx), %r8
0000000100028d9b	addq	%rdx, %r8
0000000100028d9e	movq	%r8, -0x60(%rbp)
0000000100028da2	leaq	0x2cd3(%rip), %r8
0000000100028da9	movslq	(%r8,%rdi,4), %rcx
0000000100028dad	addq	%r8, %rcx
0000000100028db0	jmpq	*%rcx
0000000100028db2	cmpq	%rdx, %rax
0000000100028db5	je	0x100029e31
0000000100028dbb	movq	-0x60(%rbp), %rax
0000000100028dbf	movzbl	(%rax), %eax
0000000100028dc2	jmp	0x1000290e2
0000000100028dc7	cmpl	$0x13, %eax
0000000100028dca	je	0x100028f1b
0000000100028dd0	cmpl	$0x55, %eax
0000000100028dd3	jne	0x1000291bd
0000000100028dd9	movq	-0x138(%rbp), %rax
0000000100028de0	movq	%rax, -0x58(%rbp)
0000000100028de4	leaq	-0x4d8(%rbp), %rdi
0000000100028deb	leaq	-0x208(%rbp), %rsi
0000000100028df2	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100028df7	movq	-0x4d8(%rbp), %rcx
0000000100028dfe	movq	-0x4d0(%rbp), %rax
0000000100028e05	cmpq	$0x16, %rcx
0000000100028e09	je	0x100028f61
0000000100028e0f	cmpl	$0x18, %ecx
0000000100028e12	jne	0x100028fbc
0000000100028e18	movq	-0x4e0(%rbp), %rsi
0000000100028e1f	movq	-0x58(%rbp), %r8
0000000100028e23	movq	0xc8(%r8), %rdx
0000000100028e2a	subq	%rsi, %rdx
0000000100028e2d	jb	0x100029e31
0000000100028e33	movl	-0x638(%rbp), %ecx
0000000100028e39	movzbl	%ch, %edi
0000000100028e3c	imulq	%rdi, %rax
0000000100028e40	subq	%rax, %rdx
0000000100028e43	jb	0x100029e31
0000000100028e49	movq	0xc0(%r8), %rdi
0000000100028e50	addq	%rsi, %rdi
0000000100028e53	andl	$0xff00, %ecx                   ## imm = 0xFF00
0000000100028e59	cmpl	$0x800, %ecx                    ## imm = 0x800
0000000100028e5f	jne	0x100028fff
0000000100028e65	cmpq	$0x7, %rdx
0000000100028e69	jbe	0x100029e31
0000000100028e6f	movq	(%rdi,%rax), %rax
0000000100028e73	jmp	0x10002900c
0000000100028e78	leaq	-0x4d8(%rbp), %rdi
0000000100028e7f	leaq	-0x208(%rbp), %rsi
0000000100028e86	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100028e8b	movq	-0x4d8(%rbp), %rax
0000000100028e92	testq	%rax, %rax
0000000100028e95	je	0x100028fa0
0000000100028e9b	cmpl	$0xc, %eax
0000000100028e9e	jne	0x1000291bd
0000000100028ea4	movq	-0x138(%rbp), %rcx
0000000100028eab	movq	-0x4f0(%rbp), %rdx
0000000100028eb2	movq	0x18(%rcx), %rax
0000000100028eb6	subq	%rdx, %rax
0000000100028eb9	jb	0x100029e31
0000000100028ebf	movq	%rdx, %r8
0000000100028ec2	movzbl	-0x638(%rbp), %edi
0000000100028ec9	movq	-0x4d0(%rbp), %rdx
0000000100028ed0	imulq	%rdi, %rdx
0000000100028ed4	movq	%rax, %rsi
0000000100028ed7	subq	%rdx, %rsi
0000000100028eda	jb	0x100029e31
0000000100028ee0	decl	%edi
0000000100028ee2	cmpl	$0x7, %edi
0000000100028ee5	ja	0x100029e31
0000000100028eeb	addq	0x10(%rcx), %r8
0000000100028eef	addq	%rdx, %r8
0000000100028ef2	movq	%r8, -0x50(%rbp)
0000000100028ef6	leaq	0x2b9f(%rip), %r8
0000000100028efd	movslq	(%r8,%rdi,4), %rcx
0000000100028f01	addq	%r8, %rcx
0000000100028f04	jmpq	*%rcx
0000000100028f06	cmpq	%rdx, %rax
0000000100028f09	je	0x100029e31
0000000100028f0f	movq	-0x50(%rbp), %rax
0000000100028f13	movzbl	(%rax), %eax
0000000100028f16	jmp	0x10002905c
0000000100028f1b	leaq	-0x4d8(%rbp), %rdi
0000000100028f22	leaq	-0x208(%rbp), %rsi
0000000100028f29	callq	__ZN5gimli4read4unit18Attribute$LT$R$GT$5value17h2dba70bb4ca941b8E ## gimli::read::unit::Attribute$LT$R$GT$::value::h2dba70bb4ca941b8
0000000100028f2e	movq	-0x4d8(%rbp), %rax
0000000100028f35	cmpq	$0x26, %rax
0000000100028f39	jne	0x100028f49
0000000100028f3b	movzwl	-0x4d0(%rbp), %ecx
0000000100028f42	movw	%cx, -0xa8(%rbp)
0000000100028f49	cmpl	$0x26, %eax
0000000100028f4c	movl	$0x1, %eax
0000000100028f51	movq	-0x38(%rbp), %rcx
0000000100028f55	cmovel	%eax, %ecx
0000000100028f58	movq	%rcx, -0x38(%rbp)
0000000100028f5c	jmp	0x1000291bd
0000000100028f61	cmpw	$0x5, -0x636(%rbp)
0000000100028f69	movl	$0x0, %edx
0000000100028f6e	jae	0x100028f77
0000000100028f70	movq	-0x4e0(%rbp), %rdx
0000000100028f77	movq	-0x58(%rbp), %rcx
0000000100028f7b	cmpb	$0x0, 0xe0(%rcx)
0000000100028f82	movl	$0x0, %ecx
0000000100028f87	cmoveq	%rcx, %rdx
0000000100028f8b	addq	%rax, %rdx
0000000100028f8e	movq	%rdx, -0x40(%rbp)
0000000100028f92	movl	$0x1, %eax
0000000100028f97	movq	%rax, -0x58(%rbp)
0000000100028f9b	jmp	0x1000291bd
0000000100028fa0	movl	$0x1, %eax
0000000100028fa5	movq	%rax, -0x90(%rbp)
0000000100028fac	movq	-0x4d0(%rbp), %rax
0000000100028fb3	movq	%rax, -0x50(%rbp)
0000000100028fb7	jmp	0x1000291bd
0000000100028fbc	xorl	%eax, %eax
0000000100028fbe	movq	%rax, -0x58(%rbp)
0000000100028fc2	jmp	0x1000291bd
0000000100028fc7	movl	$0x1, %eax
0000000100028fcc	movq	%rax, -0x88(%rbp)
0000000100028fd3	movq	-0x4d0(%rbp), %rax
0000000100028fda	movq	%rax, -0x100(%rbp)
0000000100028fe1	jmp	0x1000291bd
0000000100028fe6	movl	$0x1, %eax
0000000100028feb	movq	%rax, -0x68(%rbp)
0000000100028fef	movq	-0x4d0(%rbp), %rax
0000000100028ff6	movq	%rax, -0x60(%rbp)
0000000100028ffa	jmp	0x1000291bd
0000000100028fff	cmpq	$0x4, %rdx
0000000100029003	jb	0x100029e31
0000000100029009	movl	(%rdi,%rax), %eax
000000010002900c	movq	-0x30(%rbp), %rdx
0000000100029010	movq	%r12, %rdi
0000000100029013	addq	%rsi, %rax
0000000100029016	movq	%rax, -0x40(%rbp)
000000010002901a	movl	$0x1, %eax
000000010002901f	movq	%rax, -0x58(%rbp)
0000000100029023	jmp	0x1000291c4
0000000100029028	cmpq	$0x2, %rsi
000000010002902c	jb	0x10002912e
0000000100029032	movq	-0x50(%rbp), %rax
0000000100029036	movzwl	(%rax), %eax
0000000100029039	movq	%rax, -0x50(%rbp)
000000010002903d	movw	%ax, -0xef(%rbp)
0000000100029044	movb	$0x4b, %al
0000000100029046	jmp	0x100029166
000000010002904b	cmpq	$0x8, %rsi
000000010002904f	jb	0x100029e31
0000000100029055	movq	-0x50(%rbp), %rax
0000000100029059	movq	(%rax), %rax
000000010002905c	movq	%rax, -0x50(%rbp)
0000000100029060	movl	$0x1, %eax
0000000100029065	movq	%rax, -0x90(%rbp)
000000010002906c	jmp	0x1000291bd
0000000100029071	cmpq	$0x4, %rsi
0000000100029075	jb	0x10002914a
000000010002907b	movq	-0x50(%rbp), %rdx
000000010002907f	movzwl	0x1(%rdx), %eax
0000000100029083	movzbl	(%rdx), %ecx
0000000100029086	movzbl	0x3(%rdx), %edx
000000010002908a	movb	%cl, -0xed(%rbp)
0000000100029090	movb	%dl, -0xea(%rbp)
0000000100029096	movw	%ax, -0xec(%rbp)
000000010002909d	movl	-0xed(%rbp), %eax
00000001000290a3	movq	%rax, -0x50(%rbp)
00000001000290a7	movb	$0x4b, %al
00000001000290a9	jmp	0x100029166
00000001000290ae	cmpq	$0x2, %rsi
00000001000290b2	jb	0x100029174
00000001000290b8	movq	-0x60(%rbp), %rax
00000001000290bc	movzwl	(%rax), %eax
00000001000290bf	movq	%rax, -0x60(%rbp)
00000001000290c3	movw	%ax, -0xef(%rbp)
00000001000290ca	movb	$0x4b, %al
00000001000290cc	jmp	0x1000291ac
00000001000290d1	cmpq	$0x8, %rsi
00000001000290d5	jb	0x100029e31
00000001000290db	movq	-0x60(%rbp), %rax
00000001000290df	movq	(%rax), %rax
00000001000290e2	movq	%rax, -0x60(%rbp)
00000001000290e6	movl	$0x1, %eax
00000001000290eb	movq	%rax, -0x68(%rbp)
00000001000290ef	jmp	0x1000291bd
00000001000290f4	cmpq	$0x4, %rsi
00000001000290f8	jb	0x100029190
00000001000290fe	movq	-0x60(%rbp), %rdx
0000000100029102	movzwl	0x1(%rdx), %eax
0000000100029106	movzbl	(%rdx), %ecx
0000000100029109	movzbl	0x3(%rdx), %edx
000000010002910d	movb	%cl, -0xed(%rbp)
0000000100029113	movb	%dl, -0xea(%rbp)
0000000100029119	movw	%ax, -0xec(%rbp)
0000000100029120	movl	-0xed(%rbp), %eax
0000000100029126	movq	%rax, -0x60(%rbp)
000000010002912a	movb	$0x4b, %al
000000010002912c	jmp	0x1000291ac
000000010002912e	movw	$0x0, -0xf0(%rbp)
0000000100029137	movb	$0x0, -0xea(%rbp)
000000010002913e	movl	$0x0, -0xee(%rbp)
0000000100029148	jmp	0x100029164
000000010002914a	movl	$0x0, -0xf0(%rbp)
0000000100029154	movb	$0x0, -0xea(%rbp)
000000010002915b	movw	$0x0, -0xec(%rbp)
0000000100029164	movb	$0x13, %al
0000000100029166	movl	$0x1, %ecx
000000010002916b	movq	%rcx, -0x90(%rbp)
0000000100029172	jmp	0x1000291b5
0000000100029174	movw	$0x0, -0xf0(%rbp)
000000010002917d	movb	$0x0, -0xea(%rbp)
0000000100029184	movl	$0x0, -0xee(%rbp)
000000010002918e	jmp	0x1000291aa
0000000100029190	movl	$0x0, -0xf0(%rbp)
000000010002919a	movb	$0x0, -0xea(%rbp)
00000001000291a1	movw	$0x0, -0xec(%rbp)
00000001000291aa	movb	$0x13, %al
00000001000291ac	movl	$0x1, %ecx
00000001000291b1	movq	%rcx, -0x68(%rbp)
00000001000291b5	cmpb	$0x4b, %al
00000001000291b7	jne	0x100029e31
00000001000291bd	movq	-0x30(%rbp), %rdx
00000001000291c1	movq	%r12, %rdi
00000001000291c4	addq	$0x10, %rdi
00000001000291c8	cmpq	%rdi, %rdx
00000001000291cb	jne	0x100028c76
00000001000291d1	cmpq	$0x0, -0x58(%rbp)
00000001000291d6	je	0x100029422
00000001000291dc	movq	-0x138(%rbp), %rdx
00000001000291e3	leaq	0xb0(%rdx), %rsi
00000001000291ea	movl	-0x638(%rbp), %eax
00000001000291f0	movl	%eax, %ecx
00000001000291f2	shrl	$0x10, %ecx
00000001000291f5	leaq	0xc0(%rdx), %r9
00000001000291fc	xorl	%edi, %edi
00000001000291fe	cmpw	$0x5, %cx
0000000100029202	setae	%r8b
0000000100029206	cmovbq	%rsi, %r9
000000010002920a	movq	0x8(%r9), %rsi
000000010002920e	movq	-0x40(%rbp), %r9
0000000100029212	subq	%r9, %rsi
0000000100029215	jb	0x100029e31
000000010002921b	movb	%r8b, %dil
000000010002921e	shlq	$0x4, %rdi
0000000100029222	addq	$0xb0, %rdi
0000000100029229	movq	(%rdx,%rdi), %rdi
000000010002922d	addq	%r9, %rdi
0000000100029230	cmpw	$0x5, %cx
0000000100029234	movq	0x10(%rdx), %r8
0000000100029238	movq	0x18(%rdx), %rdx
000000010002923c	movq	-0x500(%rbp), %r9
0000000100029243	movq	-0x4f0(%rbp), %r10
000000010002924a	movq	%r8, -0x4d8(%rbp)
0000000100029251	movq	%rdx, -0x4d0(%rbp)
0000000100029258	movq	%r9, -0x4c8(%rbp)
000000010002925f	movq	%r10, -0x4c0(%rbp)
0000000100029266	movq	%rdi, -0x4b8(%rbp)
000000010002926d	movq	%rsi, -0x4b0(%rbp)
0000000100029274	movw	%ax, -0x4a8(%rbp)
000000010002927b	movw	%cx, -0x4a6(%rbp)
0000000100029282	setae	-0x4a4(%rbp)
0000000100029289	movl	$0x0, -0xa0(%rbp)
0000000100029293	leaq	-0x208(%rbp), %rdi
000000010002929a	leaq	-0x4d8(%rbp), %rsi
00000001000292a1	callq	__ZN5gimli4read8rnglists20RngListIter$LT$R$GT$4next17hc7d810ddd7ca0bc1E ## gimli::read::rnglists::RngListIter$LT$R$GT$::next::hc7d810ddd7ca0bc1
00000001000292a6	movq	-0x208(%rbp), %rax
00000001000292ad	movq	-0x200(%rbp), %rcx
00000001000292b4	cmpq	$0x1, %rax
00000001000292b8	jne	0x100029405
00000001000292be	movq	-0x1f8(%rbp), %r12
00000001000292c5	cmpq	%r12, %rcx
00000001000292c8	jae	0x100029293
00000001000292ca	movq	%rcx, -0xa0(%rbp)
00000001000292d1	movq	-0xb0(%rbp), %rsi
00000001000292d8	cmpq	-0xb8(%rbp), %rsi
00000001000292df	jne	0x1000292f4
00000001000292e1	leaq	-0xc0(%rbp), %rdi
00000001000292e8	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
00000001000292ed	movq	-0xb0(%rbp), %rsi
00000001000292f4	movq	-0xc0(%rbp), %rax
00000001000292fb	movq	%rsi, %rcx
00000001000292fe	shlq	$0x5, %rcx
0000000100029302	movq	-0xa0(%rbp), %rdx
0000000100029309	movq	%rdx, (%rax,%rcx)
000000010002930d	movq	%r12, 0x8(%rax,%rcx)
0000000100029312	movq	-0x80(%rbp), %rdx
0000000100029316	movq	%rdx, 0x10(%rax,%rcx)
000000010002931b	movq	$0x0, 0x18(%rax,%rcx)
0000000100029324	incq	%rsi
0000000100029327	movq	%rsi, -0xb0(%rbp)
000000010002932e	movb	$0x1, %al
0000000100029330	movl	%eax, -0xa0(%rbp)
0000000100029336	jmp	0x100029293
000000010002933b	xorl	%r12d, %r12d
000000010002933e	xorl	%eax, %eax
0000000100029340	movq	%rax, -0x90(%rbp)
0000000100029347	xorl	%eax, %eax
0000000100029349	movq	%rax, -0x68(%rbp)
000000010002934d	xorl	%eax, %eax
000000010002934f	movq	%rax, -0x88(%rbp)
0000000100029356	movq	-0x160(%rbp), %r9
000000010002935d	testq	%r9, %r9
0000000100029360	je	0x100029436
0000000100029366	movq	-0x170(%rbp), %rax
000000010002936d	movq	%r9, %r11
0000000100029370	xorl	%edx, %edx
0000000100029372	movq	%r9, %rcx
0000000100029375	jmp	0x10002938c
0000000100029377	movq	%r11, %rdx
000000010002937a	incq	%rdx
000000010002937d	movq	%rcx, %r11
0000000100029380	movq	%r11, %rcx
0000000100029383	subq	%rdx, %r11
0000000100029386	jbe	0x100029436
000000010002938c	shrq	%r11
000000010002938f	addq	%rdx, %r11
0000000100029392	movq	%r11, %r10
0000000100029395	shlq	$0x4, %r10
0000000100029399	xorl	%edi, %edi
000000010002939b	cmpq	%rbx, (%rax,%r10)
000000010002939f	setne	%dil
00000001000293a3	movl	$0xff, %r8d
00000001000293a9	cmovbl	%r8d, %edi
00000001000293ad	cmpb	$0x1, %dil
00000001000293b1	je	0x100029380
00000001000293b3	movzbl	%dil, %edx
00000001000293b7	cmpl	$0xff, %edx
00000001000293bd	je	0x100029377
00000001000293bf	movq	%r12, -0x38(%rbp)
00000001000293c3	leaq	-0x1(%r11), %rdi
00000001000293c7	movq	%r9, %rsi
00000001000293ca	cmpq	%r9, %rdi
00000001000293cd	jae	0x100029767
00000001000293d3	incq	%r11
00000001000293d6	leaq	-0x10(%rax,%r10), %rcx
00000001000293db	cmpq	$0x1, %r11
00000001000293df	je	0x100029770
00000001000293e5	decq	%r11
00000001000293e8	leaq	-0x10(%rcx), %rdx
00000001000293ec	cmpq	%rbx, (%rcx)
00000001000293ef	movq	%rdx, %rcx
00000001000293f2	je	0x1000293db
00000001000293f4	movq	%r11, %rdi
00000001000293f7	cmpq	%r11, %rsi
00000001000293fa	jae	0x100029772
0000000100029400	jmp	0x10002b66d
0000000100029405	cmpl	$0x2, %eax
0000000100029408	jne	0x10002954f
000000010002940e	cmpb	$0x4b, %cl
0000000100029411	jne	0x100029e31
0000000100029417	shrq	$0x8, %rcx
000000010002941b	movl	%ecx, %eax
000000010002941d	jmp	0x10002955d
0000000100029422	movq	-0x38(%rbp), %r12
0000000100029426	movq	-0x160(%rbp), %r9
000000010002942d	testq	%r9, %r9
0000000100029430	jne	0x100029366
0000000100029436	movq	-0x90(%rbp), %rcx
000000010002943d	testq	%rcx, %rcx
0000000100029440	je	0x1000294bc
0000000100029442	cmpq	$0x0, -0x68(%rbp)
0000000100029447	je	0x1000294bc
0000000100029449	movq	-0x60(%rbp), %rax
000000010002944d	cmpq	%rax, -0x50(%rbp)
0000000100029451	jae	0x10002954b
0000000100029457	movq	-0xb0(%rbp), %rsi
000000010002945e	cmpq	-0xb8(%rbp), %rsi
0000000100029465	jne	0x10002947a
0000000100029467	leaq	-0xc0(%rbp), %rdi
000000010002946e	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
0000000100029473	movq	-0xb0(%rbp), %rsi
000000010002947a	movq	-0xc0(%rbp), %rax
0000000100029481	movq	%rsi, %rcx
0000000100029484	shlq	$0x5, %rcx
0000000100029488	movq	-0x50(%rbp), %rdx
000000010002948c	movq	%rdx, (%rax,%rcx)
0000000100029490	movq	-0x60(%rbp), %rdx
0000000100029494	movq	%rdx, 0x8(%rax,%rcx)
0000000100029499	movq	-0x80(%rbp), %rdx
000000010002949d	movq	%rdx, 0x10(%rax,%rcx)
00000001000294a2	movq	$0x0, 0x18(%rax,%rcx)
00000001000294ab	incq	%rsi
00000001000294ae	movq	%rsi, -0xb0(%rbp)
00000001000294b5	movb	$0x1, %al
00000001000294b7	jmp	0x100029561
00000001000294bc	xorl	%eax, %eax
00000001000294be	testq	%rcx, %rcx
00000001000294c1	movq	-0x50(%rbp), %rcx
00000001000294c5	je	0x100029561
00000001000294cb	movq	%r12, -0x38(%rbp)
00000001000294cf	cmpq	$0x0, -0x88(%rbp)
00000001000294d7	je	0x10002955d
00000001000294dd	movq	-0x100(%rbp), %rax
00000001000294e4	leaq	(%rax,%rcx), %r12
00000001000294e8	cmpq	%r12, %rcx
00000001000294eb	jae	0x10002955b
00000001000294ed	movq	-0xb0(%rbp), %rsi
00000001000294f4	cmpq	-0xb8(%rbp), %rsi
00000001000294fb	jne	0x100029510
00000001000294fd	leaq	-0xc0(%rbp), %rdi
0000000100029504	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
0000000100029509	movq	-0xb0(%rbp), %rsi
0000000100029510	movq	-0xc0(%rbp), %rax
0000000100029517	movq	%rsi, %rcx
000000010002951a	shlq	$0x5, %rcx
000000010002951e	movq	-0x50(%rbp), %rdx
0000000100029522	movq	%rdx, (%rax,%rcx)
0000000100029526	movq	%r12, 0x8(%rax,%rcx)
000000010002952b	movq	-0x80(%rbp), %rdx
000000010002952f	movq	%rdx, 0x10(%rax,%rcx)
0000000100029534	movq	$0x0, 0x18(%rax,%rcx)
000000010002953d	incq	%rsi
0000000100029540	movq	%rsi, -0xb0(%rbp)
0000000100029547	movb	$0x1, %al
0000000100029549	jmp	0x10002955d
000000010002954b	xorl	%eax, %eax
000000010002954d	jmp	0x100029561
000000010002954f	movq	-0x38(%rbp), %r12
0000000100029553	movl	-0xa0(%rbp), %eax
0000000100029559	jmp	0x100029561
000000010002955b	xorl	%eax, %eax
000000010002955d	movq	-0x38(%rbp), %r12
0000000100029561	andb	$0x1, %al
0000000100029563	movq	$0x0, -0x1c8(%rbp)
000000010002956e	testb	$0x1, %al
0000000100029570	jne	0x100029679
0000000100029576	cmpq	$0x2f, -0x620(%rbp)
000000010002957e	je	0x100029679
0000000100029584	movq	%r12, -0x38(%rbp)
0000000100029588	leaq	-0x620(%rbp), %rax
000000010002958f	movq	%rax, -0x208(%rbp)
0000000100029596	leaq	-0x680(%rbp), %rax
000000010002959d	movq	%rax, -0x4d8(%rbp)
00000001000295a4	leaq	-0x208(%rbp), %rax
00000001000295ab	movq	%rax, -0x4d0(%rbp)
00000001000295b2	leaq	-0x138(%rbp), %rax
00000001000295b9	movq	%rax, -0x4c8(%rbp)
00000001000295c0	leaq	-0x1c8(%rbp), %rdi
00000001000295c7	leaq	-0x4d8(%rbp), %rsi
00000001000295ce	callq	__ZN9addr2line4lazy17LazyCell$LT$T$GT$11borrow_with17h35abc8a956476deeE ## addr2line::lazy::LazyCell$LT$T$GT$::borrow_with::h35abc8a956476dee
00000001000295d3	cmpq	$0x0, (%rax)
00000001000295d7	je	0x100029675
00000001000295dd	movq	0x18(%rax), %rcx
00000001000295e1	movq	%rcx, -0x30(%rbp)
00000001000295e5	testq	%rcx, %rcx
00000001000295e8	je	0x100029675
00000001000295ee	movq	0x10(%rax), %rax
00000001000295f2	movq	%rax, -0x58(%rbp)
00000001000295f6	movq	-0xb0(%rbp), %rsi
00000001000295fd	shlq	$0x5, -0x30(%rbp)
0000000100029602	xorl	%r12d, %r12d
0000000100029605	jmp	0x10002964d
0000000100029607	movq	-0xb0(%rbp), %rsi
000000010002960e	movq	-0xc0(%rbp), %rax
0000000100029615	movq	%rsi, %rcx
0000000100029618	shlq	$0x5, %rcx
000000010002961c	movaps	-0xa0(%rbp), %xmm0
0000000100029623	movups	%xmm0, (%rax,%rcx)
0000000100029627	movq	-0x80(%rbp), %rdx
000000010002962b	movq	%rdx, 0x10(%rax,%rcx)
0000000100029630	movq	$0x0, 0x18(%rax,%rcx)
0000000100029639	incq	%rsi
000000010002963c	movq	%rsi, -0xb0(%rbp)
0000000100029643	addq	$0x20, %r12
0000000100029647	cmpq	%r12, -0x30(%rbp)
000000010002964b	je	0x100029675
000000010002964d	movq	-0x58(%rbp), %rax
0000000100029651	movups	0x10(%rax,%r12), %xmm0
0000000100029657	movaps	%xmm0, -0xa0(%rbp)
000000010002965e	cmpq	-0xb8(%rbp), %rsi
0000000100029665	jne	0x10002960e
0000000100029667	leaq	-0xc0(%rbp), %rdi
000000010002966e	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
0000000100029673	jmp	0x100029607
0000000100029675	movq	-0x38(%rbp), %r12
0000000100029679	movl	$0x1a8, %edx                    ## imm = 0x1A8
000000010002967e	leaq	-0x4d8(%rbp), %rdi
0000000100029685	leaq	-0x680(%rbp), %rsi
000000010002968c	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100029691	movq	-0x1c8(%rbp), %rax
0000000100029698	movq	-0x1c0(%rbp), %rcx
000000010002969f	leaq	-0x4c0(%rbp), %rdx
00000001000296a6	movq	%rax, 0x198(%rdx)
00000001000296ad	movq	%rcx, 0x1a0(%rdx)
00000001000296b4	movq	-0x1b8(%rbp), %rax
00000001000296bb	movq	%rax, 0x1a8(%rdx)
00000001000296c2	movq	-0x1b0(%rbp), %rax
00000001000296c9	movq	%rax, 0x1b0(%rdx)
00000001000296d0	movq	-0x1a8(%rbp), %rax
00000001000296d7	movq	%rax, 0x1b8(%rdx)
00000001000296de	movq	%rbx, -0x330(%rbp)
00000001000296e5	movw	%r12w, -0x2c8(%rbp)
00000001000296ed	movzwl	-0xa8(%rbp), %eax
00000001000296f4	movw	%ax, -0x2c6(%rbp)
00000001000296fb	movq	$0x0, -0x300(%rbp)
0000000100029706	movb	$0x4c, -0x2d8(%rbp)
000000010002970d	movq	-0x118(%rbp), %rbx
0000000100029714	cmpq	-0x120(%rbp), %rbx
000000010002971b	jne	0x100029733
000000010002971d	leaq	-0x128(%rbp), %rdi
0000000100029724	movq	%rbx, %rsi
0000000100029727	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h2da4a3ea5354e617E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h2da4a3ea5354e617
000000010002972c	movq	-0x118(%rbp), %rbx
0000000100029733	imulq	$0x218, %rbx, %rdi              ## imm = 0x218
000000010002973a	addq	-0x128(%rbp), %rdi
0000000100029741	movl	$0x218, %edx                    ## imm = 0x218
0000000100029746	leaq	-0x4d8(%rbp), %r12
000000010002974d	movq	%r12, %rsi
0000000100029750	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100029755	incq	%rbx
0000000100029758	movq	%rbx, -0x118(%rbp)
000000010002975f	movq	%r12, %rdi
0000000100029762	jmp	0x100028948
0000000100029767	testq	%r11, %r11
000000010002976a	jne	0x10002b67b
0000000100029770	xorl	%edi, %edi
0000000100029772	cmpq	%rsi, %rdi
0000000100029775	jne	0x100029782
0000000100029777	xorl	%eax, %eax
0000000100029779	movq	-0x38(%rbp), %r12
000000010002977d	jmp	0x100029563
0000000100029782	shlq	$0x4, %rsi
0000000100029786	addq	%rax, %rsi
0000000100029789	movq	%rsi, -0x88(%rbp)
0000000100029790	shlq	$0x4, %rdi
0000000100029794	addq	%rax, %rdi
0000000100029797	movl	$0x0, -0xa0(%rbp)
00000001000297a1	cmpq	%rbx, (%rdi)
00000001000297a4	jne	0x100029dd0
00000001000297aa	movq	-0x138(%rbp), %rcx
00000001000297b1	movq	%rdi, -0x90(%rbp)
00000001000297b8	movq	0x8(%rdi), %rdx
00000001000297bc	movq	0x28(%rcx), %rax
00000001000297c0	subq	%rdx, %rax
00000001000297c3	jb	0x100029e31
00000001000297c9	movq	0x20(%rcx), %rcx
00000001000297cd	addq	%rdx, %rcx
00000001000297d0	movq	%rcx, -0x208(%rbp)
00000001000297d7	movq	%rax, -0x200(%rbp)
00000001000297de	leaq	-0x4d8(%rbp), %rdi
00000001000297e5	leaq	-0x208(%rbp), %rsi
00000001000297ec	callq	__ZN5gimli4read7aranges30ArangeHeader$LT$R$C$Offset$GT$5parse17h6fb9a4ac9468d866E ## gimli::read::aranges::ArangeHeader$LT$R$C$Offset$GT$::parse::h6fb9a4ac9468d866
00000001000297f1	cmpb	$0x3, -0x4af(%rbp)
00000001000297f8	je	0x100029e31
00000001000297fe	movq	-0x4d0(%rbp), %rax
0000000100029805	testq	%rax, %rax
0000000100029808	je	0x100029b8b
000000010002980e	movq	%rax, %r12
0000000100029811	movq	-0x4d8(%rbp), %rax
0000000100029818	movq	%rax, -0x68(%rbp)
000000010002981c	movzbl	-0x4b0(%rbp), %eax
0000000100029823	movzbl	-0x4ac(%rbp), %ecx
000000010002982a	movq	%rax, -0x30(%rbp)
000000010002982e	addl	%eax, %eax
0000000100029830	addb	%cl, %al
0000000100029832	movzbl	%al, %eax
0000000100029835	movq	%rax, -0x58(%rbp)
0000000100029839	movq	%rcx, -0xe0(%rbp)
0000000100029840	testl	%ecx, %ecx
0000000100029842	je	0x100029c00
0000000100029848	movq	%r12, %r8
000000010002984b	movq	-0x30(%rbp), %r9
000000010002984f	movq	-0x58(%rbp), %r10
0000000100029853	movq	-0x68(%rbp), %rdi
0000000100029857	movq	-0xe0(%rbp), %r11
000000010002985e	jmp	0x1000298a4
0000000100029860	addq	$-0x4, %r8
0000000100029864	movzwl	0x1(%rdi), %ecx
0000000100029868	movzbl	(%rdi), %edx
000000010002986b	movzbl	0x3(%rdi), %esi
000000010002986f	addq	$0x4, %rdi
0000000100029873	movb	%dl, -0x4d5(%rbp)
0000000100029879	movb	%sil, -0x4d2(%rbp)
0000000100029880	movw	%cx, -0x4d4(%rbp)
0000000100029887	movl	-0x4d5(%rbp), %esi
000000010002988d	movb	$0x4b, %cl
000000010002988f	cmpb	$0x4b, %cl
0000000100029892	jne	0x100029e31
0000000100029898	orq	%rsi, %rax
000000010002989b	orq	%r12, %rax
000000010002989e	jne	0x100029aff
00000001000298a4	cmpq	%r10, %r8
00000001000298a7	jb	0x100029b8b
00000001000298ad	leal	-0x1(%r11), %eax
00000001000298b1	cmpl	$0x7, %eax
00000001000298b4	ja	0x100029e31
00000001000298ba	leaq	0x21fb(%rip), %rcx
00000001000298c1	movslq	(%rcx,%rax,4), %rax
00000001000298c5	addq	%rcx, %rax
00000001000298c8	jmpq	*%rax
00000001000298ca	testq	%r8, %r8
00000001000298cd	je	0x100029e31
00000001000298d3	decq	%r8
00000001000298d6	movzbl	(%rdi), %eax
00000001000298d9	incq	%rdi
00000001000298dc	jmp	0x10002998c
00000001000298e1	cmpq	$0x2, %r8
00000001000298e5	jb	0x100029948
00000001000298e7	addq	$-0x2, %r8
00000001000298eb	movzwl	(%rdi), %eax
00000001000298ee	addq	$0x2, %rdi
00000001000298f2	movw	%ax, -0x4d7(%rbp)
00000001000298f9	jmp	0x100029944
00000001000298fb	cmpq	$0x8, %r8
00000001000298ff	jb	0x100029e31
0000000100029905	addq	$-0x8, %r8
0000000100029909	movq	(%rdi), %rax
000000010002990c	addq	$0x8, %rdi
0000000100029910	jmp	0x10002998c
0000000100029912	cmpq	$0x4, %r8
0000000100029916	jb	0x100029964
0000000100029918	addq	$-0x4, %r8
000000010002991c	movzwl	0x1(%rdi), %eax
0000000100029920	movzbl	(%rdi), %ecx
0000000100029923	movzbl	0x3(%rdi), %edx
0000000100029927	addq	$0x4, %rdi
000000010002992b	movb	%cl, -0x4d5(%rbp)
0000000100029931	movb	%dl, -0x4d2(%rbp)
0000000100029937	movw	%ax, -0x4d4(%rbp)
000000010002993e	movl	-0x4d5(%rbp), %eax
0000000100029944	movb	$0x4b, %cl
0000000100029946	jmp	0x100029983
0000000100029948	movw	$0x0, -0x4d8(%rbp)
0000000100029951	movb	$0x0, -0x4d2(%rbp)
0000000100029958	movl	$0x0, -0x4d6(%rbp)
0000000100029962	jmp	0x10002997e
0000000100029964	movl	$0x0, -0x4d8(%rbp)
000000010002996e	movb	$0x0, -0x4d2(%rbp)
0000000100029975	movw	$0x0, -0x4d4(%rbp)
000000010002997e	movb	$0x13, %cl
0000000100029980	movq	%rdi, %rax
0000000100029983	cmpb	$0x4b, %cl
0000000100029986	jne	0x100029e31
000000010002998c	leal	-0x1(%r9), %ecx
0000000100029990	cmpl	$0x7, %ecx
0000000100029993	ja	0x100029e31
0000000100029999	leaq	0x213c(%rip), %rdx
00000001000299a0	movslq	(%rdx,%rcx,4), %rcx
00000001000299a4	addq	%rdx, %rcx
00000001000299a7	jmpq	*%rcx
00000001000299a9	cmpq	$0x2, %r8
00000001000299ad	jb	0x100029e31
00000001000299b3	movzbl	(%rdi), %r12d
00000001000299b7	addq	$-0x2, %r8
00000001000299bb	movzbl	0x1(%rdi), %esi
00000001000299bf	addq	$0x2, %rdi
00000001000299c3	jmp	0x100029898
00000001000299c8	cmpq	$0x2, %r8
00000001000299cc	jb	0x100029a66
00000001000299d2	addq	$-0x2, %r8
00000001000299d6	movzwl	(%rdi), %r12d
00000001000299da	addq	$0x2, %rdi
00000001000299de	movb	$0x4b, %cl
00000001000299e0	jmp	0x100029a6b
00000001000299e5	cmpq	$0x8, %r8
00000001000299e9	jb	0x100029e31
00000001000299ef	movq	%r8, %rcx
00000001000299f2	andq	$-0x8, %rcx
00000001000299f6	cmpq	$0x8, %rcx
00000001000299fa	je	0x100029e31
0000000100029a00	movq	(%rdi), %r12
0000000100029a03	movq	0x8(%rdi), %rsi
0000000100029a07	addq	$-0x10, %r8
0000000100029a0b	addq	$0x10, %rdi
0000000100029a0f	jmp	0x100029898
0000000100029a14	cmpq	$0x4, %r8
0000000100029a18	jb	0x100029a4c
0000000100029a1a	addq	$-0x4, %r8
0000000100029a1e	movzwl	0x1(%rdi), %ecx
0000000100029a22	movzbl	(%rdi), %edx
0000000100029a25	movzbl	0x3(%rdi), %esi
0000000100029a29	addq	$0x4, %rdi
0000000100029a2d	movb	%dl, -0x4d5(%rbp)
0000000100029a33	movb	%sil, -0x4d2(%rbp)
0000000100029a3a	movw	%cx, -0x4d4(%rbp)
0000000100029a41	movl	-0x4d5(%rbp), %r12d
0000000100029a48	movb	$0x4b, %cl
0000000100029a4a	jmp	0x100029a6b
0000000100029a4c	movl	$0x0, -0x4d8(%rbp)
0000000100029a56	movb	$0x0, -0x4d2(%rbp)
0000000100029a5d	movw	$0x0, -0x4d4(%rbp)
0000000100029a66	movb	$0x13, %cl
0000000100029a68	movq	%rdi, %r12
0000000100029a6b	cmpb	$0x4b, %cl
0000000100029a6e	jne	0x100029e31
0000000100029a74	cmpb	$0x2, %r9b
0000000100029a78	je	0x100029aaa
0000000100029a7a	cmpl	$0x4, %r9d
0000000100029a7e	jne	0x100029e31
0000000100029a84	cmpq	$0x4, %r8
0000000100029a88	jae	0x100029860
0000000100029a8e	movl	$0x0, -0x4d8(%rbp)
0000000100029a98	movb	$0x0, -0x4d2(%rbp)
0000000100029a9f	movw	$0x0, -0x4d4(%rbp)
0000000100029aa8	jmp	0x100029aec
0000000100029aaa	cmpq	$0x2, %r8
0000000100029aae	jb	0x100029ad2
0000000100029ab0	addq	$-0x2, %r8
0000000100029ab4	movzwl	(%rdi), %esi
0000000100029ab7	addq	$0x2, %rdi
0000000100029abb	movw	%si, -0x4d7(%rbp)
0000000100029ac2	movb	$0x4b, %cl
0000000100029ac4	cmpb	$0x4b, %cl
0000000100029ac7	je	0x100029898
0000000100029acd	jmp	0x100029e31
0000000100029ad2	movw	$0x0, -0x4d8(%rbp)
0000000100029adb	movb	$0x0, -0x4d2(%rbp)
0000000100029ae2	movl	$0x0, -0x4d6(%rbp)
0000000100029aec	movb	$0x13, %cl
0000000100029aee	movq	%rdi, %rsi
0000000100029af1	cmpb	$0x4b, %cl
0000000100029af4	je	0x100029898
0000000100029afa	jmp	0x100029e31
0000000100029aff	movq	%r12, -0xd8(%rbp)
0000000100029b06	movq	%rdi, -0x68(%rbp)
0000000100029b0a	movq	%r8, %r12
0000000100029b0d	movq	%rsi, -0x48(%rbp)
0000000100029b11	testq	%rsi, %rsi
0000000100029b14	je	0x100029b82
0000000100029b16	movq	-0xb0(%rbp), %rsi
0000000100029b1d	cmpq	-0xb8(%rbp), %rsi
0000000100029b24	jne	0x100029b39
0000000100029b26	leaq	-0xc0(%rbp), %rdi
0000000100029b2d	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
0000000100029b32	movq	-0xb0(%rbp), %rsi
0000000100029b39	movq	-0xd8(%rbp), %rdx
0000000100029b40	movq	-0x48(%rbp), %rdi
0000000100029b44	addq	%rdx, %rdi
0000000100029b47	movq	-0xc0(%rbp), %rax
0000000100029b4e	movq	%rsi, %rcx
0000000100029b51	shlq	$0x5, %rcx
0000000100029b55	movq	%rdx, (%rax,%rcx)
0000000100029b59	movq	%rdi, 0x8(%rax,%rcx)
0000000100029b5e	movq	-0x80(%rbp), %rdx
0000000100029b62	movq	%rdx, 0x10(%rax,%rcx)
0000000100029b67	movq	$0x0, 0x18(%rax,%rcx)
0000000100029b70	incq	%rsi
0000000100029b73	movq	%rsi, -0xb0(%rbp)
0000000100029b7a	movb	$0x1, %al
0000000100029b7c	movl	%eax, -0xa0(%rbp)
0000000100029b82	testq	%r12, %r12
0000000100029b85	jne	0x100029848
0000000100029b8b	movq	-0x90(%rbp), %rdi
0000000100029b92	addq	$0x10, %rdi
0000000100029b96	cmpq	-0x88(%rbp), %rdi
0000000100029b9d	jne	0x1000297a1
0000000100029ba3	jmp	0x100029dd0
0000000100029ba8	movq	-0xb0(%rbp), %rsi
0000000100029baf	movq	-0xe0(%rbp), %rdx
0000000100029bb6	movq	-0xd8(%rbp), %rdi
0000000100029bbd	addq	%rdx, %rdi
0000000100029bc0	movq	-0xc0(%rbp), %rax
0000000100029bc7	movq	%rsi, %rcx
0000000100029bca	shlq	$0x5, %rcx
0000000100029bce	movq	%rdx, (%rax,%rcx)
0000000100029bd2	movq	%rdi, 0x8(%rax,%rcx)
0000000100029bd7	movq	-0x80(%rbp), %rdx
0000000100029bdb	movq	%rdx, 0x10(%rax,%rcx)
0000000100029be0	movq	$0x0, 0x18(%rax,%rcx)
0000000100029be9	incq	%rsi
0000000100029bec	movq	%rsi, -0xb0(%rbp)
0000000100029bf3	movb	$0x1, %al
0000000100029bf5	movl	%eax, -0xa0(%rbp)
0000000100029bfb	testq	%r12, %r12
0000000100029bfe	je	0x100029b8b
0000000100029c00	movq	-0x30(%rbp), %rsi
0000000100029c04	movq	-0x58(%rbp), %rdi
0000000100029c08	movq	-0x68(%rbp), %r8
0000000100029c0c	jmp	0x100029c62
0000000100029c0e	addq	$-0x4, %rdi
0000000100029c12	movzwl	0x1(%r8), %eax
0000000100029c17	movzbl	(%r8), %ecx
0000000100029c1b	movzbl	0x3(%r8), %edx
0000000100029c20	addq	$0x4, %r8
0000000100029c24	movb	%cl, -0x4d5(%rbp)
0000000100029c2a	movb	%dl, -0x4d2(%rbp)
0000000100029c30	movw	%ax, -0x4d4(%rbp)
0000000100029c37	movl	-0x4d5(%rbp), %r10d
0000000100029c3e	movb	$0x4b, %al
0000000100029c40	movq	%rdi, %r12
0000000100029c43	movq	-0x30(%rbp), %rsi
0000000100029c47	movq	-0x58(%rbp), %rdi
0000000100029c4b	movq	%r9, %rcx
0000000100029c4e	cmpb	$0x4b, %al
0000000100029c50	jne	0x100029e31
0000000100029c56	movq	%rcx, %rax
0000000100029c59	orq	%r10, %rax
0000000100029c5c	jne	0x100029d90
0000000100029c62	cmpq	%rdi, %r12
0000000100029c65	jb	0x100029b8b
0000000100029c6b	leal	-0x1(%rsi), %eax
0000000100029c6e	cmpl	$0x7, %eax
0000000100029c71	ja	0x100029e31
0000000100029c77	leaq	0x1e7e(%rip), %rcx
0000000100029c7e	movslq	(%rcx,%rax,4), %rax
0000000100029c82	addq	%rcx, %rax
0000000100029c85	jmpq	*%rax
0000000100029c87	cmpq	$0x2, %r12
0000000100029c8b	jb	0x100029e31
0000000100029c91	movzbl	(%r8), %ecx
0000000100029c95	addq	$-0x2, %r12
0000000100029c99	movzbl	0x1(%r8), %r10d
0000000100029c9e	addq	$0x2, %r8
0000000100029ca2	jmp	0x100029c56
0000000100029ca4	cmpq	$0x1, %r12
0000000100029ca8	jbe	0x100029cfc
0000000100029caa	addq	$-0x2, %r12
0000000100029cae	movzwl	(%r8), %ecx
0000000100029cb2	addq	$0x2, %r8
0000000100029cb6	jmp	0x100029cf8
0000000100029cb8	cmpq	$0x8, %r12
0000000100029cbc	jb	0x100029e31
0000000100029cc2	movq	%r12, %rax
0000000100029cc5	andq	$-0x8, %rax
0000000100029cc9	cmpq	$0x8, %rax
0000000100029ccd	je	0x100029e31
0000000100029cd3	movq	(%r8), %rcx
0000000100029cd6	movq	0x8(%r8), %r10
0000000100029cda	addq	$-0x10, %r12
0000000100029cde	addq	$0x10, %r8
0000000100029ce2	jmp	0x100029c56
0000000100029ce7	cmpq	$0x3, %r12
0000000100029ceb	jbe	0x100029cfc
0000000100029ced	addq	$-0x4, %r12
0000000100029cf1	movl	(%r8), %ecx
0000000100029cf4	addq	$0x4, %r8
0000000100029cf8	movb	$0x4b, %al
0000000100029cfa	jmp	0x100029d01
0000000100029cfc	movb	$0x13, %al
0000000100029cfe	movq	%r8, %rcx
0000000100029d01	cmpb	$0x4b, %al
0000000100029d03	jne	0x100029e31
0000000100029d09	cmpl	$0x4, %esi
0000000100029d0c	je	0x100029d38
0000000100029d0e	cmpl	$0x2, %esi
0000000100029d11	jne	0x100029e31
0000000100029d17	cmpq	$0x1, %r12
0000000100029d1b	jbe	0x100029d6c
0000000100029d1d	addq	$-0x2, %r12
0000000100029d21	movzwl	(%r8), %r10d
0000000100029d25	addq	$0x2, %r8
0000000100029d29	movw	%r10w, -0x4d7(%rbp)
0000000100029d31	movb	$0x4b, %al
0000000100029d33	jmp	0x100029c4e
0000000100029d38	movq	%rcx, %r9
0000000100029d3b	movq	%r12, %rdi
0000000100029d3e	cmpq	$0x3, %r12
0000000100029d42	ja	0x100029c0e
0000000100029d48	movl	$0x0, -0x4d8(%rbp)
0000000100029d52	movb	$0x0, -0x4d2(%rbp)
0000000100029d59	movw	$0x0, -0x4d4(%rbp)
0000000100029d62	movb	$0x13, %al
0000000100029d64	movq	%r8, %r10
0000000100029d67	jmp	0x100029c40
0000000100029d6c	movw	$0x0, -0x4d8(%rbp)
0000000100029d75	movb	$0x0, -0x4d2(%rbp)
0000000100029d7c	movl	$0x0, -0x4d6(%rbp)
0000000100029d86	movb	$0x13, %al
0000000100029d88	movq	%r8, %r10
0000000100029d8b	jmp	0x100029c4e
0000000100029d90	movq	%rcx, -0xe0(%rbp)
0000000100029d97	movq	%r8, -0x68(%rbp)
0000000100029d9b	movq	%r10, -0xd8(%rbp)
0000000100029da2	testq	%r10, %r10
0000000100029da5	je	0x100029bfb
0000000100029dab	movq	-0xb0(%rbp), %rsi
0000000100029db2	cmpq	-0xb8(%rbp), %rsi
0000000100029db9	jne	0x100029baf
0000000100029dbf	leaq	-0xc0(%rbp), %rdi
0000000100029dc6	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h79807986331e9d49E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h79807986331e9d49
0000000100029dcb	jmp	0x100029ba8
0000000100029dd0	movq	-0x38(%rbp), %r12
0000000100029dd4	movl	-0xa0(%rbp), %eax
0000000100029dda	jmp	0x100029563
0000000100029ddf	movq	-0xc0(%rbp), %rbx
0000000100029de6	movq	-0xb0(%rbp), %r15
0000000100029ded	cmpq	$0x15, %r15
0000000100029df1	jae	0x100029ee1
0000000100029df7	cmpq	$0x1, %r15
0000000100029dfb	jbe	0x10002a600
0000000100029e01	movl	$0x1, %edx
0000000100029e06	movq	%rbx, %rdi
0000000100029e09	movq	%r15, %rsi
0000000100029e0c	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h0ace9b42637cb7a4E ## core::slice::sort::insertion_sort_shift_left::h0ace9b42637cb7a4
0000000100029e11	jmp	0x10002a605
0000000100029e16	negq	%rdx
0000000100029e19	jmp	0x100029e23
0000000100029e1b	addq	%r8, %rsi
0000000100029e1e	xorl	%edx, %edx
0000000100029e20	movq	%rsi, %r9
0000000100029e23	movq	%r9, -0x1c8(%rbp)
0000000100029e2a	movq	%rdx, -0x1c0(%rbp)
0000000100029e31	movq	-0x528(%rbp), %rdi
0000000100029e38	lock
0000000100029e39	decq	(%rdi)
0000000100029e3c	jne	0x100029e43
0000000100029e3e	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0a7434846e786acdE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h0a7434846e786acd
0000000100029e43	cmpl	$0x2f, -0x620(%rbp)
0000000100029e4a	je	0x10002872d
0000000100029e50	movq	-0x5c8(%rbp), %rsi
0000000100029e57	testq	%rsi, %rsi
0000000100029e5a	je	0x100029e71
0000000100029e5c	movq	-0x5d0(%rbp), %rdi
0000000100029e63	shlq	$0x2, %rsi
0000000100029e67	movl	$0x2, %edx
0000000100029e6c	callq	___rust_dealloc
0000000100029e71	movq	-0x5b0(%rbp), %rax
0000000100029e78	testq	%rax, %rax
0000000100029e7b	je	0x100029e96
0000000100029e7d	movq	-0x5b8(%rbp), %rdi
0000000100029e84	shlq	$0x3, %rax
0000000100029e88	leaq	(%rax,%rax,2), %rsi
0000000100029e8c	movl	$0x8, %edx
0000000100029e91	callq	___rust_dealloc
0000000100029e96	movq	-0x598(%rbp), %rsi
0000000100029e9d	testq	%rsi, %rsi
0000000100029ea0	je	0x100029eb7
0000000100029ea2	movq	-0x5a0(%rbp), %rdi
0000000100029ea9	shlq	$0x2, %rsi
0000000100029ead	movl	$0x2, %edx
0000000100029eb2	callq	___rust_dealloc
0000000100029eb7	movq	-0x580(%rbp), %rsi
0000000100029ebe	testq	%rsi, %rsi
0000000100029ec1	je	0x10002872d
0000000100029ec7	movq	-0x588(%rbp), %rdi
0000000100029ece	shlq	$0x6, %rsi
0000000100029ed2	movl	$0x8, %edx
0000000100029ed7	callq	___rust_dealloc
0000000100029edc	jmp	0x10002872d
0000000100029ee1	movq	%r15, %r13
0000000100029ee4	shrq	%r13
0000000100029ee7	movq	%r13, %rdi
0000000100029eea	shlq	$0x5, %rdi
0000000100029eee	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r14
0000000100029ef5	movzbl	(%r14), %eax
0000000100029ef9	movl	$0x8, %esi
0000000100029efe	movq	%rdi, -0x130(%rbp)
0000000100029f05	callq	___rust_alloc
0000000100029f0a	testq	%rax, %rax
0000000100029f0d	je	0x10002b639
0000000100029f13	movq	%rax, %r12
0000000100029f16	movq	%r13, -0x178(%rbp)
0000000100029f1d	movzbl	(%r14), %eax
0000000100029f21	movl	$0x100, %edi                    ## imm = 0x100
0000000100029f26	movl	$0x8, %esi
0000000100029f2b	callq	___rust_alloc
0000000100029f30	testq	%rax, %rax
0000000100029f33	movq	%r12, -0x80(%rbp)
0000000100029f37	je	0x10002b653
0000000100029f3d	movq	%rax, %rcx
0000000100029f40	leaq	0x40(%rbx), %rax
0000000100029f44	movq	%rax, -0xf8(%rbp)
0000000100029f4b	leaq	-0x20(%rbx), %rax
0000000100029f4f	movq	%rax, -0xd8(%rbp)
0000000100029f56	movl	$0x10, %eax
0000000100029f5b	movq	%rax, -0xd0(%rbp)
0000000100029f62	xorl	%edx, %edx
0000000100029f64	leaq	0x1e485(%rip), %rax
0000000100029f6b	movq	%rax, -0x150(%rbp)
0000000100029f72	xorl	%r11d, %r11d
0000000100029f75	movq	%r15, -0xa0(%rbp)
0000000100029f7c	movq	%rcx, %r12
0000000100029f7f	movq	%rbx, -0x40(%rbp)
0000000100029f83	jmp	0x100029fa5
0000000100029f85	nopw	%cs:(%rax,%rax)
0000000100029f8f	nop
0000000100029f90	movq	-0x40(%rbp), %rbx
0000000100029f94	movq	-0x80(%rbp), %r13
0000000100029f98	movq	-0x48(%rbp), %rdx
0000000100029f9c	cmpq	%r15, %rdx
0000000100029f9f	jae	0x10002a5c6
0000000100029fa5	movq	%rdx, %r9
0000000100029fa8	movq	%r15, %rdx
0000000100029fab	subq	%r9, %rdx
0000000100029fae	movq	%r9, %rsi
0000000100029fb1	shlq	$0x5, %rsi
0000000100029fb5	leaq	(%rbx,%rsi), %rdi
0000000100029fb9	cmpq	$0x2, %rdx
0000000100029fbd	movq	%r9, -0x30(%rbp)
0000000100029fc1	jae	0x10002a030
0000000100029fc3	movq	%r15, %rsi
0000000100029fc6	movq	%rsi, %rbx
0000000100029fc9	subq	%r9, %rbx
0000000100029fcc	jb	0x10002b52f
0000000100029fd2	cmpq	%r15, %rsi
0000000100029fd5	ja	0x10002b52f
0000000100029fdb	jae	0x10002a060
0000000100029fe1	cmpq	$0xa, %rdx
0000000100029fe5	jae	0x10002a060
0000000100029fe7	leaq	0xa(%r9), %rbx
0000000100029feb	cmpq	%r15, %rbx
0000000100029fee	cmovaeq	%r15, %rbx
0000000100029ff2	movq	%rbx, -0x48(%rbp)
0000000100029ff6	subq	%r9, %rbx
0000000100029ff9	jb	0x10002b590
0000000100029fff	movq	%r11, %r13
000000010002a002	cmpq	$0x2, %rdx
000000010002a006	movl	$0x1, %eax
000000010002a00b	cmovbq	%rax, %rdx
000000010002a00f	movq	%rbx, %rsi
000000010002a012	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h0ace9b42637cb7a4E ## core::slice::sort::insertion_sort_shift_left::h0ace9b42637cb7a4
000000010002a017	movq	%r13, %r11
000000010002a01a	movq	-0x30(%rbp), %r9
000000010002a01e	cmpq	-0xd0(%rbp), %r11
000000010002a025	je	0x10002a06d
000000010002a027	jmp	0x10002a0d9
000000010002a02c	nopl	(%rax)
000000010002a030	movq	(%rdi), %rax
000000010002a033	movq	0x20(%rdi), %rcx
000000010002a037	cmpq	%rax, %rcx
000000010002a03a	jae	0x10002a450
000000010002a040	cmpq	$0x2, %rdx
000000010002a044	jne	0x10002a464
000000010002a04a	leaq	0x2(%r9), %rsi
000000010002a04e	movl	$0x2, %edx
000000010002a053	jmp	0x10002a4dd
000000010002a058	nopl	(%rax,%rax)
000000010002a060	movq	%rsi, -0x48(%rbp)
000000010002a064	cmpq	-0xd0(%rbp), %r11
000000010002a06b	jne	0x10002a0d9
000000010002a06d	leaq	(%r11,%r11), %rax
000000010002a071	movq	%rax, -0xd0(%rbp)
000000010002a078	movq	%r11, %rdi
000000010002a07b	shlq	$0x5, %rdi
000000010002a07f	movzbl	(%r14), %eax
000000010002a083	movl	$0x8, %esi
000000010002a088	movq	%r11, %r13
000000010002a08b	callq	___rust_alloc
000000010002a090	testq	%rax, %rax
000000010002a093	je	0x10002b5a0
000000010002a099	movq	%rax, %r14
000000010002a09c	movq	%r13, %r15
000000010002a09f	shlq	$0x4, %r15
000000010002a0a3	movq	%rax, %rdi
000000010002a0a6	movq	%r12, %rsi
000000010002a0a9	movq	%r15, %rdx
000000010002a0ac	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002a0b1	movl	$0x8, %edx
000000010002a0b6	movq	%r12, %rdi
000000010002a0b9	movq	%r15, %rsi
000000010002a0bc	callq	___rust_dealloc
000000010002a0c1	movq	%r14, %r12
000000010002a0c4	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r14
000000010002a0cb	movq	-0xa0(%rbp), %r15
000000010002a0d2	movq	%r13, %r11
000000010002a0d5	movq	-0x30(%rbp), %r9
000000010002a0d9	movq	%r11, %rax
000000010002a0dc	shlq	$0x4, %rax
000000010002a0e0	movq	%rbx, (%r12,%rax)
000000010002a0e4	movq	%r9, 0x8(%r12,%rax)
000000010002a0e9	incq	%r11
000000010002a0ec	cmpq	$0x2, %r11
000000010002a0f0	jb	0x100029f90
000000010002a0f6	movq	-0x40(%rbp), %rbx
000000010002a0fa	movq	-0x80(%rbp), %r13
000000010002a0fe	movq	%r12, -0x100(%rbp)
000000010002a105	jmp	0x10002a18c
000000010002a10a	nopw	(%rax,%rax)
000000010002a110	movq	%rdi, %r15
000000010002a113	movq	%rbx, %r14
000000010002a116	movq	%r13, %rsi
000000010002a119	subq	%rsi, %r12
000000010002a11c	movq	%r14, %rdi
000000010002a11f	movq	%r12, %rdx
000000010002a122	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002a127	movq	-0x50(%rbp), %rax
000000010002a12b	addq	%r15, %rax
000000010002a12e	movq	-0x60(%rbp), %rcx
000000010002a132	movq	%rax, (%rcx)
000000010002a135	movq	-0x90(%rbp), %rax
000000010002a13c	movq	-0x88(%rbp), %rcx
000000010002a143	movq	%rax, (%rcx)
000000010002a146	movq	-0x68(%rbp), %rdi
000000010002a14a	leaq	0x10(%rdi), %rsi
000000010002a14e	movq	-0x58(%rbp), %rax
000000010002a152	notq	%rax
000000010002a155	movq	-0x38(%rbp), %rdx
000000010002a159	addq	%rax, %rdx
000000010002a15c	shlq	$0x4, %rdx
000000010002a160	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010002a165	movq	-0x30(%rbp), %r11
000000010002a169	cmpq	$0x1, %r11
000000010002a16d	leaq	___rust_no_alloc_shim_is_unstable(%rip), %r14
000000010002a174	movq	-0x40(%rbp), %rbx
000000010002a178	movq	-0xa0(%rbp), %r15
000000010002a17f	movq	-0x100(%rbp), %r12
000000010002a186	jbe	0x10002a440
000000010002a18c	leaq	-0x1(%r11), %r8
000000010002a190	movq	%r8, %rcx
000000010002a193	shlq	$0x4, %rcx
000000010002a197	movq	(%r12,%rcx), %rax
000000010002a19b	movq	0x8(%r12,%rcx), %rcx
000000010002a1a0	addq	%rax, %rcx
000000010002a1a3	cmpq	%r15, %rcx
000000010002a1a6	je	0x10002a200
000000010002a1a8	movq	%r11, %rdx
000000010002a1ab	shlq	$0x4, %rdx
000000010002a1af	movq	-0x20(%rdx,%r12), %rsi
000000010002a1b4	cmpq	%rax, %rsi
000000010002a1b7	jbe	0x10002a200
000000010002a1b9	cmpq	$0x3, %r11
000000010002a1bd	jb	0x10002a5b0
000000010002a1c3	leaq	-0x3(%r11), %r9
000000010002a1c7	movq	%r9, %rcx
000000010002a1ca	shlq	$0x4, %rcx
000000010002a1ce	movq	(%r12,%rcx), %rcx
000000010002a1d2	leaq	(%rsi,%rax), %rdi
000000010002a1d6	cmpq	%rdi, %rcx
000000010002a1d9	jbe	0x10002a215
000000010002a1db	cmpq	$0x4, %r11
000000010002a1df	jb	0x10002a5bb
000000010002a1e5	addq	%rcx, %rsi
000000010002a1e8	cmpq	%rsi, -0x40(%rdx,%r12)
000000010002a1ed	jbe	0x10002a215
000000010002a1ef	jmp	0x100029f98
000000010002a1f4	nopw	%cs:(%rax,%rax)
000000010002a1fe	nop
000000010002a200	cmpq	$0x3, %r11
000000010002a204	jb	0x10002a21a
000000010002a206	leaq	-0x3(%r11), %r9
000000010002a20a	movq	%r9, %rcx
000000010002a20d	shlq	$0x4, %rcx
000000010002a211	movq	(%r12,%rcx), %rcx
000000010002a215	cmpq	%rax, %rcx
000000010002a218	jb	0x10002a21e
000000010002a21a	leaq	-0x2(%r11), %r9
000000010002a21e	cmpq	%r9, %r11
000000010002a221	jbe	0x10002b334
000000010002a227	leaq	0x1(%r9), %rax
000000010002a22b	cmpq	%rax, %r11
000000010002a22e	jbe	0x10002b2eb
000000010002a234	movq	%r9, %rcx
000000010002a237	shlq	$0x4, %rcx
000000010002a23b	movq	0x8(%r12,%rcx), %r14
000000010002a240	shlq	$0x4, %rax
000000010002a244	movq	(%r12,%rax), %rdx
000000010002a248	movq	0x8(%r12,%rax), %r15
000000010002a24d	addq	%rdx, %r15
000000010002a250	movq	%r15, %r13
000000010002a253	subq	%r14, %r13
000000010002a256	jb	0x10002b302
000000010002a25c	cmpq	-0xa0(%rbp), %r15
000000010002a263	ja	0x10002b319
000000010002a269	movq	%rdx, -0x50(%rbp)
000000010002a26d	movq	%r9, -0x58(%rbp)
000000010002a271	movq	%r11, -0x38(%rbp)
000000010002a275	movq	%r8, -0x30(%rbp)
000000010002a279	leaq	(%r12,%rcx), %rdx
000000010002a27d	movq	%rdx, -0x68(%rbp)
000000010002a281	movq	(%r12,%rcx), %rdx
000000010002a285	leaq	(%r12,%rax), %rcx
000000010002a289	movq	%rcx, -0x60(%rbp)
000000010002a28d	leaq	0x8(%r12,%rax), %rax
000000010002a292	movq	%rax, -0x88(%rbp)
000000010002a299	movq	%r14, -0x90(%rbp)
000000010002a2a0	shlq	$0x5, %r14
000000010002a2a4	addq	%rbx, %r14
000000010002a2a7	movq	%rdx, %r12
000000010002a2aa	shlq	$0x5, %r12
000000010002a2ae	leaq	(%r14,%r12), %rbx
000000010002a2b2	shlq	$0x5, %r15
000000010002a2b6	movq	%r13, %rax
000000010002a2b9	subq	%rdx, %rax
000000010002a2bc	movq	%rdx, -0xa8(%rbp)
000000010002a2c3	cmpq	%rdx, %rax
000000010002a2c6	jae	0x10002a3a0
000000010002a2cc	movq	%rax, -0xe0(%rbp)
000000010002a2d3	movq	%rax, %r12
000000010002a2d6	shlq	$0x5, %r12
000000010002a2da	movq	-0x80(%rbp), %r13
000000010002a2de	movq	%r13, %rdi
000000010002a2e1	movq	%rbx, %rsi
000000010002a2e4	movq	%r12, %rdx
000000010002a2e7	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002a2ec	addq	%r13, %r12
000000010002a2ef	movq	-0xa8(%rbp), %rdi
000000010002a2f6	testq	%rdi, %rdi
000000010002a2f9	jle	0x10002a110
000000010002a2ff	cmpq	$0x0, -0xe0(%rbp)
000000010002a307	jle	0x10002a110
000000010002a30d	addq	-0xd8(%rbp), %r15
000000010002a314	nopw	%cs:(%rax,%rax)
000000010002a31e	nop
000000010002a320	movq	%r12, %rax
000000010002a323	movq	%rbx, %rcx
000000010002a326	movq	-0x20(%r12), %rdx
000000010002a32b	movq	-0x20(%rbx), %rsi
000000010002a32f	cmpq	%rsi, %rdx
000000010002a332	movl	$0x0, %ebx
000000010002a337	sbbq	%rbx, %rbx
000000010002a33a	cmpq	%rsi, %rdx
000000010002a33d	movl	$0x0, %r12d
000000010002a343	adcq	$-0x1, %r12
000000010002a347	shlq	$0x5, %rbx
000000010002a34b	addq	%rcx, %rbx
000000010002a34e	shlq	$0x5, %r12
000000010002a352	addq	%rax, %r12
000000010002a355	cmpq	%rsi, %rdx
000000010002a358	movq	%r12, %rax
000000010002a35b	cmovbq	%rbx, %rax
000000010002a35f	movq	0x18(%rax), %rcx
000000010002a363	movq	%rcx, 0x18(%r15)
000000010002a367	movq	0x10(%rax), %rcx
000000010002a36b	movq	%rcx, 0x10(%r15)
000000010002a36f	movq	(%rax), %rcx
000000010002a372	movq	0x8(%rax), %rax
000000010002a376	movq	%rax, 0x8(%r15)
000000010002a37a	movq	%rcx, (%r15)
000000010002a37d	cmpq	%r14, %rbx
000000010002a380	jbe	0x10002a110
000000010002a386	addq	$-0x20, %r15
000000010002a38a	cmpq	%r13, %r12
000000010002a38d	ja	0x10002a320
000000010002a38f	jmp	0x10002a110
000000010002a394	nopw	%cs:(%rax,%rax)
000000010002a39e	nop
000000010002a3a0	movq	-0x80(%rbp), %rdi
000000010002a3a4	movq	%r14, %rsi
000000010002a3a7	movq	%r12, %rdx
000000010002a3aa	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002a3af	addq	-0x80(%rbp), %r12
000000010002a3b3	movq	-0xa8(%rbp), %r9
000000010002a3ba	testq	%r9, %r9
000000010002a3bd	jle	0x10002a430
000000010002a3bf	cmpq	%r9, %r13
000000010002a3c2	jle	0x10002a430
000000010002a3c4	addq	-0x40(%rbp), %r15
000000010002a3c8	movq	-0x80(%rbp), %r13
000000010002a3cc	movq	%r13, %rsi
000000010002a3cf	nop
000000010002a3d0	movq	%rsi, %rdx
000000010002a3d3	movq	(%rbx), %rcx
000000010002a3d6	xorl	%esi, %esi
000000010002a3d8	xorl	%eax, %eax
000000010002a3da	cmpq	(%rdx), %rcx
000000010002a3dd	setae	%sil
000000010002a3e1	setb	%cl
000000010002a3e4	movq	%rdx, %rdi
000000010002a3e7	cmovbq	%rbx, %rdi
000000010002a3eb	movq	0x18(%rdi), %r8
000000010002a3ef	movq	%r8, 0x18(%r14)
000000010002a3f3	movq	0x10(%rdi), %r8
000000010002a3f7	movq	%r8, 0x10(%r14)
000000010002a3fb	movq	(%rdi), %r8
000000010002a3fe	movq	0x8(%rdi), %rdi
000000010002a402	movq	%rdi, 0x8(%r14)
000000010002a406	movq	%r8, (%r14)
000000010002a409	addq	$0x20, %r14
000000010002a40d	shlq	$0x5, %rsi
000000010002a411	addq	%rdx, %rsi
000000010002a414	cmpq	%r12, %rsi
000000010002a417	jae	0x10002a427
000000010002a419	movb	%cl, %al
000000010002a41b	shlq	$0x5, %rax
000000010002a41f	addq	%rax, %rbx
000000010002a422	cmpq	%r15, %rbx
000000010002a425	jb	0x10002a3d0
000000010002a427	movq	%r9, %r15
000000010002a42a	jmp	0x10002a119
000000010002a42f	nop
000000010002a430	movq	%r9, %r15
000000010002a433	movq	-0x80(%rbp), %r13
000000010002a437	jmp	0x10002a116
000000010002a43c	nopl	(%rax)
000000010002a440	movl	$0x1, %r11d
000000010002a446	jmp	0x100029f98
000000010002a44b	nopl	(%rax,%rax)
000000010002a450	cmpq	$0x2, %rdx
000000010002a454	jne	0x10002a499
000000010002a456	leaq	0x2(%r9), %rsi
000000010002a45a	movl	$0x2, %edx
000000010002a45f	jmp	0x100029fc6
000000010002a464	movq	%r9, %r13
000000010002a467	addq	-0xf8(%rbp), %rsi
000000010002a46e	movl	$0x2, %r8d
000000010002a474	movq	%rcx, %r9
000000010002a477	nopw	(%rax,%rax)
000000010002a480	movq	%r9, %r10
000000010002a483	movq	(%rsi), %r9
000000010002a486	cmpq	%r10, %r9
000000010002a489	jae	0x10002a4ca
000000010002a48b	incq	%r8
000000010002a48e	addq	$0x20, %rsi
000000010002a492	cmpq	%r8, %rdx
000000010002a495	jne	0x10002a480
000000010002a497	jmp	0x10002a4c7
000000010002a499	movq	%r9, %r13
000000010002a49c	addq	-0xf8(%rbp), %rsi
000000010002a4a3	movl	$0x2, %r8d
000000010002a4a9	movq	%rcx, %r9
000000010002a4ac	nopl	(%rax)
000000010002a4b0	movq	%r9, %r10
000000010002a4b3	movq	(%rsi), %r9
000000010002a4b6	cmpq	%r10, %r9
000000010002a4b9	jb	0x10002a4ca
000000010002a4bb	incq	%r8
000000010002a4be	addq	$0x20, %rsi
000000010002a4c2	cmpq	%r8, %rdx
000000010002a4c5	jne	0x10002a4b0
000000010002a4c7	movq	%rdx, %r8
000000010002a4ca	movq	%r13, %r9
000000010002a4cd	leaq	(%r8,%r13), %rsi
000000010002a4d1	movq	%r8, %rdx
000000010002a4d4	cmpq	%rax, %rcx
000000010002a4d7	jae	0x100029fc6
000000010002a4dd	cmpq	%r9, %rsi
000000010002a4e0	jb	0x10002b5e8
000000010002a4e6	cmpq	%r15, %rsi
000000010002a4e9	ja	0x10002b5d1
000000010002a4ef	cmpq	$0x2, %rdx
000000010002a4f3	jb	0x100029fc6
000000010002a4f9	movq	%rsi, %r10
000000010002a4fc	movq	%rdx, %rax
000000010002a4ff	shrq	%rax
000000010002a502	movq	%r9, %r13
000000010002a505	leaq	(%r9,%rdx), %rcx
000000010002a509	shlq	$0x5, %rcx
000000010002a50d	addq	-0xd8(%rbp), %rcx
000000010002a514	movq	%rdi, %rsi
000000010002a517	nopw	(%rax,%rax)
000000010002a520	movq	0x18(%rsi), %r8
000000010002a524	movq	%r8, -0x4c0(%rbp)
000000010002a52b	movq	0x10(%rsi), %r8
000000010002a52f	movq	%r8, -0x4c8(%rbp)
000000010002a536	movq	(%rsi), %r8
000000010002a539	movq	0x8(%rsi), %r9
000000010002a53d	movq	%r9, -0x4d0(%rbp)
000000010002a544	movq	%r8, -0x4d8(%rbp)
000000010002a54b	movq	0x18(%rcx), %r8
000000010002a54f	movq	%r8, 0x18(%rsi)
000000010002a553	movq	0x10(%rcx), %r8
000000010002a557	movq	%r8, 0x10(%rsi)
000000010002a55b	movq	(%rcx), %r8
000000010002a55e	movq	0x8(%rcx), %r9
000000010002a562	movq	%r9, 0x8(%rsi)
000000010002a566	movq	%r8, (%rsi)
000000010002a569	movq	-0x4c0(%rbp), %r8
000000010002a570	movq	%r8, 0x18(%rcx)
000000010002a574	movq	-0x4c8(%rbp), %r8
000000010002a57b	movq	%r8, 0x10(%rcx)
000000010002a57f	movq	-0x4d8(%rbp), %r8
000000010002a586	movq	-0x4d0(%rbp), %r9
000000010002a58d	movq	%r9, 0x8(%rcx)
000000010002a591	movq	%r8, (%rcx)
000000010002a594	addq	$0x20, %rsi
000000010002a598	addq	$-0x20, %rcx
000000010002a59c	decq	%rax
000000010002a59f	jne	0x10002a520
000000010002a5a5	movq	%r10, %rsi
000000010002a5a8	movq	%r13, %r9
000000010002a5ab	jmp	0x100029fc6
000000010002a5b0	movl	$0x2, %r11d
000000010002a5b6	jmp	0x100029f98
000000010002a5bb	movl	$0x3, %r11d
000000010002a5c1	jmp	0x100029f98
000000010002a5c6	movq	-0xd0(%rbp), %rsi
000000010002a5cd	shlq	$0x4, %rsi
000000010002a5d1	movl	$0x8, %edx
000000010002a5d6	movq	%r12, %rdi
000000010002a5d9	callq	___rust_dealloc
000000010002a5de	movl	$0x8, %edx
000000010002a5e3	movq	%r13, %rdi
000000010002a5e6	movq	-0x130(%rbp), %rsi
000000010002a5ed	callq	___rust_dealloc
000000010002a5f2	movq	-0xc0(%rbp), %rbx
000000010002a5f9	movq	-0xb0(%rbp), %r15
000000010002a600	testq	%r15, %r15
000000010002a603	je	0x10002a63d
000000010002a605	movq	%r15, %rax
000000010002a608	shlq	$0x5, %rax
000000010002a60c	addq	%rbx, %rax
000000010002a60f	xorl	%ecx, %ecx
000000010002a611	movq	%rbx, %rdx
000000010002a614	nopw	%cs:(%rax,%rax)
000000010002a61e	nop
000000010002a620	movq	0x8(%rdx), %rsi
000000010002a624	cmpq	%rsi, %rcx
000000010002a627	cmovbeq	%rsi, %rcx
000000010002a62b	movq	%rcx, 0x18(%rdx)
000000010002a62f	leaq	0x20(%rdx), %rsi
000000010002a633	movq	%rsi, %rdx
000000010002a636	cmpq	%rax, %rsi
000000010002a639	jne	0x10002a620
000000010002a63b	jmp	0x10002a640
000000010002a63d	xorl	%r15d, %r15d
000000010002a640	movq	-0xb8(%rbp), %rax
000000010002a647	movq	%rax, -0x30(%rbp)
000000010002a64b	movq	-0x128(%rbp), %rax
000000010002a652	movq	-0x120(%rbp), %rcx
000000010002a659	movq	%rax, -0x6d8(%rbp)
000000010002a660	movq	%rcx, -0x6d0(%rbp)
000000010002a667	movq	-0x118(%rbp), %rax
000000010002a66e	movq	%rax, -0x6c8(%rbp)
000000010002a675	movq	-0x168(%rbp), %rsi
000000010002a67c	testq	%rsi, %rsi
000000010002a67f	je	0x10002a696
000000010002a681	movq	-0x170(%rbp), %rdi
000000010002a688	shlq	$0x4, %rsi
000000010002a68c	movl	$0x8, %edx
000000010002a691	callq	___rust_dealloc
000000010002a696	testq	%rbx, %rbx
000000010002a699	je	0x1000287cc
000000010002a69f	movq	-0x6c8(%rbp), %rax
000000010002a6a6	movq	%rax, -0x118(%rbp)
000000010002a6ad	movq	-0x6d8(%rbp), %rax
000000010002a6b4	movq	-0x6d0(%rbp), %rcx
000000010002a6bb	movq	%rcx, -0x120(%rbp)
000000010002a6c2	movq	%rax, -0x128(%rbp)
000000010002a6c9	movq	-0x220(%rbp), %r13
000000010002a6d0	movq	0xe0(%r13), %r14
000000010002a6d7	testq	%r14, %r14
000000010002a6da	movq	%rbx, -0x40(%rbp)
000000010002a6de	movq	%r15, -0xa0(%rbp)
000000010002a6e5	je	0x10002a7d9
000000010002a6eb	movq	%r13, -0x38(%rbp)
000000010002a6ef	movq	$0x8, -0x208(%rbp)
000000010002a6fa	movq	$0x0, -0x200(%rbp)
000000010002a705	movq	$0x0, -0x1f8(%rbp)
000000010002a710	movq	0x40(%r14), %rax
000000010002a714	movq	0x48(%r14), %rcx
000000010002a718	movq	%rax, -0x2c0(%rbp)
000000010002a71f	movq	%rcx, -0x2b8(%rbp)
000000010002a726	movq	$0x0, -0x2b0(%rbp)
000000010002a731	leaq	-0x4d8(%rbp), %rdi
000000010002a738	leaq	-0x2c0(%rbp), %rsi
000000010002a73f	callq	__ZN5gimli4read4unit33DebugInfoUnitHeadersIter$LT$R$GT$4next17h8b6fac7ca58410afE ## gimli::read::unit::DebugInfoUnitHeadersIter$LT$R$GT$::next::h8b6fac7ca58410af
000000010002a744	movq	-0x4d8(%rbp), %rax
000000010002a74b	cmpq	$0x3, %rax
000000010002a74f	jne	0x10002a855
000000010002a755	leaq	-0x208(%rbp), %rdi
000000010002a75c	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb24d96b5772f44c0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb24d96b5772f44c0
000000010002a761	movq	-0x128(%rbp), %rbx
000000010002a768	movq	-0x118(%rbp), %r15
000000010002a76f	incq	%r15
000000010002a772	movq	%rbx, %rdi
000000010002a775	nopw	%cs:(%rax,%rax)
000000010002a77f	nop
000000010002a780	cmpq	$0x1, %r15
000000010002a784	je	0x10002a79a
000000010002a786	leaq	0x218(%rdi), %r14
000000010002a78d	decq	%r15
000000010002a790	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
000000010002a795	movq	%r14, %rdi
000000010002a798	jmp	0x10002a780
000000010002a79a	movq	-0x120(%rbp), %rax
000000010002a7a1	testq	%rax, %rax
000000010002a7a4	je	0x10002a7ba
000000010002a7a6	imulq	$0x218, %rax, %rsi              ## imm = 0x218
000000010002a7ad	movl	$0x8, %edx
000000010002a7b2	movq	%rbx, %rdi
000000010002a7b5	callq	___rust_dealloc
000000010002a7ba	movq	-0x30(%rbp), %rsi
000000010002a7be	testq	%rsi, %rsi
000000010002a7c1	je	0x1000287cc
000000010002a7c7	shlq	$0x5, %rsi
000000010002a7cb	movl	$0x8, %edx
000000010002a7d0	movq	-0x40(%rbp), %rdi
000000010002a7d4	jmp	0x1000287c7
000000010002a7d9	movq	$0x8, -0x280(%rbp)
000000010002a7e4	movq	$0x0, -0x278(%rbp)
000000010002a7ef	movq	$0x0, -0x270(%rbp)
000000010002a7fa	movq	%r13, -0x680(%rbp)
000000010002a801	movq	%rbx, %r14
000000010002a804	cmpq	%r15, -0x30(%rbp)
000000010002a808	jbe	0x10002aa45
000000010002a80e	movq	-0x30(%rbp), %rsi
000000010002a812	shlq	$0x5, %rsi
000000010002a816	testq	%r15, %r15
000000010002a819	je	0x10002aa31
000000010002a81f	movq	%r15, %rbx
000000010002a822	shlq	$0x5, %rbx
000000010002a826	movl	$0x8, %edx
000000010002a82b	movq	-0x40(%rbp), %rdi
000000010002a82f	movq	%rbx, %rcx
000000010002a832	callq	___rust_realloc
000000010002a837	movq	%rax, %r14
000000010002a83a	testq	%rax, %rax
000000010002a83d	jne	0x10002aa45
000000010002a843	movl	$0x8, %edi
000000010002a848	movq	%rbx, %rsi
000000010002a84b	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002a850	jmp	0x10002b687
000000010002a855	addq	$0x10, %r14
000000010002a859	movl	$0x8, %r12d
000000010002a85f	xorl	%r15d, %r15d
000000010002a862	leaq	-0x4d8(%rbp), %r13
000000010002a869	leaq	-0x2c0(%rbp), %rbx
000000010002a870	jmp	0x10002a898
000000010002a872	cmpq	$0x2, %rax
000000010002a876	je	0x10002a9e7
000000010002a87c	movq	%r13, %rdi
000000010002a87f	movq	%rbx, %rsi
000000010002a882	callq	__ZN5gimli4read4unit33DebugInfoUnitHeadersIter$LT$R$GT$4next17h8b6fac7ca58410afE ## gimli::read::unit::DebugInfoUnitHeadersIter$LT$R$GT$::next::h8b6fac7ca58410af
000000010002a887	movq	-0x4d8(%rbp), %rax
000000010002a88e	cmpq	$0x3, %rax
000000010002a892	je	0x10002a755
000000010002a898	movups	-0x4d0(%rbp), %xmm0
000000010002a89f	leaq	-0x4c0(%rbp), %rsi
000000010002a8a6	movq	(%rsi), %rcx
000000010002a8a9	movq	0x8(%rsi), %rdx
000000010002a8ad	movq	%rcx, -0x1c8(%rbp)
000000010002a8b4	movq	%rdx, -0x1c0(%rbp)
000000010002a8bb	movq	0x10(%rsi), %rcx
000000010002a8bf	movq	%rcx, -0x1b8(%rbp)
000000010002a8c6	movq	0x18(%rsi), %rcx
000000010002a8ca	movq	%rcx, -0x1b0(%rbp)
000000010002a8d1	movq	0x20(%rsi), %rcx
000000010002a8d5	movq	%rcx, -0x1a8(%rbp)
000000010002a8dc	movq	0x28(%rsi), %rcx
000000010002a8e0	movq	%rcx, -0x1a0(%rbp)
000000010002a8e7	movq	0x30(%rsi), %rcx
000000010002a8eb	movq	%rcx, -0x198(%rbp)
000000010002a8f2	testq	%rax, %rax
000000010002a8f5	jne	0x10002a872
000000010002a8fb	movq	$0x0, -0x4d8(%rbp)
000000010002a906	movaps	%xmm0, -0x80(%rbp)
000000010002a90a	movups	%xmm0, -0x4d0(%rbp)
000000010002a911	movq	-0x198(%rbp), %rax
000000010002a918	movq	%rax, 0x30(%rsi)
000000010002a91c	movq	-0x1a0(%rbp), %rax
000000010002a923	movq	%rax, 0x28(%rsi)
000000010002a927	movq	-0x1a8(%rbp), %rax
000000010002a92e	movq	%rax, 0x20(%rsi)
000000010002a932	movq	-0x1b0(%rbp), %rax
000000010002a939	movq	%rax, 0x18(%rsi)
000000010002a93d	movq	-0x1b8(%rbp), %rax
000000010002a944	movq	%rax, 0x10(%rsi)
000000010002a948	movq	-0x1c8(%rbp), %rax
000000010002a94f	movq	-0x1c0(%rbp), %rcx
000000010002a956	movq	%rcx, 0x8(%rsi)
000000010002a95a	movq	%rax, (%rsi)
000000010002a95d	leaq	-0x680(%rbp), %rdi
000000010002a964	movq	%r14, %rsi
000000010002a967	movq	%r13, %rdx
000000010002a96a	callq	__ZN5gimli4read5dwarf13Unit$LT$R$GT$3new17h1616263b38dd04dcE ## gimli::read::dwarf::Unit$LT$R$GT$::new::h1616263b38dd04dc
000000010002a96f	cmpl	$0x2, -0x680(%rbp)
000000010002a976	je	0x10002a87c
000000010002a97c	movl	$0x1a8, %edx                    ## imm = 0x1A8
000000010002a981	movq	%r13, %rdi
000000010002a984	leaq	-0x680(%rbp), %rsi
000000010002a98b	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002a990	movaps	-0x80(%rbp), %xmm0
000000010002a994	movlps	%xmm0, -0x330(%rbp)
000000010002a99b	cmpq	-0x200(%rbp), %r15
000000010002a9a2	jne	0x10002a9c1
000000010002a9a4	leaq	-0x208(%rbp), %rdi
000000010002a9ab	movq	%r15, %rsi
000000010002a9ae	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h932db87801972987E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h932db87801972987
000000010002a9b3	movq	-0x208(%rbp), %r12
000000010002a9ba	movq	-0x1f8(%rbp), %r15
000000010002a9c1	imulq	$0x1b0, %r15, %rdi              ## imm = 0x1B0
000000010002a9c8	addq	%r12, %rdi
000000010002a9cb	movl	$0x1b0, %edx                    ## imm = 0x1B0
000000010002a9d0	movq	%r13, %rsi
000000010002a9d3	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002a9d8	incq	%r15
000000010002a9db	movq	%r15, -0x1f8(%rbp)
000000010002a9e2	jmp	0x10002a87c
000000010002a9e7	testq	%r12, %r12
000000010002a9ea	je	0x10002a761
000000010002a9f0	movq	-0x200(%rbp), %rax
000000010002a9f7	movq	%r12, -0x280(%rbp)
000000010002a9fe	movq	%rax, -0x278(%rbp)
000000010002aa05	movq	%r15, -0x270(%rbp)
000000010002aa0c	movq	-0x40(%rbp), %rbx
000000010002aa10	movq	-0xa0(%rbp), %r15
000000010002aa17	movq	-0x38(%rbp), %r13
000000010002aa1b	movq	%r13, -0x680(%rbp)
000000010002aa22	movq	%rbx, %r14
000000010002aa25	cmpq	%r15, -0x30(%rbp)
000000010002aa29	ja	0x10002a80e
000000010002aa2f	jmp	0x10002aa45
000000010002aa31	movl	$0x8, %r14d
000000010002aa37	movl	$0x8, %edx
000000010002aa3c	movq	-0x40(%rbp), %rdi
000000010002aa40	callq	___rust_dealloc
000000010002aa45	movq	-0x118(%rbp), %rbx
000000010002aa4c	movq	%rbx, -0x4c8(%rbp)
000000010002aa53	movq	-0x128(%rbp), %rcx
000000010002aa5a	movq	-0x120(%rbp), %rax
000000010002aa61	movq	%rax, -0x4d0(%rbp)
000000010002aa68	movq	%rcx, -0x4d8(%rbp)
000000010002aa6f	cmpq	%rbx, %rax
000000010002aa72	movq	%r14, -0x80(%rbp)
000000010002aa76	jbe	0x10002aab9
000000010002aa78	movq	-0x4d8(%rbp), %rdi
000000010002aa7f	imulq	$0x218, %rax, %rsi              ## imm = 0x218
000000010002aa86	testq	%rbx, %rbx
000000010002aa89	je	0x10002aac2
000000010002aa8b	imulq	$0x218, %rbx, %r12              ## imm = 0x218
000000010002aa92	movl	$0x8, %edx
000000010002aa97	movq	%r12, %rcx
000000010002aa9a	callq	___rust_realloc
000000010002aa9f	movq	%rax, %r15
000000010002aaa2	testq	%rax, %rax
000000010002aaa5	jne	0x10002aad2
000000010002aaa7	movl	$0x8, %edi
000000010002aaac	movq	%r12, %rsi
000000010002aaaf	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002aab4	jmp	0x10002b687
000000010002aab9	movq	-0x4d8(%rbp), %r15
000000010002aac0	jmp	0x10002aad2
000000010002aac2	movl	$0x8, %r15d
000000010002aac8	movl	$0x8, %edx
000000010002aacd	callq	___rust_dealloc
000000010002aad2	movq	-0x270(%rbp), %r14
000000010002aad9	movq	%r14, -0x4c8(%rbp)
000000010002aae0	movq	-0x280(%rbp), %rcx
000000010002aae7	movq	-0x278(%rbp), %rax
000000010002aaee	movq	%rax, -0x4d0(%rbp)
000000010002aaf5	movq	%rcx, -0x4d8(%rbp)
000000010002aafc	cmpq	%r14, %rax
000000010002aaff	jbe	0x10002ab44
000000010002ab01	movq	-0x4d8(%rbp), %rdi
000000010002ab08	imulq	$0x1b0, %rax, %rsi              ## imm = 0x1B0
000000010002ab0f	testq	%r14, %r14
000000010002ab12	je	0x10002ab4d
000000010002ab14	imulq	$0x1b0, %r14, %rcx              ## imm = 0x1B0
000000010002ab1b	movl	$0x8, %edx
000000010002ab20	movq	%rcx, -0x38(%rbp)
000000010002ab24	callq	___rust_realloc
000000010002ab29	movq	%rax, %r12
000000010002ab2c	testq	%rax, %rax
000000010002ab2f	jne	0x10002ab5d
000000010002ab31	movl	$0x8, %edi
000000010002ab36	movq	-0x38(%rbp), %rsi
000000010002ab3a	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002ab3f	jmp	0x10002b687
000000010002ab44	movq	-0x4d8(%rbp), %r12
000000010002ab4b	jmp	0x10002ab5d
000000010002ab4d	movl	$0x8, %r12d
000000010002ab53	movl	$0x8, %edx
000000010002ab58	callq	___rust_dealloc
000000010002ab5d	movq	%r13, -0x6b8(%rbp)
000000010002ab64	movq	-0x80(%rbp), %rax
000000010002ab68	movq	%rax, -0x6b0(%rbp)
000000010002ab6f	movq	-0xa0(%rbp), %rax
000000010002ab76	movq	%rax, -0x6a8(%rbp)
000000010002ab7d	movq	%r15, -0x6a0(%rbp)
000000010002ab84	movq	%rbx, -0x698(%rbp)
000000010002ab8b	movq	%r12, -0x690(%rbp)
000000010002ab92	movq	%r14, -0x688(%rbp)
000000010002ab99	movq	-0x148(%rbp), %rsi
000000010002aba0	cmpb	$0x2, 0x78(%rsi)
000000010002aba4	jne	0x10002ae16
000000010002abaa	movb	$0x16, %r15b
000000010002abad	movq	-0x688(%rbp), %rax
000000010002abb4	movq	-0x218(%rbp), %rdx
000000010002abbb	movq	%rax, 0x180(%rdx)
000000010002abc2	movq	-0x690(%rbp), %rax
000000010002abc9	movq	%rax, 0x178(%rdx)
000000010002abd0	movq	-0x698(%rbp), %rax
000000010002abd7	movq	%rax, 0x170(%rdx)
000000010002abde	movq	-0x6a0(%rbp), %rax
000000010002abe5	movq	%rax, 0x168(%rdx)
000000010002abec	movq	-0x6a8(%rbp), %rax
000000010002abf3	movq	%rax, 0x160(%rdx)
000000010002abfa	movq	-0x6b0(%rbp), %rax
000000010002ac01	movq	%rax, 0x158(%rdx)
000000010002ac08	movq	-0x6b8(%rbp), %rax
000000010002ac0f	movq	%rax, 0x150(%rdx)
000000010002ac16	movl	$0x10, %ecx
000000010002ac1b	leaq	0x188(%rdx), %rdi
000000010002ac22	movq	-0xc8(%rbp), %rsi
000000010002ac29	rep		movsq	(%rsi), %es:(%rdi)
000000010002ac2c	movl	-0x23d(%rbp), %eax
000000010002ac32	movl	%eax, 0x4(%rdx)
000000010002ac35	movl	-0x240(%rbp), %eax
000000010002ac3b	movl	%eax, 0x1(%rdx)
000000010002ac3e	movq	-0x1d0(%rbp), %rax
000000010002ac45	movq	%rax, 0x50(%rdx)
000000010002ac49	movq	-0x1d8(%rbp), %rax
000000010002ac50	movq	%rax, 0x48(%rdx)
000000010002ac54	movq	-0x1e0(%rbp), %rax
000000010002ac5b	movq	%rax, 0x40(%rdx)
000000010002ac5f	movq	-0x1e8(%rbp), %rax
000000010002ac66	movq	%rax, 0x38(%rdx)
000000010002ac6a	movq	-0x1f0(%rbp), %rax
000000010002ac71	movq	%rax, 0x30(%rdx)
000000010002ac75	movq	-0x1f8(%rbp), %rax
000000010002ac7c	movq	%rax, 0x28(%rdx)
000000010002ac80	movq	-0x200(%rbp), %rax
000000010002ac87	movq	%rax, 0x20(%rdx)
000000010002ac8b	movq	-0x208(%rbp), %rax
000000010002ac92	movq	%rax, 0x18(%rdx)
000000010002ac96	movl	-0x170(%rbp), %eax
000000010002ac9c	movl	%eax, 0x59(%rdx)
000000010002ac9f	movl	-0x16d(%rbp), %eax
000000010002aca5	movl	%eax, 0x5c(%rdx)
000000010002aca8	movq	-0x280(%rbp), %rax
000000010002acaf	movq	%rax, 0x70(%rdx)
000000010002acb3	movq	-0x278(%rbp), %rax
000000010002acba	movq	%rax, 0x78(%rdx)
000000010002acbe	movq	-0x270(%rbp), %rax
000000010002acc5	movq	%rax, 0x80(%rdx)
000000010002accc	movq	-0x268(%rbp), %rax
000000010002acd3	movq	%rax, 0x88(%rdx)
000000010002acda	movq	-0x260(%rbp), %rax
000000010002ace1	movq	%rax, 0x90(%rdx)
000000010002ace8	movq	-0x258(%rbp), %rax
000000010002acef	movq	%rax, 0x98(%rdx)
000000010002acf6	movq	-0x250(%rbp), %rax
000000010002acfd	movq	%rax, 0xa0(%rdx)
000000010002ad04	movq	-0x248(%rbp), %rax
000000010002ad0b	movq	%rax, 0xa8(%rdx)
000000010002ad12	movb	%r15b, (%rdx)
000000010002ad15	movq	%r8, 0x8(%rdx)
000000010002ad19	movq	%r9, 0x10(%rdx)
000000010002ad1d	movb	%r10b, 0x58(%rdx)
000000010002ad21	movq	%r11, 0x60(%rdx)
000000010002ad25	movq	%r14, 0x68(%rdx)
000000010002ad29	movq	-0xa0(%rbp), %rax
000000010002ad30	movq	%rax, 0xb0(%rdx)
000000010002ad37	movq	-0x80(%rbp), %rax
000000010002ad3b	movq	%rax, 0xb8(%rdx)
000000010002ad42	movq	-0x30(%rbp), %rax
000000010002ad46	movq	%rax, 0xc0(%rdx)
000000010002ad4d	movq	-0x38(%rbp), %rax
000000010002ad51	movq	%rax, 0xc8(%rdx)
000000010002ad58	movq	-0x58(%rbp), %rax
000000010002ad5c	movq	%rax, 0xd0(%rdx)
000000010002ad63	movq	-0x90(%rbp), %rax
000000010002ad6a	movq	%rax, 0xd8(%rdx)
000000010002ad71	movq	-0x60(%rbp), %rax
000000010002ad75	movq	%rax, 0xe0(%rdx)
000000010002ad7c	movq	-0x88(%rbp), %rax
000000010002ad83	movq	%rax, 0xe8(%rdx)
000000010002ad8a	movq	-0xa8(%rbp), %rax
000000010002ad91	movq	%rax, 0xf0(%rdx)
000000010002ad98	movq	-0x40(%rbp), %rax
000000010002ad9c	movq	%rax, 0xf8(%rdx)
000000010002ada3	movq	-0x50(%rbp), %rax
000000010002ada7	movq	%rax, 0x100(%rdx)
000000010002adae	movq	-0x68(%rbp), %rax
000000010002adb2	movq	%rax, 0x108(%rdx)
000000010002adb9	movq	-0x100(%rbp), %rax
000000010002adc0	movq	%rax, 0x110(%rdx)
000000010002adc7	movq	-0xe0(%rbp), %rax
000000010002adce	movq	%rax, 0x118(%rdx)
000000010002add5	movq	-0xd8(%rbp), %rax
000000010002addc	movq	%rax, 0x120(%rdx)
000000010002ade3	movq	%r12, 0x128(%rdx)
000000010002adea	movq	%r13, 0x130(%rdx)
000000010002adf1	movq	%rbx, 0x138(%rdx)
000000010002adf8	leaq	0x18ef1(%rip), %rax
000000010002adff	movq	%rax, 0x140(%rdx)
000000010002ae06	movq	$0x0, 0x148(%rdx)
000000010002ae11	jmp	0x100028842
000000010002ae16	leaq	-0x4d8(%rbp), %rdi
000000010002ae1d	movl	$0x10, %ecx
000000010002ae22	rep		movsq	(%rsi), %es:(%rdi)
000000010002ae25	movl	$0x3, %edi
000000010002ae2a	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
000000010002ae2f	testq	%rax, %rax
000000010002ae32	je	0x10002ae48
000000010002ae34	leaq	-0x4d8(%rbp), %rdi
000000010002ae3b	movq	%rax, %rsi
000000010002ae3e	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002ae43	movq	%rax, %rsi
000000010002ae46	jmp	0x10002ae4a
000000010002ae48	xorl	%esi, %esi
000000010002ae4a	testq	%rsi, %rsi
000000010002ae4d	cmoveq	%rsi, %rdx
000000010002ae51	leaq	0x18e98(%rip), %rax
000000010002ae58	cmoveq	%rax, %rsi
000000010002ae5c	leaq	-0x680(%rbp), %rdi
000000010002ae63	callq	__ZN5gimli4read5index18UnitIndex$LT$R$GT$5parse17ha0c4f23316b3511eE ## gimli::read::index::UnitIndex$LT$R$GT$::parse::ha0c4f23316b3511e
000000010002ae68	movzbl	-0x680(%rbp), %ebx
000000010002ae6f	cmpb	$0x16, %bl
000000010002ae72	je	0x10002b236
000000010002ae78	movl	-0x67f(%rbp), %eax
000000010002ae7e	movl	-0x67c(%rbp), %ecx
000000010002ae84	movl	%ecx, -0xbd(%rbp)
000000010002ae8a	movl	%eax, -0xc0(%rbp)
000000010002ae90	movq	-0x678(%rbp), %rax
000000010002ae97	movq	%rax, -0x48(%rbp)
000000010002ae9b	movq	-0x670(%rbp), %rax
000000010002aea2	movq	%rax, -0xd0(%rbp)
000000010002aea9	movq	-0x668(%rbp), %rax
000000010002aeb0	movq	%rax, -0x2c0(%rbp)
000000010002aeb7	movq	-0x660(%rbp), %rax
000000010002aebe	movq	%rax, -0x2b8(%rbp)
000000010002aec5	movq	-0x658(%rbp), %rax
000000010002aecc	movq	%rax, -0x2b0(%rbp)
000000010002aed3	movq	-0x650(%rbp), %rax
000000010002aeda	movq	%rax, -0x2a8(%rbp)
000000010002aee1	movq	-0x648(%rbp), %rax
000000010002aee8	movq	%rax, -0x2a0(%rbp)
000000010002aeef	movq	-0x640(%rbp), %rax
000000010002aef6	movq	%rax, -0x298(%rbp)
000000010002aefd	movq	-0x638(%rbp), %rax
000000010002af04	movq	%rax, -0x290(%rbp)
000000010002af0b	movq	-0x630(%rbp), %rax
000000010002af12	movq	%rax, -0x288(%rbp)
000000010002af19	movl	$0x14, %edi
000000010002af1e	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
000000010002af23	testq	%rax, %rax
000000010002af26	je	0x10002af3c
000000010002af28	leaq	-0x4d8(%rbp), %rdi
000000010002af2f	movq	%rax, %rsi
000000010002af32	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002af37	movq	%rax, %rsi
000000010002af3a	jmp	0x10002af3e
000000010002af3c	xorl	%esi, %esi
000000010002af3e	testq	%rsi, %rsi
000000010002af41	cmoveq	%rsi, %rdx
000000010002af45	leaq	0x18da4(%rip), %rax
000000010002af4c	cmoveq	%rax, %rsi
000000010002af50	leaq	-0x680(%rbp), %rdi
000000010002af57	callq	__ZN5gimli4read5index18UnitIndex$LT$R$GT$5parse17ha0c4f23316b3511eE ## gimli::read::index::UnitIndex$LT$R$GT$::parse::ha0c4f23316b3511e
000000010002af5c	movzbl	-0x680(%rbp), %eax
000000010002af63	cmpb	$0x16, %al
000000010002af65	je	0x10002b236
000000010002af6b	movb	%al, -0xf8(%rbp)
000000010002af71	movl	-0x67f(%rbp), %eax
000000010002af77	movl	-0x67c(%rbp), %ecx
000000010002af7d	movl	%ecx, -0x125(%rbp)
000000010002af83	movl	%eax, -0x128(%rbp)
000000010002af89	movq	-0x678(%rbp), %rax
000000010002af90	movq	%rax, -0x108(%rbp)
000000010002af97	movq	-0x670(%rbp), %rax
000000010002af9e	movq	%rax, -0x130(%rbp)
000000010002afa5	movq	-0x668(%rbp), %rax
000000010002afac	movq	%rax, -0x1c8(%rbp)
000000010002afb3	movq	-0x660(%rbp), %rax
000000010002afba	movq	%rax, -0x1c0(%rbp)
000000010002afc1	movq	-0x658(%rbp), %rax
000000010002afc8	movq	%rax, -0x1b8(%rbp)
000000010002afcf	movq	-0x650(%rbp), %rax
000000010002afd6	movq	%rax, -0x1b0(%rbp)
000000010002afdd	movq	-0x648(%rbp), %rax
000000010002afe4	movq	%rax, -0x1a8(%rbp)
000000010002afeb	movq	-0x640(%rbp), %rax
000000010002aff2	movq	%rax, -0x1a0(%rbp)
000000010002aff9	movq	-0x638(%rbp), %rax
000000010002b000	movq	%rax, -0x198(%rbp)
000000010002b007	movq	-0x630(%rbp), %rax
000000010002b00e	movq	%rax, -0x190(%rbp)
000000010002b015	xorl	%edi, %edi
000000010002b017	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
000000010002b01c	testq	%rax, %rax
000000010002b01f	je	0x10002b032
000000010002b021	leaq	-0x4d8(%rbp), %rdi
000000010002b028	movq	%rax, %rsi
000000010002b02b	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002b030	jmp	0x10002b034
000000010002b032	xorl	%eax, %eax
000000010002b034	testq	%rax, %rax
000000010002b037	cmoveq	%rax, %rdx
000000010002b03b	movq	%rdx, -0x80(%rbp)
000000010002b03f	movq	%rax, %rcx
000000010002b042	leaq	0x18ca7(%rip), %rax
000000010002b049	cmoveq	%rax, %rcx
000000010002b04d	movq	%rcx, -0xa0(%rbp)
000000010002b054	movl	$0x7, %edi
000000010002b059	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
000000010002b05e	testq	%rax, %rax
000000010002b061	je	0x10002b077
000000010002b063	leaq	-0x4d8(%rbp), %rdi
000000010002b06a	movq	%rax, %rsi
000000010002b06d	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002b072	movq	%rax, %rcx
000000010002b075	jmp	0x10002b079
000000010002b077	xorl	%ecx, %ecx
000000010002b079	testq	%rcx, %rcx
000000010002b07c	cmoveq	%rcx, %rdx
000000010002b080	movq	%rdx, -0x38(%rbp)
000000010002b084	leaq	0x18c65(%rip), %rax
000000010002b08b	cmoveq	%rax, %rcx
000000010002b08f	movq	%rcx, -0x30(%rbp)
000000010002b093	movl	$0x8, %edi
000000010002b098	callq	__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E ## gimli::common::SectionId::dwo_name::ha28591485e0f22b1
000000010002b09d	testq	%rax, %rax
000000010002b0a0	je	0x10002b0b6
000000010002b0a2	leaq	-0x4d8(%rbp), %rdi
000000010002b0a9	movq	%rax, %rsi
000000010002b0ac	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E ## std::backtrace_rs::symbolize::gimli::macho::Object::section::hf07eec0e91b6cf40
000000010002b0b1	movq	%rax, %rcx
000000010002b0b4	jmp	0x10002b0b8
000000010002b0b6	xorl	%ecx, %ecx
000000010002b0b8	testq	%rcx, %rcx
000000010002b0bb	cmoveq	%rcx, %rdx
000000010002b0bf	movq	%rdx, -0x90(%rbp)
000000010002b0c6	leaq	0x18c23(%rip), %rax
000000010002b0cd	cmoveq	%rax, %rcx
000000010002b0d1	movq	%rcx, -0x58(%rbp)
000000010002b0d5	leaq	-0x680(%rbp), %rdi
000000010002b0dc	leaq	-0x4d8(%rbp), %rsi
000000010002b0e3	movq	-0x140(%rbp), %rdx
000000010002b0ea	callq	__ZN5gimli4read7Section4load17hf39c65c3be3c841cE ## gimli::read::Section::load::hf39c65c3be3c841c
000000010002b0ef	cmpq	$0x0, -0x680(%rbp)
000000010002b0f7	jne	0x10002b236
000000010002b0fd	movq	-0x678(%rbp), %r14
000000010002b104	movq	-0x670(%rbp), %r15
000000010002b10b	leaq	-0x680(%rbp), %rdi
000000010002b112	leaq	-0x4d8(%rbp), %rsi
000000010002b119	movq	-0x140(%rbp), %rdx
000000010002b120	callq	__ZN5gimli4read7Section4load17haef137c715b4f12eE ## gimli::read::Section::load::haef137c715b4f12e
000000010002b125	cmpq	$0x0, -0x680(%rbp)
000000010002b12d	jne	0x10002b236
000000010002b133	movq	-0x678(%rbp), %r12
000000010002b13a	movq	-0x670(%rbp), %r13
000000010002b141	leaq	-0x680(%rbp), %rdi
000000010002b148	leaq	-0x4d8(%rbp), %rsi
000000010002b14f	movq	-0x140(%rbp), %rdx
000000010002b156	callq	__ZN5gimli4read7Section4load17h035a6749ffecbdd3E ## gimli::read::Section::load::h035a6749ffecbdd3
000000010002b15b	cmpq	$0x0, -0x680(%rbp)
000000010002b163	jne	0x10002b236
000000010002b169	movq	-0x678(%rbp), %rax
000000010002b170	movq	%rax, -0x50(%rbp)
000000010002b174	movq	-0x670(%rbp), %rax
000000010002b17b	movq	%rax, -0x68(%rbp)
000000010002b17f	leaq	-0x680(%rbp), %rdi
000000010002b186	leaq	-0x4d8(%rbp), %rsi
000000010002b18d	movq	-0x140(%rbp), %rdx
000000010002b194	callq	__ZN5gimli4read7Section4load17he63caa25b00c9728E ## gimli::read::Section::load::he63caa25b00c9728
000000010002b199	cmpq	$0x0, -0x680(%rbp)
000000010002b1a1	jne	0x10002b236
000000010002b1a7	movq	-0x678(%rbp), %rax
000000010002b1ae	movq	%rax, -0x100(%rbp)
000000010002b1b5	movq	-0x670(%rbp), %rax
000000010002b1bc	movq	%rax, -0xe0(%rbp)
000000010002b1c3	leaq	-0x680(%rbp), %rdi
000000010002b1ca	leaq	-0x4d8(%rbp), %rsi
000000010002b1d1	movq	-0x140(%rbp), %rdx
000000010002b1d8	callq	__ZN5gimli4read7Section4load17h7af1acbef8ba0d17E ## gimli::read::Section::load::h7af1acbef8ba0d17
000000010002b1dd	movq	%r13, -0x40(%rbp)
000000010002b1e1	movq	%r12, -0xa8(%rbp)
000000010002b1e8	movq	%r15, -0x88(%rbp)
000000010002b1ef	movq	%r14, -0x60(%rbp)
000000010002b1f3	cmpq	$0x0, -0x680(%rbp)
000000010002b1fb	jne	0x10002b236
000000010002b1fd	movl	%ebx, %r15d
000000010002b200	movq	-0x678(%rbp), %rbx
000000010002b207	movq	-0x670(%rbp), %r12
000000010002b20e	leaq	-0x680(%rbp), %rdi
000000010002b215	leaq	-0x4d8(%rbp), %rsi
000000010002b21c	movq	-0x140(%rbp), %rdx
000000010002b223	callq	__ZN5gimli4read7Section4load17h1b60791a73e0f5e9E ## gimli::read::Section::load::h1b60791a73e0f5e9
000000010002b228	cmpq	$0x0, -0x680(%rbp)
000000010002b230	je	0x10002b37d
000000010002b236	movq	-0x218(%rbp), %rax
000000010002b23d	movb	$0x2, 0x200(%rax)
000000010002b244	leaq	-0x4d8(%rbp), %rdi
000000010002b24b	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002b250	xorl	%ebx, %ebx
000000010002b252	leaq	-0x6b8(%rbp), %rdi
000000010002b259	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h70ca90901d829ad9E ## core::ptr::drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h70ca90901d829ad9
000000010002b25e	jmp	0x1000287f7
000000010002b263	leaq	0x1d03e(%rip), %rax
000000010002b26a	movq	%rax, -0x4d8(%rbp)
000000010002b271	leaq	0x1d1a8(%rip), %rsi
000000010002b278	jmp	0x10002b2b7
000000010002b27a	leaq	0x1d1b7(%rip), %rdx
000000010002b281	movq	%rbx, %rsi
000000010002b284	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010002b289	jmp	0x10002b687
000000010002b28e	leaq	0x1d1a3(%rip), %rdx
000000010002b295	movq	%rbx, %rdi
000000010002b298	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010002b29d	jmp	0x10002b687
000000010002b2a2	leaq	0x1cfff(%rip), %rax
000000010002b2a9	movq	%rax, -0x4d8(%rbp)
000000010002b2b0	leaq	0x1d151(%rip), %rsi
000000010002b2b7	movq	-0x130(%rbp), %rdi
000000010002b2be	movq	$0x1, 0x8(%rdi)
000000010002b2c6	movq	$0x0, 0x20(%rdi)
000000010002b2ce	leaq	0x18a1b(%rip), %rax
000000010002b2d5	movq	%rax, 0x10(%rdi)
000000010002b2d9	movq	$0x0, 0x18(%rdi)
000000010002b2e1	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010002b2e6	jmp	0x10002b687
000000010002b2eb	leaq	0x1cfb6(%rip), %rax
000000010002b2f2	movq	%rax, -0x4d8(%rbp)
000000010002b2f9	leaq	0x1d120(%rip), %rsi
000000010002b300	jmp	0x10002b349
000000010002b302	leaq	0x1d12f(%rip), %rdx
000000010002b309	movq	%r14, %rdi
000000010002b30c	movq	%r15, %rsi
000000010002b30f	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010002b314	jmp	0x10002b687
000000010002b319	leaq	0x1d118(%rip), %rdx
000000010002b320	movq	%r15, %rdi
000000010002b323	movq	-0xa0(%rbp), %rsi
000000010002b32a	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010002b32f	jmp	0x10002b687
000000010002b334	leaq	0x1cf6d(%rip), %rax
000000010002b33b	movq	%rax, -0x4d8(%rbp)
000000010002b342	leaq	0x1d0bf(%rip), %rsi
000000010002b349	movq	-0x108(%rbp), %rdi
000000010002b350	movq	$0x1, 0x8(%rdi)
000000010002b358	movq	$0x0, 0x20(%rdi)
000000010002b360	leaq	0x18989(%rip), %rax
000000010002b367	movq	%rax, 0x10(%rdi)
000000010002b36b	movq	$0x0, 0x18(%rdi)
000000010002b373	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010002b378	jmp	0x10002b687
000000010002b37d	movq	-0x678(%rbp), %r13
000000010002b384	movq	-0x670(%rbp), %rax
000000010002b38b	movq	%rax, -0x148(%rbp)
000000010002b392	movl	-0xc0(%rbp), %eax
000000010002b398	movl	-0xbd(%rbp), %ecx
000000010002b39e	movl	%ecx, -0x23d(%rbp)
000000010002b3a4	movl	%eax, -0x240(%rbp)
000000010002b3aa	movq	-0x2c0(%rbp), %rax
000000010002b3b1	movq	-0x2b8(%rbp), %rcx
000000010002b3b8	movq	%rax, -0x208(%rbp)
000000010002b3bf	movq	%rcx, -0x200(%rbp)
000000010002b3c6	movq	-0x2b0(%rbp), %rax
000000010002b3cd	movq	%rax, -0x1f8(%rbp)
000000010002b3d4	movq	-0x2a8(%rbp), %rax
000000010002b3db	movq	%rax, -0x1f0(%rbp)
000000010002b3e2	movq	-0x2a0(%rbp), %rax
000000010002b3e9	movq	%rax, -0x1e8(%rbp)
000000010002b3f0	movq	-0x298(%rbp), %rax
000000010002b3f7	movq	%rax, -0x1e0(%rbp)
000000010002b3fe	movq	-0x290(%rbp), %rax
000000010002b405	movq	%rax, -0x1d8(%rbp)
000000010002b40c	movq	-0x288(%rbp), %rax
000000010002b413	movq	%rax, -0x1d0(%rbp)
000000010002b41a	movl	-0x128(%rbp), %eax
000000010002b420	movl	-0x125(%rbp), %ecx
000000010002b426	movl	%ecx, -0x16d(%rbp)
000000010002b42c	movl	%eax, -0x170(%rbp)
000000010002b432	movq	-0x190(%rbp), %rax
000000010002b439	movq	%rax, -0x248(%rbp)
000000010002b440	movq	-0x198(%rbp), %rax
000000010002b447	movq	%rax, -0x250(%rbp)
000000010002b44e	movq	-0x1a0(%rbp), %rax
000000010002b455	movq	%rax, -0x258(%rbp)
000000010002b45c	movq	-0x1a8(%rbp), %rax
000000010002b463	movq	%rax, -0x260(%rbp)
000000010002b46a	movq	-0x1b0(%rbp), %rax
000000010002b471	movq	%rax, -0x268(%rbp)
000000010002b478	movq	-0x1b8(%rbp), %rax
000000010002b47f	movq	%rax, -0x270(%rbp)
000000010002b486	movq	-0x1c8(%rbp), %rax
000000010002b48d	movq	-0x1c0(%rbp), %rcx
000000010002b494	movq	%rcx, -0x278(%rbp)
000000010002b49b	movq	%rax, -0x280(%rbp)
000000010002b4a2	leaq	-0x4d8(%rbp), %rdi
000000010002b4a9	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002b4ae	movq	-0x48(%rbp), %r8
000000010002b4b2	movq	-0xd0(%rbp), %r9
000000010002b4b9	movzbl	-0xf8(%rbp), %r10d
000000010002b4c1	movq	-0x108(%rbp), %r11
000000010002b4c8	movq	-0x130(%rbp), %r14
000000010002b4cf	movq	%rbx, -0xd8(%rbp)
000000010002b4d6	movq	-0x148(%rbp), %rbx
000000010002b4dd	jmp	0x10002abad
000000010002b4e2	leaq	0x1898e(%rip), %rdi
000000010002b4e9	leaq	0x1cfd8(%rip), %rdx
000000010002b4f0	movl	$0x2c, %esi
000000010002b4f5	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b4fa	jmp	0x10002b687
000000010002b4ff	movq	%r13, %rdi
000000010002b502	leaq	0x1cfa7(%rip), %rax
000000010002b509	movq	%rax, -0x210(%rbp)
000000010002b510	jmp	0x10002b567
000000010002b512	leaq	0x187d8(%rip), %rdi
000000010002b519	leaq	0x1cf60(%rip), %rdx
000000010002b520	movl	$0x2b, %esi
000000010002b525	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b52a	jmp	0x10002b687
000000010002b52f	leaq	0x18941(%rip), %rdi
000000010002b536	leaq	0x1cf8b(%rip), %rdx
000000010002b53d	movl	$0x2c, %esi
000000010002b542	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b547	jmp	0x10002b687
000000010002b54c	leaq	0x1ce9d(%rip), %rdx
000000010002b553	movq	%r8, %rdi
000000010002b556	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010002b55b	jmp	0x10002b687
000000010002b560	movq	%r13, %rdi
000000010002b563	movq	%r8, -0x48(%rbp)
000000010002b567	movq	-0x48(%rbp), %rsi
000000010002b56b	movq	-0x210(%rbp), %rdx
000000010002b572	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010002b577	jmp	0x10002b687
000000010002b57c	movl	$0x8, %edi
000000010002b581	movl	$0xf8, %esi
000000010002b586	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002b58b	jmp	0x10002b687
000000010002b590	leaq	0x1cf19(%rip), %rax
000000010002b597	movq	%rax, -0x150(%rbp)
000000010002b59e	jmp	0x10002b5ec
000000010002b5a0	leaq	0x1874a(%rip), %rdi
000000010002b5a7	leaq	0x1ced2(%rip), %rdx
000000010002b5ae	movl	$0x2b, %esi
000000010002b5b3	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b5b8	jmp	0x10002b687
000000010002b5bd	movl	$0x8, %edi
000000010002b5c2	movl	$0xf8, %esi
000000010002b5c7	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002b5cc	jmp	0x10002b687
000000010002b5d1	leaq	0x1ce18(%rip), %rdx
000000010002b5d8	movq	%rsi, %rdi
000000010002b5db	movq	%r15, %rsi
000000010002b5de	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010002b5e3	jmp	0x10002b687
000000010002b5e8	movq	%rsi, -0x48(%rbp)
000000010002b5ec	movq	-0x30(%rbp), %rdi
000000010002b5f0	movq	-0x48(%rbp), %rsi
000000010002b5f4	movq	-0x150(%rbp), %rdx
000000010002b5fb	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010002b600	jmp	0x10002b687
000000010002b605	leaq	0x186e5(%rip), %rdi
000000010002b60c	leaq	0x1ce3d(%rip), %rdx
000000010002b613	movl	$0x2b, %esi
000000010002b618	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b61d	jmp	0x10002b687
000000010002b61f	leaq	0x186cb(%rip), %rdi
000000010002b626	leaq	0x1ce3b(%rip), %rdx
000000010002b62d	movl	$0x2b, %esi
000000010002b632	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b637	jmp	0x10002b687
000000010002b639	leaq	0x186b1(%rip), %rdi
000000010002b640	leaq	0x1ce09(%rip), %rdx
000000010002b647	movl	$0x2b, %esi
000000010002b64c	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b651	jmp	0x10002b687
000000010002b653	leaq	0x18697(%rip), %rdi
000000010002b65a	leaq	0x1ce07(%rip), %rdx
000000010002b661	movl	$0x2b, %esi
000000010002b666	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010002b66b	jmp	0x10002b687
000000010002b66d	leaq	0x1d1d4(%rip), %rdx
000000010002b674	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010002b679	jmp	0x10002b687
000000010002b67b	leaq	0x1d1ae(%rip), %rdx
000000010002b682	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010002b687	ud2
000000010002b689	jmp	0x10002b76d
000000010002b68e	jmp	0x10002b76d
000000010002b693	jmp	0x10002b76d
000000010002b698	jmp	0x10002b76d
000000010002b69d	movq	%rax, %r13
000000010002b6a0	leaq	-0x4d8(%rbp), %rdi
000000010002b6a7	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
000000010002b6ac	jmp	0x10002b9b3
000000010002b6b1	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b6b6	jmp	0x10002b6bd
000000010002b6b8	jmp	0x10002b76d
000000010002b6bd	movq	%rax, %r13
000000010002b6c0	leaq	-0x1c8(%rbp), %rdi
000000010002b6c7	callq	__ZN4core3ptr119drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$$GT$17h449fc6b70cbbea52E ## core::ptr::drop_in_place$LT$addr2line..lazy..LazyCell$LT$core..result..Result$LT$addr2line..Lines$C$gimli..read..Error$GT$$GT$$GT$::h449fc6b70cbbea52
000000010002b6cc	jmp	0x10002b770
000000010002b6d1	movq	%rax, %r13
000000010002b6d4	leaq	-0x4d8(%rbp), %rdi
000000010002b6db	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb24d96b5772f44c0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb24d96b5772f44c0
000000010002b6e0	movq	%r15, %rdi
000000010002b6e3	movq	%rbx, %rsi
000000010002b6e6	callq	__ZN4core3ptr158drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$17hfb90c38316d4aa18E ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$u5d$$GT$$GT$::hfb90c38316d4aa18
000000010002b6eb	xorl	%ebx, %ebx
000000010002b6ed	jmp	0x10002b705
000000010002b6ef	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b6f4	movq	%rax, %r13
000000010002b6f7	leaq	-0x4d8(%rbp), %rdi
000000010002b6fe	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h12ce664ccb0e7880E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::h12ce664ccb0e7880
000000010002b703	movb	$0x1, %bl
000000010002b705	movq	-0x80(%rbp), %rdi
000000010002b709	movq	-0xa0(%rbp), %rsi
000000010002b710	callq	__ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..UnitRange$u5d$$GT$$GT$17he409253e0c3f65c4E ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$$u5b$addr2line..UnitRange$u5d$$GT$$GT$::he409253e0c3f65c4
000000010002b715	movb	$0x1, %r14b
000000010002b718	jmp	0x10002b734
000000010002b71a	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b71f	movq	%rax, %r13
000000010002b722	movq	-0x40(%rbp), %rdi
000000010002b726	movq	-0x30(%rbp), %rsi
000000010002b72a	callq	__ZN4core3ptr64drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$17haa5433b9df65ff99E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$::haa5433b9df65ff99
000000010002b72f	movb	$0x1, %bl
000000010002b731	xorl	%r14d, %r14d
000000010002b734	leaq	-0x680(%rbp), %rdi
000000010002b73b	callq	__ZN4core3ptr154drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hfe09f9d02d369e04E ## core::ptr::drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hfe09f9d02d369e04
000000010002b740	testb	%bl, %bl
000000010002b742	je	0x10002b750
000000010002b744	leaq	-0x280(%rbp), %rdi
000000010002b74b	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb24d96b5772f44c0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb24d96b5772f44c0
000000010002b750	movb	$0x1, %bl
000000010002b752	testb	%r14b, %r14b
000000010002b755	jne	0x10002ba17
000000010002b75b	movb	$0x1, %r14b
000000010002b75e	jmp	0x10002b805
000000010002b763	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b768	movq	%rax, %r13
000000010002b76b	jmp	0x10002b7b5
000000010002b76d	movq	%rax, %r13
000000010002b770	leaq	-0x680(%rbp), %rdi
000000010002b777	callq	__ZN4core3ptr137drop_in_place$LT$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$17h88c5f38d25ea6ccbE ## core::ptr::drop_in_place$LT$gimli..read..dwarf..Unit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$::h88c5f38d25ea6ccb
000000010002b77c	jmp	0x10002b9b3
000000010002b781	jmp	0x10002b7c6
000000010002b783	movq	%rax, %r13
000000010002b786	jmp	0x10002b802
000000010002b788	movq	%rax, %r13
000000010002b78b	jmp	0x10002b9a3
000000010002b790	movq	%rax, %r13
000000010002b793	leaq	-0x4d8(%rbp), %rdi
000000010002b79a	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17hbe4a353a387b4526E ## core::ptr::drop_in_place$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::hbe4a353a387b4526
000000010002b79f	jmp	0x10002b7f6
000000010002b7a1	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b7a6	movq	%rax, %r13
000000010002b7a9	leaq	-0x4d8(%rbp), %rdi
000000010002b7b0	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002b7b5	leaq	-0x6b8(%rbp), %rdi
000000010002b7bc	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h70ca90901d829ad9E ## core::ptr::drop_in_place$LT$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h70ca90901d829ad9
000000010002b7c1	jmp	0x10002ba34
000000010002b7c6	movq	%rax, %r13
000000010002b7c9	leaq	-0x620(%rbp), %rdi
000000010002b7d0	callq	__ZN4core3ptr181drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17haf53c0ce7961505bE ## core::ptr::drop_in_place$LT$core..option..Option$LT$gimli..read..line..IncompleteLineProgram$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::haf53c0ce7961505b
000000010002b7d5	jmp	0x10002b9b3
000000010002b7da	jmp	0x10002b82b
000000010002b7dc	movq	%rax, %r13
000000010002b7df	jmp	0x10002b9e6
000000010002b7e4	movq	%rax, %r13
000000010002b7e7	movq	%rbx, -0x700(%rbp)
000000010002b7ee	jmp	0x10002b91f
000000010002b7f3	movq	%rax, %r13
000000010002b7f6	leaq	-0x208(%rbp), %rdi
000000010002b7fd	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb24d96b5772f44c0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..SupUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb24d96b5772f44c0
000000010002b802	xorl	%r14d, %r14d
000000010002b805	leaq	-0x128(%rbp), %rdi
000000010002b80c	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h12ce664ccb0e7880E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::h12ce664ccb0e7880
000000010002b811	movb	$0x1, %bl
000000010002b813	testb	%r14b, %r14b
000000010002b816	je	0x10002b8f8
000000010002b81c	jmp	0x10002ba17
000000010002b821	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b826	jmp	0x10002b914
000000010002b82b	movq	%rax, %r13
000000010002b82e	jmp	0x10002b9b3
000000010002b833	movq	%rax, %r13
000000010002b836	jmp	0x10002ba17
000000010002b83b	movq	%rax, %r13
000000010002b83e	jmp	0x10002b92b
000000010002b843	movq	%rax, %r13
000000010002b846	leaq	-0x4d8(%rbp), %rdi
000000010002b84d	callq	__ZN4core3ptr159drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hcdb60ff04c7672edE ## core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hcdb60ff04c7672ed
000000010002b852	jmp	0x10002b91f
000000010002b857	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b85c	movq	%rax, %r13
000000010002b85f	leaq	-0x4d8(%rbp), %rdi
000000010002b866	callq	__ZN4core3ptr182drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$$GT$17ha9ecffcb95d69437E ## core::ptr::drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$$GT$::ha9ecffcb95d69437
000000010002b86b	jmp	0x10002b91f
000000010002b870	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b875	movq	%rax, %r13
000000010002b878	jmp	0x10002ba56
000000010002b87d	movq	%rax, %r13
000000010002b880	jmp	0x10002ba34
000000010002b885	jmp	0x10002b991
000000010002b88a	movq	%rax, %r13
000000010002b88d	leaq	-0x4d8(%rbp), %rdi
000000010002b894	callq	__ZN4core3ptr159drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hcdb60ff04c7672edE ## core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hcdb60ff04c7672ed
000000010002b899	movb	$0x1, %bl
000000010002b89b	jmp	0x10002ba17
000000010002b8a0	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b8a5	movq	%rax, %r13
000000010002b8a8	leaq	-0x4d8(%rbp), %rdi
000000010002b8af	callq	__ZN4core3ptr182drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$$GT$17ha9ecffcb95d69437E ## core::ptr::drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$$GT$::ha9ecffcb95d69437
000000010002b8b4	jmp	0x10002b982
000000010002b8b9	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b8be	movq	%rax, %r13
000000010002b8c1	nopw	%cs:(%rax,%rax)
000000010002b8cb	nopl	(%rax,%rax)
000000010002b8d0	decq	%r15
000000010002b8d3	je	0x10002b8e9
000000010002b8d5	leaq	0x218(%r14), %r12
000000010002b8dc	movq	%r14, %rdi
000000010002b8df	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
000000010002b8e4	movq	%r12, %r14
000000010002b8e7	jmp	0x10002b8d0
000000010002b8e9	movq	-0x120(%rbp), %rsi
000000010002b8f0	movq	%rbx, %rdi
000000010002b8f3	callq	__ZN4core3ptr153drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb262c9005a16cc52E ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb262c9005a16cc52
000000010002b8f8	movq	-0x40(%rbp), %rdi
000000010002b8fc	movq	-0x30(%rbp), %rsi
000000010002b900	callq	__ZN4core3ptr64drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$17haa5433b9df65ff99E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$::haa5433b9df65ff99
000000010002b905	jmp	0x10002ba09
000000010002b90a	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b90f	jmp	0x10002b9d4
000000010002b914	movq	%rax, %r13
000000010002b917	jmp	0x10002b9f6
000000010002b91c	movq	%rax, %r13
000000010002b91f	leaq	-0x680(%rbp), %rdi
000000010002b926	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002b92b	leaq	-0x7d0(%rbp), %rdi
000000010002b932	callq	__ZN4core3ptr130drop_in_place$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h44c58db3bed7332eE ## core::ptr::drop_in_place$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h44c58db3bed7332e
000000010002b937	movb	$0x1, %bl
000000010002b939	movl	$0x0, -0x110(%rbp)
000000010002b943	jmp	0x10002ba17
000000010002b948	movq	%rax, %r13
000000010002b94b	nopl	(%rax,%rax)
000000010002b950	decq	%r15
000000010002b953	je	0x10002b969
000000010002b955	leaq	0x218(%r14), %r12
000000010002b95c	movq	%r14, %rdi
000000010002b95f	callq	__ZN4core3ptr123drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h6854f308ff4e7c66E ## core::ptr::drop_in_place$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h6854f308ff4e7c66
000000010002b964	movq	%r12, %r14
000000010002b967	jmp	0x10002b950
000000010002b969	movq	-0x120(%rbp), %rsi
000000010002b970	movq	%rbx, %rdi
000000010002b973	callq	__ZN4core3ptr153drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hb262c9005a16cc52E ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hb262c9005a16cc52
000000010002b978	jmp	0x10002b9bf
000000010002b97a	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002b97f	movq	%rax, %r13
000000010002b982	movb	$0x1, %bl
000000010002b984	movb	$0x1, %al
000000010002b986	movl	%eax, -0x110(%rbp)
000000010002b98c	jmp	0x10002ba17
000000010002b991	movq	%rax, %r13
000000010002b994	movq	%r12, %rdi
000000010002b997	movq	-0xd0(%rbp), %rsi
000000010002b99e	callq	__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h89b8635dff4455ae
000000010002b9a3	movq	-0x80(%rbp), %rdi
000000010002b9a7	movq	-0x178(%rbp), %rsi
000000010002b9ae	callq	__ZN4core3ptr437drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h0b7ec5dfbeae34faE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..BufGuard$LT$addr2line..UnitRange$C$alloc..slice..stable_sort$LT$addr2line..UnitRange$C$alloc..slice..$LT$impl$u20$$u5b$addr2line..UnitRange$u5d$$GT$..sort_by_key$LT$u64$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h0b7ec5dfbeae34fa
000000010002b9b3	leaq	-0x128(%rbp), %rdi
000000010002b9ba	callq	__ZN4core3ptr146drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17h12ce664ccb0e7880E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..ResUnit$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::h12ce664ccb0e7880
000000010002b9bf	movq	-0xc0(%rbp), %rdi
000000010002b9c6	movq	-0xb8(%rbp), %rsi
000000010002b9cd	callq	__ZN4core3ptr64drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$17haa5433b9df65ff99E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$addr2line..UnitRange$GT$$GT$::haa5433b9df65ff99
000000010002b9d2	jmp	0x10002b9f6
000000010002b9d4	movq	%rax, %r13
000000010002b9d7	movq	%r12, %rdi
000000010002b9da	movq	-0xd0(%rbp), %rsi
000000010002b9e1	callq	__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h89b8635dff4455ae
000000010002b9e6	movq	-0x80(%rbp), %rdi
000000010002b9ea	movq	-0x228(%rbp), %rsi
000000010002b9f1	callq	__ZN4core3ptr1031drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h89b8635dff4455aeE ## core::ptr::drop_in_place$LT$core..slice..sort..merge_sort..RunVec$LT$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$alloc..slice..stable_sort$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$C$alloc..slice..$LT$impl$u20$$u5b$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$u5d$$GT$..sort_by_key$LT$gimli..common..DebugInfoOffset$C$addr2line..Context$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$..parse_units..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$::h89b8635dff4455ae
000000010002b9f6	movq	-0x170(%rbp), %rdi
000000010002b9fd	movq	-0x168(%rbp), %rsi
000000010002ba04	callq	__ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$17h36757e8e1ef2511bE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$::h36757e8e1ef2511b
000000010002ba09	movb	$0x1, %bl
000000010002ba0b	leaq	-0x220(%rbp), %rdi
000000010002ba12	callq	__ZN4core3ptr154drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$17hfe09f9d02d369e04E ## core::ptr::drop_in_place$LT$alloc..sync..Arc$LT$gimli..read..dwarf..Dwarf$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$$GT$::hfe09f9d02d369e04
000000010002ba17	testb	%bl, %bl
000000010002ba19	je	0x10002ba34
000000010002ba1b	movq	-0x148(%rbp), %rax
000000010002ba22	cmpb	$0x2, 0x78(%rax)
000000010002ba26	je	0x10002ba34
000000010002ba28	movq	-0x148(%rbp), %rdi
000000010002ba2f	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002ba34	cmpb	$0x0, -0x110(%rbp)
000000010002ba3b	je	0x10002ba56
000000010002ba3d	movq	-0x158(%rbp), %rax
000000010002ba44	cmpb	$0x2, 0x78(%rax)
000000010002ba48	je	0x10002ba56
000000010002ba4a	movq	-0x158(%rbp), %rdi
000000010002ba51	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002ba56	movq	-0xc8(%rbp), %rdi
000000010002ba5d	callq	__ZN4core3ptr71drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$17h963c90098c182b3aE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..macho..Object$GT$::h963c90098c182b3a
000000010002ba62	movq	%r13, %rdi
000000010002ba65	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002ba6a	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002ba6f	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002ba74	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002ba79	nopl	(%rax)
000000010002ba7c	sarl	%cl, %edi
000000010002ba7f	pushq	(%rdx)
000000010002ba81	.byte 0xd6 #bad opcode
000000010002ba82	.byte 0xff #bad opcode
000000010002ba83	pushq	0x78ffffe3(%rbp)
000000010002ba89	.byte 0xd6 #bad opcode
000000010002ba8a	.byte 0xff #bad opcode
000000010002ba8b	pushq	-0x4a00001d(%rbp)
000000010002ba91	jrcxz	0x10002ba92
000000010002ba93	pushq	0x55ffffe3(%rbp)
000000010002ba99	.byte 0xd6 #bad opcode
000000010002ba9a	.byte 0xff #bad opcode
000000010002ba9b	ljmpl	*-0x2c(%rdx)
000000010002ba9e	.byte 0xff #bad opcode
000000010002ba9f	decl	-0x1c6a0001(%rbp,%rdx,8)
000000010002baa6	.byte 0xff #bad opcode
000000010002baa7	callq	*%rbp
000000010002baa9	.byte 0xd5 #bad opcode
000000010002baaa	.byte 0xff #bad opcode
000000010002baab	callq	*-0x6a00001d(%rbp)
000000010002bab1	jrcxz	0x10002bab2
000000010002bab3	callq	*-0x5000001d(%rbp)
000000010002bab9	.byte 0xd5 #bad opcode
000000010002baba	.byte 0xff #bad opcode
000000010002babb	decl	(%rsi)
000000010002babd	fdivrp	%st, %st(7)
000000010002babf	jmpq	*0x75ffffde(%rip)
000000010002bac5	jrcxz	0x10002bac6
000000010002bac7	callq	*-0x22(%rsi)
000000010002baca	.byte 0xff #bad opcode
000000010002bacb	pushq	-0x1d(%rbp)
000000010002bace	.byte 0xff #bad opcode
000000010002bacf	pushq	-0x1d(%rbp)
000000010002bad2	.byte 0xff #bad opcode
000000010002bad3	pushq	-0x1d(%rbp)
000000010002bad6	.byte 0xff #bad opcode
000000010002bad7	.byte 0xff #bad opcode
000000010002bad8	.byte 0x3f #bad opcode
000000010002bad9	fdivrp	%st, %st(7)
000000010002badb	decl	%ebp
000000010002badd	fdivrp	%st, %st(7)
000000010002badf	.byte 0xff #bad opcode
000000010002bae0	inb	%dx, %al
000000010002bae1	fdivrp	%st, %st(7)
000000010002bae3	callq	*-0x1d(%rbp)
000000010002bae6	.byte 0xff #bad opcode
000000010002bae7	.byte 0xff #bad opcode
000000010002bae8	cmpb	%bl, %bh
000000010002baea	.byte 0xff #bad opcode
000000010002baeb	callq	*-0x1d(%rbp)
000000010002baee	.byte 0xff #bad opcode
000000010002baef	callq	*-0x1d(%rbp)
000000010002baf2	.byte 0xff #bad opcode
000000010002baf3	callq	*-0x1d(%rbp)
000000010002baf6	.byte 0xff #bad opcode
000000010002baf7	decl	(%rcx)
000000010002baf9	.byte 0xdf #bad opcode
000000010002bafa	.byte 0xff #bad opcode
000000010002bafb	decl	-0x5700001f(%rbx)
000000010002bb01	loope	0x10002bb02
000000010002bb03	pushq	-0x1400001d(%rip)
000000010002bb09	loope	0x10002bb0a
000000010002bb0b	pushq	0x35ffffe3(%rip)
000000010002bb11	jrcxz	0x10002bb12
000000010002bb13	pushq	-0x4300001d(%rip)
000000010002bb19	loope	0x10002bb1a
000000010002bb1b	decl	(%rdi)
000000010002bb1d	.byte 0x1f #bad opcode
000000010002bb1e	addb	%dl, 0x48(%rbp)
000000010002bb22	movl	%esp, %ebp
000000010002bb24	pushq	%r15
000000010002bb26	pushq	%r14
000000010002bb28	pushq	%r13
000000010002bb2a	pushq	%r12
000000010002bb2c	pushq	%rbx
000000010002bb2d	subq	$0x2a8, %rsp                    ## imm = 0x2A8
000000010002bb34	movq	%rdx, %r14
000000010002bb37	movq	%rdi, -0x98(%rbp)
000000010002bb3e	leaq	0x1(%rdx), %r13
000000010002bb42	movq	0x158(%rsi), %rbx
000000010002bb49	movq	0x160(%rsi), %rax
000000010002bb50	xorl	%r15d, %r15d
000000010002bb53	testq	%rax, %rax
000000010002bb56	je	0x10002bbb5
000000010002bb58	movl	$0xff, %edx
000000010002bb5d	movq	%rax, %rcx
000000010002bb60	movq	%rax, %rdi
000000010002bb63	jmp	0x10002bb78
000000010002bb65	nopw	%cs:(%rax,%rax)
000000010002bb6f	nop
000000010002bb70	movq	%rcx, %rdi
000000010002bb73	subq	%r15, %rcx
000000010002bb76	jbe	0x10002bbb5
000000010002bb78	shrq	%rcx
000000010002bb7b	addq	%r15, %rcx
000000010002bb7e	movq	%rcx, %r9
000000010002bb81	shlq	$0x5, %r9
000000010002bb85	xorl	%r8d, %r8d
000000010002bb88	cmpq	%r13, (%rbx,%r9)
000000010002bb8c	setne	%r8b
000000010002bb90	cmovbl	%edx, %r8d
000000010002bb94	cmpb	$0x1, %r8b
000000010002bb98	je	0x10002bb70
000000010002bb9a	movzbl	%r8b, %r8d
000000010002bb9e	incq	%rcx
000000010002bba1	movq	%rcx, %r15
000000010002bba4	cmpl	$0xff, %r8d
000000010002bbab	jne	0x10002bbb5
000000010002bbad	movq	%rdi, %rcx
000000010002bbb0	subq	%r15, %rcx
000000010002bbb3	ja	0x10002bb78
000000010002bbb5	cmpq	%rax, %r15
000000010002bbb8	ja	0x10002c030
000000010002bbbe	leaq	0x150(%rsi), %rdx
000000010002bbc5	shlq	$0x5, %r15
000000010002bbc9	leaq	(%rbx,%r15), %rcx
000000010002bbcd	nopl	(%rax)
000000010002bbd0	testq	%r15, %r15
000000010002bbd3	je	0x10002bd22
000000010002bbd9	movq	%rcx, %rax
000000010002bbdc	cmpq	%r14, -0x8(%rcx)
000000010002bbe0	jbe	0x10002bd22
000000010002bbe6	leaq	-0x20(%rax), %rcx
000000010002bbea	addq	$-0x20, %r15
000000010002bbee	cmpq	%r14, -0x18(%rax)
000000010002bbf2	jbe	0x10002bbd0
000000010002bbf4	cmpq	-0x20(%rax), %r13
000000010002bbf8	jbe	0x10002bbd0
000000010002bbfa	movq	0x10(%rbx,%r15), %rdi
000000010002bbff	movq	0x170(%rsi), %rax
000000010002bc06	cmpq	%rax, %rdi
000000010002bc09	jae	0x10002c021
000000010002bc0f	addq	%rbx, %r15
000000010002bc12	imulq	$0x218, %rdi, %r12              ## imm = 0x218
000000010002bc19	addq	0x168(%rsi), %r12
000000010002bc20	leaq	-0x168(%rbp), %rdi
000000010002bc27	movq	%r12, %rsi
000000010002bc2a	movq	%rdx, -0x30(%rbp)
000000010002bc2e	callq	__ZN9addr2line16ResUnit$LT$R$GT$18dwarf_and_unit_dwo17h56824fa67f4616cbE ## addr2line::ResUnit$LT$R$GT$::dwarf_and_unit_dwo::h56824fa67f4616cb
000000010002bc33	movq	-0x30(%rbp), %r9
000000010002bc37	movq	%r12, -0x278(%rbp)
000000010002bc3e	movq	%r14, -0x268(%rbp)
000000010002bc45	movq	%r9, -0x270(%rbp)
000000010002bc4c	cmpq	$0x0, -0x138(%rbp)
000000010002bc54	je	0x10002bd54
000000010002bc5a	leaq	-0x138(%rbp), %rax
000000010002bc61	movq	-0x140(%rbp), %rcx
000000010002bc68	movq	%rcx, -0x1f8(%rbp)
000000010002bc6f	movq	-0x148(%rbp), %rcx
000000010002bc76	movq	%rcx, -0x200(%rbp)
000000010002bc7d	movq	-0x150(%rbp), %rcx
000000010002bc84	movq	%rcx, -0x208(%rbp)
000000010002bc8b	movq	-0x158(%rbp), %rcx
000000010002bc92	movq	%rcx, -0x210(%rbp)
000000010002bc99	movq	-0x168(%rbp), %rcx
000000010002bca0	movq	-0x160(%rbp), %rdx
000000010002bca7	movq	%rdx, -0x218(%rbp)
000000010002bcae	movq	%rcx, -0x220(%rbp)
000000010002bcb5	movq	0x10(%rax), %rcx
000000010002bcb9	movq	%rcx, -0x80(%rbp)
000000010002bcbd	movq	(%rax), %rdx
000000010002bcc0	movq	0x8(%rax), %rax
000000010002bcc4	movq	%rax, -0x88(%rbp)
000000010002bccb	movq	%rdx, -0x90(%rbp)
000000010002bcd2	movq	-0x278(%rbp), %rsi
000000010002bcd9	movq	-0x270(%rbp), %rdi
000000010002bce0	movq	%rsi, -0x78(%rbp)
000000010002bce4	movq	%rdi, -0x70(%rbp)
000000010002bce8	movq	-0x268(%rbp), %r8
000000010002bcef	movq	%r8, -0x68(%rbp)
000000010002bcf3	movq	%r8, -0x1c8(%rbp)
000000010002bcfa	movq	%rdi, -0x1d0(%rbp)
000000010002bd01	movq	%rsi, -0x1d8(%rbp)
000000010002bd08	movq	%rcx, -0x1e0(%rbp)
000000010002bd0f	movq	%rax, -0x1e8(%rbp)
000000010002bd16	movq	%rdx, -0x1f0(%rbp)
000000010002bd1d	jmp	0x10002bdaf
000000010002bd22	movl	$0x3, -0x168(%rbp)
000000010002bd2c	leaq	-0x168(%rbp), %rsi
000000010002bd33	movl	$0xb, %ecx
000000010002bd38	movq	-0x98(%rbp), %rdi
000000010002bd3f	rep		movsq	(%rsi), %es:(%rdi)
000000010002bd42	addq	$0x2a8, %rsp                    ## imm = 0x2A8
000000010002bd49	popq	%rbx
000000010002bd4a	popq	%r12
000000010002bd4c	popq	%r13
000000010002bd4e	popq	%r14
000000010002bd50	popq	%r15
000000010002bd52	popq	%rbp
000000010002bd53	retq
000000010002bd54	movq	-0x150(%rbp), %rax
000000010002bd5b	movq	%rax, -0x78(%rbp)
000000010002bd5f	movq	-0x158(%rbp), %rax
000000010002bd66	movq	%rax, -0x80(%rbp)
000000010002bd6a	movq	-0x168(%rbp), %rax
000000010002bd71	movq	-0x160(%rbp), %rcx
000000010002bd78	movq	%rcx, -0x88(%rbp)
000000010002bd7f	movq	%rax, -0x90(%rbp)
000000010002bd86	leaq	-0x220(%rbp), %rdi
000000010002bd8d	leaq	-0x278(%rbp), %rsi
000000010002bd94	leaq	-0x90(%rbp), %rdx
000000010002bd9b	callq	__ZN9addr2line16ResUnit$LT$R$GT$25find_function_or_location28_$u7b$$u7b$closure$u7d$$u7d$17heaf045e62a829c56E ## addr2line::ResUnit$LT$R$GT$::find_function_or_location::_$u7b$$u7b$closure$u7d$$u7d$::heaf045e62a829c56
000000010002bda0	movq	-0x30(%rbp), %r9
000000010002bda4	movq	$0x0, -0x1f0(%rbp)
000000010002bdaf	movq	%r14, -0x90(%rbp)
000000010002bdb6	movq	%r12, -0x88(%rbp)
000000010002bdbd	movq	%r9, -0x80(%rbp)
000000010002bdc1	movq	%r9, -0x78(%rbp)
000000010002bdc5	movq	%r14, -0x70(%rbp)
000000010002bdc9	movq	%r13, -0x68(%rbp)
000000010002bdcd	movq	%rbx, -0x60(%rbp)
000000010002bdd1	movq	%r15, -0x58(%rbp)
000000010002bdd5	movq	%r13, -0x50(%rbp)
000000010002bdd9	movq	%r14, -0x48(%rbp)
000000010002bddd	movb	$0x0, -0x40(%rbp)
000000010002bde1	leaq	-0x168(%rbp), %rdi
000000010002bde8	leaq	-0x220(%rbp), %rsi
000000010002bdef	leaq	-0x90(%rbp), %rdx
000000010002bdf6	callq	__ZN9addr2line30LoopingLookup$LT$T$C$L$C$F$GT$10new_lookup17h884047d3ff663732E ## addr2line::LoopingLookup$LT$T$C$L$C$F$GT$::new_lookup::h884047d3ff663732
000000010002bdfb	cmpb	$0x2, -0xb8(%rbp)
000000010002be02	je	0x10002bd2c
000000010002be08	leaq	-0x120(%rbp), %r14
000000010002be0f	leaq	-0x220(%rbp), %r12
000000010002be16	leaq	-0x278(%rbp), %rbx
000000010002be1d	nopl	(%rax)
000000010002be20	movq	-0x140(%rbp), %rax
000000010002be27	movq	%rax, -0x1f8(%rbp)
000000010002be2e	movq	-0x148(%rbp), %rax
000000010002be35	movq	%rax, -0x200(%rbp)
000000010002be3c	movq	-0x150(%rbp), %rax
000000010002be43	movq	%rax, -0x208(%rbp)
000000010002be4a	movq	-0x158(%rbp), %rax
000000010002be51	movq	%rax, -0x210(%rbp)
000000010002be58	movq	-0x168(%rbp), %rax
000000010002be5f	movq	-0x160(%rbp), %rcx
000000010002be66	movq	%rcx, -0x218(%rbp)
000000010002be6d	movq	%rax, -0x220(%rbp)
000000010002be74	movq	-0x138(%rbp), %r15
000000010002be7b	movq	-0x128(%rbp), %r13
000000010002be82	movq	(%r14), %rax
000000010002be85	movq	0x8(%r14), %rcx
000000010002be89	movq	%rax, -0xb0(%rbp)
000000010002be90	movq	%rcx, -0xa8(%rbp)
000000010002be97	movq	0x10(%r14), %rax
000000010002be9b	movq	%rax, -0xa0(%rbp)
000000010002bea2	movl	$0xb, %ecx
000000010002bea7	leaq	-0x2d0(%rbp), %rdi
000000010002beae	leaq	-0x108(%rbp), %rsi
000000010002beb5	rep		movsq	(%rsi), %es:(%rdi)
000000010002beb8	movq	-0x220(%rbp), %rax
000000010002bebf	lock
000000010002bec0	decq	(%rax)
000000010002bec3	jne	0x10002becd
000000010002bec5	movq	%r12, %rdi
000000010002bec8	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5e3bd44ddc1c2e93E ## alloc::sync::Arc$LT$T$GT$::drop_slow::h5e3bd44ddc1c2e93
000000010002becd	movzbl	0x200(%r15), %eax
000000010002bed5	cmpl	$0x4b, %eax
000000010002bed8	je	0x10002bf00
000000010002beda	cmpl	$0x4c, %eax
000000010002bedd	jne	0x10002bf30
000000010002bedf	movb	$0x4b, 0x200(%r15)
000000010002bee7	movq	$0x0, 0x208(%r15)
000000010002bef2	jmp	0x10002bf20
000000010002bef4	nopw	%cs:(%rax,%rax)
000000010002befe	nop
000000010002bf00	movq	0x208(%r15), %rdx
000000010002bf07	testq	%rdx, %rdx
000000010002bf0a	je	0x10002bf20
000000010002bf0c	movq	(%rdx), %rax
000000010002bf0f	addq	$0x10, %rax
000000010002bf13	addq	$0x8, %rdx
000000010002bf17	movb	$0x2, %cl
000000010002bf19	movq	%rdx, %r15
000000010002bf1c	jmp	0x10002bf2a
000000010002bf1e	nop
000000010002bf20	movq	(%r13), %rax
000000010002bf24	addq	$0x10, %rax
000000010002bf28	xorl	%ecx, %ecx
000000010002bf2a	xorl	%edx, %edx
000000010002bf2c	jmp	0x10002bf5e
000000010002bf2e	nop
000000010002bf30	movq	0x200(%r15), %rax
000000010002bf37	movzbl	0x208(%r15), %ecx
000000010002bf3f	movl	0x20c(%r15), %edx
000000010002bf46	movl	%edx, -0x8d(%rbp)
000000010002bf4c	movl	0x209(%r15), %edx
000000010002bf53	movl	%edx, -0x90(%rbp)
000000010002bf59	movl	$0x1, %edx
000000010002bf5e	movl	-0x90(%rbp), %esi
000000010002bf64	movl	-0x8d(%rbp), %edi
000000010002bf6a	leaq	-0x20f(%rbp), %r8
000000010002bf71	movl	%edi, 0x3(%r8)
000000010002bf75	movl	%esi, (%r8)
000000010002bf78	movq	-0xa0(%rbp), %rsi
000000010002bf7f	movq	%rsi, -0x268(%rbp)
000000010002bf86	movq	-0xb0(%rbp), %rsi
000000010002bf8d	movq	-0xa8(%rbp), %rdi
000000010002bf94	movq	%rdi, -0x270(%rbp)
000000010002bf9b	movq	%rsi, -0x278(%rbp)
000000010002bfa2	movq	%rdx, -0x220(%rbp)
000000010002bfa9	movq	%rax, -0x218(%rbp)
000000010002bfb0	movb	%cl, -0x210(%rbp)
000000010002bfb6	movq	%r15, -0x208(%rbp)
000000010002bfbd	leaq	-0x90(%rbp), %rdi
000000010002bfc4	movq	%rbx, %rsi
000000010002bfc7	movq	%r12, %rdx
000000010002bfca	callq	__ZN9addr2line16ResUnit$LT$R$GT$25find_function_or_location28_$u7b$$u7b$closure$u7d$$u7d$17heaf045e62a829c56E ## addr2line::ResUnit$LT$R$GT$::find_function_or_location::_$u7b$$u7b$closure$u7d$$u7d$::heaf045e62a829c56
000000010002bfcf	movq	$0x0, -0x60(%rbp)
000000010002bfd7	movl	$0xb, %ecx
000000010002bfdc	movq	%rbx, %rdi
000000010002bfdf	leaq	-0x2d0(%rbp), %rsi
000000010002bfe6	rep		movsq	(%rsi), %es:(%rdi)
000000010002bfe9	movq	%r12, %rdi
000000010002bfec	leaq	-0x90(%rbp), %rsi
000000010002bff3	movq	%rbx, %rdx
000000010002bff6	callq	__ZN9addr2line30LoopingLookup$LT$T$C$L$C$F$GT$10new_lookup17h884047d3ff663732E ## addr2line::LoopingLookup$LT$T$C$L$C$F$GT$::new_lookup::h884047d3ff663732
000000010002bffb	movl	$0xb8, %edx
000000010002c000	leaq	-0x168(%rbp), %rdi
000000010002c007	movq	%r12, %rsi
000000010002c00a	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002c00f	cmpb	$0x2, -0xb8(%rbp)
000000010002c016	jne	0x10002be20
000000010002c01c	jmp	0x10002bd2c
000000010002c021	leaq	0x1c850(%rip), %rdx
000000010002c028	movq	%rax, %rsi
000000010002c02b	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010002c030	leaq	0x1c829(%rip), %rdx
000000010002c037	movq	%r15, %rdi
000000010002c03a	movq	%rax, %rsi
000000010002c03d	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010002c042	movq	%rax, %rbx
000000010002c045	cmpb	$0x2, -0xb8(%rbp)
000000010002c04c	jne	0x10002c05a
000000010002c04e	leaq	-0x168(%rbp), %rdi
000000010002c055	callq	__ZN4core3ptr174drop_in_place$LT$core..result..Result$LT$addr2line..FrameIter$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$17h25617f43e283586bE ## core::ptr::drop_in_place$LT$core..result..Result$LT$addr2line..FrameIter$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$C$gimli..read..Error$GT$$GT$::h25617f43e283586b
000000010002c05a	movq	%rbx, %rdi
000000010002c05d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002c062	nopw	%cs:(%rax,%rax)
000000010002c06c	nopl	(%rax)
__ZN3std12backtrace_rs9symbolize5gimli4mmap17h83f4fe4b849a5103E:
000000010002c070	pushq	%rbp
000000010002c071	movq	%rsp, %rbp
000000010002c074	pushq	%r15
000000010002c076	pushq	%r14
000000010002c078	pushq	%r12
000000010002c07a	pushq	%rbx
000000010002c07b	subq	$0x1c0, %rsp                    ## imm = 0x1C0
000000010002c082	movq	%rdx, %r14
000000010002c085	movq	%rdi, %rbx
000000010002c088	movl	$0x0, -0x2a(%rbp)
000000010002c08f	movw	$0x0, -0x26(%rbp)
000000010002c095	movl	$0x0, -0x30(%rbp)
000000010002c09c	movw	$0x1b6, -0x2c(%rbp)             ## imm = 0x1B6
000000010002c0a2	movb	$0x1, -0x2a(%rbp)
000000010002c0a6	cmpq	$0x17f, %rdx                    ## imm = 0x17F
000000010002c0ad	ja	0x10002c17b
000000010002c0b3	leaq	-0x1e0(%rbp), %r15
000000010002c0ba	movq	%r15, %rdi
000000010002c0bd	movq	%r14, %rdx
000000010002c0c0	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002c0c5	movb	$0x0, -0x1e0(%rbp,%r14)
000000010002c0ce	incq	%r14
000000010002c0d1	leaq	-0x58(%rbp), %rdi
000000010002c0d5	movq	%r15, %rsi
000000010002c0d8	movq	%r14, %rdx
000000010002c0db	callq	__ZN4core3ffi5c_str4CStr19from_bytes_with_nul17hb2e722b352771ae9E ## core::ffi::c_str::CStr::from_bytes_with_nul::hb2e722b352771ae9
000000010002c0e0	cmpq	$0x0, -0x58(%rbp)
000000010002c0e5	je	0x10002c104
000000010002c0e7	leaq	0x1cdb2(%rip), %rax
000000010002c0ee	movq	%rax, -0x38(%rbp)
000000010002c0f2	movl	$0x1, -0x40(%rbp)
000000010002c0f9	cmpl	$0x0, -0x40(%rbp)
000000010002c0fd	jne	0x10002c11b
000000010002c0ff	jmp	0x10002c191
000000010002c104	movq	-0x50(%rbp), %rsi
000000010002c108	leaq	-0x40(%rbp), %rdi
000000010002c10c	leaq	-0x30(%rbp), %rdx
000000010002c110	callq	__ZN3std3sys4unix2fs4File6open_c17h432d442dbe199fc7E ## std::sys::unix::fs::File::open_c::h432d442dbe199fc7
000000010002c115	cmpl	$0x0, -0x40(%rbp)
000000010002c119	je	0x10002c191
000000010002c11b	movq	-0x38(%rbp), %rax
000000010002c11f	movl	%eax, %ecx
000000010002c121	andl	$0x3, %ecx
000000010002c124	leaq	-0x2(%rcx), %rdx
000000010002c128	cmpq	$0x2, %rdx
000000010002c12c	jb	0x10002c16f
000000010002c12e	testq	%rcx, %rcx
000000010002c131	je	0x10002c16f
000000010002c133	leaq	-0x1(%rax), %r14
000000010002c137	movq	-0x1(%rax), %r15
000000010002c13b	movq	0x7(%rax), %r12
000000010002c13f	movq	%r15, %rdi
000000010002c142	callq	*(%r12)
000000010002c146	movq	0x8(%r12), %rsi
000000010002c14b	testq	%rsi, %rsi
000000010002c14e	je	0x10002c15d
000000010002c150	movq	0x10(%r12), %rdx
000000010002c155	movq	%r15, %rdi
000000010002c158	callq	___rust_dealloc
000000010002c15d	movl	$0x18, %esi
000000010002c162	movl	$0x8, %edx
000000010002c167	movq	%r14, %rdi
000000010002c16a	callq	___rust_dealloc
000000010002c16f	movq	$0x0, (%rbx)
000000010002c176	jmp	0x10002c23c
000000010002c17b	leaq	-0x40(%rbp), %rdi
000000010002c17f	leaq	-0x30(%rbp), %rcx
000000010002c183	movq	%r14, %rdx
000000010002c186	callq	__ZN3std3sys6common14small_c_string24run_with_cstr_allocating17hf049530f66713f2bE ## std::sys::common::small_c_string::run_with_cstr_allocating::hf049530f66713f2b
000000010002c18b	cmpl	$0x0, -0x40(%rbp)
000000010002c18f	jne	0x10002c11b
000000010002c191	movl	-0x3c(%rbp), %r14d
000000010002c195	xorps	%xmm0, %xmm0
000000010002c198	movaps	%xmm0, -0x160(%rbp)
000000010002c19f	movaps	%xmm0, -0x170(%rbp)
000000010002c1a6	movaps	%xmm0, -0x180(%rbp)
000000010002c1ad	movaps	%xmm0, -0x190(%rbp)
000000010002c1b4	movaps	%xmm0, -0x1a0(%rbp)
000000010002c1bb	movaps	%xmm0, -0x1b0(%rbp)
000000010002c1c2	movaps	%xmm0, -0x1c0(%rbp)
000000010002c1c9	movaps	%xmm0, -0x1d0(%rbp)
000000010002c1d0	movaps	%xmm0, -0x1e0(%rbp)
000000010002c1d7	leaq	-0x1e0(%rbp), %rsi
000000010002c1de	movl	%r14d, %edi
000000010002c1e1	callq	0x1000427a8                     ## symbol stub for: _fstat$INODE64
000000010002c1e6	cmpl	$-0x1, %eax
000000010002c1e9	je	0x10002c228
000000010002c1eb	movq	-0x180(%rbp), %r15
000000010002c1f2	xorl	%r12d, %r12d
000000010002c1f5	xorl	%edi, %edi
000000010002c1f7	movq	%r15, %rsi
000000010002c1fa	movl	$0x1, %edx
000000010002c1ff	movl	$0x2, %ecx
000000010002c204	movl	%r14d, %r8d
000000010002c207	xorl	%r9d, %r9d
000000010002c20a	callq	0x1000427d2                     ## symbol stub for: _mmap
000000010002c20f	cmpq	$-0x1, %rax
000000010002c213	je	0x10002c223
000000010002c215	movq	%rax, 0x8(%rbx)
000000010002c219	movq	%r15, 0x10(%rbx)
000000010002c21d	movl	$0x1, %r12d
000000010002c223	movq	%r12, (%rbx)
000000010002c226	jmp	0x10002c234
000000010002c228	callq	0x10004274e                     ## symbol stub for: ___error
000000010002c22d	movq	$0x0, (%rbx)
000000010002c234	movl	%r14d, %edi
000000010002c237	callq	0x100042778                     ## symbol stub for: _close$NOCANCEL
000000010002c23c	addq	$0x1c0, %rsp                    ## imm = 0x1C0
000000010002c243	popq	%rbx
000000010002c244	popq	%r12
000000010002c246	popq	%r14
000000010002c248	popq	%r15
000000010002c24a	popq	%rbp
000000010002c24b	retq
000000010002c24c	movq	%rax, %rbx
000000010002c24f	movq	%r15, %rdi
000000010002c252	movq	%r12, %rsi
000000010002c255	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002c25a	movq	%r14, %rdi
000000010002c25d	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002c262	movq	%rbx, %rdi
000000010002c265	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002c26a	nopw	(%rax,%rax)
__ZN3std12backtrace_rs9symbolize5gimli7resolve17h1bbe3a809d060985E:
000000010002c270	pushq	%rbp
000000010002c271	movq	%rsp, %rbp
000000010002c274	pushq	%r15
000000010002c276	pushq	%r14
000000010002c278	pushq	%r13
000000010002c27a	pushq	%r12
000000010002c27c	pushq	%rbx
000000010002c27d	subq	$0x1000, %rsp                   ## imm = 0x1000
000000010002c284	movq	$0x0, (%rsp)
000000010002c28c	subq	$0x7e8, %rsp                    ## imm = 0x7E8
000000010002c293	movq	%rdx, -0xb0(%rbp)
000000010002c29a	movq	%rsi, -0xa0(%rbp)
000000010002c2a1	movq	0x8(%rdi), %rax
000000010002c2a5	cmpq	$0x0, (%rdi)
000000010002c2a9	jne	0x10002c2b3
000000010002c2ab	movq	%rax, %rdi
000000010002c2ae	callq	0x100042712                     ## symbol stub for: __Unwind_GetIP
000000010002c2b3	leaq	-0x1(%rax), %rcx
000000010002c2b7	testq	%rax, %rax
000000010002c2ba	cmoveq	%rax, %rcx
000000010002c2be	movq	%rcx, -0x68(%rbp)
000000010002c2c2	movq	__ZN3std12backtrace_rs9symbolize5gimli5Cache11with_global14MAPPINGS_CACHE17hb19181543a373ec3E(%rip), %rax ## std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE::hb19181543a373ec3
000000010002c2c9	testq	%rax, %rax
000000010002c2cc	je	0x10002c2e3
000000010002c2ce	movq	0x1ff53(%rip), %rsi
000000010002c2d5	testq	%rsi, %rsi
000000010002c2d8	jne	0x10002ca5f
000000010002c2de	jmp	0x10002d3b8
000000010002c2e3	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002c2ea	movzbl	(%rax), %eax
000000010002c2ed	movl	$0x940, %edi                    ## imm = 0x940
000000010002c2f2	movl	$0x8, %esi
000000010002c2f7	callq	___rust_alloc
000000010002c2fc	testq	%rax, %rax
000000010002c2ff	je	0x10002ee3d
000000010002c305	movq	%rax, -0x3e0(%rbp)
000000010002c30c	movq	$0x4, -0x3d8(%rbp)
000000010002c317	movq	$0x0, -0x3d0(%rbp)
000000010002c322	movq	$0x8, -0x11f0(%rbp)
000000010002c32d	movq	$0x0, -0x11e8(%rbp)
000000010002c338	movq	$0x0, -0x11e0(%rbp)
000000010002c343	callq	0x100042766                     ## symbol stub for: __dyld_image_count
000000010002c348	movl	%eax, -0x60(%rbp)
000000010002c34b	testl	%eax, %eax
000000010002c34d	je	0x10002c8c1
000000010002c353	xorl	%r15d, %r15d
000000010002c356	jmp	0x10002c371
000000010002c358	nopl	(%rax,%rax)
000000010002c360	movq	%rsi, -0x11e0(%rbp)
000000010002c367	cmpl	-0x60(%rbp), %r15d
000000010002c36b	je	0x10002c8c1
000000010002c371	movl	%r15d, %edi
000000010002c374	callq	0x10004275a                     ## symbol stub for: __dyld_get_image_name
000000010002c379	testq	%rax, %rax
000000010002c37c	je	0x10002c700
000000010002c382	movq	%rax, -0x58(%rbp)
000000010002c386	movq	%rax, %rdi
000000010002c389	callq	__ZN4core3ffi5c_str4CStr8from_ptr9strlen_rt17h8fdb3db5c71cd065E ## core::ffi::c_str::CStr::from_ptr::strlen_rt::h8fdb3db5c71cd065
000000010002c38e	movq	%rax, %rbx
000000010002c391	movl	%r15d, %edi
000000010002c394	callq	0x100042754                     ## symbol stub for: __dyld_get_image_header
000000010002c399	testq	%rax, %rax
000000010002c39c	je	0x10002c700
000000010002c3a2	movl	(%rax), %ecx
000000010002c3a4	cmpl	$0xfeedfacf, %ecx               ## imm = 0xFEEDFACF
000000010002c3aa	je	0x10002c3d2
000000010002c3ac	cmpl	$0xfeedface, %ecx               ## imm = 0xFEEDFACE
000000010002c3b2	jne	0x10002c700
000000010002c3b8	movl	0x10(%rax), %r13d
000000010002c3bc	movl	0x14(%rax), %ecx
000000010002c3bf	leaq	0x1c(%rcx), %rsi
000000010002c3c3	movl	$0x1c, %edx
000000010002c3c8	movq	%rax, %rdi
000000010002c3cb	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002c3d0	jmp	0x10002c3ea
000000010002c3d2	movl	0x10(%rax), %r13d
000000010002c3d6	movl	0x14(%rax), %ecx
000000010002c3d9	leaq	0x20(%rcx), %rsi
000000010002c3dd	movl	$0x20, %edx
000000010002c3e2	movq	%rax, %rdi
000000010002c3e5	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002c3ea	movq	%rax, %r12
000000010002c3ed	testq	%rax, %rax
000000010002c3f0	je	0x10002c700
000000010002c3f6	movq	%rdx, %r14
000000010002c3f9	movq	%rbx, -0x198(%rbp)
000000010002c400	movq	$0x8, -0xbd0(%rbp)
000000010002c40b	leaq	-0xbc8(%rbp), %rax
000000010002c412	movq	$0x0, 0x8(%rax)
000000010002c41a	movq	$0x0, (%rax)
000000010002c421	testl	%r13d, %r13d
000000010002c424	je	0x10002ee23
000000010002c42a	movl	$0x8, %edi
000000010002c42f	xorl	%esi, %esi
000000010002c431	xorl	%eax, %eax
000000010002c433	movq	%rax, -0x70(%rbp)
000000010002c437	movl	$0x0, -0x50(%rbp)
000000010002c43e	movq	%r15, -0x40(%rbp)
000000010002c442	jmp	0x10002c491
000000010002c444	nopw	%cs:(%rax,%rax)
000000010002c44e	nop
000000010002c450	movq	-0x40(%rbp), %r15
000000010002c454	movl	-0x30(%rbp), %r13d
000000010002c458	movdqa	-0x90(%rbp), %xmm0
000000010002c460	punpckldq	0x177e8(%rip), %xmm0    ## xmm0 = xmm0[0],mem[0],xmm0[1],mem[1]
000000010002c468	movq	-0xbd0(%rbp), %rdi
000000010002c46f	movq	%rsi, %rax
000000010002c472	shlq	$0x4, %rax
000000010002c476	movdqu	%xmm0, (%rdi,%rax)
000000010002c47b	incq	%rsi
000000010002c47e	movq	%rsi, -0xbc0(%rbp)
000000010002c485	addq	%rbx, %r12
000000010002c488	decl	%r13d
000000010002c48b	je	0x10002c7e9
000000010002c491	cmpq	$0x8, %r14
000000010002c495	jb	0x10002c6db
000000010002c49b	movl	0x4(%r12), %ebx
000000010002c4a0	cmpq	$0x8, %rbx
000000010002c4a4	jb	0x10002c6db
000000010002c4aa	movq	%r14, %rax
000000010002c4ad	movl	$0x0, %r14d
000000010002c4b3	subq	%rbx, %rax
000000010002c4b6	cmovaeq	%rax, %r14
000000010002c4ba	jb	0x10002c6db
000000010002c4c0	movl	(%r12), %eax
000000010002c4c4	cmpl	$0x19, %eax
000000010002c4c7	je	0x10002c580
000000010002c4cd	cmpl	$0x1, %eax
000000010002c4d0	jne	0x10002c485
000000010002c4d2	cmpl	$0x38, %ebx
000000010002c4d5	jb	0x10002c6db
000000010002c4db	movl	%r13d, -0x30(%rbp)
000000010002c4df	movq	%rsi, %r13
000000010002c4e2	leaq	0x8(%r12), %r15
000000010002c4e7	movl	$0x10, %edx
000000010002c4ec	xorl	%edi, %edi
000000010002c4ee	movq	%r15, %rsi
000000010002c4f1	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
000000010002c4f6	testq	%rax, %rax
000000010002c4f9	movq	%r13, %rsi
000000010002c4fc	je	0x10002c540
000000010002c4fe	cmpq	$0x11, %rdx
000000010002c502	jae	0x10002ee0a
000000010002c508	cmpq	$0x6, %rdx
000000010002c50c	jne	0x10002c540
000000010002c50e	movl	(%r15), %eax
000000010002c511	movzwl	0x4(%r15), %ecx
000000010002c516	shlq	$0x20, %rcx
000000010002c51a	orq	%rax, %rcx
000000010002c51d	movabsq	$0x545845545f5f, %rax           ## imm = 0x545845545F5F
000000010002c527	cmpq	%rax, %rcx
000000010002c52a	jne	0x10002c540
000000010002c52c	cmpl	$0x0, 0x20(%r12)
000000010002c532	je	0x10002c69f
000000010002c538	movq	%rsi, -0x70(%rbp)
000000010002c53c	nopl	(%rax)
000000010002c540	movq	0x18(%r12), %xmm0               ## xmm0 = mem[0],zero
000000010002c547	movdqa	%xmm0, -0x90(%rbp)
000000010002c54f	cmpq	-0xbc8(%rbp), %rsi
000000010002c556	jne	0x10002c450
000000010002c55c	leaq	-0xbd0(%rbp), %rdi
000000010002c563	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h14d9ad67ad8f2594E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h14d9ad67ad8f2594
000000010002c568	movq	-0xbc0(%rbp), %rsi
000000010002c56f	jmp	0x10002c450
000000010002c574	nopw	%cs:(%rax,%rax)
000000010002c57e	nop
000000010002c580	cmpl	$0x48, %ebx
000000010002c583	jb	0x10002c6db
000000010002c589	movq	%rdi, -0x90(%rbp)
000000010002c590	movl	%r13d, -0x30(%rbp)
000000010002c594	movq	%rsi, %r13
000000010002c597	leaq	0x8(%r12), %r15
000000010002c59c	movl	$0x10, %edx
000000010002c5a1	xorl	%edi, %edi
000000010002c5a3	movq	%r15, %rsi
000000010002c5a6	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
000000010002c5ab	testq	%rax, %rax
000000010002c5ae	movq	%r13, %rsi
000000010002c5b1	je	0x10002c629
000000010002c5b3	cmpq	$0x10, %rdx
000000010002c5b7	ja	0x10002ee0a
000000010002c5bd	cmpq	$0x6, %rdx
000000010002c5c1	jne	0x10002c64a
000000010002c5c7	movl	(%r15), %eax
000000010002c5ca	movzwl	0x4(%r15), %ecx
000000010002c5cf	shlq	$0x20, %rcx
000000010002c5d3	orq	%rax, %rcx
000000010002c5d6	movabsq	$0x545845545f5f, %rax           ## imm = 0x545845545F5F
000000010002c5e0	cmpq	%rax, %rcx
000000010002c5e3	movq	-0x90(%rbp), %rdi
000000010002c5ea	jne	0x10002c651
000000010002c5ec	cmpq	$0x0, 0x28(%r12)
000000010002c5f2	jne	0x10002c60b
000000010002c5f4	cmpq	$0x0, 0x30(%r12)
000000010002c5fa	movl	-0x50(%rbp), %ecx
000000010002c5fd	movzbl	%cl, %ecx
000000010002c600	movl	$0x1, %eax
000000010002c605	cmovnel	%eax, %ecx
000000010002c608	movl	%ecx, -0x50(%rbp)
000000010002c60b	movq	%rsi, -0x70(%rbp)
000000010002c60f	movdqu	0x18(%r12), %xmm0
000000010002c616	movdqa	%xmm0, -0x90(%rbp)
000000010002c61e	cmpq	-0xbc8(%rbp), %rsi
000000010002c625	je	0x10002c669
000000010002c627	jmp	0x10002c683
000000010002c629	movq	-0x90(%rbp), %rdi
000000010002c630	movdqu	0x18(%r12), %xmm0
000000010002c637	movdqa	%xmm0, -0x90(%rbp)
000000010002c63f	cmpq	-0xbc8(%rbp), %rsi
000000010002c646	je	0x10002c669
000000010002c648	jmp	0x10002c683
000000010002c64a	movq	-0x90(%rbp), %rdi
000000010002c651	movdqu	0x18(%r12), %xmm0
000000010002c658	movdqa	%xmm0, -0x90(%rbp)
000000010002c660	cmpq	-0xbc8(%rbp), %rsi
000000010002c667	jne	0x10002c683
000000010002c669	leaq	-0xbd0(%rbp), %rdi
000000010002c670	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h14d9ad67ad8f2594E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h14d9ad67ad8f2594
000000010002c675	movq	-0xbd0(%rbp), %rdi
000000010002c67c	movq	-0xbc0(%rbp), %rsi
000000010002c683	movq	-0x40(%rbp), %r15
000000010002c687	movl	-0x30(%rbp), %r13d
000000010002c68b	movq	%rsi, %rax
000000010002c68e	shlq	$0x4, %rax
000000010002c692	movdqa	-0x90(%rbp), %xmm0
000000010002c69a	jmp	0x10002c476
000000010002c69f	cmpl	$0x0, 0x24(%r12)
000000010002c6a5	movl	-0x50(%rbp), %ecx
000000010002c6a8	movzbl	%cl, %ecx
000000010002c6ab	movl	$0x1, %eax
000000010002c6b0	cmovnel	%eax, %ecx
000000010002c6b3	movl	%ecx, -0x50(%rbp)
000000010002c6b6	movq	%rsi, -0x70(%rbp)
000000010002c6ba	movq	0x18(%r12), %xmm0               ## xmm0 = mem[0],zero
000000010002c6c1	movdqa	%xmm0, -0x90(%rbp)
000000010002c6c9	cmpq	-0xbc8(%rbp), %rsi
000000010002c6d0	je	0x10002c55c
000000010002c6d6	jmp	0x10002c450
000000010002c6db	movq	-0xbc8(%rbp), %rsi
000000010002c6e2	testq	%rsi, %rsi
000000010002c6e5	je	0x10002c700
000000010002c6e7	movq	-0xbd0(%rbp), %rdi
000000010002c6ee	shlq	$0x4, %rsi
000000010002c6f2	movl	$0x8, %edx
000000010002c6f7	callq	___rust_dealloc
000000010002c6fc	nopl	(%rax)
000000010002c700	xorl	%ebx, %ebx
000000010002c702	movq	-0x1600(%rbp), %rax
000000010002c709	leaq	-0xbc8(%rbp), %rdx
000000010002c710	movq	%rax, 0x20(%rdx)
000000010002c714	movq	-0x1610(%rbp), %rax
000000010002c71b	movq	-0x1608(%rbp), %rcx
000000010002c722	movq	%rcx, 0x18(%rdx)
000000010002c726	movq	%rax, 0x10(%rdx)
000000010002c72a	movq	%rbx, -0xbd0(%rbp)
000000010002c731	movq	-0x48(%rbp), %rax
000000010002c735	movq	%rax, -0xbc8(%rbp)
000000010002c73c	movq	-0x38(%rbp), %rax
000000010002c740	movq	%rax, -0xbc0(%rbp)
000000010002c747	movq	-0x78(%rbp), %rax
000000010002c74b	movq	%rax, -0xba0(%rbp)
000000010002c752	xorl	%edx, %edx
000000010002c754	testq	%rbx, %rbx
000000010002c757	setne	%dl
000000010002c75a	movq	-0x11e8(%rbp), %rax
000000010002c761	movq	-0x11e0(%rbp), %rsi
000000010002c768	subq	%rsi, %rax
000000010002c76b	cmpq	%rdx, %rax
000000010002c76e	jae	0x10002c783
000000010002c770	leaq	-0x11f0(%rbp), %rdi
000000010002c777	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hc82b8f84544cd222E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::hc82b8f84544cd222
000000010002c77c	movq	-0x11e0(%rbp), %rsi
000000010002c783	incl	%r15d
000000010002c786	testq	%rbx, %rbx
000000010002c789	je	0x10002c360
000000010002c78f	movq	-0xbb8(%rbp), %rax
000000010002c796	movq	-0xbb0(%rbp), %rcx
000000010002c79d	movq	-0x11f0(%rbp), %rdx
000000010002c7a4	imulq	$0x38, %rsi, %rdi
000000010002c7a8	movq	%rbx, (%rdx,%rdi)
000000010002c7ac	movq	-0x48(%rbp), %r8
000000010002c7b0	movq	%r8, 0x8(%rdx,%rdi)
000000010002c7b5	movq	-0x38(%rbp), %r8
000000010002c7b9	movq	%r8, 0x10(%rdx,%rdi)
000000010002c7be	movq	%rax, 0x18(%rdx,%rdi)
000000010002c7c3	movq	%rcx, 0x20(%rdx,%rdi)
000000010002c7c8	leaq	-0xbc8(%rbp), %rcx
000000010002c7cf	movq	0x20(%rcx), %rax
000000010002c7d3	movq	0x28(%rcx), %rcx
000000010002c7d7	movq	%rax, 0x28(%rdx,%rdi)
000000010002c7dc	movq	%rcx, 0x30(%rdx,%rdi)
000000010002c7e1	incq	%rsi
000000010002c7e4	jmp	0x10002c360
000000010002c7e9	movq	%rsi, %r14
000000010002c7ec	movl	%r15d, %edi
000000010002c7ef	callq	0x100042760                     ## symbol stub for: __dyld_get_image_vmaddr_slide
000000010002c7f4	movq	%rax, -0x78(%rbp)
000000010002c7f8	testb	$0x1, -0x50(%rbp)
000000010002c7fc	movq	-0x198(%rbp), %rbx
000000010002c803	jne	0x10002c841
000000010002c805	movq	%r14, %rsi
000000010002c808	movq	-0x70(%rbp), %rdi
000000010002c80c	cmpq	%r14, %rdi
000000010002c80f	jae	0x10002ee2f
000000010002c815	movq	-0xbd0(%rbp), %rax
000000010002c81c	shlq	$0x4, %rdi
000000010002c820	movq	(%rax,%rdi), %rcx
000000010002c824	shlq	$0x4, %rsi
000000010002c828	xorl	%edx, %edx
000000010002c82a	nopw	(%rax,%rax)
000000010002c830	subq	%rcx, (%rax,%rdx)
000000010002c834	addq	$0x10, %rdx
000000010002c838	cmpq	%rdx, %rsi
000000010002c83b	jne	0x10002c830
000000010002c83d	addq	%rcx, -0x78(%rbp)
000000010002c841	testq	%rbx, %rbx
000000010002c844	je	0x10002c873
000000010002c846	js	0x10002ee4c
000000010002c84c	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002c853	movzbl	(%rax), %eax
000000010002c856	movl	$0x1, %esi
000000010002c85b	movq	%rbx, %rdi
000000010002c85e	callq	___rust_alloc
000000010002c863	movq	%rbx, %r14
000000010002c866	movq	%rax, %rbx
000000010002c869	testq	%rax, %rax
000000010002c86c	jne	0x10002c87b
000000010002c86e	jmp	0x10002ee53
000000010002c873	movq	%rbx, %r14
000000010002c876	movl	$0x1, %ebx
000000010002c87b	movq	%rbx, %rdi
000000010002c87e	movq	-0x58(%rbp), %rsi
000000010002c882	movq	%r14, %rdx
000000010002c885	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002c88a	movq	-0xbd0(%rbp), %rax
000000010002c891	movq	-0xbc8(%rbp), %rcx
000000010002c898	movq	%rax, -0x1610(%rbp)
000000010002c89f	movq	%rcx, -0x1608(%rbp)
000000010002c8a6	movq	-0xbc0(%rbp), %rax
000000010002c8ad	movq	%rax, -0x1600(%rbp)
000000010002c8b4	movq	%r14, -0x38(%rbp)
000000010002c8b8	movq	%r14, -0x48(%rbp)
000000010002c8bc	jmp	0x10002c702
000000010002c8c1	movq	-0x11e0(%rbp), %rax
000000010002c8c8	movq	%rax, -0xbc0(%rbp)
000000010002c8cf	movq	-0x11f0(%rbp), %rcx
000000010002c8d6	movq	-0x11e8(%rbp), %rdx
000000010002c8dd	movq	%rdx, -0xbc8(%rbp)
000000010002c8e4	movq	-0x3d0(%rbp), %rsi
000000010002c8eb	movq	-0x3e0(%rbp), %rdi
000000010002c8f2	movq	-0x3d8(%rbp), %r8
000000010002c8f9	movq	%rcx, -0x1610(%rbp)
000000010002c900	movq	%rdx, -0x1608(%rbp)
000000010002c907	movq	%rax, -0x1600(%rbp)
000000010002c90e	movq	%rdi, -0x15f8(%rbp)
000000010002c915	movq	%r8, -0x15f0(%rbp)
000000010002c91c	movq	%rsi, -0x15e8(%rbp)
000000010002c923	movq	__ZN3std12backtrace_rs9symbolize5gimli5Cache11with_global14MAPPINGS_CACHE17hb19181543a373ec3E(%rip), %rbx ## std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE::hb19181543a373ec3
000000010002c92a	testq	%rbx, %rbx
000000010002c92d	je	0x10002c9fb
000000010002c933	movq	0x1f8ee(%rip), %r14
000000010002c93a	testq	%r14, %r14
000000010002c93d	je	0x10002c98c
000000010002c93f	leaq	0x20(%rbx), %r15
000000010002c943	jmp	0x10002c959
000000010002c945	nopw	%cs:(%rax,%rax)
000000010002c94f	nop
000000010002c950	addq	$0x38, %r15
000000010002c954	decq	%r14
000000010002c957	je	0x10002c98c
000000010002c959	movq	-0x18(%r15), %rsi
000000010002c95d	testq	%rsi, %rsi
000000010002c960	je	0x10002c970
000000010002c962	movq	-0x20(%r15), %rdi
000000010002c966	movl	$0x1, %edx
000000010002c96b	callq	___rust_dealloc
000000010002c970	movq	(%r15), %rsi
000000010002c973	testq	%rsi, %rsi
000000010002c976	je	0x10002c950
000000010002c978	movq	-0x8(%r15), %rdi
000000010002c97c	shlq	$0x4, %rsi
000000010002c980	movl	$0x8, %edx
000000010002c985	callq	___rust_dealloc
000000010002c98a	jmp	0x10002c950
000000010002c98c	movq	0x1f88d(%rip), %rax
000000010002c993	testq	%rax, %rax
000000010002c996	je	0x10002c9a9
000000010002c998	imulq	$0x38, %rax, %rsi
000000010002c99c	movl	$0x8, %edx
000000010002c9a1	movq	%rbx, %rdi
000000010002c9a4	callq	___rust_dealloc
000000010002c9a9	movq	0x1f880(%rip), %rbx
000000010002c9b0	movq	0x1f889(%rip), %r15
000000010002c9b7	incq	%r15
000000010002c9ba	movq	%rbx, %r14
000000010002c9bd	nopl	(%rax)
000000010002c9c0	cmpq	$0x1, %r15
000000010002c9c4	je	0x10002c9db
000000010002c9c6	leaq	0x8(%r14), %rdi
000000010002c9ca	addq	$0x250, %r14                    ## imm = 0x250
000000010002c9d1	decq	%r15
000000010002c9d4	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002c9d9	jmp	0x10002c9c0
000000010002c9db	movq	0x1f856(%rip), %rax
000000010002c9e2	testq	%rax, %rax
000000010002c9e5	je	0x10002c9fb
000000010002c9e7	imulq	$0x250, %rax, %rsi              ## imm = 0x250
000000010002c9ee	movl	$0x8, %edx
000000010002c9f3	movq	%rbx, %rdi
000000010002c9f6	callq	___rust_dealloc
000000010002c9fb	movq	-0x15e8(%rbp), %rax
000000010002ca02	movq	%rax, 0x1f837(%rip)
000000010002ca09	movq	-0x15f0(%rbp), %rax
000000010002ca10	movq	%rax, 0x1f821(%rip)
000000010002ca17	movq	-0x15f8(%rbp), %rax
000000010002ca1e	movq	%rax, 0x1f80b(%rip)
000000010002ca25	movq	-0x1600(%rbp), %rax
000000010002ca2c	movq	%rax, 0x1f7f5(%rip)
000000010002ca33	movq	-0x1610(%rbp), %rax
000000010002ca3a	movq	-0x1608(%rbp), %rcx
000000010002ca41	movq	%rcx, 0x1f7d8(%rip)
000000010002ca48	movq	%rax, __ZN3std12backtrace_rs9symbolize5gimli5Cache11with_global14MAPPINGS_CACHE17hb19181543a373ec3E(%rip) ## std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE::hb19181543a373ec3
000000010002ca4f	movq	0x1f7d2(%rip), %rsi
000000010002ca56	testq	%rsi, %rsi
000000010002ca59	je	0x10002d3b8
000000010002ca5f	imulq	$0x38, %rsi, %rcx
000000010002ca63	addq	%rax, %rcx
000000010002ca66	xorl	%edi, %edi
000000010002ca68	movq	%rax, %rdx
000000010002ca6b	movq	0x18(%rdx), %r8
000000010002ca6f	movq	0x28(%rdx), %r11
000000010002ca73	movq	0x30(%rdx), %r15
000000010002ca77	addq	$0x38, %rdx
000000010002ca7b	shlq	$0x4, %r11
000000010002ca7f	nop
000000010002ca80	testq	%r11, %r11
000000010002ca83	je	0x10002cab0
000000010002ca85	movq	%r8, %r9
000000010002ca88	addq	$0x10, %r8
000000010002ca8c	movq	(%r9), %r10
000000010002ca8f	addq	%r15, %r10
000000010002ca92	addq	$-0x10, %r11
000000010002ca96	cmpq	-0x68(%rbp), %r10
000000010002ca9a	ja	0x10002ca80
000000010002ca9c	addq	0x8(%r9), %r10
000000010002caa0	cmpq	-0x68(%rbp), %r10
000000010002caa4	jbe	0x10002ca80
000000010002caa6	jmp	0x10002cabd
000000010002caa8	nopl	(%rax,%rax)
000000010002cab0	incq	%rdi
000000010002cab3	cmpq	%rcx, %rdx
000000010002cab6	jne	0x10002ca6b
000000010002cab8	jmp	0x10002d3b8
000000010002cabd	movq	0x1f77c(%rip), %r12
000000010002cac4	testq	%r12, %r12
000000010002cac7	je	0x10002caf9
000000010002cac9	movq	0x1f760(%rip), %r14
000000010002cad0	imulq	$0x250, %r12, %rbx              ## imm = 0x250
000000010002cad7	xorl	%ecx, %ecx
000000010002cad9	xorl	%r13d, %r13d
000000010002cadc	nopl	(%rax)
000000010002cae0	cmpq	%rdi, (%r14,%r13)
000000010002cae4	je	0x10002cd76
000000010002caea	addq	$0x250, %r13                    ## imm = 0x250
000000010002caf1	decq	%rcx
000000010002caf4	cmpq	%r13, %rbx
000000010002caf7	jne	0x10002cae0
000000010002caf9	cmpq	%rdi, %rsi
000000010002cafc	jbe	0x10002df18
000000010002cb02	movq	%rdi, -0x38(%rbp)
000000010002cb06	imulq	$0x38, %rdi, %rcx
000000010002cb0a	movq	(%rax,%rcx), %rbx
000000010002cb0e	movq	0x10(%rax,%rcx), %r13
000000010002cb13	leaq	-0xbd0(%rbp), %rdi
000000010002cb1a	movq	%rbx, %rsi
000000010002cb1d	movq	%r13, %rdx
000000010002cb20	callq	__ZN3std12backtrace_rs9symbolize5gimli4mmap17h83f4fe4b849a5103E ## std::backtrace_rs::symbolize::gimli::mmap::h83f4fe4b849a5103
000000010002cb25	cmpq	$0x0, -0xbd0(%rbp)
000000010002cb2d	je	0x10002d3b8
000000010002cb33	movq	-0xbc8(%rbp), %rsi
000000010002cb3a	movq	-0xbc0(%rbp), %r14
000000010002cb41	leaq	-0xbd0(%rbp), %rdi
000000010002cb48	movq	%rsi, -0x48(%rbp)
000000010002cb4c	movq	%r14, %rdx
000000010002cb4f	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho11find_header17hde1fc8840a0a82e4E ## std::backtrace_rs::symbolize::gimli::macho::find_header::hde1fc8840a0a82e4
000000010002cb54	movq	-0xbd0(%rbp), %rax
000000010002cb5b	testq	%rax, %rax
000000010002cb5e	je	0x10002cd65
000000010002cb64	cmpl	$0xcffaedfe, (%rax)             ## imm = 0xCFFAEDFE
000000010002cb6a	je	0x10002cd65
000000010002cb70	movq	-0xbc8(%rbp), %rdi
000000010002cb77	movq	-0xbc0(%rbp), %rsi
000000010002cb7e	movl	0x10(%rax), %r12d
000000010002cb82	movl	0x14(%rax), %ecx
000000010002cb85	movl	$0x20, %edx
000000010002cb8a	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002cb8f	testq	%rax, %rax
000000010002cb92	je	0x10002cd65
000000010002cb98	xorl	%esi, %esi
000000010002cb9a	movl	$0xffffffff, %r8d               ## imm = 0xFFFFFFFF
000000010002cba0	testq	%r12, %r12
000000010002cba3	je	0x10002cc45
000000010002cba9	cmpq	$0x8, %rdx
000000010002cbad	jb	0x10002cd65
000000010002cbb3	movq	%rax, %rcx
000000010002cbb6	movl	0x4(%rax), %edi
000000010002cbb9	cmpq	$0x8, %rdi
000000010002cbbd	jb	0x10002cd65
000000010002cbc3	subq	%rdi, %rdx
000000010002cbc6	jb	0x10002cd65
000000010002cbcc	cmovbq	%rsi, %rdx
000000010002cbd0	leaq	(%rcx,%rdi), %rax
000000010002cbd4	addl	%r8d, %r12d
000000010002cbd7	cmpl	$0x1b, (%rcx)
000000010002cbda	jne	0x10002cba0
000000010002cbdc	cmpl	$0x18, %edi
000000010002cbdf	jb	0x10002cba0
000000010002cbe1	testq	%r13, %r13
000000010002cbe4	je	0x10002cbed
000000010002cbe6	movb	$0x1, %al
000000010002cbe8	cmpb	$0x2f, (%rbx)
000000010002cbeb	je	0x10002cbef
000000010002cbed	xorl	%eax, %eax
000000010002cbef	movq	0x8(%rcx), %rdx
000000010002cbf3	movq	%rdx, -0x78(%rbp)
000000010002cbf7	movq	0x10(%rcx), %rcx
000000010002cbfb	movq	%rcx, -0x40(%rbp)
000000010002cbff	movq	%rbx, -0xbd0(%rbp)
000000010002cc06	movq	%r13, -0xbc8(%rbp)
000000010002cc0d	movb	$0x6, -0xbc0(%rbp)
000000010002cc14	movb	%al, -0xb96(%rbp)
000000010002cc1a	movw	$0x200, -0xb98(%rbp)            ## imm = 0x200
000000010002cc23	leaq	-0x1610(%rbp), %rdi
000000010002cc2a	leaq	-0xbd0(%rbp), %rsi
000000010002cc31	callq	__ZN95_$LT$std..path..Components$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h64c8de283fb64b1aE ## _$LT$std..path..Components$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$::next_back::h64c8de283fb64b1a
000000010002cc36	movzbl	-0x1610(%rbp), %eax
000000010002cc3d	cmpb	$0xa, %al
000000010002cc3f	jne	0x10002d3d2
000000010002cc45	movq	$0x8, -0xdd0(%rbp)
000000010002cc50	movq	$0x0, -0xdc8(%rbp)
000000010002cc5b	movq	$0x0, -0xdc0(%rbp)
000000010002cc66	movq	$0x8, -0xdb8(%rbp)
000000010002cc71	movq	$0x0, -0xdb0(%rbp)
000000010002cc7c	movq	$0x0, -0xda8(%rbp)
000000010002cc87	leaq	-0x1610(%rbp), %rdi
000000010002cc8e	movq	-0x48(%rbp), %r13
000000010002cc92	movq	%r13, %rsi
000000010002cc95	movq	%r14, %rdx
000000010002cc98	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho11find_header17hde1fc8840a0a82e4E ## std::backtrace_rs::symbolize::gimli::macho::find_header::hde1fc8840a0a82e4
000000010002cc9d	movq	-0x1610(%rbp), %rsi
000000010002cca4	testq	%rsi, %rsi
000000010002cca7	je	0x10002cd54
000000010002ccad	cmpl	$0xcffaedfe, (%rsi)             ## imm = 0xCFFAEDFE
000000010002ccb3	je	0x10002cd54
000000010002ccb9	movq	-0x1608(%rbp), %rdx
000000010002ccc0	movq	-0x1600(%rbp), %rcx
000000010002ccc7	leaq	-0x1610(%rbp), %rdi
000000010002ccce	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object5parse17h07452ac8e8c16fe9E ## std::backtrace_rs::symbolize::gimli::macho::Object::parse::h07452ac8e8c16fe9
000000010002ccd3	movzbl	-0x1598(%rbp), %eax
000000010002ccda	cmpb	$0x2, %al
000000010002ccdc	je	0x10002cd54
000000010002ccde	leaq	-0x3e0(%rbp), %rdx
000000010002cce5	leaq	-0x1610(%rbp), %rsi
000000010002ccec	movl	$0xf, %ecx
000000010002ccf1	movq	%rdx, %rdi
000000010002ccf4	rep		movsq	(%rsi), %es:(%rdi)
000000010002ccf7	movl	-0x1597(%rbp), %ecx
000000010002ccfd	movl	-0x1594(%rbp), %esi
000000010002cd03	movl	%esi, -0x364(%rbp)
000000010002cd09	movl	%ecx, -0x367(%rbp)
000000010002cd0f	movb	%al, -0x368(%rbp)
000000010002cd15	movb	$0x2, -0x1178(%rbp)
000000010002cd1c	movb	$0x2, -0x1598(%rbp)
000000010002cd23	leaq	-0xbd0(%rbp), %rdi
000000010002cd2a	leaq	-0xdd0(%rbp), %rsi
000000010002cd31	leaq	-0x11f0(%rbp), %rcx
000000010002cd38	leaq	-0x1610(%rbp), %r8
000000010002cd3f	callq	__ZN3std12backtrace_rs9symbolize5gimli7Context3new17h15762e565e18f324E ## std::backtrace_rs::symbolize::gimli::Context::new::h15762e565e18f324
000000010002cd44	movzbl	-0x9d0(%rbp), %ebx
000000010002cd4b	cmpb	$0x2, %bl
000000010002cd4e	jne	0x10002d4ab
000000010002cd54	leaq	-0xdd0(%rbp), %rdi
000000010002cd5b	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
000000010002cd60	movq	%r13, %rdi
000000010002cd63	jmp	0x10002cd69
000000010002cd65	movq	-0x48(%rbp), %rdi
000000010002cd69	movq	%r14, %rsi
000000010002cd6c	callq	0x1000427de                     ## symbol stub for: _munmap
000000010002cd71	jmp	0x10002d3b8
000000010002cd76	testq	%rcx, %rcx
000000010002cd79	je	0x10002ce1f
000000010002cd7f	movq	%r14, -0x48(%rbp)
000000010002cd83	leaq	(%r14,%r13), %rsi
000000010002cd87	movq	%rsi, -0x38(%rbp)
000000010002cd8b	leaq	-0xbd0(%rbp), %rdi
000000010002cd92	movl	$0x250, %edx                    ## imm = 0x250
000000010002cd97	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002cd9c	movq	-0x48(%rbp), %rax
000000010002cda0	leaq	0x250(%rax,%r13), %rsi
000000010002cda8	subq	%r13, %rbx
000000010002cdab	addq	$-0x250, %rbx                   ## imm = 0xFDB0
000000010002cdb2	movq	-0x38(%rbp), %rdi
000000010002cdb6	movq	%rbx, %rdx
000000010002cdb9	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010002cdbe	leaq	-0x1(%r12), %rbx
000000010002cdc3	movq	%rbx, 0x1f476(%rip)
000000010002cdca	cmpq	0x1f467(%rip), %rbx
000000010002cdd1	jne	0x10002cde9
000000010002cdd3	leaq	0x1f456(%rip), %rdi
000000010002cdda	movq	%rbx, %rsi
000000010002cddd	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h70c95565943a02e4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h70c95565943a02e4
000000010002cde2	movq	0x1f447(%rip), %r14
000000010002cde9	testq	%rbx, %rbx
000000010002cdec	je	0x10002ce04
000000010002cdee	leaq	0x250(%r14), %rdi
000000010002cdf5	imulq	$0x250, %rbx, %rdx              ## imm = 0x250
000000010002cdfc	movq	%r14, %rsi
000000010002cdff	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010002ce04	leaq	-0xbd0(%rbp), %rsi
000000010002ce0b	movl	$0x250, %edx                    ## imm = 0x250
000000010002ce10	movq	%r14, %rdi
000000010002ce13	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002ce18	movq	%r12, 0x1f421(%rip)
000000010002ce1f	movq	-0x68(%rbp), %rdx
000000010002ce23	subq	%r15, %rdx
000000010002ce26	leaq	0x48(%r14), %rsi
000000010002ce2a	leaq	-0x1610(%rbp), %rdi
000000010002ce31	movq	%rdx, -0x68(%rbp)
000000010002ce35	callq	__ZN3std12backtrace_rs9symbolize5gimli7Context11find_frames17h5cb6ce84a45bf07fE ## std::backtrace_rs::symbolize::gimli::Context::find_frames::h5cb6ce84a45bf07f
000000010002ce3a	cmpl	$0x5, -0x1610(%rbp)
000000010002ce41	movq	%r14, -0x48(%rbp)
000000010002ce45	jne	0x10002ce4f
000000010002ce47	xorl	%r12d, %r12d
000000010002ce4a	jmp	0x10002d058
000000010002ce4f	leaq	-0xbd0(%rbp), %rdi
000000010002ce56	leaq	-0x1610(%rbp), %rsi
000000010002ce5d	movl	$0xb, %ecx
000000010002ce62	rep		movsq	(%rsi), %es:(%rdi)
000000010002ce65	movb	$0x1, %bl
000000010002ce67	leaq	-0x798(%rbp), %r13
000000010002ce6e	xorl	%r15d, %r15d
000000010002ce71	leaq	-0x11f0(%rbp), %r14
000000010002ce78	movl	$0xff, %r12d
000000010002ce7e	nop
000000010002ce80	movq	%r14, %rdi
000000010002ce83	leaq	-0xbd0(%rbp), %rsi
000000010002ce8a	callq	__ZN9addr2line18FrameIter$LT$R$GT$4next17h4ac2d1180244da85E ## addr2line::FrameIter$LT$R$GT$::next::h4ac2d1180244da85
000000010002ce8f	cmpl	$0x2, -0x11f0(%rbp)
000000010002ce96	jae	0x10002d019
000000010002ce9c	movq	-0x11c8(%rbp), %rax
000000010002cea3	movq	%rax, -0x780(%rbp)
000000010002ceaa	movq	-0x11d0(%rbp), %rax
000000010002ceb1	movq	%rax, -0x788(%rbp)
000000010002ceb8	movq	-0x11d8(%rbp), %rax
000000010002cebf	movq	%rax, -0x790(%rbp)
000000010002cec6	movq	-0x11e0(%rbp), %rax
000000010002cecd	movq	%rax, -0x798(%rbp)
000000010002ced4	movq	-0x11f0(%rbp), %rax
000000010002cedb	movq	-0x11e8(%rbp), %rcx
000000010002cee2	movq	%rcx, -0x7a0(%rbp)
000000010002cee9	movq	%rax, -0x7a8(%rbp)
000000010002cef0	cmpw	$0x2, -0x11b0(%rbp)
000000010002cef8	jne	0x10002cfa0
000000010002cefe	movq	-0x48(%rbp), %rax
000000010002cf02	movq	0x1f0(%rax), %rcx
000000010002cf09	testq	%rcx, %rcx
000000010002cf0c	je	0x10002cfb0
000000010002cf12	movq	0x1e0(%rax), %rax
000000010002cf19	movq	%rcx, %rdx
000000010002cf1c	xorl	%edi, %edi
000000010002cf1e	movq	%rcx, %rsi
000000010002cf21	jmp	0x10002cf38
000000010002cf23	nopw	%cs:(%rax,%rax)
000000010002cf2d	nopl	(%rax)
000000010002cf30	movq	%rdx, %rsi
000000010002cf33	subq	%rdi, %rdx
000000010002cf36	jbe	0x10002cf76
000000010002cf38	shrq	%rdx
000000010002cf3b	addq	%rdi, %rdx
000000010002cf3e	leaq	(%rdx,%rdx,2), %r9
000000010002cf42	xorl	%r8d, %r8d
000000010002cf45	movq	-0x68(%rbp), %r10
000000010002cf49	cmpq	%r10, 0x10(%rax,%r9,8)
000000010002cf4e	setne	%r8b
000000010002cf52	cmovbl	%r12d, %r8d
000000010002cf56	cmpb	$0x1, %r8b
000000010002cf5a	je	0x10002cf30
000000010002cf5c	movzbl	%r8b, %edi
000000010002cf60	cmpl	$0xff, %edi
000000010002cf66	jne	0x10002cf7f
000000010002cf68	incq	%rdx
000000010002cf6b	movq	%rdx, %rdi
000000010002cf6e	movq	%rsi, %rdx
000000010002cf71	subq	%rdi, %rdx
000000010002cf74	ja	0x10002cf38
000000010002cf76	subq	$0x1, %rdi
000000010002cf7a	movq	%rdi, %rdx
000000010002cf7d	jb	0x10002cfb0
000000010002cf7f	cmpq	%rcx, %rdx
000000010002cf82	jae	0x10002cfb0
000000010002cf84	leaq	(%rdx,%rdx,2), %rdx
000000010002cf88	movq	(%rax,%rdx,8), %rcx
000000010002cf8c	movq	0x8(%rax,%rdx,8), %rax
000000010002cf91	jmp	0x10002cfb2
000000010002cf93	nopw	%cs:(%rax,%rax)
000000010002cf9d	nopl	(%rax)
000000010002cfa0	movq	-0x11c0(%rbp), %rcx
000000010002cfa7	movq	-0x11b8(%rbp), %rax
000000010002cfae	jmp	0x10002cfb2
000000010002cfb0	xorl	%ecx, %ecx
000000010002cfb2	movq	0x18(%r13), %rdx
000000010002cfb6	movq	%rdx, -0x3c8(%rbp)
000000010002cfbd	movq	0x10(%r13), %rdx
000000010002cfc1	movq	%rdx, -0x3d0(%rbp)
000000010002cfc8	movq	(%r13), %rdx
000000010002cfcc	movq	0x8(%r13), %rsi
000000010002cfd0	movq	%rsi, -0x3d8(%rbp)
000000010002cfd7	movq	%rdx, -0x3e0(%rbp)
000000010002cfde	movq	-0x68(%rbp), %rdx
000000010002cfe2	movq	%rdx, -0x3c0(%rbp)
000000010002cfe9	movq	%rcx, -0x3b8(%rbp)
000000010002cff0	movq	%rax, -0x3b0(%rbp)
000000010002cff7	movq	-0xa0(%rbp), %rdi
000000010002cffe	leaq	-0x3e0(%rbp), %rsi
000000010002d005	movq	-0xb0(%rbp), %rax
000000010002d00c	callq	*0x20(%rax)
000000010002d00f	movb	$0x1, %r15b
000000010002d012	xorl	%ebx, %ebx
000000010002d014	jmp	0x10002ce80
000000010002d019	movl	-0xbd0(%rbp), %eax
000000010002d01f	addl	$-0x3, %eax
000000010002d022	cmpl	$0x2, %eax
000000010002d025	jb	0x10002d048
000000010002d027	movq	-0xb90(%rbp), %rsi
000000010002d02e	testq	%rsi, %rsi
000000010002d031	je	0x10002d048
000000010002d033	movq	-0xb98(%rbp), %rdi
000000010002d03a	shlq	$0x3, %rsi
000000010002d03e	movl	$0x8, %edx
000000010002d043	callq	___rust_dealloc
000000010002d048	testb	$0x1, %bl
000000010002d04b	movq	-0x48(%rbp), %r14
000000010002d04f	movq	%r15, %r12
000000010002d052	je	0x10002d3b8
000000010002d058	leaq	0x218(%r14), %rbx
000000010002d05f	movq	0x218(%r14), %rax
000000010002d066	testq	%rax, %rax
000000010002d069	cmoveq	%rax, %rbx
000000010002d06d	je	0x10002d2dc
000000010002d073	movq	%rbx, %rdi
000000010002d076	movq	-0x68(%rbp), %rsi
000000010002d07a	callq	__ZN6object4read9ObjectMap3get17hdfc610515bc613c5E ## object::read::ObjectMap::get::hdfc610515bc613c5
000000010002d07f	testq	%rax, %rax
000000010002d082	je	0x10002d2dc
000000010002d088	movq	0x20(%rax), %rdx
000000010002d08c	movq	-0x48(%rbp), %rcx
000000010002d090	cmpq	0x200(%rcx), %rdx
000000010002d097	jae	0x10002d3ca
000000010002d09d	movq	0x1f8(%rcx), %r13
000000010002d0a4	testq	%r13, %r13
000000010002d0a7	je	0x10002d2dc
000000010002d0ad	imulq	$0x248, %rdx, %rcx              ## imm = 0x248
000000010002d0b4	leaq	(%r13,%rcx), %r15
000000010002d0b9	movzbl	0x240(%r13,%rcx), %r14d
000000010002d0c2	cmpb	$0x3, %r14b
000000010002d0c6	jne	0x10002e77b
000000010002d0cc	cmpq	0x28(%rbx), %rdx
000000010002d0d0	jae	0x10002d2dc
000000010002d0d6	movq	%rcx, -0x60(%rbp)
000000010002d0da	movq	%r13, -0x90(%rbp)
000000010002d0e1	movq	0x18(%rbx), %rcx
000000010002d0e5	shlq	$0x4, %rdx
000000010002d0e9	movq	(%rcx,%rdx), %rbx
000000010002d0ed	movq	0x8(%rcx,%rdx), %rcx
000000010002d0f2	movq	%rcx, %r13
000000010002d0f5	subq	$0x1, %rcx
000000010002d0f9	movq	%rax, -0x78(%rbp)
000000010002d0fd	jae	0x10002d480
000000010002d103	leaq	-0xbd0(%rbp), %rdi
000000010002d10a	movq	%rbx, %rsi
000000010002d10d	movq	%r13, %rdx
000000010002d110	callq	__ZN3std12backtrace_rs9symbolize5gimli4mmap17h83f4fe4b849a5103E ## std::backtrace_rs::symbolize::gimli::mmap::h83f4fe4b849a5103
000000010002d115	cmpq	$0x0, -0xbd0(%rbp)
000000010002d11d	je	0x10002e649
000000010002d123	xorl	%r13d, %r13d
000000010002d126	movq	-0xbc8(%rbp), %rdi
000000010002d12d	movq	-0xbc0(%rbp), %rcx
000000010002d134	movq	$0x8, -0x1810(%rbp)
000000010002d13f	movq	$0x0, -0x1808(%rbp)
000000010002d14a	movq	$0x0, -0x1800(%rbp)
000000010002d155	movq	$0x8, -0x17f8(%rbp)
000000010002d160	movq	$0x0, -0x17f0(%rbp)
000000010002d16b	movq	$0x0, -0x17e8(%rbp)
000000010002d176	movq	%rcx, %rdx
000000010002d179	movq	%rdi, %rsi
000000010002d17c	testq	%r13, %r13
000000010002d17f	movq	%rcx, -0x38(%rbp)
000000010002d183	movq	%rdi, -0x30(%rbp)
000000010002d187	je	0x10002e3d1
000000010002d18d	movq	%rcx, %rsi
000000010002d190	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$3len17h9994a16358db56f3E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::len::h9994a16358db56f3
000000010002d195	testq	%rax, %rax
000000010002d198	jne	0x10002e630
000000010002d19e	movq	%rdx, %rbx
000000010002d1a1	movl	$0x8, %ecx
000000010002d1a6	movq	-0x30(%rbp), %rdi
000000010002d1aa	movq	-0x38(%rbp), %rsi
000000010002d1ae	xorl	%edx, %edx
000000010002d1b0	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002d1b5	testq	%rax, %rax
000000010002d1b8	je	0x10002e630
000000010002d1be	movq	$0x8, -0x560(%rbp)
000000010002d1c9	cmpq	$0x8, %rdx
000000010002d1cd	jne	0x10002e630
000000010002d1d3	movq	(%rax), %rax
000000010002d1d6	movabsq	$0xa3e686372613c21, %rcx        ## imm = 0xA3E686372613C21
000000010002d1e0	cmpq	%rcx, %rax
000000010002d1e3	je	0x10002df24
000000010002d1e9	movabsq	$0xa3e66616769623c, %rcx        ## imm = 0xA3E66616769623C
000000010002d1f3	cmpq	%rcx, %rax
000000010002d1f6	jne	0x10002e630
000000010002d1fc	movl	$0x80, %ecx
000000010002d201	movq	-0x30(%rbp), %rdi
000000010002d205	movq	-0x38(%rbp), %rsi
000000010002d209	xorl	%edx, %edx
000000010002d20b	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002d210	movq	%rax, %rbx
000000010002d213	testq	%rax, %rax
000000010002d216	je	0x10002e630
000000010002d21c	cmpq	$0x80, %rdx
000000010002d223	jb	0x10002e630
000000010002d229	leaq	0x30(%rbx), %rdi
000000010002d22d	movl	$0x14, %esi
000000010002d232	movl	$0xa, %edx
000000010002d237	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010002d23c	testq	%rax, %rax
000000010002d23f	je	0x10002e630
000000010002d245	movq	%rdx, %rcx
000000010002d248	movq	%r15, -0x58(%rbp)
000000010002d24c	movq	%r12, -0x40(%rbp)
000000010002d250	testq	%rdx, %rdx
000000010002d253	je	0x10002e523
000000010002d259	leaq	-0x3e0(%rbp), %rdi
000000010002d260	movq	-0x30(%rbp), %rsi
000000010002d264	movq	-0x38(%rbp), %rdx
000000010002d268	callq	__ZN6object4read7archive13ArchiveMember12parse_aixbig17h9109b5a29c33fe09E ## object::read::archive::ArchiveMember::parse_aixbig::h9109b5a29c33fe09
000000010002d26d	movq	-0x3e0(%rbp), %rax
000000010002d274	cmpq	$0x2, %rax
000000010002d278	je	0x10002e628
000000010002d27e	movq	-0x3d8(%rbp), %rcx
000000010002d285	movq	-0x3d0(%rbp), %rdx
000000010002d28c	movq	-0x3c8(%rbp), %rsi
000000010002d293	movq	%rsi, -0x790(%rbp)
000000010002d29a	movq	-0x3c0(%rbp), %rsi
000000010002d2a1	movq	%rsi, -0x788(%rbp)
000000010002d2a8	movq	-0x3b8(%rbp), %rsi
000000010002d2af	movq	%rsi, -0x780(%rbp)
000000010002d2b6	movq	%rax, -0x7a8(%rbp)
000000010002d2bd	movq	%rcx, -0x7a0(%rbp)
000000010002d2c4	movq	%rdx, -0x798(%rbp)
000000010002d2cb	leaq	-0x7a8(%rbp), %rdi
000000010002d2d2	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002d2d7	jmp	0x10002e5cd
000000010002d2dc	movq	-0x48(%rbp), %rbx
000000010002d2e0	testb	$0x1, %r12b
000000010002d2e4	jne	0x10002d3b8
000000010002d2ea	movq	0x1f0(%rbx), %rcx
000000010002d2f1	testq	%rcx, %rcx
000000010002d2f4	je	0x10002d3b8
000000010002d2fa	movq	0x1e0(%rbx), %rax
000000010002d301	xorl	%edi, %edi
000000010002d303	movl	$0xff, %esi
000000010002d308	movq	%rcx, %rdx
000000010002d30b	movq	%rcx, %r8
000000010002d30e	movq	-0x68(%rbp), %r11
000000010002d312	jmp	0x10002d328
000000010002d314	nopw	%cs:(%rax,%rax)
000000010002d31e	nop
000000010002d320	movq	%rdx, %r8
000000010002d323	subq	%rdi, %rdx
000000010002d326	jbe	0x10002d362
000000010002d328	shrq	%rdx
000000010002d32b	addq	%rdi, %rdx
000000010002d32e	leaq	(%rdx,%rdx,2), %r10
000000010002d332	xorl	%r9d, %r9d
000000010002d335	cmpq	%r11, 0x10(%rax,%r10,8)
000000010002d33a	setne	%r9b
000000010002d33e	cmovbl	%esi, %r9d
000000010002d342	cmpb	$0x1, %r9b
000000010002d346	je	0x10002d320
000000010002d348	movzbl	%r9b, %edi
000000010002d34c	cmpl	$0xff, %edi
000000010002d352	jne	0x10002d36b
000000010002d354	incq	%rdx
000000010002d357	movq	%rdx, %rdi
000000010002d35a	movq	%r8, %rdx
000000010002d35d	subq	%rdi, %rdx
000000010002d360	ja	0x10002d328
000000010002d362	subq	$0x1, %rdi
000000010002d366	movq	%rdi, %rdx
000000010002d369	jb	0x10002d3b8
000000010002d36b	cmpq	%rcx, %rdx
000000010002d36e	jae	0x10002d3b8
000000010002d370	leaq	(%rdx,%rdx,2), %rcx
000000010002d374	movq	(%rax,%rcx,8), %rdx
000000010002d378	movq	0x8(%rax,%rcx,8), %rax
000000010002d37d	movl	$0x3, -0xbd0(%rbp)
000000010002d387	movq	%rdx, -0xbc8(%rbp)
000000010002d38e	movq	%rax, -0xbc0(%rbp)
000000010002d395	movq	-0x68(%rbp), %rax
000000010002d399	movq	%rax, -0xbb8(%rbp)
000000010002d3a0	leaq	-0xbd0(%rbp), %rsi
000000010002d3a7	movq	-0xa0(%rbp), %rdi
000000010002d3ae	movq	-0xb0(%rbp), %rax
000000010002d3b5	callq	*0x20(%rax)
000000010002d3b8	addq	$0x17e8, %rsp                   ## imm = 0x17E8
000000010002d3bf	popq	%rbx
000000010002d3c0	popq	%r12
000000010002d3c2	popq	%r13
000000010002d3c4	popq	%r14
000000010002d3c6	popq	%r15
000000010002d3c8	popq	%rbp
000000010002d3c9	retq
000000010002d3ca	movq	%rcx, %rbx
000000010002d3cd	jmp	0x10002d2e0
000000010002d3d2	addb	$-0x6, %al
000000010002d3d4	cmpb	$0x3, %al
000000010002d3d6	ja	0x10002cc45
000000010002d3dc	movzbl	%al, %eax
000000010002d3df	decq	%rax
000000010002d3e2	cmpq	$0x2, %rax
000000010002d3e6	ja	0x10002cc45
000000010002d3ec	leaq	-0xbd0(%rbp), %rdi
000000010002d3f3	callq	__ZN3std4path10Components7as_path17hc95de799d49c8389E ## std::path::Components::as_path::hc95de799d49c8389
000000010002d3f8	testq	%rax, %rax
000000010002d3fb	je	0x10002cc45
000000010002d401	leaq	-0xbd0(%rbp), %rdi
000000010002d408	movq	%rax, %rsi
000000010002d40b	callq	__ZN3std3sys4unix2fs7readdir17h18e31159b936d34bE ## std::sys::unix::fs::readdir::h18e31159b936d34b
000000010002d410	movq	-0xbd0(%rbp), %rax
000000010002d417	movzbl	-0xbc8(%rbp), %ecx
000000010002d41e	cmpb	$0x2, %cl
000000010002d421	jne	0x10002d6ee
000000010002d427	movl	%eax, %ecx
000000010002d429	andl	$0x3, %ecx
000000010002d42c	leaq	-0x2(%rcx), %rdx
000000010002d430	cmpq	$0x2, %rdx
000000010002d434	jb	0x10002cc45
000000010002d43a	testq	%rcx, %rcx
000000010002d43d	je	0x10002cc45
000000010002d443	leaq	-0x1(%rax), %r12
000000010002d447	movq	-0x1(%rax), %r13
000000010002d44b	movq	0x7(%rax), %rbx
000000010002d44f	movq	%r13, %rdi
000000010002d452	callq	*(%rbx)
000000010002d454	movq	0x8(%rbx), %rsi
000000010002d458	testq	%rsi, %rsi
000000010002d45b	je	0x10002d469
000000010002d45d	movq	0x10(%rbx), %rdx
000000010002d461	movq	%r13, %rdi
000000010002d464	callq	___rust_dealloc
000000010002d469	movl	$0x18, %esi
000000010002d46e	movl	$0x8, %edx
000000010002d473	movq	%r12, %rdi
000000010002d476	callq	___rust_dealloc
000000010002d47b	jmp	0x10002cc45
000000010002d480	je	0x10002d103
000000010002d486	cmpb	$0x29, (%rbx,%rcx)
000000010002d48a	jne	0x10002d103
000000010002d490	xorl	%r14d, %r14d
000000010002d493	cmpb	$0x28, (%rbx,%r14)
000000010002d498	je	0x10002d6ab
000000010002d49e	incq	%r14
000000010002d4a1	cmpq	%r14, %rcx
000000010002d4a4	jne	0x10002d493
000000010002d4a6	jmp	0x10002d103
000000010002d4ab	leaq	-0x1810(%rbp), %rdi
000000010002d4b2	leaq	-0xbd0(%rbp), %rsi
000000010002d4b9	movl	$0x200, %edx                    ## imm = 0x200
000000010002d4be	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d4c3	movl	-0x9cf(%rbp), %eax
000000010002d4c9	movl	-0x9cc(%rbp), %ecx
000000010002d4cf	movl	%eax, -0x98(%rbp)
000000010002d4d5	movl	%ecx, -0x95(%rbp)
000000010002d4db	movq	-0xdd0(%rbp), %rax
000000010002d4e2	movq	-0xdc8(%rbp), %rcx
000000010002d4e9	movq	%rax, -0xe0(%rbp)
000000010002d4f0	movq	%rcx, -0xd8(%rbp)
000000010002d4f7	movq	-0xdc0(%rbp), %rax
000000010002d4fe	movq	%rax, -0xd0(%rbp)
000000010002d505	movq	-0xdb8(%rbp), %rax
000000010002d50c	movq	%rax, -0xc8(%rbp)
000000010002d513	movq	-0xdb0(%rbp), %rax
000000010002d51a	movq	%rax, -0xc0(%rbp)
000000010002d521	movq	-0xda8(%rbp), %rax
000000010002d528	movq	%rax, -0xb8(%rbp)
000000010002d52f	movq	-0xb8(%rbp), %rax
000000010002d536	movq	%rax, -0x770(%rbp)
000000010002d53d	movq	-0xc0(%rbp), %rax
000000010002d544	movq	%rax, -0x778(%rbp)
000000010002d54b	movq	-0xc8(%rbp), %rax
000000010002d552	movq	%rax, -0x780(%rbp)
000000010002d559	movq	-0xd0(%rbp), %rax
000000010002d560	movq	%rax, -0x788(%rbp)
000000010002d567	movq	-0xe0(%rbp), %rax
000000010002d56e	movq	-0xd8(%rbp), %rcx
000000010002d575	movq	%rcx, -0x790(%rbp)
000000010002d57c	movq	%rax, -0x798(%rbp)
000000010002d583	leaq	-0x768(%rbp), %rdi
000000010002d58a	leaq	-0x1810(%rbp), %rsi
000000010002d591	movl	$0x200, %edx                    ## imm = 0x200
000000010002d596	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d59b	movl	-0x98(%rbp), %eax
000000010002d5a1	movl	-0x95(%rbp), %ecx
000000010002d5a7	movl	%eax, -0x567(%rbp)
000000010002d5ad	movl	%ecx, -0x564(%rbp)
000000010002d5b3	movq	%r13, -0x7a8(%rbp)
000000010002d5ba	movq	%r14, -0x7a0(%rbp)
000000010002d5c1	movb	%bl, -0x568(%rbp)
000000010002d5c7	movq	0x1ec72(%rip), %rbx
000000010002d5ce	cmpq	$0x4, %rbx
000000010002d5d2	jne	0x10002d616
000000010002d5d4	movq	$0x3, 0x1ec61(%rip)
000000010002d5df	movl	$0x6f0, %esi                    ## imm = 0x6F0
000000010002d5e4	addq	0x1ec45(%rip), %rsi
000000010002d5eb	leaq	-0xbd0(%rbp), %rdi
000000010002d5f2	movl	$0x250, %edx                    ## imm = 0x250
000000010002d5f7	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d5fc	cmpb	$0x2, -0x988(%rbp)
000000010002d603	je	0x10002d611
000000010002d605	leaq	-0xbc8(%rbp), %rdi
000000010002d60c	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002d611	movl	$0x3, %ebx
000000010002d616	leaq	-0xbc8(%rbp), %rdi
000000010002d61d	leaq	-0x7a8(%rbp), %rsi
000000010002d624	movl	$0x248, %edx                    ## imm = 0x248
000000010002d629	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d62e	movq	-0x38(%rbp), %rax
000000010002d632	movq	%rax, -0xbd0(%rbp)
000000010002d639	cmpq	0x1ebf8(%rip), %rbx
000000010002d640	jne	0x10002d651
000000010002d642	leaq	0x1ebe7(%rip), %rdi
000000010002d649	movq	%rbx, %rsi
000000010002d64c	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h70c95565943a02e4E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h70c95565943a02e4
000000010002d651	movq	0x1ebd8(%rip), %r14
000000010002d658	testq	%rbx, %rbx
000000010002d65b	je	0x10002ddd3
000000010002d661	leaq	0x250(%r14), %rdi
000000010002d668	imulq	$0x250, %rbx, %rdx              ## imm = 0x250
000000010002d66f	movq	%r14, %rsi
000000010002d672	callq	0x1000427cc                     ## symbol stub for: _memmove
000000010002d677	leaq	-0xbd0(%rbp), %rsi
000000010002d67e	movl	$0x250, %edx                    ## imm = 0x250
000000010002d683	movq	%r14, %rdi
000000010002d686	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d68b	incq	%rbx
000000010002d68e	movq	%rbx, 0x1ebab(%rip)
000000010002d695	jne	0x10002ce1f
000000010002d69b	leaq	0x1bf96(%rip), %rdx
000000010002d6a2	xorl	%edi, %edi
000000010002d6a4	xorl	%esi, %esi
000000010002d6a6	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010002d6ab	leaq	-0xbd0(%rbp), %rdi
000000010002d6b2	movq	%rbx, %rsi
000000010002d6b5	movq	%r14, %rdx
000000010002d6b8	callq	__ZN3std12backtrace_rs9symbolize5gimli4mmap17h83f4fe4b849a5103E ## std::backtrace_rs::symbolize::gimli::mmap::h83f4fe4b849a5103
000000010002d6bd	cmpq	$0x0, -0xbd0(%rbp)
000000010002d6c5	je	0x10002e649
000000010002d6cb	subq	%r14, %r13
000000010002d6ce	addq	$-0x2, %r13
000000010002d6d2	movq	%r13, -0x70(%rbp)
000000010002d6d6	leaq	0x1(%rbx,%r14), %r13
000000010002d6db	movq	-0xbc8(%rbp), %rdi
000000010002d6e2	movq	-0xbc0(%rbp), %rcx
000000010002d6e9	jmp	0x10002d134
000000010002d6ee	testb	%cl, %cl
000000010002d6f0	movq	%rax, -0x120(%rbp)
000000010002d6f7	setne	-0x118(%rbp)
000000010002d6fe	leaq	-0xbd0(%rbp), %rdi
000000010002d705	leaq	-0x120(%rbp), %rsi
000000010002d70c	callq	__ZN86_$LT$std..sys..unix..fs..ReadDir$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0660675dcc819650E ## _$LT$std..sys..unix..fs..ReadDir$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h0660675dcc819650
000000010002d711	cmpq	$0x0, -0xbd0(%rbp)
000000010002d719	je	0x10002ddf7
000000010002d71f	movq	-0xbc8(%rbp), %r12
000000010002d726	movq	-0xbc0(%rbp), %rbx
000000010002d72d	testq	%r12, %r12
000000010002d730	je	0x10002de12
000000010002d736	movl	$0x410, %edx                    ## imm = 0x410
000000010002d73b	leaq	-0x11e0(%rbp), %rdi
000000010002d742	leaq	-0xbb8(%rbp), %rsi
000000010002d749	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d74e	movq	%r12, %r13
000000010002d751	movq	%r12, -0x11f0(%rbp)
000000010002d758	movq	%rbx, -0x11e8(%rbp)
000000010002d75f	movzwl	-0x11d6(%rbp), %r12d
000000010002d767	testq	%r12, %r12
000000010002d76a	je	0x10002d790
000000010002d76c	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002d773	movzbl	(%rax), %eax
000000010002d776	movl	$0x1, %esi
000000010002d77b	movq	%r12, %rdi
000000010002d77e	callq	___rust_alloc
000000010002d783	movq	%rax, %rbx
000000010002d786	testq	%rax, %rax
000000010002d789	jne	0x10002d795
000000010002d78b	jmp	0x10002ee94
000000010002d790	movl	$0x1, %ebx
000000010002d795	movq	%rbx, %rdi
000000010002d798	leaq	-0x11d3(%rbp), %rsi
000000010002d79f	movq	%r12, %rdx
000000010002d7a2	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d7a7	movq	%rbx, -0x1610(%rbp)
000000010002d7ae	movq	%r12, -0x1608(%rbp)
000000010002d7b5	movq	%r12, -0x1600(%rbp)
000000010002d7bc	leaq	-0xbd0(%rbp), %rdi
000000010002d7c3	leaq	-0x1610(%rbp), %rsi
000000010002d7ca	callq	__ZN3std3sys4unix6os_str3Buf11into_string17h172054c7e1d77ea8E ## std::sys::unix::os_str::Buf::into_string::h172054c7e1d77ea8
000000010002d7cf	cmpq	$0x0, -0xbd0(%rbp)
000000010002d7d7	movq	-0xbc8(%rbp), %rdi
000000010002d7de	movq	-0xbc0(%rbp), %rsi
000000010002d7e5	jne	0x10002d820
000000010002d7e7	movq	-0xbb8(%rbp), %rax
000000010002d7ee	movq	%rdi, -0x148(%rbp)
000000010002d7f5	movq	%rsi, -0x140(%rbp)
000000010002d7fc	movq	%rax, -0x138(%rbp)
000000010002d803	cmpq	$0x5, %rax
000000010002d807	jb	0x10002d820
000000010002d809	movl	-0x5(%rax,%rdi), %ecx
000000010002d80d	movl	$0x5953642e, %edx               ## imm = 0x5953642E
000000010002d812	xorl	%edx, %ecx
000000010002d814	movzbl	-0x1(%rax,%rdi), %eax
000000010002d819	xorl	$0x4d, %eax
000000010002d81c	orl	%ecx, %eax
000000010002d81e	je	0x10002d847
000000010002d820	testq	%rsi, %rsi
000000010002d823	je	0x10002d82f
000000010002d825	movl	$0x1, %edx
000000010002d82a	callq	___rust_dealloc
000000010002d82f	lock
000000010002d830	decq	(%r13)
000000010002d834	jne	0x10002d6fe
000000010002d83a	movq	%r13, %rdi
000000010002d83d	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002d842	jmp	0x10002d6fe
000000010002d847	movq	0x10(%r13), %rsi
000000010002d84b	movq	0x20(%r13), %rdx
000000010002d84f	leaq	-0xbd0(%rbp), %rdi
000000010002d856	leaq	-0x11d3(%rbp), %rcx
000000010002d85d	movq	%r12, %r8
000000010002d860	callq	__ZN3std4path4Path5_join17h2ed87663efb153faE ## std::path::Path::_join::h2ed87663efb153fa
000000010002d865	movq	-0xbd0(%rbp), %rbx
000000010002d86c	movq	-0xbc0(%rbp), %rdx
000000010002d873	movl	$0x18, %r8d
000000010002d879	leaq	-0x160(%rbp), %rdi
000000010002d880	movq	%rbx, %rsi
000000010002d883	leaq	0x17e26(%rip), %rcx
000000010002d88a	callq	__ZN3std4path4Path5_join17h2ed87663efb153faE ## std::path::Path::_join::h2ed87663efb153fa
000000010002d88f	movq	-0xbc8(%rbp), %rsi
000000010002d896	testq	%rsi, %rsi
000000010002d899	je	0x10002d8a8
000000010002d89b	movl	$0x1, %edx
000000010002d8a0	movq	%rbx, %rdi
000000010002d8a3	callq	___rust_dealloc
000000010002d8a8	movq	-0x160(%rbp), %rsi
000000010002d8af	movq	-0x150(%rbp), %rdx
000000010002d8b6	leaq	-0xbd0(%rbp), %rdi
000000010002d8bd	callq	__ZN3std3sys4unix2fs7readdir17h18e31159b936d34bE ## std::sys::unix::fs::readdir::h18e31159b936d34b
000000010002d8c2	movq	-0xbd0(%rbp), %rax
000000010002d8c9	movzbl	-0xbc8(%rbp), %ecx
000000010002d8d0	cmpb	$0x2, %cl
000000010002d8d3	jne	0x10002d933
000000010002d8d5	movl	%eax, %ecx
000000010002d8d7	andl	$0x3, %ecx
000000010002d8da	leaq	-0x2(%rcx), %rdx
000000010002d8de	cmpq	$0x2, %rdx
000000010002d8e2	jb	0x10002dc00
000000010002d8e8	testq	%rcx, %rcx
000000010002d8eb	je	0x10002dc00
000000010002d8f1	leaq	-0x1(%rax), %rcx
000000010002d8f5	movq	%rcx, -0x30(%rbp)
000000010002d8f9	movq	-0x1(%rax), %r13
000000010002d8fd	movq	0x7(%rax), %rbx
000000010002d901	movq	%r13, %rdi
000000010002d904	callq	*(%rbx)
000000010002d906	movq	0x8(%rbx), %rsi
000000010002d90a	testq	%rsi, %rsi
000000010002d90d	je	0x10002d91b
000000010002d90f	movq	0x10(%rbx), %rdx
000000010002d913	movq	%r13, %rdi
000000010002d916	callq	___rust_dealloc
000000010002d91b	movl	$0x18, %esi
000000010002d920	movl	$0x8, %edx
000000010002d925	movq	-0x30(%rbp), %rdi
000000010002d929	callq	___rust_dealloc
000000010002d92e	jmp	0x10002dc00
000000010002d933	testb	%cl, %cl
000000010002d935	movq	%rax, -0x130(%rbp)
000000010002d93c	setne	-0x128(%rbp)
000000010002d943	leaq	-0xbd0(%rbp), %rdi
000000010002d94a	leaq	-0x130(%rbp), %rsi
000000010002d951	callq	__ZN86_$LT$std..sys..unix..fs..ReadDir$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0660675dcc819650E ## _$LT$std..sys..unix..fs..ReadDir$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h0660675dcc819650
000000010002d956	cmpq	$0x0, -0xbd0(%rbp)
000000010002d95e	je	0x10002dbee
000000010002d964	movq	-0xbc8(%rbp), %r13
000000010002d96b	movq	-0xbc0(%rbp), %rbx
000000010002d972	testq	%r13, %r13
000000010002d975	je	0x10002dc0c
000000010002d97b	movl	$0x410, %edx                    ## imm = 0x410
000000010002d980	leaq	-0x1600(%rbp), %rdi
000000010002d987	leaq	-0xbb8(%rbp), %rsi
000000010002d98e	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002d993	movq	%r13, -0x1610(%rbp)
000000010002d99a	movq	%rbx, -0x1608(%rbp)
000000010002d9a1	movq	0x10(%r13), %rsi
000000010002d9a5	movq	0x20(%r13), %rdx
000000010002d9a9	movzwl	-0x15f6(%rbp), %r8d
000000010002d9b1	leaq	-0xbd0(%rbp), %rdi
000000010002d9b8	leaq	-0x15f3(%rbp), %rcx
000000010002d9bf	callq	__ZN3std4path4Path5_join17h2ed87663efb153faE ## std::path::Path::_join::h2ed87663efb153fa
000000010002d9c4	movq	-0xbd0(%rbp), %rbx
000000010002d9cb	movq	-0xbc0(%rbp), %rdx
000000010002d9d2	leaq	-0x460(%rbp), %rdi
000000010002d9d9	movq	%rbx, %rsi
000000010002d9dc	callq	__ZN3std12backtrace_rs9symbolize5gimli4mmap17h83f4fe4b849a5103E ## std::backtrace_rs::symbolize::gimli::mmap::h83f4fe4b849a5103
000000010002d9e1	cmpq	$0x0, -0x460(%rbp)
000000010002d9e9	je	0x10002da01
000000010002d9eb	movq	-0x450(%rbp), %rax
000000010002d9f2	movq	%rax, -0x30(%rbp)
000000010002d9f6	movq	-0x458(%rbp), %rax
000000010002d9fd	movq	%rax, -0x60(%rbp)
000000010002da01	je	0x10002dc66
000000010002da07	movq	-0xbc8(%rbp), %rsi
000000010002da0e	testq	%rsi, %rsi
000000010002da11	je	0x10002da20
000000010002da13	movl	$0x1, %edx
000000010002da18	movq	%rbx, %rdi
000000010002da1b	callq	___rust_dealloc
000000010002da20	movq	$0x8, -0x190(%rbp)
000000010002da2b	leaq	-0x188(%rbp), %rax
000000010002da32	movq	$0x0, 0x8(%rax)
000000010002da3a	movq	$0x0, (%rax)
000000010002da41	movq	$0x8, -0x178(%rbp)
000000010002da4c	movq	$0x0, 0x20(%rax)
000000010002da54	movq	$0x0, 0x18(%rax)
000000010002da5c	leaq	-0x460(%rbp), %rdi
000000010002da63	movq	-0x60(%rbp), %rsi
000000010002da67	movq	-0x30(%rbp), %rdx
000000010002da6b	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho11find_header17hde1fc8840a0a82e4E ## std::backtrace_rs::symbolize::gimli::macho::find_header::hde1fc8840a0a82e4
000000010002da70	movq	-0x460(%rbp), %rbx
000000010002da77	testq	%rbx, %rbx
000000010002da7a	je	0x10002dbbd
000000010002da80	cmpl	$0xcffaedfe, (%rbx)             ## imm = 0xCFFAEDFE
000000010002da86	je	0x10002dbbd
000000010002da8c	movq	-0x458(%rbp), %rdi
000000010002da93	movq	-0x450(%rbp), %rsi
000000010002da9a	movl	0x10(%rbx), %r12d
000000010002da9e	movl	0x14(%rbx), %ecx
000000010002daa1	movl	$0x20, %edx
000000010002daa6	movq	%rdi, -0x58(%rbp)
000000010002daaa	movq	%rsi, -0x90(%rbp)
000000010002dab1	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002dab6	testq	%rax, %rax
000000010002dab9	je	0x10002dbbd
000000010002dabf	testq	%r12, %r12
000000010002dac2	je	0x10002dbbd
000000010002dac8	cmpq	$0x8, %rdx
000000010002dacc	jb	0x10002dbbd
000000010002dad2	movq	%rax, %rcx
000000010002dad5	movl	0x4(%rax), %esi
000000010002dad8	cmpq	$0x8, %rsi
000000010002dadc	jb	0x10002dbbd
000000010002dae2	subq	%rsi, %rdx
000000010002dae5	jb	0x10002dbbd
000000010002daeb	movl	$0x0, %eax
000000010002daf0	cmovbq	%rax, %rdx
000000010002daf4	leaq	(%rcx,%rsi), %rax
000000010002daf8	movl	$0xffffffff, %edi               ## imm = 0xFFFFFFFF
000000010002dafd	addl	%edi, %r12d
000000010002db00	cmpl	$0x1b, (%rcx)
000000010002db03	jne	0x10002dabf
000000010002db05	cmpl	$0x18, %esi
000000010002db08	jb	0x10002dabf
000000010002db0a	movq	0x8(%rcx), %rax
000000010002db0e	xorq	-0x78(%rbp), %rax
000000010002db12	movq	0x10(%rcx), %rcx
000000010002db16	xorq	-0x40(%rbp), %rcx
000000010002db1a	orq	%rax, %rcx
000000010002db1d	jne	0x10002dbbd
000000010002db23	leaq	-0x460(%rbp), %rdi
000000010002db2a	movq	%rbx, %rsi
000000010002db2d	movq	-0x58(%rbp), %rdx
000000010002db31	movq	-0x90(%rbp), %rcx
000000010002db38	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object5parse17h07452ac8e8c16fe9E ## std::backtrace_rs::symbolize::gimli::macho::Object::parse::h07452ac8e8c16fe9
000000010002db3d	movzbl	-0x3e8(%rbp), %eax
000000010002db44	cmpb	$0x2, %al
000000010002db46	je	0x10002dbbd
000000010002db48	movl	$0xf, %ecx
000000010002db4d	leaq	-0x560(%rbp), %r9
000000010002db54	movq	%r9, %rdi
000000010002db57	leaq	-0x460(%rbp), %r8
000000010002db5e	movq	%r8, %rsi
000000010002db61	rep		movsq	(%rsi), %es:(%rdi)
000000010002db64	leaq	-0x3e7(%rbp), %rdx
000000010002db6b	movl	(%rdx), %ecx
000000010002db6d	movl	0x3(%rdx), %edx
000000010002db70	leaq	-0x4e7(%rbp), %rsi
000000010002db77	movl	%edx, 0x3(%rsi)
000000010002db7a	movl	%ecx, (%rsi)
000000010002db7c	movb	%al, -0x4e8(%rbp)
000000010002db82	movb	$0x2, -0x468(%rbp)
000000010002db89	movb	$0x2, -0x3e8(%rbp)
000000010002db90	leaq	-0xbd0(%rbp), %rdi
000000010002db97	leaq	-0x190(%rbp), %rsi
000000010002db9e	movq	%r9, %rdx
000000010002dba1	leaq	-0x4e0(%rbp), %rcx
000000010002dba8	callq	__ZN3std12backtrace_rs9symbolize5gimli7Context3new17h15762e565e18f324E ## std::backtrace_rs::symbolize::gimli::Context::new::h15762e565e18f324
000000010002dbad	movzbl	-0x9d0(%rbp), %ebx
000000010002dbb4	cmpb	$0x2, %bl
000000010002dbb7	jne	0x10002dd21
000000010002dbbd	leaq	-0x190(%rbp), %rdi
000000010002dbc4	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
000000010002dbc9	movq	-0x60(%rbp), %rdi
000000010002dbcd	movq	-0x30(%rbp), %rsi
000000010002dbd1	callq	0x1000427de                     ## symbol stub for: _munmap
000000010002dbd6	lock
000000010002dbd7	decq	(%r13)
000000010002dbdb	jne	0x10002d943
000000010002dbe1	movq	%r13, %rdi
000000010002dbe4	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002dbe9	jmp	0x10002d943
000000010002dbee	movq	-0x130(%rbp), %rdi
000000010002dbf5	lock
000000010002dbf6	decq	(%rdi)
000000010002dbf9	jne	0x10002dc00
000000010002dbfb	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002dc00	movb	$0x2, -0x1a0(%rbp)
000000010002dc07	jmp	0x10002dcb7
000000010002dc0c	movl	%ebx, %eax
000000010002dc0e	andl	$0x3, %eax
000000010002dc11	leaq	-0x2(%rax), %rcx
000000010002dc15	cmpq	$0x2, %rcx
000000010002dc19	jb	0x10002dc5d
000000010002dc1b	testq	%rax, %rax
000000010002dc1e	je	0x10002dc5d
000000010002dc20	leaq	-0x1(%rbx), %rax
000000010002dc24	movq	%rax, -0x30(%rbp)
000000010002dc28	movq	-0x1(%rbx), %r13
000000010002dc2c	movq	0x7(%rbx), %rbx
000000010002dc30	movq	%r13, %rdi
000000010002dc33	callq	*(%rbx)
000000010002dc35	movq	0x8(%rbx), %rsi
000000010002dc39	testq	%rsi, %rsi
000000010002dc3c	je	0x10002dc4a
000000010002dc3e	movq	0x10(%rbx), %rdx
000000010002dc42	movq	%r13, %rdi
000000010002dc45	callq	___rust_dealloc
000000010002dc4a	movl	$0x18, %esi
000000010002dc4f	movl	$0x8, %edx
000000010002dc54	movq	-0x30(%rbp), %rdi
000000010002dc58	callq	___rust_dealloc
000000010002dc5d	movb	$0x2, -0x1a0(%rbp)
000000010002dc64	jmp	0x10002dc95
000000010002dc66	movb	$0x2, -0x1a0(%rbp)
000000010002dc6d	movq	-0xbc8(%rbp), %rsi
000000010002dc74	testq	%rsi, %rsi
000000010002dc77	je	0x10002dc86
000000010002dc79	movl	$0x1, %edx
000000010002dc7e	movq	%rbx, %rdi
000000010002dc81	callq	___rust_dealloc
000000010002dc86	lock
000000010002dc87	decq	(%r13)
000000010002dc8b	jne	0x10002dc95
000000010002dc8d	movq	%r13, %rdi
000000010002dc90	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002dc95	movq	-0x130(%rbp), %rdi
000000010002dc9c	lock
000000010002dc9d	decq	(%rdi)
000000010002dca0	jne	0x10002dca7
000000010002dca2	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002dca7	movzbl	-0x1a0(%rbp), %ebx
000000010002dcae	cmpb	$0x2, %bl
000000010002dcb1	jne	0x10002eac2
000000010002dcb7	movq	-0x158(%rbp), %rsi
000000010002dcbe	testq	%rsi, %rsi
000000010002dcc1	je	0x10002dcd4
000000010002dcc3	movq	-0x160(%rbp), %rdi
000000010002dcca	movl	$0x1, %edx
000000010002dccf	callq	___rust_dealloc
000000010002dcd4	movq	-0x140(%rbp), %rsi
000000010002dcdb	testq	%rsi, %rsi
000000010002dcde	je	0x10002dcf1
000000010002dce0	movq	-0x148(%rbp), %rdi
000000010002dce7	movl	$0x1, %edx
000000010002dcec	callq	___rust_dealloc
000000010002dcf1	movq	-0x11f0(%rbp), %rdi
000000010002dcf8	lock
000000010002dcf9	decq	(%rdi)
000000010002dcfc	jne	0x10002dd03
000000010002dcfe	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002dd03	cmpb	$0x2, -0x1a0(%rbp)
000000010002dd0a	je	0x10002d6fe
000000010002dd10	leaq	-0x3e0(%rbp), %rdi
000000010002dd17	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002dd1c	jmp	0x10002d6fe
000000010002dd21	movl	$0x200, %edx                    ## imm = 0x200
000000010002dd26	leaq	-0x3a0(%rbp), %r12
000000010002dd2d	movq	%r12, %rdi
000000010002dd30	leaq	-0xbd0(%rbp), %rsi
000000010002dd37	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002dd3c	leaq	-0xbb8(%rbp), %rcx
000000010002dd43	movl	0x1e9(%rcx), %eax
000000010002dd49	movl	0x1ec(%rcx), %ecx
000000010002dd4f	movl	%ecx, 0x204(%r12)
000000010002dd57	movl	%eax, 0x201(%r12)
000000010002dd5f	movq	-0x168(%rbp), %rax
000000010002dd66	movq	%rax, -0x8(%r12)
000000010002dd6b	movq	-0x170(%rbp), %rax
000000010002dd72	movq	%rax, -0x10(%r12)
000000010002dd77	movq	-0x178(%rbp), %rax
000000010002dd7e	movq	%rax, -0x18(%r12)
000000010002dd83	movq	-0x180(%rbp), %rax
000000010002dd8a	movq	%rax, -0x20(%r12)
000000010002dd8f	movq	-0x190(%rbp), %rax
000000010002dd96	movq	-0x188(%rbp), %rcx
000000010002dd9d	movq	%rcx, -0x28(%r12)
000000010002dda2	movq	%rax, -0x30(%r12)
000000010002dda7	movq	-0x60(%rbp), %rax
000000010002ddab	movq	%rax, -0x3e0(%rbp)
000000010002ddb2	movq	-0x30(%rbp), %rax
000000010002ddb6	movq	%rax, -0x3d8(%rbp)
000000010002ddbd	movb	%bl, -0x1a0(%rbp)
000000010002ddc3	lock
000000010002ddc4	decq	(%r13)
000000010002ddc8	je	0x10002dc8d
000000010002ddce	jmp	0x10002dc95
000000010002ddd3	leaq	-0xbd0(%rbp), %rsi
000000010002ddda	movl	$0x250, %edx                    ## imm = 0x250
000000010002dddf	movq	%r14, %rdi
000000010002dde2	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002dde7	movq	$0x1, 0x1e44e(%rip)
000000010002ddf2	jmp	0x10002ce1f
000000010002ddf7	movq	-0x120(%rbp), %rdi
000000010002ddfe	lock
000000010002ddff	decq	(%rdi)
000000010002de02	jne	0x10002cc45
000000010002de08	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002de0d	jmp	0x10002cc45
000000010002de12	movl	%ebx, %eax
000000010002de14	andl	$0x3, %eax
000000010002de17	leaq	-0x2(%rax), %rcx
000000010002de1b	cmpq	$0x2, %rcx
000000010002de1f	jb	0x10002de63
000000010002de21	testq	%rax, %rax
000000010002de24	je	0x10002de63
000000010002de26	leaq	-0x1(%rbx), %rax
000000010002de2a	movq	%rax, -0x30(%rbp)
000000010002de2e	movq	-0x1(%rbx), %r13
000000010002de32	movq	0x7(%rbx), %rbx
000000010002de36	movq	%r13, %rdi
000000010002de39	callq	*(%rbx)
000000010002de3b	movq	0x8(%rbx), %rsi
000000010002de3f	testq	%rsi, %rsi
000000010002de42	je	0x10002de50
000000010002de44	movq	0x10(%rbx), %rdx
000000010002de48	movq	%r13, %rdi
000000010002de4b	callq	___rust_dealloc
000000010002de50	movl	$0x18, %esi
000000010002de55	movl	$0x8, %edx
000000010002de5a	movq	-0x30(%rbp), %rdi
000000010002de5e	callq	___rust_dealloc
000000010002de63	movb	$0x2, %bl
000000010002de65	movq	-0x120(%rbp), %rdi
000000010002de6c	lock
000000010002de6d	decq	(%rdi)
000000010002de70	jne	0x10002de77
000000010002de72	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002de77	cmpb	$0x2, %bl
000000010002de7a	je	0x10002cc45
000000010002de80	movq	-0xe8(%rbp), %rax
000000010002de87	movq	%rax, -0xb8(%rbp)
000000010002de8e	movq	-0xf0(%rbp), %rax
000000010002de95	movq	%rax, -0xc0(%rbp)
000000010002de9c	movq	-0xf8(%rbp), %rax
000000010002dea3	movq	%rax, -0xc8(%rbp)
000000010002deaa	movq	-0x100(%rbp), %rax
000000010002deb1	movq	%rax, -0xd0(%rbp)
000000010002deb8	movq	-0x110(%rbp), %rax
000000010002debf	movq	-0x108(%rbp), %rcx
000000010002dec6	movq	%rcx, -0xd8(%rbp)
000000010002decd	movq	%rax, -0xe0(%rbp)
000000010002ded4	leaq	-0x1810(%rbp), %rdi
000000010002dedb	leaq	-0xdd0(%rbp), %rsi
000000010002dee2	movl	$0x200, %edx                    ## imm = 0x200
000000010002dee7	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002deec	movl	-0xa8(%rbp), %eax
000000010002def2	movl	-0xa5(%rbp), %ecx
000000010002def8	movl	%eax, -0x98(%rbp)
000000010002defe	movl	%ecx, -0x95(%rbp)
000000010002df04	movq	-0x48(%rbp), %rdi
000000010002df08	movq	%r14, %rsi
000000010002df0b	callq	0x1000427de                     ## symbol stub for: _munmap
000000010002df10	movq	%r12, %r14
000000010002df13	jmp	0x10002d52f
000000010002df18	leaq	0x1b701(%rip), %rdx
000000010002df1f	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010002df24	cmpq	$0x8, %rbx
000000010002df28	movq	%r12, -0x40(%rbp)
000000010002df2c	movq	%r15, -0x58(%rbp)
000000010002df30	jbe	0x10002e148
000000010002df36	leaq	0x15db3(%rip), %r8
000000010002df3d	leaq	-0x3e0(%rbp), %rdi
000000010002df44	leaq	-0x560(%rbp), %rcx
000000010002df4b	movq	-0x30(%rbp), %rsi
000000010002df4f	movq	-0x38(%rbp), %rdx
000000010002df53	movq	%r8, -0x50(%rbp)
000000010002df57	xorl	%r9d, %r9d
000000010002df5a	callq	__ZN6object4read7archive13ArchiveMember5parse17hefb02c9169bf7bc9E ## object::read::archive::ArchiveMember::parse::hefb02c9169bf7bc9
000000010002df5f	movq	-0x3e0(%rbp), %rdx
000000010002df66	cmpq	$0x2, %rdx
000000010002df6a	je	0x10002e628
000000010002df70	movq	-0x3d8(%rbp), %rsi
000000010002df77	movq	-0x3d0(%rbp), %rax
000000010002df7e	movq	-0x3c8(%rbp), %rcx
000000010002df85	movq	%rcx, -0xdb8(%rbp)
000000010002df8c	movq	-0x3c0(%rbp), %rdi
000000010002df93	movq	%rdi, -0xdb0(%rbp)
000000010002df9a	movq	-0x3b8(%rbp), %rdi
000000010002dfa1	movq	%rdi, -0xda8(%rbp)
000000010002dfa8	movq	%rdx, -0xdd0(%rbp)
000000010002dfaf	movq	%rsi, -0xdc8(%rbp)
000000010002dfb6	movq	%rax, -0xdc0(%rbp)
000000010002dfbd	movl	$0x8, %r14d
000000010002dfc3	xorl	%edx, %edx
000000010002dfc5	decq	%rcx
000000010002dfc8	cmpq	$0x12, %rcx
000000010002dfcc	ja	0x10002e15b
000000010002dfd2	leaq	0x1287(%rip), %rsi
000000010002dfd9	movslq	(%rsi,%rcx,4), %rcx
000000010002dfdd	addq	%rsi, %rcx
000000010002dfe0	jmpq	*%rcx
000000010002dfe2	cmpb	$0x2f, (%rax)
000000010002dfe5	jne	0x10002e159
000000010002dfeb	leaq	-0xdd0(%rbp), %rdi
000000010002dff2	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002dff7	movq	%rbx, %rax
000000010002dffa	movq	-0x560(%rbp), %rcx
000000010002e001	movq	%rcx, %r14
000000010002e004	cmpq	%rax, %rcx
000000010002e007	jae	0x10002e159
000000010002e00d	leaq	0x15cdc(%rip), %r8
000000010002e014	leaq	-0x3e0(%rbp), %rdi
000000010002e01b	leaq	-0x560(%rbp), %rcx
000000010002e022	movq	-0x30(%rbp), %rsi
000000010002e026	movq	-0x38(%rbp), %rdx
000000010002e02a	movq	%r8, -0x50(%rbp)
000000010002e02e	xorl	%r9d, %r9d
000000010002e031	callq	__ZN6object4read7archive13ArchiveMember5parse17hefb02c9169bf7bc9E ## object::read::archive::ArchiveMember::parse::hefb02c9169bf7bc9
000000010002e036	movq	-0x3e0(%rbp), %rcx
000000010002e03d	cmpq	$0x2, %rcx
000000010002e041	je	0x10002e628
000000010002e047	movq	-0x3d8(%rbp), %rsi
000000010002e04e	movq	-0x3d0(%rbp), %rax
000000010002e055	movq	-0x3c8(%rbp), %rdx
000000010002e05c	movq	%rdx, -0x790(%rbp)
000000010002e063	movq	-0x3c0(%rbp), %rdi
000000010002e06a	movq	%rdi, -0x788(%rbp)
000000010002e071	movq	-0x3b8(%rbp), %rdi
000000010002e078	movq	%rdi, -0x780(%rbp)
000000010002e07f	movq	%rcx, -0x7a8(%rbp)
000000010002e086	movq	%rsi, -0x7a0(%rbp)
000000010002e08d	movq	%rax, -0x798(%rbp)
000000010002e094	cmpq	$0x2, %rdx
000000010002e098	je	0x10002ee62
000000010002e09e	cmpq	$0x1, %rdx
000000010002e0a2	jne	0x10002e159
000000010002e0a8	cmpb	$0x2f, (%rax)
000000010002e0ab	jne	0x10002e159
000000010002e0b1	leaq	-0x7a8(%rbp), %rdi
000000010002e0b8	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002e0bd	movq	%rbx, %rax
000000010002e0c0	movq	-0x560(%rbp), %rcx
000000010002e0c7	movq	%rcx, %r14
000000010002e0ca	cmpq	%rax, %rcx
000000010002e0cd	jae	0x10002e159
000000010002e0d3	leaq	0x15c16(%rip), %r8
000000010002e0da	leaq	-0x3e0(%rbp), %rdi
000000010002e0e1	leaq	-0x560(%rbp), %rcx
000000010002e0e8	movq	-0x30(%rbp), %rsi
000000010002e0ec	movq	-0x38(%rbp), %rdx
000000010002e0f0	movq	%r8, -0x50(%rbp)
000000010002e0f4	xorl	%r9d, %r9d
000000010002e0f7	callq	__ZN6object4read7archive13ArchiveMember5parse17hefb02c9169bf7bc9E ## object::read::archive::ArchiveMember::parse::hefb02c9169bf7bc9
000000010002e0fc	cmpl	$0x2, -0x3e0(%rbp)
000000010002e103	je	0x10002e628
000000010002e109	cmpq	$0x2, -0x3c8(%rbp)
000000010002e111	jne	0x10002e159
000000010002e113	movq	-0x3d0(%rbp), %rax
000000010002e11a	movzwl	(%rax), %eax
000000010002e11d	cmpl	$0x2f2f, %eax                   ## imm = 0x2F2F
000000010002e122	jne	0x10002e159
000000010002e124	movq	-0x3c0(%rbp), %rdx
000000010002e12b	movq	-0x3b8(%rbp), %rcx
000000010002e132	movq	-0x30(%rbp), %rdi
000000010002e136	movq	-0x38(%rbp), %rsi
000000010002e13a	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002e13f	movq	%rax, -0x50(%rbp)
000000010002e143	jmp	0x10002ebf5
000000010002e148	movl	$0x8, %r14d
000000010002e14e	leaq	0x15b9b(%rip), %rax
000000010002e155	movq	%rax, -0x50(%rbp)
000000010002e159	xorl	%edx, %edx
000000010002e15b	movb	$0x1, %al
000000010002e15d	xorl	%ecx, %ecx
000000010002e15f	movq	%rcx, -0x3e0(%rbp)
000000010002e166	movq	%r14, -0x3d8(%rbp)
000000010002e16d	movq	%rbx, -0x3d0(%rbp)
000000010002e174	movq	-0x30(%rbp), %rcx
000000010002e178	movq	%rcx, -0x3c8(%rbp)
000000010002e17f	movq	-0x38(%rbp), %rcx
000000010002e183	movq	%rcx, -0x3c0(%rbp)
000000010002e18a	movq	-0x50(%rbp), %rcx
000000010002e18e	movq	%rcx, -0x3b8(%rbp)
000000010002e195	movq	%rdx, -0x3b0(%rbp)
000000010002e19c	testb	%al, %al
000000010002e19e	je	0x10002e306
000000010002e1a4	leaq	-0x3d8(%rbp), %r15
000000010002e1ab	xorl	%eax, %eax
000000010002e1ad	leaq	0x15b3c(%rip), %r12
000000010002e1b4	testq	%rax, %rax
000000010002e1b7	jne	0x10002e1dc
000000010002e1b9	jmp	0x10002e25b
000000010002e1be	movq	%r12, -0x3d8(%rbp)
000000010002e1c5	movq	$0x0, -0x3d0(%rbp)
000000010002e1d0	movq	-0x3e0(%rbp), %rax
000000010002e1d7	testq	%rax, %rax
000000010002e1da	je	0x10002e25b
000000010002e1dc	movq	-0x3d0(%rbp), %rax
000000010002e1e3	testq	%rax, %rax
000000010002e1e6	je	0x10002e628
000000010002e1ec	movq	-0x3d8(%rbp), %rdi
000000010002e1f3	movq	-0x3c8(%rbp), %r14
000000010002e1fa	leaq	0x14(%rdi), %rcx
000000010002e1fe	decq	%rax
000000010002e201	movq	%rcx, -0x3d8(%rbp)
000000010002e208	movq	%rax, -0x3d0(%rbp)
000000010002e20f	movq	-0x3c0(%rbp), %rbx
000000010002e216	movl	$0x14, %esi
000000010002e21b	movl	$0xa, %edx
000000010002e220	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010002e225	testq	%rax, %rax
000000010002e228	je	0x10002e1be
000000010002e22a	movq	%rdx, %rcx
000000010002e22d	leaq	-0x7a8(%rbp), %rdi
000000010002e234	movq	%r14, %rsi
000000010002e237	movq	%rbx, %rdx
000000010002e23a	callq	__ZN6object4read7archive13ArchiveMember12parse_aixbig17h9109b5a29c33fe09E ## object::read::archive::ArchiveMember::parse_aixbig::h9109b5a29c33fe09
000000010002e23f	movq	-0x7a8(%rbp), %rax
000000010002e246	cmpq	$0x2, %rax
000000010002e24a	je	0x10002e1be
000000010002e250	cmpq	$0x3, %rax
000000010002e254	jne	0x10002e2b5
000000010002e256	jmp	0x10002e628
000000010002e25b	movq	-0x3d8(%rbp), %rax
000000010002e262	cmpq	-0x3d0(%rbp), %rax
000000010002e269	jae	0x10002e628
000000010002e26f	movq	-0x3c8(%rbp), %rsi
000000010002e276	movq	-0x3c0(%rbp), %rdx
000000010002e27d	movq	-0x3b8(%rbp), %r8
000000010002e284	movq	-0x3b0(%rbp), %r9
000000010002e28b	leaq	-0x7a8(%rbp), %rdi
000000010002e292	movq	%r15, %rcx
000000010002e295	callq	__ZN6object4read7archive13ArchiveMember5parse17hefb02c9169bf7bc9E ## object::read::archive::ArchiveMember::parse::hefb02c9169bf7bc9
000000010002e29a	movq	-0x7a8(%rbp), %rax
000000010002e2a1	cmpq	$0x2, %rax
000000010002e2a5	jne	0x10002e2b5
000000010002e2a7	movq	-0x3d0(%rbp), %rcx
000000010002e2ae	movq	%rcx, -0x3d8(%rbp)
000000010002e2b5	movq	-0x798(%rbp), %rdi
000000010002e2bc	movq	-0x790(%rbp), %rcx
000000010002e2c3	movq	-0x788(%rbp), %rbx
000000010002e2ca	movq	-0x780(%rbp), %r14
000000010002e2d1	cmpq	$0x2, %rax
000000010002e2d5	je	0x10002e2f1
000000010002e2d7	cmpq	-0x70(%rbp), %rcx
000000010002e2db	jne	0x10002e2f1
000000010002e2dd	movq	%r13, %rsi
000000010002e2e0	movq	-0x70(%rbp), %rdx
000000010002e2e4	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010002e2e9	testl	%eax, %eax
000000010002e2eb	je	0x10002e3aa
000000010002e2f1	movq	-0x3e0(%rbp), %rax
000000010002e2f8	testq	%rax, %rax
000000010002e2fb	jne	0x10002e1dc
000000010002e301	jmp	0x10002e25b
000000010002e306	testq	%rbx, %rbx
000000010002e309	je	0x10002e628
000000010002e30f	movq	%r14, %r15
000000010002e312	jmp	0x10002e324
000000010002e314	addq	$0x14, %r15
000000010002e318	movq	%r12, %rbx
000000010002e31b	decq	%rbx
000000010002e31e	je	0x10002e628
000000010002e324	movl	$0x14, %esi
000000010002e329	movq	%r15, %rdi
000000010002e32c	movl	$0xa, %edx
000000010002e331	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010002e336	testq	%rax, %rax
000000010002e339	je	0x10002e628
000000010002e33f	movq	%rdx, %rcx
000000010002e342	leaq	-0x7a8(%rbp), %rdi
000000010002e349	movq	-0x30(%rbp), %rsi
000000010002e34d	movq	-0x38(%rbp), %rdx
000000010002e351	callq	__ZN6object4read7archive13ArchiveMember12parse_aixbig17h9109b5a29c33fe09E ## object::read::archive::ArchiveMember::parse_aixbig::h9109b5a29c33fe09
000000010002e356	movq	-0x7a8(%rbp), %rax
000000010002e35d	cmpq	$0x2, %rax
000000010002e361	je	0x10002e628
000000010002e367	cmpq	$0x3, %rax
000000010002e36b	je	0x10002e628
000000010002e371	movq	%rbx, %r12
000000010002e374	movq	-0x70(%rbp), %rax
000000010002e378	cmpq	%rax, -0x790(%rbp)
000000010002e37f	jne	0x10002e314
000000010002e381	movq	-0x798(%rbp), %rdi
000000010002e388	movq	-0x788(%rbp), %rbx
000000010002e38f	movq	-0x780(%rbp), %r14
000000010002e396	movq	%r13, %rsi
000000010002e399	movq	-0x70(%rbp), %rdx
000000010002e39d	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010002e3a2	testl	%eax, %eax
000000010002e3a4	jne	0x10002e314
000000010002e3aa	movq	-0x30(%rbp), %rdi
000000010002e3ae	movq	-0x38(%rbp), %rsi
000000010002e3b2	movq	%rbx, %rdx
000000010002e3b5	movq	%r14, %rcx
000000010002e3b8	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002e3bd	movq	-0x40(%rbp), %r12
000000010002e3c1	movq	-0x58(%rbp), %r15
000000010002e3c5	movq	%rax, %rsi
000000010002e3c8	testq	%rax, %rax
000000010002e3cb	je	0x10002e630
000000010002e3d1	leaq	-0x3e0(%rbp), %rdi
000000010002e3d8	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho11find_header17hde1fc8840a0a82e4E ## std::backtrace_rs::symbolize::gimli::macho::find_header::hde1fc8840a0a82e4
000000010002e3dd	movq	-0x3e0(%rbp), %rsi
000000010002e3e4	testq	%rsi, %rsi
000000010002e3e7	je	0x10002e630
000000010002e3ed	cmpl	$0xcffaedfe, (%rsi)             ## imm = 0xCFFAEDFE
000000010002e3f3	je	0x10002e630
000000010002e3f9	movq	-0x3d8(%rbp), %rdx
000000010002e400	movq	-0x3d0(%rbp), %rcx
000000010002e407	leaq	-0x3e0(%rbp), %rdi
000000010002e40e	callq	__ZN3std12backtrace_rs9symbolize5gimli5macho6Object5parse17h07452ac8e8c16fe9E ## std::backtrace_rs::symbolize::gimli::macho::Object::parse::h07452ac8e8c16fe9
000000010002e413	movzbl	-0x368(%rbp), %eax
000000010002e41a	cmpb	$0x2, %al
000000010002e41c	je	0x10002e630
000000010002e422	leaq	-0xdd0(%rbp), %rdx
000000010002e429	leaq	-0x3e0(%rbp), %rsi
000000010002e430	movl	$0xf, %ecx
000000010002e435	movq	%rdx, %rdi
000000010002e438	rep		movsq	(%rsi), %es:(%rdi)
000000010002e43b	movl	-0x367(%rbp), %ecx
000000010002e441	movl	-0x364(%rbp), %esi
000000010002e447	movl	%esi, -0xd54(%rbp)
000000010002e44d	movl	%ecx, -0xd57(%rbp)
000000010002e453	movb	%al, -0xd58(%rbp)
000000010002e459	movb	$0x2, -0x730(%rbp)
000000010002e460	movb	$0x2, -0x368(%rbp)
000000010002e467	leaq	-0xbd0(%rbp), %rdi
000000010002e46e	leaq	-0x1810(%rbp), %rsi
000000010002e475	leaq	-0x7a8(%rbp), %rcx
000000010002e47c	leaq	-0x3e0(%rbp), %r8
000000010002e483	callq	__ZN3std12backtrace_rs9symbolize5gimli7Context3new17h15762e565e18f324E ## std::backtrace_rs::symbolize::gimli::Context::new::h15762e565e18f324
000000010002e488	movzbl	-0x9d0(%rbp), %r14d
000000010002e490	cmpb	$0x2, %r14b
000000010002e494	je	0x10002e630
000000010002e49a	leaq	-0x1610(%rbp), %rdi
000000010002e4a1	leaq	-0xbd0(%rbp), %rsi
000000010002e4a8	movl	$0x200, %edx                    ## imm = 0x200
000000010002e4ad	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002e4b2	movl	-0x9cf(%rbp), %eax
000000010002e4b8	movl	-0x9cc(%rbp), %ecx
000000010002e4be	movl	%eax, -0x190(%rbp)
000000010002e4c4	movl	%ecx, -0x18d(%rbp)
000000010002e4ca	movq	-0x1810(%rbp), %rax
000000010002e4d1	movq	-0x1808(%rbp), %rcx
000000010002e4d8	movq	%rax, -0x460(%rbp)
000000010002e4df	movq	%rcx, -0x458(%rbp)
000000010002e4e6	movq	-0x1800(%rbp), %rax
000000010002e4ed	movq	%rax, -0x450(%rbp)
000000010002e4f4	movq	-0x17f8(%rbp), %rax
000000010002e4fb	movq	%rax, -0x448(%rbp)
000000010002e502	movq	-0x17f0(%rbp), %rax
000000010002e509	movq	%rax, -0x440(%rbp)
000000010002e510	movq	-0x17e8(%rbp), %rax
000000010002e517	movq	%rax, -0x438(%rbp)
000000010002e51e	jmp	0x10002e64c
000000010002e523	leaq	0x1c(%rbx), %rdi
000000010002e527	movl	$0x14, %esi
000000010002e52c	movl	$0xa, %edx
000000010002e531	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010002e536	movq	-0x40(%rbp), %r12
000000010002e53a	movq	-0x58(%rbp), %r15
000000010002e53e	testq	%rax, %rax
000000010002e541	je	0x10002e630
000000010002e547	movq	%rdx, %rcx
000000010002e54a	testq	%rdx, %rdx
000000010002e54d	je	0x10002e5cd
000000010002e54f	leaq	-0x3e0(%rbp), %rdi
000000010002e556	movq	-0x30(%rbp), %rsi
000000010002e55a	movq	-0x38(%rbp), %rdx
000000010002e55e	callq	__ZN6object4read7archive13ArchiveMember12parse_aixbig17h9109b5a29c33fe09E ## object::read::archive::ArchiveMember::parse_aixbig::h9109b5a29c33fe09
000000010002e563	movq	-0x3e0(%rbp), %rax
000000010002e56a	cmpq	$0x2, %rax
000000010002e56e	je	0x10002e628
000000010002e574	movq	-0x3d8(%rbp), %rcx
000000010002e57b	movq	-0x3d0(%rbp), %rdx
000000010002e582	movq	-0x3c8(%rbp), %rsi
000000010002e589	movq	%rsi, -0x790(%rbp)
000000010002e590	movq	-0x3c0(%rbp), %rsi
000000010002e597	movq	%rsi, -0x788(%rbp)
000000010002e59e	movq	-0x3b8(%rbp), %rsi
000000010002e5a5	movq	%rsi, -0x780(%rbp)
000000010002e5ac	movq	%rax, -0x7a8(%rbp)
000000010002e5b3	movq	%rcx, -0x7a0(%rbp)
000000010002e5ba	movq	%rdx, -0x798(%rbp)
000000010002e5c1	leaq	-0x7a8(%rbp), %rdi
000000010002e5c8	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002e5cd	addq	$0x8, %rbx
000000010002e5d1	movl	$0x14, %esi
000000010002e5d6	movq	%rbx, %rdi
000000010002e5d9	movl	$0xa, %edx
000000010002e5de	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010002e5e3	movq	-0x40(%rbp), %r12
000000010002e5e7	movq	-0x58(%rbp), %r15
000000010002e5eb	testq	%rax, %rax
000000010002e5ee	je	0x10002e630
000000010002e5f0	movq	%rdx, %rcx
000000010002e5f3	leaq	0x156f6(%rip), %rax
000000010002e5fa	movq	%rax, -0x50(%rbp)
000000010002e5fe	testq	%rdx, %rdx
000000010002e601	je	0x10002ebb1
000000010002e607	leaq	-0x3e0(%rbp), %rdi
000000010002e60e	movq	-0x30(%rbp), %rsi
000000010002e612	movq	-0x38(%rbp), %rdx
000000010002e616	callq	__ZN6object4read7archive13ArchiveMember12parse_aixbig17h9109b5a29c33fe09E ## object::read::archive::ArchiveMember::parse_aixbig::h9109b5a29c33fe09
000000010002e61b	cmpl	$0x2, -0x3e0(%rbp)
000000010002e622	jne	0x10002ed86
000000010002e628	movq	-0x40(%rbp), %r12
000000010002e62c	movq	-0x58(%rbp), %r15
000000010002e630	leaq	-0x1810(%rbp), %rdi
000000010002e637	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
000000010002e63c	movq	-0x30(%rbp), %rdi
000000010002e640	movq	-0x38(%rbp), %rsi
000000010002e644	callq	0x1000427de                     ## symbol stub for: _munmap
000000010002e649	movb	$0x2, %r14b
000000010002e64c	movq	-0x90(%rbp), %r13
000000010002e653	movq	-0x60(%rbp), %rax
000000010002e657	leaq	0x240(%r13,%rax), %rbx
000000010002e65f	movq	-0x438(%rbp), %rax
000000010002e666	movq	%rax, -0x4b8(%rbp)
000000010002e66d	movq	-0x440(%rbp), %rax
000000010002e674	movq	%rax, -0x4c0(%rbp)
000000010002e67b	movq	-0x448(%rbp), %rax
000000010002e682	movq	%rax, -0x4c8(%rbp)
000000010002e689	movq	-0x450(%rbp), %rax
000000010002e690	movq	%rax, -0x4d0(%rbp)
000000010002e697	movq	-0x460(%rbp), %rax
000000010002e69e	movq	-0x458(%rbp), %rcx
000000010002e6a5	movq	%rcx, -0x4d8(%rbp)
000000010002e6ac	movq	%rax, -0x4e0(%rbp)
000000010002e6b3	leaq	-0x11f0(%rbp), %rdi
000000010002e6ba	leaq	-0x1610(%rbp), %rsi
000000010002e6c1	movl	$0x200, %edx                    ## imm = 0x200
000000010002e6c6	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002e6cb	movl	-0x190(%rbp), %eax
000000010002e6d1	movl	-0x18d(%rbp), %ecx
000000010002e6d7	movl	%eax, -0x110(%rbp)
000000010002e6dd	movl	%ecx, -0x10d(%rbp)
000000010002e6e3	cmpb	$0x1, (%rbx)
000000010002e6e6	ja	0x10002e6f0
000000010002e6e8	movq	%r15, %rdi
000000010002e6eb	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002e6f0	movq	-0x30(%rbp), %rax
000000010002e6f4	movq	%rax, (%r15)
000000010002e6f7	movq	-0x38(%rbp), %rax
000000010002e6fb	movq	%rax, 0x8(%r15)
000000010002e6ff	movq	-0x4e0(%rbp), %rax
000000010002e706	movq	-0x4d8(%rbp), %rcx
000000010002e70d	movq	%rax, 0x10(%r15)
000000010002e711	movq	%rcx, 0x18(%r15)
000000010002e715	movq	-0x4d0(%rbp), %rax
000000010002e71c	movq	%rax, 0x20(%r15)
000000010002e720	movq	-0x4c8(%rbp), %rax
000000010002e727	movq	%rax, 0x28(%r15)
000000010002e72b	movq	-0x4c0(%rbp), %rax
000000010002e732	movq	%rax, 0x30(%r15)
000000010002e736	movq	-0x4b8(%rbp), %rax
000000010002e73d	movq	%rax, 0x38(%r15)
000000010002e741	leaq	0x40(%r15), %rdi
000000010002e745	leaq	-0x11f0(%rbp), %rsi
000000010002e74c	movl	$0x200, %edx                    ## imm = 0x200
000000010002e751	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002e756	movb	%r14b, 0x240(%r15)
000000010002e75d	movl	-0x110(%rbp), %eax
000000010002e763	movl	-0x10d(%rbp), %ecx
000000010002e769	movl	%eax, 0x241(%r15)
000000010002e770	movl	%ecx, 0x244(%r15)
000000010002e777	movq	-0x78(%rbp), %rax
000000010002e77b	cmpb	$0x2, %r14b
000000010002e77f	movq	-0x48(%rbp), %rbx
000000010002e783	je	0x10002d2e0
000000010002e789	movq	%r12, -0x40(%rbp)
000000010002e78d	movq	0x1e8(%r15), %r12
000000010002e794	testq	%r12, %r12
000000010002e797	je	0x10002e835
000000010002e79d	movq	0x1d8(%r15), %rdx
000000010002e7a4	movq	%rdx, -0x38(%rbp)
000000010002e7a8	addq	$0x40, %r15
000000010002e7ac	movq	%r15, -0x58(%rbp)
000000010002e7b0	movq	(%rax), %rcx
000000010002e7b3	movq	%rcx, -0x30(%rbp)
000000010002e7b7	movq	%rax, -0x78(%rbp)
000000010002e7bb	movq	0x8(%rax), %r15
000000010002e7bf	xorl	%ebx, %ebx
000000010002e7c1	movq	%r12, -0x60(%rbp)
000000010002e7c5	jmp	0x10002e7d4
000000010002e7c7	movq	%r12, -0x60(%rbp)
000000010002e7cb	subq	%rbx, %r12
000000010002e7ce	jbe	0x10002e86c
000000010002e7d4	shrq	%r12
000000010002e7d7	addq	%rbx, %r12
000000010002e7da	leaq	(%r12,%r12,2), %r13
000000010002e7de	movq	-0x38(%rbp), %rax
000000010002e7e2	movq	(%rax,%r13,8), %rdi
000000010002e7e6	movq	0x8(%rax,%r13,8), %rdx
000000010002e7eb	movq	%rdx, %r14
000000010002e7ee	subq	%r15, %r14
000000010002e7f1	cmovaeq	%r15, %rdx
000000010002e7f5	movq	-0x30(%rbp), %rsi
000000010002e7f9	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010002e7fe	cltq
000000010002e800	testl	%eax, %eax
000000010002e802	cmovneq	%rax, %r14
000000010002e806	xorl	%eax, %eax
000000010002e808	testq	%r14, %r14
000000010002e80b	setne	%al
000000010002e80e	movl	$0xff, %ecx
000000010002e813	cmovsl	%ecx, %eax
000000010002e816	cmpb	$0x1, %al
000000010002e818	je	0x10002e7c7
000000010002e81a	movzbl	%al, %eax
000000010002e81d	cmpl	$0xff, %eax
000000010002e822	jne	0x10002e83e
000000010002e824	incq	%r12
000000010002e827	movq	%r12, %rbx
000000010002e82a	movq	-0x60(%rbp), %r12
000000010002e82e	subq	%rbx, %r12
000000010002e831	ja	0x10002e7d4
000000010002e833	jmp	0x10002e86c
000000010002e835	movq	-0x40(%rbp), %r12
000000010002e839	jmp	0x10002d2e0
000000010002e83e	movq	-0x68(%rbp), %rdx
000000010002e842	movq	-0x78(%rbp), %rax
000000010002e846	subq	0x10(%rax), %rdx
000000010002e84a	movq	-0x38(%rbp), %rax
000000010002e84e	addq	0x10(%rax,%r13,8), %rdx
000000010002e853	leaq	-0x1610(%rbp), %rdi
000000010002e85a	movq	-0x58(%rbp), %rsi
000000010002e85e	callq	__ZN3std12backtrace_rs9symbolize5gimli7Context11find_frames17h5cb6ce84a45bf07fE ## std::backtrace_rs::symbolize::gimli::Context::find_frames::h5cb6ce84a45bf07f
000000010002e863	cmpl	$0x5, -0x1610(%rbp)
000000010002e86a	jne	0x10002e879
000000010002e86c	movq	-0x48(%rbp), %rbx
000000010002e870	movq	-0x40(%rbp), %r12
000000010002e874	jmp	0x10002d2e0
000000010002e879	leaq	-0xbd0(%rbp), %rax
000000010002e880	leaq	-0x1610(%rbp), %rsi
000000010002e887	movl	$0xb, %ecx
000000010002e88c	movq	%rax, %rdi
000000010002e88f	rep		movsq	(%rsi), %es:(%rdi)
000000010002e892	leaq	-0x11f0(%rbp), %rdi
000000010002e899	movq	%rax, %rsi
000000010002e89c	callq	__ZN9addr2line18FrameIter$LT$R$GT$4next17h4ac2d1180244da85E ## addr2line::FrameIter$LT$R$GT$::next::h4ac2d1180244da85
000000010002e8a1	movq	-0x40(%rbp), %r12
000000010002e8a5	cmpl	$0x1, -0x11f0(%rbp)
000000010002e8ac	ja	0x10002ea82
000000010002e8b2	leaq	-0x798(%rbp), %r12
000000010002e8b9	movq	-0x11c8(%rbp), %rax
000000010002e8c0	movq	%rax, -0x780(%rbp)
000000010002e8c7	movq	-0x11d0(%rbp), %rax
000000010002e8ce	movq	%rax, -0x788(%rbp)
000000010002e8d5	movq	-0x11d8(%rbp), %rax
000000010002e8dc	movq	%rax, -0x790(%rbp)
000000010002e8e3	movq	-0x11e0(%rbp), %rax
000000010002e8ea	movq	%rax, -0x798(%rbp)
000000010002e8f1	movq	-0x11f0(%rbp), %rax
000000010002e8f8	movq	-0x11e8(%rbp), %rcx
000000010002e8ff	movq	%rcx, -0x7a0(%rbp)
000000010002e906	movq	%rax, -0x7a8(%rbp)
000000010002e90d	movq	-0x11b8(%rbp), %r13
000000010002e914	cmpw	$0x2, -0x11b0(%rbp)
000000010002e91c	je	0x10002e927
000000010002e91e	movq	-0x11c0(%rbp), %rax
000000010002e925	jmp	0x10002e929
000000010002e927	xorl	%eax, %eax
000000010002e929	movq	0x18(%r12), %rcx
000000010002e92e	movq	%rcx, -0x3c8(%rbp)
000000010002e935	movq	0x10(%r12), %rcx
000000010002e93a	movq	%rcx, -0x3d0(%rbp)
000000010002e941	movq	(%r12), %rcx
000000010002e945	movq	0x8(%r12), %rdx
000000010002e94a	movq	%rdx, -0x3d8(%rbp)
000000010002e951	movq	%rcx, -0x3e0(%rbp)
000000010002e958	movq	-0x68(%rbp), %rcx
000000010002e95c	movq	%rcx, -0x3c0(%rbp)
000000010002e963	movq	%rax, -0x3b8(%rbp)
000000010002e96a	movq	%r13, -0x3b0(%rbp)
000000010002e971	movq	-0xb0(%rbp), %rax
000000010002e978	movq	0x20(%rax), %rbx
000000010002e97c	leaq	-0x3e0(%rbp), %rsi
000000010002e983	movq	-0xa0(%rbp), %rdi
000000010002e98a	callq	*%rbx
000000010002e98c	leaq	-0x11f0(%rbp), %r15
000000010002e993	leaq	-0xbd0(%rbp), %r14
000000010002e99a	jmp	0x10002ea02
000000010002e99c	movq	-0x11c0(%rbp), %rax
000000010002e9a3	movq	-0x11b8(%rbp), %r13
000000010002e9aa	movq	0x18(%r12), %rcx
000000010002e9af	movq	%rcx, -0x3c8(%rbp)
000000010002e9b6	movq	0x10(%r12), %rcx
000000010002e9bb	movq	%rcx, -0x3d0(%rbp)
000000010002e9c2	movq	(%r12), %rcx
000000010002e9c6	movq	0x8(%r12), %rdx
000000010002e9cb	movq	%rdx, -0x3d8(%rbp)
000000010002e9d2	movq	%rcx, -0x3e0(%rbp)
000000010002e9d9	movq	-0x68(%rbp), %rcx
000000010002e9dd	movq	%rcx, -0x3c0(%rbp)
000000010002e9e4	movq	%rax, -0x3b8(%rbp)
000000010002e9eb	movq	%r13, -0x3b0(%rbp)
000000010002e9f2	movq	-0xa0(%rbp), %rdi
000000010002e9f9	leaq	-0x3e0(%rbp), %rsi
000000010002ea00	callq	*%rbx
000000010002ea02	movq	%r15, %rdi
000000010002ea05	movq	%r14, %rsi
000000010002ea08	callq	__ZN9addr2line18FrameIter$LT$R$GT$4next17h4ac2d1180244da85E ## addr2line::FrameIter$LT$R$GT$::next::h4ac2d1180244da85
000000010002ea0d	cmpl	$0x2, -0x11f0(%rbp)
000000010002ea14	jae	0x10002ea7f
000000010002ea16	movq	-0x11c8(%rbp), %rax
000000010002ea1d	movq	%rax, -0x780(%rbp)
000000010002ea24	movq	-0x11d0(%rbp), %rax
000000010002ea2b	movq	%rax, -0x788(%rbp)
000000010002ea32	movq	-0x11d8(%rbp), %rax
000000010002ea39	movq	%rax, -0x790(%rbp)
000000010002ea40	movq	-0x11e0(%rbp), %rax
000000010002ea47	movq	%rax, -0x798(%rbp)
000000010002ea4e	movq	-0x11f0(%rbp), %rax
000000010002ea55	movq	-0x11e8(%rbp), %rcx
000000010002ea5c	movq	%rcx, -0x7a0(%rbp)
000000010002ea63	movq	%rax, -0x7a8(%rbp)
000000010002ea6a	cmpw	$0x2, -0x11b0(%rbp)
000000010002ea72	jne	0x10002e99c
000000010002ea78	xorl	%eax, %eax
000000010002ea7a	jmp	0x10002e9aa
000000010002ea7f	movb	$0x1, %r12b
000000010002ea82	movl	-0xbd0(%rbp), %eax
000000010002ea88	addl	$-0x3, %eax
000000010002ea8b	cmpl	$0x2, %eax
000000010002ea8e	movq	-0x48(%rbp), %rbx
000000010002ea92	jb	0x10002d2e0
000000010002ea98	movq	-0xb90(%rbp), %rsi
000000010002ea9f	testq	%rsi, %rsi
000000010002eaa2	je	0x10002d2e0
000000010002eaa8	movq	-0xb98(%rbp), %rdi
000000010002eaaf	shlq	$0x3, %rsi
000000010002eab3	movl	$0x8, %edx
000000010002eab8	callq	___rust_dealloc
000000010002eabd	jmp	0x10002d2e0
000000010002eac2	movq	-0x3e0(%rbp), %rax
000000010002eac9	movq	%rax, -0x30(%rbp)
000000010002eacd	movq	-0x3d8(%rbp), %r12
000000010002ead4	leaq	-0x3a0(%rbp), %r13
000000010002eadb	movq	-0x30(%r13), %rax
000000010002eadf	movq	-0x28(%r13), %rcx
000000010002eae3	movq	%rax, -0x110(%rbp)
000000010002eaea	movq	%rcx, -0x108(%rbp)
000000010002eaf1	movq	-0x20(%r13), %rax
000000010002eaf5	movq	%rax, -0x100(%rbp)
000000010002eafc	movq	-0x18(%r13), %rax
000000010002eb00	movq	%rax, -0xf8(%rbp)
000000010002eb07	movq	-0x10(%r13), %rax
000000010002eb0b	movq	%rax, -0xf0(%rbp)
000000010002eb12	movq	-0x8(%r13), %rax
000000010002eb16	movq	%rax, -0xe8(%rbp)
000000010002eb1d	leaq	-0xdd0(%rbp), %rdi
000000010002eb24	movl	$0x200, %edx                    ## imm = 0x200
000000010002eb29	movq	%r13, %rsi
000000010002eb2c	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002eb31	movl	0x201(%r13), %eax
000000010002eb38	movl	0x204(%r13), %ecx
000000010002eb3f	movl	%eax, -0xa8(%rbp)
000000010002eb45	movl	%ecx, -0xa5(%rbp)
000000010002eb4b	movq	-0x158(%rbp), %rsi
000000010002eb52	testq	%rsi, %rsi
000000010002eb55	je	0x10002eb68
000000010002eb57	movq	-0x160(%rbp), %rdi
000000010002eb5e	movl	$0x1, %edx
000000010002eb63	callq	___rust_dealloc
000000010002eb68	movq	-0x140(%rbp), %rsi
000000010002eb6f	testq	%rsi, %rsi
000000010002eb72	je	0x10002eb85
000000010002eb74	movq	-0x148(%rbp), %rdi
000000010002eb7b	movl	$0x1, %edx
000000010002eb80	callq	___rust_dealloc
000000010002eb85	movq	-0x11f0(%rbp), %rdi
000000010002eb8c	lock
000000010002eb8d	decq	(%rdi)
000000010002eb90	jne	0x10002eb97
000000010002eb92	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h1558324c17e3bf2eE ## alloc::sync::Arc$LT$T$GT$::drop_slow::h1558324c17e3bf2e
000000010002eb97	movq	-0x30(%rbp), %r13
000000010002eb9b	movq	-0x120(%rbp), %rdi
000000010002eba2	lock
000000010002eba3	decq	(%rdi)
000000010002eba6	je	0x10002de72
000000010002ebac	jmp	0x10002de77
000000010002ebb1	xorl	%ebx, %ebx
000000010002ebb3	leaq	0x15136(%rip), %r14
000000010002ebba	movl	$0x1, %ecx
000000010002ebbf	xorl	%edx, %edx
000000010002ebc1	xorl	%eax, %eax
000000010002ebc3	jmp	0x10002e15f
000000010002ebc8	movzwl	(%rax), %eax
000000010002ebcb	cmpl	$0x2f2f, %eax                   ## imm = 0x2F2F
000000010002ebd0	jne	0x10002e159
000000010002ebd6	movq	-0xdb0(%rbp), %rdx
000000010002ebdd	movq	-0xda8(%rbp), %rcx
000000010002ebe4	movq	-0x30(%rbp), %rdi
000000010002ebe8	movq	-0x38(%rbp), %rsi
000000010002ebec	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002ebf1	movq	%rax, -0x50(%rbp)
000000010002ebf5	cmpq	$0x0, -0x50(%rbp)
000000010002ebfa	je	0x10002e628
000000010002ec00	movq	-0x560(%rbp), %r14
000000010002ec07	jmp	0x10002e15b
000000010002ec0c	movdqu	(%rax), %xmm0
000000010002ec10	pcmpeqb	0x15028(%rip), %xmm0
000000010002ec18	pmovmskb	%xmm0, %eax
000000010002ec1c	cmpl	$0xffff, %eax                   ## imm = 0xFFFF
000000010002ec21	jne	0x10002e159
000000010002ec27	jmp	0x10002ed12
000000010002ec2c	movzwl	0x4(%rax), %ecx
000000010002ec30	movzbl	0x6(%rax), %edx
000000010002ec34	shll	$0x10, %edx
000000010002ec37	orl	%ecx, %edx
000000010002ec39	shlq	$0x20, %rdx
000000010002ec3d	movl	(%rax), %eax
000000010002ec3f	orq	%rdx, %rax
000000010002ec42	movabsq	$0x2f34364d59532f, %rcx         ## imm = 0x2F34364D59532F
000000010002ec4c	cmpq	%rcx, %rax
000000010002ec4f	jne	0x10002e159
000000010002ec55	leaq	-0xdd0(%rbp), %rdi
000000010002ec5c	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002ec61	movq	%rbx, %rax
000000010002ec64	movq	-0x560(%rbp), %rcx
000000010002ec6b	movq	%rcx, %r14
000000010002ec6e	cmpq	%rax, %rcx
000000010002ec71	jae	0x10002e159
000000010002ec77	leaq	0x15072(%rip), %r8
000000010002ec7e	leaq	-0x3e0(%rbp), %rdi
000000010002ec85	leaq	-0x560(%rbp), %rcx
000000010002ec8c	movq	-0x30(%rbp), %rsi
000000010002ec90	movq	-0x38(%rbp), %rdx
000000010002ec94	movq	%r8, -0x50(%rbp)
000000010002ec98	xorl	%r9d, %r9d
000000010002ec9b	callq	__ZN6object4read7archive13ArchiveMember5parse17hefb02c9169bf7bc9E ## object::read::archive::ArchiveMember::parse::hefb02c9169bf7bc9
000000010002eca0	cmpl	$0x2, -0x3e0(%rbp)
000000010002eca7	je	0x10002e628
000000010002ecad	cmpq	$0x2, -0x3c8(%rbp)
000000010002ecb5	jne	0x10002e159
000000010002ecbb	movq	-0x3d0(%rbp), %rax
000000010002ecc2	movzwl	(%rax), %eax
000000010002ecc5	cmpl	$0x2f2f, %eax                   ## imm = 0x2F2F
000000010002ecca	jne	0x10002e159
000000010002ecd0	movq	-0x3c0(%rbp), %rdx
000000010002ecd7	movq	-0x3b8(%rbp), %rcx
000000010002ecde	movq	-0x30(%rbp), %rdi
000000010002ece2	movq	-0x38(%rbp), %rsi
000000010002ece6	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002eceb	movq	%rax, -0x50(%rbp)
000000010002ecef	jmp	0x10002ebf5
000000010002ecf4	movzbl	0x8(%rax), %ecx
000000010002ecf8	movabsq	$0x45444d59532e5f5f, %rdx       ## imm = 0x45444D59532E5F5F
000000010002ed02	xorq	(%rax), %rdx
000000010002ed05	xorq	$0x46, %rcx
000000010002ed09	orq	%rdx, %rcx
000000010002ed0c	jne	0x10002e159
000000010002ed12	leaq	-0xdd0(%rbp), %rdi
000000010002ed19	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002ed1e	jmp	0x10002ed7a
000000010002ed20	movl	0x8(%rax), %ecx
000000010002ed23	movabsq	$0x45444d59532e5f5f, %rdx       ## imm = 0x45444D59532E5F5F
000000010002ed2d	xorq	(%rax), %rdx
000000010002ed30	xorq	$0x34365f46, %rcx               ## imm = 0x34365F46
000000010002ed37	orq	%rdx, %rcx
000000010002ed3a	jne	0x10002e159
000000010002ed40	jmp	0x10002ed6e
000000010002ed42	movdqu	(%rax), %xmm0
000000010002ed46	movdqu	0x3(%rax), %xmm1
000000010002ed4b	pcmpeqb	0x14ecd(%rip), %xmm1
000000010002ed53	pcmpeqb	0x14ed5(%rip), %xmm0
000000010002ed5b	pand	%xmm1, %xmm0
000000010002ed5f	pmovmskb	%xmm0, %eax
000000010002ed63	cmpl	$0xffff, %eax                   ## imm = 0xFFFF
000000010002ed68	jne	0x10002e159
000000010002ed6e	leaq	-0xdd0(%rbp), %rdi
000000010002ed75	callq	__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE ## object::read::coff::import::ImportObjectData::export::h9100e1679730002b
000000010002ed7a	movq	-0x560(%rbp), %r14
000000010002ed81	jmp	0x10002e159
000000010002ed86	movq	-0x3c0(%rbp), %rdx
000000010002ed8d	movq	-0x3b8(%rbp), %rcx
000000010002ed94	movq	-0x30(%rbp), %rdi
000000010002ed98	movq	-0x38(%rbp), %rsi
000000010002ed9c	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002eda1	movq	-0x40(%rbp), %r12
000000010002eda5	movq	-0x58(%rbp), %r15
000000010002eda9	movq	%rax, %r14
000000010002edac	testq	%rax, %rax
000000010002edaf	je	0x10002e630
000000010002edb5	movq	%rdx, %rbx
000000010002edb8	cmpq	$0x14, %rdx
000000010002edbc	jb	0x10002e630
000000010002edc2	movl	$0x14, %esi
000000010002edc7	movq	%r14, %rdi
000000010002edca	movl	$0xa, %edx
000000010002edcf	callq	__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E ## object::read::archive::parse_u64_digits::h40925664de1133d8
000000010002edd4	testq	%rax, %rax
000000010002edd7	je	0x10002e630
000000010002eddd	movq	%rdx, %rsi
000000010002ede0	movl	$0x14, %ecx
000000010002ede5	movq	%rdx, %rax
000000010002ede8	mulq	%rcx
000000010002edeb	jo	0x10002e630
000000010002edf1	addq	$-0x14, %rbx
000000010002edf5	cmpq	%rbx, %rax
000000010002edf8	ja	0x10002e630
000000010002edfe	movq	%rsi, %rbx
000000010002ee01	addq	$0x14, %r14
000000010002ee05	jmp	0x10002ebba
000000010002ee0a	leaq	0x19967(%rip), %rax
000000010002ee11	movl	$0x10, %esi
000000010002ee16	movq	%rdx, %rdi
000000010002ee19	movq	%rax, %rdx
000000010002ee1c	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010002ee21	jmp	0x10002eea1
000000010002ee23	movl	%r15d, %edi
000000010002ee26	callq	0x100042760                     ## symbol stub for: __dyld_get_image_vmaddr_slide
000000010002ee2b	xorl	%esi, %esi
000000010002ee2d	xorl	%edi, %edi
000000010002ee2f	leaq	0x1a81a(%rip), %rdx
000000010002ee36	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010002ee3b	jmp	0x10002eea1
000000010002ee3d	movl	$0x8, %edi
000000010002ee42	movl	$0x940, %esi                    ## imm = 0x940
000000010002ee47	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002ee4c	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010002ee51	jmp	0x10002eea1
000000010002ee53	movl	$0x1, %edi
000000010002ee58	movq	%r14, %rsi
000000010002ee5b	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002ee60	jmp	0x10002eea1
000000010002ee62	movzwl	(%rax), %eax
000000010002ee65	cmpl	$0x2f2f, %eax                   ## imm = 0x2F2F
000000010002ee6a	jne	0x10002e159
000000010002ee70	movq	-0x788(%rbp), %rdx
000000010002ee77	movq	-0x780(%rbp), %rcx
000000010002ee7e	movq	-0x30(%rbp), %rdi
000000010002ee82	movq	-0x38(%rbp), %rsi
000000010002ee86	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002ee8b	movq	%rax, -0x50(%rbp)
000000010002ee8f	jmp	0x10002ebf5
000000010002ee94	movl	$0x1, %edi
000000010002ee99	movq	%r12, %rsi
000000010002ee9c	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002eea1	ud2
000000010002eea3	jmp	0x10002f0ef
000000010002eea8	movq	%rax, %r12
000000010002eeab	movq	%r13, %rdi
000000010002eeae	movq	%rbx, %rsi
000000010002eeb1	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002eeb6	movq	-0x30(%rbp), %rdi
000000010002eeba	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002eebf	jmp	0x10002f085
000000010002eec4	jmp	0x10002f082
000000010002eec9	movq	%rax, %r12
000000010002eecc	movq	%r13, %rdi
000000010002eecf	movq	%rbx, %rsi
000000010002eed2	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002eed7	movq	-0x30(%rbp), %rdi
000000010002eedb	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002eee0	jmp	0x10002f0f2
000000010002eee5	movq	%rax, %r12
000000010002eee8	movq	%r13, %rdi
000000010002eeeb	movq	%rbx, %rsi
000000010002eeee	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002eef3	movq	-0x30(%rbp), %rdi
000000010002eef7	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002eefc	jmp	0x10002f091
000000010002ef01	movq	%r12, %r15
000000010002ef04	movq	%rax, %r12
000000010002ef07	movq	%r13, %rdi
000000010002ef0a	movq	%rbx, %rsi
000000010002ef0d	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524a1279091026d6E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h524a1279091026d6
000000010002ef12	movq	%r15, %rdi
000000010002ef15	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h791ccda2a6dcbdf8E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h791ccda2a6dcbdf8
000000010002ef1a	jmp	0x10002f13b
000000010002ef1f	movq	%rax, %r12
000000010002ef22	cmpb	$0x2, -0x1a0(%rbp)
000000010002ef29	je	0x10002f0f2
000000010002ef2f	leaq	-0x3e0(%rbp), %rdi
000000010002ef36	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002ef3b	jmp	0x10002f0f2
000000010002ef40	jmp	0x10002f0b2
000000010002ef45	movq	%rax, %r12
000000010002ef48	leaq	-0x7a8(%rbp), %rdi
000000010002ef4f	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002ef54	jmp	0x10002f249
000000010002ef59	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002ef5e	movq	%rax, %r12
000000010002ef61	leaq	-0xbd0(%rbp), %rdi
000000010002ef68	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010002ef6d	jmp	0x10002f0a4
000000010002ef72	movq	%rax, %r12
000000010002ef75	jmp	0x10002f0a4
000000010002ef7a	movq	%rax, %r12
000000010002ef7d	leaq	-0xbd0(%rbp), %rdi
000000010002ef84	callq	__ZN4core3ptr81drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$17h0551552d0710d049E ## core::ptr::drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$::h0551552d0710d049
000000010002ef89	jmp	0x10002f249
000000010002ef8e	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002ef93	movq	%rax, %r12
000000010002ef96	jmp	0x10002f091
000000010002ef9b	jmp	0x10002f0b2
000000010002efa0	jmp	0x10002f163
000000010002efa5	movq	%rax, %r12
000000010002efa8	movq	-0x30(%rbp), %rax
000000010002efac	movq	%rax, (%r15)
000000010002efaf	movq	-0x38(%rbp), %rax
000000010002efb3	movq	%rax, 0x8(%r15)
000000010002efb7	movq	-0x4e0(%rbp), %rax
000000010002efbe	movq	-0x4d8(%rbp), %rcx
000000010002efc5	movq	%rax, 0x10(%r15)
000000010002efc9	movq	%rcx, 0x18(%r15)
000000010002efcd	movq	-0x4d0(%rbp), %rax
000000010002efd4	movq	%rax, 0x20(%r15)
000000010002efd8	movq	-0x4c8(%rbp), %rax
000000010002efdf	movq	%rax, 0x28(%r15)
000000010002efe3	movq	-0x4c0(%rbp), %rax
000000010002efea	movq	%rax, 0x30(%r15)
000000010002efee	movq	-0x4b8(%rbp), %rax
000000010002eff5	movq	%rax, 0x38(%r15)
000000010002eff9	leaq	0x40(%r15), %rdi
000000010002effd	leaq	-0x11f0(%rbp), %rsi
000000010002f004	movl	$0x200, %edx                    ## imm = 0x200
000000010002f009	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010002f00e	movb	%r14b, 0x240(%r15)
000000010002f015	movl	-0x110(%rbp), %eax
000000010002f01b	movl	-0x10d(%rbp), %ecx
000000010002f021	movl	%eax, 0x241(%r15)
000000010002f028	movl	%ecx, 0x244(%r15)
000000010002f02f	movq	%r12, %rdi
000000010002f032	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002f037	movq	%rax, %r12
000000010002f03a	jmp	0x10002f066
000000010002f03c	movq	%rax, %r12
000000010002f03f	leaq	-0xbd0(%rbp), %rdi
000000010002f046	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010002f04b	jmp	0x10002f073
000000010002f04d	movq	%rax, %r12
000000010002f050	jmp	0x10002f073
000000010002f052	movq	%rax, %r12
000000010002f055	jmp	0x10002f0c1
000000010002f057	movq	%rax, %r12
000000010002f05a	leaq	-0x190(%rbp), %rdi
000000010002f061	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
000000010002f066	movq	-0x60(%rbp), %rdi
000000010002f06a	movq	-0x30(%rbp), %rsi
000000010002f06e	callq	__ZN4core3ptr68drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$17ha89d14fd8604304eE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$::ha89d14fd8604304e
000000010002f073	movq	%r13, %rdi
000000010002f076	callq	__ZN4core3ptr37drop_in_place$LT$std..fs..ReadDir$GT$17h35e65e90ca323d62E ## core::ptr::drop_in_place$LT$std..fs..ReadDir$GT$::h35e65e90ca323d62
000000010002f07b	jmp	0x10002f085
000000010002f07d	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f082	movq	%rax, %r12
000000010002f085	movq	-0x130(%rbp), %rdi
000000010002f08c	callq	__ZN4core3ptr37drop_in_place$LT$std..fs..ReadDir$GT$17h35e65e90ca323d62E ## core::ptr::drop_in_place$LT$std..fs..ReadDir$GT$::h35e65e90ca323d62
000000010002f091	leaq	-0x160(%rbp), %rdi
000000010002f098	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010002f09d	movq	-0x11f0(%rbp), %r13
000000010002f0a4	leaq	-0x148(%rbp), %rdi
000000010002f0ab	callq	__ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hc1c77bc4e5111ebaE ## core::ptr::drop_in_place$LT$std..path..PathBuf$GT$::hc1c77bc4e5111eba
000000010002f0b0	jmp	0x10002f0e0
000000010002f0b2	movq	%rax, %r12
000000010002f0b5	leaq	-0x1810(%rbp), %rdi
000000010002f0bc	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
000000010002f0c1	movq	-0x30(%rbp), %rdi
000000010002f0c5	movq	-0x38(%rbp), %rsi
000000010002f0c9	callq	__ZN4core3ptr68drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$17ha89d14fd8604304eE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$::ha89d14fd8604304e
000000010002f0ce	movq	%r12, %rdi
000000010002f0d1	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002f0d6	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f0db	jmp	0x10002f0dd
000000010002f0dd	movq	%rax, %r12
000000010002f0e0	movq	%r13, %rdi
000000010002f0e3	callq	__ZN4core3ptr37drop_in_place$LT$std..fs..ReadDir$GT$17h35e65e90ca323d62E ## core::ptr::drop_in_place$LT$std..fs..ReadDir$GT$::h35e65e90ca323d62
000000010002f0e8	jmp	0x10002f0f2
000000010002f0ea	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f0ef	movq	%rax, %r12
000000010002f0f2	movq	-0x120(%rbp), %rdi
000000010002f0f9	callq	__ZN4core3ptr37drop_in_place$LT$std..fs..ReadDir$GT$17h35e65e90ca323d62E ## core::ptr::drop_in_place$LT$std..fs..ReadDir$GT$::h35e65e90ca323d62
000000010002f0fe	jmp	0x10002f13b
000000010002f100	jmp	0x10002f138
000000010002f102	movq	%rax, %r12
000000010002f105	leaq	-0xdd0(%rbp), %rdi
000000010002f10c	callq	__ZN4core3ptr70drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$17h4686429efe241cceE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..stash..Stash$GT$::h4686429efe241cce
000000010002f111	jmp	0x10002f13b
000000010002f113	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f118	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f11d	jmp	0x10002f163
000000010002f11f	movq	%rax, %r12
000000010002f122	leaq	-0xbd0(%rbp), %rdi
000000010002f129	callq	__ZN4core3ptr81drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$17h0551552d0710d049E ## core::ptr::drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$::h0551552d0710d049
000000010002f12e	jmp	0x10002f249
000000010002f133	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f138	movq	%rax, %r12
000000010002f13b	movq	-0x48(%rbp), %rdi
000000010002f13f	movq	%r14, %rsi
000000010002f142	callq	__ZN4core3ptr68drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$17ha89d14fd8604304eE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..mmap..Mmap$GT$::ha89d14fd8604304e
000000010002f147	movq	%r12, %rdi
000000010002f14a	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002f14f	movq	%rax, %r12
000000010002f152	leaq	-0xbd0(%rbp), %rdi
000000010002f159	callq	__ZN4core3ptr95drop_in_place$LT$core..option..IntoIter$LT$std..backtrace_rs..symbolize..gimli..Library$GT$$GT$17h922bea2e76874aaeE ## core::ptr::drop_in_place$LT$core..option..IntoIter$LT$std..backtrace_rs..symbolize..gimli..Library$GT$$GT$::h922bea2e76874aae
000000010002f15e	jmp	0x10002f231
000000010002f163	movq	%rax, %r12
000000010002f166	leaq	-0xbd0(%rbp), %rdi
000000010002f16d	callq	__ZN4core3ptr125drop_in_place$LT$addr2line..FrameIter$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$17h3e355dae3e377447E ## core::ptr::drop_in_place$LT$addr2line..FrameIter$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$GT$$GT$::h3e355dae3e377447
000000010002f172	movq	%r12, %rdi
000000010002f175	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002f17a	movq	%rax, %r12
000000010002f17d	jmp	0x10002f231
000000010002f182	movq	%rax, %r12
000000010002f185	nopw	%cs:(%rax,%rax)
000000010002f18f	nop
000000010002f190	decq	%r15
000000010002f193	je	0x10002f1a9
000000010002f195	leaq	0x250(%r14), %r13
000000010002f19c	movq	%r14, %rdi
000000010002f19f	callq	__ZN4core3ptr81drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$17h0551552d0710d049E ## core::ptr::drop_in_place$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$::h0551552d0710d049
000000010002f1a4	movq	%r13, %r14
000000010002f1a7	jmp	0x10002f190
000000010002f1a9	movq	0x1d088(%rip), %rsi
000000010002f1b0	movq	%rbx, %rdi
000000010002f1b3	callq	__ZN4core3ptr111drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$17h9957532a1787f69eE ## core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$::h9957532a1787f69e
000000010002f1b8	movq	-0x15e8(%rbp), %rax
000000010002f1bf	movq	%rax, 0x1d07a(%rip)
000000010002f1c6	movq	-0x15f0(%rbp), %rax
000000010002f1cd	movq	%rax, 0x1d064(%rip)
000000010002f1d4	movq	-0x15f8(%rbp), %rax
000000010002f1db	movq	%rax, 0x1d04e(%rip)
000000010002f1e2	movq	-0x1600(%rbp), %rax
000000010002f1e9	movq	%rax, 0x1d038(%rip)
000000010002f1f0	movq	-0x1610(%rbp), %rax
000000010002f1f7	movq	-0x1608(%rbp), %rcx
000000010002f1fe	movq	%rcx, 0x1d01b(%rip)
000000010002f205	movq	%rax, __ZN3std12backtrace_rs9symbolize5gimli5Cache11with_global14MAPPINGS_CACHE17hb19181543a373ec3E(%rip) ## std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE::hb19181543a373ec3
000000010002f20c	movq	%r12, %rdi
000000010002f20f	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002f214	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f219	jmp	0x10002f21b
000000010002f21b	movq	%rax, %r12
000000010002f21e	movq	-0xbd0(%rbp), %rdi
000000010002f225	movq	-0xbc8(%rbp), %rsi
000000010002f22c	callq	__ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$17h36757e8e1ef2511bE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$::h36757e8e1ef2511b
000000010002f231	leaq	-0x11f0(%rbp), %rdi
000000010002f238	callq	__ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$std..backtrace_rs..symbolize..gimli..Library$GT$$GT$17h26fa6ebf89ebc43aE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$std..backtrace_rs..symbolize..gimli..Library$GT$$GT$::h26fa6ebf89ebc43a
000000010002f23d	leaq	-0x3e0(%rbp), %rdi
000000010002f244	callq	__ZN4core3ptr104drop_in_place$LT$alloc..vec..Vec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$17hc862c7dd52a825cdE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$LP$usize$C$std..backtrace_rs..symbolize..gimli..Mapping$RP$$GT$$GT$::hc862c7dd52a825cd
000000010002f249	movq	%r12, %rdi
000000010002f24c	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010002f251	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f256	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f25b	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010002f260	.byte 0x82 #bad opcode
000000010002f261	inl	%dx, %eax
000000010002f262	.byte 0xff #bad opcode
000000010002f263	ljmpl	*-0x7(%rax)
000000010002f266	.byte 0xff #bad opcode
000000010002f267	.byte 0xff #bad opcode
000000010002f268	sti
000000010002f269	outb	%al, %dx
000000010002f26a	.byte 0xff #bad opcode
000000010002f26b	.byte 0xff #bad opcode
000000010002f26c	sti
000000010002f26d	outb	%al, %dx
000000010002f26e	.byte 0xff #bad opcode
000000010002f26f	.byte 0xff #bad opcode
000000010002f270	sti
000000010002f271	outb	%al, %dx
000000010002f272	.byte 0xff #bad opcode
000000010002f273	.byte 0xff #bad opcode
000000010002f274	sti
000000010002f275	outb	%al, %dx
000000010002f276	.byte 0xff #bad opcode
000000010002f277	decl	%esp
000000010002f279	stc
000000010002f27a	.byte 0xff #bad opcode
000000010002f27b	.byte 0xff #bad opcode
000000010002f27c	sti
000000010002f27d	outb	%al, %dx
000000010002f27e	.byte 0xff #bad opcode
000000010002f27f	callq	*-0x11040001(%rdx,%rdi,8)
000000010002f286	.byte 0xff #bad opcode
000000010002f287	.byte 0xff #bad opcode
000000010002f288	sti
000000010002f289	outb	%al, %dx
000000010002f28a	.byte 0xff #bad opcode
000000010002f28b	incl	%eax
000000010002f28d	cli
000000010002f28e	.byte 0xff #bad opcode
000000010002f28f	.byte 0xff #bad opcode
000000010002f290	sti
000000010002f291	outb	%al, %dx
000000010002f292	.byte 0xff #bad opcode
000000010002f293	.byte 0xff #bad opcode
000000010002f294	sti
000000010002f295	outb	%al, %dx
000000010002f296	.byte 0xff #bad opcode
000000010002f297	.byte 0xff #bad opcode
000000010002f298	sti
000000010002f299	outb	%al, %dx
000000010002f29a	.byte 0xff #bad opcode
000000010002f29b	ljmpl	*-0x11040001(%rcx,%rdi,8)
000000010002f2a2	.byte 0xff #bad opcode
000000010002f2a3	.byte 0xff #bad opcode
000000010002f2a4	sti
000000010002f2a5	outb	%al, %dx
000000010002f2a6	.byte 0xff #bad opcode
000000010002f2a7	jmpq	*%rdx
000000010002f2a9	cli
000000010002f2aa	.byte 0xff #bad opcode
000000010002f2ab	decl	(%rdi)
000000010002f2ad	.byte 0x1f #bad opcode
000000010002f2ae	addb	%dl, 0x48(%rbp)
000000010002f2b2	movl	%esp, %ebp
000000010002f2b4	pushq	%r15
000000010002f2b6	pushq	%r14
000000010002f2b8	pushq	%r12
000000010002f2ba	pushq	%rbx
000000010002f2bb	movq	%rdi, %rbx
000000010002f2be	cmpq	$0x4, %rdx
000000010002f2c2	jae	0x10002f2d4
000000010002f2c4	movq	$0x0, (%rbx)
000000010002f2cb	popq	%rbx
000000010002f2cc	popq	%r12
000000010002f2ce	popq	%r14
000000010002f2d0	popq	%r15
000000010002f2d2	popq	%rbp
000000010002f2d3	retq
000000010002f2d4	movq	%rdx, %r15
000000010002f2d7	movq	%rsi, %r14
000000010002f2da	movl	(%rsi), %eax
000000010002f2dc	cmpl	$0xcefaedfd, %eax               ## imm = 0xCEFAEDFD
000000010002f2e1	jg	0x10002f306
000000010002f2e3	cmpl	$0xcafebabd, %eax               ## imm = 0xCAFEBABD
000000010002f2e8	jg	0x10002f373
000000010002f2ee	cmpl	$0xbebafeca, %eax               ## imm = 0xBEBAFECA
000000010002f2f3	je	0x10002f413
000000010002f2f9	cmpl	$0xbfbafeca, %eax               ## imm = 0xBFBAFECA
000000010002f2fe	je	0x10002f389
000000010002f304	jmp	0x10002f2c4
000000010002f306	leal	0x1120532(%rax), %ecx
000000010002f30c	cmpl	$0x2, %ecx
000000010002f30f	jb	0x10002f31f
000000010002f311	cmpl	$0xcefaedfe, %eax               ## imm = 0xCEFAEDFE
000000010002f316	je	0x10002f31f
000000010002f318	cmpl	$0xcffaedfe, %eax               ## imm = 0xCFFAEDFE
000000010002f31d	jne	0x10002f2c4
000000010002f31f	xorl	%r12d, %r12d
000000010002f322	movl	$0x20, %ecx
000000010002f327	movq	%r14, %rdi
000000010002f32a	movq	%r15, %rsi
000000010002f32d	xorl	%edx, %edx
000000010002f32f	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002f334	testq	%rax, %rax
000000010002f337	sete	%cl
000000010002f33a	cmpq	$0x20, %rdx
000000010002f33e	setb	%dl
000000010002f341	orb	%cl, %dl
000000010002f343	cmovneq	%r12, %rax
000000010002f347	jne	0x10002f2c4
000000010002f34d	movl	(%rax), %ecx
000000010002f34f	cmpl	$0xcffaedfe, %ecx               ## imm = 0xCFFAEDFE
000000010002f355	je	0x10002f363
000000010002f357	cmpl	$0xfeedfacf, %ecx               ## imm = 0xFEEDFACF
000000010002f35d	jne	0x10002f2c4
000000010002f363	movq	%rax, (%rbx)
000000010002f366	movq	%r14, 0x8(%rbx)
000000010002f36a	movq	%r15, 0x10(%rbx)
000000010002f36e	jmp	0x10002f2cb
000000010002f373	cmpl	$0xcafebabe, %eax               ## imm = 0xCAFEBABE
000000010002f378	je	0x10002f413
000000010002f37e	cmpl	$0xcafebabf, %eax               ## imm = 0xCAFEBABF
000000010002f383	jne	0x10002f2c4
000000010002f389	cmpq	$0x8, %r15
000000010002f38d	jb	0x10002f2c4
000000010002f393	movl	0x4(%r14), %eax
000000010002f397	testl	%eax, %eax
000000010002f399	je	0x10002f2c4
000000010002f39f	bswapl	%eax
000000010002f3a1	leaq	-0x8(%r15), %rdx
000000010002f3a5	leaq	0x8(%r14), %rcx
000000010002f3a9	xorl	%esi, %esi
000000010002f3ab	leaq	0x1493e(%rip), %rdi
000000010002f3b2	jmp	0x10002f3cb
000000010002f3b4	nopw	%cs:(%rax,%rax)
000000010002f3be	nop
000000010002f3c0	movq	%r8, %rcx
000000010002f3c3	decl	%eax
000000010002f3c5	je	0x10002f2c4
000000010002f3cb	leaq	0x20(%rcx), %r8
000000010002f3cf	subq	$0x20, %rdx
000000010002f3d3	cmovbq	%rdi, %r8
000000010002f3d7	cmovbq	%rsi, %rdx
000000010002f3db	jb	0x10002f3c0
000000010002f3dd	cmpl	$0x7000001, (%rcx)              ## imm = 0x7000001
000000010002f3e3	jne	0x10002f3c0
000000010002f3e5	movq	0x8(%rcx), %rax
000000010002f3e9	bswapq	%rax
000000010002f3ec	xorl	%edx, %edx
000000010002f3ee	subq	%rax, %r15
000000010002f3f1	cmovaeq	%r15, %rdx
000000010002f3f5	jb	0x10002f2c4
000000010002f3fb	movq	0x10(%rcx), %r15
000000010002f3ff	bswapq	%r15
000000010002f402	cmpq	%r15, %rdx
000000010002f405	jb	0x10002f2c4
000000010002f40b	addq	%rax, %r14
000000010002f40e	jmp	0x10002f31f
000000010002f413	cmpq	$0x8, %r15
000000010002f417	jb	0x10002f2c4
000000010002f41d	movl	0x4(%r14), %ecx
000000010002f421	testl	%ecx, %ecx
000000010002f423	je	0x10002f2c4
000000010002f429	bswapl	%ecx
000000010002f42b	leaq	-0x8(%r15), %rdx
000000010002f42f	leaq	0x8(%r14), %rax
000000010002f433	xorl	%esi, %esi
000000010002f435	leaq	0x148b4(%rip), %rdi
000000010002f43c	jmp	0x10002f44b
000000010002f43e	nop
000000010002f440	movq	%r8, %rax
000000010002f443	decl	%ecx
000000010002f445	je	0x10002f2c4
000000010002f44b	leaq	0x14(%rax), %r8
000000010002f44f	subq	$0x14, %rdx
000000010002f453	cmovbq	%rdi, %r8
000000010002f457	cmovbq	%rsi, %rdx
000000010002f45b	jb	0x10002f440
000000010002f45d	cmpl	$0x7000001, (%rax)              ## imm = 0x7000001
000000010002f463	jne	0x10002f440
000000010002f465	movl	0x8(%rax), %ecx
000000010002f468	bswapl	%ecx
000000010002f46a	xorl	%edx, %edx
000000010002f46c	subq	%rcx, %r15
000000010002f46f	cmovaeq	%r15, %rdx
000000010002f473	jb	0x10002f2c4
000000010002f479	movl	0xc(%rax), %r15d
000000010002f47d	bswapl	%r15d
000000010002f480	cmpq	%r15, %rdx
000000010002f483	jb	0x10002f2c4
000000010002f489	addq	%rcx, %r14
000000010002f48c	jmp	0x10002f31f
000000010002f491	nopw	%cs:(%rax,%rax)
000000010002f49b	nopl	(%rax,%rax)
__ZN3std12backtrace_rs9symbolize5gimli5macho6Object5parse17h07452ac8e8c16fe9E:
000000010002f4a0	pushq	%rbp
000000010002f4a1	movq	%rsp, %rbp
000000010002f4a4	pushq	%r15
000000010002f4a6	pushq	%r14
000000010002f4a8	pushq	%r13
000000010002f4aa	pushq	%r12
000000010002f4ac	pushq	%rbx
000000010002f4ad	subq	$0x158, %rsp                    ## imm = 0x158
000000010002f4b4	movq	%rcx, %rax
000000010002f4b7	movq	%rdx, %r8
000000010002f4ba	movq	%rdi, -0x130(%rbp)
000000010002f4c1	movl	0xc(%rsi), %ecx
000000010002f4c4	movl	%ecx, -0x80(%rbp)
000000010002f4c7	movl	0x10(%rsi), %ebx
000000010002f4ca	movl	0x14(%rsi), %ecx
000000010002f4cd	movl	$0x20, %edx
000000010002f4d2	movq	%r8, -0x58(%rbp)
000000010002f4d6	movq	%r8, %rdi
000000010002f4d9	movq	%rax, -0x60(%rbp)
000000010002f4dd	movq	%rax, %rsi
000000010002f4e0	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002f4e5	movq	%rdx, -0xe0(%rbp)
000000010002f4ec	movq	%rax, %r13
000000010002f4ef	testq	%rax, %rax
000000010002f4f2	je	0x10002fea2
000000010002f4f8	movq	$0x0, -0x120(%rbp)
000000010002f503	movq	$0x8, -0x98(%rbp)
000000010002f50e	xorl	%eax, %eax
000000010002f510	movq	%rax, -0x40(%rbp)
000000010002f514	movq	$0x0, -0x90(%rbp)
000000010002f51f	movq	$0x0, -0x88(%rbp)
000000010002f52a	movl	$0x8, %r12d
000000010002f530	movl	$0x0, %eax
000000010002f535	movq	%rax, -0x128(%rbp)
000000010002f53c	testl	%ebx, %ebx
000000010002f53e	je	0x10002febc
000000010002f544	movl	$0x0, %ecx
000000010002f549	movl	$0x0, %eax
000000010002f54e	movq	%rax, -0xd0(%rbp)
000000010002f555	cmpq	$0x8, -0xe0(%rbp)
000000010002f55d	jb	0x10002fec7
000000010002f563	movl	$0x8, %eax
000000010002f568	movq	%rax, -0x38(%rbp)
000000010002f56c	xorl	%eax, %eax
000000010002f56e	movq	%rax, -0xd0(%rbp)
000000010002f575	xorl	%eax, %eax
000000010002f577	movq	%rax, -0x128(%rbp)
000000010002f57e	xorl	%eax, %eax
000000010002f580	movq	%rax, -0x30(%rbp)
000000010002f584	xorl	%eax, %eax
000000010002f586	movq	%rax, -0x40(%rbp)
000000010002f58a	nopw	(%rax,%rax)
000000010002f590	movl	0x4(%r13), %r14d
000000010002f594	cmpq	$0x8, %r14
000000010002f598	jb	0x10002feb2
000000010002f59e	leaq	(%r13,%r14), %rdx
000000010002f5a3	movq	-0xe0(%rbp), %rax
000000010002f5aa	subq	%r14, %rax
000000010002f5ad	leaq	0x1473c(%rip), %rcx
000000010002f5b4	cmovbq	%rcx, %rdx
000000010002f5b8	movq	%rdx, -0x178(%rbp)
000000010002f5bf	movl	$0x0, %ecx
000000010002f5c4	cmovaeq	%rax, %rcx
000000010002f5c8	movq	%rcx, -0xe0(%rbp)
000000010002f5cf	jb	0x10002feb2
000000010002f5d5	movl	(%r13), %eax
000000010002f5d9	cmpl	$0x2, %eax
000000010002f5dc	je	0x10002f6b0
000000010002f5e2	cmpl	$0x19, %eax
000000010002f5e5	jne	0x10002f6a0
000000010002f5eb	cmpl	$0x48, %r14d
000000010002f5ef	jb	0x10003003e
000000010002f5f5	movl	%ebx, %r15d
000000010002f5f8	leaq	0x8(%r13), %r12
000000010002f5fc	movl	$0x10, %edx
000000010002f601	xorl	%edi, %edi
000000010002f603	movq	%r12, %rsi
000000010002f606	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
000000010002f60b	testq	%rax, %rax
000000010002f60e	movl	%r15d, %ebx
000000010002f611	je	0x10002f660
000000010002f613	cmpq	$0x10, %rdx
000000010002f617	ja	0x1000300c4
000000010002f61d	cmpq	$0x7, %rdx
000000010002f621	jne	0x10002f660
000000010002f623	movzwl	0x4(%r12), %eax
000000010002f629	movzbl	0x6(%r12), %ecx
000000010002f62f	shll	$0x10, %ecx
000000010002f632	orl	%eax, %ecx
000000010002f634	shlq	$0x20, %rcx
000000010002f638	movl	(%r12), %eax
000000010002f63c	orq	%rcx, %rax
000000010002f63f	movabsq	$0x46524157445f5f, %rcx         ## imm = 0x46524157445F5F
000000010002f649	cmpq	%rcx, %rax
000000010002f64c	je	0x10002fba1
000000010002f652	nopw	%cs:(%rax,%rax)
000000010002f65c	nopl	(%rax)
000000010002f660	cmpl	$0x1, -0x80(%rbp)
000000010002f664	jne	0x10002f6a0
000000010002f666	movl	$0x10, %edx
000000010002f66b	xorl	%edi, %edi
000000010002f66d	movq	%r12, %rsi
000000010002f670	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
000000010002f675	testq	%rax, %rax
000000010002f678	je	0x10002fbfb
000000010002f67e	cmpq	$0x11, %rdx
000000010002f682	jae	0x1000300c4
000000010002f688	testq	%rdx, %rdx
000000010002f68b	je	0x10002fba1
000000010002f691	movl	%r15d, %ebx
000000010002f694	nopw	%cs:(%rax,%rax)
000000010002f69e	nop
000000010002f6a0	movq	-0x30(%rbp), %rcx
000000010002f6a4	movq	-0x38(%rbp), %r12
000000010002f6a8	jmp	0x10002fe7f
000000010002f6ad	nopl	(%rax)
000000010002f6b0	movl	%ebx, -0x7c(%rbp)
000000010002f6b3	cmpl	$0x18, %r14d
000000010002f6b7	jb	0x10003003e
000000010002f6bd	movl	0x8(%r13), %edx
000000010002f6c1	movl	0xc(%r13), %ebx
000000010002f6c5	movq	%rbx, %r12
000000010002f6c8	shlq	$0x4, %r12
000000010002f6cc	movq	-0x58(%rbp), %rdi
000000010002f6d0	movq	-0x60(%rbp), %rsi
000000010002f6d4	movq	%r12, %rcx
000000010002f6d7	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002f6dc	movq	%rax, %r15
000000010002f6df	testq	%rax, %rax
000000010002f6e2	je	0x10003003e
000000010002f6e8	cmpq	%rdx, %r12
000000010002f6eb	ja	0x10003003e
000000010002f6f1	movl	0x10(%r13), %eax
000000010002f6f5	movl	0x14(%r13), %ecx
000000010002f6f9	movq	%rax, -0xf0(%rbp)
000000010002f700	addq	%rax, %rcx
000000010002f703	movq	%rcx, -0xe8(%rbp)
000000010002f70a	movq	%rbx, %rax
000000010002f70d	shlq	$0x4, %rax
000000010002f711	addq	%r15, %rax
000000010002f714	movq	%rax, -0xd8(%rbp)
000000010002f71b	testq	%rbx, %rbx
000000010002f71e	je	0x10002f8b0
000000010002f724	leaq	0x10(%r15), %r14
000000010002f728	jmp	0x10002f73e
000000010002f72a	nopw	(%rax,%rax)
000000010002f730	addq	$0x10, %r14
000000010002f734	addq	$-0x10, %r12
000000010002f738	je	0x10002f8b0
000000010002f73e	movl	-0x10(%r14), %edx
000000010002f742	addq	-0xf0(%rbp), %rdx
000000010002f749	movq	-0x58(%rbp), %rdi
000000010002f74d	movq	-0x60(%rbp), %rsi
000000010002f751	movq	-0xe8(%rbp), %rcx
000000010002f758	xorl	%r8d, %r8d
000000010002f75b	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$19read_bytes_at_until17h2b3b114afce0bebaE ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at_until::h2b3b114afce0beba
000000010002f760	movq	%rax, %r13
000000010002f763	testq	%rax, %rax
000000010002f766	je	0x10002f730
000000010002f768	movq	%rdx, %rbx
000000010002f76b	testq	%rdx, %rdx
000000010002f76e	je	0x10002f730
000000010002f770	movzbl	-0xc(%r14), %eax
000000010002f775	cmpb	$0x1f, %al
000000010002f777	ja	0x10002f730
000000010002f779	andb	$0xe, %al
000000010002f77b	je	0x10002f730
000000010002f77d	movq	-0x8(%r14), %rax
000000010002f781	movq	%rax, -0x40(%rbp)
000000010002f785	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010002f78c	movzbl	(%rax), %eax
000000010002f78f	movl	$0x60, %edi
000000010002f794	movl	$0x8, %esi
000000010002f799	callq	___rust_alloc
000000010002f79e	testq	%rax, %rax
000000010002f7a1	je	0x1000300dd
000000010002f7a7	movq	%r13, (%rax)
000000010002f7aa	movq	%rbx, 0x8(%rax)
000000010002f7ae	movq	-0x40(%rbp), %rcx
000000010002f7b2	movq	%rcx, 0x10(%rax)
000000010002f7b6	movq	%rax, -0xc8(%rbp)
000000010002f7bd	movq	$0x4, -0xc0(%rbp)
000000010002f7c8	movq	$0x1, -0xb8(%rbp)
000000010002f7d3	cmpq	$0x10, %r12
000000010002f7d7	je	0x10002fd53
000000010002f7dd	movq	%rax, -0x40(%rbp)
000000010002f7e1	movl	$0x1, %r13d
000000010002f7e7	jmp	0x10002f801
000000010002f7e9	nopl	(%rax)
000000010002f7f0	addq	$0x10, %r14
000000010002f7f4	cmpq	-0xd8(%rbp), %r14
000000010002f7fb	je	0x10002fd59
000000010002f801	movl	(%r14), %edx
000000010002f804	addq	-0xf0(%rbp), %rdx
000000010002f80b	movq	-0x58(%rbp), %rdi
000000010002f80f	movq	-0x60(%rbp), %rsi
000000010002f813	movq	-0xe8(%rbp), %rcx
000000010002f81a	xorl	%r8d, %r8d
000000010002f81d	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$19read_bytes_at_until17h2b3b114afce0bebaE ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at_until::h2b3b114afce0beba
000000010002f822	movq	%rax, %rbx
000000010002f825	testq	%rax, %rax
000000010002f828	je	0x10002f7f0
000000010002f82a	movq	%rdx, %r12
000000010002f82d	testq	%rdx, %rdx
000000010002f830	je	0x10002f7f0
000000010002f832	movzbl	0x4(%r14), %eax
000000010002f837	cmpb	$0x1f, %al
000000010002f839	ja	0x10002f7f0
000000010002f83b	andb	$0xe, %al
000000010002f83d	je	0x10002f7f0
000000010002f83f	movq	0x8(%r14), %rax
000000010002f843	movq	%rax, -0x48(%rbp)
000000010002f847	movq	%r13, %rsi
000000010002f84a	cmpq	-0xc0(%rbp), %r13
000000010002f851	jne	0x10002f872
000000010002f853	movl	$0x1, %edx
000000010002f858	leaq	-0xc8(%rbp), %rdi
000000010002f85f	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h46367eeffb1a12a2E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h46367eeffb1a12a2
000000010002f864	movq	-0xc8(%rbp), %rax
000000010002f86b	movq	%rax, -0x40(%rbp)
000000010002f86f	movq	%r13, %rsi
000000010002f872	addq	$0x10, %r14
000000010002f876	leaq	(%rsi,%rsi,2), %rax
000000010002f87a	movq	-0x40(%rbp), %rcx
000000010002f87e	movq	%rbx, (%rcx,%rax,8)
000000010002f882	movq	%r12, 0x8(%rcx,%rax,8)
000000010002f887	movq	-0x48(%rbp), %rdx
000000010002f88b	movq	%rdx, 0x10(%rcx,%rax,8)
000000010002f890	incq	%rsi
000000010002f893	movq	%rsi, -0xb8(%rbp)
000000010002f89a	cmpq	-0xd8(%rbp), %r14
000000010002f8a1	movq	%rsi, %r13
000000010002f8a4	jne	0x10002f801
000000010002f8aa	jmp	0x10002fd59
000000010002f8af	nop
000000010002f8b0	movl	$0x8, %r12d
000000010002f8b6	xorl	%ecx, %ecx
000000010002f8b8	xorl	%r13d, %r13d
000000010002f8bb	movq	-0x30(%rbp), %rax
000000010002f8bf	testq	%rax, %rax
000000010002f8c2	movq	%rcx, -0x48(%rbp)
000000010002f8c6	je	0x10002f8e2
000000010002f8c8	shlq	$0x3, %rax
000000010002f8cc	leaq	(%rax,%rax,2), %rsi
000000010002f8d0	movl	$0x8, %edx
000000010002f8d5	movq	-0x38(%rbp), %rdi
000000010002f8d9	callq	___rust_dealloc
000000010002f8de	movq	-0x48(%rbp), %rcx
000000010002f8e2	testq	%r13, %r13
000000010002f8e5	je	0x10002f8f1
000000010002f8e7	bsrq	%r13, %rax
000000010002f8eb	xorq	$0x3f, %rax
000000010002f8ef	jmp	0x10002f8f6
000000010002f8f1	movl	$0x40, %eax
000000010002f8f6	movl	$0x40, %r8d
000000010002f8fc	subl	%eax, %r8d
000000010002f8ff	cmpl	$0x1, -0x80(%rbp)
000000010002f903	movq	%r13, -0x40(%rbp)
000000010002f907	jne	0x10002f941
000000010002f909	leaq	-0x50(%rbp), %rax
000000010002f90d	movq	%rax, -0xc8(%rbp)
000000010002f914	movq	%rcx, -0x30(%rbp)
000000010002f918	movq	%r12, -0x38(%rbp)
000000010002f91c	movq	%r12, %rdi
000000010002f91f	movq	%r13, %rsi
000000010002f922	leaq	-0xc8(%rbp), %rdx
000000010002f929	xorl	%ecx, %ecx
000000010002f92b	callq	__ZN4core5slice4sort7recurse17hfe605e3d12d2a1d8E ## core::slice::sort::recurse::hfe605e3d12d2a1d8
000000010002f930	movb	$0x1, %al
000000010002f932	movq	%rax, -0x128(%rbp)
000000010002f939	movl	-0x7c(%rbp), %ebx
000000010002f93c	jmp	0x10002fe7b
000000010002f941	movq	%rcx, -0x30(%rbp)
000000010002f945	movq	%r12, -0x38(%rbp)
000000010002f949	movq	%r12, %rdi
000000010002f94c	movq	%r13, %rsi
000000010002f94f	xorl	%edx, %edx
000000010002f951	movl	%r8d, %ecx
000000010002f954	callq	__ZN4core5slice4sort7recurse17h6e6d81cd3b2631beE ## core::slice::sort::recurse::h6e6d81cd3b2631be
000000010002f959	movq	%r12, -0x38(%rbp)
000000010002f95d	movq	$0x8, -0x148(%rbp)
000000010002f968	leaq	-0x140(%rbp), %rax
000000010002f96f	movq	$0x0, 0x8(%rax)
000000010002f977	movq	$0x0, (%rax)
000000010002f97e	movq	$0x8, -0x78(%rbp)
000000010002f986	leaq	-0x70(%rbp), %rax
000000010002f98a	movq	$0x0, 0x8(%rax)
000000010002f992	movq	$0x0, (%rax)
000000010002f999	movl	$0x8, %eax
000000010002f99e	movq	%rax, -0x30(%rbp)
000000010002f9a2	xorl	%ebx, %ebx
000000010002f9a4	xorl	%ecx, %ecx
000000010002f9a6	xorl	%esi, %esi
000000010002f9a8	movq	%rcx, %r13
000000010002f9ab	movq	-0xd8(%rbp), %rcx
000000010002f9b2	nopw	%cs:(%rax,%rax)
000000010002f9bc	nopl	(%rax)
000000010002f9c0	movq	%r15, %r14
000000010002f9c3	cmpq	%rcx, %r15
000000010002f9c6	je	0x10002fb92
000000010002f9cc	leaq	0x10(%r14), %r15
000000010002f9d0	movzbl	0x4(%r14), %eax
000000010002f9d5	cmpl	$0x20, %eax
000000010002f9d8	jb	0x10002f9c0
000000010002f9da	cmpl	$0x24, %eax
000000010002f9dd	je	0x10002faa8
000000010002f9e3	cmpl	$0x64, %eax
000000010002f9e6	je	0x10002fa9e
000000010002f9ec	movq	%r13, %rcx
000000010002f9ef	cmpl	$0x66, %eax
000000010002f9f2	jne	0x10002f9a8
000000010002f9f4	movl	-0x10(%r15), %edx
000000010002f9f8	addq	-0xf0(%rbp), %rdx
000000010002f9ff	movq	-0x58(%rbp), %rdi
000000010002fa03	movq	-0x60(%rbp), %rsi
000000010002fa07	movq	-0xe8(%rbp), %rcx
000000010002fa0e	xorl	%r8d, %r8d
000000010002fa11	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$19read_bytes_at_until17h2b3b114afce0bebaE ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at_until::h2b3b114afce0beba
000000010002fa16	movq	%rdx, -0x158(%rbp)
000000010002fa1d	movq	%rax, %r12
000000010002fa20	movq	%r13, %rcx
000000010002fa23	movl	$0x0, %esi
000000010002fa28	testq	%r12, %r12
000000010002fa2b	je	0x10002f9a8
000000010002fa31	movq	%r13, %rcx
000000010002fa34	movl	$0x0, %esi
000000010002fa39	cmpq	$0x0, -0x158(%rbp)
000000010002fa41	je	0x10002f9a8
000000010002fa47	movq	-0x68(%rbp), %rcx
000000010002fa4b	movq	%rcx, %rax
000000010002fa4e	movq	%rcx, -0x150(%rbp)
000000010002fa55	cmpq	-0x70(%rbp), %rcx
000000010002fa59	jne	0x10002fa6f
000000010002fa5b	leaq	-0x78(%rbp), %rdi
000000010002fa5f	movq	-0x150(%rbp), %rsi
000000010002fa66	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h14d9ad67ad8f2594E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h14d9ad67ad8f2594
000000010002fa6b	movq	-0x68(%rbp), %rax
000000010002fa6f	movq	-0x78(%rbp), %rcx
000000010002fa73	movq	%rax, %rdx
000000010002fa76	shlq	$0x4, %rdx
000000010002fa7a	movq	%r12, (%rcx,%rdx)
000000010002fa7e	movq	-0x158(%rbp), %rsi
000000010002fa85	movq	%rsi, 0x8(%rcx,%rdx)
000000010002fa8a	incq	%rax
000000010002fa8d	movq	%rax, -0x68(%rbp)
000000010002fa91	movl	$0x1, %esi
000000010002fa96	movq	%r13, %rcx
000000010002fa99	jmp	0x10002f9a8
000000010002fa9e	movq	%r13, %rcx
000000010002faa1	xorl	%esi, %esi
000000010002faa3	jmp	0x10002f9a8
000000010002faa8	movq	%rsi, %r12
000000010002faab	movl	-0x10(%r15), %edx
000000010002faaf	addq	-0xf0(%rbp), %rdx
000000010002fab6	movq	-0x58(%rbp), %rdi
000000010002faba	movq	-0x60(%rbp), %rsi
000000010002fabe	movq	-0xe8(%rbp), %rcx
000000010002fac5	xorl	%r8d, %r8d
000000010002fac8	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$19read_bytes_at_until17h2b3b114afce0bebaE ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at_until::h2b3b114afce0beba
000000010002facd	movq	%r13, %rcx
000000010002fad0	testq	%rax, %rax
000000010002fad3	movq	%r12, %rsi
000000010002fad6	je	0x10002f9a8
000000010002fadc	testq	%rdx, %rdx
000000010002fadf	je	0x10002fafb
000000010002fae1	movq	-0x8(%r15), %rcx
000000010002fae5	movq	%rcx, -0x170(%rbp)
000000010002faec	movq	%rdx, -0x168(%rbp)
000000010002faf3	movq	%rax, %rcx
000000010002faf6	jmp	0x10002f9a8
000000010002fafb	movl	$0x0, %ecx
000000010002fb00	testq	%r13, %r13
000000010002fb03	je	0x10002f9a8
000000010002fb09	movl	$0x0, %ecx
000000010002fb0e	testq	%rsi, %rsi
000000010002fb11	je	0x10002f9a8
000000010002fb17	movq	-0x8(%r15), %r12
000000010002fb1b	cmpq	-0x140(%rbp), %rbx
000000010002fb22	jne	0x10002fb43
000000010002fb24	leaq	-0x148(%rbp), %rdi
000000010002fb2b	movq	%rbx, %rsi
000000010002fb2e	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hb8d64f4e71853b4cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hb8d64f4e71853b4c
000000010002fb33	movq	-0x148(%rbp), %rcx
000000010002fb3a	movq	-0x138(%rbp), %rbx
000000010002fb41	jmp	0x10002fb47
000000010002fb43	movq	-0x30(%rbp), %rcx
000000010002fb47	leaq	(%rbx,%rbx,4), %rax
000000010002fb4b	movq	%r13, (%rcx,%rax,8)
000000010002fb4f	movq	-0x168(%rbp), %rdx
000000010002fb56	movq	%rdx, 0x8(%rcx,%rax,8)
000000010002fb5b	movq	-0x170(%rbp), %rdx
000000010002fb62	movq	%rdx, 0x10(%rcx,%rax,8)
000000010002fb67	movq	%r12, 0x18(%rcx,%rax,8)
000000010002fb6c	movq	%rcx, -0x30(%rbp)
000000010002fb70	movq	-0x150(%rbp), %rdx
000000010002fb77	movq	%rdx, 0x20(%rcx,%rax,8)
000000010002fb7c	incq	%rbx
000000010002fb7f	movq	%rbx, -0x138(%rbp)
000000010002fb86	movl	$0x1, %esi
000000010002fb8b	xorl	%ecx, %ecx
000000010002fb8d	jmp	0x10002f9a8
000000010002fb92	testq	%rbx, %rbx
000000010002fb95	je	0x10002fc0b
000000010002fb97	bsrq	%rbx, %rax
000000010002fb9b	xorq	$0x3f, %rax
000000010002fb9f	jmp	0x10002fc10
000000010002fba1	addq	$-0x48, %r14
000000010002fba5	movl	0x40(%r13), %r12d
000000010002fba9	addq	$0x48, %r13
000000010002fbad	movq	%r12, %rax
000000010002fbb0	shlq	$0x4, %rax
000000010002fbb4	leaq	(%rax,%rax,4), %rbx
000000010002fbb8	movq	%r13, %rdi
000000010002fbbb	movq	%r14, %rsi
000000010002fbbe	xorl	%edx, %edx
000000010002fbc0	movq	%rbx, %rcx
000000010002fbc3	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
000000010002fbc8	movq	%rax, %rsi
000000010002fbcb	testq	%rax, %rax
000000010002fbce	setne	%al
000000010002fbd1	cmpq	%rdx, %rbx
000000010002fbd4	setbe	%cl
000000010002fbd7	testb	%cl, %al
000000010002fbd9	movq	-0x160(%rbp), %rax
000000010002fbe0	cmovneq	%r12, %rax
000000010002fbe4	movq	%rax, -0x160(%rbp)
000000010002fbeb	movl	$0x0, %eax
000000010002fbf0	cmoveq	%rax, %rsi
000000010002fbf4	movq	%rsi, -0xd0(%rbp)
000000010002fbfb	movq	-0x30(%rbp), %rcx
000000010002fbff	movq	-0x38(%rbp), %r12
000000010002fc03	movl	%r15d, %ebx
000000010002fc06	jmp	0x10002fe7f
000000010002fc0b	movl	$0x40, %eax
000000010002fc10	movq	-0x148(%rbp), %r12
000000010002fc17	movq	-0x140(%rbp), %r13
000000010002fc1e	movl	$0x40, %ecx
000000010002fc23	subl	%eax, %ecx
000000010002fc25	movq	%r12, %rdi
000000010002fc28	movq	%rbx, %rsi
000000010002fc2b	xorl	%edx, %edx
000000010002fc2d	callq	__ZN4core5slice4sort7recurse17h1d743a76ec258b0eE ## core::slice::sort::recurse::h1d743a76ec258b0e
000000010002fc32	movq	-0x68(%rbp), %rax
000000010002fc36	leaq	-0xb0(%rbp), %rdx
000000010002fc3d	movq	%rax, 0x10(%rdx)
000000010002fc41	movq	-0x78(%rbp), %rax
000000010002fc45	movq	-0x70(%rbp), %rcx
000000010002fc49	movq	%rcx, 0x8(%rdx)
000000010002fc4d	movq	%rax, (%rdx)
000000010002fc50	movq	%r12, -0xc8(%rbp)
000000010002fc57	movq	%r13, -0xc0(%rbp)
000000010002fc5e	movq	%rbx, -0xb8(%rbp)
000000010002fc65	movq	-0xa0(%rbp), %r15
000000010002fc6c	movq	-0x88(%rbp), %r14
000000010002fc73	movq	%r14, %r12
000000010002fc76	subq	%r15, %r12
000000010002fc79	jae	0x10002fcab
000000010002fc7b	movq	%r15, %rbx
000000010002fc7e	subq	%r14, %rbx
000000010002fc81	movq	-0x90(%rbp), %rax
000000010002fc88	subq	%r14, %rax
000000010002fc8b	cmpq	%rbx, %rax
000000010002fc8e	jae	0x10002fcf4
000000010002fc90	leaq	-0x98(%rbp), %rdi
000000010002fc97	movq	%r14, %rsi
000000010002fc9a	movq	%rbx, %rdx
000000010002fc9d	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h5a3f51c5336d5586E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h5a3f51c5336d5586
000000010002fca2	movq	-0x88(%rbp), %rax
000000010002fca9	jmp	0x10002fd00
000000010002fcab	movq	-0x98(%rbp), %rax
000000010002fcb2	movq	%r15, -0x88(%rbp)
000000010002fcb9	je	0x10002fdd5
000000010002fcbf	imulq	$0x248, %r15, %rcx              ## imm = 0x248
000000010002fcc6	leaq	0x248(%rax,%rcx), %rbx
000000010002fcce	jmp	0x10002fce0
000000010002fcd0	addq	$0x248, %rbx                    ## imm = 0x248
000000010002fcd7	decq	%r12
000000010002fcda	je	0x10002fdd5
000000010002fce0	cmpb	$0x1, -0x8(%rbx)
000000010002fce4	ja	0x10002fcd0
000000010002fce6	leaq	-0x248(%rbx), %rdi
000000010002fced	callq	__ZN4core3ptr65drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$17hcb816b1b5a636e0cE ## core::ptr::drop_in_place$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$::hcb816b1b5a636e0c
000000010002fcf2	jmp	0x10002fcd0
000000010002fcf4	movq	%r14, %rax
000000010002fcf7	testq	%rbx, %rbx
000000010002fcfa	je	0x10002fdce
000000010002fd00	movq	-0x98(%rbp), %rcx
000000010002fd07	notq	%r14
000000010002fd0a	addq	%r14, %r15
000000010002fd0d	movq	%rbx, %rdx
000000010002fd10	andq	$0x3, %rdx
000000010002fd14	je	0x10002fd7d
000000010002fd16	imulq	$0x248, %rax, %rsi              ## imm = 0x248
000000010002fd1d	leaq	0x240(%rcx,%rsi), %rdi
000000010002fd25	xorl	%esi, %esi
000000010002fd27	nopw	(%rax,%rax)
000000010002fd30	movb	$0x3, (%rdi)
000000010002fd33	incq	%rsi
000000010002fd36	addq	$0x248, %rdi                    ## imm = 0x248
000000010002fd3d	cmpq	%rsi, %rdx
000000010002fd40	jne	0x10002fd30
000000010002fd42	addq	%rsi, %rax
000000010002fd45	subq	%rsi, %rbx
000000010002fd48	movq	%rax, %r14
000000010002fd4b	cmpq	$0x3, %r15
000000010002fd4f	jae	0x10002fd83
000000010002fd51	jmp	0x10002fdce
000000010002fd53	movl	$0x1, %r13d
000000010002fd59	movq	-0xc8(%rbp), %r12
000000010002fd60	movq	-0xc0(%rbp), %rcx
000000010002fd67	movq	-0x30(%rbp), %rax
000000010002fd6b	testq	%rax, %rax
000000010002fd6e	movq	%rcx, -0x48(%rbp)
000000010002fd72	jne	0x10002f8c8
000000010002fd78	jmp	0x10002f8e2
000000010002fd7d	cmpq	$0x3, %r15
000000010002fd81	jb	0x10002fdce
000000010002fd83	imulq	$0x248, %rax, %rdx              ## imm = 0x248
000000010002fd8a	leaq	0x918(%rcx,%rdx), %rcx
000000010002fd92	negq	%rbx
000000010002fd95	xorl	%edx, %edx
000000010002fd97	nopw	(%rax,%rax)
000000010002fda0	movb	$0x3, -0x6d8(%rcx)
000000010002fda7	movb	$0x3, -0x490(%rcx)
000000010002fdae	movb	$0x3, -0x248(%rcx)
000000010002fdb5	movb	$0x3, (%rcx)
000000010002fdb8	addq	$-0x4, %rdx
000000010002fdbc	addq	$0x920, %rcx                    ## imm = 0x920
000000010002fdc3	cmpq	%rdx, %rbx
000000010002fdc6	jne	0x10002fda0
000000010002fdc8	subq	%rdx, %rax
000000010002fdcb	movq	%rax, %r14
000000010002fdce	movq	%r14, -0x88(%rbp)
000000010002fdd5	movq	-0x120(%rbp), %rdi
000000010002fddc	testq	%rdi, %rdi
000000010002fddf	movl	-0x7c(%rbp), %ebx
000000010002fde2	movq	-0x38(%rbp), %r12
000000010002fde6	je	0x10002fe27
000000010002fde8	movq	-0x118(%rbp), %rax
000000010002fdef	testq	%rax, %rax
000000010002fdf2	je	0x10002fe06
000000010002fdf4	shlq	$0x3, %rax
000000010002fdf8	leaq	(%rax,%rax,4), %rsi
000000010002fdfc	movl	$0x8, %edx
000000010002fe01	callq	___rust_dealloc
000000010002fe06	movq	-0x100(%rbp), %rsi
000000010002fe0d	testq	%rsi, %rsi
000000010002fe10	je	0x10002fe27
000000010002fe12	movq	-0x108(%rbp), %rdi
000000010002fe19	shlq	$0x4, %rsi
000000010002fe1d	movl	$0x8, %edx
000000010002fe22	callq	___rust_dealloc
000000010002fe27	movq	-0xa0(%rbp), %rax
000000010002fe2e	movq	%rax, -0xf8(%rbp)
000000010002fe35	movq	-0xa8(%rbp), %rax
000000010002fe3c	movq	%rax, -0x100(%rbp)
000000010002fe43	movq	-0xb0(%rbp), %rax
000000010002fe4a	movq	%rax, -0x108(%rbp)
000000010002fe51	movq	-0xb8(%rbp), %rax
000000010002fe58	movq	%rax, -0x110(%rbp)
000000010002fe5f	movq	-0xc8(%rbp), %rax
000000010002fe66	movq	-0xc0(%rbp), %rcx
000000010002fe6d	movq	%rcx, -0x118(%rbp)
000000010002fe74	movq	%rax, -0x120(%rbp)
000000010002fe7b	movq	-0x48(%rbp), %rcx
000000010002fe7f	decl	%ebx
000000010002fe81	je	0x10002fec7
000000010002fe83	movq	%r12, -0x38(%rbp)
000000010002fe87	movq	%rcx, -0x30(%rbp)
000000010002fe8b	movq	-0x178(%rbp), %r13
000000010002fe92	cmpq	$0x8, -0xe0(%rbp)
000000010002fe9a	jae	0x10002f590
000000010002fea0	jmp	0x10002fec7
000000010002fea2	movq	-0x130(%rbp), %rax
000000010002fea9	movb	$0x2, 0x78(%rax)
000000010002fead	jmp	0x10003002c
000000010002feb2	movq	-0x30(%rbp), %rcx
000000010002feb6	movq	-0x38(%rbp), %r12
000000010002feba	jmp	0x10002fec7
000000010002febc	xorl	%ecx, %ecx
000000010002febe	xorl	%eax, %eax
000000010002fec0	movq	%rax, -0xd0(%rbp)
000000010002fec7	movq	%rcx, %r13
000000010002feca	movq	-0xf8(%rbp), %rax
000000010002fed1	movq	%rax, -0xa0(%rbp)
000000010002fed8	movq	-0x100(%rbp), %rax
000000010002fedf	movq	%rax, -0xa8(%rbp)
000000010002fee6	movq	-0x108(%rbp), %rax
000000010002feed	movq	%rax, -0xb0(%rbp)
000000010002fef4	movq	-0x110(%rbp), %rax
000000010002fefb	movq	%rax, -0xb8(%rbp)
000000010002ff02	movq	-0x120(%rbp), %rax
000000010002ff09	movq	-0x118(%rbp), %rcx
000000010002ff10	movq	%rcx, -0xc0(%rbp)
000000010002ff17	movq	%rax, -0xc8(%rbp)
000000010002ff1e	movq	-0x88(%rbp), %r15
000000010002ff25	movq	%r15, -0x68(%rbp)
000000010002ff29	movq	-0x98(%rbp), %rcx
000000010002ff30	movq	-0x90(%rbp), %rax
000000010002ff37	movq	%rax, -0x70(%rbp)
000000010002ff3b	movq	%rcx, -0x78(%rbp)
000000010002ff3f	cmpq	%r15, %rax
000000010002ff42	jbe	0x10002ff82
000000010002ff44	movq	-0x78(%rbp), %rdi
000000010002ff48	imulq	$0x248, %rax, %rsi              ## imm = 0x248
000000010002ff4f	testq	%r15, %r15
000000010002ff52	je	0x10002ff88
000000010002ff54	imulq	$0x248, %r15, %r14              ## imm = 0x248
000000010002ff5b	movl	$0x8, %edx
000000010002ff60	movq	%r14, %rcx
000000010002ff63	callq	___rust_realloc
000000010002ff68	movq	%rax, %rbx
000000010002ff6b	testq	%rax, %rax
000000010002ff6e	jne	0x10002ff97
000000010002ff70	movl	$0x8, %edi
000000010002ff75	movq	%r14, %rsi
000000010002ff78	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010002ff7d	jmp	0x1000300ec
000000010002ff82	movq	-0x78(%rbp), %rbx
000000010002ff86	jmp	0x10002ff97
000000010002ff88	movl	$0x8, %ebx
000000010002ff8d	movl	$0x8, %edx
000000010002ff92	callq	___rust_dealloc
000000010002ff97	movq	-0x128(%rbp), %rsi
000000010002ff9e	andb	$0x1, %sil
000000010002ffa2	movq	-0xf8(%rbp), %rax
000000010002ffa9	movq	-0x130(%rbp), %rdx
000000010002ffb0	movq	%rax, 0x70(%rdx)
000000010002ffb4	movq	-0x100(%rbp), %rax
000000010002ffbb	movq	%rax, 0x68(%rdx)
000000010002ffbf	movq	-0x108(%rbp), %rax
000000010002ffc6	movq	%rax, 0x60(%rdx)
000000010002ffca	movq	-0x110(%rbp), %rax
000000010002ffd1	movq	%rax, 0x58(%rdx)
000000010002ffd5	movq	-0x120(%rbp), %rax
000000010002ffdc	movq	-0x118(%rbp), %rcx
000000010002ffe3	movq	%rcx, 0x50(%rdx)
000000010002ffe7	movq	%rax, 0x48(%rdx)
000000010002ffeb	movq	-0x58(%rbp), %rax
000000010002ffef	movq	%rax, (%rdx)
000000010002fff2	movq	-0x60(%rbp), %rax
000000010002fff6	movq	%rax, 0x8(%rdx)
000000010002fffa	movq	%r12, 0x10(%rdx)
000000010002fffe	movq	%r13, 0x18(%rdx)
0000000100030002	movq	-0x40(%rbp), %rax
0000000100030006	movq	%rax, 0x20(%rdx)
000000010003000a	movq	%rbx, 0x28(%rdx)
000000010003000e	movq	%r15, 0x30(%rdx)
0000000100030012	movq	-0xd0(%rbp), %rax
0000000100030019	movq	%rax, 0x38(%rdx)
000000010003001d	movq	-0x160(%rbp), %rax
0000000100030024	movq	%rax, 0x40(%rdx)
0000000100030028	movb	%sil, 0x78(%rdx)
000000010003002c	addq	$0x158, %rsp                    ## imm = 0x158
0000000100030033	popq	%rbx
0000000100030034	popq	%r12
0000000100030036	popq	%r13
0000000100030038	popq	%r14
000000010003003a	popq	%r15
000000010003003c	popq	%rbp
000000010003003d	retq
000000010003003e	movq	-0x130(%rbp), %rax
0000000100030045	movb	$0x2, 0x78(%rax)
0000000100030049	leaq	-0x98(%rbp), %rdi
0000000100030050	callq	__ZN4core3ptr144drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$17h9e38532c775e3fa5E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$::h9e38532c775e3fa5
0000000100030055	movq	-0x120(%rbp), %rdi
000000010003005c	testq	%rdi, %rdi
000000010003005f	movq	-0x30(%rbp), %rbx
0000000100030063	je	0x1000300a4
0000000100030065	movq	-0x118(%rbp), %rax
000000010003006c	testq	%rax, %rax
000000010003006f	je	0x100030083
0000000100030071	shlq	$0x3, %rax
0000000100030075	leaq	(%rax,%rax,4), %rsi
0000000100030079	movl	$0x8, %edx
000000010003007e	callq	___rust_dealloc
0000000100030083	movq	-0x100(%rbp), %rsi
000000010003008a	testq	%rsi, %rsi
000000010003008d	je	0x1000300a4
000000010003008f	movq	-0x108(%rbp), %rdi
0000000100030096	shlq	$0x4, %rsi
000000010003009a	movl	$0x8, %edx
000000010003009f	callq	___rust_dealloc
00000001000300a4	testq	%rbx, %rbx
00000001000300a7	je	0x10003002c
00000001000300a9	shlq	$0x3, %rbx
00000001000300ad	leaq	(%rbx,%rbx,2), %rsi
00000001000300b1	movl	$0x8, %edx
00000001000300b6	movq	-0x38(%rbp), %rdi
00000001000300ba	callq	___rust_dealloc
00000001000300bf	jmp	0x10003002c
00000001000300c4	leaq	0x186ad(%rip), %rax
00000001000300cb	movl	$0x10, %esi
00000001000300d0	movq	%rdx, %rdi
00000001000300d3	movq	%rax, %rdx
00000001000300d6	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
00000001000300db	jmp	0x1000300ec
00000001000300dd	movl	$0x8, %edi
00000001000300e2	movl	$0x60, %esi
00000001000300e7	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000300ec	ud2
00000001000300ee	movq	%rax, %r15
00000001000300f1	movq	-0xc8(%rbp), %rax
00000001000300f8	movq	%rax, -0x40(%rbp)
00000001000300fc	jmp	0x1000301f7
0000000100030101	movq	%rax, %r15
0000000100030104	jmp	0x10003021d
0000000100030109	movq	%rax, %r15
000000010003010c	leaq	-0xc8(%rbp), %rdi
0000000100030113	callq	__ZN4core3ptr44drop_in_place$LT$object..read..ObjectMap$GT$17h2a15bb8a5f698078E ## core::ptr::drop_in_place$LT$object..read..ObjectMap$GT$::h2a15bb8a5f698078
0000000100030118	movq	-0x48(%rbp), %rax
000000010003011c	movq	%rax, -0x30(%rbp)
0000000100030120	jmp	0x100030211
0000000100030125	movq	%rax, %r15
0000000100030128	leaq	-0x78(%rbp), %rdi
000000010003012c	callq	__ZN4core3ptr144drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$17h9e38532c775e3fa5E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$::h9e38532c775e3fa5
0000000100030131	leaq	-0xc8(%rbp), %rdi
0000000100030138	callq	__ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$object..read..ObjectMap$GT$$GT$17h3d0ca9f8ef03d1a6E ## core::ptr::drop_in_place$LT$core..option..Option$LT$object..read..ObjectMap$GT$$GT$::h3d0ca9f8ef03d1a6
000000010003013d	movq	%r12, %rdi
0000000100030140	movq	%r13, %rsi
0000000100030143	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
0000000100030148	jmp	0x100030236
000000010003014d	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100030152	movq	%rax, %r15
0000000100030155	jmp	0x100030165
0000000100030157	movq	%rax, %r15
000000010003015a	movq	%r12, %rdi
000000010003015d	movq	%r13, %rsi
0000000100030160	callq	__ZN4core3ptr72drop_in_place$LT$alloc..vec..Vec$LT$object..read..ObjectMapEntry$GT$$GT$17ha9074bed35ef5743E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$object..read..ObjectMapEntry$GT$$GT$::ha9074bed35ef5743
0000000100030165	movq	-0x78(%rbp), %rdi
0000000100030169	movq	-0x70(%rbp), %rsi
000000010003016d	callq	__ZN4core3ptr118drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$17h36757e8e1ef2511bE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$$LP$gimli..common..DebugInfoOffset$C$gimli..common..DebugArangesOffset$RP$$GT$$GT$::h36757e8e1ef2511b
0000000100030172	cmpq	-0xd8(%rbp), %r14
0000000100030179	jne	0x100030188
000000010003017b	movq	-0x48(%rbp), %rax
000000010003017f	movq	%rax, -0x30(%rbp)
0000000100030183	jmp	0x100030211
0000000100030188	movq	-0x148(%rbp), %rdi
000000010003018f	movq	-0x140(%rbp), %rsi
0000000100030196	callq	__ZN4core3ptr72drop_in_place$LT$alloc..vec..Vec$LT$object..read..ObjectMapEntry$GT$$GT$17ha9074bed35ef5743E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$object..read..ObjectMapEntry$GT$$GT$::ha9074bed35ef5743
000000010003019b	movq	-0x48(%rbp), %rax
000000010003019f	movq	%rax, -0x30(%rbp)
00000001000301a3	jmp	0x100030211
00000001000301a5	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000301aa	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000301af	jmp	0x10003020e
00000001000301b1	movq	%rax, %r15
00000001000301b4	movl	$0x8, %eax
00000001000301b9	movq	%rax, -0x38(%rbp)
00000001000301bd	xorl	%eax, %eax
00000001000301bf	movq	%rax, -0x30(%rbp)
00000001000301c3	jmp	0x100030229
00000001000301c5	movq	%rax, %r15
00000001000301c8	nopl	(%rax,%rax)
00000001000301d0	decq	%r12
00000001000301d3	je	0x10003010c
00000001000301d9	leaq	0x248(%rbx), %r14
00000001000301e0	movq	%rbx, %rdi
00000001000301e3	callq	__ZN4core3ptr121drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$17h84583e8e7bfe39d1E ## core::ptr::drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$::h84583e8e7bfe39d1
00000001000301e8	movq	%r14, %rbx
00000001000301eb	jmp	0x1000301d0
00000001000301ed	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000301f2	jmp	0x10003020e
00000001000301f4	movq	%rax, %r15
00000001000301f7	movq	-0xc0(%rbp), %rsi
00000001000301fe	movq	-0x40(%rbp), %rdi
0000000100030202	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
0000000100030207	jmp	0x100030211
0000000100030209	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010003020e	movq	%rax, %r15
0000000100030211	leaq	-0x98(%rbp), %rdi
0000000100030218	callq	__ZN4core3ptr144drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$17h9e38532c775e3fa5E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$core..option..Option$LT$core..option..Option$LT$std..backtrace_rs..symbolize..gimli..Mapping$GT$$GT$$GT$$GT$::h9e38532c775e3fa5
000000010003021d	leaq	-0x120(%rbp), %rdi
0000000100030224	callq	__ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$object..read..ObjectMap$GT$$GT$17h3d0ca9f8ef03d1a6E ## core::ptr::drop_in_place$LT$core..option..Option$LT$object..read..ObjectMap$GT$$GT$::h3d0ca9f8ef03d1a6
0000000100030229	movq	-0x38(%rbp), %rdi
000000010003022d	movq	-0x30(%rbp), %rsi
0000000100030231	callq	__ZN4core3ptr169drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$17h6745af84291785d0E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..unit..AttributeValue$LT$gimli..read..endian_slice..EndianSlice$LT$gimli..endianity..LittleEndian$GT$$C$usize$GT$$GT$$GT$::h6745af84291785d0
0000000100030236	movq	%r15, %rdi
0000000100030239	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010003023e	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100030243	nopw	%cs:(%rax,%rax)
000000010003024d	nopl	(%rax)
__ZN3std12backtrace_rs9symbolize5gimli5macho6Object7section17hf07eec0e91b6cf40E:
0000000100030250	pushq	%rbp
0000000100030251	movq	%rsp, %rbp
0000000100030254	pushq	%r15
0000000100030256	pushq	%r14
0000000100030258	pushq	%r13
000000010003025a	pushq	%r12
000000010003025c	pushq	%rbx
000000010003025d	subq	$0x18, %rsp
0000000100030261	movq	0x38(%rdi), %rbx
0000000100030265	testq	%rbx, %rbx
0000000100030268	je	0x10003032e
000000010003026e	movq	0x40(%rdi), %rax
0000000100030272	testq	%rax, %rax
0000000100030275	je	0x10003032e
000000010003027b	movq	%rdx, %r12
000000010003027e	movq	%rdi, -0x30(%rbp)
0000000100030282	testq	%rdx, %rdx
0000000100030285	je	0x100030348
000000010003028b	movq	%rsi, %r13
000000010003028e	leaq	0x1(%rsi), %rcx
0000000100030292	movq	%rcx, -0x38(%rbp)
0000000100030296	shlq	$0x4, %rax
000000010003029a	leaq	(%rax,%rax,4), %r15
000000010003029e	jmp	0x1000302ae
00000001000302a0	addq	$0x50, %rbx
00000001000302a4	addq	$-0x50, %r15
00000001000302a8	je	0x100030343
00000001000302ae	movl	$0x10, %r14d
00000001000302b4	movl	$0x10, %edx
00000001000302b9	xorl	%edi, %edi
00000001000302bb	movq	%rbx, %rsi
00000001000302be	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
00000001000302c3	testq	%rax, %rax
00000001000302c6	je	0x1000302d5
00000001000302c8	movq	%rdx, %r14
00000001000302cb	cmpq	$0x11, %rdx
00000001000302cf	jae	0x1000303c9
00000001000302d5	cmpq	%r12, %r14
00000001000302d8	jne	0x1000302f0
00000001000302da	movq	%rbx, %rdi
00000001000302dd	movq	%r13, %rsi
00000001000302e0	movq	%r12, %rdx
00000001000302e3	callq	0x1000427c0                     ## symbol stub for: _memcmp
00000001000302e8	testl	%eax, %eax
00000001000302ea	je	0x100030389
00000001000302f0	cmpq	$0x2, %r14
00000001000302f4	jb	0x1000302a0
00000001000302f6	movzwl	(%rbx), %eax
00000001000302f9	cmpl	$0x5f5f, %eax                   ## imm = 0x5F5F
00000001000302fe	jne	0x1000302a0
0000000100030300	cmpb	$0x2e, (%r13)
0000000100030305	jne	0x1000302a0
0000000100030307	leaq	-0x1(%r14), %rax
000000010003030b	cmpq	%r12, %rax
000000010003030e	jne	0x1000302a0
0000000100030310	addq	$-0x2, %r14
0000000100030314	leaq	0x2(%rbx), %rdi
0000000100030318	movq	-0x38(%rbp), %rsi
000000010003031c	movq	%r14, %rdx
000000010003031f	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100030324	testl	%eax, %eax
0000000100030326	jne	0x1000302a0
000000010003032c	jmp	0x100030389
000000010003032e	xorl	%r15d, %r15d
0000000100030331	movq	%r15, %rax
0000000100030334	addq	$0x18, %rsp
0000000100030338	popq	%rbx
0000000100030339	popq	%r12
000000010003033b	popq	%r13
000000010003033d	popq	%r14
000000010003033f	popq	%r15
0000000100030341	popq	%rbp
0000000100030342	retq
0000000100030343	xorl	%r15d, %r15d
0000000100030346	jmp	0x100030331
0000000100030348	shlq	$0x4, %rax
000000010003034c	leaq	(%rax,%rax,4), %r14
0000000100030350	xorl	%r15d, %r15d
0000000100030353	jmp	0x10003036a
0000000100030355	nopw	%cs:(%rax,%rax)
000000010003035f	nop
0000000100030360	addq	$0x50, %rbx
0000000100030364	addq	$-0x50, %r14
0000000100030368	je	0x100030331
000000010003036a	movl	$0x10, %edx
000000010003036f	xorl	%edi, %edi
0000000100030371	movq	%rbx, %rsi
0000000100030374	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
0000000100030379	testq	%rax, %rax
000000010003037c	je	0x100030360
000000010003037e	cmpq	$0x10, %rdx
0000000100030382	ja	0x1000303c9
0000000100030384	testq	%rdx, %rdx
0000000100030387	jne	0x100030360
0000000100030389	movq	-0x30(%rbp), %rax
000000010003038d	movq	(%rax), %rdi
0000000100030390	movq	0x8(%rax), %rsi
0000000100030394	movzbl	0x40(%rbx), %eax
0000000100030398	cmpl	$0x12, %eax
000000010003039b	ja	0x1000303b5
000000010003039d	movl	$0x41002, %ecx                  ## imm = 0x41002
00000001000303a2	btl	%eax, %ecx
00000001000303a5	jae	0x1000303b5
00000001000303a7	xorl	%edx, %edx
00000001000303a9	leaq	0x13940(%rip), %r15
00000001000303b0	jmp	0x100030331
00000001000303b5	movl	0x30(%rbx), %edx
00000001000303b8	movq	0x28(%rbx), %rcx
00000001000303bc	callq	__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E ## _$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$::read_bytes_at::h28f6ba636b94bd67
00000001000303c1	movq	%rax, %r15
00000001000303c4	jmp	0x100030331
00000001000303c9	leaq	0x18390(%rip), %rax
00000001000303d0	movl	$0x10, %esi
00000001000303d5	movq	%rdx, %rdi
00000001000303d8	movq	%rax, %rdx
00000001000303db	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
__ZN3std10sys_common11thread_info11THREAD_INFO7__getit7destroy17h7f1d3092d394857dE:
00000001000303e0	pushq	%rbp
00000001000303e1	movq	%rsp, %rbp
00000001000303e4	movl	0x8(%rdi), %edx
00000001000303e7	movq	0x20(%rdi), %rcx
00000001000303eb	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
00000001000303f2	callq	*(%rdi)
00000001000303f4	movb	$0x2, (%rax)
00000001000303f7	cmpl	$0x2, %edx
00000001000303fa	je	0x10003040b
00000001000303fc	lock
00000001000303fd	decq	(%rcx)
0000000100030400	jne	0x10003040b
0000000100030402	movq	%rcx, %rdi
0000000100030405	popq	%rbp
0000000100030406	jmp	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
000000010003040b	popq	%rbp
000000010003040c	retq
000000010003040d	nop
000000010003040e	nop
000000010003040f	nop
__ZN4core3ptr54drop_in_place$LT$panic_unwind..real_imp..Exception$GT$17h0844ac927cd55e4bE:
0000000100030410	pushq	%rbp
0000000100030411	movq	%rsp, %rbp
0000000100030414	pushq	%r15
0000000100030416	pushq	%r14
0000000100030418	pushq	%rbx
0000000100030419	pushq	%rax
000000010003041a	movq	%rsi, %rbx
000000010003041d	movq	%rdi, %r14
0000000100030420	callq	*(%rsi)
0000000100030422	movq	0x8(%rbx), %rsi
0000000100030426	testq	%rsi, %rsi
0000000100030429	je	0x100030441
000000010003042b	movq	0x10(%rbx), %rdx
000000010003042f	movq	%r14, %rdi
0000000100030432	addq	$0x8, %rsp
0000000100030436	popq	%rbx
0000000100030437	popq	%r14
0000000100030439	popq	%r15
000000010003043b	popq	%rbp
000000010003043c	jmp	___rust_dealloc
0000000100030441	addq	$0x8, %rsp
0000000100030445	popq	%rbx
0000000100030446	popq	%r14
0000000100030448	popq	%r15
000000010003044a	popq	%rbp
000000010003044b	retq
000000010003044c	movq	%rax, %r15
000000010003044f	movq	%r14, %rdi
0000000100030452	movq	%rbx, %rsi
0000000100030455	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5b7837d1fe6a1bd5E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h5b7837d1fe6a1bd5
000000010003045a	movq	%r15, %rdi
000000010003045d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100030462	nopw	%cs:(%rax,%rax)
000000010003046c	nopl	(%rax)
__ZN4core3ptr79drop_in_place$LT$alloc..boxed..Box$LT$panic_unwind..real_imp..Exception$GT$$GT$17h7ea58da00dbae96aE:
0000000100030470	pushq	%rbp
0000000100030471	movq	%rsp, %rbp
0000000100030474	pushq	%r15
0000000100030476	pushq	%r14
0000000100030478	pushq	%r12
000000010003047a	pushq	%rbx
000000010003047b	movq	%rdi, %rbx
000000010003047e	movq	0x28(%rdi), %r14
0000000100030482	movq	0x30(%rdi), %r15
0000000100030486	movq	%r14, %rdi
0000000100030489	callq	*(%r15)
000000010003048c	movq	0x8(%r15), %rsi
0000000100030490	testq	%rsi, %rsi
0000000100030493	je	0x1000304a1
0000000100030495	movq	0x10(%r15), %rdx
0000000100030499	movq	%r14, %rdi
000000010003049c	callq	___rust_dealloc
00000001000304a1	movl	$0x38, %esi
00000001000304a6	movl	$0x8, %edx
00000001000304ab	movq	%rbx, %rdi
00000001000304ae	popq	%rbx
00000001000304af	popq	%r12
00000001000304b1	popq	%r14
00000001000304b3	popq	%r15
00000001000304b5	popq	%rbp
00000001000304b6	jmp	___rust_dealloc
00000001000304bb	movq	%rax, %r12
00000001000304be	movq	%r14, %rdi
00000001000304c1	movq	%r15, %rsi
00000001000304c4	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5b7837d1fe6a1bd5E ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h5b7837d1fe6a1bd5
00000001000304c9	movq	%rbx, %rdi
00000001000304cc	callq	__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48bdff8bd484070bE ## _$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h48bdff8bd484070b
00000001000304d1	movq	%r12, %rdi
00000001000304d4	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000304d9	nopl	(%rax)
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48bdff8bd484070bE:
00000001000304e0	pushq	%rbp
00000001000304e1	movq	%rsp, %rbp
00000001000304e4	movl	$0x38, %esi
00000001000304e9	movl	$0x8, %edx
00000001000304ee	popq	%rbp
00000001000304ef	jmp	___rust_dealloc
00000001000304f4	nopw	%cs:(%rax,%rax)
00000001000304fe	nop
__ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5b7837d1fe6a1bd5E:
0000000100030500	pushq	%rbp
0000000100030501	movq	%rsp, %rbp
0000000100030504	movq	%rsi, %rax
0000000100030507	movq	0x8(%rsi), %rsi
000000010003050b	testq	%rsi, %rsi
000000010003050e	je	0x10003051a
0000000100030510	movq	0x10(%rax), %rdx
0000000100030514	popq	%rbp
0000000100030515	jmp	___rust_dealloc
000000010003051a	popq	%rbp
000000010003051b	retq
000000010003051c	nopl	(%rax)
___rust_panic_cleanup:
0000000100030520	pushq	%rbp
0000000100030521	movq	%rsp, %rbp
0000000100030524	pushq	%r14
0000000100030526	pushq	%rbx
0000000100030527	movabsq	$0x4d4f5a0052555354, %rax       ## imm = 0x4D4F5A0052555354
0000000100030531	cmpq	%rax, (%rdi)
0000000100030534	jne	0x100030565
0000000100030536	leaq	__ZN12panic_unwind8real_imp6CANARY17h644b05f5ddd38af9E(%rip), %rax ## panic_unwind::real_imp::CANARY::h644b05f5ddd38af9
000000010003053d	cmpq	%rax, 0x20(%rdi)
0000000100030541	jne	0x10003056a
0000000100030543	movq	0x28(%rdi), %rbx
0000000100030547	movq	0x30(%rdi), %r14
000000010003054b	movl	$0x38, %esi
0000000100030550	movl	$0x8, %edx
0000000100030555	callq	___rust_dealloc
000000010003055a	movq	%rbx, %rax
000000010003055d	movq	%r14, %rdx
0000000100030560	popq	%rbx
0000000100030561	popq	%r14
0000000100030563	popq	%rbp
0000000100030564	retq
0000000100030565	callq	0x100042706                     ## symbol stub for: __Unwind_DeleteException
000000010003056a	callq	___rust_foreign_exception
000000010003056f	nop
___rust_start_panic:
0000000100030570	pushq	%rbp
0000000100030571	movq	%rsp, %rbp
0000000100030574	pushq	%r15
0000000100030576	pushq	%r14
0000000100030578	pushq	%rbx
0000000100030579	pushq	%rax
000000010003057a	callq	*0x18(%rsi)
000000010003057d	movq	%rax, %r14
0000000100030580	movq	%rdx, %rbx
0000000100030583	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010003058a	movzbl	(%rax), %eax
000000010003058d	movl	$0x38, %edi
0000000100030592	movl	$0x8, %esi
0000000100030597	callq	___rust_alloc
000000010003059c	testq	%rax, %rax
000000010003059f	je	0x1000305e5
00000001000305a1	movabsq	$0x4d4f5a0052555354, %rcx       ## imm = 0x4D4F5A0052555354
00000001000305ab	movq	%rcx, (%rax)
00000001000305ae	leaq	__ZN12panic_unwind8real_imp5panic17exception_cleanup17h6f7a1377dde70e94E(%rip), %rcx ## panic_unwind::real_imp::panic::exception_cleanup::h6f7a1377dde70e94
00000001000305b5	movq	%rcx, 0x8(%rax)
00000001000305b9	xorps	%xmm0, %xmm0
00000001000305bc	movups	%xmm0, 0x10(%rax)
00000001000305c0	leaq	__ZN12panic_unwind8real_imp6CANARY17h644b05f5ddd38af9E(%rip), %rcx ## panic_unwind::real_imp::CANARY::h644b05f5ddd38af9
00000001000305c7	movq	%rcx, 0x20(%rax)
00000001000305cb	movq	%r14, 0x28(%rax)
00000001000305cf	movq	%rbx, 0x30(%rax)
00000001000305d3	movq	%rax, %rdi
00000001000305d6	addq	$0x8, %rsp
00000001000305da	popq	%rbx
00000001000305db	popq	%r14
00000001000305dd	popq	%r15
00000001000305df	popq	%rbp
00000001000305e0	jmp	0x100042730                     ## symbol stub for: __Unwind_RaiseException
00000001000305e5	movl	$0x8, %edi
00000001000305ea	movl	$0x38, %esi
00000001000305ef	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000305f4	ud2
00000001000305f6	movq	%rax, %r15
00000001000305f9	movq	%r14, %rdi
00000001000305fc	movq	%rbx, %rsi
00000001000305ff	callq	__ZN4core3ptr54drop_in_place$LT$panic_unwind..real_imp..Exception$GT$17h0844ac927cd55e4bE ## core::ptr::drop_in_place$LT$panic_unwind..real_imp..Exception$GT$::h0844ac927cd55e4b
0000000100030604	movq	%r15, %rdi
0000000100030607	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010003060c	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100030611	nopw	%cs:(%rax,%rax)
000000010003061b	nopl	(%rax,%rax)
__ZN12panic_unwind8real_imp5panic17exception_cleanup17h6f7a1377dde70e94E:
0000000100030620	pushq	%rbp
0000000100030621	movq	%rsp, %rbp
0000000100030624	movq	%rsi, %rdi
0000000100030627	callq	__ZN4core3ptr79drop_in_place$LT$alloc..boxed..Box$LT$panic_unwind..real_imp..Exception$GT$$GT$17h7ea58da00dbae96aE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$panic_unwind..real_imp..Exception$GT$$GT$::h7ea58da00dbae96a
000000010003062c	callq	___rust_drop_panic
0000000100030631	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100030636	nop
0000000100030637	nop
0000000100030638	nop
0000000100030639	nop
000000010003063a	nop
000000010003063b	nop
000000010003063c	nop
000000010003063d	nop
000000010003063e	nop
000000010003063f	nop
__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$3len17h9994a16358db56f3E:
0000000100030640	pushq	%rbp
0000000100030641	movq	%rsp, %rbp
0000000100030644	movq	%rsi, %rdx
0000000100030647	xorl	%eax, %eax
0000000100030649	popq	%rbp
000000010003064a	retq
000000010003064b	nopl	(%rax,%rax)
__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$13read_bytes_at17h28f6ba636b94bd67E:
0000000100030650	pushq	%rbp
0000000100030651	movq	%rsp, %rbp
0000000100030654	movq	%rsi, %r8
0000000100030657	subq	%rdx, %r8
000000010003065a	leaq	(%rdi,%rdx), %rax
000000010003065e	xorl	%edi, %edi
0000000100030660	cmpq	%rcx, %r8
0000000100030663	cmovbq	%rdi, %rax
0000000100030667	cmpq	%rdx, %rsi
000000010003066a	cmovbq	%rdi, %rax
000000010003066e	movq	%rcx, %rdx
0000000100030671	popq	%rbp
0000000100030672	retq
0000000100030673	nopw	%cs:(%rax,%rax)
000000010003067d	nopl	(%rax)
__ZN68_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$object..read..read_ref..ReadRef$GT$19read_bytes_at_until17h2b3b114afce0bebaE:
0000000100030680	pushq	%rbp
0000000100030681	movq	%rsp, %rbp
0000000100030684	pushq	%r14
0000000100030686	pushq	%rbx
0000000100030687	movq	%rdi, %rbx
000000010003068a	movq	%rcx, %r14
000000010003068d	subq	%rdx, %r14
0000000100030690	setb	%al
0000000100030693	cmpq	%rsi, %rcx
0000000100030696	seta	%cl
0000000100030699	orb	%al, %cl
000000010003069b	addq	%rdx, %rbx
000000010003069e	xorl	%eax, %eax
00000001000306a0	testb	%cl, %cl
00000001000306a2	cmovneq	%rax, %rbx
00000001000306a6	jne	0x1000306cd
00000001000306a8	testq	%r14, %r14
00000001000306ab	je	0x1000306cd
00000001000306ad	movzbl	%r8b, %edi
00000001000306b1	movq	%rbx, %rsi
00000001000306b4	movq	%r14, %rdx
00000001000306b7	callq	__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE ## memchr::memchr::x86::sse2::memchr::h9f908ebcec06904d
00000001000306bc	testq	%rax, %rax
00000001000306bf	je	0x1000306d2
00000001000306c1	xorl	%eax, %eax
00000001000306c3	cmpq	%r14, %rdx
00000001000306c6	cmovaq	%rax, %rbx
00000001000306ca	movq	%rbx, %rax
00000001000306cd	popq	%rbx
00000001000306ce	popq	%r14
00000001000306d0	popq	%rbp
00000001000306d1	retq
00000001000306d2	xorl	%eax, %eax
00000001000306d4	popq	%rbx
00000001000306d5	popq	%r14
00000001000306d7	popq	%rbp
00000001000306d8	retq
00000001000306d9	nopl	(%rax)
__ZN6object4read7archive16parse_u64_digits17h40925664de1133d8E:
00000001000306e0	pushq	%rbp
00000001000306e1	movq	%rsp, %rbp
00000001000306e4	pushq	%rbx
00000001000306e5	subq	$0x38, %rsp
00000001000306e9	movl	%edx, %r8d
00000001000306ec	testq	%rsi, %rsi
00000001000306ef	je	0x1000306fd
00000001000306f1	cmpb	$0x20, (%rdi)
00000001000306f4	jne	0x1000306fd
00000001000306f6	xorl	%eax, %eax
00000001000306f8	jmp	0x1000307c7
00000001000306fd	movl	%r8d, %r9d
0000000100030700	cmpl	$0xa, %r8d
0000000100030704	jbe	0x100030726
0000000100030706	cmpl	$0x24, %r8d
000000010003070a	jbe	0x10003076a
000000010003070c	movl	$0x1, %eax
0000000100030711	testq	%rsi, %rsi
0000000100030714	je	0x10003071f
0000000100030716	cmpb	$0x20, (%rdi)
0000000100030719	jne	0x1000307d1
000000010003071f	xorl	%ecx, %ecx
0000000100030721	jmp	0x1000307c7
0000000100030726	xorl	%r10d, %r10d
0000000100030729	xorl	%eax, %eax
000000010003072b	nopl	(%rax,%rax)
0000000100030730	movq	%rax, %rcx
0000000100030733	movl	$0x1, %eax
0000000100030738	cmpq	%r10, %rsi
000000010003073b	je	0x1000307c7
0000000100030741	movzbl	(%rdi,%r10), %r11d
0000000100030746	cmpl	$0x20, %r11d
000000010003074a	je	0x1000307c7
000000010003074c	addl	$-0x30, %r11d
0000000100030750	cmpl	%r8d, %r11d
0000000100030753	jae	0x1000307c5
0000000100030755	movq	%rcx, %rax
0000000100030758	mulq	%r9
000000010003075b	jo	0x1000307c5
000000010003075d	movl	%r11d, %edx
0000000100030760	incq	%r10
0000000100030763	addq	%rdx, %rax
0000000100030766	jae	0x100030730
0000000100030768	jmp	0x1000307c5
000000010003076a	movl	$0xffffffff, %r10d              ## imm = 0xFFFFFFFF
0000000100030770	xorl	%r11d, %r11d
0000000100030773	xorl	%eax, %eax
0000000100030775	nopw	%cs:(%rax,%rax)
000000010003077f	nop
0000000100030780	movq	%rax, %rcx
0000000100030783	movl	$0x1, %eax
0000000100030788	cmpq	%r11, %rsi
000000010003078b	je	0x1000307c7
000000010003078d	movzbl	(%rdi,%r11), %edx
0000000100030792	cmpl	$0x20, %edx
0000000100030795	je	0x1000307c7
0000000100030797	leal	-0x30(%rdx), %ebx
000000010003079a	cmpl	$0xa, %ebx
000000010003079d	jb	0x1000307b3
000000010003079f	orl	$0x20, %edx
00000001000307a2	addl	$-0x61, %edx
00000001000307a5	addl	$0xa, %edx
00000001000307a8	cmovbl	%r10d, %edx
00000001000307ac	movl	%edx, %ebx
00000001000307ae	cmpl	%r8d, %edx
00000001000307b1	jae	0x1000307c5
00000001000307b3	movq	%rcx, %rax
00000001000307b6	mulq	%r9
00000001000307b9	jo	0x1000307c5
00000001000307bb	movl	%ebx, %edx
00000001000307bd	incq	%r11
00000001000307c0	addq	%rdx, %rax
00000001000307c3	jae	0x100030780
00000001000307c5	xorl	%eax, %eax
00000001000307c7	movq	%rcx, %rdx
00000001000307ca	addq	$0x38, %rsp
00000001000307ce	popq	%rbx
00000001000307cf	popq	%rbp
00000001000307d0	retq
00000001000307d1	leaq	0x18e90(%rip), %rax
00000001000307d8	movq	%rax, -0x38(%rbp)
00000001000307dc	movq	$0x1, -0x30(%rbp)
00000001000307e4	movq	$0x0, -0x18(%rbp)
00000001000307ec	leaq	0x151d5(%rip), %rax
00000001000307f3	movq	%rax, -0x28(%rbp)
00000001000307f7	movq	$0x0, -0x20(%rbp)
00000001000307ff	leaq	0x18e72(%rip), %rsi
0000000100030806	leaq	-0x38(%rbp), %rdi
000000010003080a	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010003080f	nop
__ZN6object4read7archive24parse_sysv_extended_name17h2f068e37d673972aE:
0000000100030810	pushq	%rbp
0000000100030811	movq	%rsp, %rbp
0000000100030814	pushq	%r14
0000000100030816	pushq	%rbx
0000000100030817	movq	%rcx, %rbx
000000010003081a	movq	%rdx, %r14
000000010003081d	testq	%rsi, %rsi
0000000100030820	je	0x10003082b
0000000100030822	cmpb	$0x20, (%rdi)
0000000100030825	jne	0x10003082b
0000000100030827	xorl	%ecx, %ecx
0000000100030829	jmp	0x1000308a2
000000010003082b	xorl	%ecx, %ecx
000000010003082d	movl	$0xa, %r8d
0000000100030833	xorl	%r9d, %r9d
0000000100030836	xorl	%eax, %eax
0000000100030838	nopl	(%rax,%rax)
0000000100030840	cmpq	%r9, %rsi
0000000100030843	je	0x10003086c
0000000100030845	movzbl	(%rdi,%r9), %r10d
000000010003084a	cmpl	$0x20, %r10d
000000010003084e	je	0x10003086c
0000000100030850	addl	$-0x30, %r10d
0000000100030854	cmpl	$0x9, %r10d
0000000100030858	ja	0x10003086a
000000010003085a	mulq	%r8
000000010003085d	jo	0x10003086a
000000010003085f	movl	%r10d, %edx
0000000100030862	incq	%r9
0000000100030865	addq	%rdx, %rax
0000000100030868	jae	0x100030840
000000010003086a	jmp	0x1000308a2
000000010003086c	addq	%rax, %r14
000000010003086f	xorl	%ecx, %ecx
0000000100030871	movq	%r14, %rdx
0000000100030874	subq	%rax, %rbx
0000000100030877	cmovbq	%rcx, %rdx
000000010003087b	jb	0x1000308a2
000000010003087d	je	0x10003089d
000000010003087f	movl	$0x2f, %edi
0000000100030884	xorl	%esi, %esi
0000000100030886	movq	%rbx, %rcx
0000000100030889	callq	__ZN6memchr6memchr3x864sse27memchr217ha78a7afb4426c3dfE ## memchr::memchr::x86::sse2::memchr2::ha78a7afb4426c3df
000000010003088e	testq	%rax, %rax
0000000100030891	je	0x10003089f
0000000100030893	cmpq	%rbx, %rdx
0000000100030896	ja	0x1000308ad
0000000100030898	movq	%rdx, %rbx
000000010003089b	jmp	0x10003089f
000000010003089d	xorl	%ebx, %ebx
000000010003089f	movq	%r14, %rcx
00000001000308a2	movq	%rcx, %rax
00000001000308a5	movq	%rbx, %rdx
00000001000308a8	popq	%rbx
00000001000308a9	popq	%r14
00000001000308ab	popq	%rbp
00000001000308ac	retq
00000001000308ad	leaq	0x18ddc(%rip), %rax
00000001000308b4	movq	%rdx, %rdi
00000001000308b7	movq	%rbx, %rsi
00000001000308ba	movq	%rax, %rdx
00000001000308bd	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
00000001000308c2	nopw	%cs:(%rax,%rax)
00000001000308cc	nopl	(%rax)
__ZN6object4read4coff6import16ImportObjectData6export17h9100e1679730002bE:
00000001000308d0	pushq	%rbp
00000001000308d1	movq	%rsp, %rbp
00000001000308d4	movq	0x20(%rdi), %rax
00000001000308d8	movq	0x28(%rdi), %rdx
00000001000308dc	popq	%rbp
00000001000308dd	retq
00000001000308de	nop
__ZN6object4read9ObjectMap3get17hdfc610515bc613c5E:
00000001000308e0	pushq	%rbp
00000001000308e1	movq	%rsp, %rbp
00000001000308e4	movq	0x10(%rdi), %rax
00000001000308e8	testq	%rax, %rax
00000001000308eb	je	0x100030983
00000001000308f1	movq	(%rdi), %rcx
00000001000308f4	xorl	%r8d, %r8d
00000001000308f7	movl	$0xff, %edi
00000001000308fc	movq	%rax, %rdx
00000001000308ff	movq	%rax, %r9
0000000100030902	jmp	0x100030918
0000000100030904	nopw	%cs:(%rax,%rax)
000000010003090e	nop
0000000100030910	movq	%rdx, %r9
0000000100030913	subq	%r8, %rdx
0000000100030916	jbe	0x100030953
0000000100030918	shrq	%rdx
000000010003091b	addq	%r8, %rdx
000000010003091e	leaq	(%rdx,%rdx,4), %r11
0000000100030922	xorl	%r10d, %r10d
0000000100030925	cmpq	%rsi, 0x10(%rcx,%r11,8)
000000010003092a	setne	%r10b
000000010003092e	cmovbl	%edi, %r10d
0000000100030932	cmpb	$0x1, %r10b
0000000100030936	je	0x100030910
0000000100030938	movzbl	%r10b, %r8d
000000010003093c	cmpl	$0xff, %r8d
0000000100030943	jne	0x10003095c
0000000100030945	incq	%rdx
0000000100030948	movq	%rdx, %r8
000000010003094b	movq	%r9, %rdx
000000010003094e	subq	%r8, %rdx
0000000100030951	ja	0x100030918
0000000100030953	subq	$0x1, %r8
0000000100030957	movq	%r8, %rdx
000000010003095a	jb	0x100030983
000000010003095c	cmpq	%rax, %rdx
000000010003095f	jae	0x100030983
0000000100030961	leaq	(%rdx,%rdx,4), %rdi
0000000100030965	leaq	(%rcx,%rdi,8), %rax
0000000100030969	movq	0x18(%rcx,%rdi,8), %rdx
000000010003096e	testq	%rdx, %rdx
0000000100030971	je	0x100030981
0000000100030973	subq	0x10(%rcx,%rdi,8), %rsi
0000000100030978	xorl	%ecx, %ecx
000000010003097a	cmpq	%rdx, %rsi
000000010003097d	cmovaeq	%rcx, %rax
0000000100030981	popq	%rbp
0000000100030982	retq
0000000100030983	xorl	%eax, %eax
0000000100030985	popq	%rbp
0000000100030986	retq
0000000100030987	nopw	(%rax,%rax)
__ZN6memchr6memchr3x864sse26memchr17h9f908ebcec06904dE:
0000000100030990	pushq	%rbp
0000000100030991	movq	%rsp, %rbp
0000000100030994	cmpq	$0x40, %rdx
0000000100030998	movl	$0x40, %r8d
000000010003099e	cmovbq	%rdx, %r8
00000001000309a2	leaq	(%rsi,%rdx), %rcx
00000001000309a6	cmpq	$0xf, %rdx
00000001000309aa	ja	0x1000309d9
00000001000309ac	testq	%rdx, %rdx
00000001000309af	je	0x100030ae3
00000001000309b5	xorl	%eax, %eax
00000001000309b7	xorl	%edx, %edx
00000001000309b9	nopl	(%rax)
00000001000309c0	cmpb	%dil, (%rsi,%rdx)
00000001000309c4	je	0x100030ae7
00000001000309ca	leaq	0x1(%rsi,%rdx), %r8
00000001000309cf	incq	%rdx
00000001000309d2	cmpq	%rcx, %r8
00000001000309d5	jb	0x1000309c0
00000001000309d7	popq	%rbp
00000001000309d8	retq
00000001000309d9	movd	%edi, %xmm0
00000001000309dd	pxor	%xmm1, %xmm1
00000001000309e1	pshufb	%xmm1, %xmm0
00000001000309e6	movdqu	(%rsi), %xmm1
00000001000309ea	pcmpeqb	%xmm0, %xmm1
00000001000309ee	pmovmskb	%xmm1, %edi
00000001000309f2	movl	$0x1, %eax
00000001000309f7	testl	%edi, %edi
00000001000309f9	je	0x100030a01
00000001000309fb	tzcntl	%edi, %edx
00000001000309ff	popq	%rbp
0000000100030a00	retq
0000000100030a01	movq	%rsi, %r9
0000000100030a04	andq	$-0x10, %r9
0000000100030a08	addq	$0x10, %r9
0000000100030a0c	cmpq	$0x40, %rdx
0000000100030a10	jb	0x100030a82
0000000100030a12	leaq	-0x40(%rcx), %rdx
0000000100030a16	cmpq	%rdx, %r9
0000000100030a19	ja	0x100030a82
0000000100030a1b	movl	%esi, %r9d
0000000100030a1e	andl	$0xf, %r9d
0000000100030a22	movl	$0x20, %edi
0000000100030a27	subq	%r9, %rdi
0000000100030a2a	nopw	(%rax,%rax)
0000000100030a30	movdqa	-0x10(%rsi,%rdi), %xmm4
0000000100030a36	pcmpeqb	%xmm0, %xmm4
0000000100030a3a	movdqa	(%rsi,%rdi), %xmm3
0000000100030a3f	pcmpeqb	%xmm0, %xmm3
0000000100030a43	movdqa	0x10(%rsi,%rdi), %xmm2
0000000100030a49	pcmpeqb	%xmm0, %xmm2
0000000100030a4d	movdqa	0x20(%rsi,%rdi), %xmm1
0000000100030a53	pcmpeqb	%xmm0, %xmm1
0000000100030a57	movdqa	%xmm3, %xmm5
0000000100030a5b	por	%xmm4, %xmm5
0000000100030a5f	movdqa	%xmm2, %xmm6
0000000100030a63	por	%xmm1, %xmm6
0000000100030a67	por	%xmm5, %xmm6
0000000100030a6b	pmovmskb	%xmm6, %r9d
0000000100030a70	testl	%r9d, %r9d
0000000100030a73	jne	0x100030aee
0000000100030a75	addq	%r8, %rdi
0000000100030a78	leaq	-0x10(%rsi,%rdi), %r9
0000000100030a7d	cmpq	%rdx, %r9
0000000100030a80	jbe	0x100030a30
0000000100030a82	leaq	-0x10(%rcx), %rdi
0000000100030a86	cmpq	%rdi, %r9
0000000100030a89	ja	0x100030abe
0000000100030a8b	movq	%r9, %r8
0000000100030a8e	subq	%rsi, %r8
0000000100030a91	nopw	%cs:(%rax,%rax)
0000000100030a9b	nopl	(%rax,%rax)
0000000100030aa0	movdqu	(%r9), %xmm1
0000000100030aa5	pcmpeqb	%xmm0, %xmm1
0000000100030aa9	pmovmskb	%xmm1, %edx
0000000100030aad	testl	%edx, %edx
0000000100030aaf	jne	0x100030b01
0000000100030ab1	addq	$0x10, %r9
0000000100030ab5	addq	$0x10, %r8
0000000100030ab9	cmpq	%rdi, %r9
0000000100030abc	jbe	0x100030aa0
0000000100030abe	cmpq	%rcx, %r9
0000000100030ac1	jae	0x100030ae3
0000000100030ac3	movdqu	-0x10(%rcx), %xmm1
0000000100030ac8	pcmpeqb	%xmm0, %xmm1
0000000100030acc	pmovmskb	%xmm1, %ecx
0000000100030ad0	xorl	%eax, %eax
0000000100030ad2	testl	%ecx, %ecx
0000000100030ad4	setne	%al
0000000100030ad7	subq	%rsi, %rdi
0000000100030ada	tzcntl	%ecx, %edx
0000000100030ade	addq	%rdi, %rdx
0000000100030ae1	popq	%rbp
0000000100030ae2	retq
0000000100030ae3	xorl	%eax, %eax
0000000100030ae5	popq	%rbp
0000000100030ae6	retq
0000000100030ae7	movl	$0x1, %eax
0000000100030aec	popq	%rbp
0000000100030aed	retq
0000000100030aee	pmovmskb	%xmm4, %ecx
0000000100030af2	testl	%ecx, %ecx
0000000100030af4	je	0x100030b0a
0000000100030af6	tzcntl	%ecx, %ecx
0000000100030afa	leaq	-0x10(%rcx,%rdi), %rdx
0000000100030aff	popq	%rbp
0000000100030b00	retq
0000000100030b01	tzcntl	%edx, %edx
0000000100030b05	addq	%r8, %rdx
0000000100030b08	popq	%rbp
0000000100030b09	retq
0000000100030b0a	pmovmskb	%xmm3, %ecx
0000000100030b0e	testl	%ecx, %ecx
0000000100030b10	jne	0x100030ada
0000000100030b12	pmovmskb	%xmm2, %ecx
0000000100030b16	testl	%ecx, %ecx
0000000100030b18	je	0x100030b25
0000000100030b1a	tzcntl	%ecx, %ecx
0000000100030b1e	leaq	0x10(%rcx,%rdi), %rdx
0000000100030b23	popq	%rbp
0000000100030b24	retq
0000000100030b25	psllw	$0x7, %xmm1
0000000100030b2a	pmovmskb	%xmm1, %ecx
0000000100030b2e	testl	%ecx, %ecx
0000000100030b30	je	0x100030b38
0000000100030b32	tzcntl	%ecx, %ecx
0000000100030b36	jmp	0x100030b3d
0000000100030b38	movl	$0x20, %ecx
0000000100030b3d	movl	%ecx, %ecx
0000000100030b3f	leaq	0x20(%rcx,%rdi), %rdx
0000000100030b44	popq	%rbp
0000000100030b45	retq
0000000100030b46	nopw	%cs:(%rax,%rax)
__ZN6memchr6memchr3x864sse27memchr217ha78a7afb4426c3dfE:
0000000100030b50	pushq	%rbp
0000000100030b51	movq	%rsp, %rbp
0000000100030b54	cmpq	$0x20, %rcx
0000000100030b58	movl	$0x20, %r9d
0000000100030b5e	cmovbq	%rcx, %r9
0000000100030b62	leaq	(%rdx,%rcx), %r8
0000000100030b66	cmpq	$0xf, %rcx
0000000100030b6a	ja	0x100030ba8
0000000100030b6c	testq	%rcx, %rcx
0000000100030b6f	je	0x100030cda
0000000100030b75	xorl	%ecx, %ecx
0000000100030b77	nopw	(%rax,%rax)
0000000100030b80	movzbl	(%rdx,%rcx), %r9d
0000000100030b85	movl	$0x1, %eax
0000000100030b8a	cmpb	%dil, %r9b
0000000100030b8d	je	0x100030ba3
0000000100030b8f	cmpb	%sil, %r9b
0000000100030b92	je	0x100030ba3
0000000100030b94	leaq	0x1(%rdx,%rcx), %rax
0000000100030b99	incq	%rcx
0000000100030b9c	cmpq	%r8, %rax
0000000100030b9f	jb	0x100030b80
0000000100030ba1	xorl	%eax, %eax
0000000100030ba3	movq	%rcx, %rdx
0000000100030ba6	popq	%rbp
0000000100030ba7	retq
0000000100030ba8	movd	%edi, %xmm0
0000000100030bac	pxor	%xmm2, %xmm2
0000000100030bb0	pshufb	%xmm2, %xmm0
0000000100030bb5	movd	%esi, %xmm1
0000000100030bb9	pshufb	%xmm2, %xmm1
0000000100030bbe	movdqu	(%rdx), %xmm2
0000000100030bc2	movdqa	%xmm2, %xmm3
0000000100030bc6	pcmpeqb	%xmm0, %xmm3
0000000100030bca	pcmpeqb	%xmm1, %xmm2
0000000100030bce	por	%xmm3, %xmm2
0000000100030bd2	pmovmskb	%xmm2, %esi
0000000100030bd6	movl	$0x1, %eax
0000000100030bdb	testl	%esi, %esi
0000000100030bdd	je	0x100030be8
0000000100030bdf	tzcntl	%esi, %ecx
0000000100030be3	movq	%rcx, %rdx
0000000100030be6	popq	%rbp
0000000100030be7	retq
0000000100030be8	movl	%edx, %r10d
0000000100030beb	andl	$0xf, %r10d
0000000100030bef	movq	%r10, %rsi
0000000100030bf2	negq	%rsi
0000000100030bf5	leaq	0x10(%rdx,%rsi), %rdi
0000000100030bfa	cmpq	$0x20, %rcx
0000000100030bfe	jb	0x100030c6f
0000000100030c00	leaq	-0x20(%r8), %rcx
0000000100030c04	cmpq	%rcx, %rdi
0000000100030c07	ja	0x100030c6f
0000000100030c09	movl	$0x10, %esi
0000000100030c0e	subq	%r10, %rsi
0000000100030c11	nopw	%cs:(%rax,%rax)
0000000100030c1b	nopl	(%rax,%rax)
0000000100030c20	movdqa	(%rdx,%rsi), %xmm2
0000000100030c25	movdqa	0x10(%rdx,%rsi), %xmm3
0000000100030c2b	movdqa	%xmm0, %xmm4
0000000100030c2f	pcmpeqb	%xmm2, %xmm4
0000000100030c33	movdqa	%xmm0, %xmm5
0000000100030c37	pcmpeqb	%xmm3, %xmm5
0000000100030c3b	pcmpeqb	%xmm1, %xmm2
0000000100030c3f	pcmpeqb	%xmm1, %xmm3
0000000100030c43	por	%xmm5, %xmm3
0000000100030c47	movdqa	%xmm2, %xmm5
0000000100030c4b	por	%xmm4, %xmm5
0000000100030c4f	movdqa	%xmm3, %xmm6
0000000100030c53	por	%xmm5, %xmm6
0000000100030c57	pmovmskb	%xmm6, %edi
0000000100030c5b	testl	%edi, %edi
0000000100030c5d	jne	0x100030ce1
0000000100030c63	addq	%r9, %rsi
0000000100030c66	leaq	(%rdx,%rsi), %rdi
0000000100030c6a	cmpq	%rcx, %rdi
0000000100030c6d	jbe	0x100030c20
0000000100030c6f	leaq	-0x10(%r8), %rsi
0000000100030c73	cmpq	%rsi, %rdi
0000000100030c76	ja	0x100030ca9
0000000100030c78	movq	%rdi, %r9
0000000100030c7b	subq	%rdx, %r9
0000000100030c7e	nop
0000000100030c80	movdqu	(%rdi), %xmm2
0000000100030c84	movdqa	%xmm2, %xmm3
0000000100030c88	pcmpeqb	%xmm0, %xmm3
0000000100030c8c	pcmpeqb	%xmm1, %xmm2
0000000100030c90	por	%xmm3, %xmm2
0000000100030c94	pmovmskb	%xmm2, %ecx
0000000100030c98	testl	%ecx, %ecx
0000000100030c9a	jne	0x100030d01
0000000100030c9c	addq	$0x10, %rdi
0000000100030ca0	addq	$0x10, %r9
0000000100030ca4	cmpq	%rsi, %rdi
0000000100030ca7	jbe	0x100030c80
0000000100030ca9	cmpq	%r8, %rdi
0000000100030cac	jae	0x100030cda
0000000100030cae	movdqu	-0x10(%r8), %xmm2
0000000100030cb4	pcmpeqb	%xmm2, %xmm0
0000000100030cb8	pcmpeqb	%xmm2, %xmm1
0000000100030cbc	por	%xmm0, %xmm1
0000000100030cc0	pmovmskb	%xmm1, %ecx
0000000100030cc4	xorl	%eax, %eax
0000000100030cc6	testl	%ecx, %ecx
0000000100030cc8	setne	%al
0000000100030ccb	subq	%rdx, %rsi
0000000100030cce	tzcntl	%ecx, %ecx
0000000100030cd2	addq	%rsi, %rcx
0000000100030cd5	movq	%rcx, %rdx
0000000100030cd8	popq	%rbp
0000000100030cd9	retq
0000000100030cda	xorl	%eax, %eax
0000000100030cdc	movq	%rcx, %rdx
0000000100030cdf	popq	%rbp
0000000100030ce0	retq
0000000100030ce1	pmovmskb	%xmm5, %ecx
0000000100030ce5	testl	%ecx, %ecx
0000000100030ce7	je	0x100030d0d
0000000100030ce9	pmovmskb	%xmm4, %edx
0000000100030ced	pmovmskb	%xmm2, %ecx
0000000100030cf1	orl	%edx, %ecx
0000000100030cf3	testw	%cx, %cx
0000000100030cf6	je	0x100030d1b
0000000100030cf8	movzwl	%cx, %ecx
0000000100030cfb	tzcntl	%ecx, %ecx
0000000100030cff	jmp	0x100030d20
0000000100030d01	tzcntl	%ecx, %ecx
0000000100030d05	addq	%r9, %rcx
0000000100030d08	movq	%rcx, %rdx
0000000100030d0b	popq	%rbp
0000000100030d0c	retq
0000000100030d0d	pmovmskb	%xmm3, %ecx
0000000100030d11	testl	%ecx, %ecx
0000000100030d13	je	0x100030d2a
0000000100030d15	tzcntl	%ecx, %ecx
0000000100030d19	jmp	0x100030d2f
0000000100030d1b	movl	$0x20, %ecx
0000000100030d20	movl	%ecx, %ecx
0000000100030d22	addq	%rsi, %rcx
0000000100030d25	movq	%rcx, %rdx
0000000100030d28	popq	%rbp
0000000100030d29	retq
0000000100030d2a	movl	$0x20, %ecx
0000000100030d2f	movl	%ecx, %ecx
0000000100030d31	leaq	0x10(%rcx,%rsi), %rcx
0000000100030d36	movq	%rcx, %rdx
0000000100030d39	popq	%rbp
0000000100030d3a	retq
0000000100030d3b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec11finish_grow17hc8b13f3aab245f51E:
0000000100030d40	pushq	%rbp
0000000100030d41	movq	%rsp, %rbp
0000000100030d44	pushq	%r15
0000000100030d46	pushq	%r14
0000000100030d48	pushq	%rbx
0000000100030d49	pushq	%rax
0000000100030d4a	movq	%rdx, %rbx
0000000100030d4d	movq	%rdi, %r14
0000000100030d50	testq	%rsi, %rsi
0000000100030d53	je	0x100030da8
0000000100030d55	movq	%rsi, %r15
0000000100030d58	cmpq	$0x0, 0x8(%rcx)
0000000100030d5d	je	0x100030d81
0000000100030d5f	movq	0x10(%rcx), %rsi
0000000100030d63	testq	%rsi, %rsi
0000000100030d66	je	0x100030d81
0000000100030d68	movq	(%rcx), %rdi
0000000100030d6b	movq	%r15, %rdx
0000000100030d6e	movq	%rbx, %rcx
0000000100030d71	callq	___rust_realloc
0000000100030d76	testq	%rax, %rax
0000000100030d79	jne	0x100030da0
0000000100030d7b	movq	%r15, 0x8(%r14)
0000000100030d7f	jmp	0x100030db0
0000000100030d81	testq	%rbx, %rbx
0000000100030d84	je	0x100030dc7
0000000100030d86	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100030d8d	movzbl	(%rax), %eax
0000000100030d90	movq	%rbx, %rdi
0000000100030d93	movq	%r15, %rsi
0000000100030d96	callq	___rust_alloc
0000000100030d9b	testq	%rax, %rax
0000000100030d9e	je	0x100030d7b
0000000100030da0	movq	%rax, 0x8(%r14)
0000000100030da4	xorl	%eax, %eax
0000000100030da6	jmp	0x100030db5
0000000100030da8	movq	$0x0, 0x8(%r14)
0000000100030db0	movl	$0x1, %eax
0000000100030db5	movq	%rbx, 0x10(%r14)
0000000100030db9	movq	%rax, (%r14)
0000000100030dbc	addq	$0x8, %rsp
0000000100030dc0	popq	%rbx
0000000100030dc1	popq	%r14
0000000100030dc3	popq	%r15
0000000100030dc5	popq	%rbp
0000000100030dc6	retq
0000000100030dc7	movq	%r15, %rax
0000000100030dca	testq	%rax, %rax
0000000100030dcd	jne	0x100030da0
0000000100030dcf	jmp	0x100030d7b
0000000100030dd1	nopw	%cs:(%rax,%rax)
0000000100030ddb	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hf46942a7f5124d0fE:
0000000100030de0	pushq	%rbp
0000000100030de1	movq	%rsp, %rbp
0000000100030de4	pushq	%r14
0000000100030de6	pushq	%rbx
0000000100030de7	subq	$0x30, %rsp
0000000100030deb	incq	%rsi
0000000100030dee	je	0x100030e6b
0000000100030df0	movq	%rdi, %rbx
0000000100030df3	movq	0x8(%rdi), %rax
0000000100030df7	leaq	(%rax,%rax), %rcx
0000000100030dfb	cmpq	%rsi, %rcx
0000000100030dfe	cmovaq	%rcx, %rsi
0000000100030e02	cmpq	$0x9, %rsi
0000000100030e06	movl	$0x8, %r14d
0000000100030e0c	cmovaeq	%rsi, %r14
0000000100030e10	movq	%r14, %rsi
0000000100030e13	notq	%rsi
0000000100030e16	shrq	$0x3f, %rsi
0000000100030e1a	testq	%rax, %rax
0000000100030e1d	je	0x100030e34
0000000100030e1f	movq	(%rbx), %rcx
0000000100030e22	movq	%rcx, -0x28(%rbp)
0000000100030e26	movq	$0x1, -0x20(%rbp)
0000000100030e2e	movq	%rax, -0x18(%rbp)
0000000100030e32	jmp	0x100030e3c
0000000100030e34	movq	$0x0, -0x20(%rbp)
0000000100030e3c	leaq	-0x40(%rbp), %rdi
0000000100030e40	leaq	-0x28(%rbp), %rcx
0000000100030e44	movq	%r14, %rdx
0000000100030e47	callq	__ZN5alloc7raw_vec11finish_grow17hc8b13f3aab245f51E ## alloc::raw_vec::finish_grow::hc8b13f3aab245f51
0000000100030e4c	cmpq	$0x0, -0x40(%rbp)
0000000100030e51	movq	-0x38(%rbp), %rdi
0000000100030e55	je	0x100030e70
0000000100030e57	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
0000000100030e61	cmpq	%rax, %rdi
0000000100030e64	je	0x100030e77
0000000100030e66	testq	%rdi, %rdi
0000000100030e69	jne	0x100030e80
0000000100030e6b	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100030e70	movq	%rdi, (%rbx)
0000000100030e73	movq	%r14, 0x8(%rbx)
0000000100030e77	addq	$0x30, %rsp
0000000100030e7b	popq	%rbx
0000000100030e7c	popq	%r14
0000000100030e7e	popq	%rbp
0000000100030e7f	retq
0000000100030e80	movq	-0x30(%rbp), %rsi
0000000100030e84	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100030e89	nopl	(%rax)
__ZN91_$LT$addr2line..LocationRangeUnitIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9ca3e5930ac0bc20E:
0000000100030e90	pushq	%rbp
0000000100030e91	movq	%rsp, %rbp
0000000100030e94	pushq	%r15
0000000100030e96	pushq	%r14
0000000100030e98	pushq	%rbx
0000000100030e99	movq	%rdi, %rax
0000000100030e9c	movq	0x10(%rsi), %r11
0000000100030ea0	movq	0x18(%rsi), %rcx
0000000100030ea4	cmpq	%r11, %rcx
0000000100030ea7	jae	0x100030f57
0000000100030ead	movq	0x8(%rsi), %rdx
0000000100030eb1	testq	%rdx, %rdx
0000000100030eb4	je	0x100030f57
0000000100030eba	movq	0x28(%rsi), %r8
0000000100030ebe	movq	%rcx, %r9
0000000100030ec1	shlq	$0x5, %r9
0000000100030ec5	cmpq	%r8, 0x10(%rdx,%r9)
0000000100030eca	jae	0x100030f57
0000000100030ed0	movq	0x20(%rsi), %rdi
0000000100030ed4	movq	0x8(%rdx,%r9), %r10
0000000100030ed9	cmpq	%r10, %rdi
0000000100030edc	jae	0x100030f11
0000000100030ede	addq	%rdx, %r9
0000000100030ee1	movq	(%r9), %rbx
0000000100030ee4	leaq	(%rdi,%rdi,2), %r14
0000000100030ee8	movq	(%rbx,%r14,8), %r9
0000000100030eec	cmpq	%r8, %r9
0000000100030eef	jae	0x100030f57
0000000100030ef1	movq	(%rsi), %r8
0000000100030ef4	movq	0x8(%rbx,%r14,8), %r11
0000000100030ef9	cmpq	0x8(%r8), %r11
0000000100030efd	jae	0x100030f65
0000000100030eff	movq	(%r8), %r15
0000000100030f02	leaq	(%r11,%r11,2), %r11
0000000100030f06	movq	(%r15,%r11,8), %r8
0000000100030f0a	movq	0x10(%r15,%r11,8), %r11
0000000100030f0f	jmp	0x100030f68
0000000100030f11	incq	%rcx
0000000100030f14	movq	%rcx, 0x18(%rsi)
0000000100030f18	movq	$0x0, 0x20(%rsi)
0000000100030f20	cmpq	%r11, %rcx
0000000100030f23	je	0x100030f57
0000000100030f25	leaq	0x20(%r9,%rdx), %r9
0000000100030f2a	xorl	%edi, %edi
0000000100030f2c	nopl	(%rax)
0000000100030f30	cmpq	%r8, 0x10(%r9)
0000000100030f34	jae	0x100030f57
0000000100030f36	movq	0x8(%r9), %r10
0000000100030f3a	testq	%r10, %r10
0000000100030f3d	jne	0x100030ee1
0000000100030f3f	incq	%rcx
0000000100030f42	movq	%rcx, 0x18(%rsi)
0000000100030f46	movq	$0x0, 0x20(%rsi)
0000000100030f4e	addq	$0x20, %r9
0000000100030f52	cmpq	%rcx, %r11
0000000100030f55	jne	0x100030f30
0000000100030f57	movl	$0x2, 0x10(%rax)
0000000100030f5e	popq	%rbx
0000000100030f5f	popq	%r14
0000000100030f61	popq	%r15
0000000100030f63	popq	%rbp
0000000100030f64	retq
0000000100030f65	xorl	%r8d, %r8d
0000000100030f68	incq	%rdi
0000000100030f6b	shlq	$0x5, %rcx
0000000100030f6f	addq	%rcx, %rdx
0000000100030f72	cmpq	%r10, %rdi
0000000100030f75	leaq	(%rbx,%r14,8), %rcx
0000000100030f79	cmovaeq	%rdx, %rcx
0000000100030f7d	movq	0x18(%rcx), %rcx
0000000100030f81	subq	%r9, %rcx
0000000100030f84	movl	0x10(%rbx,%r14,8), %edx
0000000100030f89	movl	0x14(%rbx,%r14,8), %r10d
0000000100030f8e	xorl	%ebx, %ebx
0000000100030f90	testl	%edx, %edx
0000000100030f92	setne	%bl
0000000100030f95	xorl	%r14d, %r14d
0000000100030f98	testl	%r10d, %r10d
0000000100030f9b	setne	%r14b
0000000100030f9f	movq	%rdi, 0x20(%rsi)
0000000100030fa3	movq	%r9, (%rax)
0000000100030fa6	movq	%rcx, 0x8(%rax)
0000000100030faa	movl	%ebx, 0x10(%rax)
0000000100030fad	movl	%edx, 0x14(%rax)
0000000100030fb0	movl	%r14d, 0x18(%rax)
0000000100030fb4	movl	%r10d, 0x1c(%rax)
0000000100030fb8	movq	%r8, 0x20(%rax)
0000000100030fbc	movq	%r11, 0x28(%rax)
0000000100030fc0	jmp	0x100030f5e
0000000100030fc2	nopw	%cs:(%rax,%rax)
0000000100030fcc	nopl	(%rax)
__ZN9addr2line9path_push17h6b012d3e24b83295E:
0000000100030fd0	pushq	%rbp
0000000100030fd1	movq	%rsp, %rbp
0000000100030fd4	pushq	%r15
0000000100030fd6	pushq	%r14
0000000100030fd8	pushq	%r13
0000000100030fda	pushq	%r12
0000000100030fdc	pushq	%rbx
0000000100030fdd	pushq	%rax
0000000100030fde	movq	%rdx, %rbx
0000000100030fe1	movq	%rsi, %r15
0000000100030fe4	movq	%rdi, %r14
0000000100030fe7	testq	%rdx, %rdx
0000000100030fea	je	0x100031093
0000000100030ff0	movzbl	(%r15), %eax
0000000100030ff4	cmpl	$0x2f, %eax
0000000100030ff7	je	0x100030ffe
0000000100030ff9	cmpl	$0x5c, %eax
0000000100030ffc	jne	0x100031065
0000000100030ffe	xorl	%r13d, %r13d
0000000100031001	testq	%rbx, %rbx
0000000100031004	setns	%al
0000000100031007	js	0x100031149
000000010003100d	movb	%al, %r13b
0000000100031010	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100031017	movzbl	(%rax), %eax
000000010003101a	movq	%rbx, %rdi
000000010003101d	movq	%r13, %rsi
0000000100031020	callq	___rust_alloc
0000000100031025	testq	%rax, %rax
0000000100031028	je	0x10003114e
000000010003102e	movq	%rax, %r12
0000000100031031	movq	%rax, %rdi
0000000100031034	movq	%r15, %rsi
0000000100031037	movq	%rbx, %rdx
000000010003103a	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010003103f	movq	0x8(%r14), %rsi
0000000100031043	testq	%rsi, %rsi
0000000100031046	je	0x100031055
0000000100031048	movq	(%r14), %rdi
000000010003104b	movl	$0x1, %edx
0000000100031050	callq	___rust_dealloc
0000000100031055	movq	%r12, (%r14)
0000000100031058	movq	%rbx, 0x8(%r14)
000000010003105c	movq	%rbx, 0x10(%r14)
0000000100031060	jmp	0x100031123
0000000100031065	cmpq	$0x2, %rbx
0000000100031069	jb	0x100031093
000000010003106b	cmpb	$-0x40, 0x1(%r15)
0000000100031070	jl	0x100031093
0000000100031072	cmpq	$0x3, %rbx
0000000100031076	jbe	0x100031081
0000000100031078	cmpb	$-0x40, 0x3(%r15)
000000010003107d	jge	0x100031083
000000010003107f	jmp	0x100031093
0000000100031081	jne	0x100031093
0000000100031083	movzwl	0x1(%r15), %eax
0000000100031088	cmpl	$0x5c3a, %eax                   ## imm = 0x5C3A
000000010003108d	je	0x100030ffe
0000000100031093	movq	(%r14), %rdi
0000000100031096	movq	0x10(%r14), %r12
000000010003109a	testq	%r12, %r12
000000010003109d	je	0x1000310a9
000000010003109f	cmpb	$0x5c, (%rdi)
00000001000310a2	jne	0x1000310ae
00000001000310a4	movb	$0x5c, %r13b
00000001000310a7	jmp	0x1000310d8
00000001000310a9	xorl	%r12d, %r12d
00000001000310ac	jmp	0x100031102
00000001000310ae	movb	$0x2f, %r13b
00000001000310b1	cmpq	$0x2, %r12
00000001000310b5	jb	0x1000310d8
00000001000310b7	cmpb	$-0x40, 0x1(%rdi)
00000001000310bb	jl	0x1000310d8
00000001000310bd	cmpq	$0x3, %r12
00000001000310c1	jbe	0x1000310cb
00000001000310c3	cmpb	$-0x40, 0x3(%rdi)
00000001000310c7	jge	0x1000310cd
00000001000310c9	jmp	0x1000310d8
00000001000310cb	jne	0x1000310d8
00000001000310cd	movzwl	0x1(%rdi), %eax
00000001000310d1	cmpl	$0x5c3a, %eax                   ## imm = 0x5C3A
00000001000310d6	je	0x1000310a4
00000001000310d8	cmpb	-0x1(%r12,%rdi), %r13b
00000001000310dd	je	0x100031102
00000001000310df	cmpq	0x8(%r14), %r12
00000001000310e3	jne	0x1000310f7
00000001000310e5	movq	%r14, %rdi
00000001000310e8	movq	%r12, %rsi
00000001000310eb	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hf46942a7f5124d0fE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hf46942a7f5124d0f
00000001000310f0	movq	(%r14), %rdi
00000001000310f3	movq	0x10(%r14), %r12
00000001000310f7	movb	%r13b, (%rdi,%r12)
00000001000310fb	incq	%r12
00000001000310fe	movq	%r12, 0x10(%r14)
0000000100031102	movq	0x8(%r14), %rax
0000000100031106	subq	%r12, %rax
0000000100031109	cmpq	%rbx, %rax
000000010003110c	jb	0x100031132
000000010003110e	addq	%r12, %rdi
0000000100031111	movq	%r15, %rsi
0000000100031114	movq	%rbx, %rdx
0000000100031117	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010003111c	addq	%rbx, %r12
000000010003111f	movq	%r12, 0x10(%r14)
0000000100031123	addq	$0x8, %rsp
0000000100031127	popq	%rbx
0000000100031128	popq	%r12
000000010003112a	popq	%r13
000000010003112c	popq	%r14
000000010003112e	popq	%r15
0000000100031130	popq	%rbp
0000000100031131	retq
0000000100031132	movq	%r14, %rdi
0000000100031135	movq	%r12, %rsi
0000000100031138	movq	%rbx, %rdx
000000010003113b	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h58da627012337dfcE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h58da627012337dfc
0000000100031140	movq	(%r14), %rdi
0000000100031143	movq	0x10(%r14), %r12
0000000100031147	jmp	0x10003110e
0000000100031149	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010003114e	movq	%r13, %rdi
0000000100031151	movq	%rbx, %rsi
0000000100031154	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100031159	nopl	(%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3ff04b130d1cfc67E:
0000000100031160	pushq	%rbp
0000000100031161	movq	%rsp, %rbp
0000000100031164	pushq	%r14
0000000100031166	pushq	%rbx
0000000100031167	movq	%rsi, %rbx
000000010003116a	movq	(%rdi), %r14
000000010003116d	movq	%rsi, %rdi
0000000100031170	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
0000000100031175	testb	%al, %al
0000000100031177	je	0x100031188
0000000100031179	movq	%r14, %rdi
000000010003117c	movq	%rbx, %rsi
000000010003117f	popq	%rbx
0000000100031180	popq	%r14
0000000100031182	popq	%rbp
0000000100031183	jmp	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$3fmt17hdccece5688b0c434E ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$::fmt::hdccece5688b0c434
0000000100031188	movq	%rbx, %rdi
000000010003118b	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
0000000100031190	movq	%r14, %rdi
0000000100031193	movq	%rbx, %rsi
0000000100031196	testb	%al, %al
0000000100031198	je	0x1000311a3
000000010003119a	popq	%rbx
000000010003119b	popq	%r14
000000010003119d	popq	%rbp
000000010003119e	jmp	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h6243124a4619f577E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$::fmt::h6243124a4619f577
00000001000311a3	popq	%rbx
00000001000311a4	popq	%r14
00000001000311a6	popq	%rbp
00000001000311a7	jmp	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
00000001000311ac	nopl	(%rax)
__ZN4core3ptr109drop_in_place$LT$core..option..Option$LT$$LP$gimli..constants..DwEhPe$C$gimli..read..cfi..Pointer$RP$$GT$$GT$17h7a277ea367661f4eE:
00000001000311b0	pushq	%rbp
00000001000311b1	movq	%rsp, %rbp
00000001000311b4	popq	%rbp
00000001000311b5	retq
00000001000311b6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr134drop_in_place$LT$alloc..boxed..Box$LT$alloc..collections..btree..node..LeafNode$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$$GT$17h9c10968fdd459aabE:
00000001000311c0	pushq	%rbp
00000001000311c1	movq	%rsp, %rbp
00000001000311c4	movl	$0x538, %esi                    ## imm = 0x538
00000001000311c9	movl	$0x8, %edx
00000001000311ce	popq	%rbp
00000001000311cf	jmp	___rust_dealloc
00000001000311d4	nopw	%cs:(%rax,%rax)
00000001000311de	nop
__ZN4core3ptr138drop_in_place$LT$alloc..boxed..Box$LT$alloc..collections..btree..node..InternalNode$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$$GT$17h36ef238c0123e93aE:
00000001000311e0	pushq	%rbp
00000001000311e1	movq	%rsp, %rbp
00000001000311e4	movl	$0x598, %esi                    ## imm = 0x598
00000001000311e9	movl	$0x8, %edx
00000001000311ee	popq	%rbp
00000001000311ef	jmp	___rust_dealloc
00000001000311f4	nopw	%cs:(%rax,%rax)
00000001000311fe	nop
__ZN4core3ptr52drop_in_place$LT$gimli..read..abbrev..Attributes$GT$17he1161a61d80173feE:
0000000100031200	pushq	%rbp
0000000100031201	movq	%rsp, %rbp
0000000100031204	cmpq	$0x0, (%rdi)
0000000100031208	je	0x100031226
000000010003120a	movq	0x10(%rdi), %rsi
000000010003120e	testq	%rsi, %rsi
0000000100031211	je	0x100031226
0000000100031213	movq	0x8(%rdi), %rdi
0000000100031217	shlq	$0x4, %rsi
000000010003121b	movl	$0x8, %edx
0000000100031220	popq	%rbp
0000000100031221	jmp	___rust_dealloc
0000000100031226	popq	%rbp
0000000100031227	retq
0000000100031228	nopl	(%rax,%rax)
__ZN4core3ptr54drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$17hd304580b878511edE:
0000000100031230	pushq	%rbp
0000000100031231	movq	%rsp, %rbp
0000000100031234	cmpq	$0x0, (%rdi)
0000000100031238	je	0x100031256
000000010003123a	movq	0x10(%rdi), %rsi
000000010003123e	testq	%rsi, %rsi
0000000100031241	je	0x100031256
0000000100031243	movq	0x8(%rdi), %rdi
0000000100031247	shlq	$0x4, %rsi
000000010003124b	movl	$0x8, %edx
0000000100031250	popq	%rbp
0000000100031251	jmp	___rust_dealloc
0000000100031256	popq	%rbp
0000000100031257	retq
0000000100031258	nopl	(%rax,%rax)
__ZN4core3ptr68drop_in_place$LT$$LP$u64$C$gimli..read..abbrev..Abbreviation$RP$$GT$17h679083f6dbf20ec2E:
0000000100031260	pushq	%rbp
0000000100031261	movq	%rsp, %rbp
0000000100031264	cmpq	$0x0, 0x8(%rdi)
0000000100031269	je	0x100031287
000000010003126b	movq	0x18(%rdi), %rsi
000000010003126f	testq	%rsi, %rsi
0000000100031272	je	0x100031287
0000000100031274	movq	0x10(%rdi), %rdi
0000000100031278	shlq	$0x4, %rsi
000000010003127c	movl	$0x8, %edx
0000000100031281	popq	%rbp
0000000100031282	jmp	___rust_dealloc
0000000100031287	popq	%rbp
0000000100031288	retq
0000000100031289	nopl	(%rax)
__ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17hbb42aab4d5826dd7E:
0000000100031290	pushq	%rbp
0000000100031291	movq	%rsp, %rbp
0000000100031294	popq	%rbp
0000000100031295	jmp	__ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf6ce6a0ffec90dfaE ## _$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$::drop::hf6ce6a0ffec90dfa
000000010003129a	nopw	(%rax,%rax)
__ZN4core3ptr87drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..abbrev..AttributeSpecification$GT$$GT$17hfbfe3bf50afee89aE:
00000001000312a0	pushq	%rbp
00000001000312a1	movq	%rsp, %rbp
00000001000312a4	testq	%rsi, %rsi
00000001000312a7	je	0x1000312b8
00000001000312a9	shlq	$0x4, %rsi
00000001000312ad	movl	$0x8, %edx
00000001000312b2	popq	%rbp
00000001000312b3	jmp	___rust_dealloc
00000001000312b8	popq	%rbp
00000001000312b9	retq
00000001000312ba	nopw	(%rax,%rax)
__ZN5alloc7raw_vec11finish_grow17hfd2d82c45e95ad3fE:
00000001000312c0	pushq	%rbp
00000001000312c1	movq	%rsp, %rbp
00000001000312c4	pushq	%r15
00000001000312c6	pushq	%r14
00000001000312c8	pushq	%rbx
00000001000312c9	pushq	%rax
00000001000312ca	movq	%rdx, %rbx
00000001000312cd	movq	%rdi, %r14
00000001000312d0	testq	%rsi, %rsi
00000001000312d3	je	0x100031328
00000001000312d5	movq	%rsi, %r15
00000001000312d8	cmpq	$0x0, 0x8(%rcx)
00000001000312dd	je	0x100031301
00000001000312df	movq	0x10(%rcx), %rsi
00000001000312e3	testq	%rsi, %rsi
00000001000312e6	je	0x100031301
00000001000312e8	movq	(%rcx), %rdi
00000001000312eb	movq	%r15, %rdx
00000001000312ee	movq	%rbx, %rcx
00000001000312f1	callq	___rust_realloc
00000001000312f6	testq	%rax, %rax
00000001000312f9	jne	0x100031320
00000001000312fb	movq	%r15, 0x8(%r14)
00000001000312ff	jmp	0x100031330
0000000100031301	testq	%rbx, %rbx
0000000100031304	je	0x100031347
0000000100031306	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010003130d	movzbl	(%rax), %eax
0000000100031310	movq	%rbx, %rdi
0000000100031313	movq	%r15, %rsi
0000000100031316	callq	___rust_alloc
000000010003131b	testq	%rax, %rax
000000010003131e	je	0x1000312fb
0000000100031320	movq	%rax, 0x8(%r14)
0000000100031324	xorl	%eax, %eax
0000000100031326	jmp	0x100031335
0000000100031328	movq	$0x0, 0x8(%r14)
0000000100031330	movl	$0x1, %eax
0000000100031335	movq	%rbx, 0x10(%r14)
0000000100031339	movq	%rax, (%r14)
000000010003133c	addq	$0x8, %rsp
0000000100031340	popq	%rbx
0000000100031341	popq	%r14
0000000100031343	popq	%r15
0000000100031345	popq	%rbp
0000000100031346	retq
0000000100031347	movq	%r15, %rax
000000010003134a	testq	%rax, %rax
000000010003134d	jne	0x100031320
000000010003134f	jmp	0x1000312fb
0000000100031351	nopw	%cs:(%rax,%rax)
000000010003135b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h3926126e810b8c22E:
0000000100031360	pushq	%rbp
0000000100031361	movq	%rsp, %rbp
0000000100031364	pushq	%r14
0000000100031366	pushq	%rbx
0000000100031367	subq	$0x30, %rsp
000000010003136b	incq	%rsi
000000010003136e	je	0x100031401
0000000100031374	movq	%rdi, %rbx
0000000100031377	movq	0x8(%rdi), %rax
000000010003137b	leaq	(%rax,%rax), %rcx
000000010003137f	cmpq	%rsi, %rcx
0000000100031382	cmovaq	%rcx, %rsi
0000000100031386	cmpq	$0x5, %rsi
000000010003138a	movl	$0x4, %r14d
0000000100031390	cmovaeq	%rsi, %r14
0000000100031394	movabsq	$0x124924924924925, %rcx        ## imm = 0x124924924924925
000000010003139e	xorl	%esi, %esi
00000001000313a0	cmpq	%rcx, %r14
00000001000313a3	setb	%sil
00000001000313a7	imulq	$0x70, %r14, %rdx
00000001000313ab	shlq	$0x3, %rsi
00000001000313af	testq	%rax, %rax
00000001000313b2	je	0x1000313cd
00000001000313b4	movq	(%rbx), %rcx
00000001000313b7	imulq	$0x70, %rax, %rax
00000001000313bb	movq	%rcx, -0x28(%rbp)
00000001000313bf	movq	$0x8, -0x20(%rbp)
00000001000313c7	movq	%rax, -0x18(%rbp)
00000001000313cb	jmp	0x1000313d5
00000001000313cd	movq	$0x0, -0x20(%rbp)
00000001000313d5	leaq	-0x40(%rbp), %rdi
00000001000313d9	leaq	-0x28(%rbp), %rcx
00000001000313dd	callq	__ZN5alloc7raw_vec11finish_grow17hfd2d82c45e95ad3fE ## alloc::raw_vec::finish_grow::hfd2d82c45e95ad3f
00000001000313e2	cmpq	$0x0, -0x40(%rbp)
00000001000313e7	movq	-0x38(%rbp), %rdi
00000001000313eb	je	0x100031406
00000001000313ed	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
00000001000313f7	cmpq	%rax, %rdi
00000001000313fa	je	0x10003140d
00000001000313fc	testq	%rdi, %rdi
00000001000313ff	jne	0x100031416
0000000100031401	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100031406	movq	%rdi, (%rbx)
0000000100031409	movq	%r14, 0x8(%rbx)
000000010003140d	addq	$0x30, %rsp
0000000100031411	popq	%rbx
0000000100031412	popq	%r14
0000000100031414	popq	%rbp
0000000100031415	retq
0000000100031416	movq	-0x30(%rbp), %rsi
000000010003141a	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010003141f	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17ha079e07a0e7d13efE:
0000000100031420	pushq	%rbp
0000000100031421	movq	%rsp, %rbp
0000000100031424	pushq	%r14
0000000100031426	pushq	%rbx
0000000100031427	subq	$0x30, %rsp
000000010003142b	incq	%rsi
000000010003142e	je	0x1000314be
0000000100031434	movq	%rdi, %rbx
0000000100031437	movq	0x8(%rdi), %rax
000000010003143b	leaq	(%rax,%rax), %rcx
000000010003143f	cmpq	%rsi, %rcx
0000000100031442	cmovaq	%rcx, %rsi
0000000100031446	cmpq	$0x5, %rsi
000000010003144a	movl	$0x4, %r14d
0000000100031450	cmovaeq	%rsi, %r14
0000000100031454	xorl	%esi, %esi
0000000100031456	movq	%r14, %rcx
0000000100031459	shrq	$0x3b, %rcx
000000010003145d	sete	%sil
0000000100031461	movq	%r14, %rdx
0000000100031464	shlq	$0x4, %rdx
0000000100031468	shlq	$0x3, %rsi
000000010003146c	testq	%rax, %rax
000000010003146f	je	0x10003148a
0000000100031471	movq	(%rbx), %rcx
0000000100031474	shlq	$0x4, %rax
0000000100031478	movq	%rcx, -0x28(%rbp)
000000010003147c	movq	$0x8, -0x20(%rbp)
0000000100031484	movq	%rax, -0x18(%rbp)
0000000100031488	jmp	0x100031492
000000010003148a	movq	$0x0, -0x20(%rbp)
0000000100031492	leaq	-0x40(%rbp), %rdi
0000000100031496	leaq	-0x28(%rbp), %rcx
000000010003149a	callq	__ZN5alloc7raw_vec11finish_grow17hfd2d82c45e95ad3fE ## alloc::raw_vec::finish_grow::hfd2d82c45e95ad3f
000000010003149f	cmpq	$0x0, -0x40(%rbp)
00000001000314a4	movq	-0x38(%rbp), %rdi
00000001000314a8	je	0x1000314c3
00000001000314aa	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
00000001000314b4	cmpq	%rax, %rdi
00000001000314b7	je	0x1000314ca
00000001000314b9	testq	%rdi, %rdi
00000001000314bc	jne	0x1000314d3
00000001000314be	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
00000001000314c3	movq	%rdi, (%rbx)
00000001000314c6	movq	%r14, 0x8(%rbx)
00000001000314ca	addq	$0x30, %rsp
00000001000314ce	popq	%rbx
00000001000314cf	popq	%r14
00000001000314d1	popq	%rbp
00000001000314d2	retq
00000001000314d3	movq	-0x30(%rbp), %rsi
00000001000314d7	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000314dc	nopl	(%rax)
__ZN5gimli6common9SectionId4name17h0886f39cde208330E:
00000001000314e0	pushq	%rbp
00000001000314e1	movq	%rsp, %rbp
00000001000314e4	movsbq	%dil, %rcx
00000001000314e8	leaq	0x148cd(%rip), %rdx
00000001000314ef	movslq	(%rdx,%rcx,4), %rax
00000001000314f3	addq	%rdx, %rax
00000001000314f6	leaq	0x1491b(%rip), %rdx
00000001000314fd	movq	(%rdx,%rcx,8), %rdx
0000000100031501	popq	%rbp
0000000100031502	retq
0000000100031503	nopw	%cs:(%rax,%rax)
000000010003150d	nopl	(%rax)
__ZN5gimli6common9SectionId8dwo_name17ha28591485e0f22b1E:
0000000100031510	cmpb	$0x15, %dil
0000000100031514	ja	0x100031524
0000000100031516	movzbl	%dil, %eax
000000010003151a	movl	$0x3e2d89, %ecx                 ## imm = 0x3E2D89
000000010003151f	btl	%eax, %ecx
0000000100031522	jb	0x100031527
0000000100031524	xorl	%eax, %eax
0000000100031526	retq
0000000100031527	pushq	%rbp
0000000100031528	movq	%rsp, %rbp
000000010003152b	movsbq	%dil, %rcx
000000010003152f	leaq	0x14992(%rip), %rdx
0000000100031536	movslq	(%rdx,%rcx,4), %rax
000000010003153a	addq	%rdx, %rax
000000010003153d	leaq	0x149dc(%rip), %rdx
0000000100031544	movq	(%rdx,%rcx,8), %rdx
0000000100031548	popq	%rbp
0000000100031549	retq
000000010003154a	nopw	(%rax,%rax)
__ZN5gimli4read6abbrev18AbbreviationsCache3new17h03edca24ae6be20cE:
0000000100031550	pushq	%rbp
0000000100031551	movq	%rsp, %rbp
0000000100031554	xorl	%eax, %eax
0000000100031556	popq	%rbp
0000000100031557	retq
0000000100031558	nopl	(%rax,%rax)
__ZN5gimli4read6abbrev13Abbreviations5empty17hc7edab4c6dd5fdf7E:
0000000100031560	pushq	%rbp
0000000100031561	movq	%rsp, %rbp
0000000100031564	movq	%rdi, %rax
0000000100031567	movq	$0x8, (%rdi)
000000010003156e	movq	$0x0, 0x28(%rdi)
0000000100031576	movq	$0x0, 0x8(%rdi)
000000010003157e	movq	$0x0, 0x10(%rdi)
0000000100031586	movq	$0x0, 0x18(%rdi)
000000010003158e	popq	%rbp
000000010003158f	retq
__ZN5gimli4read6abbrev13Abbreviations6insert17ha17b445e6a99b7e6E:
0000000100031590	pushq	%rbp
0000000100031591	movq	%rsp, %rbp
0000000100031594	pushq	%r15
0000000100031596	pushq	%r14
0000000100031598	pushq	%r13
000000010003159a	pushq	%r12
000000010003159c	pushq	%rbx
000000010003159d	subq	$0x318, %rsp                    ## imm = 0x318
00000001000315a4	movq	%rsi, %r13
00000001000315a7	movq	0x60(%rsi), %r14
00000001000315ab	leaq	-0x1(%r14), %r8
00000001000315af	cmpq	0x10(%rdi), %r8
00000001000315b3	jae	0x1000315e6
00000001000315b5	movb	$0x1, %bl
00000001000315b7	cmpq	$0x0, (%r13)
00000001000315bc	je	0x1000317cc
00000001000315c2	movq	0x10(%r13), %rsi
00000001000315c6	testq	%rsi, %rsi
00000001000315c9	je	0x1000317cc
00000001000315cf	movq	0x8(%r13), %rdi
00000001000315d3	shlq	$0x4, %rsi
00000001000315d7	movl	$0x8, %edx
00000001000315dc	callq	___rust_dealloc
00000001000315e1	jmp	0x1000317cc
00000001000315e6	movq	%rdi, %rbx
00000001000315e9	jne	0x10003167a
00000001000315ef	cmpq	$0x0, 0x28(%rbx)
00000001000315f4	je	0x100031787
00000001000315fa	movq	0x18(%rbx), %rax
00000001000315fe	testq	%rax, %rax
0000000100031601	je	0x100031787
0000000100031607	movq	0x20(%rbx), %rcx
000000010003160b	movl	$0xff, %edx
0000000100031610	movzwl	0x532(%rax), %edi
0000000100031617	leaq	(,%rdi,8), %r9
000000010003161f	movq	$-0x1, %rsi
0000000100031626	nopw	%cs:(%rax,%rax)
0000000100031630	testq	%r9, %r9
0000000100031633	je	0x100031663
0000000100031635	xorl	%r10d, %r10d
0000000100031638	cmpq	%r14, 0x4e0(%rax,%rsi,8)
0000000100031640	setne	%r10b
0000000100031644	cmoval	%edx, %r10d
0000000100031648	incq	%rsi
000000010003164b	addq	$-0x8, %r9
000000010003164f	cmpb	$0x1, %r10b
0000000100031653	je	0x100031630
0000000100031655	movzbl	%r10b, %edi
0000000100031659	testl	%edi, %edi
000000010003165b	je	0x10003177e
0000000100031661	jmp	0x100031666
0000000100031663	movq	%rdi, %rsi
0000000100031666	subq	$0x1, %rcx
000000010003166a	jb	0x100031787
0000000100031670	movq	0x538(%rax,%rsi,8), %rax
0000000100031678	jmp	0x100031610
000000010003167a	movq	0x18(%rbx), %r12
000000010003167e	testq	%r12, %r12
0000000100031681	je	0x100031708
0000000100031687	movq	%rbx, -0x78(%rbp)
000000010003168b	movq	0x20(%rbx), %rdi
000000010003168f	movl	$0xff, %eax
0000000100031694	movq	%rdi, %rcx
0000000100031697	movq	%r12, -0x70(%rbp)
000000010003169b	leaq	0x4d8(%r12), %rdx
00000001000316a3	movq	%rdx, -0x30(%rbp)
00000001000316a7	movzwl	0x532(%r12), %ebx
00000001000316b0	leaq	(,%rbx,8), %rdx
00000001000316b8	movq	$-0x1, %r15
00000001000316bf	nop
00000001000316c0	testq	%rdx, %rdx
00000001000316c3	je	0x1000316f1
00000001000316c5	xorl	%esi, %esi
00000001000316c7	cmpq	%r14, 0x4e0(%r12,%r15,8)
00000001000316cf	setne	%sil
00000001000316d3	cmoval	%eax, %esi
00000001000316d6	incq	%r15
00000001000316d9	addq	$-0x8, %rdx
00000001000316dd	cmpb	$0x1, %sil
00000001000316e1	je	0x1000316c0
00000001000316e3	movzbl	%sil, %edx
00000001000316e7	testl	%edx, %edx
00000001000316e9	je	0x1000315b5
00000001000316ef	jmp	0x1000316f4
00000001000316f1	movq	%rbx, %r15
00000001000316f4	subq	$0x1, %rcx
00000001000316f8	jb	0x1000317e0
00000001000316fe	movq	0x538(%r12,%r15,8), %r12
0000000100031706	jmp	0x10003169b
0000000100031708	leaq	-0x340(%rbp), %r15
000000010003170f	movl	$0xe, %ecx
0000000100031714	movq	%r15, %rdi
0000000100031717	movq	%r13, %rsi
000000010003171a	rep		movsq	(%rsi), %es:(%rdi)
000000010003171d	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100031724	movzbl	(%rax), %eax
0000000100031727	movl	$0x538, %edi                    ## imm = 0x538
000000010003172c	movl	$0x8, %esi
0000000100031731	callq	___rust_alloc
0000000100031736	testq	%rax, %rax
0000000100031739	je	0x100032219
000000010003173f	movq	$0x0, 0x4d0(%rax)
000000010003174a	movl	$0xe, %ecx
000000010003174f	movq	%rax, %rdi
0000000100031752	movq	%r13, %rsi
0000000100031755	rep		movsq	(%rsi), %es:(%rdi)
0000000100031758	movw	$0x1, 0x532(%rax)
0000000100031761	movq	%r14, 0x4d8(%rax)
0000000100031768	movq	%rax, 0x18(%rbx)
000000010003176c	movq	$0x0, 0x20(%rbx)
0000000100031774	movq	$0x1, 0x28(%rbx)
000000010003177c	jmp	0x1000317ca
000000010003177e	testq	%rax, %rax
0000000100031781	jne	0x1000315b5
0000000100031787	leaq	-0x120(%rbp), %r14
000000010003178e	movl	$0xe, %ecx
0000000100031793	movq	%r14, %rdi
0000000100031796	movq	%r13, %rsi
0000000100031799	rep		movsq	(%rsi), %es:(%rdi)
000000010003179c	cmpq	0x8(%rbx), %r8
00000001000317a0	jne	0x1000317b1
00000001000317a2	movq	%rbx, %rdi
00000001000317a5	movq	%r8, %rsi
00000001000317a8	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h3926126e810b8c22E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h3926126e810b8c22
00000001000317ad	movq	0x10(%rbx), %r8
00000001000317b1	imulq	$0x70, %r8, %rdi
00000001000317b5	addq	(%rbx), %rdi
00000001000317b8	movl	$0xe, %ecx
00000001000317bd	movq	%r13, %rsi
00000001000317c0	rep		movsq	(%rsi), %es:(%rdi)
00000001000317c3	incq	%r8
00000001000317c6	movq	%r8, 0x10(%rbx)
00000001000317ca	xorl	%ebx, %ebx
00000001000317cc	movl	%ebx, %eax
00000001000317ce	addq	$0x318, %rsp                    ## imm = 0x318
00000001000317d5	popq	%rbx
00000001000317d6	popq	%r12
00000001000317d8	popq	%r13
00000001000317da	popq	%r14
00000001000317dc	popq	%r15
00000001000317de	popq	%rbp
00000001000317df	retq
00000001000317e0	movq	%rdi, -0x80(%rbp)
00000001000317e4	leaq	-0x340(%rbp), %rdi
00000001000317eb	movl	$0xe, %ecx
00000001000317f0	movq	%r13, %rsi
00000001000317f3	rep		movsq	(%rsi), %es:(%rdi)
00000001000317f6	leaq	-0x200(%rbp), %rdi
00000001000317fd	movl	$0xe, %ecx
0000000100031802	movq	%rdi, -0x50(%rbp)
0000000100031806	movq	%r13, %rsi
0000000100031809	rep		movsq	(%rsi), %es:(%rdi)
000000010003180c	cmpw	$0xa, %bx
0000000100031810	jbe	0x10003197a
0000000100031816	leaq	-0x120(%rbp), %rdi
000000010003181d	movq	%r15, %rsi
0000000100031820	callq	__ZN5alloc11collections5btree4node10splitpoint17hfb16b3107f583869E ## alloc::collections::btree::node::splitpoint::hfb16b3107f583869
0000000100031825	movq	-0x120(%rbp), %rax
000000010003182c	movq	%rax, -0x40(%rbp)
0000000100031830	movq	-0x118(%rbp), %rbx
0000000100031837	movq	-0x110(%rbp), %rax
000000010003183e	movq	%rax, -0x38(%rbp)
0000000100031842	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100031849	movzbl	(%rax), %eax
000000010003184c	movl	$0x538, %edi                    ## imm = 0x538
0000000100031851	movl	$0x8, %esi
0000000100031856	callq	___rust_alloc
000000010003185b	testq	%rax, %rax
000000010003185e	je	0x1000322ae
0000000100031864	movq	%rbx, -0x58(%rbp)
0000000100031868	movq	$0x0, 0x4d0(%rax)
0000000100031873	movzwl	0x532(%r12), %edx
000000010003187c	movq	-0x40(%rbp), %rcx
0000000100031880	movq	%rcx, %r15
0000000100031883	notq	%r15
0000000100031886	addq	%rdx, %r15
0000000100031889	movq	%rax, -0x48(%rbp)
000000010003188d	movw	%r15w, 0x532(%rax)
0000000100031895	movq	0x4d8(%r12,%rcx,8), %rax
000000010003189d	movq	%rax, -0x60(%rbp)
00000001000318a1	imulq	$0x70, %rcx, %rsi
00000001000318a5	addq	%r12, %rsi
00000001000318a8	leaq	-0x120(%rbp), %rdi
00000001000318af	movl	$0xe, %ecx
00000001000318b4	rep		movsq	(%rsi), %es:(%rdi)
00000001000318b7	cmpq	$0xb, %r15
00000001000318bb	ja	0x1000322bf
00000001000318c1	movq	-0x40(%rbp), %rax
00000001000318c5	leaq	0x1(%rax), %rbx
00000001000318c9	subq	%rbx, %rdx
00000001000318cc	cmpq	%r15, %rdx
00000001000318cf	jne	0x1000322d5
00000001000318d5	movq	-0x48(%rbp), %rax
00000001000318d9	leaq	0x4d8(%rax), %rdi
00000001000318e0	movq	-0x30(%rbp), %rax
00000001000318e4	leaq	(%rax,%rbx,8), %rsi
00000001000318e8	leaq	(,%r15,8), %rdx
00000001000318f0	callq	0x1000427c6                     ## symbol stub for: _memcpy
00000001000318f5	imulq	$0x70, %rbx, %rsi
00000001000318f9	addq	%r12, %rsi
00000001000318fc	imulq	$0x70, %r15, %rdx
0000000100031900	movq	-0x48(%rbp), %rbx
0000000100031904	movq	%rbx, %rdi
0000000100031907	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010003190c	movq	-0x40(%rbp), %rax
0000000100031910	movw	%ax, 0x532(%r12)
0000000100031919	movq	-0x120(%rbp), %r9
0000000100031920	leaq	-0x118(%rbp), %rsi
0000000100031927	leaq	-0x190(%rbp), %rdi
000000010003192e	movl	$0xd, %ecx
0000000100031933	rep		movsq	(%rsi), %es:(%rdi)
0000000100031936	cmpq	$0x0, -0x58(%rbp)
000000010003193b	cmoveq	%r12, %rbx
000000010003193f	movzwl	0x532(%rbx), %r15d
0000000100031947	movq	-0x38(%rbp), %rdx
000000010003194b	leaq	0x1(%rdx), %rcx
000000010003194f	leaq	0x4d8(%rbx,%rdx,8), %rsi
0000000100031957	cmpq	%r15, %rcx
000000010003195a	jbe	0x100031a11
0000000100031960	movq	%r14, (%rsi)
0000000100031963	leaq	-0x120(%rbp), %rdi
000000010003196a	movl	$0xe, %ecx
000000010003196f	movq	%r13, %rsi
0000000100031972	rep		movsq	(%rsi), %es:(%rdi)
0000000100031975	jmp	0x100031a7b
000000010003197a	movq	-0x30(%rbp), %rax
000000010003197e	leaq	(%rax,%r15,8), %rsi
0000000100031982	cmpq	%rbx, %r15
0000000100031985	jae	0x1000319d6
0000000100031987	leaq	0x8(%rax,%r15,8), %rdi
000000010003198c	movq	%rbx, %rax
000000010003198f	subq	%r15, %rax
0000000100031992	movq	%rax, -0x30(%rbp)
0000000100031996	leaq	(,%rax,8), %rdx
000000010003199e	callq	0x1000427cc                     ## symbol stub for: _memmove
00000001000319a3	movq	%r14, 0x4d8(%r12,%r15,8)
00000001000319ab	leaq	-0x120(%rbp), %rdi
00000001000319b2	movl	$0xe, %ecx
00000001000319b7	movq	%r13, %rsi
00000001000319ba	rep		movsq	(%rsi), %es:(%rdi)
00000001000319bd	imulq	$0x70, %r15, %rax
00000001000319c1	leaq	(%r12,%rax), %rsi
00000001000319c5	leaq	0x70(%r12,%rax), %rdi
00000001000319ca	imulq	$0x70, -0x30(%rbp), %rdx
00000001000319cf	callq	0x1000427cc                     ## symbol stub for: _memmove
00000001000319d4	jmp	0x1000319eb
00000001000319d6	movq	%r14, (%rsi)
00000001000319d9	leaq	-0x120(%rbp), %rdi
00000001000319e0	movl	$0xe, %ecx
00000001000319e5	movq	%r13, %rsi
00000001000319e8	rep		movsq	(%rsi), %es:(%rdi)
00000001000319eb	incl	%ebx
00000001000319ed	imulq	$0x70, %r15, %rdi
00000001000319f1	addq	%r12, %rdi
00000001000319f4	leaq	-0x120(%rbp), %rsi
00000001000319fb	movl	$0xe, %ecx
0000000100031a00	rep		movsq	(%rsi), %es:(%rdi)
0000000100031a03	movw	%bx, 0x532(%r12)
0000000100031a0c	jmp	0x100031ab8
0000000100031a11	leaq	0x4d8(%rbx), %rax
0000000100031a18	leaq	(%rax,%rcx,8), %rdi
0000000100031a1c	movq	%r15, %rax
0000000100031a1f	subq	%rdx, %rax
0000000100031a22	movq	%rax, -0x30(%rbp)
0000000100031a26	leaq	(,%rax,8), %rdx
0000000100031a2e	movq	%r9, -0x40(%rbp)
0000000100031a32	movq	%rcx, -0x58(%rbp)
0000000100031a36	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100031a3b	movq	-0x38(%rbp), %rax
0000000100031a3f	movq	%r14, 0x4d8(%rbx,%rax,8)
0000000100031a47	leaq	-0x120(%rbp), %rdi
0000000100031a4e	movl	$0xe, %ecx
0000000100031a53	movq	%r13, %rsi
0000000100031a56	rep		movsq	(%rsi), %es:(%rdi)
0000000100031a59	imulq	$0x70, -0x38(%rbp), %rsi
0000000100031a5e	addq	%rbx, %rsi
0000000100031a61	imulq	$0x70, -0x58(%rbp), %rdi
0000000100031a66	addq	%rbx, %rdi
0000000100031a69	imulq	$0x70, -0x30(%rbp), %rdx
0000000100031a6e	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100031a73	movq	-0x38(%rbp), %rdx
0000000100031a77	movq	-0x40(%rbp), %r9
0000000100031a7b	incl	%r15d
0000000100031a7e	imulq	$0x70, %rdx, %rdi
0000000100031a82	addq	%rbx, %rdi
0000000100031a85	leaq	-0x120(%rbp), %rsi
0000000100031a8c	movl	$0xe, %ecx
0000000100031a91	rep		movsq	(%rsi), %es:(%rdi)
0000000100031a94	movw	%r15w, 0x532(%rbx)
0000000100031a9c	leaq	-0x2d0(%rbp), %rdi
0000000100031aa3	leaq	-0x190(%rbp), %rsi
0000000100031aaa	movl	$0xd, %ecx
0000000100031aaf	rep		movsq	(%rsi), %es:(%rdi)
0000000100031ab2	cmpq	$0x2, %r9
0000000100031ab6	jne	0x100031ac5
0000000100031ab8	movq	-0x78(%rbp), %rax
0000000100031abc	incq	0x28(%rax)
0000000100031ac0	jmp	0x1000317ca
0000000100031ac5	leaq	-0x268(%rbp), %rdi
0000000100031acc	leaq	-0x2d0(%rbp), %rsi
0000000100031ad3	movl	$0xd, %ecx
0000000100031ad8	rep		movsq	(%rsi), %es:(%rdi)
0000000100031adb	movq	0x4d0(%r12), %rax
0000000100031ae3	testq	%rax, %rax
0000000100031ae6	je	0x100031f4d
0000000100031aec	xorl	%ecx, %ecx
0000000100031aee	movq	%rcx, -0x68(%rbp)
0000000100031af2	leaq	-0x268(%rbp), %rdx
0000000100031af9	leaq	-0x120(%rbp), %r8
0000000100031b00	leaq	-0x190(%rbp), %rcx
0000000100031b07	movq	%rcx, -0x50(%rbp)
0000000100031b0b	movq	-0x48(%rbp), %rcx
0000000100031b0f	movq	-0x60(%rbp), %rsi
0000000100031b13	movq	%rsi, -0x38(%rbp)
0000000100031b17	movq	%rcx, -0x58(%rbp)
0000000100031b1b	movzwl	0x530(%r12), %r15d
0000000100031b24	movq	%rax, %r12
0000000100031b27	movq	%r9, -0x190(%rbp)
0000000100031b2e	movl	$0xd, %ecx
0000000100031b33	leaq	-0x188(%rbp), %rdi
0000000100031b3a	movq	%rdx, %rsi
0000000100031b3d	rep		movsq	(%rsi), %es:(%rdi)
0000000100031b40	movzwl	0x532(%rax), %r13d
0000000100031b48	cmpq	$0xb, %r13
0000000100031b4c	jb	0x100032083
0000000100031b52	movq	%r8, %rdi
0000000100031b55	movq	%r15, %rsi
0000000100031b58	callq	__ZN5alloc11collections5btree4node10splitpoint17hfb16b3107f583869E ## alloc::collections::btree::node::splitpoint::hfb16b3107f583869
0000000100031b5d	movq	-0x120(%rbp), %rax
0000000100031b64	movq	%rax, -0x40(%rbp)
0000000100031b68	movq	-0x118(%rbp), %rbx
0000000100031b6f	movq	-0x110(%rbp), %rax
0000000100031b76	movq	%rax, -0x30(%rbp)
0000000100031b7a	movzwl	0x532(%r12), %r13d
0000000100031b83	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100031b8a	movzbl	(%rax), %eax
0000000100031b8d	movl	$0x598, %edi                    ## imm = 0x598
0000000100031b92	movl	$0x8, %esi
0000000100031b97	callq	___rust_alloc
0000000100031b9c	testq	%rax, %rax
0000000100031b9f	je	0x10003224a
0000000100031ba5	movq	%rax, %r15
0000000100031ba8	movq	%rbx, -0x88(%rbp)
0000000100031baf	movq	%rax, %rcx
0000000100031bb2	movq	$0x0, 0x4d0(%r15)
0000000100031bbd	movzwl	0x532(%r12), %eax
0000000100031bc6	movq	-0x40(%rbp), %rdx
0000000100031bca	movq	%rdx, %r14
0000000100031bcd	notq	%r14
0000000100031bd0	addq	%rax, %r14
0000000100031bd3	movq	%r15, -0x48(%rbp)
0000000100031bd7	movw	%r14w, 0x532(%r15)
0000000100031bdf	movq	0x4d8(%r12,%rdx,8), %rcx
0000000100031be7	movq	%rcx, -0x60(%rbp)
0000000100031beb	imulq	$0x70, %rdx, %rsi
0000000100031bef	addq	%r12, %rsi
0000000100031bf2	movl	$0xe, %ecx
0000000100031bf7	leaq	-0x200(%rbp), %rdi
0000000100031bfe	rep		movsq	(%rsi), %es:(%rdi)
0000000100031c01	cmpq	$0xb, %r14
0000000100031c05	ja	0x100032231
0000000100031c0b	leaq	0x1(%rdx), %rbx
0000000100031c0f	subq	%rbx, %rax
0000000100031c12	cmpq	%r14, %rax
0000000100031c15	jne	0x10003225e
0000000100031c1b	leaq	0x4d8(%r12), %rax
0000000100031c23	leaq	0x4d8(%r15), %rdi
0000000100031c2a	leaq	(%rax,%rbx,8), %rsi
0000000100031c2e	leaq	(,%r14,8), %rdx
0000000100031c36	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100031c3b	imulq	$0x70, %rbx, %rsi
0000000100031c3f	addq	%r12, %rsi
0000000100031c42	imulq	$0x70, %r14, %rdx
0000000100031c46	movq	-0x48(%rbp), %r14
0000000100031c4a	movq	%r14, %rdi
0000000100031c4d	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100031c52	movq	-0x40(%rbp), %rdx
0000000100031c56	movw	%dx, 0x532(%r12)
0000000100031c5f	movl	$0xe, %ecx
0000000100031c64	leaq	-0x118(%rbp), %rdi
0000000100031c6b	leaq	-0x200(%rbp), %rsi
0000000100031c72	rep		movsq	(%rsi), %es:(%rdi)
0000000100031c75	movq	-0x60(%rbp), %rax
0000000100031c79	movq	%rax, -0x120(%rbp)
0000000100031c80	movzwl	0x532(%r14), %r14d
0000000100031c88	leaq	0x1(%r14), %rdi
0000000100031c8c	cmpq	$0xc, %r14
0000000100031c90	jae	0x100032298
0000000100031c96	subq	%rdx, %r13
0000000100031c99	cmpq	%rdi, %r13
0000000100031c9c	jne	0x10003227b
0000000100031ca2	incq	-0x68(%rbp)
0000000100031ca6	leaq	0x538(%r15), %rdi
0000000100031cad	leaq	0x538(%r12,%rbx,8), %rsi
0000000100031cb5	shlq	$0x3, %r13
0000000100031cb9	movq	%r13, %rdx
0000000100031cbc	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100031cc1	xorl	%eax, %eax
0000000100031cc3	movq	-0x48(%rbp), %rsi
0000000100031cc7	nopw	(%rax,%rax)
0000000100031cd0	movq	%rax, %rcx
0000000100031cd3	cmpq	%r14, %rax
0000000100031cd6	adcq	$0x0, %rax
0000000100031cda	movq	0x538(%rsi,%rcx,8), %rdx
0000000100031ce2	movq	%rsi, 0x4d0(%rdx)
0000000100031ce9	movw	%cx, 0x530(%rdx)
0000000100031cf0	cmpq	%r14, %rcx
0000000100031cf3	jae	0x100031cfa
0000000100031cf5	cmpq	%r14, %rax
0000000100031cf8	jbe	0x100031cd0
0000000100031cfa	movq	-0x118(%rbp), %r9
0000000100031d01	movl	$0xd, %ecx
0000000100031d06	leaq	-0x200(%rbp), %rdi
0000000100031d0d	leaq	-0x110(%rbp), %rsi
0000000100031d14	rep		movsq	(%rsi), %es:(%rdi)
0000000100031d17	cmpq	$0x0, -0x88(%rbp)
0000000100031d1f	cmoveq	%r12, %r15
0000000100031d23	movzwl	0x532(%r15), %r13d
0000000100031d2b	movq	-0x30(%rbp), %r10
0000000100031d2f	leaq	0x1(%r10), %r14
0000000100031d33	leaq	0x4d8(%r15,%r10,8), %rsi
0000000100031d3b	cmpq	%r13, %r14
0000000100031d3e	movq	%r9, -0x40(%rbp)
0000000100031d42	jbe	0x100031d66
0000000100031d44	movq	-0x38(%rbp), %rax
0000000100031d48	movq	%rax, (%rsi)
0000000100031d4b	movl	$0xe, %ecx
0000000100031d50	leaq	-0x120(%rbp), %r8
0000000100031d57	movq	%r8, %rdi
0000000100031d5a	leaq	-0x190(%rbp), %rsi
0000000100031d61	rep		movsq	(%rsi), %es:(%rdi)
0000000100031d64	jmp	0x100031dd1
0000000100031d66	leaq	0x4d8(%r15), %rax
0000000100031d6d	leaq	(%rax,%r14,8), %rdi
0000000100031d71	movq	%r13, %rbx
0000000100031d74	subq	%r10, %rbx
0000000100031d77	leaq	(,%rbx,8), %rdx
0000000100031d7f	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100031d84	movq	-0x30(%rbp), %rax
0000000100031d88	movq	-0x38(%rbp), %rcx
0000000100031d8c	movq	%rcx, 0x4d8(%r15,%rax,8)
0000000100031d94	movl	$0xe, %ecx
0000000100031d99	leaq	-0x120(%rbp), %rdi
0000000100031da0	leaq	-0x190(%rbp), %rsi
0000000100031da7	rep		movsq	(%rsi), %es:(%rdi)
0000000100031daa	imulq	$0x70, -0x30(%rbp), %rsi
0000000100031daf	addq	%r15, %rsi
0000000100031db2	imulq	$0x70, %r14, %rdi
0000000100031db6	addq	%r15, %rdi
0000000100031db9	imulq	$0x70, %rbx, %rdx
0000000100031dbd	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100031dc2	movq	-0x30(%rbp), %r10
0000000100031dc6	movq	-0x40(%rbp), %r9
0000000100031dca	leaq	-0x120(%rbp), %r8
0000000100031dd1	leal	0x1(%r13), %edx
0000000100031dd5	imulq	$0x70, %r10, %rdi
0000000100031dd9	addq	%r15, %rdi
0000000100031ddc	movl	$0xe, %ecx
0000000100031de1	movq	%r8, %rsi
0000000100031de4	rep		movsq	(%rsi), %es:(%rdi)
0000000100031de7	leaq	0x2(%r13), %rbx
0000000100031deb	leaq	0x2(%r10), %rax
0000000100031def	cmpq	%rbx, %rax
0000000100031df2	jae	0x100031e27
0000000100031df4	leaq	0x538(%r15), %rcx
0000000100031dfb	leaq	(%rcx,%r14,8), %rsi
0000000100031dff	leaq	(%rcx,%rax,8), %rdi
0000000100031e03	movl	%edx, -0x38(%rbp)
0000000100031e06	movq	%r13, %rdx
0000000100031e09	subq	%r10, %rdx
0000000100031e0c	shlq	$0x3, %rdx
0000000100031e10	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100031e15	movl	-0x38(%rbp), %edx
0000000100031e18	movq	-0x30(%rbp), %r10
0000000100031e1c	movq	-0x40(%rbp), %r9
0000000100031e20	leaq	-0x120(%rbp), %r8
0000000100031e27	movq	-0x58(%rbp), %rax
0000000100031e2b	movq	%rax, 0x540(%r15,%r10,8)
0000000100031e33	movw	%dx, 0x532(%r15)
0000000100031e3b	cmpq	%rbx, %r14
0000000100031e3e	jae	0x100031ef4
0000000100031e44	movl	%r13d, %eax
0000000100031e47	subl	%r10d, %eax
0000000100031e4a	incl	%eax
0000000100031e4c	subq	%r10, %r13
0000000100031e4f	andq	$0x3, %rax
0000000100031e53	je	0x100031e80
0000000100031e55	leaq	0x540(%r15,%r10,8), %rdx
0000000100031e5d	xorl	%ecx, %ecx
0000000100031e5f	movq	(%rdx,%rcx,8), %rsi
0000000100031e63	movq	%r15, 0x4d0(%rsi)
0000000100031e6a	leal	(%r14,%rcx), %edi
0000000100031e6e	movw	%di, 0x530(%rsi)
0000000100031e75	incq	%rcx
0000000100031e78	cmpq	%rcx, %rax
0000000100031e7b	jne	0x100031e5f
0000000100031e7d	addq	%rcx, %r14
0000000100031e80	cmpq	$0x3, %r13
0000000100031e84	jb	0x100031ef4
0000000100031e86	movq	0x538(%r15,%r14,8), %rax
0000000100031e8e	movq	%r15, 0x4d0(%rax)
0000000100031e95	movw	%r14w, 0x530(%rax)
0000000100031e9d	movq	0x540(%r15,%r14,8), %rax
0000000100031ea5	movq	%r15, 0x4d0(%rax)
0000000100031eac	leal	0x1(%r14), %ecx
0000000100031eb0	movw	%cx, 0x530(%rax)
0000000100031eb7	movq	0x548(%r15,%r14,8), %rax
0000000100031ebf	movq	%r15, 0x4d0(%rax)
0000000100031ec6	leal	0x2(%r14), %ecx
0000000100031eca	movw	%cx, 0x530(%rax)
0000000100031ed1	movq	0x550(%r15,%r14,8), %rax
0000000100031ed9	movq	%r15, 0x4d0(%rax)
0000000100031ee0	leal	0x3(%r14), %ecx
0000000100031ee4	movw	%cx, 0x530(%rax)
0000000100031eeb	addq	$0x4, %r14
0000000100031eef	cmpq	%rbx, %r14
0000000100031ef2	jne	0x100031e86
0000000100031ef4	movl	$0xd, %ecx
0000000100031ef9	leaq	-0x2d0(%rbp), %rax
0000000100031f00	movq	%rax, %rdi
0000000100031f03	leaq	-0x200(%rbp), %rsi
0000000100031f0a	rep		movsq	(%rsi), %es:(%rdi)
0000000100031f0d	cmpq	$0x2, %r9
0000000100031f11	je	0x100031ab8
0000000100031f17	movl	$0xd, %ecx
0000000100031f1c	leaq	-0x268(%rbp), %rdx
0000000100031f23	movq	%rdx, %rdi
0000000100031f26	movq	%rax, %rsi
0000000100031f29	rep		movsq	(%rsi), %es:(%rdi)
0000000100031f2c	movq	0x4d0(%r12), %rax
0000000100031f34	movq	-0x48(%rbp), %rbx
0000000100031f38	movq	%rbx, %rcx
0000000100031f3b	movq	-0x60(%rbp), %r14
0000000100031f3f	movq	%r14, %rsi
0000000100031f42	testq	%rax, %rax
0000000100031f45	jne	0x100031b13
0000000100031f4b	jmp	0x100031f5b
0000000100031f4d	xorl	%eax, %eax
0000000100031f4f	movq	%rax, -0x68(%rbp)
0000000100031f53	movq	-0x48(%rbp), %rbx
0000000100031f57	movq	-0x60(%rbp), %r14
0000000100031f5b	leaq	-0x110(%rbp), %rdi
0000000100031f62	leaq	-0x268(%rbp), %rsi
0000000100031f69	movl	$0xd, %ecx
0000000100031f6e	rep		movsq	(%rsi), %es:(%rdi)
0000000100031f71	movq	%r14, -0x120(%rbp)
0000000100031f78	movq	%r9, -0x118(%rbp)
0000000100031f7f	movq	%r12, -0xa8(%rbp)
0000000100031f86	movq	-0x68(%rbp), %r15
0000000100031f8a	movq	%r15, -0xa0(%rbp)
0000000100031f91	movq	%rbx, -0x98(%rbp)
0000000100031f98	movq	%r15, -0x90(%rbp)
0000000100031f9f	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100031fa6	movzbl	(%rax), %eax
0000000100031fa9	movl	$0x598, %edi                    ## imm = 0x598
0000000100031fae	movl	$0x8, %esi
0000000100031fb3	callq	___rust_alloc
0000000100031fb8	testq	%rax, %rax
0000000100031fbb	je	0x1000322ef
0000000100031fc1	movq	$0x0, 0x4d0(%rax)
0000000100031fcc	movw	$0x0, 0x532(%rax)
0000000100031fd5	movq	-0x70(%rbp), %rsi
0000000100031fd9	movq	%rsi, 0x538(%rax)
0000000100031fe0	movq	-0x80(%rbp), %rdx
0000000100031fe4	leaq	0x1(%rdx), %rcx
0000000100031fe8	movq	%rax, 0x4d0(%rsi)
0000000100031fef	movw	$0x0, 0x530(%rsi)
0000000100031ff8	movq	-0x78(%rbp), %r9
0000000100031ffc	movq	%rax, 0x18(%r9)
0000000100032000	movq	%rcx, 0x20(%r9)
0000000100032004	leaq	-0x200(%rbp), %r8
000000010003200b	movl	$0xe, %ecx
0000000100032010	movq	%r8, %rdi
0000000100032013	leaq	-0x118(%rbp), %r10
000000010003201a	movq	%r10, %rsi
000000010003201d	rep		movsq	(%rsi), %es:(%rdi)
0000000100032020	cmpq	%r15, %rdx
0000000100032023	jne	0x100032300
0000000100032029	movzwl	0x532(%rax), %edx
0000000100032030	cmpq	$0xb, %rdx
0000000100032034	jae	0x100032319
000000010003203a	leal	0x1(%rdx), %r8d
000000010003203e	movw	%r8w, 0x532(%rax)
0000000100032046	movq	%r14, 0x4d8(%rax,%rdx,8)
000000010003204e	imulq	$0x70, %rdx, %rcx
0000000100032052	movq	%rax, %rdi
0000000100032055	addq	%rcx, %rdi
0000000100032058	movl	$0xe, %ecx
000000010003205d	movq	%r10, %rsi
0000000100032060	rep		movsq	(%rsi), %es:(%rdi)
0000000100032063	movq	%rbx, 0x540(%rax,%rdx,8)
000000010003206b	movq	%rax, 0x4d0(%rbx)
0000000100032072	movw	%r8w, 0x530(%rbx)
000000010003207a	incq	0x28(%r9)
000000010003207e	jmp	0x1000317ca
0000000100032083	leal	0x1(%r13), %r8d
0000000100032087	leaq	0x1(%r15), %r14
000000010003208b	cmpw	%r15w, %r13w
000000010003208f	jbe	0x10003211b
0000000100032095	leaq	0x4d8(%r12), %rax
000000010003209d	leaq	0x4d8(%r12,%r15,8), %rsi
00000001000320a5	leaq	(%rax,%r14,8), %rdi
00000001000320a9	movq	%r13, %rbx
00000001000320ac	subq	%r15, %rbx
00000001000320af	leaq	(,%rbx,8), %rdx
00000001000320b7	movq	%rdx, -0x70(%rbp)
00000001000320bb	movl	%r8d, -0x30(%rbp)
00000001000320bf	callq	0x1000427cc                     ## symbol stub for: _memmove
00000001000320c4	movq	-0x38(%rbp), %rax
00000001000320c8	movq	%rax, 0x4d8(%r12,%r15,8)
00000001000320d0	imulq	$0x70, %r15, %rsi
00000001000320d4	addq	%r12, %rsi
00000001000320d7	imulq	$0x70, %r14, %rdi
00000001000320db	addq	%r12, %rdi
00000001000320de	imulq	$0x70, %rbx, %rdx
00000001000320e2	movq	%rsi, %rbx
00000001000320e5	callq	0x1000427cc                     ## symbol stub for: _memmove
00000001000320ea	leaq	-0x190(%rbp), %rsi
00000001000320f1	movl	$0xe, %ecx
00000001000320f6	movq	%rbx, %rdi
00000001000320f9	rep		movsq	(%rsi), %es:(%rdi)
00000001000320fc	leaq	0x538(%r12,%r14,8), %rsi
0000000100032104	leaq	0x548(%r12,%r15,8), %rdi
000000010003210c	movq	-0x70(%rbp), %rdx
0000000100032110	callq	0x1000427cc                     ## symbol stub for: _memmove
0000000100032115	movl	-0x30(%rbp), %r8d
0000000100032119	jmp	0x10003213d
000000010003211b	movq	-0x38(%rbp), %rax
000000010003211f	movq	%rax, 0x4d8(%r12,%r15,8)
0000000100032127	imulq	$0x70, %r15, %rdi
000000010003212b	addq	%r12, %rdi
000000010003212e	leaq	-0x190(%rbp), %rsi
0000000100032135	movl	$0xe, %ecx
000000010003213a	rep		movsq	(%rsi), %es:(%rdi)
000000010003213d	leaq	0x2(%r13), %rax
0000000100032141	movq	-0x58(%rbp), %rcx
0000000100032145	movq	%rcx, 0x540(%r12,%r15,8)
000000010003214d	movw	%r8w, 0x532(%r12)
0000000100032156	cmpq	%rax, %r14
0000000100032159	jae	0x100031ab8
000000010003215f	movl	%r13d, %ecx
0000000100032162	subl	%r15d, %ecx
0000000100032165	incl	%ecx
0000000100032167	subq	%r15, %r13
000000010003216a	andq	$0x3, %rcx
000000010003216e	je	0x10003219c
0000000100032170	leaq	0x540(%r12,%r15,8), %rsi
0000000100032178	xorl	%edx, %edx
000000010003217a	movq	(%rsi,%rdx,8), %rdi
000000010003217e	movq	%r12, 0x4d0(%rdi)
0000000100032185	leal	(%r14,%rdx), %r8d
0000000100032189	movw	%r8w, 0x530(%rdi)
0000000100032191	incq	%rdx
0000000100032194	cmpq	%rdx, %rcx
0000000100032197	jne	0x10003217a
0000000100032199	addq	%rdx, %r14
000000010003219c	cmpq	$0x3, %r13
00000001000321a0	jb	0x100031ab8
00000001000321a6	movq	0x538(%r12,%r14,8), %rcx
00000001000321ae	movq	%r12, 0x4d0(%rcx)
00000001000321b5	movw	%r14w, 0x530(%rcx)
00000001000321bd	movq	0x540(%r12,%r14,8), %rcx
00000001000321c5	movq	%r12, 0x4d0(%rcx)
00000001000321cc	leal	0x1(%r14), %edx
00000001000321d0	movw	%dx, 0x530(%rcx)
00000001000321d7	movq	0x548(%r12,%r14,8), %rcx
00000001000321df	movq	%r12, 0x4d0(%rcx)
00000001000321e6	leal	0x2(%r14), %edx
00000001000321ea	movw	%dx, 0x530(%rcx)
00000001000321f1	movq	0x550(%r12,%r14,8), %rcx
00000001000321f9	movq	%r12, 0x4d0(%rcx)
0000000100032200	leal	0x3(%r14), %edx
0000000100032204	movw	%dx, 0x530(%rcx)
000000010003220b	addq	$0x4, %r14
000000010003220f	cmpq	%rax, %r14
0000000100032212	jne	0x1000321a6
0000000100032214	jmp	0x100031ab8
0000000100032219	movq	%r15, -0x50(%rbp)
000000010003221d	movl	$0x8, %edi
0000000100032222	movl	$0x538, %esi                    ## imm = 0x538
0000000100032227	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010003222c	jmp	0x100032335
0000000100032231	leaq	0x174d8(%rip), %rdx
0000000100032238	movl	$0xb, %esi
000000010003223d	movq	%r14, %rdi
0000000100032240	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100032245	jmp	0x100032335
000000010003224a	movl	$0x8, %edi
000000010003224f	movl	$0x598, %esi                    ## imm = 0x598
0000000100032254	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100032259	jmp	0x100032335
000000010003225e	leaq	0x1391f(%rip), %rdi
0000000100032265	leaq	0x1748c(%rip), %rdx
000000010003226c	movl	$0x28, %esi
0000000100032271	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100032276	jmp	0x100032335
000000010003227b	leaq	0x13902(%rip), %rdi
0000000100032282	leaq	0x1746f(%rip), %rdx
0000000100032289	movl	$0x28, %esi
000000010003228e	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100032293	jmp	0x100032335
0000000100032298	leaq	0x17489(%rip), %rdx
000000010003229f	movl	$0xc, %esi
00000001000322a4	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
00000001000322a9	jmp	0x100032335
00000001000322ae	movl	$0x8, %edi
00000001000322b3	movl	$0x538, %esi                    ## imm = 0x538
00000001000322b8	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000322bd	jmp	0x100032335
00000001000322bf	leaq	0x1744a(%rip), %rdx
00000001000322c6	movl	$0xb, %esi
00000001000322cb	movq	%r15, %rdi
00000001000322ce	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
00000001000322d3	jmp	0x100032335
00000001000322d5	leaq	0x138a8(%rip), %rdi
00000001000322dc	leaq	0x17415(%rip), %rdx
00000001000322e3	movl	$0x28, %esi
00000001000322e8	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
00000001000322ed	jmp	0x100032335
00000001000322ef	movl	$0x8, %edi
00000001000322f4	movl	$0x598, %esi                    ## imm = 0x598
00000001000322f9	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000322fe	jmp	0x100032335
0000000100032300	movq	%r8, -0x50(%rbp)
0000000100032304	leaq	0x173d5(%rip), %rdx
000000010003230b	movl	$0x30, %esi
0000000100032310	leaq	0x1383d(%rip), %rdi
0000000100032317	jmp	0x100032330
0000000100032319	movq	%r8, -0x50(%rbp)
000000010003231d	leaq	0x173a4(%rip), %rdx
0000000100032324	movl	$0x20, %esi
0000000100032329	leaq	0x137a9(%rip), %rdi
0000000100032330	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100032335	ud2
0000000100032337	movq	%rax, %rbx
000000010003233a	leaq	-0x200(%rbp), %rdi
0000000100032341	callq	__ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17hbb42aab4d5826dd7E ## core::ptr::drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$::hbb42aab4d5826dd7
0000000100032346	leaq	-0x118(%rbp), %rax
000000010003234d	movq	%rax, -0x50(%rbp)
0000000100032351	jmp	0x1000323ae
0000000100032353	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100032358	jmp	0x1000323ab
000000010003235a	movq	%rax, %rbx
000000010003235d	leaq	-0x120(%rbp), %rdi
0000000100032364	callq	__ZN4core3ptr54drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$17hd304580b878511edE ## core::ptr::drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$::hd304580b878511ed
0000000100032369	movq	-0x48(%rbp), %rdi
000000010003236d	callq	__ZN4core3ptr134drop_in_place$LT$alloc..boxed..Box$LT$alloc..collections..btree..node..LeafNode$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$$GT$17h9c10968fdd459aabE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$alloc..collections..btree..node..LeafNode$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$$GT$::h9c10968fdd459aab
0000000100032372	jmp	0x1000323ae
0000000100032374	jmp	0x1000323ab
0000000100032376	jmp	0x1000323ab
0000000100032378	jmp	0x1000323ab
000000010003237a	movq	%rax, %rbx
000000010003237d	leaq	-0x120(%rbp), %rdi
0000000100032384	callq	__ZN4core3ptr68drop_in_place$LT$$LP$u64$C$gimli..read..abbrev..Abbreviation$RP$$GT$17h679083f6dbf20ec2E ## core::ptr::drop_in_place$LT$$LP$u64$C$gimli..read..abbrev..Abbreviation$RP$$GT$::h679083f6dbf20ec2
0000000100032389	jmp	0x10003239a
000000010003238b	movq	%rax, %rbx
000000010003238e	leaq	-0x200(%rbp), %rdi
0000000100032395	callq	__ZN4core3ptr54drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$17hd304580b878511edE ## core::ptr::drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$::hd304580b878511ed
000000010003239a	movq	-0x48(%rbp), %rdi
000000010003239e	callq	__ZN4core3ptr138drop_in_place$LT$alloc..boxed..Box$LT$alloc..collections..btree..node..InternalNode$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$$GT$17h36ef238c0123e93aE ## core::ptr::drop_in_place$LT$alloc..boxed..Box$LT$alloc..collections..btree..node..InternalNode$LT$u64$C$gimli..read..abbrev..Abbreviation$GT$$GT$$GT$::h36ef238c0123e93a
00000001000323a3	jmp	0x1000323ae
00000001000323a5	jmp	0x1000323ab
00000001000323a7	movq	%r14, -0x50(%rbp)
00000001000323ab	movq	%rax, %rbx
00000001000323ae	movq	-0x50(%rbp), %rdi
00000001000323b2	callq	__ZN4core3ptr54drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$17hd304580b878511edE ## core::ptr::drop_in_place$LT$gimli..read..abbrev..Abbreviation$GT$::hd304580b878511ed
00000001000323b7	movq	%rbx, %rdi
00000001000323ba	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000323bf	nop
__ZN5gimli4read6abbrev12Abbreviation3new17h619a0351974f602dE:
00000001000323c0	pushq	%rbp
00000001000323c1	movq	%rsp, %rbp
00000001000323c4	pushq	%r14
00000001000323c6	pushq	%rbx
00000001000323c7	subq	$0x40, %rsp
00000001000323cb	movq	%r8, %rbx
00000001000323ce	movq	%rsi, -0x18(%rbp)
00000001000323d2	testq	%rsi, %rsi
00000001000323d5	je	0x100032403
00000001000323d7	movl	%ecx, %eax
00000001000323d9	movq	%rsi, %r9
00000001000323dc	movq	%rdi, %r8
00000001000323df	movl	$0xc, %ecx
00000001000323e4	movq	%rbx, %rsi
00000001000323e7	rep		movsq	(%rsi), %es:(%rdi)
00000001000323ea	movq	%r9, 0x60(%r8)
00000001000323ee	movw	%dx, 0x68(%r8)
00000001000323f3	movb	%al, 0x6a(%r8)
00000001000323f7	movq	%r8, %rax
00000001000323fa	addq	$0x40, %rsp
00000001000323fe	popq	%rbx
00000001000323ff	popq	%r14
0000000100032401	popq	%rbp
0000000100032402	retq
0000000100032403	movq	$0x0, -0x48(%rbp)
000000010003240b	leaq	-0x18(%rbp), %rdi
000000010003240f	leaq	-0x48(%rbp), %rsi
0000000100032413	callq	__ZN4core9panicking13assert_failed17h439e734ffaec8714E ## core::panicking::assert_failed::h439e734ffaec8714
0000000100032418	ud2
000000010003241a	movq	%rax, %r14
000000010003241d	movq	%rbx, %rdi
0000000100032420	callq	__ZN4core3ptr52drop_in_place$LT$gimli..read..abbrev..Attributes$GT$17he1161a61d80173feE ## core::ptr::drop_in_place$LT$gimli..read..abbrev..Attributes$GT$::he1161a61d80173fe
0000000100032425	movq	%r14, %rdi
0000000100032428	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010003242d	nopl	(%rax)
__ZN5gimli4read6abbrev10Attributes3new17h9f1c81a07b4c37faE:
0000000100032430	pushq	%rbp
0000000100032431	movq	%rsp, %rbp
0000000100032434	movq	%rdi, %rax
0000000100032437	movq	$0x0, 0x20(%rdi)
000000010003243f	movl	$0x0, 0x28(%rdi)
0000000100032446	movq	$0x0, 0x30(%rdi)
000000010003244e	movl	$0x0, 0x38(%rdi)
0000000100032455	movq	$0x0, 0x40(%rdi)
000000010003245d	movl	$0x0, 0x48(%rdi)
0000000100032464	movq	$0x0, 0x50(%rdi)
000000010003246c	movl	$0x0, 0x58(%rdi)
0000000100032473	movq	$0x0, (%rdi)
000000010003247a	movq	$0x0, 0x8(%rdi)
0000000100032482	movq	$0x0, 0x10(%rdi)
000000010003248a	movl	$0x0, 0x18(%rdi)
0000000100032491	popq	%rbp
0000000100032492	retq
0000000100032493	nopw	%cs:(%rax,%rax)
000000010003249d	nopl	(%rax)
__ZN5gimli4read6abbrev10Attributes4push17h990fe0b9bdf06a11E:
00000001000324a0	pushq	%rbp
00000001000324a1	movq	%rsp, %rbp
00000001000324a4	pushq	%r14
00000001000324a6	pushq	%rbx
00000001000324a7	subq	$0x20, %rsp
00000001000324ab	movq	%rsi, %r14
00000001000324ae	movq	%rdi, %rbx
00000001000324b1	cmpq	$0x0, (%rdi)
00000001000324b5	je	0x1000324f5
00000001000324b7	movq	0x18(%rbx), %rsi
00000001000324bb	cmpq	0x10(%rbx), %rsi
00000001000324bf	jne	0x1000324ce
00000001000324c1	leaq	0x8(%rbx), %rdi
00000001000324c5	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17ha079e07a0e7d13efE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::ha079e07a0e7d13ef
00000001000324ca	movq	0x18(%rbx), %rsi
00000001000324ce	movq	0x8(%rbx), %rax
00000001000324d2	movq	%rsi, %rcx
00000001000324d5	shlq	$0x4, %rcx
00000001000324d9	movq	(%r14), %rdx
00000001000324dc	movq	0x8(%r14), %rdi
00000001000324e0	movq	%rdi, 0x8(%rax,%rcx)
00000001000324e5	movq	%rdx, (%rax,%rcx)
00000001000324e9	incq	%rsi
00000001000324ec	movq	%rsi, 0x18(%rbx)
00000001000324f0	jmp	0x1000325b7
00000001000324f5	movq	0x8(%rbx), %rdi
00000001000324f9	cmpq	$0x5, %rdi
00000001000324fd	jne	0x10003259c
0000000100032503	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010003250a	movzbl	(%rax), %eax
000000010003250d	movl	$0x50, %edi
0000000100032512	movl	$0x8, %esi
0000000100032517	callq	___rust_alloc
000000010003251c	testq	%rax, %rax
000000010003251f	je	0x1000325d1
0000000100032525	leaq	0x10(%rbx), %rsi
0000000100032529	movl	$0xa, %ecx
000000010003252e	movq	%rax, %rdi
0000000100032531	rep		movsq	(%rsi), %es:(%rdi)
0000000100032534	movq	%rax, -0x28(%rbp)
0000000100032538	movq	$0x5, -0x20(%rbp)
0000000100032540	movq	$0x5, -0x18(%rbp)
0000000100032548	leaq	-0x28(%rbp), %rdi
000000010003254c	movl	$0x5, %esi
0000000100032551	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17ha079e07a0e7d13efE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::ha079e07a0e7d13ef
0000000100032556	leaq	0x8(%rbx), %rax
000000010003255a	movq	-0x28(%rbp), %rcx
000000010003255e	movq	-0x18(%rbp), %rdx
0000000100032562	movq	%rdx, %rsi
0000000100032565	shlq	$0x4, %rsi
0000000100032569	movq	(%r14), %rdi
000000010003256c	movq	0x8(%r14), %r8
0000000100032570	movq	%r8, 0x8(%rcx,%rsi)
0000000100032575	movq	%rdi, (%rcx,%rsi)
0000000100032579	incq	%rdx
000000010003257c	movq	%rdx, -0x18(%rbp)
0000000100032580	movq	%rdx, 0x10(%rax)
0000000100032584	movq	-0x28(%rbp), %rcx
0000000100032588	movq	-0x20(%rbp), %rdx
000000010003258c	movq	%rdx, 0x8(%rax)
0000000100032590	movq	%rcx, (%rax)
0000000100032593	movq	$0x1, (%rbx)
000000010003259a	jmp	0x1000325b7
000000010003259c	jae	0x1000325c0
000000010003259e	shlq	$0x4, %rdi
00000001000325a2	movq	(%r14), %rax
00000001000325a5	movq	0x8(%r14), %rcx
00000001000325a9	movq	%rcx, 0x18(%rbx,%rdi)
00000001000325ae	movq	%rax, 0x10(%rbx,%rdi)
00000001000325b3	incq	0x8(%rbx)
00000001000325b7	addq	$0x20, %rsp
00000001000325bb	popq	%rbx
00000001000325bc	popq	%r14
00000001000325be	popq	%rbp
00000001000325bf	retq
00000001000325c0	leaq	0x17191(%rip), %rdx
00000001000325c7	movl	$0x5, %esi
00000001000325cc	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
00000001000325d1	movl	$0x8, %edi
00000001000325d6	movl	$0x50, %esi
00000001000325db	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000325e0	movq	%rax, %rbx
00000001000325e3	movq	-0x28(%rbp), %rdi
00000001000325e7	movq	-0x20(%rbp), %rsi
00000001000325eb	callq	__ZN4core3ptr87drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..abbrev..AttributeSpecification$GT$$GT$17hfbfe3bf50afee89aE ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$gimli..read..abbrev..AttributeSpecification$GT$$GT$::hfbfe3bf50afee89a
00000001000325f0	movq	%rbx, %rdi
00000001000325f3	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000325f8	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000325fd	nopl	(%rax)
__ZN75_$LT$gimli..read..abbrev..Attributes$u20$as$u20$core..ops..deref..Deref$GT$5deref17h56aa4bb069c6ca35E:
0000000100032600	pushq	%rbp
0000000100032601	movq	%rsp, %rbp
0000000100032604	cmpq	$0x0, (%rdi)
0000000100032608	je	0x100032617
000000010003260a	movq	0x18(%rdi), %rdx
000000010003260e	movq	0x8(%rdi), %rdi
0000000100032612	movq	%rdi, %rax
0000000100032615	popq	%rbp
0000000100032616	retq
0000000100032617	movq	0x8(%rdi), %rdx
000000010003261b	cmpq	$0x6, %rdx
000000010003261f	jae	0x10003262a
0000000100032621	addq	$0x10, %rdi
0000000100032625	movq	%rdi, %rax
0000000100032628	popq	%rbp
0000000100032629	retq
000000010003262a	leaq	0x1713f(%rip), %rax
0000000100032631	movl	$0x5, %esi
0000000100032636	movq	%rdx, %rdi
0000000100032639	movq	%rax, %rdx
000000010003263c	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100032641	nopw	%cs:(%rax,%rax)
000000010003264b	nopl	(%rax,%rax)
__ZN5gimli4read4line7LineRow18apply_line_advance17h46f040cb9f770b60E:
0000000100032650	pushq	%rbp
0000000100032651	movq	%rsp, %rbp
0000000100032654	testq	%rsi, %rsi
0000000100032657	js	0x10003265f
0000000100032659	addq	%rsi, 0x18(%rdi)
000000010003265d	popq	%rbp
000000010003265e	retq
000000010003265f	movq	%rsi, %rcx
0000000100032662	negq	%rcx
0000000100032665	movq	0x18(%rdi), %rax
0000000100032669	cmpq	%rcx, %rax
000000010003266c	jae	0x100032678
000000010003266e	movq	$0x0, 0x18(%rdi)
0000000100032676	popq	%rbp
0000000100032677	retq
0000000100032678	addq	%rsi, %rax
000000010003267b	movq	%rax, 0x18(%rdi)
000000010003267f	popq	%rbp
0000000100032680	retq
0000000100032681	nopw	%cs:(%rax,%rax)
000000010003268b	nopl	(%rax,%rax)
__ZN5gimli4read4unit20allow_section_offset17hfd339d71b56cb3e7E:
0000000100032690	movzwl	%di, %ecx
0000000100032693	xorl	%eax, %eax
0000000100032695	addl	$-0x2, %ecx
0000000100032698	cmpl	$0x77, %ecx
000000010003269b	ja	0x1000326c2
000000010003269d	pushq	%rbp
000000010003269e	movq	%rsp, %rbp
00000001000326a1	leaq	0x1c(%rip), %rdx
00000001000326a8	movslq	(%rdx,%rcx,4), %rcx
00000001000326ac	addq	%rdx, %rcx
00000001000326af	popq	%rbp
00000001000326b0	jmpq	*%rcx
00000001000326b2	movb	$0x1, %al
00000001000326b4	retq
00000001000326b5	andl	$0xfffe, %esi                   ## imm = 0xFFFE
00000001000326bb	cmpw	$0x2, %si
00000001000326bf	sete	%al
00000001000326c2	retq
00000001000326c3	nop
00000001000326c4	outb	%al, %dx
00000001000326c5	.byte 0xff #bad opcode
00000001000326c6	.byte 0xff #bad opcode
00000001000326c7	.byte 0xff #bad opcode
00000001000326c8	.byte 0xfe #bad opcode
00000001000326c9	.byte 0xff #bad opcode
00000001000326ca	.byte 0xff #bad opcode
00000001000326cb	.byte 0xff #bad opcode
00000001000326cc	.byte 0xfe #bad opcode
00000001000326cd	.byte 0xff #bad opcode
00000001000326ce	.byte 0xff #bad opcode
00000001000326cf	.byte 0xff #bad opcode
00000001000326d0	.byte 0xfe #bad opcode
00000001000326d1	.byte 0xff #bad opcode
00000001000326d2	.byte 0xff #bad opcode
00000001000326d3	.byte 0xff #bad opcode
00000001000326d4	.byte 0xfe #bad opcode
00000001000326d5	.byte 0xff #bad opcode
00000001000326d6	.byte 0xff #bad opcode
00000001000326d7	.byte 0xff #bad opcode
00000001000326d8	.byte 0xfe #bad opcode
00000001000326d9	.byte 0xff #bad opcode
00000001000326da	.byte 0xff #bad opcode
00000001000326db	.byte 0xff #bad opcode
00000001000326dc	.byte 0xfe #bad opcode
00000001000326dd	.byte 0xff #bad opcode
00000001000326de	.byte 0xff #bad opcode
00000001000326df	.byte 0xff #bad opcode
00000001000326e0	.byte 0xfe #bad opcode
00000001000326e1	.byte 0xff #bad opcode
00000001000326e2	.byte 0xff #bad opcode
00000001000326e3	.byte 0xff #bad opcode
00000001000326e4	.byte 0xfe #bad opcode
00000001000326e5	.byte 0xff #bad opcode
00000001000326e6	.byte 0xff #bad opcode
00000001000326e7	.byte 0xff #bad opcode
00000001000326e8	.byte 0xfe #bad opcode
00000001000326e9	.byte 0xff #bad opcode
00000001000326ea	.byte 0xff #bad opcode
00000001000326eb	.byte 0xff #bad opcode
00000001000326ec	.byte 0xfe #bad opcode
00000001000326ed	.byte 0xff #bad opcode
00000001000326ee	.byte 0xff #bad opcode
00000001000326ef	.byte 0xff #bad opcode
00000001000326f0	.byte 0xfe #bad opcode
00000001000326f1	.byte 0xff #bad opcode
00000001000326f2	.byte 0xff #bad opcode
00000001000326f3	.byte 0xff #bad opcode
00000001000326f4	.byte 0xfe #bad opcode
00000001000326f5	.byte 0xff #bad opcode
00000001000326f6	.byte 0xff #bad opcode
00000001000326f7	.byte 0xff #bad opcode
00000001000326f8	.byte 0xfe #bad opcode
00000001000326f9	.byte 0xff #bad opcode
00000001000326fa	.byte 0xff #bad opcode
00000001000326fb	.byte 0xff #bad opcode
00000001000326fc	outb	%al, %dx
00000001000326fd	.byte 0xff #bad opcode
00000001000326fe	.byte 0xff #bad opcode
00000001000326ff	.byte 0xff #bad opcode
0000000100032700	.byte 0xfe #bad opcode
0000000100032701	.byte 0xff #bad opcode
0000000100032702	.byte 0xff #bad opcode
0000000100032703	.byte 0xff #bad opcode
0000000100032704	.byte 0xfe #bad opcode
0000000100032705	.byte 0xff #bad opcode
0000000100032706	.byte 0xff #bad opcode
0000000100032707	.byte 0xff #bad opcode
0000000100032708	.byte 0xfe #bad opcode
0000000100032709	.byte 0xff #bad opcode
000000010003270a	.byte 0xff #bad opcode
000000010003270b	.byte 0xff #bad opcode
000000010003270c	.byte 0xfe #bad opcode
000000010003270d	.byte 0xff #bad opcode
000000010003270e	.byte 0xff #bad opcode
000000010003270f	.byte 0xff #bad opcode
0000000100032710	.byte 0xfe #bad opcode
0000000100032711	.byte 0xff #bad opcode
0000000100032712	.byte 0xff #bad opcode
0000000100032713	.byte 0xff #bad opcode
0000000100032714	.byte 0xfe #bad opcode
0000000100032715	.byte 0xff #bad opcode
0000000100032716	.byte 0xff #bad opcode
0000000100032717	.byte 0xff #bad opcode
0000000100032718	.byte 0xfe #bad opcode
0000000100032719	.byte 0xff #bad opcode
000000010003271a	.byte 0xff #bad opcode
000000010003271b	.byte 0xff #bad opcode
000000010003271c	.byte 0xfe #bad opcode
000000010003271d	.byte 0xff #bad opcode
000000010003271e	.byte 0xff #bad opcode
000000010003271f	.byte 0xff #bad opcode
0000000100032720	outb	%al, %dx
0000000100032721	.byte 0xff #bad opcode
0000000100032722	.byte 0xff #bad opcode
0000000100032723	.byte 0xff #bad opcode
0000000100032724	.byte 0xfe #bad opcode
0000000100032725	.byte 0xff #bad opcode
0000000100032726	.byte 0xff #bad opcode
0000000100032727	.byte 0xff #bad opcode
0000000100032728	.byte 0xfe #bad opcode
0000000100032729	.byte 0xff #bad opcode
000000010003272a	.byte 0xff #bad opcode
000000010003272b	.byte 0xff #bad opcode
000000010003272c	.byte 0xfe #bad opcode
000000010003272d	.byte 0xff #bad opcode
000000010003272e	.byte 0xff #bad opcode
000000010003272f	.byte 0xff #bad opcode
0000000100032730	.byte 0xfe #bad opcode
0000000100032731	.byte 0xff #bad opcode
0000000100032732	.byte 0xff #bad opcode
0000000100032733	.byte 0xff #bad opcode
0000000100032734	.byte 0xfe #bad opcode
0000000100032735	.byte 0xff #bad opcode
0000000100032736	.byte 0xff #bad opcode
0000000100032737	.byte 0xff #bad opcode
0000000100032738	.byte 0xfe #bad opcode
0000000100032739	.byte 0xff #bad opcode
000000010003273a	.byte 0xff #bad opcode
000000010003273b	.byte 0xff #bad opcode
000000010003273c	.byte 0xfe #bad opcode
000000010003273d	.byte 0xff #bad opcode
000000010003273e	.byte 0xff #bad opcode
000000010003273f	.byte 0xff #bad opcode
0000000100032740	.byte 0xfe #bad opcode
0000000100032741	.byte 0xff #bad opcode
0000000100032742	.byte 0xff #bad opcode
0000000100032743	.byte 0xff #bad opcode
0000000100032744	.byte 0xfe #bad opcode
0000000100032745	.byte 0xff #bad opcode
0000000100032746	.byte 0xff #bad opcode
0000000100032747	.byte 0xff #bad opcode
0000000100032748	.byte 0xfe #bad opcode
0000000100032749	.byte 0xff #bad opcode
000000010003274a	.byte 0xff #bad opcode
000000010003274b	.byte 0xff #bad opcode
000000010003274c	.byte 0xfe #bad opcode
000000010003274d	.byte 0xff #bad opcode
000000010003274e	.byte 0xff #bad opcode
000000010003274f	.byte 0xff #bad opcode
0000000100032750	.byte 0xfe #bad opcode
0000000100032751	.byte 0xff #bad opcode
0000000100032752	.byte 0xff #bad opcode
0000000100032753	.byte 0xff #bad opcode
0000000100032754	.byte 0xfe #bad opcode
0000000100032755	.byte 0xff #bad opcode
0000000100032756	.byte 0xff #bad opcode
0000000100032757	.byte 0xff #bad opcode
0000000100032758	.byte 0xfe #bad opcode
0000000100032759	.byte 0xff #bad opcode
000000010003275a	.byte 0xff #bad opcode
000000010003275b	.byte 0xff #bad opcode
000000010003275c	.byte 0xfe #bad opcode
000000010003275d	.byte 0xff #bad opcode
000000010003275e	.byte 0xff #bad opcode
000000010003275f	.byte 0xff #bad opcode
0000000100032760	.byte 0xfe #bad opcode
0000000100032761	.byte 0xff #bad opcode
0000000100032762	.byte 0xff #bad opcode
0000000100032763	.byte 0xff #bad opcode
0000000100032764	outb	%al, %dx
0000000100032765	.byte 0xff #bad opcode
0000000100032766	.byte 0xff #bad opcode
0000000100032767	.byte 0xff #bad opcode
0000000100032768	.byte 0xfe #bad opcode
0000000100032769	.byte 0xff #bad opcode
000000010003276a	.byte 0xff #bad opcode
000000010003276b	.byte 0xff #bad opcode
000000010003276c	outb	%al, %dx
000000010003276d	.byte 0xff #bad opcode
000000010003276e	.byte 0xff #bad opcode
000000010003276f	.byte 0xff #bad opcode
0000000100032770	.byte 0xfe #bad opcode
0000000100032771	.byte 0xff #bad opcode
0000000100032772	.byte 0xff #bad opcode
0000000100032773	.byte 0xff #bad opcode
0000000100032774	.byte 0xfe #bad opcode
0000000100032775	.byte 0xff #bad opcode
0000000100032776	.byte 0xff #bad opcode
0000000100032777	.byte 0xff #bad opcode
0000000100032778	.byte 0xfe #bad opcode
0000000100032779	.byte 0xff #bad opcode
000000010003277a	.byte 0xff #bad opcode
000000010003277b	.byte 0xff #bad opcode
000000010003277c	.byte 0xfe #bad opcode
000000010003277d	.byte 0xff #bad opcode
000000010003277e	.byte 0xff #bad opcode
000000010003277f	.byte 0xff #bad opcode
0000000100032780	.byte 0xfe #bad opcode
0000000100032781	.byte 0xff #bad opcode
0000000100032782	.byte 0xff #bad opcode
0000000100032783	.byte 0xff #bad opcode
0000000100032784	.byte 0xfe #bad opcode
0000000100032785	.byte 0xff #bad opcode
0000000100032786	.byte 0xff #bad opcode
0000000100032787	.byte 0xff #bad opcode
0000000100032788	.byte 0xfe #bad opcode
0000000100032789	.byte 0xff #bad opcode
000000010003278a	.byte 0xff #bad opcode
000000010003278b	.byte 0xff #bad opcode
000000010003278c	.byte 0xfe #bad opcode
000000010003278d	.byte 0xff #bad opcode
000000010003278e	.byte 0xff #bad opcode
000000010003278f	.byte 0xff #bad opcode
0000000100032790	.byte 0xfe #bad opcode
0000000100032791	.byte 0xff #bad opcode
0000000100032792	.byte 0xff #bad opcode
0000000100032793	.byte 0xff #bad opcode
0000000100032794	.byte 0xfe #bad opcode
0000000100032795	.byte 0xff #bad opcode
0000000100032796	.byte 0xff #bad opcode
0000000100032797	.byte 0xff #bad opcode
0000000100032798	.byte 0xfe #bad opcode
0000000100032799	.byte 0xff #bad opcode
000000010003279a	.byte 0xff #bad opcode
000000010003279b	pushq	%rcx
000000010003279d	.byte 0xff #bad opcode
000000010003279e	.byte 0xff #bad opcode
000000010003279f	.byte 0xff #bad opcode
00000001000327a0	.byte 0xfe #bad opcode
00000001000327a1	.byte 0xff #bad opcode
00000001000327a2	.byte 0xff #bad opcode
00000001000327a3	.byte 0xff #bad opcode
00000001000327a4	.byte 0xfe #bad opcode
00000001000327a5	.byte 0xff #bad opcode
00000001000327a6	.byte 0xff #bad opcode
00000001000327a7	.byte 0xff #bad opcode
00000001000327a8	.byte 0xfe #bad opcode
00000001000327a9	.byte 0xff #bad opcode
00000001000327aa	.byte 0xff #bad opcode
00000001000327ab	.byte 0xff #bad opcode
00000001000327ac	.byte 0xfe #bad opcode
00000001000327ad	.byte 0xff #bad opcode
00000001000327ae	.byte 0xff #bad opcode
00000001000327af	.byte 0xff #bad opcode
00000001000327b0	.byte 0xfe #bad opcode
00000001000327b1	.byte 0xff #bad opcode
00000001000327b2	.byte 0xff #bad opcode
00000001000327b3	.byte 0xff #bad opcode
00000001000327b4	.byte 0xfe #bad opcode
00000001000327b5	.byte 0xff #bad opcode
00000001000327b6	.byte 0xff #bad opcode
00000001000327b7	.byte 0xff #bad opcode
00000001000327b8	.byte 0xfe #bad opcode
00000001000327b9	.byte 0xff #bad opcode
00000001000327ba	.byte 0xff #bad opcode
00000001000327bb	.byte 0xff #bad opcode
00000001000327bc	outb	%al, %dx
00000001000327bd	.byte 0xff #bad opcode
00000001000327be	.byte 0xff #bad opcode
00000001000327bf	.byte 0xff #bad opcode
00000001000327c0	.byte 0xfe #bad opcode
00000001000327c1	.byte 0xff #bad opcode
00000001000327c2	.byte 0xff #bad opcode
00000001000327c3	.byte 0xff #bad opcode
00000001000327c4	.byte 0xfe #bad opcode
00000001000327c5	.byte 0xff #bad opcode
00000001000327c6	.byte 0xff #bad opcode
00000001000327c7	.byte 0xff #bad opcode
00000001000327c8	outb	%al, %dx
00000001000327c9	.byte 0xff #bad opcode
00000001000327ca	.byte 0xff #bad opcode
00000001000327cb	.byte 0xff #bad opcode
00000001000327cc	.byte 0xfe #bad opcode
00000001000327cd	.byte 0xff #bad opcode
00000001000327ce	.byte 0xff #bad opcode
00000001000327cf	.byte 0xff #bad opcode
00000001000327d0	.byte 0xfe #bad opcode
00000001000327d1	.byte 0xff #bad opcode
00000001000327d2	.byte 0xff #bad opcode
00000001000327d3	.byte 0xff #bad opcode
00000001000327d4	outb	%al, %dx
00000001000327d5	.byte 0xff #bad opcode
00000001000327d6	.byte 0xff #bad opcode
00000001000327d7	.byte 0xff #bad opcode
00000001000327d8	.byte 0xfe #bad opcode
00000001000327d9	.byte 0xff #bad opcode
00000001000327da	.byte 0xff #bad opcode
00000001000327db	.byte 0xff #bad opcode
00000001000327dc	outb	%al, %dx
00000001000327dd	.byte 0xff #bad opcode
00000001000327de	.byte 0xff #bad opcode
00000001000327df	.byte 0xff #bad opcode
00000001000327e0	.byte 0xfe #bad opcode
00000001000327e1	.byte 0xff #bad opcode
00000001000327e2	.byte 0xff #bad opcode
00000001000327e3	.byte 0xff #bad opcode
00000001000327e4	outb	%al, %dx
00000001000327e5	.byte 0xff #bad opcode
00000001000327e6	.byte 0xff #bad opcode
00000001000327e7	.byte 0xff #bad opcode
00000001000327e8	.byte 0xfe #bad opcode
00000001000327e9	.byte 0xff #bad opcode
00000001000327ea	.byte 0xff #bad opcode
00000001000327eb	.byte 0xff #bad opcode
00000001000327ec	.byte 0xfe #bad opcode
00000001000327ed	.byte 0xff #bad opcode
00000001000327ee	.byte 0xff #bad opcode
00000001000327ef	.byte 0xff #bad opcode
00000001000327f0	outb	%al, %dx
00000001000327f1	.byte 0xff #bad opcode
00000001000327f2	.byte 0xff #bad opcode
00000001000327f3	.byte 0xff #bad opcode
00000001000327f4	.byte 0xfe #bad opcode
00000001000327f5	.byte 0xff #bad opcode
00000001000327f6	.byte 0xff #bad opcode
00000001000327f7	.byte 0xff #bad opcode
00000001000327f8	.byte 0xfe #bad opcode
00000001000327f9	.byte 0xff #bad opcode
00000001000327fa	.byte 0xff #bad opcode
00000001000327fb	.byte 0xff #bad opcode
00000001000327fc	.byte 0xfe #bad opcode
00000001000327fd	.byte 0xff #bad opcode
00000001000327fe	.byte 0xff #bad opcode
00000001000327ff	.byte 0xff #bad opcode
0000000100032800	.byte 0xfe #bad opcode
0000000100032801	.byte 0xff #bad opcode
0000000100032802	.byte 0xff #bad opcode
0000000100032803	.byte 0xff #bad opcode
0000000100032804	.byte 0xfe #bad opcode
0000000100032805	.byte 0xff #bad opcode
0000000100032806	.byte 0xff #bad opcode
0000000100032807	.byte 0xff #bad opcode
0000000100032808	.byte 0xfe #bad opcode
0000000100032809	.byte 0xff #bad opcode
000000010003280a	.byte 0xff #bad opcode
000000010003280b	.byte 0xff #bad opcode
000000010003280c	.byte 0xfe #bad opcode
000000010003280d	.byte 0xff #bad opcode
000000010003280e	.byte 0xff #bad opcode
000000010003280f	.byte 0xff #bad opcode
0000000100032810	outb	%al, %dx
0000000100032811	.byte 0xff #bad opcode
0000000100032812	.byte 0xff #bad opcode
0000000100032813	.byte 0xff #bad opcode
0000000100032814	.byte 0xfe #bad opcode
0000000100032815	.byte 0xff #bad opcode
0000000100032816	.byte 0xff #bad opcode
0000000100032817	.byte 0xff #bad opcode
0000000100032818	.byte 0xfe #bad opcode
0000000100032819	.byte 0xff #bad opcode
000000010003281a	.byte 0xff #bad opcode
000000010003281b	.byte 0xff #bad opcode
000000010003281c	.byte 0xfe #bad opcode
000000010003281d	.byte 0xff #bad opcode
000000010003281e	.byte 0xff #bad opcode
000000010003281f	.byte 0xff #bad opcode
0000000100032820	.byte 0xfe #bad opcode
0000000100032821	.byte 0xff #bad opcode
0000000100032822	.byte 0xff #bad opcode
0000000100032823	.byte 0xff #bad opcode
0000000100032824	.byte 0xfe #bad opcode
0000000100032825	.byte 0xff #bad opcode
0000000100032826	.byte 0xff #bad opcode
0000000100032827	.byte 0xff #bad opcode
0000000100032828	.byte 0xfe #bad opcode
0000000100032829	.byte 0xff #bad opcode
000000010003282a	.byte 0xff #bad opcode
000000010003282b	.byte 0xff #bad opcode
000000010003282c	.byte 0xfe #bad opcode
000000010003282d	.byte 0xff #bad opcode
000000010003282e	.byte 0xff #bad opcode
000000010003282f	.byte 0xff #bad opcode
0000000100032830	.byte 0xfe #bad opcode
0000000100032831	.byte 0xff #bad opcode
0000000100032832	.byte 0xff #bad opcode
0000000100032833	.byte 0xff #bad opcode
0000000100032834	.byte 0xfe #bad opcode
0000000100032835	.byte 0xff #bad opcode
0000000100032836	.byte 0xff #bad opcode
0000000100032837	.byte 0xff #bad opcode
0000000100032838	.byte 0xfe #bad opcode
0000000100032839	.byte 0xff #bad opcode
000000010003283a	.byte 0xff #bad opcode
000000010003283b	.byte 0xff #bad opcode
000000010003283c	.byte 0xfe #bad opcode
000000010003283d	.byte 0xff #bad opcode
000000010003283e	.byte 0xff #bad opcode
000000010003283f	.byte 0xff #bad opcode
0000000100032840	.byte 0xfe #bad opcode
0000000100032841	.byte 0xff #bad opcode
0000000100032842	.byte 0xff #bad opcode
0000000100032843	.byte 0xff #bad opcode
0000000100032844	.byte 0xfe #bad opcode
0000000100032845	.byte 0xff #bad opcode
0000000100032846	.byte 0xff #bad opcode
0000000100032847	.byte 0xff #bad opcode
0000000100032848	.byte 0xfe #bad opcode
0000000100032849	.byte 0xff #bad opcode
000000010003284a	.byte 0xff #bad opcode
000000010003284b	.byte 0xff #bad opcode
000000010003284c	.byte 0xfe #bad opcode
000000010003284d	.byte 0xff #bad opcode
000000010003284e	.byte 0xff #bad opcode
000000010003284f	.byte 0xff #bad opcode
0000000100032850	.byte 0xfe #bad opcode
0000000100032851	.byte 0xff #bad opcode
0000000100032852	.byte 0xff #bad opcode
0000000100032853	.byte 0xff #bad opcode
0000000100032854	.byte 0xfe #bad opcode
0000000100032855	.byte 0xff #bad opcode
0000000100032856	.byte 0xff #bad opcode
0000000100032857	.byte 0xff #bad opcode
0000000100032858	.byte 0xfe #bad opcode
0000000100032859	.byte 0xff #bad opcode
000000010003285a	.byte 0xff #bad opcode
000000010003285b	.byte 0xff #bad opcode
000000010003285c	.byte 0xfe #bad opcode
000000010003285d	.byte 0xff #bad opcode
000000010003285e	.byte 0xff #bad opcode
000000010003285f	.byte 0xff #bad opcode
0000000100032860	.byte 0xfe #bad opcode
0000000100032861	.byte 0xff #bad opcode
0000000100032862	.byte 0xff #bad opcode
0000000100032863	.byte 0xff #bad opcode
0000000100032864	.byte 0xfe #bad opcode
0000000100032865	.byte 0xff #bad opcode
0000000100032866	.byte 0xff #bad opcode
0000000100032867	.byte 0xff #bad opcode
0000000100032868	.byte 0xfe #bad opcode
0000000100032869	.byte 0xff #bad opcode
000000010003286a	.byte 0xff #bad opcode
000000010003286b	.byte 0xff #bad opcode
000000010003286c	.byte 0xfe #bad opcode
000000010003286d	.byte 0xff #bad opcode
000000010003286e	.byte 0xff #bad opcode
000000010003286f	.byte 0xff #bad opcode
0000000100032870	.byte 0xfe #bad opcode
0000000100032871	.byte 0xff #bad opcode
0000000100032872	.byte 0xff #bad opcode
0000000100032873	.byte 0xff #bad opcode
0000000100032874	.byte 0xfe #bad opcode
0000000100032875	.byte 0xff #bad opcode
0000000100032876	.byte 0xff #bad opcode
0000000100032877	.byte 0xff #bad opcode
0000000100032878	.byte 0xfe #bad opcode
0000000100032879	.byte 0xff #bad opcode
000000010003287a	.byte 0xff #bad opcode
000000010003287b	.byte 0xff #bad opcode
000000010003287c	.byte 0xfe #bad opcode
000000010003287d	.byte 0xff #bad opcode
000000010003287e	.byte 0xff #bad opcode
000000010003287f	.byte 0xff #bad opcode
0000000100032880	.byte 0xfe #bad opcode
0000000100032881	.byte 0xff #bad opcode
0000000100032882	.byte 0xff #bad opcode
0000000100032883	.byte 0xff #bad opcode
0000000100032884	.byte 0xfe #bad opcode
0000000100032885	.byte 0xff #bad opcode
0000000100032886	.byte 0xff #bad opcode
0000000100032887	.byte 0xff #bad opcode
0000000100032888	.byte 0xfe #bad opcode
0000000100032889	.byte 0xff #bad opcode
000000010003288a	.byte 0xff #bad opcode
000000010003288b	.byte 0xff #bad opcode
000000010003288c	.byte 0xfe #bad opcode
000000010003288d	.byte 0xff #bad opcode
000000010003288e	.byte 0xff #bad opcode
000000010003288f	.byte 0xff #bad opcode
0000000100032890	.byte 0xfe #bad opcode
0000000100032891	.byte 0xff #bad opcode
0000000100032892	.byte 0xff #bad opcode
0000000100032893	.byte 0xff #bad opcode
0000000100032894	.byte 0xfe #bad opcode
0000000100032895	.byte 0xff #bad opcode
0000000100032896	.byte 0xff #bad opcode
0000000100032897	.byte 0xff #bad opcode
0000000100032898	.byte 0xfe #bad opcode
0000000100032899	.byte 0xff #bad opcode
000000010003289a	.byte 0xff #bad opcode
000000010003289b	.byte 0xff #bad opcode
000000010003289c	.byte 0xfe #bad opcode
000000010003289d	.byte 0xff #bad opcode
000000010003289e	.byte 0xff #bad opcode
000000010003289f	.byte 0xff #bad opcode
00000001000328a0	outb	%al, %dx
00000001000328a1	.byte 0xff #bad opcode
00000001000328a2	.byte 0xff #bad opcode
00000001000328a3	jmpq	*0x2e(%rsi)
00000001000328a6	nopl	(%rax,%rax)
00000001000328ae	nop
__ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97824079a41840b4E:
00000001000328b0	pushq	%rbp
00000001000328b1	movq	%rsp, %rbp
00000001000328b4	pushq	%rbx
00000001000328b5	subq	$0x98, %rsp
00000001000328bc	movq	0x8(%rdi), %rcx
00000001000328c0	movq	0x20(%rdi), %rdx
00000001000328c4	movl	$0x110001, %eax                 ## imm = 0x110001
00000001000328c9	subq	%rdx, %rcx
00000001000328cc	jb	0x100032ca9
00000001000328d2	movq	(%rdi), %rax
00000001000328d5	leaq	(%rax,%rdx), %rsi
00000001000328d9	movq	%rsi, (%rdi)
00000001000328dc	movq	%rcx, 0x8(%rdi)
00000001000328e0	cmpq	$0x2, %rdx
00000001000328e4	jne	0x100032cfe
00000001000328ea	movzbl	(%rax), %edx
00000001000328ed	movzbl	0x1(%rax), %r8d
00000001000328f2	leal	-0x30(%rdx), %eax
00000001000328f5	cmpl	$0xa, %eax
00000001000328f8	jb	0x100032914
00000001000328fa	orl	$0x20, %edx
00000001000328fd	addl	$-0x61, %edx
0000000100032900	addl	$0xa, %edx
0000000100032903	movl	$0xffffffff, %eax               ## imm = 0xFFFFFFFF
0000000100032908	cmovael	%edx, %eax
000000010003290b	cmpl	$0x10, %eax
000000010003290e	jae	0x100032ce6
0000000100032914	leal	-0x30(%r8), %edx
0000000100032918	cmpl	$0xa, %edx
000000010003291b	jb	0x10003293b
000000010003291d	orl	$0x20, %r8d
0000000100032921	addl	$-0x61, %r8d
0000000100032925	addl	$0xa, %r8d
0000000100032929	movl	$0xffffffff, %edx               ## imm = 0xFFFFFFFF
000000010003292e	cmovael	%r8d, %edx
0000000100032932	cmpl	$0x10, %edx
0000000100032935	jae	0x100032ce6
000000010003293b	shlb	$0x4, %al
000000010003293e	orb	%al, %dl
0000000100032940	js	0x100032981
0000000100032942	movb	%dl, -0xc(%rbp)
0000000100032945	movw	$0x0, -0xb(%rbp)
000000010003294b	movb	$0x0, -0x9(%rbp)
000000010003294f	leaq	-0xc(%rbp), %rsi
0000000100032953	movq	%rsi, -0x20(%rbp)
0000000100032957	movq	$0x1, -0x18(%rbp)
000000010003295f	movl	$0x1, %edx
0000000100032964	leaq	-0x58(%rbp), %rbx
0000000100032968	movq	%rbx, %rdi
000000010003296b	callq	__ZN4core3str8converts9from_utf817h1af6699b7ded4823E ## core::str::converts::from_utf8::h1af6699b7ded4823
0000000100032970	cmpq	$0x0, -0x58(%rbp)
0000000100032975	je	0x10003299e
0000000100032977	movl	$0x110000, %eax                 ## imm = 0x110000
000000010003297c	jmp	0x100032ca9
0000000100032981	movl	$0x110000, %eax                 ## imm = 0x110000
0000000100032986	cmpb	$-0x40, %dl
0000000100032989	jb	0x100032ca9
000000010003298f	cmpb	$-0x20, %dl
0000000100032992	jae	0x1000329da
0000000100032994	movl	$0x2, %r8d
000000010003299a	xorl	%eax, %eax
000000010003299c	jmp	0x1000329eb
000000010003299e	movq	-0x50(%rbp), %rdi
00000001000329a2	movq	-0x48(%rbp), %rax
00000001000329a6	movq	%rdi, -0x68(%rbp)
00000001000329aa	movq	%rax, -0x60(%rbp)
00000001000329ae	leaq	(%rdi,%rax), %rsi
00000001000329b2	testq	%rax, %rax
00000001000329b5	je	0x1000329cd
00000001000329b7	movzbl	(%rdi), %edx
00000001000329ba	testb	%dl, %dl
00000001000329bc	js	0x100032aa5
00000001000329c2	leaq	0x1(%rdi), %rcx
00000001000329c6	movl	%edx, %eax
00000001000329c8	jmp	0x100032c39
00000001000329cd	movl	$0x110000, %eax                 ## imm = 0x110000
00000001000329d2	movq	%rdi, %rcx
00000001000329d5	jmp	0x100032c39
00000001000329da	cmpb	$-0x10, %dl
00000001000329dd	jae	0x100032af4
00000001000329e3	movl	$0x3, %r8d
00000001000329e9	movb	$0x1, %al
00000001000329eb	movb	%dl, -0xc(%rbp)
00000001000329ee	movw	$0x0, -0xb(%rbp)
00000001000329f4	movb	$0x0, -0x9(%rbp)
00000001000329f8	leaq	-0xc(%rbp), %r9
00000001000329fc	movq	%r9, -0x20(%rbp)
0000000100032a00	movq	%r8, -0x18(%rbp)
0000000100032a04	cmpq	$0x2, %rcx
0000000100032a08	jb	0x100032977
0000000100032a0e	leaq	0x2(%rsi), %r8
0000000100032a12	leaq	-0x2(%rcx), %r9
0000000100032a16	movq	%r8, (%rdi)
0000000100032a19	movq	%r9, 0x8(%rdi)
0000000100032a1d	movzbl	(%rsi), %r11d
0000000100032a21	movzbl	0x1(%rsi), %esi
0000000100032a25	leal	-0x30(%r11), %r10d
0000000100032a29	cmpl	$0xa, %r10d
0000000100032a2d	jb	0x100032a4f
0000000100032a2f	orl	$0x20, %r11d
0000000100032a33	addl	$-0x61, %r11d
0000000100032a37	addl	$0xa, %r11d
0000000100032a3b	movl	$0xffffffff, %r10d              ## imm = 0xFFFFFFFF
0000000100032a41	cmovael	%r11d, %r10d
0000000100032a45	cmpl	$0xf, %r10d
0000000100032a49	ja	0x100032ce6
0000000100032a4f	leal	-0x30(%rsi), %r11d
0000000100032a53	cmpl	$0xa, %r11d
0000000100032a57	jb	0x100032a76
0000000100032a59	orl	$0x20, %esi
0000000100032a5c	addl	$-0x61, %esi
0000000100032a5f	addl	$0xa, %esi
0000000100032a62	movl	$0xffffffff, %r11d              ## imm = 0xFFFFFFFF
0000000100032a68	cmovael	%esi, %r11d
0000000100032a6c	cmpl	$0xf, %r11d
0000000100032a70	ja	0x100032ce6
0000000100032a76	movq	-0x18(%rbp), %rsi
0000000100032a7a	cmpq	$0x2, %rsi
0000000100032a7e	jb	0x100032cb3
0000000100032a84	shlb	$0x4, %r10b
0000000100032a88	orb	%r10b, %r11b
0000000100032a8b	movq	-0x20(%rbp), %rsi
0000000100032a8f	movb	%r11b, 0x1(%rsi)
0000000100032a93	cmpb	$-0x20, %dl
0000000100032a96	jae	0x100032b08
0000000100032a98	movq	-0x20(%rbp), %rsi
0000000100032a9c	movq	-0x18(%rbp), %rdx
0000000100032aa0	jmp	0x100032964
0000000100032aa5	movl	%edx, %eax
0000000100032aa7	andl	$0x1f, %eax
0000000100032aaa	movzbl	0x1(%rdi), %r9d
0000000100032aaf	andl	$0x3f, %r9d
0000000100032ab3	cmpb	$-0x21, %dl
0000000100032ab6	jbe	0x100032c23
0000000100032abc	movzbl	0x2(%rdi), %r8d
0000000100032ac1	shll	$0x6, %r9d
0000000100032ac5	andl	$0x3f, %r8d
0000000100032ac9	orl	%r9d, %r8d
0000000100032acc	cmpb	$-0x10, %dl
0000000100032acf	jb	0x100032c2f
0000000100032ad5	leaq	0x4(%rdi), %rcx
0000000100032ad9	movzbl	0x3(%rdi), %edx
0000000100032add	andl	$0x7, %eax
0000000100032ae0	shll	$0x12, %eax
0000000100032ae3	shll	$0x6, %r8d
0000000100032ae7	andl	$0x3f, %edx
0000000100032aea	orl	%r8d, %edx
0000000100032aed	orl	%edx, %eax
0000000100032aef	jmp	0x100032c39
0000000100032af4	cmpb	$-0x8, %dl
0000000100032af7	jae	0x100032ca9
0000000100032afd	movl	$0x4, %r8d
0000000100032b03	jmp	0x10003299a
0000000100032b08	cmpq	$0x2, %r9
0000000100032b0c	jb	0x100032977
0000000100032b12	leaq	0x2(%r8), %rdx
0000000100032b16	leaq	-0x4(%rcx), %r9
0000000100032b1a	movq	%rdx, (%rdi)
0000000100032b1d	movq	%r9, 0x8(%rdi)
0000000100032b21	movzbl	(%r8), %r10d
0000000100032b25	movzbl	0x1(%r8), %esi
0000000100032b2a	leal	-0x30(%r10), %r8d
0000000100032b2e	cmpl	$0xa, %r8d
0000000100032b32	jb	0x100032b54
0000000100032b34	orl	$0x20, %r10d
0000000100032b38	addl	$-0x61, %r10d
0000000100032b3c	addl	$0xa, %r10d
0000000100032b40	movl	$0xffffffff, %r8d               ## imm = 0xFFFFFFFF
0000000100032b46	cmovael	%r10d, %r8d
0000000100032b4a	cmpl	$0xf, %r8d
0000000100032b4e	ja	0x100032ce6
0000000100032b54	leal	-0x30(%rsi), %r10d
0000000100032b58	cmpl	$0xa, %r10d
0000000100032b5c	jb	0x100032b7b
0000000100032b5e	orl	$0x20, %esi
0000000100032b61	addl	$-0x61, %esi
0000000100032b64	addl	$0xa, %esi
0000000100032b67	movl	$0xffffffff, %r10d              ## imm = 0xFFFFFFFF
0000000100032b6d	cmovael	%esi, %r10d
0000000100032b71	cmpl	$0xf, %r10d
0000000100032b75	ja	0x100032ce6
0000000100032b7b	movq	-0x18(%rbp), %rsi
0000000100032b7f	cmpq	$0x3, %rsi
0000000100032b83	jb	0x100032cc4
0000000100032b89	shlb	$0x4, %r8b
0000000100032b8d	orb	%r8b, %r10b
0000000100032b90	movq	-0x20(%rbp), %rsi
0000000100032b94	movb	%r10b, 0x2(%rsi)
0000000100032b98	testb	%al, %al
0000000100032b9a	jne	0x100032a98
0000000100032ba0	cmpq	$0x2, %r9
0000000100032ba4	jb	0x100032977
0000000100032baa	leaq	0x2(%rdx), %rax
0000000100032bae	addq	$-0x6, %rcx
0000000100032bb2	movq	%rax, (%rdi)
0000000100032bb5	movq	%rcx, 0x8(%rdi)
0000000100032bb9	movzbl	(%rdx), %esi
0000000100032bbc	movzbl	0x1(%rdx), %ecx
0000000100032bc0	leal	-0x30(%rsi), %eax
0000000100032bc3	cmpl	$0xa, %eax
0000000100032bc6	jb	0x100032be2
0000000100032bc8	orl	$0x20, %esi
0000000100032bcb	addl	$-0x61, %esi
0000000100032bce	addl	$0xa, %esi
0000000100032bd1	movl	$0xffffffff, %eax               ## imm = 0xFFFFFFFF
0000000100032bd6	cmovael	%esi, %eax
0000000100032bd9	cmpl	$0xf, %eax
0000000100032bdc	ja	0x100032ce6
0000000100032be2	leal	-0x30(%rcx), %edx
0000000100032be5	cmpl	$0xa, %edx
0000000100032be8	jb	0x100032c04
0000000100032bea	orl	$0x20, %ecx
0000000100032bed	addl	$-0x61, %ecx
0000000100032bf0	addl	$0xa, %ecx
0000000100032bf3	movl	$0xffffffff, %edx               ## imm = 0xFFFFFFFF
0000000100032bf8	cmovael	%ecx, %edx
0000000100032bfb	cmpl	$0xf, %edx
0000000100032bfe	ja	0x100032ce6
0000000100032c04	movq	-0x18(%rbp), %rsi
0000000100032c08	cmpq	$0x4, %rsi
0000000100032c0c	jb	0x100032cd5
0000000100032c12	shlb	$0x4, %al
0000000100032c15	orb	%al, %dl
0000000100032c17	movq	-0x20(%rbp), %rax
0000000100032c1b	movb	%dl, 0x3(%rax)
0000000100032c1e	jmp	0x100032a98
0000000100032c23	leaq	0x2(%rdi), %rcx
0000000100032c27	shll	$0x6, %eax
0000000100032c2a	orl	%r9d, %eax
0000000100032c2d	jmp	0x100032c39
0000000100032c2f	leaq	0x3(%rdi), %rcx
0000000100032c33	shll	$0xc, %eax
0000000100032c36	orl	%r8d, %eax
0000000100032c39	cmpq	%rsi, %rcx
0000000100032c3c	je	0x100032c9c
0000000100032c3e	movzbl	(%rcx), %edx
0000000100032c41	testb	%dl, %dl
0000000100032c43	jns	0x100032d16
0000000100032c49	cmpb	$-0x20, %dl
0000000100032c4c	jb	0x100032d16
0000000100032c52	cmpb	$-0x10, %dl
0000000100032c55	jb	0x100032d16
0000000100032c5b	movzbl	0x1(%rcx), %r8d
0000000100032c60	andl	$0x3f, %r8d
0000000100032c64	movzbl	0x2(%rcx), %r9d
0000000100032c69	andl	$0x3f, %r9d
0000000100032c6d	movzbl	0x3(%rcx), %ecx
0000000100032c71	andl	$0x7, %edx
0000000100032c74	shll	$0x12, %edx
0000000100032c77	shll	$0xc, %r8d
0000000100032c7b	shll	$0x6, %r9d
0000000100032c7f	orl	%r8d, %r9d
0000000100032c82	andl	$0x3f, %ecx
0000000100032c85	orl	%r9d, %ecx
0000000100032c88	orl	%edx, %ecx
0000000100032c8a	cmpl	$0x110000, %ecx                 ## imm = 0x110000
0000000100032c90	sete	%cl
0000000100032c93	cmpl	$0x110000, %eax                 ## imm = 0x110000
0000000100032c98	jne	0x100032ca5
0000000100032c9a	jmp	0x100032d16
0000000100032c9c	movb	$0x1, %cl
0000000100032c9e	cmpl	$0x110000, %eax                 ## imm = 0x110000
0000000100032ca3	je	0x100032d16
0000000100032ca5	testb	%cl, %cl
0000000100032ca7	je	0x100032d16
0000000100032ca9	addq	$0x98, %rsp
0000000100032cb0	popq	%rbx
0000000100032cb1	popq	%rbp
0000000100032cb2	retq
0000000100032cb3	movl	$0x1, %edi
0000000100032cb8	leaq	0x16f69(%rip), %rdx
0000000100032cbf	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100032cc4	movl	$0x2, %edi
0000000100032cc9	leaq	0x16f58(%rip), %rdx
0000000100032cd0	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100032cd5	movl	$0x3, %edi
0000000100032cda	leaq	0x16f47(%rip), %rdx
0000000100032ce1	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100032ce6	leaq	0x1346b(%rip), %rdi
0000000100032ced	leaq	0x16ec4(%rip), %rdx
0000000100032cf4	movl	$0x2b, %esi
0000000100032cf9	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100032cfe	leaq	0x1353b(%rip), %rdi
0000000100032d05	leaq	0x16e94(%rip), %rdx
0000000100032d0c	movl	$0x28, %esi
0000000100032d11	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100032d16	callq	__ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h2c0239fe17888bf8E ## _$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::count::h2c0239fe17888bf8
0000000100032d1b	movq	%rax, -0x28(%rbp)
0000000100032d1f	leaq	-0x20(%rbp), %rax
0000000100032d23	movq	%rax, -0x58(%rbp)
0000000100032d27	leaq	__ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e01503ea6624ef5E(%rip), %rax ## _$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$::fmt::h3e01503ea6624ef5
0000000100032d2e	movq	%rax, -0x50(%rbp)
0000000100032d32	leaq	-0x68(%rbp), %rax
0000000100032d36	movq	%rax, -0x48(%rbp)
0000000100032d3a	leaq	__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hffad75f12203deefE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$::fmt::hffad75f12203deef
0000000100032d41	movq	%rax, -0x40(%rbp)
0000000100032d45	leaq	-0x28(%rbp), %rax
0000000100032d49	movq	%rax, -0x38(%rbp)
0000000100032d4d	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
0000000100032d54	movq	%rax, -0x30(%rbp)
0000000100032d58	leaq	0x16e71(%rip), %rax
0000000100032d5f	movq	%rax, -0x98(%rbp)
0000000100032d66	movq	$0x4, -0x90(%rbp)
0000000100032d71	movq	$0x0, -0x78(%rbp)
0000000100032d79	movq	%rbx, -0x88(%rbp)
0000000100032d80	movq	$0x3, -0x80(%rbp)
0000000100032d88	leaq	0x16e81(%rip), %rsi
0000000100032d8f	leaq	-0x98(%rbp), %rdi
0000000100032d96	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100032d9b	nopl	(%rax,%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6366160f7f080d9aE:
0000000100032da0	pushq	%rbp
0000000100032da1	movq	%rsp, %rbp
0000000100032da4	pushq	%r14
0000000100032da6	pushq	%rbx
0000000100032da7	movq	%rsi, %rbx
0000000100032daa	movq	(%rdi), %r14
0000000100032dad	movq	%rsi, %rdi
0000000100032db0	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
0000000100032db5	testb	%al, %al
0000000100032db7	je	0x100032dc8
0000000100032db9	movq	%r14, %rdi
0000000100032dbc	movq	%rbx, %rsi
0000000100032dbf	popq	%rbx
0000000100032dc0	popq	%r14
0000000100032dc2	popq	%rbp
0000000100032dc3	jmp	__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h4ff30f3db6526c2aE ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$::fmt::h4ff30f3db6526c2a
0000000100032dc8	movq	%rbx, %rdi
0000000100032dcb	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
0000000100032dd0	movq	%r14, %rdi
0000000100032dd3	movq	%rbx, %rsi
0000000100032dd6	testb	%al, %al
0000000100032dd8	je	0x100032de3
0000000100032dda	popq	%rbx
0000000100032ddb	popq	%r14
0000000100032ddd	popq	%rbp
0000000100032dde	jmp	__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h9d2e79c904d8a800E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$::fmt::h9d2e79c904d8a800
0000000100032de3	popq	%rbx
0000000100032de4	popq	%r14
0000000100032de6	popq	%rbp
0000000100032de7	jmp	__ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hb08bf60f5df77f3dE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$::fmt::hb08bf60f5df77f3d
0000000100032dec	nopl	(%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hffad75f12203deefE:
0000000100032df0	pushq	%rbp
0000000100032df1	movq	%rsp, %rbp
0000000100032df4	movq	%rsi, %rdx
0000000100032df7	movq	(%rdi), %rax
0000000100032dfa	movq	0x8(%rdi), %rsi
0000000100032dfe	movq	%rax, %rdi
0000000100032e01	popq	%rbp
0000000100032e02	jmp	__ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad51f5198b8b56bE ## _$LT$str$u20$as$u20$core..fmt..Debug$GT$::fmt::h9ad51f5198b8b56b
0000000100032e07	nopw	(%rax,%rax)
__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h386479295a7728e9E:
0000000100032e10	pushq	%rbp
0000000100032e11	movq	%rsp, %rbp
0000000100032e14	subq	$0x30, %rsp
0000000100032e18	movq	(%rdi), %rdi
0000000100032e1b	cmpq	$0x0, (%rdi)
0000000100032e1f	je	0x100032e2b
0000000100032e21	addq	$0x30, %rsp
0000000100032e25	popq	%rbp
0000000100032e26	jmp	__ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h30d14833b59da9e9E ## _$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$::fmt::h30d14833b59da9e9
0000000100032e2b	movq	0x8(%rdi), %rax
0000000100032e2f	movq	0x10(%rdi), %rcx
0000000100032e33	movq	%rax, -0x30(%rbp)
0000000100032e37	movq	%rcx, -0x28(%rbp)
0000000100032e3b	movq	$0x0, -0x20(%rbp)
0000000100032e43	movl	$0x0, -0x18(%rbp)
0000000100032e4a	movq	%rsi, -0x10(%rbp)
0000000100032e4e	movl	$0x0, -0x8(%rbp)
0000000100032e55	leaq	-0x30(%rbp), %rdi
0000000100032e59	movl	$0x1, %esi
0000000100032e5e	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100032e63	addq	$0x30, %rsp
0000000100032e67	popq	%rbp
0000000100032e68	retq
0000000100032e69	nopl	(%rax)
__ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h77971d0cbcbf9a1fE:
0000000100032e70	pushq	%rbp
0000000100032e71	movq	%rsp, %rbp
0000000100032e74	movq	%rsi, %rdi
0000000100032e77	leaq	0x13152(%rip), %rsi
0000000100032e7e	movl	$0x2, %edx
0000000100032e83	popq	%rbp
0000000100032e84	jmp	__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE ## core::fmt::Formatter::pad::h699bd9f3561ce56c
0000000100032e89	nopl	(%rax)
__ZN4core3ptr110drop_in_place$LT$$RF$mut$u20$rustc_demangle..SizeLimitedFmtAdapter$LT$$RF$mut$u20$core..fmt..Formatter$GT$$GT$17h2ba54d6b6521967fE:
0000000100032e90	pushq	%rbp
0000000100032e91	movq	%rsp, %rbp
0000000100032e94	popq	%rbp
0000000100032e95	retq
0000000100032e96	nopw	%cs:(%rax,%rax)
__ZN4core3ptr29drop_in_place$LT$$LP$$RP$$GT$17hac341d50fdec4c98E:
0000000100032ea0	pushq	%rbp
0000000100032ea1	movq	%rsp, %rbp
0000000100032ea4	popq	%rbp
0000000100032ea5	retq
0000000100032ea6	nopw	%cs:(%rax,%rax)
__ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h1d916e2902d807dcE:
0000000100032eb0	pushq	%rbp
0000000100032eb1	movq	%rsp, %rbp
0000000100032eb4	popq	%rbp
0000000100032eb5	retq
0000000100032eb6	nopw	%cs:(%rax,%rax)
__ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hb827f74006434009E:
0000000100032ec0	pushq	%rbp
0000000100032ec1	movq	%rsp, %rbp
0000000100032ec4	movq	%rcx, %r8
0000000100032ec7	movq	%rdx, %rcx
0000000100032eca	movq	%rdi, %rax
0000000100032ecd	testq	%rdi, %rdi
0000000100032ed0	je	0x100032ee8
0000000100032ed2	movq	%rcx, %rdx
0000000100032ed5	subq	%rax, %rdx
0000000100032ed8	jbe	0x100032ef3
0000000100032eda	cmpb	$-0x41, (%rsi,%rax)
0000000100032ede	jle	0x100032ef5
0000000100032ee0	addq	%rax, %rsi
0000000100032ee3	movq	%rsi, %rax
0000000100032ee6	popq	%rbp
0000000100032ee7	retq
0000000100032ee8	movq	%rcx, %rdx
0000000100032eeb	addq	%rax, %rsi
0000000100032eee	movq	%rsi, %rax
0000000100032ef1	popq	%rbp
0000000100032ef2	retq
0000000100032ef3	je	0x100032ee0
0000000100032ef5	movq	%rsi, %rdi
0000000100032ef8	movq	%rcx, %rsi
0000000100032efb	movq	%rax, %rdx
0000000100032efe	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100032f03	nopw	%cs:(%rax,%rax)
0000000100032f0d	nopl	(%rax)
__ZN4core3str7pattern14TwoWaySearcher4next17hfb8e8c0f9cc2f4abE:
0000000100032f10	pushq	%rbp
0000000100032f11	movq	%rsp, %rbp
0000000100032f14	pushq	%r15
0000000100032f16	pushq	%r14
0000000100032f18	pushq	%r13
0000000100032f1a	pushq	%r12
0000000100032f1c	pushq	%rbx
0000000100032f1d	subq	$0x38, %rsp
0000000100032f21	movq	0x20(%rsi), %rax
0000000100032f25	leaq	-0x1(%rax,%r9), %r10
0000000100032f2a	cmpq	%rcx, %r10
0000000100032f2d	jae	0x100033138
0000000100032f33	movzbl	0x10(%rbp), %r15d
0000000100032f38	movq	0x18(%rsi), %rbx
0000000100032f3c	movq	(%rsi), %r11
0000000100032f3f	movq	0x10(%rsi), %r14
0000000100032f43	movq	%r9, %r12
0000000100032f46	movq	%r14, -0x60(%rbp)
0000000100032f4a	subq	%r14, %r12
0000000100032f4d	movq	%r12, -0x58(%rbp)
0000000100032f51	movq	0x30(%rsi), %r12
0000000100032f55	leaq	(%r9,%r9), %r14
0000000100032f59	movq	%r14, -0x50(%rbp)
0000000100032f5d	leaq	-0x1(%r9), %r13
0000000100032f61	movl	$0x1, %r14d
0000000100032f67	movq	%r11, -0x40(%rbp)
0000000100032f6b	subq	%r11, %r14
0000000100032f6e	movq	%r14, -0x48(%rbp)
0000000100032f72	movq	%rdi, -0x30(%rbp)
0000000100032f76	testb	%r15b, %r15b
0000000100032f79	je	0x100032fb0
0000000100032f7b	movq	%rax, %r11
0000000100032f7e	nop
0000000100032f80	movzbl	(%rdx,%r10), %eax
0000000100032f85	btq	%rax, %rbx
0000000100032f89	jb	0x100032fd0
0000000100032f8b	addq	%r9, %r11
0000000100032f8e	movq	%r11, 0x20(%rsi)
0000000100032f92	leaq	-0x1(%r9,%r11), %r10
0000000100032f97	leaq	(%r13,%r11), %rax
0000000100032f9c	cmpq	%rcx, %rax
0000000100032f9f	jb	0x100032f80
0000000100032fa1	jmp	0x100033138
0000000100032fa6	nopw	%cs:(%rax,%rax)
0000000100032fb0	movzbl	(%rdx,%r10), %r10d
0000000100032fb5	btq	%r10, %rbx
0000000100032fb9	jae	0x100032fd8
0000000100032fbb	movl	%r15d, %r14d
0000000100032fbe	movq	%r12, %r15
0000000100032fc1	movq	%rax, %r11
0000000100032fc4	jmp	0x100033040
0000000100032fc6	nopw	%cs:(%rax,%rax)
0000000100032fd0	movl	%r15d, %r14d
0000000100032fd3	xorl	%r15d, %r15d
0000000100032fd6	jmp	0x100033040
0000000100032fd8	leaq	(%rax,%r9), %r11
0000000100032fdc	movq	%r11, 0x20(%rsi)
0000000100032fe0	movq	$0x0, 0x30(%rsi)
0000000100032fe8	leaq	-0x1(%r9,%r11), %r10
0000000100032fed	cmpq	%rcx, %r10
0000000100032ff0	jae	0x100033138
0000000100032ff6	addq	-0x50(%rbp), %rax
0000000100032ffa	nopw	(%rax,%rax)
0000000100033000	movzbl	-0x1(%rdx,%rax), %r10d
0000000100033006	btq	%r10, %rbx
000000010003300a	jb	0x10003302d
000000010003300c	addq	%r9, %r11
000000010003300f	movq	%rax, 0x20(%rsi)
0000000100033013	movq	$0x0, 0x30(%rsi)
000000010003301b	leaq	-0x1(%rax,%r9), %r10
0000000100033020	addq	%r9, %rax
0000000100033023	cmpq	%rcx, %r10
0000000100033026	jb	0x100033000
0000000100033028	jmp	0x100033138
000000010003302d	movl	%r15d, %r14d
0000000100033030	xorl	%r15d, %r15d
0000000100033033	xorl	%r12d, %r12d
0000000100033036	nopw	%cs:(%rax,%rax)
0000000100033040	movq	-0x40(%rbp), %rdi
0000000100033044	cmpq	%r12, %rdi
0000000100033047	movq	%r12, -0x38(%rbp)
000000010003304b	movq	%r12, %rax
000000010003304e	cmovaq	%rdi, %rax
0000000100033052	testb	%r14b, %r14b
0000000100033055	cmovneq	%rdi, %rax
0000000100033059	cmpq	%r9, %rax
000000010003305c	jae	0x100033090
000000010003305e	leaq	(%rdx,%r11), %r12
0000000100033062	movq	%rax, %r10
0000000100033065	nopw	%cs:(%rax,%rax)
000000010003306f	nop
0000000100033070	leaq	(%r11,%r10), %rdi
0000000100033074	cmpq	%rcx, %rdi
0000000100033077	jae	0x10003319b
000000010003307d	movzbl	(%r8,%r10), %edi
0000000100033082	cmpb	(%r12,%r10), %dil
0000000100033086	jne	0x1000330ee
0000000100033088	incq	%r10
000000010003308b	cmpq	%r10, %r9
000000010003308e	jne	0x100033070
0000000100033090	movq	-0x40(%rbp), %rax
0000000100033094	nopw	%cs:(%rax,%rax)
000000010003309e	nop
00000001000330a0	cmpq	%rax, %r15
00000001000330a3	jae	0x100033140
00000001000330a9	decq	%rax
00000001000330ac	cmpq	%r9, %rax
00000001000330af	jae	0x100033177
00000001000330b5	leaq	(%rax,%r11), %r10
00000001000330b9	cmpq	%rcx, %r10
00000001000330bc	jae	0x100033189
00000001000330c2	movzbl	(%r8,%rax), %r12d
00000001000330c7	cmpb	(%rdx,%r10), %r12b
00000001000330cb	je	0x1000330a0
00000001000330cd	addq	-0x60(%rbp), %r11
00000001000330d1	movq	%r11, 0x20(%rsi)
00000001000330d5	movq	-0x58(%rbp), %r10
00000001000330d9	movq	%r11, %rax
00000001000330dc	movl	%r14d, %r15d
00000001000330df	testb	%r14b, %r14b
00000001000330e2	movq	-0x30(%rbp), %rdi
00000001000330e6	movq	-0x38(%rbp), %r12
00000001000330ea	jne	0x10003310c
00000001000330ec	jmp	0x100033123
00000001000330ee	addq	-0x48(%rbp), %r11
00000001000330f2	movq	%r11, %rax
00000001000330f5	addq	%r10, %rax
00000001000330f8	movq	%rax, 0x20(%rsi)
00000001000330fc	movl	%r14d, %r15d
00000001000330ff	testb	%r14b, %r14b
0000000100033102	je	0x10003311c
0000000100033104	movq	-0x30(%rbp), %rdi
0000000100033108	movq	-0x38(%rbp), %r12
000000010003310c	leaq	-0x1(%rax,%r9), %r10
0000000100033111	cmpq	%rcx, %r10
0000000100033114	jb	0x100032f76
000000010003311a	jmp	0x100033138
000000010003311c	xorl	%r10d, %r10d
000000010003311f	movq	-0x30(%rbp), %rdi
0000000100033123	movq	%r10, 0x30(%rsi)
0000000100033127	movq	%r10, %r12
000000010003312a	leaq	-0x1(%rax,%r9), %r10
000000010003312f	cmpq	%rcx, %r10
0000000100033132	jb	0x100032f76
0000000100033138	movq	%rcx, 0x20(%rsi)
000000010003313c	xorl	%eax, %eax
000000010003313e	jmp	0x100033165
0000000100033140	addq	%r11, %r9
0000000100033143	movq	%r9, 0x20(%rsi)
0000000100033147	testb	%r14b, %r14b
000000010003314a	jne	0x100033154
000000010003314c	movq	$0x0, 0x30(%rsi)
0000000100033154	movq	-0x30(%rbp), %rdi
0000000100033158	movq	%r11, 0x8(%rdi)
000000010003315c	movq	%r9, 0x10(%rdi)
0000000100033160	movl	$0x1, %eax
0000000100033165	movq	%rax, (%rdi)
0000000100033168	addq	$0x38, %rsp
000000010003316c	popq	%rbx
000000010003316d	popq	%r12
000000010003316f	popq	%r13
0000000100033171	popq	%r14
0000000100033173	popq	%r15
0000000100033175	popq	%rbp
0000000100033176	retq
0000000100033177	leaq	0x16672(%rip), %rdx
000000010003317e	movq	%rax, %rdi
0000000100033181	movq	%r9, %rsi
0000000100033184	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100033189	leaq	0x16678(%rip), %rdx
0000000100033190	movq	%r10, %rdi
0000000100033193	movq	%rcx, %rsi
0000000100033196	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003319b	addq	%r11, %rax
000000010003319e	cmpq	%rax, %rcx
00000001000331a1	cmovaq	%rcx, %rax
00000001000331a5	leaq	0x16674(%rip), %rdx
00000001000331ac	movq	%rax, %rdi
00000001000331af	movq	%rcx, %rsi
00000001000331b2	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
00000001000331b7	nopw	(%rax,%rax)
__ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h99e3bb949009c8b4E:
00000001000331c0	pushq	%rbp
00000001000331c1	movq	%rsp, %rbp
00000001000331c4	pushq	%r15
00000001000331c6	pushq	%r14
00000001000331c8	pushq	%rbx
00000001000331c9	subq	$0x18, %rsp
00000001000331cd	movl	%esi, %r14d
00000001000331d0	movq	%rdi, %rbx
00000001000331d3	cmpl	$0x27, %esi
00000001000331d6	ja	0x1000331f5
00000001000331d8	movl	%r14d, %eax
00000001000331db	leaq	0xb6(%rip), %rcx
00000001000331e2	movslq	(%rcx,%rax,4), %rax
00000001000331e6	addq	%rcx, %rax
00000001000331e9	jmpq	*%rax
00000001000331eb	movq	%rbx, %rdi
00000001000331ee	movl	$0x30, %esi
00000001000331f3	jmp	0x100033262
00000001000331f5	cmpl	$0x5c, %r14d
00000001000331f9	jne	0x100033205
00000001000331fb	movq	%rbx, %rdi
00000001000331fe	movl	$0x5c, %esi
0000000100033203	jmp	0x100033262
0000000100033205	movl	%r14d, %edi
0000000100033208	callq	__ZN4core7unicode12unicode_data15grapheme_extend6lookup17h82558d6328afff9fE ## core::unicode::unicode_data::grapheme_extend::lookup::h82558d6328afff9f
000000010003320d	testb	%al, %al
000000010003320f	jne	0x100033271
0000000100033211	movl	%r14d, %edi
0000000100033214	callq	__ZN4core7unicode9printable12is_printable17he44a4dc6186a389eE ## core::unicode::printable::is_printable::he44a4dc6186a389e
0000000100033219	testb	%al, %al
000000010003321b	je	0x100033271
000000010003321d	movq	%rbx, %rdi
0000000100033220	movl	%r14d, %esi
0000000100033223	addq	$0x18, %rsp
0000000100033227	popq	%rbx
0000000100033228	popq	%r14
000000010003322a	popq	%r15
000000010003322c	popq	%rbp
000000010003322d	jmp	__ZN4core4char11EscapeDebug9printable17h811f210e3132f2d1E ## core::char::EscapeDebug::printable::h811f210e3132f2d1
0000000100033232	movq	%rbx, %rdi
0000000100033235	movl	$0x74, %esi
000000010003323a	jmp	0x100033262
000000010003323c	movq	%rbx, %rdi
000000010003323f	movl	$0x6e, %esi
0000000100033244	jmp	0x100033262
0000000100033246	movq	%rbx, %rdi
0000000100033249	movl	$0x72, %esi
000000010003324e	jmp	0x100033262
0000000100033250	movq	%rbx, %rdi
0000000100033253	movl	$0x22, %esi
0000000100033258	jmp	0x100033262
000000010003325a	movq	%rbx, %rdi
000000010003325d	movl	$0x27, %esi
0000000100033262	addq	$0x18, %rsp
0000000100033266	popq	%rbx
0000000100033267	popq	%r14
0000000100033269	popq	%r15
000000010003326b	popq	%rbp
000000010003326c	jmp	__ZN4core4char11EscapeDebug9backslash17h14790b6fe37a3e27E ## core::char::EscapeDebug::backslash::h14790b6fe37a3e27
0000000100033271	leaq	-0x28(%rbp), %r15
0000000100033275	movq	%r15, %rdi
0000000100033278	movl	%r14d, %esi
000000010003327b	callq	__ZN4core4char13EscapeUnicode3new17hc16d2c55ce4ce54fE ## core::char::EscapeUnicode::new::hc16d2c55ce4ce54f
0000000100033280	movq	%rbx, %rdi
0000000100033283	movq	%r15, %rsi
0000000100033286	callq	__ZN4core4char11EscapeDebug12from_unicode17h76517ab022da5513E ## core::char::EscapeDebug::from_unicode::h76517ab022da5513
000000010003328b	addq	$0x18, %rsp
000000010003328f	popq	%rbx
0000000100033290	popq	%r14
0000000100033292	popq	%r15
0000000100033294	popq	%rbp
0000000100033295	retq
0000000100033296	nop
0000000100033298	pushq	%rbx
0000000100033299	.byte 0xff #bad opcode
000000010003329a	.byte 0xff #bad opcode
000000010003329b	ljmpl	*-0x1(%rbp)
000000010003329e	.byte 0xff #bad opcode
000000010003329f	ljmpl	*-0x1(%rbp)
00000001000332a2	.byte 0xff #bad opcode
00000001000332a3	ljmpl	*-0x1(%rbp)
00000001000332a6	.byte 0xff #bad opcode
00000001000332a7	ljmpl	*-0x1(%rbp)
00000001000332aa	.byte 0xff #bad opcode
00000001000332ab	ljmpl	*-0x1(%rbp)
00000001000332ae	.byte 0xff #bad opcode
00000001000332af	ljmpl	*-0x1(%rbp)
00000001000332b2	.byte 0xff #bad opcode
00000001000332b3	ljmpl	*-0x1(%rbp)
00000001000332b6	.byte 0xff #bad opcode
00000001000332b7	ljmpl	*-0x1(%rbp)
00000001000332ba	.byte 0xff #bad opcode
00000001000332bb	lcalll	*-0x5b000001(%rdx)
00000001000332c1	.byte 0xff #bad opcode
00000001000332c2	.byte 0xff #bad opcode
00000001000332c3	ljmpl	*-0x1(%rbp)
00000001000332c6	.byte 0xff #bad opcode
00000001000332c7	ljmpl	*-0x1(%rbp)
00000001000332ca	.byte 0xff #bad opcode
00000001000332cb	ljmpl	*0x6dffffff(%rsi)
00000001000332d1	.byte 0xff #bad opcode
00000001000332d2	.byte 0xff #bad opcode
00000001000332d3	ljmpl	*-0x1(%rbp)
00000001000332d6	.byte 0xff #bad opcode
00000001000332d7	ljmpl	*-0x1(%rbp)
00000001000332da	.byte 0xff #bad opcode
00000001000332db	ljmpl	*-0x1(%rbp)
00000001000332de	.byte 0xff #bad opcode
00000001000332df	ljmpl	*-0x1(%rbp)
00000001000332e2	.byte 0xff #bad opcode
00000001000332e3	ljmpl	*-0x1(%rbp)
00000001000332e6	.byte 0xff #bad opcode
00000001000332e7	ljmpl	*-0x1(%rbp)
00000001000332ea	.byte 0xff #bad opcode
00000001000332eb	ljmpl	*-0x1(%rbp)
00000001000332ee	.byte 0xff #bad opcode
00000001000332ef	ljmpl	*-0x1(%rbp)
00000001000332f2	.byte 0xff #bad opcode
00000001000332f3	ljmpl	*-0x1(%rbp)
00000001000332f6	.byte 0xff #bad opcode
00000001000332f7	ljmpl	*-0x1(%rbp)
00000001000332fa	.byte 0xff #bad opcode
00000001000332fb	ljmpl	*-0x1(%rbp)
00000001000332fe	.byte 0xff #bad opcode
00000001000332ff	ljmpl	*-0x1(%rbp)
0000000100033302	.byte 0xff #bad opcode
0000000100033303	ljmpl	*-0x1(%rbp)
0000000100033306	.byte 0xff #bad opcode
0000000100033307	ljmpl	*-0x1(%rbp)
000000010003330a	.byte 0xff #bad opcode
000000010003330b	ljmpl	*-0x1(%rbp)
000000010003330e	.byte 0xff #bad opcode
000000010003330f	ljmpl	*-0x1(%rbp)
0000000100033312	.byte 0xff #bad opcode
0000000100033313	ljmpl	*-0x1(%rbp)
0000000100033316	.byte 0xff #bad opcode
0000000100033317	ljmpl	*-0x1(%rbp)
000000010003331a	.byte 0xff #bad opcode
000000010003331b	ljmpl	*-0x1(%rbp)
000000010003331e	.byte 0xff #bad opcode
000000010003331f	.byte 0xff #bad opcode
0000000100033320	movl	$0x6dffffff, %eax               ## imm = 0x6DFFFFFF
0000000100033325	.byte 0xff #bad opcode
0000000100033326	.byte 0xff #bad opcode
0000000100033327	ljmpl	*-0x1(%rbp)
000000010003332a	.byte 0xff #bad opcode
000000010003332b	ljmpl	*-0x1(%rbp)
000000010003332e	.byte 0xff #bad opcode
000000010003332f	ljmpl	*-0x1(%rbp)
0000000100033332	.byte 0xff #bad opcode
0000000100033333	incl	%edx
0000000100033335	.byte 0xff #bad opcode
0000000100033336	.byte 0xff #bad opcode
0000000100033337	decl	(%rdi)
0000000100033339	.byte 0x1f #bad opcode
000000010003333a	testb	%al, (%rax)
000000010003333c	addb	%al, (%rax)
000000010003333e	addb	%al, (%rax)
__ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e01503ea6624ef5E:
0000000100033340	pushq	%rbp
0000000100033341	movq	%rsp, %rbp
0000000100033344	pushq	%r15
0000000100033346	pushq	%r14
0000000100033348	pushq	%r13
000000010003334a	pushq	%r12
000000010003334c	pushq	%rbx
000000010003334d	subq	$0x18, %rsp
0000000100033351	movq	(%rdi), %r12
0000000100033354	movq	0x8(%rdi), %r13
0000000100033358	leaq	-0x40(%rbp), %rdi
000000010003335c	callq	__ZN4core3fmt9Formatter10debug_list17hea453ad51fae0031E ## core::fmt::Formatter::debug_list::hea453ad51fae0031
0000000100033361	testq	%r13, %r13
0000000100033364	je	0x10003339a
0000000100033366	leaq	0x1644b(%rip), %rbx
000000010003336d	leaq	-0x40(%rbp), %r14
0000000100033371	leaq	-0x30(%rbp), %r15
0000000100033375	nopw	%cs:(%rax,%rax)
000000010003337f	nop
0000000100033380	movq	%r12, -0x30(%rbp)
0000000100033384	incq	%r12
0000000100033387	movq	%r14, %rdi
000000010003338a	movq	%r15, %rsi
000000010003338d	movq	%rbx, %rdx
0000000100033390	callq	__ZN4core3fmt8builders8DebugSet5entry17hf11f5493a502177bE ## core::fmt::builders::DebugSet::entry::hf11f5493a502177b
0000000100033395	decq	%r13
0000000100033398	jne	0x100033380
000000010003339a	leaq	-0x40(%rbp), %rdi
000000010003339e	callq	__ZN4core3fmt8builders9DebugList6finish17hf1eecb5654d2cf1aE ## core::fmt::builders::DebugList::finish::hf1eecb5654d2cf1a
00000001000333a3	addq	$0x18, %rsp
00000001000333a7	popq	%rbx
00000001000333a8	popq	%r12
00000001000333aa	popq	%r13
00000001000333ac	popq	%r14
00000001000333ae	popq	%r15
00000001000333b0	popq	%rbp
00000001000333b1	retq
00000001000333b2	nopw	%cs:(%rax,%rax)
00000001000333bc	nopl	(%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h0c6033e41e8f5102E:
00000001000333c0	pushq	%rbp
00000001000333c1	movq	%rsp, %rbp
00000001000333c4	subq	$0x10, %rsp
00000001000333c8	movq	(%rdi), %rcx
00000001000333cb	movl	$0x0, -0x4(%rbp)
00000001000333d2	cmpl	$0x80, %esi
00000001000333d8	jae	0x1000333ee
00000001000333da	movb	%sil, -0x4(%rbp)
00000001000333de	movl	$0x1, %edx
00000001000333e3	cmpq	$0x0, (%rcx)
00000001000333e7	jne	0x10003344c
00000001000333e9	jmp	0x100033494
00000001000333ee	movl	%esi, %eax
00000001000333f0	cmpl	$0x800, %esi                    ## imm = 0x800
00000001000333f6	jae	0x100033419
00000001000333f8	shrl	$0x6, %eax
00000001000333fb	orb	$-0x40, %al
00000001000333fd	movb	%al, -0x4(%rbp)
0000000100033400	andb	$0x3f, %sil
0000000100033404	orb	$-0x80, %sil
0000000100033408	movb	%sil, -0x3(%rbp)
000000010003340c	movl	$0x2, %edx
0000000100033411	cmpq	$0x0, (%rcx)
0000000100033415	jne	0x10003344c
0000000100033417	jmp	0x100033494
0000000100033419	cmpl	$0x10000, %esi                  ## imm = 0x10000
000000010003341f	jae	0x10003345b
0000000100033421	shrl	$0xc, %eax
0000000100033424	orb	$-0x20, %al
0000000100033426	movb	%al, -0x4(%rbp)
0000000100033429	movl	%esi, %eax
000000010003342b	shrl	$0x6, %eax
000000010003342e	andb	$0x3f, %al
0000000100033430	orb	$-0x80, %al
0000000100033432	movb	%al, -0x3(%rbp)
0000000100033435	andb	$0x3f, %sil
0000000100033439	orb	$-0x80, %sil
000000010003343d	movb	%sil, -0x2(%rbp)
0000000100033441	movl	$0x3, %edx
0000000100033446	cmpq	$0x0, (%rcx)
000000010003344a	je	0x100033494
000000010003344c	movq	$0x1, (%rcx)
0000000100033453	movb	$0x1, %al
0000000100033455	addq	$0x10, %rsp
0000000100033459	popq	%rbp
000000010003345a	retq
000000010003345b	shrl	$0x12, %eax
000000010003345e	andb	$0x7, %al
0000000100033460	orb	$-0x10, %al
0000000100033462	movb	%al, -0x4(%rbp)
0000000100033465	movl	%esi, %eax
0000000100033467	shrl	$0xc, %eax
000000010003346a	andb	$0x3f, %al
000000010003346c	orb	$-0x80, %al
000000010003346e	movb	%al, -0x3(%rbp)
0000000100033471	movl	%esi, %eax
0000000100033473	shrl	$0x6, %eax
0000000100033476	andb	$0x3f, %al
0000000100033478	orb	$-0x80, %al
000000010003347a	movb	%al, -0x2(%rbp)
000000010003347d	andb	$0x3f, %sil
0000000100033481	orb	$-0x80, %sil
0000000100033485	movb	%sil, -0x1(%rbp)
0000000100033489	movl	$0x4, %edx
000000010003348e	cmpq	$0x0, (%rcx)
0000000100033492	jne	0x10003344c
0000000100033494	xorl	%eax, %eax
0000000100033496	subq	%rdx, 0x8(%rcx)
000000010003349a	setb	%al
000000010003349d	movq	%rax, (%rcx)
00000001000334a0	movb	$0x1, %al
00000001000334a2	jb	0x100033455
00000001000334a4	movq	0x10(%rcx), %rdi
00000001000334a8	leaq	-0x4(%rbp), %rsi
00000001000334ac	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
00000001000334b1	addq	$0x10, %rsp
00000001000334b5	popq	%rbp
00000001000334b6	retq
00000001000334b7	nopw	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17ha9f7d0020bdc27b8E:
00000001000334c0	pushq	%rbp
00000001000334c1	movq	%rsp, %rbp
00000001000334c4	subq	$0x40, %rsp
00000001000334c8	movq	(%rdi), %rax
00000001000334cb	movq	0x28(%rsi), %rcx
00000001000334cf	movq	%rcx, -0x10(%rbp)
00000001000334d3	movq	0x20(%rsi), %rcx
00000001000334d7	movq	%rcx, -0x18(%rbp)
00000001000334db	movq	0x18(%rsi), %rcx
00000001000334df	movq	%rcx, -0x20(%rbp)
00000001000334e3	movq	0x10(%rsi), %rcx
00000001000334e7	movq	%rcx, -0x28(%rbp)
00000001000334eb	movq	(%rsi), %rcx
00000001000334ee	movq	0x8(%rsi), %rdx
00000001000334f2	movq	%rdx, -0x30(%rbp)
00000001000334f6	movq	%rcx, -0x38(%rbp)
00000001000334fa	movq	%rax, -0x8(%rbp)
00000001000334fe	leaq	0x16283(%rip), %rsi
0000000100033505	leaq	-0x8(%rbp), %rdi
0000000100033509	leaq	-0x38(%rbp), %rdx
000000010003350d	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
0000000100033512	addq	$0x40, %rsp
0000000100033516	popq	%rbp
0000000100033517	retq
0000000100033518	nopl	(%rax,%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hd55e55110a4fb001E:
0000000100033520	pushq	%rbp
0000000100033521	movq	%rsp, %rbp
0000000100033524	movq	(%rdi), %rax
0000000100033527	cmpq	$0x0, (%rax)
000000010003352b	je	0x100033536
000000010003352d	movq	$0x1, (%rax)
0000000100033534	jmp	0x100033544
0000000100033536	xorl	%ecx, %ecx
0000000100033538	subq	%rdx, 0x8(%rax)
000000010003353c	setb	%cl
000000010003353f	movq	%rcx, (%rax)
0000000100033542	jae	0x100033548
0000000100033544	movb	$0x1, %al
0000000100033546	popq	%rbp
0000000100033547	retq
0000000100033548	movq	0x10(%rax), %rdi
000000010003354c	popq	%rbp
000000010003354d	jmp	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100033552	nopw	%cs:(%rax,%rax)
000000010003355c	nopl	(%rax)
__ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6c99b026dd33e6a4E:
0000000100033560	pushq	%rbp
0000000100033561	movq	%rsp, %rbp
0000000100033564	pushq	%r15
0000000100033566	pushq	%r14
0000000100033568	pushq	%r13
000000010003356a	pushq	%r12
000000010003356c	pushq	%rbx
000000010003356d	subq	$0x48, %rsp
0000000100033571	cmpq	$0x0, (%rsi)
0000000100033575	je	0x1000337a2
000000010003357b	movq	0x28(%rsi), %rdx
000000010003357f	movq	0x50(%rsi), %rax
0000000100033583	cmpq	%rax, %rdx
0000000100033586	je	0x1000337a8
000000010003358c	movq	%rdi, -0x48(%rbp)
0000000100033590	movq	0x48(%rsi), %r10
0000000100033594	movq	0x60(%rsi), %r9
0000000100033598	leaq	-0x1(%rdx,%r9), %rcx
000000010003359d	movq	%rax, %r8
00000001000335a0	cmpq	%rax, %rcx
00000001000335a3	jae	0x100033956
00000001000335a9	movq	0x38(%rsi), %r13
00000001000335ad	movq	0x58(%rsi), %r14
00000001000335b1	leaq	(%rdx,%r9), %r11
00000001000335b5	movq	0x20(%rsi), %rdi
00000001000335b9	movq	%rdi, -0x50(%rbp)
00000001000335bd	movq	0x8(%rsi), %r12
00000001000335c1	movq	0x18(%rsi), %rdi
00000001000335c5	movq	%r9, %r8
00000001000335c8	subq	%rdi, %r8
00000001000335cb	movq	%r8, -0x60(%rbp)
00000001000335cf	movq	%r9, %r15
00000001000335d2	addq	$-0x1, %r15
00000001000335d6	setb	%r8b
00000001000335da	movq	%r11, -0x38(%rbp)
00000001000335de	movq	%r15, -0x70(%rbp)
00000001000335e2	addq	%r11, %r15
00000001000335e5	movq	%r15, %r11
00000001000335e8	movq	%r15, -0x40(%rbp)
00000001000335ec	cmpq	%rax, %r15
00000001000335ef	setae	%r11b
00000001000335f3	addq	%rdx, %rdi
00000001000335f6	movq	%rdi, -0x68(%rbp)
00000001000335fa	orb	%r8b, %r11b
00000001000335fd	movb	%r11b, -0x29(%rbp)
0000000100033601	movq	%rdx, %rdi
0000000100033604	subq	%r12, %rdi
0000000100033607	incq	%rdi
000000010003360a	movq	%rdi, -0x58(%rbp)
000000010003360e	leaq	(%r10,%rdx), %r15
0000000100033612	movq	%r13, %rdi
0000000100033615	movq	%rdx, %r8
0000000100033618	cmpq	$-0x1, %r13
000000010003361c	je	0x100033670
000000010003361e	cmpq	%r8, %rdx
0000000100033621	movq	-0x50(%rbp), %r11
0000000100033625	jne	0x100033956
000000010003362b	movzbl	(%r10,%rcx), %ecx
0000000100033630	btq	%rcx, %r11
0000000100033634	movq	%rdi, %rbx
0000000100033637	jb	0x1000336db
000000010003363d	movq	-0x38(%rbp), %r8
0000000100033641	movq	%r8, 0x28(%rsi)
0000000100033645	movq	$0x0, 0x38(%rsi)
000000010003364d	cmpb	$0x0, -0x29(%rbp)
0000000100033651	jne	0x1000338fb
0000000100033657	movq	-0x40(%rbp), %rcx
000000010003365b	movzbl	(%r10,%rcx), %ecx
0000000100033660	btq	%rcx, %r11
0000000100033664	jae	0x100033905
000000010003366a	xorl	%ebx, %ebx
000000010003366c	xorl	%edi, %edi
000000010003366e	jmp	0x1000336db
0000000100033670	cmpq	%rax, -0x40(%rbp)
0000000100033674	movq	-0x50(%rbp), %r11
0000000100033678	jb	0x100033693
000000010003367a	cmpq	%r8, %rdx
000000010003367d	jne	0x100033956
0000000100033683	movzbl	(%r10,%rcx), %ecx
0000000100033688	btq	%rcx, %r11
000000010003368c	jb	0x1000336d9
000000010003368e	jmp	0x100033798
0000000100033693	cmpq	%r8, %rdx
0000000100033696	jne	0x100033956
000000010003369c	movzbl	(%r10,%rcx), %ecx
00000001000336a1	movl	$0x1, %r8d
00000001000336a7	shlq	%cl, %r8
00000001000336aa	testq	%r9, %r9
00000001000336ad	je	0x1000336b9
00000001000336af	testq	%r11, %r8
00000001000336b2	jne	0x1000336d9
00000001000336b4	jmp	0x100033952
00000001000336b9	testq	%r11, %r8
00000001000336bc	jne	0x1000336d9
00000001000336be	movq	-0x38(%rbp), %rcx
00000001000336c2	movq	%rcx, 0x28(%rsi)
00000001000336c6	movq	-0x40(%rbp), %rcx
00000001000336ca	movzbl	(%r10,%rcx), %ecx
00000001000336cf	btq	%rcx, %r11
00000001000336d3	jae	0x1000337a0
00000001000336d9	xorl	%ebx, %ebx
00000001000336db	cmpq	%rdi, %r12
00000001000336de	movq	%rdi, %rcx
00000001000336e1	cmovaq	%r12, %rcx
00000001000336e5	cmpq	$-0x1, %r13
00000001000336e9	cmoveq	%r12, %rcx
00000001000336ed	movq	%rcx, %r8
00000001000336f0	cmpq	%r9, %rcx
00000001000336f3	jae	0x100033720
00000001000336f5	nopw	%cs:(%rax,%rax)
00000001000336ff	nop
0000000100033700	leaq	(%rdx,%r8), %r11
0000000100033704	cmpq	%rax, %r11
0000000100033707	jae	0x100033936
000000010003370d	movzbl	(%r14,%r8), %r11d
0000000100033712	cmpb	(%r15,%r8), %r11b
0000000100033716	jne	0x100033771
0000000100033718	incq	%r8
000000010003371b	cmpq	%r8, %r9
000000010003371e	jne	0x100033700
0000000100033720	movq	%r12, %rcx
0000000100033723	nopw	%cs:(%rax,%rax)
000000010003372d	nopl	(%rax)
0000000100033730	cmpq	%rcx, %rbx
0000000100033733	jae	0x1000337f2
0000000100033739	decq	%rcx
000000010003373c	cmpq	%r9, %rcx
000000010003373f	jae	0x100033912
0000000100033745	leaq	(%rcx,%rdx), %r8
0000000100033749	cmpq	%rax, %r8
000000010003374c	jae	0x100033924
0000000100033752	movzbl	(%r14,%rcx), %r11d
0000000100033757	cmpb	(%r10,%r8), %r11b
000000010003375b	je	0x100033730
000000010003375d	movq	-0x68(%rbp), %r8
0000000100033761	movq	%r8, 0x28(%rsi)
0000000100033765	movq	-0x60(%rbp), %rcx
0000000100033769	cmpq	$-0x1, %r13
000000010003376d	jne	0x100033781
000000010003376f	jmp	0x100033788
0000000100033771	addq	-0x58(%rbp), %r8
0000000100033775	movq	%r8, 0x28(%rsi)
0000000100033779	cmpq	$-0x1, %r13
000000010003377d	je	0x100033788
000000010003377f	xorl	%ecx, %ecx
0000000100033781	movq	%rcx, 0x38(%rsi)
0000000100033785	movq	%rcx, %rdi
0000000100033788	movq	-0x70(%rbp), %rcx
000000010003378c	addq	%r8, %rcx
000000010003378f	cmpq	%rax, %rcx
0000000100033792	jb	0x100033618
0000000100033798	movq	%rax, %r8
000000010003379b	jmp	0x100033956
00000001000337a0	jmp	0x1000337a0
00000001000337a2	cmpb	$0x0, 0x1a(%rsi)
00000001000337a6	je	0x1000337b4
00000001000337a8	movq	$0x2, (%rdi)
00000001000337af	jmp	0x1000339ac
00000001000337b4	movzbl	0x18(%rsi), %r8d
00000001000337b9	movl	%r8d, %eax
00000001000337bc	xorb	$0x1, %al
00000001000337be	movb	%al, 0x18(%rsi)
00000001000337c1	movq	0x8(%rsi), %rdx
00000001000337c5	movq	0x48(%rsi), %rax
00000001000337c9	movq	0x50(%rsi), %rcx
00000001000337cd	testq	%rdx, %rdx
00000001000337d0	je	0x100033820
00000001000337d2	movq	%rcx, %r9
00000001000337d5	subq	%rdx, %r9
00000001000337d8	jbe	0x100033832
00000001000337da	cmpb	$-0x41, (%rax,%rdx)
00000001000337de	jg	0x100033834
00000001000337e0	leaq	0x160e9(%rip), %r8
00000001000337e7	movq	%rax, %rdi
00000001000337ea	movq	%rcx, %rsi
00000001000337ed	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000337f2	movq	-0x38(%rbp), %rax
00000001000337f6	movq	%rax, 0x28(%rsi)
00000001000337fa	cmpq	$-0x1, %r13
00000001000337fe	je	0x100033808
0000000100033800	movq	$0x0, 0x38(%rsi)
0000000100033808	movq	-0x48(%rbp), %rcx
000000010003380c	movq	$0x0, (%rcx)
0000000100033813	movq	%rdx, 0x8(%rcx)
0000000100033817	movq	%rax, 0x10(%rcx)
000000010003381b	jmp	0x1000339ac
0000000100033820	movq	%rcx, %r9
0000000100033823	testq	%r9, %r9
0000000100033826	jne	0x100033839
0000000100033828	testb	%r8b, %r8b
000000010003382b	jne	0x1000338a1
000000010003382d	jmp	0x1000338bd
0000000100033832	jne	0x1000337e0
0000000100033834	testq	%r9, %r9
0000000100033837	je	0x100033828
0000000100033839	movzbl	(%rax,%rdx), %r9d
000000010003383e	testb	%r9b, %r9b
0000000100033841	js	0x100033848
0000000100033843	movl	%r9d, %ecx
0000000100033846	jmp	0x10003389c
0000000100033848	movl	%r9d, %ecx
000000010003384b	andl	$0x1f, %ecx
000000010003384e	movzbl	0x1(%rax,%rdx), %r11d
0000000100033854	andl	$0x3f, %r11d
0000000100033858	cmpb	$-0x21, %r9b
000000010003385c	jbe	0x10003388e
000000010003385e	movzbl	0x2(%rax,%rdx), %r10d
0000000100033864	shll	$0x6, %r11d
0000000100033868	andl	$0x3f, %r10d
000000010003386c	orl	%r11d, %r10d
000000010003386f	cmpb	$-0x10, %r9b
0000000100033873	jb	0x100033896
0000000100033875	movzbl	0x3(%rax,%rdx), %eax
000000010003387a	andl	$0x7, %ecx
000000010003387d	shll	$0x12, %ecx
0000000100033880	shll	$0x6, %r10d
0000000100033884	andl	$0x3f, %eax
0000000100033887	orl	%r10d, %eax
000000010003388a	orl	%eax, %ecx
000000010003388c	jmp	0x10003389c
000000010003388e	shll	$0x6, %ecx
0000000100033891	orl	%r11d, %ecx
0000000100033894	jmp	0x10003389c
0000000100033896	shll	$0xc, %ecx
0000000100033899	orl	%r10d, %ecx
000000010003389c	testb	%r8b, %r8b
000000010003389f	je	0x1000338b5
00000001000338a1	movq	%rdx, 0x8(%rdi)
00000001000338a5	movq	%rdx, 0x10(%rdi)
00000001000338a9	movq	$0x0, (%rdi)
00000001000338b0	jmp	0x1000339ac
00000001000338b5	cmpl	$0x110000, %ecx                 ## imm = 0x110000
00000001000338bb	jne	0x1000338c6
00000001000338bd	movb	$0x1, 0x1a(%rsi)
00000001000338c1	jmp	0x1000337a8
00000001000338c6	movl	$0x1, %eax
00000001000338cb	cmpl	$0x80, %ecx
00000001000338d1	jb	0x1000338ef
00000001000338d3	movl	$0x2, %eax
00000001000338d8	cmpl	$0x800, %ecx                    ## imm = 0x800
00000001000338de	jb	0x1000338ef
00000001000338e0	cmpl	$0x10000, %ecx                  ## imm = 0x10000
00000001000338e6	movl	$0x4, %eax
00000001000338eb	sbbq	$0x0, %rax
00000001000338ef	addq	%rdx, %rax
00000001000338f2	movq	%rax, 0x8(%rsi)
00000001000338f6	jmp	0x10003399d
00000001000338fb	cmpq	%rax, -0x40(%rbp)
00000001000338ff	cmovaeq	%rax, %r8
0000000100033903	jmp	0x100033956
0000000100033905	movq	%rdx, 0x28(%rsi)
0000000100033909	nopl	(%rax)
0000000100033910	jmp	0x100033910
0000000100033912	leaq	0x15ed7(%rip), %rdx
0000000100033919	movq	%rcx, %rdi
000000010003391c	movq	%r9, %rsi
000000010003391f	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100033924	leaq	0x15edd(%rip), %rdx
000000010003392b	movq	%r8, %rdi
000000010003392e	movq	%rax, %rsi
0000000100033931	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100033936	addq	%rdx, %rcx
0000000100033939	cmpq	%rcx, %rax
000000010003393c	cmovaq	%rax, %rcx
0000000100033940	leaq	0x15ed9(%rip), %rdx
0000000100033947	movq	%rcx, %rdi
000000010003394a	movq	%rax, %rsi
000000010003394d	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100033952	movq	-0x38(%rbp), %r8
0000000100033956	testq	%r8, %r8
0000000100033959	je	0x100033988
000000010003395b	movq	%r8, %rcx
000000010003395e	movq	-0x48(%rbp), %rdi
0000000100033962	jmp	0x100033977
0000000100033964	nopw	%cs:(%rax,%rax)
000000010003396e	nop
0000000100033970	je	0x100033992
0000000100033972	incq	%rcx
0000000100033975	je	0x100033990
0000000100033977	cmpq	%rax, %rcx
000000010003397a	jae	0x100033970
000000010003397c	cmpb	$-0x40, (%r10,%rcx)
0000000100033981	jl	0x100033972
0000000100033983	movq	%rcx, %rax
0000000100033986	jmp	0x100033992
0000000100033988	xorl	%eax, %eax
000000010003398a	movq	-0x48(%rbp), %rdi
000000010003398e	jmp	0x100033992
0000000100033990	xorl	%eax, %eax
0000000100033992	cmpq	%r8, %rax
0000000100033995	cmovaq	%rax, %r8
0000000100033999	movq	%r8, 0x28(%rsi)
000000010003399d	movq	%rdx, 0x8(%rdi)
00000001000339a1	movq	%rax, 0x10(%rdi)
00000001000339a5	movq	$0x1, (%rdi)
00000001000339ac	addq	$0x48, %rsp
00000001000339b0	popq	%rbx
00000001000339b1	popq	%r12
00000001000339b3	popq	%r13
00000001000339b5	popq	%r14
00000001000339b7	popq	%r15
00000001000339b9	popq	%rbp
00000001000339ba	retq
00000001000339bb	nopl	(%rax,%rax)
__ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h2c0239fe17888bf8E:
00000001000339c0	pushq	%rbp
00000001000339c1	movq	%rsp, %rbp
00000001000339c4	subq	%rdi, %rsi
00000001000339c7	cmpq	$0x20, %rsi
00000001000339cb	jae	0x1000339d3
00000001000339cd	popq	%rbp
00000001000339ce	jmp	__ZN4core3str5count23char_count_general_case17hdca0746f7b103829E ## core::str::count::char_count_general_case::hdca0746f7b103829
00000001000339d3	popq	%rbp
00000001000339d4	jmp	__ZN4core3str5count14do_count_chars17h76e3cfb00548d338E ## core::str::count::do_count_chars::h76e3cfb00548d338
00000001000339d9	nopl	(%rax)
__ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17he73d148255917e64E:
00000001000339e0	pushq	%rbp
00000001000339e1	movq	%rsp, %rbp
00000001000339e4	pushq	%r15
00000001000339e6	pushq	%r14
00000001000339e8	pushq	%r13
00000001000339ea	pushq	%r12
00000001000339ec	pushq	%rbx
00000001000339ed	subq	$0x28, %rsp
00000001000339f1	movq	0x18(%rsi), %rbx
00000001000339f5	movq	0x10(%rsi), %r12
00000001000339f9	xorl	%eax, %eax
00000001000339fb	movq	%rbx, %rdx
00000001000339fe	subq	%r12, %rdx
0000000100033a01	jb	0x100033bd0
0000000100033a07	movq	%rsi, %r14
0000000100033a0a	movq	0x8(%rsi), %rcx
0000000100033a0e	movq	%rcx, -0x48(%rbp)
0000000100033a12	cmpq	%rcx, %rbx
0000000100033a15	ja	0x100033bd0
0000000100033a1b	movq	%rdi, -0x30(%rbp)
0000000100033a1f	movq	(%r14), %rax
0000000100033a22	movq	%rax, -0x38(%rbp)
0000000100033a26	leaq	(%rax,%r12), %rsi
0000000100033a2a	leaq	0x28(%r14), %rax
0000000100033a2e	movq	%rax, -0x40(%rbp)
0000000100033a32	movq	0x20(%r14), %r15
0000000100033a36	cmpq	$0x4, %r15
0000000100033a3a	jbe	0x100033b14
0000000100033a40	jmp	0x100033a64
0000000100033a42	nopw	%cs:(%rax,%rax)
0000000100033a4c	nopl	(%rax)
0000000100033a50	movq	-0x38(%rbp), %rax
0000000100033a54	leaq	(%rax,%r12), %rsi
0000000100033a58	movq	%rbx, %rdx
0000000100033a5b	subq	%r12, %rdx
0000000100033a5e	jb	0x100033bca
0000000100033a64	movq	-0x40(%rbp), %rax
0000000100033a68	movzbl	-0x1(%rax,%r15), %eax
0000000100033a6e	cmpq	$0x10, %rdx
0000000100033a72	jae	0x100033aa0
0000000100033a74	xorl	%ecx, %ecx
0000000100033a76	testq	%rdx, %rdx
0000000100033a79	je	0x100033a90
0000000100033a7b	nopl	(%rax,%rax)
0000000100033a80	cmpb	%al, (%rsi,%rcx)
0000000100033a83	je	0x100033ab6
0000000100033a85	incq	%rcx
0000000100033a88	cmpq	%rcx, %rdx
0000000100033a8b	jne	0x100033a80
0000000100033a8d	movq	%rdx, %rcx
0000000100033a90	xorl	%eax, %eax
0000000100033a92	cmpq	$0x1, %rax
0000000100033a96	je	0x100033ad0
0000000100033a98	jmp	0x100033bbe
0000000100033a9d	nopl	(%rax)
0000000100033aa0	movzbl	%al, %edi
0000000100033aa3	callq	__ZN4core5slice6memchr14memchr_aligned17hab88d30e96119121E ## core::slice::memchr::memchr_aligned::hab88d30e96119121
0000000100033aa8	movq	%rdx, %rcx
0000000100033aab	cmpq	$0x1, %rax
0000000100033aaf	je	0x100033ad0
0000000100033ab1	jmp	0x100033bbe
0000000100033ab6	movl	$0x1, %eax
0000000100033abb	cmpq	$0x1, %rax
0000000100033abf	jne	0x100033bbe
0000000100033ac5	nopw	%cs:(%rax,%rax)
0000000100033acf	nop
0000000100033ad0	leaq	0x1(%rcx,%r12), %r12
0000000100033ad5	movq	%r12, 0x10(%r14)
0000000100033ad9	cmpq	%r15, %r12
0000000100033adc	jb	0x100033a50
0000000100033ae2	cmpq	-0x48(%rbp), %r12
0000000100033ae6	ja	0x100033a50
0000000100033aec	leaq	0x15df5(%rip), %rdx
0000000100033af3	movl	$0x4, %esi
0000000100033af8	movq	%r15, %rdi
0000000100033afb	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100033b00	movq	-0x38(%rbp), %rax
0000000100033b04	leaq	(%rax,%r12), %rsi
0000000100033b08	movq	%rbx, %rdx
0000000100033b0b	subq	%r12, %rdx
0000000100033b0e	jb	0x100033bca
0000000100033b14	movq	-0x40(%rbp), %rax
0000000100033b18	movzbl	-0x1(%rax,%r15), %eax
0000000100033b1e	cmpq	$0x10, %rdx
0000000100033b22	jae	0x100033b50
0000000100033b24	xorl	%ecx, %ecx
0000000100033b26	testq	%rdx, %rdx
0000000100033b29	je	0x100033b40
0000000100033b2b	nopl	(%rax,%rax)
0000000100033b30	cmpb	%al, (%rsi,%rcx)
0000000100033b33	je	0x100033b63
0000000100033b35	incq	%rcx
0000000100033b38	cmpq	%rcx, %rdx
0000000100033b3b	jne	0x100033b30
0000000100033b3d	movq	%rdx, %rcx
0000000100033b40	xorl	%eax, %eax
0000000100033b42	cmpq	$0x1, %rax
0000000100033b46	je	0x100033b70
0000000100033b48	jmp	0x100033bbe
0000000100033b4a	nopw	(%rax,%rax)
0000000100033b50	movzbl	%al, %edi
0000000100033b53	callq	__ZN4core5slice6memchr14memchr_aligned17hab88d30e96119121E ## core::slice::memchr::memchr_aligned::hab88d30e96119121
0000000100033b58	movq	%rdx, %rcx
0000000100033b5b	cmpq	$0x1, %rax
0000000100033b5f	je	0x100033b70
0000000100033b61	jmp	0x100033bbe
0000000100033b63	movl	$0x1, %eax
0000000100033b68	cmpq	$0x1, %rax
0000000100033b6c	jne	0x100033bbe
0000000100033b6e	nop
0000000100033b70	leaq	0x1(%rcx,%r12), %r12
0000000100033b75	movq	%r12, 0x10(%r14)
0000000100033b79	movq	%r12, %r13
0000000100033b7c	subq	%r15, %r13
0000000100033b7f	jb	0x100033b00
0000000100033b85	cmpq	-0x48(%rbp), %r12
0000000100033b89	ja	0x100033b00
0000000100033b8f	movq	-0x38(%rbp), %rax
0000000100033b93	leaq	(%rax,%r13), %rdi
0000000100033b97	movq	-0x40(%rbp), %rsi
0000000100033b9b	movq	%r15, %rdx
0000000100033b9e	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100033ba3	testl	%eax, %eax
0000000100033ba5	jne	0x100033b00
0000000100033bab	movq	-0x30(%rbp), %rdi
0000000100033baf	movq	%r13, 0x8(%rdi)
0000000100033bb3	movq	%r12, 0x10(%rdi)
0000000100033bb7	movl	$0x1, %eax
0000000100033bbc	jmp	0x100033bd0
0000000100033bbe	movq	%rbx, 0x10(%r14)
0000000100033bc2	xorl	%eax, %eax
0000000100033bc4	movq	-0x30(%rbp), %rdi
0000000100033bc8	jmp	0x100033bd0
0000000100033bca	movq	-0x30(%rbp), %rdi
0000000100033bce	xorl	%eax, %eax
0000000100033bd0	movq	%rax, (%rdi)
0000000100033bd3	addq	$0x28, %rsp
0000000100033bd7	popq	%rbx
0000000100033bd8	popq	%r12
0000000100033bda	popq	%r13
0000000100033bdc	popq	%r14
0000000100033bde	popq	%r15
0000000100033be0	popq	%rbp
0000000100033be1	retq
0000000100033be2	nopw	%cs:(%rax,%rax)
0000000100033bec	nopl	(%rax)
__ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h30d14833b59da9e9E:
0000000100033bf0	pushq	%rbp
0000000100033bf1	movq	%rsp, %rbp
0000000100033bf4	pushq	%r15
0000000100033bf6	pushq	%r14
0000000100033bf8	pushq	%r13
0000000100033bfa	pushq	%r12
0000000100033bfc	pushq	%rbx
0000000100033bfd	subq	$0x88, %rsp
0000000100033c04	movq	%rsi, -0x30(%rbp)
0000000100033c08	movq	(%rdi), %r15
0000000100033c0b	movq	0x8(%rdi), %r14
0000000100033c0f	movq	0x10(%rdi), %rax
0000000100033c13	movq	%rax, -0x58(%rbp)
0000000100033c17	xorl	%eax, %eax
0000000100033c19	movq	%rax, -0x50(%rbp)
0000000100033c1d	jmp	0x100033c3f
0000000100033c1f	nop
0000000100033c20	movq	-0x30(%rbp), %rdi
0000000100033c24	movq	%r12, %rsi
0000000100033c27	movq	%r15, %rdx
0000000100033c2a	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100033c2f	testb	%al, %al
0000000100033c31	movq	-0x40(%rbp), %r14
0000000100033c35	movq	-0x38(%rbp), %r15
0000000100033c39	jne	0x1000345dc
0000000100033c3f	movq	-0x50(%rbp), %r9
0000000100033c43	cmpq	-0x58(%rbp), %r9
0000000100033c47	je	0x1000345e0
0000000100033c4d	testq	%r14, %r14
0000000100033c50	je	0x1000345fc
0000000100033c56	leaq	0x1(%r9), %r13
0000000100033c5a	xorl	%r12d, %r12d
0000000100033c5d	movq	%r14, %rbx
0000000100033c60	movzbl	(%r15,%r12), %eax
0000000100033c65	testb	%al, %al
0000000100033c67	jns	0x100033d10
0000000100033c6d	jmp	0x100033c95
0000000100033c6f	nop
0000000100033c70	cmpq	$0x1, %rbx
0000000100033c74	jbe	0x1000345f4
0000000100033c7a	cmpb	$-0x41, 0x1(%r15,%r12)
0000000100033c80	jle	0x100034614
0000000100033c86	decq	%rbx
0000000100033c89	incq	%r12
0000000100033c8c	movzbl	(%r15,%r12), %eax
0000000100033c91	testb	%al, %al
0000000100033c93	jns	0x100033d10
0000000100033c95	movl	%eax, %ecx
0000000100033c97	andl	$0x1f, %ecx
0000000100033c9a	movzbl	0x1(%r15,%r12), %edi
0000000100033ca0	andl	$0x3f, %edi
0000000100033ca3	cmpb	$-0x21, %al
0000000100033ca5	jbe	0x100033ce0
0000000100033ca7	movzbl	0x2(%r15,%r12), %edx
0000000100033cad	shll	$0x6, %edi
0000000100033cb0	andl	$0x3f, %edx
0000000100033cb3	orl	%edi, %edx
0000000100033cb5	cmpb	$-0x10, %al
0000000100033cb7	jb	0x100033cf0
0000000100033cb9	movzbl	0x3(%r15,%r12), %eax
0000000100033cbf	andl	$0x7, %ecx
0000000100033cc2	shll	$0x12, %ecx
0000000100033cc5	shll	$0x6, %edx
0000000100033cc8	andl	$0x3f, %eax
0000000100033ccb	orl	%edx, %eax
0000000100033ccd	orl	%ecx, %eax
0000000100033ccf	cmpl	$0x110000, %eax                 ## imm = 0x110000
0000000100033cd4	jne	0x100033d10
0000000100033cd6	jmp	0x1000345fc
0000000100033cdb	nopl	(%rax,%rax)
0000000100033ce0	shll	$0x6, %ecx
0000000100033ce3	orl	%edi, %ecx
0000000100033ce5	movl	%ecx, %eax
0000000100033ce7	jmp	0x100033d10
0000000100033ce9	nopl	(%rax)
0000000100033cf0	shll	$0xc, %ecx
0000000100033cf3	orl	%ecx, %edx
0000000100033cf5	movl	%edx, %eax
0000000100033cf7	addl	$-0x30, %eax
0000000100033cfa	cmpl	$0x9, %eax
0000000100033cfd	jbe	0x100033c70
0000000100033d03	jmp	0x100033d1c
0000000100033d05	nopw	%cs:(%rax,%rax)
0000000100033d0f	nop
0000000100033d10	addl	$-0x30, %eax
0000000100033d13	cmpl	$0x9, %eax
0000000100033d16	jbe	0x100033c70
0000000100033d1c	movq	%r9, -0x90(%rbp)
0000000100033d23	testq	%r12, %r12
0000000100033d26	je	0x100033d3c
0000000100033d28	cmpq	%rbx, %r14
0000000100033d2b	jb	0x100034631
0000000100033d31	cmpb	$-0x41, (%r15,%r12)
0000000100033d36	jle	0x100034631
0000000100033d3c	leaq	-0x88(%rbp), %rdi
0000000100033d43	movq	%r15, %rsi
0000000100033d46	movq	%r12, %rdx
0000000100033d49	callq	__ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$8from_str17h490d0f91aebd0fe9E ## core::num::_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$::from_str::h490d0f91aebd0fe9
0000000100033d4e	cmpb	$0x0, -0x88(%rbp)
0000000100033d55	jne	0x100034648
0000000100033d5b	leaq	(%r15,%r12), %rcx
0000000100033d5f	movq	-0x80(%rbp), %r9
0000000100033d63	testq	%r9, %r9
0000000100033d66	movq	%r14, %rax
0000000100033d69	movq	%r9, %r14
0000000100033d6c	movq	%r13, -0x50(%rbp)
0000000100033d70	movq	%rcx, -0x48(%rbp)
0000000100033d74	je	0x100033db0
0000000100033d76	subq	%r9, %rax
0000000100033d79	cmpq	%r9, %rbx
0000000100033d7c	jbe	0x100033dc0
0000000100033d7e	leaq	(%r15,%r9), %rcx
0000000100033d82	cmpb	$-0x41, (%r12,%rcx)
0000000100033d87	movl	$0xffffffff, %r13d              ## imm = 0xFFFFFFFF
0000000100033d8d	jle	0x1000346ca
0000000100033d93	cmpb	$-0x41, (%r12,%rcx)
0000000100033d98	jle	0x100034720
0000000100033d9e	subq	%r12, %rax
0000000100033da1	movq	%rax, -0x40(%rbp)
0000000100033da5	addq	%r12, %rcx
0000000100033da8	movq	%rcx, -0x38(%rbp)
0000000100033dac	jmp	0x100033de0
0000000100033dae	nop
0000000100033db0	movq	%rcx, -0x38(%rbp)
0000000100033db4	movq	%rbx, -0x40(%rbp)
0000000100033db8	movl	$0xffffffff, %r13d              ## imm = 0xFFFFFFFF
0000000100033dbe	jmp	0x100033de0
0000000100033dc0	cmpq	%r12, %rax
0000000100033dc3	movl	$0xffffffff, %r13d              ## imm = 0xFFFFFFFF
0000000100033dc9	jne	0x1000346ca
0000000100033dcf	leaq	(%r15,%r9), %rax
0000000100033dd3	addq	%r12, %rax
0000000100033dd6	movq	%rax, -0x38(%rbp)
0000000100033dda	xorl	%eax, %eax
0000000100033ddc	movq	%rax, -0x40(%rbp)
0000000100033de0	movq	-0x30(%rbp), %rdi
0000000100033de4	callq	__ZN4core3fmt9Formatter9alternate17hc2243bb2c4eca803E ## core::fmt::Formatter::alternate::hc2243bb2c4eca803
0000000100033de9	movq	%r14, %rcx
0000000100033dec	testq	%r14, %r14
0000000100033def	je	0x100033f30
0000000100033df5	testb	%al, %al
0000000100033df7	je	0x100033f30
0000000100033dfd	movq	-0x50(%rbp), %rax
0000000100033e01	cmpq	-0x58(%rbp), %rax
0000000100033e05	jne	0x100033f30
0000000100033e0b	movq	-0x48(%rbp), %rax
0000000100033e0f	cmpb	$0x68, (%rax)
0000000100033e12	jne	0x100033f30
0000000100033e18	cmpq	$0x2, %rcx
0000000100033e1c	jb	0x1000345e0
0000000100033e22	movzbl	0x1(%r15,%r12), %edx
0000000100033e28	cmpb	$-0x41, %dl
0000000100033e2b	jle	0x10003473a
0000000100033e31	leaq	0x1(%r15,%r12), %rax
0000000100033e36	leaq	(%r15,%rcx), %r9
0000000100033e3a	addq	%r12, %r9
0000000100033e3d	testb	%dl, %dl
0000000100033e3f	jns	0x100033ef0
0000000100033e45	nopw	%cs:(%rax,%rax)
0000000100033e4f	nop
0000000100033e50	movl	%edx, %esi
0000000100033e52	andb	$0x1f, %sil
0000000100033e56	movzbl	%sil, %esi
0000000100033e5a	movzbl	0x1(%rax), %r8d
0000000100033e5f	andl	$0x3f, %r8d
0000000100033e63	cmpb	$-0x21, %dl
0000000100033e66	jbe	0x100033eb0
0000000100033e68	movzbl	0x2(%rax), %edi
0000000100033e6c	shll	$0x6, %r8d
0000000100033e70	andl	$0x3f, %edi
0000000100033e73	orl	%r8d, %edi
0000000100033e76	cmpb	$-0x10, %dl
0000000100033e79	jb	0x100033ed0
0000000100033e7b	movzbl	0x3(%rax), %edx
0000000100033e7f	andl	$0x7, %esi
0000000100033e82	shll	$0x12, %esi
0000000100033e85	shll	$0x6, %edi
0000000100033e88	andl	$0x3f, %edx
0000000100033e8b	orl	%edi, %edx
0000000100033e8d	orl	%esi, %edx
0000000100033e8f	cmpl	$0x110000, %edx                 ## imm = 0x110000
0000000100033e95	je	0x1000345e0
0000000100033e9b	addq	$0x4, %rax
0000000100033e9f	leal	-0x30(%rdx), %esi
0000000100033ea2	cmpl	$0xa, %esi
0000000100033ea5	jae	0x100033efe
0000000100033ea7	jmp	0x100033f10
0000000100033ea9	nopl	(%rax)
0000000100033eb0	addq	$0x2, %rax
0000000100033eb4	shll	$0x6, %esi
0000000100033eb7	orl	%r8d, %esi
0000000100033eba	movl	%esi, %edx
0000000100033ebc	leal	-0x30(%rdx), %esi
0000000100033ebf	cmpl	$0xa, %esi
0000000100033ec2	jae	0x100033efe
0000000100033ec4	jmp	0x100033f10
0000000100033ec6	nopw	%cs:(%rax,%rax)
0000000100033ed0	addq	$0x3, %rax
0000000100033ed4	shll	$0xc, %esi
0000000100033ed7	orl	%esi, %edi
0000000100033ed9	movl	%edi, %edx
0000000100033edb	leal	-0x30(%rdx), %esi
0000000100033ede	cmpl	$0xa, %esi
0000000100033ee1	jb	0x100033f10
0000000100033ee3	jmp	0x100033efe
0000000100033ee5	nopw	%cs:(%rax,%rax)
0000000100033eef	nop
0000000100033ef0	incq	%rax
0000000100033ef3	movzbl	%dl, %edx
0000000100033ef6	leal	-0x30(%rdx), %esi
0000000100033ef9	cmpl	$0xa, %esi
0000000100033efc	jb	0x100033f10
0000000100033efe	orl	$0x20, %edx
0000000100033f01	addl	$-0x61, %edx
0000000100033f04	addl	$0xa, %edx
0000000100033f07	cmovbl	%r13d, %edx
0000000100033f0b	cmpl	$0xf, %edx
0000000100033f0e	ja	0x100033f30
0000000100033f10	cmpq	%rax, %r9
0000000100033f13	je	0x1000345e0
0000000100033f19	movzbl	(%rax), %edx
0000000100033f1c	testb	%dl, %dl
0000000100033f1e	jns	0x100033ef0
0000000100033f20	jmp	0x100033e50
0000000100033f25	nopw	%cs:(%rax,%rax)
0000000100033f2f	nop
0000000100033f30	cmpq	$0x0, -0x90(%rbp)
0000000100033f38	je	0x100033f5a
0000000100033f3a	movl	$0x2, %edx
0000000100033f3f	movq	-0x30(%rbp), %rdi
0000000100033f43	leaq	0x12239(%rip), %rsi
0000000100033f4a	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100033f4f	movq	%r14, %rcx
0000000100033f52	testb	%al, %al
0000000100033f54	jne	0x1000345dc
0000000100033f5a	cmpq	$0x2, %rcx
0000000100033f5e	jae	0x100033f70
0000000100033f60	movq	-0x48(%rbp), %r14
0000000100033f64	jmp	0x100033fb5
0000000100033f66	nopw	%cs:(%rax,%rax)
0000000100033f70	movq	-0x48(%rbp), %r14
0000000100033f74	movzwl	(%r14), %eax
0000000100033f78	cmpl	$0x245f, %eax                   ## imm = 0x245F
0000000100033f7d	jne	0x100033fb5
0000000100033f7f	cmpb	$-0x41, 0x1(%r15,%r12)
0000000100033f85	jle	0x100034746
0000000100033f8b	leaq	0x1(%r15,%r12), %r14
0000000100033f90	decq	%rcx
0000000100033f93	jmp	0x100033fb5
0000000100033f95	movq	-0x30(%rbp), %rdi
0000000100033f99	movq	%r12, %rsi
0000000100033f9c	movq	%rbx, %rdx
0000000100033f9f	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100033fa4	movq	%r15, %rcx
0000000100033fa7	testb	%al, %al
0000000100033fa9	jne	0x1000345dc
0000000100033faf	addq	%rbx, %r12
0000000100033fb2	movq	%r12, %r14
0000000100033fb5	movq	%r14, %r12
0000000100033fb8	movq	%rcx, %r15
0000000100033fbb	testq	%rcx, %rcx
0000000100033fbe	je	0x100034050
0000000100033fc4	movzbl	(%r12), %eax
0000000100033fc9	cmpl	$0x24, %eax
0000000100033fcc	je	0x100034140
0000000100033fd2	cmpl	$0x2e, %eax
0000000100033fd5	jne	0x100034050
0000000100033fd7	leaq	0x1(%r12), %r14
0000000100033fdc	cmpq	$0x2, %r15
0000000100033fe0	jb	0x10003419a
0000000100033fe6	cmpb	$-0x41, (%r14)
0000000100033fea	jle	0x1000346fd
0000000100033ff0	movzbl	0x1(%r12), %ecx
0000000100033ff6	testb	%cl, %cl
0000000100033ff8	js	0x10003436d
0000000100033ffe	movl	%ecx, %eax
0000000100034000	cmpl	$0x2e, %eax
0000000100034003	jne	0x1000343d4
0000000100034009	movl	$0x2, %edx
000000010003400e	movq	-0x30(%rbp), %rdi
0000000100034012	leaq	0x1216a(%rip), %rsi
0000000100034019	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
000000010003401e	testb	%al, %al
0000000100034020	jne	0x1000345dc
0000000100034026	cmpq	$0x3, %r15
000000010003402a	jb	0x1000343b8
0000000100034030	cmpb	$-0x41, 0x2(%r12)
0000000100034036	jle	0x100034760
000000010003403c	addq	$-0x2, %r15
0000000100034040	movq	%r15, %rcx
0000000100034043	jmp	0x1000343ba
0000000100034048	nopl	(%rax,%rax)
0000000100034050	leaq	(%r12,%r15), %rax
0000000100034054	xorl	%esi, %esi
0000000100034056	movq	%r12, %rcx
0000000100034059	jmp	0x100034082
000000010003405b	nopl	(%rax,%rax)
0000000100034060	leaq	0x1(%rcx), %rdi
0000000100034064	cmpl	$0x24, %edx
0000000100034067	je	0x100034120
000000010003406d	movq	%rbx, %rsi
0000000100034070	subq	%rcx, %rsi
0000000100034073	addq	%rdi, %rsi
0000000100034076	movq	%rdi, %rcx
0000000100034079	cmpl	$0x2e, %edx
000000010003407c	je	0x100034120
0000000100034082	cmpq	%rax, %rcx
0000000100034085	je	0x100033c20
000000010003408b	movq	%rsi, %rbx
000000010003408e	movzbl	(%rcx), %edx
0000000100034091	testb	%dl, %dl
0000000100034093	jns	0x100034060
0000000100034095	movl	%edx, %esi
0000000100034097	andl	$0x1f, %esi
000000010003409a	movzbl	0x1(%rcx), %r9d
000000010003409f	andl	$0x3f, %r9d
00000001000340a3	cmpb	$-0x21, %dl
00000001000340a6	jbe	0x1000340ea
00000001000340a8	movzbl	0x2(%rcx), %r8d
00000001000340ad	shll	$0x6, %r9d
00000001000340b1	andl	$0x3f, %r8d
00000001000340b5	orl	%r9d, %r8d
00000001000340b8	cmpb	$-0x10, %dl
00000001000340bb	jb	0x100034101
00000001000340bd	movzbl	0x3(%rcx), %edx
00000001000340c1	andl	$0x7, %esi
00000001000340c4	shll	$0x12, %esi
00000001000340c7	shll	$0x6, %r8d
00000001000340cb	andl	$0x3f, %edx
00000001000340ce	orl	%r8d, %edx
00000001000340d1	orl	%esi, %edx
00000001000340d3	cmpl	$0x110000, %edx                 ## imm = 0x110000
00000001000340d9	je	0x100033c20
00000001000340df	leaq	0x4(%rcx), %rdi
00000001000340e3	cmpl	$0x24, %edx
00000001000340e6	jne	0x10003406d
00000001000340e8	jmp	0x100034120
00000001000340ea	leaq	0x2(%rcx), %rdi
00000001000340ee	shll	$0x6, %esi
00000001000340f1	orl	%r9d, %esi
00000001000340f4	movl	%esi, %edx
00000001000340f6	cmpl	$0x24, %edx
00000001000340f9	jne	0x10003406d
00000001000340ff	jmp	0x100034120
0000000100034101	leaq	0x3(%rcx), %rdi
0000000100034105	shll	$0xc, %esi
0000000100034108	orl	%esi, %r8d
000000010003410b	movl	%r8d, %edx
000000010003410e	cmpl	$0x24, %edx
0000000100034111	jne	0x10003406d
0000000100034117	nopw	(%rax,%rax)
0000000100034120	testq	%rbx, %rbx
0000000100034123	je	0x100033f95
0000000100034129	cmpq	%rbx, %r15
000000010003412c	jbe	0x100034158
000000010003412e	cmpb	$-0x41, (%r12,%rbx)
0000000100034133	jg	0x10003415e
0000000100034135	jmp	0x100034692
000000010003413a	nopw	(%rax,%rax)
0000000100034140	cmpq	$0x2, %r15
0000000100034144	jb	0x1000341c1
0000000100034146	cmpb	$-0x41, 0x1(%r12)
000000010003414c	jle	0x100034706
0000000100034152	leaq	-0x1(%r15), %rax
0000000100034156	jmp	0x1000341c3
0000000100034158	jne	0x100034692
000000010003415e	movq	-0x30(%rbp), %rdi
0000000100034162	movq	%r12, %rsi
0000000100034165	movq	%rbx, %rdx
0000000100034168	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
000000010003416d	testb	%al, %al
000000010003416f	jne	0x1000345dc
0000000100034175	testq	%rbx, %rbx
0000000100034178	je	0x10003435a
000000010003417e	movq	%r15, %rcx
0000000100034181	subq	%rbx, %rcx
0000000100034184	jbe	0x100034362
000000010003418a	cmpb	$-0x41, (%r12,%rbx)
000000010003418f	jg	0x100033faf
0000000100034195	jmp	0x1000346e5
000000010003419a	movl	$0x1, %edx
000000010003419f	movq	-0x30(%rbp), %rdi
00000001000341a3	leaq	0x11fe5(%rip), %rsi
00000001000341aa	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
00000001000341af	movl	$0x0, %ecx
00000001000341b4	testb	%al, %al
00000001000341b6	je	0x100033fb5
00000001000341bc	jmp	0x1000345dc
00000001000341c1	xorl	%eax, %eax
00000001000341c3	leaq	0x1(%r12), %rbx
00000001000341c8	movq	%rbx, -0x88(%rbp)
00000001000341cf	movq	%rax, -0x80(%rbp)
00000001000341d3	movq	$0x0, -0x78(%rbp)
00000001000341db	movq	%rax, -0x70(%rbp)
00000001000341df	movq	$0x1, -0x68(%rbp)
00000001000341e7	movabsq	$0x2400000024, %rax             ## imm = 0x2400000024
00000001000341f1	movq	%rax, -0x60(%rbp)
00000001000341f5	leaq	-0xa8(%rbp), %rdi
00000001000341fc	leaq	-0x88(%rbp), %rsi
0000000100034203	callq	__ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17he73d148255917e64E ## _$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$::next_match::he73d148255917e64
0000000100034208	cmpq	$0x0, -0xa8(%rbp)
0000000100034210	je	0x100033c20
0000000100034216	movq	-0xa0(%rbp), %rsi
000000010003421d	cmpq	$-0x1, %rsi
0000000100034221	je	0x1000346a9
0000000100034227	leaq	0x1(%rsi), %rcx
000000010003422b	cmpq	$0x2, %r15
000000010003422f	jb	0x10003423a
0000000100034231	cmpb	$-0x40, (%rbx)
0000000100034234	jl	0x10003467b
000000010003423a	cmpq	%r15, %rcx
000000010003423d	jae	0x100034250
000000010003423f	cmpb	$-0x40, (%r12,%rcx)
0000000100034244	jl	0x10003467b
000000010003424a	leaq	0x2(%rsi), %rdx
000000010003424e	jmp	0x100034263
0000000100034250	jne	0x10003467b
0000000100034256	movq	%rsi, %rdx
0000000100034259	addq	$0x2, %rdx
000000010003425d	je	0x100034445
0000000100034263	movq	%r15, %rax
0000000100034266	subq	%rdx, %rax
0000000100034269	jbe	0x10003427b
000000010003426b	cmpb	$-0x41, (%r12,%rdx)
0000000100034270	jle	0x1000346b5
0000000100034276	movq	%rdx, %r14
0000000100034279	jmp	0x100034284
000000010003427b	movq	%r15, %r14
000000010003427e	jne	0x1000346b5
0000000100034284	addq	%r12, %r14
0000000100034287	movq	%rax, %r13
000000010003428a	cmpq	$0x1, %rsi
000000010003428e	je	0x10003432c
0000000100034294	cmpq	$0x2, %rsi
0000000100034298	jne	0x100034428
000000010003429e	movzwl	(%rbx), %eax
00000001000342a1	leaq	0x11ee6(%rip), %rsi
00000001000342a8	cmpl	$0x5053, %eax                   ## imm = 0x5053
00000001000342ad	je	0x10003433c
00000001000342b3	movzwl	(%rbx), %eax
00000001000342b6	leaq	0x11ed0(%rip), %rsi
00000001000342bd	cmpl	$0x5042, %eax                   ## imm = 0x5042
00000001000342c2	je	0x10003433c
00000001000342c4	movzwl	(%rbx), %eax
00000001000342c7	leaq	0x11ebe(%rip), %rsi
00000001000342ce	cmpl	$0x4652, %eax                   ## imm = 0x4652
00000001000342d3	je	0x10003433c
00000001000342d5	movzwl	(%rbx), %eax
00000001000342d8	leaq	0x11eac(%rip), %rsi
00000001000342df	cmpl	$0x544c, %eax                   ## imm = 0x544C
00000001000342e4	je	0x10003433c
00000001000342e6	movzwl	(%rbx), %eax
00000001000342e9	leaq	0x11e9a(%rip), %rsi
00000001000342f0	cmpl	$0x5447, %eax                   ## imm = 0x5447
00000001000342f5	je	0x10003433c
00000001000342f7	movzwl	(%rbx), %eax
00000001000342fa	leaq	0x11e88(%rip), %rsi
0000000100034301	cmpl	$0x504c, %eax                   ## imm = 0x504C
0000000100034306	je	0x10003433c
0000000100034308	movzwl	(%rbx), %eax
000000010003430b	leaq	0x11e76(%rip), %rsi
0000000100034312	cmpl	$0x5052, %eax                   ## imm = 0x5052
0000000100034317	je	0x10003433c
0000000100034319	movl	$0x2, %esi
000000010003431e	cmpb	$0x75, (%rbx)
0000000100034321	je	0x10003445b
0000000100034327	jmp	0x100033c20
000000010003432c	cmpb	$0x43, (%rbx)
000000010003432f	leaq	0x11e51(%rip), %rsi
0000000100034336	jne	0x10003446c
000000010003433c	movl	$0x1, %edx
0000000100034341	movq	-0x30(%rbp), %rdi
0000000100034345	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
000000010003434a	testb	%al, %al
000000010003434c	movq	%r13, %rcx
000000010003434f	je	0x100033fb5
0000000100034355	jmp	0x1000345dc
000000010003435a	movq	%r15, %rcx
000000010003435d	jmp	0x100033faf
0000000100034362	je	0x100033faf
0000000100034368	jmp	0x1000346e5
000000010003436d	movl	%ecx, %eax
000000010003436f	andl	$0x1f, %eax
0000000100034372	movzbl	0x2(%r12), %esi
0000000100034378	andl	$0x3f, %esi
000000010003437b	cmpb	$-0x21, %cl
000000010003437e	jbe	0x1000343c6
0000000100034380	movzbl	0x3(%r12), %edx
0000000100034386	shll	$0x6, %esi
0000000100034389	andl	$0x3f, %edx
000000010003438c	orl	%esi, %edx
000000010003438e	cmpb	$-0x10, %cl
0000000100034391	jb	0x100034418
0000000100034397	movzbl	0x4(%r12), %ecx
000000010003439d	andl	$0x7, %eax
00000001000343a0	shll	$0x12, %eax
00000001000343a3	shll	$0x6, %edx
00000001000343a6	andl	$0x3f, %ecx
00000001000343a9	orl	%edx, %ecx
00000001000343ab	orl	%ecx, %eax
00000001000343ad	cmpl	$0x2e, %eax
00000001000343b0	je	0x100034009
00000001000343b6	jmp	0x1000343d4
00000001000343b8	xorl	%ecx, %ecx
00000001000343ba	addq	$0x2, %r12
00000001000343be	movq	%r12, %r14
00000001000343c1	jmp	0x100033fb5
00000001000343c6	shll	$0x6, %eax
00000001000343c9	orl	%esi, %eax
00000001000343cb	cmpl	$0x2e, %eax
00000001000343ce	je	0x100034009
00000001000343d4	movl	$0x1, %edx
00000001000343d9	movq	-0x30(%rbp), %rdi
00000001000343dd	leaq	0x11dab(%rip), %rsi
00000001000343e4	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
00000001000343e9	testb	%al, %al
00000001000343eb	jne	0x1000345dc
00000001000343f1	leaq	0x1(%r12), %r14
00000001000343f6	movl	$0x0, %ecx
00000001000343fb	cmpq	$0x2, %r15
00000001000343ff	jb	0x100033fb5
0000000100034405	leaq	-0x1(%r15), %rcx
0000000100034409	cmpb	$-0x41, (%r14)
000000010003440d	jg	0x100033fb5
0000000100034413	jmp	0x10003477a
0000000100034418	shll	$0xc, %eax
000000010003441b	orl	%edx, %eax
000000010003441d	cmpl	$0x2e, %eax
0000000100034420	je	0x100034009
0000000100034426	jmp	0x1000343d4
0000000100034428	testq	%rsi, %rsi
000000010003442b	je	0x100033c20
0000000100034431	cmpb	$0x75, (%rbx)
0000000100034434	jne	0x100033c20
000000010003443a	cmpq	$0x2, %rsi
000000010003443e	jae	0x10003445b
0000000100034440	jmp	0x100034783
0000000100034445	movq	$-0x2, %rsi
000000010003444c	cmpb	$0x75, (%rbx)
000000010003444f	movq	%r12, %r14
0000000100034452	movq	%r15, %r13
0000000100034455	jne	0x100033c20
000000010003445b	cmpb	$-0x41, 0x2(%r12)
0000000100034461	jle	0x100034788
0000000100034467	decq	%rsi
000000010003446a	jmp	0x100034477
000000010003446c	cmpb	$0x75, (%rbx)
000000010003446f	jne	0x100033c20
0000000100034475	xorl	%esi, %esi
0000000100034477	leaq	0x2(%r12), %rdi
000000010003447c	leaq	0x2(%r12,%rsi), %rax
0000000100034481	movq	%rdi, %rcx
0000000100034484	jmp	0x1000344ac
0000000100034486	addq	$0x2, %rcx
000000010003448a	shll	$0x6, %r8d
000000010003448e	orl	%r10d, %r8d
0000000100034491	movl	%r8d, %edx
0000000100034494	leal	-0x30(%rdx), %r8d
0000000100034498	cmpl	$0xa, %r8d
000000010003449c	jb	0x1000344ac
000000010003449e	nop
00000001000344a0	addl	$-0x61, %edx
00000001000344a3	cmpl	$0x6, %edx
00000001000344a6	jae	0x100034568
00000001000344ac	cmpq	%rax, %rcx
00000001000344af	je	0x100034553
00000001000344b5	movzbl	(%rcx), %edx
00000001000344b8	testb	%dl, %dl
00000001000344ba	js	0x1000344d0
00000001000344bc	incq	%rcx
00000001000344bf	leal	-0x30(%rdx), %r8d
00000001000344c3	cmpl	$0xa, %r8d
00000001000344c7	jae	0x1000344a0
00000001000344c9	jmp	0x1000344ac
00000001000344cb	nopl	(%rax,%rax)
00000001000344d0	movl	%edx, %r8d
00000001000344d3	andl	$0x1f, %r8d
00000001000344d7	movzbl	0x1(%rcx), %r10d
00000001000344dc	andl	$0x3f, %r10d
00000001000344e0	cmpb	$-0x21, %dl
00000001000344e3	jbe	0x100034486
00000001000344e5	movzbl	0x2(%rcx), %r9d
00000001000344ea	shll	$0x6, %r10d
00000001000344ee	andl	$0x3f, %r9d
00000001000344f2	orl	%r10d, %r9d
00000001000344f5	cmpb	$-0x10, %dl
00000001000344f8	jb	0x100034532
00000001000344fa	movzbl	0x3(%rcx), %edx
00000001000344fe	andl	$0x7, %r8d
0000000100034502	shll	$0x12, %r8d
0000000100034506	shll	$0x6, %r9d
000000010003450a	andl	$0x3f, %edx
000000010003450d	orl	%r9d, %edx
0000000100034510	orl	%r8d, %edx
0000000100034513	cmpl	$0x110000, %edx                 ## imm = 0x110000
0000000100034519	je	0x100034553
000000010003451b	addq	$0x4, %rcx
000000010003451f	leal	-0x30(%rdx), %r8d
0000000100034523	cmpl	$0xa, %r8d
0000000100034527	jae	0x1000344a0
000000010003452d	jmp	0x1000344ac
0000000100034532	addq	$0x3, %rcx
0000000100034536	shll	$0xc, %r8d
000000010003453a	orl	%r8d, %r9d
000000010003453d	movl	%r9d, %edx
0000000100034540	leal	-0x30(%rdx), %r8d
0000000100034544	cmpl	$0xa, %r8d
0000000100034548	jae	0x1000344a0
000000010003454e	jmp	0x1000344ac
0000000100034553	xorl	%ebx, %ebx
0000000100034555	movl	$0x10, %edx
000000010003455a	callq	__ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17h1ca489ae38ff676fE ## core::num::_$LT$impl$u20$u32$GT$::from_str_radix::h1ca489ae38ff676f
000000010003455f	testb	$0x1, %al
0000000100034561	je	0x10003457c
0000000100034563	jmp	0x100033c20
0000000100034568	movb	$0x1, %bl
000000010003456a	movl	$0x10, %edx
000000010003456f	callq	__ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17h1ca489ae38ff676fE ## core::num::_$LT$impl$u20$u32$GT$::from_str_radix::h1ca489ae38ff676f
0000000100034574	testb	$0x1, %al
0000000100034576	jne	0x100033c20
000000010003457c	shrq	$0x20, %rax
0000000100034580	movl	%eax, %ecx
0000000100034582	xorl	$0xd800, %ecx                   ## imm = 0xD800
0000000100034588	addl	$0xffef0000, %ecx               ## imm = 0xFFEF0000
000000010003458e	cmpl	$0xffef0800, %ecx               ## imm = 0xFFEF0800
0000000100034594	movl	$0x110000, %ecx                 ## imm = 0x110000
0000000100034599	cmovbl	%ecx, %eax
000000010003459c	cmpl	$0x110000, %eax                 ## imm = 0x110000
00000001000345a1	sete	%cl
00000001000345a4	orb	%cl, %bl
00000001000345a6	jne	0x100033c20
00000001000345ac	movl	%eax, -0x88(%rbp)
00000001000345b2	movl	%eax, %edi
00000001000345b4	callq	__ZN4core7unicode12unicode_data2cc6lookup17h574e3bd0e2ec9e2cE ## core::unicode::unicode_data::cc::lookup::h574e3bd0e2ec9e2c
00000001000345b9	testb	%al, %al
00000001000345bb	jne	0x100033c20
00000001000345c1	leaq	-0x88(%rbp), %rdi
00000001000345c8	movq	-0x30(%rbp), %rsi
00000001000345cc	callq	__ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h58c8d2487b4b288dE ## _$LT$char$u20$as$u20$core..fmt..Display$GT$::fmt::h58c8d2487b4b288d
00000001000345d1	testb	%al, %al
00000001000345d3	movq	%r13, %rcx
00000001000345d6	je	0x100033fb5
00000001000345dc	movb	$0x1, %al
00000001000345de	jmp	0x1000345e2
00000001000345e0	xorl	%eax, %eax
00000001000345e2	addq	$0x88, %rsp
00000001000345e9	popq	%rbx
00000001000345ea	popq	%r12
00000001000345ec	popq	%r13
00000001000345ee	popq	%r14
00000001000345f0	popq	%r15
00000001000345f2	popq	%rbp
00000001000345f3	retq
00000001000345f4	decq	%r14
00000001000345f7	cmpq	%r12, %r14
00000001000345fa	jne	0x100034614
00000001000345fc	leaq	0x11b55(%rip), %rdi
0000000100034603	leaq	0x15356(%rip), %rdx
000000010003460a	movl	$0x2b, %esi
000000010003460f	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100034614	addq	%r12, %r15
0000000100034617	leaq	0x1535a(%rip), %r8
000000010003461e	movl	$0x1, %edx
0000000100034623	movq	%r15, %rdi
0000000100034626	movq	%rbx, %rsi
0000000100034629	movq	%rbx, %rcx
000000010003462c	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100034631	leaq	0x15358(%rip), %r8
0000000100034638	movq	%r15, %rdi
000000010003463b	movq	%r14, %rsi
000000010003463e	xorl	%edx, %edx
0000000100034640	movq	%r12, %rcx
0000000100034643	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100034648	movzbl	-0x87(%rbp), %eax
000000010003464f	movb	%al, -0xa8(%rbp)
0000000100034655	leaq	0x11a66(%rip), %rdi
000000010003465c	leaq	0x1522d(%rip), %rcx
0000000100034663	leaq	0x1533e(%rip), %r8
000000010003466a	leaq	-0xa8(%rbp), %rdx
0000000100034671	movl	$0x2b, %esi
0000000100034676	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
000000010003467b	leaq	0x153ce(%rip), %r8
0000000100034682	movl	$0x1, %edx
0000000100034687	movq	%r12, %rdi
000000010003468a	movq	%r15, %rsi
000000010003468d	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100034692	leaq	0x1536f(%rip), %r8
0000000100034699	movq	%r12, %rdi
000000010003469c	movq	%r15, %rsi
000000010003469f	xorl	%edx, %edx
00000001000346a1	movq	%rbx, %rcx
00000001000346a4	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000346a9	leaq	0x153a0(%rip), %rdi
00000001000346b0	callq	__ZN4core3str6traits23str_index_overflow_fail17h0ab2fb2261e54947E ## core::str::traits::str_index_overflow_fail::h0ab2fb2261e54947
00000001000346b5	leaq	0x153ac(%rip), %r8
00000001000346bc	movq	%r12, %rdi
00000001000346bf	movq	%r15, %rsi
00000001000346c2	movq	%r15, %rcx
00000001000346c5	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000346ca	addq	%r12, %r15
00000001000346cd	leaq	0x152ec(%rip), %r8
00000001000346d4	movq	%r15, %rdi
00000001000346d7	movq	%rbx, %rsi
00000001000346da	movq	%r9, %rdx
00000001000346dd	movq	%rbx, %rcx
00000001000346e0	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000346e5	leaq	0x15334(%rip), %r8
00000001000346ec	movq	%r12, %rdi
00000001000346ef	movq	%r15, %rsi
00000001000346f2	movq	%rbx, %rdx
00000001000346f5	movq	%r15, %rcx
00000001000346f8	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000346fd	leaq	0x15394(%rip), %r8
0000000100034704	jmp	0x10003470d
0000000100034706	leaq	0x1532b(%rip), %r8
000000010003470d	movl	$0x1, %edx
0000000100034712	movq	%r12, %rdi
0000000100034715	movq	%r15, %rsi
0000000100034718	movq	%r15, %rcx
000000010003471b	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100034720	addq	%r12, %r15
0000000100034723	leaq	0x152ae(%rip), %r8
000000010003472a	movq	%r15, %rdi
000000010003472d	movq	%rbx, %rsi
0000000100034730	xorl	%edx, %edx
0000000100034732	movq	%r9, %rcx
0000000100034735	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003473a	addq	%r12, %r15
000000010003473d	leaq	0x15204(%rip), %r8
0000000100034744	jmp	0x100034750
0000000100034746	addq	%r12, %r15
0000000100034749	leaq	0x152a0(%rip), %r8
0000000100034750	movl	$0x1, %edx
0000000100034755	movq	%r15, %rdi
0000000100034758	movq	%rcx, %rsi
000000010003475b	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100034760	leaq	0x15349(%rip), %r8
0000000100034767	movl	$0x2, %edx
000000010003476c	movq	%r12, %rdi
000000010003476f	movq	%r15, %rsi
0000000100034772	movq	%r15, %rcx
0000000100034775	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003477a	leaq	0x15347(%rip), %r8
0000000100034781	jmp	0x10003470d
0000000100034783	movl	$0x1, %esi
0000000100034788	leaq	0x152f1(%rip), %r8
000000010003478f	movl	$0x1, %edx
0000000100034794	movq	%rbx, %rdi
0000000100034797	movq	%rsi, %rcx
000000010003479a	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003479f	nop
__ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17he10953cd55b64102E:
00000001000347a0	pushq	%rbp
00000001000347a1	movq	%rsp, %rbp
00000001000347a4	pushq	%r15
00000001000347a6	pushq	%r14
00000001000347a8	pushq	%r13
00000001000347aa	pushq	%r12
00000001000347ac	pushq	%rbx
00000001000347ad	subq	$0x278, %rsp                    ## imm = 0x278
00000001000347b4	movq	%rsi, %rbx
00000001000347b7	movq	%rdi, %r13
00000001000347ba	leaq	-0x298(%rbp), %rdi
00000001000347c1	movl	$0x200, %esi                    ## imm = 0x200
00000001000347c6	callq	0x100042748                     ## symbol stub for: ___bzero
00000001000347cb	movq	0x18(%r13), %rcx
00000001000347cf	movq	%rcx, %rax
00000001000347d2	movq	%rcx, -0x78(%rbp)
00000001000347d6	testq	%rcx, %rcx
00000001000347d9	je	0x1000348e6
00000001000347df	movq	%rbx, -0x68(%rbp)
00000001000347e3	movq	0x10(%r13), %rax
00000001000347e7	movq	%rax, -0x60(%rbp)
00000001000347eb	movzbl	(%rax), %r10d
00000001000347ef	movq	(%r13), %rcx
00000001000347f3	movq	0x8(%r13), %rax
00000001000347f7	testq	%rax, %rax
00000001000347fa	movq	%rcx, -0x90(%rbp)
0000000100034801	movq	%rax, -0x98(%rbp)
0000000100034808	je	0x100034907
000000010003480e	addq	%rcx, %rax
0000000100034811	xorl	%r11d, %r11d
0000000100034814	nopw	%cs:(%rax,%rax)
000000010003481e	nop
0000000100034820	movzbl	(%rcx), %edx
0000000100034823	testb	%dl, %dl
0000000100034825	js	0x100034840
0000000100034827	incq	%rcx
000000010003482a	cmpq	$0x80, %r11
0000000100034831	jne	0x1000348d0
0000000100034837	jmp	0x100034c6e
000000010003483c	nopl	(%rax)
0000000100034840	movl	%edx, %esi
0000000100034842	andl	$0x1f, %esi
0000000100034845	movzbl	0x1(%rcx), %r8d
000000010003484a	andl	$0x3f, %r8d
000000010003484e	cmpb	$-0x21, %dl
0000000100034851	jbe	0x100034898
0000000100034853	movzbl	0x2(%rcx), %edi
0000000100034857	shll	$0x6, %r8d
000000010003485b	andl	$0x3f, %edi
000000010003485e	orl	%r8d, %edi
0000000100034861	cmpb	$-0x10, %dl
0000000100034864	jb	0x1000348b2
0000000100034866	movzbl	0x3(%rcx), %edx
000000010003486a	andl	$0x7, %esi
000000010003486d	shll	$0x12, %esi
0000000100034870	shll	$0x6, %edi
0000000100034873	andl	$0x3f, %edx
0000000100034876	orl	%edi, %edx
0000000100034878	orl	%esi, %edx
000000010003487a	cmpl	$0x110000, %edx                 ## imm = 0x110000
0000000100034880	je	0x10003490a
0000000100034886	addq	$0x4, %rcx
000000010003488a	cmpq	$0x80, %r11
0000000100034891	jne	0x1000348d0
0000000100034893	jmp	0x100034c6e
0000000100034898	addq	$0x2, %rcx
000000010003489c	shll	$0x6, %esi
000000010003489f	orl	%r8d, %esi
00000001000348a2	movl	%esi, %edx
00000001000348a4	cmpq	$0x80, %r11
00000001000348ab	jne	0x1000348d0
00000001000348ad	jmp	0x100034c6e
00000001000348b2	addq	$0x3, %rcx
00000001000348b6	shll	$0xc, %esi
00000001000348b9	orl	%esi, %edi
00000001000348bb	movl	%edi, %edx
00000001000348bd	cmpq	$0x80, %r11
00000001000348c4	je	0x100034c6e
00000001000348ca	nopw	(%rax,%rax)
00000001000348d0	movl	%edx, -0x298(%rbp,%r11,4)
00000001000348d8	incq	%r11
00000001000348db	cmpq	%rax, %rcx
00000001000348de	jne	0x100034820
00000001000348e4	jmp	0x10003490a
00000001000348e6	movq	(%r13), %rsi
00000001000348ea	movq	0x8(%r13), %rdx
00000001000348ee	movq	%rbx, %rdi
00000001000348f1	addq	$0x278, %rsp                    ## imm = 0x278
00000001000348f8	popq	%rbx
00000001000348f9	popq	%r12
00000001000348fb	popq	%r13
00000001000348fd	popq	%r14
00000001000348ff	popq	%r15
0000000100034901	popq	%rbp
0000000100034902	jmp	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100034907	xorl	%r11d, %r11d
000000010003490a	movq	-0x78(%rbp), %rax
000000010003490e	movq	-0x60(%rbp), %r12
0000000100034912	addq	%r12, %rax
0000000100034915	movq	%rax, -0x80(%rbp)
0000000100034919	leaq	-0x1(%r11), %rax
000000010003491d	movq	%rax, -0x88(%rbp)
0000000100034924	leaq	0x4(,%r11,4), %rax
000000010003492c	movq	%rax, -0x40(%rbp)
0000000100034930	leaq	-0x298(%rbp,%r11,4), %rbx
0000000100034938	movq	%r11, %rax
000000010003493b	negq	%rax
000000010003493e	movq	%rax, -0x50(%rbp)
0000000100034942	movl	%r11d, %ecx
0000000100034945	xorb	$0x3, %cl
0000000100034948	leaq	0x1(%r11), %rax
000000010003494c	movq	%rax, -0x48(%rbp)
0000000100034950	movl	$0x2bc, %eax                    ## imm = 0x2BC
0000000100034955	movq	%rax, -0x70(%rbp)
0000000100034959	movl	$0x48, %r13d
000000010003495f	movl	$0x80, %eax
0000000100034964	movq	%rax, -0x30(%rbp)
0000000100034968	movl	$0x1, %edi
000000010003496d	movl	$0x1a, %r8d
0000000100034973	xorl	%eax, %eax
0000000100034975	movq	%rax, -0x58(%rbp)
0000000100034979	xorl	%r9d, %r9d
000000010003497c	movl	$0x24, %edx
0000000100034981	subq	%r13, %rdx
0000000100034984	movl	$0x0, %eax
0000000100034989	cmovaeq	%rdx, %rax
000000010003498d	cmpq	$0x2, %rax
0000000100034991	cmovbq	%rdi, %rax
0000000100034995	cmpq	$0x1a, %rax
0000000100034999	cmovaeq	%r8, %rax
000000010003499d	leal	-0x61(%r10), %edx
00000001000349a1	cmpb	$0x1a, %dl
00000001000349a4	jb	0x1000349ba
00000001000349a6	leal	-0x30(%r10), %edx
00000001000349aa	cmpb	$0x9, %dl
00000001000349ad	ja	0x100034c6e
00000001000349b3	addb	$-0x16, %r10b
00000001000349b7	movl	%r10d, %edx
00000001000349ba	incq	%r12
00000001000349bd	movzbl	%dl, %r8d
00000001000349c1	cmpq	%r8, %rax
00000001000349c4	jbe	0x100034af0
00000001000349ca	addq	%r8, %r9
00000001000349cd	cmovaeq	%r9, %rsi
00000001000349d1	jb	0x100034c6e
00000001000349d7	leaq	0x1(%r11), %rdi
00000001000349db	movq	%rsi, %rax
00000001000349de	xorl	%edx, %edx
00000001000349e0	divq	%rdi
00000001000349e3	movq	%rdx, %r9
00000001000349e6	movq	-0x30(%rbp), %r10
00000001000349ea	movq	%r10, %rdx
00000001000349ed	addq	%rax, %rdx
00000001000349f0	cmovaeq	%rdx, %r10
00000001000349f4	movq	%r10, -0x30(%rbp)
00000001000349f8	jb	0x100034c6e
00000001000349fe	movq	-0x30(%rbp), %rax
0000000100034a02	shrq	$0x20, %rax
0000000100034a06	jne	0x100034c6e
0000000100034a0c	movq	-0x30(%rbp), %rax
0000000100034a10	xorl	$0xd800, %eax                   ## imm = 0xD800
0000000100034a15	addl	$0xfffff800, %eax               ## imm = 0xFFFFF800
0000000100034a1a	cmpl	$0x10f7ff, %eax                 ## imm = 0x10F7FF
0000000100034a1f	ja	0x100034c6e
0000000100034a25	cmpl	$0x110000, -0x30(%rbp)          ## imm = 0x110000
0000000100034a2c	je	0x100034c6e
0000000100034a32	cmpq	$0x7f, %r11
0000000100034a36	ja	0x100034c6e
0000000100034a3c	cmpq	%r9, %r11
0000000100034a3f	jbe	0x100034ba0
0000000100034a45	movq	-0x88(%rbp), %rax
0000000100034a4c	movq	-0x58(%rbp), %rdx
0000000100034a50	leaq	(%rax,%rdx), %r10
0000000100034a54	movl	%r11d, %eax
0000000100034a57	subl	%r9d, %eax
0000000100034a5a	subq	%r9, %r10
0000000100034a5d	movq	%r11, %r14
0000000100034a60	testb	$0x3, %al
0000000100034a62	movabsq	$-0x15f15f15f15f15f1, %r13      ## imm = 0xEA0EA0EA0EA0EA0F
0000000100034a6c	je	0x100034aa9
0000000100034a6e	movq	%rsi, %rax
0000000100034a71	xorl	%edx, %edx
0000000100034a73	divq	-0x48(%rbp)
0000000100034a77	movq	%rax, %rdx
0000000100034a7a	xorl	%r14d, %r14d
0000000100034a7d	nopl	(%rax)
0000000100034a80	movl	-0x4(%rbx,%r14,4), %eax
0000000100034a85	movl	%eax, (%rbx,%r14,4)
0000000100034a89	decq	%r14
0000000100034a8c	movl	%ecx, %eax
0000000100034a8e	mulb	%dl
0000000100034a90	addb	%sil, %al
0000000100034a93	movl	%r11d, %r15d
0000000100034a96	subb	%al, %r15b
0000000100034a99	movzbl	%r15b, %eax
0000000100034a9d	andl	$0x3, %eax
0000000100034aa0	addq	%r14, %rax
0000000100034aa3	jne	0x100034a80
0000000100034aa5	subq	-0x50(%rbp), %r14
0000000100034aa9	cmpq	$0x3, %r10
0000000100034aad	jb	0x100034ad9
0000000100034aaf	nop
0000000100034ab0	movq	-0x2a8(%rbp,%r14,4), %rax
0000000100034ab8	movq	-0x2a0(%rbp,%r14,4), %rdx
0000000100034ac0	movq	%rdx, -0x29c(%rbp,%r14,4)
0000000100034ac8	movq	%rax, -0x2a4(%rbp,%r14,4)
0000000100034ad0	addq	$-0x4, %r14
0000000100034ad4	cmpq	%r9, %r14
0000000100034ad7	ja	0x100034ab0
0000000100034ad9	cmpq	$0x80, %r9
0000000100034ae0	jb	0x100034bb7
0000000100034ae6	jmp	0x100034d44
0000000100034aeb	nopl	(%rax,%rax)
0000000100034af0	movl	$0x24, %edi
0000000100034af5	subq	%rax, %rdi
0000000100034af8	movl	$0x48, %r15d
0000000100034afe	nop
0000000100034b00	movq	%r15, %rax
0000000100034b03	subq	%r13, %rax
0000000100034b06	movl	$0x0, %r14d
0000000100034b0c	cmovaeq	%rax, %r14
0000000100034b10	cmpq	$0x2, %r14
0000000100034b14	movl	$0x1, %eax
0000000100034b19	cmovbq	%rax, %r14
0000000100034b1d	cmpq	$0x1a, %r14
0000000100034b21	movl	$0x1a, %eax
0000000100034b26	cmovaeq	%rax, %r14
0000000100034b2a	cmpq	-0x80(%rbp), %r12
0000000100034b2e	je	0x100034c6e
0000000100034b34	movzbl	(%r12), %eax
0000000100034b39	leal	-0x61(%rax), %edx
0000000100034b3c	cmpb	$0x1a, %dl
0000000100034b3f	jb	0x100034b51
0000000100034b41	leal	-0x30(%rax), %edx
0000000100034b44	cmpb	$0x9, %dl
0000000100034b47	ja	0x100034c6e
0000000100034b4d	addb	$-0x16, %al
0000000100034b4f	movl	%eax, %edx
0000000100034b51	movzbl	%dl, %r10d
0000000100034b55	movq	%r10, %rax
0000000100034b58	mulq	%rdi
0000000100034b5b	jo	0x100034c6e
0000000100034b61	addq	%rax, %r8
0000000100034b64	jb	0x100034c6e
0000000100034b6a	incq	%r12
0000000100034b6d	cmpq	%r10, %r14
0000000100034b70	ja	0x1000349ca
0000000100034b76	movl	$0x24, %r10d
0000000100034b7c	subq	%r14, %r10
0000000100034b7f	addq	$0x24, %r15
0000000100034b83	movq	%rdi, %rax
0000000100034b86	mulq	%r10
0000000100034b89	movq	%rax, %rdi
0000000100034b8c	jno	0x100034b00
0000000100034b92	jmp	0x100034c6e
0000000100034b97	nopw	(%rax,%rax)
0000000100034ba0	cmpq	$0x80, %r9
0000000100034ba7	movabsq	$-0x15f15f15f15f15f1, %r13      ## imm = 0xEA0EA0EA0EA0EA0F
0000000100034bb1	jae	0x100034d44
0000000100034bb7	movq	-0x30(%rbp), %rax
0000000100034bbb	movl	%eax, -0x298(%rbp,%r9,4)
0000000100034bc3	cmpq	-0x80(%rbp), %r12
0000000100034bc7	je	0x100034cfe
0000000100034bcd	movq	%r8, %rax
0000000100034bd0	xorl	%edx, %edx
0000000100034bd2	divq	-0x70(%rbp)
0000000100034bd6	movq	%rax, %r8
0000000100034bd9	xorl	%edx, %edx
0000000100034bdb	divq	%rdi
0000000100034bde	movq	%rax, %r10
0000000100034be1	addq	%r8, %r10
0000000100034be4	cmpq	$0x1c8, %r10                    ## imm = 0x1C8
0000000100034beb	jb	0x100034c10
0000000100034bed	xorl	%r11d, %r11d
0000000100034bf0	movq	%r10, %rax
0000000100034bf3	mulq	%r13
0000000100034bf6	movq	%rdx, %r8
0000000100034bf9	shrq	$0x5, %r8
0000000100034bfd	addq	$0x24, %r11
0000000100034c01	cmpq	$0x3e57, %r10                   ## imm = 0x3E57
0000000100034c08	movq	%r8, %r10
0000000100034c0b	ja	0x100034bf0
0000000100034c0d	jmp	0x100034c16
0000000100034c0f	nop
0000000100034c10	movq	%r10, %r8
0000000100034c13	xorl	%r11d, %r11d
0000000100034c16	incq	%r9
0000000100034c19	movzbl	(%r12), %r10d
0000000100034c1e	leal	(,%r8,4), %eax
0000000100034c26	leal	(%rax,%rax,8), %eax
0000000100034c29	addl	$0x26, %r8d
0000000100034c2d	xorl	%edx, %edx
0000000100034c2f	divw	%r8w
0000000100034c33	movzwl	%ax, %r13d
0000000100034c37	addq	%r11, %r13
0000000100034c3a	incq	-0x58(%rbp)
0000000100034c3e	addq	$0x4, -0x40(%rbp)
0000000100034c43	addq	$0x4, %rbx
0000000100034c47	decq	-0x50(%rbp)
0000000100034c4b	addb	$0x3, %cl
0000000100034c4e	incq	-0x48(%rbp)
0000000100034c52	movl	$0x2, %eax
0000000100034c57	movq	%rax, -0x70(%rbp)
0000000100034c5b	movq	%rdi, %r11
0000000100034c5e	movl	$0x1, %edi
0000000100034c63	movl	$0x1a, %r8d
0000000100034c69	jmp	0x10003497c
0000000100034c6e	leaq	0x115bf(%rip), %rsi
0000000100034c75	movl	$0x9, %edx
0000000100034c7a	movq	-0x68(%rbp), %rbx
0000000100034c7e	movq	%rbx, %rdi
0000000100034c81	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100034c86	movb	$0x1, %r13b
0000000100034c89	testb	%al, %al
0000000100034c8b	jne	0x100034cd8
0000000100034c8d	movq	-0x98(%rbp), %rdx
0000000100034c94	testq	%rdx, %rdx
0000000100034c97	je	0x100034cc4
0000000100034c99	movq	%rbx, %rdi
0000000100034c9c	movq	-0x90(%rbp), %rsi
0000000100034ca3	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100034ca8	testb	%al, %al
0000000100034caa	jne	0x100034cd8
0000000100034cac	leaq	0x1158a(%rip), %rsi
0000000100034cb3	movl	$0x1, %edx
0000000100034cb8	movq	%rbx, %rdi
0000000100034cbb	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100034cc0	testb	%al, %al
0000000100034cc2	jne	0x100034cd8
0000000100034cc4	movq	%rbx, %rdi
0000000100034cc7	movq	-0x60(%rbp), %rsi
0000000100034ccb	movq	-0x78(%rbp), %rdx
0000000100034ccf	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100034cd4	testb	%al, %al
0000000100034cd6	je	0x100034ced
0000000100034cd8	movl	%r13d, %eax
0000000100034cdb	addq	$0x278, %rsp                    ## imm = 0x278
0000000100034ce2	popq	%rbx
0000000100034ce3	popq	%r12
0000000100034ce5	popq	%r13
0000000100034ce7	popq	%r14
0000000100034ce9	popq	%r15
0000000100034ceb	popq	%rbp
0000000100034cec	retq
0000000100034ced	leaq	0x1154a(%rip), %rsi
0000000100034cf4	movl	$0x1, %edx
0000000100034cf9	jmp	0x1000348ee
0000000100034cfe	cmpq	$0x80, %r11
0000000100034d05	jae	0x100034d58
0000000100034d07	leaq	-0x34(%rbp), %r14
0000000100034d0b	movq	-0x68(%rbp), %rbx
0000000100034d0f	leaq	-0x298(%rbp), %r15
0000000100034d16	movq	-0x40(%rbp), %r12
0000000100034d1a	nopw	(%rax,%rax)
0000000100034d20	movl	(%r15), %eax
0000000100034d23	movl	%eax, -0x34(%rbp)
0000000100034d26	movq	%r14, %rdi
0000000100034d29	movq	%rbx, %rsi
0000000100034d2c	callq	__ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h58c8d2487b4b288dE ## _$LT$char$u20$as$u20$core..fmt..Display$GT$::fmt::h58c8d2487b4b288d
0000000100034d31	movl	%eax, %r13d
0000000100034d34	testb	%al, %al
0000000100034d36	jne	0x100034cd8
0000000100034d38	addq	$0x4, %r15
0000000100034d3c	addq	$-0x4, %r12
0000000100034d40	jne	0x100034d20
0000000100034d42	jmp	0x100034cd8
0000000100034d44	leaq	0x14e25(%rip), %rdx
0000000100034d4b	movl	$0x80, %esi
0000000100034d50	movq	%r9, %rdi
0000000100034d53	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100034d58	leaq	0x14df9(%rip), %rdx
0000000100034d5f	movl	$0x80, %esi
0000000100034d64	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
0000000100034d69	nopl	(%rax)
__ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h3aa97c0ac1f1c2b1E:
0000000100034d70	pushq	%rbp
0000000100034d71	movq	%rsp, %rbp
0000000100034d74	pushq	%r15
0000000100034d76	pushq	%r14
0000000100034d78	pushq	%r12
0000000100034d7a	pushq	%rbx
0000000100034d7b	subq	$0x80, %rsp
0000000100034d82	movq	%rsi, %rbx
0000000100034d85	movq	%rdi, %r14
0000000100034d88	leaq	0x114b0(%rip), %rcx
0000000100034d8f	leaq	-0xa0(%rbp), %r15
0000000100034d96	movl	$0x1, %r8d
0000000100034d9c	movq	%r15, %rdi
0000000100034d9f	movq	%r14, %rsi
0000000100034da2	movq	%rbx, %rdx
0000000100034da5	callq	__ZN4core3str7pattern11StrSearcher3new17h056863fc02a6ed7bE ## core::str::pattern::StrSearcher::new::h056863fc02a6ed7b
0000000100034daa	leaq	-0x38(%rbp), %r12
0000000100034dae	nop
0000000100034db0	movq	%r12, %rdi
0000000100034db3	movq	%r15, %rsi
0000000100034db6	callq	__ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6c99b026dd33e6a4E ## _$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$::next::h6c99b026dd33e6a4
0000000100034dbb	movq	-0x38(%rbp), %rax
0000000100034dbf	cmpq	$0x1, %rax
0000000100034dc3	je	0x100034de7
0000000100034dc5	cmpl	$0x2, %eax
0000000100034dc8	jne	0x100034db0
0000000100034dca	movq	%rbx, %rcx
0000000100034dcd	movq	%rbx, %rax
0000000100034dd0	subq	%rcx, %rax
0000000100034dd3	cmpq	$0x10, %rax
0000000100034dd7	ja	0x100034df7
0000000100034dd9	movl	$0x1, %eax
0000000100034dde	cmpq	%rbx, %rcx
0000000100034de1	jne	0x100034e09
0000000100034de3	xorl	%edx, %edx
0000000100034de5	jmp	0x100034df9
0000000100034de7	movq	-0x30(%rbp), %rcx
0000000100034deb	movq	%rbx, %rax
0000000100034dee	subq	%rcx, %rax
0000000100034df1	cmpq	$0x10, %rax
0000000100034df5	jbe	0x100034dd9
0000000100034df7	xorl	%eax, %eax
0000000100034df9	addq	$0x80, %rsp
0000000100034e00	popq	%rbx
0000000100034e01	popq	%r12
0000000100034e03	popq	%r14
0000000100034e05	popq	%r15
0000000100034e07	popq	%rbp
0000000100034e08	retq
0000000100034e09	addq	%r14, %rbx
0000000100034e0c	addq	%r14, %rcx
0000000100034e0f	xorl	%edx, %edx
0000000100034e11	movl	$0xffffffff, %esi               ## imm = 0xFFFFFFFF
0000000100034e16	jmp	0x100034e32
0000000100034e18	nopl	(%rax,%rax)
0000000100034e20	movq	%rdx, %rdi
0000000100034e23	shlq	$0x4, %rdi
0000000100034e27	movl	%r8d, %edx
0000000100034e2a	orq	%rdi, %rdx
0000000100034e2d	cmpq	%rbx, %rcx
0000000100034e30	je	0x100034df9
0000000100034e32	movzbl	(%rcx), %edi
0000000100034e35	testb	%dil, %dil
0000000100034e38	js	0x100034e50
0000000100034e3a	incq	%rcx
0000000100034e3d	leal	-0x30(%rdi), %r8d
0000000100034e41	cmpl	$0xa, %r8d
0000000100034e45	jb	0x100034e20
0000000100034e47	jmp	0x100034ef0
0000000100034e4c	nopl	(%rax)
0000000100034e50	movl	%edi, %r8d
0000000100034e53	andl	$0x1f, %r8d
0000000100034e57	movzbl	0x1(%rcx), %r10d
0000000100034e5c	andl	$0x3f, %r10d
0000000100034e60	cmpb	$-0x21, %dil
0000000100034e64	jbe	0x100034eb5
0000000100034e66	movzbl	0x2(%rcx), %r9d
0000000100034e6b	shll	$0x6, %r10d
0000000100034e6f	andl	$0x3f, %r9d
0000000100034e73	orl	%r10d, %r9d
0000000100034e76	cmpb	$-0x10, %dil
0000000100034e7a	jb	0x100034ed3
0000000100034e7c	movzbl	0x3(%rcx), %edi
0000000100034e80	andl	$0x7, %r8d
0000000100034e84	shll	$0x12, %r8d
0000000100034e88	shll	$0x6, %r9d
0000000100034e8c	andl	$0x3f, %edi
0000000100034e8f	orl	%r9d, %edi
0000000100034e92	orl	%r8d, %edi
0000000100034e95	cmpl	$0x110000, %edi                 ## imm = 0x110000
0000000100034e9b	je	0x100034df9
0000000100034ea1	addq	$0x4, %rcx
0000000100034ea5	leal	-0x30(%rdi), %r8d
0000000100034ea9	cmpl	$0xa, %r8d
0000000100034ead	jb	0x100034e20
0000000100034eb3	jmp	0x100034ef0
0000000100034eb5	addq	$0x2, %rcx
0000000100034eb9	shll	$0x6, %r8d
0000000100034ebd	orl	%r10d, %r8d
0000000100034ec0	movl	%r8d, %edi
0000000100034ec3	leal	-0x30(%rdi), %r8d
0000000100034ec7	cmpl	$0xa, %r8d
0000000100034ecb	jb	0x100034e20
0000000100034ed1	jmp	0x100034ef0
0000000100034ed3	addq	$0x3, %rcx
0000000100034ed7	shll	$0xc, %r8d
0000000100034edb	orl	%r8d, %r9d
0000000100034ede	movl	%r9d, %edi
0000000100034ee1	leal	-0x30(%rdi), %r8d
0000000100034ee5	cmpl	$0xa, %r8d
0000000100034ee9	jb	0x100034e20
0000000100034eef	nop
0000000100034ef0	orl	$0x20, %edi
0000000100034ef3	addl	$-0x61, %edi
0000000100034ef6	addl	$0xa, %edi
0000000100034ef9	cmovbl	%esi, %edi
0000000100034efc	movl	%edi, %r8d
0000000100034eff	cmpl	$0x10, %edi
0000000100034f02	jb	0x100034e20
0000000100034f08	leaq	0x11249(%rip), %rdi
0000000100034f0f	leaq	0x14c72(%rip), %rdx
0000000100034f16	movl	$0x2b, %esi
0000000100034f1b	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
__ZN14rustc_demangle2v06Parser11hex_nibbles17h3e7d6119c18b9acdE:
0000000100034f20	pushq	%rbp
0000000100034f21	movq	%rsp, %rbp
0000000100034f24	pushq	%rbx
0000000100034f25	pushq	%rax
0000000100034f26	movq	(%rsi), %rax
0000000100034f29	testq	%rax, %rax
0000000100034f2c	je	0x100034fa5
0000000100034f2e	movq	%rsi, %rcx
0000000100034f31	movq	0x10(%rsi), %rdx
0000000100034f35	movq	0x8(%rsi), %rsi
0000000100034f39	movl	$0x1, %r8d
0000000100034f3f	xorl	%r9d, %r9d
0000000100034f42	movq	%rax, %r10
0000000100034f45	nopw	%cs:(%rax,%rax)
0000000100034f4f	nop
0000000100034f50	leaq	(%rdx,%r9), %r11
0000000100034f54	cmpq	%rsi, %r11
0000000100034f57	jae	0x100034fa5
0000000100034f59	movzbl	(%r10,%rdx), %r11d
0000000100034f5e	leaq	0x1(%rdx,%r9), %rbx
0000000100034f63	movq	%rbx, 0x10(%rcx)
0000000100034f67	leal	-0x30(%r11), %ebx
0000000100034f6b	decq	%r8
0000000100034f6e	incq	%r9
0000000100034f71	incq	%r10
0000000100034f74	cmpb	$0xa, %bl
0000000100034f77	jb	0x100034f50
0000000100034f79	leal	-0x61(%r11), %ebx
0000000100034f7d	cmpb	$0x6, %bl
0000000100034f80	jb	0x100034f50
0000000100034f82	cmpb	$0x5f, %r11b
0000000100034f86	jne	0x100034fa5
0000000100034f88	movq	%rdx, %rcx
0000000100034f8b	subq	%r8, %rcx
0000000100034f8e	cmpq	%rdx, %rcx
0000000100034f91	jb	0x100034fcb
0000000100034f93	testq	%rdx, %rdx
0000000100034f96	je	0x100034fb9
0000000100034f98	cmpq	%rsi, %rdx
0000000100034f9b	jae	0x100034fb7
0000000100034f9d	cmpb	$-0x40, (%rax,%rdx)
0000000100034fa1	jge	0x100034fb9
0000000100034fa3	jmp	0x100034fcb
0000000100034fa5	movb	$0x0, 0x8(%rdi)
0000000100034fa9	movq	$0x0, (%rdi)
0000000100034fb0	addq	$0x8, %rsp
0000000100034fb4	popq	%rbx
0000000100034fb5	popq	%rbp
0000000100034fb6	retq
0000000100034fb7	jne	0x100034fcb
0000000100034fb9	cmpq	%r8, %rdx
0000000100034fbc	je	0x100034fea
0000000100034fbe	cmpq	%rsi, %rcx
0000000100034fc1	jae	0x100034fda
0000000100034fc3	cmpb	$-0x41, -0x1(%r10,%rdx)
0000000100034fc9	jg	0x100034fea
0000000100034fcb	leaq	0x14c6e(%rip), %r8
0000000100034fd2	movq	%rax, %rdi
0000000100034fd5	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100034fda	movq	%rdx, %r10
0000000100034fdd	subq	%rsi, %r10
0000000100034fe0	leaq	-0x1(%r10,%r9), %r9
0000000100034fe5	testq	%r9, %r9
0000000100034fe8	jne	0x100034fcb
0000000100034fea	addq	%rdx, %rax
0000000100034fed	negq	%r8
0000000100034ff0	movq	%rax, (%rdi)
0000000100034ff3	movq	%r8, 0x8(%rdi)
0000000100034ff7	addq	$0x8, %rsp
0000000100034ffb	popq	%rbx
0000000100034ffc	popq	%rbp
0000000100034ffd	retq
0000000100034ffe	nop
__ZN14rustc_demangle2v06Parser10integer_6217h257d8636645c1e80E:
0000000100035000	pushq	%rbp
0000000100035001	movq	%rsp, %rbp
0000000100035004	movq	(%rsi), %r8
0000000100035007	movq	0x8(%rsi), %r9
000000010003500b	movq	0x10(%rsi), %rcx
000000010003500f	cmpq	%r9, %rcx
0000000100035012	jae	0x100035034
0000000100035014	testq	%r8, %r8
0000000100035017	je	0x100035034
0000000100035019	cmpb	$0x5f, (%r8,%rcx)
000000010003501e	jne	0x100035039
0000000100035020	incq	%rcx
0000000100035023	movq	%rcx, 0x10(%rsi)
0000000100035027	movq	$0x0, 0x8(%rdi)
000000010003502f	jmp	0x1000350c1
0000000100035034	testq	%r8, %r8
0000000100035037	je	0x1000350b3
0000000100035039	xorl	%eax, %eax
000000010003503b	movl	$0x3e, %r10d
0000000100035041	nopw	%cs:(%rax,%rax)
000000010003504b	nopl	(%rax,%rax)
0000000100035050	cmpq	%r9, %rcx
0000000100035053	jae	0x1000350b3
0000000100035055	cmpb	$0x5f, (%r8,%rcx)
000000010003505a	je	0x1000350a7
000000010003505c	movzbl	(%r8,%rcx), %edx
0000000100035061	leal	-0x30(%rdx), %r11d
0000000100035065	cmpb	$0xa, %r11b
0000000100035069	jb	0x100035090
000000010003506b	leal	-0x61(%rdx), %r11d
000000010003506f	cmpb	$0x1a, %r11b
0000000100035073	jae	0x100035080
0000000100035075	addb	$-0x57, %dl
0000000100035078	jmp	0x10003508d
000000010003507a	nopw	(%rax,%rax)
0000000100035080	leal	-0x41(%rdx), %r11d
0000000100035084	cmpb	$0x1a, %r11b
0000000100035088	jae	0x1000350b3
000000010003508a	addb	$-0x1d, %dl
000000010003508d	movl	%edx, %r11d
0000000100035090	incq	%rcx
0000000100035093	movq	%rcx, 0x10(%rsi)
0000000100035097	mulq	%r10
000000010003509a	jo	0x1000350b3
000000010003509c	movzbl	%r11b, %edx
00000001000350a0	addq	%rdx, %rax
00000001000350a3	jae	0x100035050
00000001000350a5	jmp	0x1000350b3
00000001000350a7	incq	%rcx
00000001000350aa	movq	%rcx, 0x10(%rsi)
00000001000350ae	incq	%rax
00000001000350b1	jne	0x1000350bd
00000001000350b3	movb	$0x0, 0x1(%rdi)
00000001000350b7	movb	$0x1, %al
00000001000350b9	movb	%al, (%rdi)
00000001000350bb	popq	%rbp
00000001000350bc	retq
00000001000350bd	movq	%rax, 0x8(%rdi)
00000001000350c1	xorl	%eax, %eax
00000001000350c3	movb	%al, (%rdi)
00000001000350c5	popq	%rbp
00000001000350c6	retq
00000001000350c7	nopw	(%rax,%rax)
__ZN14rustc_demangle2v06Parser13disambiguator17h8158e9f01ea272f3E:
00000001000350d0	pushq	%rbp
00000001000350d1	movq	%rsp, %rbp
00000001000350d4	movq	0x8(%rsi), %rcx
00000001000350d8	movq	0x10(%rsi), %rax
00000001000350dc	cmpq	%rcx, %rax
00000001000350df	jae	0x100035113
00000001000350e1	movq	(%rsi), %r8
00000001000350e4	testq	%r8, %r8
00000001000350e7	je	0x100035113
00000001000350e9	cmpb	$0x73, (%r8,%rax)
00000001000350ee	jne	0x100035113
00000001000350f0	leaq	0x1(%rax), %r9
00000001000350f4	movq	%r9, 0x10(%rsi)
00000001000350f8	cmpq	%rcx, %r9
00000001000350fb	jae	0x100035121
00000001000350fd	cmpb	$0x5f, (%r8,%r9)
0000000100035102	jne	0x100035121
0000000100035104	addq	$0x2, %rax
0000000100035108	movq	%rax, 0x10(%rsi)
000000010003510c	xorl	%eax, %eax
000000010003510e	jmp	0x100035193
0000000100035113	movq	$0x0, 0x8(%rdi)
000000010003511b	xorl	%eax, %eax
000000010003511d	movb	%al, (%rdi)
000000010003511f	popq	%rbp
0000000100035120	retq
0000000100035121	xorl	%eax, %eax
0000000100035123	movl	$0x3e, %r10d
0000000100035129	nopl	(%rax)
0000000100035130	cmpq	%rcx, %r9
0000000100035133	jae	0x100035198
0000000100035135	movzbl	(%r8,%r9), %edx
000000010003513a	cmpb	$0x5f, %dl
000000010003513d	je	0x100035187
000000010003513f	leal	-0x30(%rdx), %r11d
0000000100035143	cmpb	$0xa, %r11b
0000000100035147	jb	0x100035170
0000000100035149	leal	-0x61(%rdx), %r11d
000000010003514d	cmpb	$0x1a, %r11b
0000000100035151	jae	0x100035160
0000000100035153	addb	$-0x57, %dl
0000000100035156	jmp	0x10003516d
0000000100035158	nopl	(%rax,%rax)
0000000100035160	leal	-0x41(%rdx), %r11d
0000000100035164	cmpb	$0x1a, %r11b
0000000100035168	jae	0x100035198
000000010003516a	addb	$-0x1d, %dl
000000010003516d	movl	%edx, %r11d
0000000100035170	incq	%r9
0000000100035173	movq	%r9, 0x10(%rsi)
0000000100035177	mulq	%r10
000000010003517a	jo	0x100035198
000000010003517c	movzbl	%r11b, %edx
0000000100035180	addq	%rdx, %rax
0000000100035183	jae	0x100035130
0000000100035185	jmp	0x100035198
0000000100035187	incq	%r9
000000010003518a	movq	%r9, 0x10(%rsi)
000000010003518e	incq	%rax
0000000100035191	je	0x100035198
0000000100035193	incq	%rax
0000000100035196	jne	0x1000351a2
0000000100035198	movb	$0x0, 0x1(%rdi)
000000010003519c	movb	$0x1, %al
000000010003519e	movb	%al, (%rdi)
00000001000351a0	popq	%rbp
00000001000351a1	retq
00000001000351a2	movq	%rax, 0x8(%rdi)
00000001000351a6	xorl	%eax, %eax
00000001000351a8	movb	%al, (%rdi)
00000001000351aa	popq	%rbp
00000001000351ab	retq
00000001000351ac	nopl	(%rax)
__ZN14rustc_demangle2v06Parser9namespace17h40b6bd2d298193b0E:
00000001000351b0	pushq	%rbp
00000001000351b1	movq	%rsp, %rbp
00000001000351b4	movq	0x10(%rdi), %rdx
00000001000351b8	xorl	%eax, %eax
00000001000351ba	movl	$0x1, %ecx
00000001000351bf	cmpq	0x8(%rdi), %rdx
00000001000351c3	jae	0x1000351e2
00000001000351c5	movq	(%rdi), %rsi
00000001000351c8	testq	%rsi, %rsi
00000001000351cb	je	0x1000351e2
00000001000351cd	movzbl	(%rsi,%rdx), %eax
00000001000351d1	incq	%rdx
00000001000351d4	movq	%rdx, 0x10(%rdi)
00000001000351d8	leal	-0x41(%rax), %ecx
00000001000351db	cmpb	$0x1a, %cl
00000001000351de	jae	0x1000351eb
00000001000351e0	xorl	%ecx, %ecx
00000001000351e2	shlq	$0x20, %rax
00000001000351e6	orq	%rcx, %rax
00000001000351e9	popq	%rbp
00000001000351ea	retq
00000001000351eb	addb	$-0x7b, %al
00000001000351ed	xorl	%edx, %edx
00000001000351ef	xorl	%ecx, %ecx
00000001000351f1	cmpb	$-0x1a, %al
00000001000351f3	setb	%cl
00000001000351f6	movl	$0x110000, %eax                 ## imm = 0x110000
00000001000351fb	cmovbq	%rdx, %rax
00000001000351ff	shlq	$0x20, %rax
0000000100035203	orq	%rcx, %rax
0000000100035206	popq	%rbp
0000000100035207	retq
0000000100035208	nopl	(%rax,%rax)
__ZN14rustc_demangle2v06Parser5ident17h2232a8e6be06ef2fE:
0000000100035210	pushq	%rbp
0000000100035211	movq	%rsp, %rbp
0000000100035214	pushq	%r15
0000000100035216	pushq	%r14
0000000100035218	pushq	%rbx
0000000100035219	pushq	%rax
000000010003521a	movq	%rsi, %r8
000000010003521d	movq	%rdi, %rbx
0000000100035220	movq	(%rsi), %rdi
0000000100035223	movq	0x8(%rsi), %rsi
0000000100035227	movq	0x10(%r8), %r9
000000010003522b	xorl	%r10d, %r10d
000000010003522e	cmpq	%rsi, %r9
0000000100035231	jae	0x100035249
0000000100035233	testq	%rdi, %rdi
0000000100035236	je	0x100035249
0000000100035238	cmpb	$0x75, (%rdi,%r9)
000000010003523d	jne	0x1000352ab
000000010003523f	incq	%r9
0000000100035242	movq	%r9, 0x10(%r8)
0000000100035246	movb	$0x1, %r10b
0000000100035249	cmpq	%rsi, %r9
000000010003524c	jae	0x1000352e0
0000000100035252	testq	%rdi, %rdi
0000000100035255	je	0x1000352e0
000000010003525b	movzbl	(%rdi,%r9), %eax
0000000100035260	addb	$-0x30, %al
0000000100035262	cmpb	$0x9, %al
0000000100035264	ja	0x1000352e0
000000010003526a	incq	%r9
000000010003526d	movq	%r9, 0x10(%r8)
0000000100035271	testb	%al, %al
0000000100035273	je	0x1000352b5
0000000100035275	movzbl	%al, %eax
0000000100035278	movl	$0xa, %ecx
000000010003527d	nopl	(%rax)
0000000100035280	cmpq	%rsi, %r9
0000000100035283	jae	0x1000352b7
0000000100035285	movzbl	(%rdi,%r9), %r11d
000000010003528a	addb	$-0x30, %r11b
000000010003528e	cmpb	$0x9, %r11b
0000000100035292	ja	0x1000352b7
0000000100035294	incq	%r9
0000000100035297	movq	%r9, 0x10(%r8)
000000010003529b	mulq	%rcx
000000010003529e	jo	0x1000352e0
00000001000352a0	movzbl	%r11b, %edx
00000001000352a4	addq	%rdx, %rax
00000001000352a7	jae	0x100035280
00000001000352a9	jmp	0x1000352e0
00000001000352ab	xorl	%r10d, %r10d
00000001000352ae	cmpq	%rsi, %r9
00000001000352b1	jb	0x100035252
00000001000352b3	jmp	0x1000352e0
00000001000352b5	xorl	%eax, %eax
00000001000352b7	cmpq	%rsi, %r9
00000001000352ba	jae	0x1000352cf
00000001000352bc	testq	%rdi, %rdi
00000001000352bf	je	0x1000352cf
00000001000352c1	cmpb	$0x5f, (%rdi,%r9)
00000001000352c6	jne	0x1000352cf
00000001000352c8	incq	%r9
00000001000352cb	movq	%r9, 0x10(%r8)
00000001000352cf	movq	%r9, %rcx
00000001000352d2	addq	%rax, %rcx
00000001000352d5	jb	0x1000352e0
00000001000352d7	movq	%rcx, 0x10(%r8)
00000001000352db	cmpq	%rsi, %rcx
00000001000352de	jbe	0x1000352f6
00000001000352e0	movb	$0x0, 0x8(%rbx)
00000001000352e4	movq	$0x0, (%rbx)
00000001000352eb	addq	$0x8, %rsp
00000001000352ef	popq	%rbx
00000001000352f0	popq	%r14
00000001000352f2	popq	%r15
00000001000352f4	popq	%rbp
00000001000352f5	retq
00000001000352f6	cmpq	%rsi, %r9
00000001000352f9	jae	0x100035307
00000001000352fb	cmpb	$-0x40, (%rdi,%r9)
0000000100035300	jge	0x10003530d
0000000100035302	jmp	0x10003540d
0000000100035307	jne	0x10003540d
000000010003530d	testq	%rcx, %rcx
0000000100035310	je	0x100035328
0000000100035312	cmpq	%rsi, %rcx
0000000100035315	jae	0x100035322
0000000100035317	cmpb	$-0x41, (%rdi,%rcx)
000000010003531b	jg	0x100035331
000000010003531d	jmp	0x10003540d
0000000100035322	jne	0x10003540d
0000000100035328	testq	%rdi, %rdi
000000010003532b	je	0x10003540d
0000000100035331	leaq	(%rdi,%r9), %r14
0000000100035335	movq	%rcx, %rdx
0000000100035338	subq	%r9, %rdx
000000010003533b	testb	%r10b, %r10b
000000010003533e	je	0x1000353af
0000000100035340	addq	%rcx, %rdi
0000000100035343	movq	%rax, %r8
0000000100035346	negq	%r8
0000000100035349	xorl	%r15d, %r15d
000000010003534c	leaq	0x10c85(%rip), %rcx
0000000100035353	xorl	%esi, %esi
0000000100035355	nopw	%cs:(%rax,%rax)
000000010003535f	nop
0000000100035360	movq	%r8, %r9
0000000100035363	addq	%rsi, %r9
0000000100035366	je	0x1000353f0
000000010003536c	leaq	-0x1(%rdi), %r9
0000000100035370	incq	%rsi
0000000100035373	cmpb	$0x5f, -0x1(%rdi)
0000000100035377	movq	%r9, %rdi
000000010003537a	jne	0x100035360
000000010003537c	movq	%rsi, %rcx
000000010003537f	subq	%rax, %rcx
0000000100035382	movq	%rcx, %r15
0000000100035385	negq	%r15
0000000100035388	cmpq	%rax, %rsi
000000010003538b	je	0x1000353d3
000000010003538d	cmpq	%rdx, %r15
0000000100035390	jae	0x1000353ce
0000000100035392	cmpb	$-0x41, (%r9)
0000000100035396	jg	0x1000353d3
0000000100035398	leaq	0x148d1(%rip), %r8
000000010003539f	movq	%r14, %rdi
00000001000353a2	movq	%rdx, %rsi
00000001000353a5	xorl	%edx, %edx
00000001000353a7	movq	%r15, %rcx
00000001000353aa	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000353af	movq	%r14, (%rbx)
00000001000353b2	movq	%rdx, 0x8(%rbx)
00000001000353b6	leaq	0x10c1b(%rip), %rax
00000001000353bd	movq	%rax, 0x10(%rbx)
00000001000353c1	movq	$0x0, 0x18(%rbx)
00000001000353c9	jmp	0x1000352eb
00000001000353ce	testq	%rsi, %rsi
00000001000353d1	jne	0x100035398
00000001000353d3	movl	$0x1, %edi
00000001000353d8	subq	%rcx, %rdi
00000001000353db	leaq	0x148a6(%rip), %rcx
00000001000353e2	movq	%r14, %rsi
00000001000353e5	callq	__ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hb827f74006434009E ## core::str::traits::_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$::index::hb827f74006434009
00000001000353ea	movq	%r14, %rcx
00000001000353ed	movq	%rax, %r14
00000001000353f0	testq	%rdx, %rdx
00000001000353f3	je	0x1000352e0
00000001000353f9	movq	%rcx, (%rbx)
00000001000353fc	movq	%r15, 0x8(%rbx)
0000000100035400	movq	%r14, 0x10(%rbx)
0000000100035404	movq	%rdx, 0x18(%rbx)
0000000100035408	jmp	0x1000352eb
000000010003540d	leaq	0x14844(%rip), %r8
0000000100035414	movq	%r9, %rdx
0000000100035417	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003541c	nopl	(%rax)
__ZN14rustc_demangle2v07Printer17skipping_printing17hec91f2e9f07aeac7E:
0000000100035420	pushq	%rbp
0000000100035421	movq	%rsp, %rbp
0000000100035424	pushq	%r14
0000000100035426	pushq	%rbx
0000000100035427	subq	$0x10, %rsp
000000010003542b	movq	%rdi, %rbx
000000010003542e	movq	0x20(%rdi), %r14
0000000100035432	movq	$0x0, 0x20(%rdi)
000000010003543a	xorl	%esi, %esi
000000010003543c	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100035441	testb	%al, %al
0000000100035443	jne	0x100035452
0000000100035445	movq	%r14, 0x20(%rbx)
0000000100035449	addq	$0x10, %rsp
000000010003544d	popq	%rbx
000000010003544e	popq	%r14
0000000100035450	popq	%rbp
0000000100035451	retq
0000000100035452	leaq	0x10d9e(%rip), %rdi
0000000100035459	leaq	0x14410(%rip), %rcx
0000000100035460	leaq	0x14839(%rip), %r8
0000000100035467	leaq	-0x18(%rbp), %rdx
000000010003546b	movl	$0x3d, %esi
0000000100035470	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100035475	nopw	%cs:(%rax,%rax)
000000010003547f	nop
__ZN14rustc_demangle2v07Printer13print_backref17h110002543362aac2E:
0000000100035480	pushq	%rbp
0000000100035481	movq	%rsp, %rbp
0000000100035484	pushq	%r14
0000000100035486	pushq	%rbx
0000000100035487	subq	$0x20, %rsp
000000010003548b	movq	%rdi, %rbx
000000010003548e	movq	(%rdi), %r8
0000000100035491	testq	%r8, %r8
0000000100035494	je	0x100035532
000000010003549a	movq	0x8(%rbx), %r9
000000010003549e	movq	0x10(%rbx), %rdi
00000001000354a2	cmpq	%r9, %rdi
00000001000354a5	jae	0x1000354bd
00000001000354a7	cmpb	$0x5f, (%r8,%rdi)
00000001000354ac	jne	0x1000354bd
00000001000354ae	leaq	0x1(%rdi), %rax
00000001000354b2	movq	%rax, 0x10(%rbx)
00000001000354b6	xorl	%eax, %eax
00000001000354b8	jmp	0x100035564
00000001000354bd	xorl	%eax, %eax
00000001000354bf	movl	$0x3e, %r11d
00000001000354c5	movq	%rdi, %r10
00000001000354c8	nopl	(%rax,%rax)
00000001000354d0	movb	$0x1, %cl
00000001000354d2	cmpq	%r9, %r10
00000001000354d5	jae	0x1000355e3
00000001000354db	movzbl	(%r8,%r10), %edx
00000001000354e0	cmpb	$0x5f, %dl
00000001000354e3	je	0x100035558
00000001000354e5	leal	-0x30(%rdx), %r14d
00000001000354e9	cmpb	$0xa, %r14b
00000001000354ed	jb	0x100035514
00000001000354ef	leal	-0x61(%rdx), %r14d
00000001000354f3	cmpb	$0x1a, %r14b
00000001000354f7	jae	0x100035500
00000001000354f9	addb	$-0x57, %dl
00000001000354fc	jmp	0x100035511
00000001000354fe	nop
0000000100035500	leal	-0x41(%rdx), %r14d
0000000100035504	cmpb	$0x1a, %r14b
0000000100035508	jae	0x1000355e3
000000010003550e	addb	$-0x1d, %dl
0000000100035511	movl	%edx, %r14d
0000000100035514	incq	%r10
0000000100035517	movq	%r10, 0x10(%rbx)
000000010003551b	mulq	%r11
000000010003551e	jo	0x1000355e3
0000000100035524	movzbl	%r14b, %edx
0000000100035528	addq	%rdx, %rax
000000010003552b	jae	0x1000354d0
000000010003552d	jmp	0x1000355e3
0000000100035532	movq	0x20(%rbx), %rdx
0000000100035536	testq	%rdx, %rdx
0000000100035539	je	0x100035629
000000010003553f	leaq	0x10dd5(%rip), %rdi
0000000100035546	movl	$0x1, %esi
000000010003554b	addq	$0x20, %rsp
000000010003554f	popq	%rbx
0000000100035550	popq	%r14
0000000100035552	popq	%rbp
0000000100035553	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035558	incq	%r10
000000010003555b	movq	%r10, 0x10(%rbx)
000000010003555f	incq	%rax
0000000100035562	je	0x1000355e3
0000000100035564	decq	%rdi
0000000100035567	cmpq	%rdi, %rax
000000010003556a	jae	0x1000355e1
000000010003556c	movl	0x18(%rbx), %ecx
000000010003556f	incl	%ecx
0000000100035571	cmpl	$0x1f5, %ecx                    ## imm = 0x1F5
0000000100035577	jae	0x100035634
000000010003557d	cmpq	$0x0, 0x20(%rbx)
0000000100035582	je	0x100035629
0000000100035588	movq	0x18(%rbx), %rdx
000000010003558c	movq	%rdx, -0x18(%rbp)
0000000100035590	movq	0x10(%rbx), %rdx
0000000100035594	movq	%rdx, -0x20(%rbp)
0000000100035598	movq	(%rbx), %rdx
000000010003559b	movq	0x8(%rbx), %rdi
000000010003559f	movq	%rdi, -0x28(%rbp)
00000001000355a3	movq	%rdx, -0x30(%rbp)
00000001000355a7	movq	%rax, 0x10(%rbx)
00000001000355ab	movl	%ecx, 0x18(%rbx)
00000001000355ae	xorl	%eax, %eax
00000001000355b0	testb	%sil, %sil
00000001000355b3	setne	%al
00000001000355b6	movq	%rbx, %rdi
00000001000355b9	movl	%eax, %esi
00000001000355bb	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
00000001000355c0	movq	-0x30(%rbp), %rcx
00000001000355c4	movq	-0x28(%rbp), %rdx
00000001000355c8	movq	%rcx, (%rbx)
00000001000355cb	movq	%rdx, 0x8(%rbx)
00000001000355cf	movq	-0x20(%rbp), %rcx
00000001000355d3	movq	%rcx, 0x10(%rbx)
00000001000355d7	movq	-0x18(%rbp), %rcx
00000001000355db	movq	%rcx, 0x18(%rbx)
00000001000355df	jmp	0x10003562b
00000001000355e1	movb	$0x1, %cl
00000001000355e3	xorl	%r14d, %r14d
00000001000355e6	movq	0x20(%rbx), %rdx
00000001000355ea	testq	%rdx, %rdx
00000001000355ed	je	0x10003561e
00000001000355ef	leaq	0x10f3a(%rip), %rax
00000001000355f6	leaq	0x10d05(%rip), %rdi
00000001000355fd	testb	%cl, %cl
00000001000355ff	cmovneq	%rax, %rdi
0000000100035603	xorb	$0x1, %cl
0000000100035606	movzbl	%cl, %eax
0000000100035609	leaq	(%rax,%rax,8), %rsi
000000010003560d	orq	$0x10, %rsi
0000000100035611	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035616	movl	%eax, %ecx
0000000100035618	movb	$0x1, %al
000000010003561a	testb	%cl, %cl
000000010003561c	jne	0x10003562b
000000010003561e	movq	$0x0, (%rbx)
0000000100035625	movb	%r14b, 0x8(%rbx)
0000000100035629	xorl	%eax, %eax
000000010003562b	addq	$0x20, %rsp
000000010003562f	popq	%rbx
0000000100035630	popq	%r14
0000000100035632	popq	%rbp
0000000100035633	retq
0000000100035634	movb	$0x1, %r14b
0000000100035637	xorl	%ecx, %ecx
0000000100035639	movq	0x20(%rbx), %rdx
000000010003563d	testq	%rdx, %rdx
0000000100035640	jne	0x1000355ef
0000000100035642	jmp	0x10003561e
0000000100035644	nopw	%cs:(%rax,%rax)
000000010003564e	nop
__ZN14rustc_demangle2v07Printer13print_backref17h66acf481824a20dbE:
0000000100035650	pushq	%rbp
0000000100035651	movq	%rsp, %rbp
0000000100035654	pushq	%r14
0000000100035656	pushq	%rbx
0000000100035657	subq	$0x20, %rsp
000000010003565b	movq	%rdi, %rbx
000000010003565e	movq	(%rdi), %rdi
0000000100035661	testq	%rdi, %rdi
0000000100035664	je	0x100035702
000000010003566a	movq	0x8(%rbx), %r8
000000010003566e	movq	0x10(%rbx), %rsi
0000000100035672	cmpq	%r8, %rsi
0000000100035675	jae	0x10003568c
0000000100035677	cmpb	$0x5f, (%rdi,%rsi)
000000010003567b	jne	0x10003568c
000000010003567d	leaq	0x1(%rsi), %rax
0000000100035681	movq	%rax, 0x10(%rbx)
0000000100035685	xorl	%eax, %eax
0000000100035687	jmp	0x100035734
000000010003568c	xorl	%eax, %eax
000000010003568e	movl	$0x3e, %r10d
0000000100035694	movq	%rsi, %r9
0000000100035697	nopw	(%rax,%rax)
00000001000356a0	movb	$0x1, %cl
00000001000356a2	cmpq	%r8, %r9
00000001000356a5	jae	0x1000357a9
00000001000356ab	movzbl	(%rdi,%r9), %edx
00000001000356b0	cmpb	$0x5f, %dl
00000001000356b3	je	0x100035728
00000001000356b5	leal	-0x30(%rdx), %r11d
00000001000356b9	cmpb	$0xa, %r11b
00000001000356bd	jb	0x1000356e4
00000001000356bf	leal	-0x61(%rdx), %r11d
00000001000356c3	cmpb	$0x1a, %r11b
00000001000356c7	jae	0x1000356d0
00000001000356c9	addb	$-0x57, %dl
00000001000356cc	jmp	0x1000356e1
00000001000356ce	nop
00000001000356d0	leal	-0x41(%rdx), %r11d
00000001000356d4	cmpb	$0x1a, %r11b
00000001000356d8	jae	0x1000357a9
00000001000356de	addb	$-0x1d, %dl
00000001000356e1	movl	%edx, %r11d
00000001000356e4	incq	%r9
00000001000356e7	movq	%r9, 0x10(%rbx)
00000001000356eb	mulq	%r10
00000001000356ee	jo	0x1000357a9
00000001000356f4	movzbl	%r11b, %edx
00000001000356f8	addq	%rdx, %rax
00000001000356fb	jae	0x1000356a0
00000001000356fd	jmp	0x1000357a9
0000000100035702	movq	0x20(%rbx), %rdx
0000000100035706	testq	%rdx, %rdx
0000000100035709	je	0x1000357ef
000000010003570f	leaq	0x10c05(%rip), %rdi
0000000100035716	movl	$0x1, %esi
000000010003571b	addq	$0x20, %rsp
000000010003571f	popq	%rbx
0000000100035720	popq	%r14
0000000100035722	popq	%rbp
0000000100035723	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035728	incq	%r9
000000010003572b	movq	%r9, 0x10(%rbx)
000000010003572f	incq	%rax
0000000100035732	je	0x1000357a9
0000000100035734	decq	%rsi
0000000100035737	cmpq	%rsi, %rax
000000010003573a	jae	0x1000357a7
000000010003573c	movl	0x18(%rbx), %ecx
000000010003573f	incl	%ecx
0000000100035741	cmpl	$0x1f5, %ecx                    ## imm = 0x1F5
0000000100035747	jae	0x1000357fa
000000010003574d	cmpq	$0x0, 0x20(%rbx)
0000000100035752	je	0x1000357ef
0000000100035758	movq	0x18(%rbx), %rdx
000000010003575c	movq	%rdx, -0x18(%rbp)
0000000100035760	movq	0x10(%rbx), %rdx
0000000100035764	movq	%rdx, -0x20(%rbp)
0000000100035768	movq	(%rbx), %rdx
000000010003576b	movq	0x8(%rbx), %rsi
000000010003576f	movq	%rsi, -0x28(%rbp)
0000000100035773	movq	%rdx, -0x30(%rbp)
0000000100035777	movq	%rax, 0x10(%rbx)
000000010003577b	movl	%ecx, 0x18(%rbx)
000000010003577e	movq	%rbx, %rdi
0000000100035781	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100035786	movq	-0x30(%rbp), %rcx
000000010003578a	movq	-0x28(%rbp), %rdx
000000010003578e	movq	%rcx, (%rbx)
0000000100035791	movq	%rdx, 0x8(%rbx)
0000000100035795	movq	-0x20(%rbp), %rcx
0000000100035799	movq	%rcx, 0x10(%rbx)
000000010003579d	movq	-0x18(%rbp), %rcx
00000001000357a1	movq	%rcx, 0x18(%rbx)
00000001000357a5	jmp	0x1000357f1
00000001000357a7	movb	$0x1, %cl
00000001000357a9	xorl	%r14d, %r14d
00000001000357ac	movq	0x20(%rbx), %rdx
00000001000357b0	testq	%rdx, %rdx
00000001000357b3	je	0x1000357e4
00000001000357b5	leaq	0x10d74(%rip), %rax
00000001000357bc	leaq	0x10b3f(%rip), %rdi
00000001000357c3	testb	%cl, %cl
00000001000357c5	cmovneq	%rax, %rdi
00000001000357c9	xorb	$0x1, %cl
00000001000357cc	movzbl	%cl, %eax
00000001000357cf	leaq	(%rax,%rax,8), %rsi
00000001000357d3	orq	$0x10, %rsi
00000001000357d7	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000357dc	movl	%eax, %ecx
00000001000357de	movb	$0x1, %al
00000001000357e0	testb	%cl, %cl
00000001000357e2	jne	0x1000357f1
00000001000357e4	movq	$0x0, (%rbx)
00000001000357eb	movb	%r14b, 0x8(%rbx)
00000001000357ef	xorl	%eax, %eax
00000001000357f1	addq	$0x20, %rsp
00000001000357f5	popq	%rbx
00000001000357f6	popq	%r14
00000001000357f8	popq	%rbp
00000001000357f9	retq
00000001000357fa	movb	$0x1, %r14b
00000001000357fd	xorl	%ecx, %ecx
00000001000357ff	movq	0x20(%rbx), %rdx
0000000100035803	testq	%rdx, %rdx
0000000100035806	jne	0x1000357b5
0000000100035808	jmp	0x1000357e4
000000010003580a	nopw	(%rax,%rax)
__ZN14rustc_demangle2v07Printer13print_backref17hd153d2f89f5c54f7E:
0000000100035810	pushq	%rbp
0000000100035811	movq	%rsp, %rbp
0000000100035814	pushq	%r14
0000000100035816	pushq	%rbx
0000000100035817	subq	$0x20, %rsp
000000010003581b	movq	%rdi, %rbx
000000010003581e	movq	(%rdi), %r8
0000000100035821	testq	%r8, %r8
0000000100035824	je	0x1000358c2
000000010003582a	movq	0x8(%rbx), %r9
000000010003582e	movq	0x10(%rbx), %rdi
0000000100035832	cmpq	%r9, %rdi
0000000100035835	jae	0x10003584d
0000000100035837	cmpb	$0x5f, (%r8,%rdi)
000000010003583c	jne	0x10003584d
000000010003583e	leaq	0x1(%rdi), %rax
0000000100035842	movq	%rax, 0x10(%rbx)
0000000100035846	xorl	%eax, %eax
0000000100035848	jmp	0x1000358f4
000000010003584d	xorl	%eax, %eax
000000010003584f	movl	$0x3e, %r11d
0000000100035855	movq	%rdi, %r10
0000000100035858	nopl	(%rax,%rax)
0000000100035860	movb	$0x1, %cl
0000000100035862	cmpq	%r9, %r10
0000000100035865	jae	0x100035973
000000010003586b	movzbl	(%r8,%r10), %edx
0000000100035870	cmpb	$0x5f, %dl
0000000100035873	je	0x1000358e8
0000000100035875	leal	-0x30(%rdx), %r14d
0000000100035879	cmpb	$0xa, %r14b
000000010003587d	jb	0x1000358a4
000000010003587f	leal	-0x61(%rdx), %r14d
0000000100035883	cmpb	$0x1a, %r14b
0000000100035887	jae	0x100035890
0000000100035889	addb	$-0x57, %dl
000000010003588c	jmp	0x1000358a1
000000010003588e	nop
0000000100035890	leal	-0x41(%rdx), %r14d
0000000100035894	cmpb	$0x1a, %r14b
0000000100035898	jae	0x100035973
000000010003589e	addb	$-0x1d, %dl
00000001000358a1	movl	%edx, %r14d
00000001000358a4	incq	%r10
00000001000358a7	movq	%r10, 0x10(%rbx)
00000001000358ab	mulq	%r11
00000001000358ae	jo	0x100035973
00000001000358b4	movzbl	%r14b, %edx
00000001000358b8	addq	%rdx, %rax
00000001000358bb	jae	0x100035860
00000001000358bd	jmp	0x100035973
00000001000358c2	movq	0x20(%rbx), %rdx
00000001000358c6	testq	%rdx, %rdx
00000001000358c9	je	0x1000359b9
00000001000358cf	leaq	0x10a45(%rip), %rdi
00000001000358d6	movl	$0x1, %esi
00000001000358db	addq	$0x20, %rsp
00000001000358df	popq	%rbx
00000001000358e0	popq	%r14
00000001000358e2	popq	%rbp
00000001000358e3	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000358e8	incq	%r10
00000001000358eb	movq	%r10, 0x10(%rbx)
00000001000358ef	incq	%rax
00000001000358f2	je	0x100035973
00000001000358f4	decq	%rdi
00000001000358f7	cmpq	%rdi, %rax
00000001000358fa	jae	0x100035971
00000001000358fc	movl	0x18(%rbx), %ecx
00000001000358ff	incl	%ecx
0000000100035901	cmpl	$0x1f5, %ecx                    ## imm = 0x1F5
0000000100035907	jae	0x1000359c4
000000010003590d	cmpq	$0x0, 0x20(%rbx)
0000000100035912	je	0x1000359b9
0000000100035918	movq	0x18(%rbx), %rdx
000000010003591c	movq	%rdx, -0x18(%rbp)
0000000100035920	movq	0x10(%rbx), %rdx
0000000100035924	movq	%rdx, -0x20(%rbp)
0000000100035928	movq	(%rbx), %rdx
000000010003592b	movq	0x8(%rbx), %rdi
000000010003592f	movq	%rdi, -0x28(%rbp)
0000000100035933	movq	%rdx, -0x30(%rbp)
0000000100035937	movq	%rax, 0x10(%rbx)
000000010003593b	movl	%ecx, 0x18(%rbx)
000000010003593e	xorl	%eax, %eax
0000000100035940	testb	%sil, %sil
0000000100035943	setne	%al
0000000100035946	movq	%rbx, %rdi
0000000100035949	movl	%eax, %esi
000000010003594b	callq	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
0000000100035950	movq	-0x30(%rbp), %rcx
0000000100035954	movq	-0x28(%rbp), %rdx
0000000100035958	movq	%rcx, (%rbx)
000000010003595b	movq	%rdx, 0x8(%rbx)
000000010003595f	movq	-0x20(%rbp), %rcx
0000000100035963	movq	%rcx, 0x10(%rbx)
0000000100035967	movq	-0x18(%rbp), %rcx
000000010003596b	movq	%rcx, 0x18(%rbx)
000000010003596f	jmp	0x1000359bb
0000000100035971	movb	$0x1, %cl
0000000100035973	xorl	%r14d, %r14d
0000000100035976	movq	0x20(%rbx), %rdx
000000010003597a	testq	%rdx, %rdx
000000010003597d	je	0x1000359ae
000000010003597f	leaq	0x10baa(%rip), %rax
0000000100035986	leaq	0x10975(%rip), %rdi
000000010003598d	testb	%cl, %cl
000000010003598f	cmovneq	%rax, %rdi
0000000100035993	xorb	$0x1, %cl
0000000100035996	movzbl	%cl, %eax
0000000100035999	leaq	(%rax,%rax,8), %rsi
000000010003599d	orq	$0x10, %rsi
00000001000359a1	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000359a6	movl	%eax, %ecx
00000001000359a8	movb	$0x1, %al
00000001000359aa	testb	%cl, %cl
00000001000359ac	jne	0x1000359bb
00000001000359ae	movq	$0x0, (%rbx)
00000001000359b5	movb	%r14b, 0x8(%rbx)
00000001000359b9	xorl	%eax, %eax
00000001000359bb	addq	$0x20, %rsp
00000001000359bf	popq	%rbx
00000001000359c0	popq	%r14
00000001000359c2	popq	%rbp
00000001000359c3	retq
00000001000359c4	movb	$0x1, %r14b
00000001000359c7	xorl	%ecx, %ecx
00000001000359c9	movq	0x20(%rbx), %rdx
00000001000359cd	testq	%rdx, %rdx
00000001000359d0	jne	0x10003597f
00000001000359d2	jmp	0x1000359ae
00000001000359d4	nopw	%cs:(%rax,%rax)
00000001000359de	nop
__ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h6ccc261c13e6f737E:
00000001000359e0	pushq	%rbp
00000001000359e1	movq	%rsp, %rbp
00000001000359e4	pushq	%r15
00000001000359e6	pushq	%r14
00000001000359e8	pushq	%r13
00000001000359ea	pushq	%r12
00000001000359ec	pushq	%rbx
00000001000359ed	subq	$0x28, %rsp
00000001000359f1	testq	%rdi, %rdi
00000001000359f4	je	0x100035ac0
00000001000359fa	movl	%esi, %r13d
00000001000359fd	movq	%rdi, %r14
0000000100035a00	movl	$0x27, %esi
0000000100035a05	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
0000000100035a0a	movb	$0x1, %bl
0000000100035a0c	testb	%al, %al
0000000100035a0e	jne	0x100035ac2
0000000100035a14	leaq	-0x48(%rbp), %r15
0000000100035a18	leaq	-0x38(%rbp), %r12
0000000100035a1c	cmpl	$0x22, %r13d
0000000100035a20	jne	0x100035a43
0000000100035a22	movq	%r14, %rdi
0000000100035a25	movl	$0x22, %esi
0000000100035a2a	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
0000000100035a2f	movl	$0x110000, %r13d                ## imm = 0x110000
0000000100035a35	testb	%al, %al
0000000100035a37	jne	0x100035ac2
0000000100035a3d	cmpl	$0x22, %r13d
0000000100035a41	je	0x100035a22
0000000100035a43	cmpl	$0x110000, %r13d                ## imm = 0x110000
0000000100035a4a	je	0x100035ad3
0000000100035a50	movq	%r15, %rdi
0000000100035a53	movl	%r13d, %esi
0000000100035a56	callq	__ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h99e3bb949009c8b4E ## core::char::methods::_$LT$impl$u20$char$GT$::escape_debug_ext::h99e3bb949009c8b4
0000000100035a5b	movl	-0x40(%rbp), %eax
0000000100035a5e	movl	%eax, -0x30(%rbp)
0000000100035a61	movq	-0x48(%rbp), %rax
0000000100035a65	movq	%rax, -0x38(%rbp)
0000000100035a69	jmp	0x100035a8b
0000000100035a6b	nopl	(%rax,%rax)
0000000100035a70	movl	-0x34(%rbp), %r13d
0000000100035a74	movq	%r12, %rdi
0000000100035a77	callq	__ZN4core4char11EscapeDebug5clear17hcf380bd05808c8daE ## core::char::EscapeDebug::clear::hcf380bd05808c8da
0000000100035a7c	movq	%r14, %rdi
0000000100035a7f	movl	%r13d, %esi
0000000100035a82	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
0000000100035a87	testb	%al, %al
0000000100035a89	jne	0x100035ac2
0000000100035a8b	cmpb	$-0x80, -0x38(%rbp)
0000000100035a8f	je	0x100035a70
0000000100035a91	movzbl	-0x2e(%rbp), %edi
0000000100035a95	cmpb	-0x2d(%rbp), %dil
0000000100035a99	jae	0x100035aaf
0000000100035a9b	leal	0x1(%rdi), %eax
0000000100035a9e	movb	%al, -0x2e(%rbp)
0000000100035aa1	cmpb	$0xa, %dil
0000000100035aa5	jae	0x100035ae4
0000000100035aa7	movzbl	-0x38(%rbp,%rdi), %r13d
0000000100035aad	jmp	0x100035a7c
0000000100035aaf	movl	$0x110000, %r13d                ## imm = 0x110000
0000000100035ab5	cmpl	$0x22, %r13d
0000000100035ab9	jne	0x100035a43
0000000100035abb	jmp	0x100035a22
0000000100035ac0	xorl	%ebx, %ebx
0000000100035ac2	movl	%ebx, %eax
0000000100035ac4	addq	$0x28, %rsp
0000000100035ac8	popq	%rbx
0000000100035ac9	popq	%r12
0000000100035acb	popq	%r13
0000000100035acd	popq	%r14
0000000100035acf	popq	%r15
0000000100035ad1	popq	%rbp
0000000100035ad2	retq
0000000100035ad3	movq	%r14, %rdi
0000000100035ad6	movl	$0x27, %esi
0000000100035adb	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
0000000100035ae0	movl	%eax, %ebx
0000000100035ae2	jmp	0x100035ac2
0000000100035ae4	leaq	0x13d4d(%rip), %rdx
0000000100035aeb	movl	$0xa, %esi
0000000100035af0	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100035af5	nopw	%cs:(%rax,%rax)
0000000100035aff	nop
__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E:
0000000100035b00	pushq	%rbp
0000000100035b01	movq	%rsp, %rbp
0000000100035b04	pushq	%r15
0000000100035b06	pushq	%r14
0000000100035b08	pushq	%r13
0000000100035b0a	pushq	%r12
0000000100035b0c	pushq	%rbx
0000000100035b0d	subq	$0x18, %rsp
0000000100035b11	movq	0x20(%rdi), %rbx
0000000100035b15	testq	%rbx, %rbx
0000000100035b18	je	0x100035b6d
0000000100035b1a	movq	%rsi, %r12
0000000100035b1d	movq	%rdi, %r15
0000000100035b20	leaq	0x107f5(%rip), %rdi
0000000100035b27	movl	$0x1, %esi
0000000100035b2c	movq	%rbx, %rdx
0000000100035b2f	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035b34	movb	$0x1, %r14b
0000000100035b37	testb	%al, %al
0000000100035b39	jne	0x100035b70
0000000100035b3b	testq	%r12, %r12
0000000100035b3e	je	0x100035b82
0000000100035b40	movl	0x28(%r15), %r13d
0000000100035b44	subq	%r12, %r13
0000000100035b47	jae	0x100035ba4
0000000100035b49	leaq	0x109e0(%rip), %rdi
0000000100035b50	movl	$0x10, %esi
0000000100035b55	movq	%rbx, %rdx
0000000100035b58	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035b5d	testb	%al, %al
0000000100035b5f	jne	0x100035b70
0000000100035b61	movq	$0x0, (%r15)
0000000100035b68	movb	$0x0, 0x8(%r15)
0000000100035b6d	xorl	%r14d, %r14d
0000000100035b70	movl	%r14d, %eax
0000000100035b73	addq	$0x18, %rsp
0000000100035b77	popq	%rbx
0000000100035b78	popq	%r12
0000000100035b7a	popq	%r13
0000000100035b7c	popq	%r14
0000000100035b7e	popq	%r15
0000000100035b80	popq	%rbp
0000000100035b81	retq
0000000100035b82	leaq	0x10775(%rip), %rdi
0000000100035b89	movl	$0x1, %esi
0000000100035b8e	movq	%rbx, %rdx
0000000100035b91	addq	$0x18, %rsp
0000000100035b95	popq	%rbx
0000000100035b96	popq	%r12
0000000100035b98	popq	%r13
0000000100035b9a	popq	%r14
0000000100035b9c	popq	%r15
0000000100035b9e	popq	%rbp
0000000100035b9f	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035ba4	cmpq	$0x1a, %r13
0000000100035ba8	jae	0x100035bc3
0000000100035baa	addl	$0x61, %r13d
0000000100035bae	movl	%r13d, -0x2c(%rbp)
0000000100035bb2	leaq	-0x2c(%rbp), %rdi
0000000100035bb6	movq	%rbx, %rsi
0000000100035bb9	callq	__ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h58c8d2487b4b288dE ## _$LT$char$u20$as$u20$core..fmt..Display$GT$::fmt::h58c8d2487b4b288d
0000000100035bbe	movl	%eax, %r14d
0000000100035bc1	jmp	0x100035b70
0000000100035bc3	leaq	0x10734(%rip), %rdi
0000000100035bca	movl	$0x1, %esi
0000000100035bcf	movq	%rbx, %rdx
0000000100035bd2	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035bd7	testb	%al, %al
0000000100035bd9	jne	0x100035b70
0000000100035bdb	movq	%r13, -0x38(%rbp)
0000000100035bdf	leaq	-0x38(%rbp), %rdi
0000000100035be3	movq	%rbx, %rsi
0000000100035be6	callq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
0000000100035beb	movl	%eax, %r14d
0000000100035bee	jmp	0x100035b70
__ZN14rustc_demangle2v07Printer9in_binder17h0660b04b144d8e43E:
0000000100035bf0	pushq	%rbp
0000000100035bf1	movq	%rsp, %rbp
0000000100035bf4	pushq	%r15
0000000100035bf6	pushq	%r14
0000000100035bf8	pushq	%r13
0000000100035bfa	pushq	%r12
0000000100035bfc	pushq	%rbx
0000000100035bfd	pushq	%rax
0000000100035bfe	movq	%rdi, %rbx
0000000100035c01	movq	(%rdi), %rcx
0000000100035c04	testq	%rcx, %rcx
0000000100035c07	je	0x100035cf8
0000000100035c0d	movq	0x8(%rbx), %rsi
0000000100035c11	movq	0x10(%rbx), %rax
0000000100035c15	cmpq	%rsi, %rax
0000000100035c18	jae	0x100035c4b
0000000100035c1a	cmpb	$0x47, (%rcx,%rax)
0000000100035c1e	jne	0x100035c4b
0000000100035c20	leaq	0x1(%rax), %rdi
0000000100035c24	movq	%rdi, 0x10(%rbx)
0000000100035c28	cmpq	%rsi, %rdi
0000000100035c2b	jae	0x100035d84
0000000100035c31	cmpb	$0x5f, (%rcx,%rdi)
0000000100035c35	jne	0x100035d84
0000000100035c3b	addq	$0x2, %rax
0000000100035c3f	movq	%rax, 0x10(%rbx)
0000000100035c43	xorl	%r14d, %r14d
0000000100035c46	jmp	0x100035e0d
0000000100035c4b	xorl	%r14d, %r14d
0000000100035c4e	movq	0x20(%rbx), %rdx
0000000100035c52	testq	%rdx, %rdx
0000000100035c55	je	0x100035d20
0000000100035c5b	testq	%r14, %r14
0000000100035c5e	je	0x100035e6c
0000000100035c64	leaq	0x108a1(%rip), %rdi
0000000100035c6b	movl	$0x4, %esi
0000000100035c70	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035c75	movb	$0x1, %r15b
0000000100035c78	testb	%al, %al
0000000100035c7a	jne	0x100035ed9
0000000100035c80	incl	0x28(%rbx)
0000000100035c83	movl	$0x1, %r13d
0000000100035c89	movl	$0x1, %esi
0000000100035c8e	movq	%rbx, %rdi
0000000100035c91	callq	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100035c96	testb	%al, %al
0000000100035c98	jne	0x100035ed9
0000000100035c9e	leaq	0x1067a(%rip), %r12
0000000100035ca5	jmp	0x100035ccb
0000000100035ca7	nopw	(%rax,%rax)
0000000100035cb0	incl	0x28(%rbx)
0000000100035cb3	movl	$0x1, %esi
0000000100035cb8	movq	%rbx, %rdi
0000000100035cbb	callq	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100035cc0	incq	%r13
0000000100035cc3	testb	%al, %al
0000000100035cc5	jne	0x100035ed9
0000000100035ccb	cmpq	%r13, %r14
0000000100035cce	je	0x100035e4e
0000000100035cd4	testq	%r13, %r13
0000000100035cd7	je	0x100035cb0
0000000100035cd9	movq	0x20(%rbx), %rdx
0000000100035cdd	testq	%rdx, %rdx
0000000100035ce0	je	0x100035cb0
0000000100035ce2	movl	$0x2, %esi
0000000100035ce7	movq	%r12, %rdi
0000000100035cea	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035cef	testb	%al, %al
0000000100035cf1	je	0x100035cb0
0000000100035cf3	jmp	0x100035ed9
0000000100035cf8	movq	0x20(%rbx), %rdx
0000000100035cfc	testq	%rdx, %rdx
0000000100035cff	je	0x100035d7c
0000000100035d01	leaq	0x10613(%rip), %rdi
0000000100035d08	movl	$0x1, %esi
0000000100035d0d	addq	$0x8, %rsp
0000000100035d11	popq	%rbx
0000000100035d12	popq	%r12
0000000100035d14	popq	%r13
0000000100035d16	popq	%r14
0000000100035d18	popq	%r15
0000000100035d1a	popq	%rbp
0000000100035d1b	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035d20	xorl	%r15d, %r15d
0000000100035d23	leaq	0x1060e(%rip), %r14
0000000100035d2a	nopw	(%rax,%rax)
0000000100035d30	movq	0x10(%rbx), %rax
0000000100035d34	cmpq	0x8(%rbx), %rax
0000000100035d38	jae	0x100035d44
0000000100035d3a	cmpb	$0x45, (%rcx,%rax)
0000000100035d3e	je	0x100035df2
0000000100035d44	subq	$0x1, %r15
0000000100035d48	jb	0x100035d68
0000000100035d4a	movq	0x20(%rbx), %rdx
0000000100035d4e	testq	%rdx, %rdx
0000000100035d51	je	0x100035d68
0000000100035d53	movl	$0x3, %esi
0000000100035d58	movq	%r14, %rdi
0000000100035d5b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035d60	testb	%al, %al
0000000100035d62	jne	0x100035dea
0000000100035d68	movq	%rbx, %rdi
0000000100035d6b	callq	__ZN14rustc_demangle2v07Printer15print_dyn_trait17he3ecae93ee065759E ## rustc_demangle::v0::Printer::print_dyn_trait::he3ecae93ee065759
0000000100035d70	testb	%al, %al
0000000100035d72	jne	0x100035dea
0000000100035d74	movq	(%rbx), %rcx
0000000100035d77	testq	%rcx, %rcx
0000000100035d7a	jne	0x100035d30
0000000100035d7c	xorl	%r15d, %r15d
0000000100035d7f	jmp	0x100035ed9
0000000100035d84	xorl	%r14d, %r14d
0000000100035d87	movl	$0x3e, %r8d
0000000100035d8d	nopl	(%rax)
0000000100035d90	cmpq	%rsi, %rdi
0000000100035d93	jae	0x100035e16
0000000100035d99	movzbl	(%rcx,%rdi), %eax
0000000100035d9d	cmpb	$0x5f, %al
0000000100035d9f	je	0x100035e01
0000000100035da1	leal	-0x30(%rax), %r9d
0000000100035da5	cmpb	$0xa, %r9b
0000000100035da9	jb	0x100035dcd
0000000100035dab	leal	-0x61(%rax), %edx
0000000100035dae	cmpb	$0x1a, %dl
0000000100035db1	jae	0x100035dc0
0000000100035db3	addb	$-0x57, %al
0000000100035db5	jmp	0x100035dca
0000000100035db7	nopw	(%rax,%rax)
0000000100035dc0	leal	-0x41(%rax), %edx
0000000100035dc3	cmpb	$0x1a, %dl
0000000100035dc6	jae	0x100035e16
0000000100035dc8	addb	$-0x1d, %al
0000000100035dca	movl	%eax, %r9d
0000000100035dcd	incq	%rdi
0000000100035dd0	movq	%rdi, 0x10(%rbx)
0000000100035dd4	movq	%r14, %rax
0000000100035dd7	mulq	%r8
0000000100035dda	jo	0x100035e16
0000000100035ddc	movq	%rax, %r14
0000000100035ddf	movzbl	%r9b, %eax
0000000100035de3	addq	%rax, %r14
0000000100035de6	jae	0x100035d90
0000000100035de8	jmp	0x100035e16
0000000100035dea	movb	$0x1, %r15b
0000000100035ded	jmp	0x100035ed9
0000000100035df2	incq	%rax
0000000100035df5	movq	%rax, 0x10(%rbx)
0000000100035df9	xorl	%r15d, %r15d
0000000100035dfc	jmp	0x100035ed9
0000000100035e01	incq	%rdi
0000000100035e04	movq	%rdi, 0x10(%rbx)
0000000100035e08	incq	%r14
0000000100035e0b	je	0x100035e16
0000000100035e0d	incq	%r14
0000000100035e10	jne	0x100035c4e
0000000100035e16	movq	0x20(%rbx), %rdx
0000000100035e1a	testq	%rdx, %rdx
0000000100035e1d	je	0x100035e3b
0000000100035e1f	leaq	0x1070a(%rip), %rdi
0000000100035e26	movl	$0x10, %esi
0000000100035e2b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035e30	movb	$0x1, %r15b
0000000100035e33	testb	%al, %al
0000000100035e35	jne	0x100035ed9
0000000100035e3b	movq	$0x0, (%rbx)
0000000100035e42	movb	$0x0, 0x8(%rbx)
0000000100035e46	xorl	%r15d, %r15d
0000000100035e49	jmp	0x100035ed9
0000000100035e4e	movq	0x20(%rbx), %rdx
0000000100035e52	testq	%rdx, %rdx
0000000100035e55	je	0x100035e6c
0000000100035e57	leaq	0x104bf(%rip), %rdi
0000000100035e5e	movl	$0x2, %esi
0000000100035e63	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035e68	testb	%al, %al
0000000100035e6a	jne	0x100035ed9
0000000100035e6c	movq	(%rbx), %rax
0000000100035e6f	testq	%rax, %rax
0000000100035e72	je	0x100035ed2
0000000100035e74	xorl	%r12d, %r12d
0000000100035e77	leaq	0x104ba(%rip), %r15
0000000100035e7e	nop
0000000100035e80	movq	0x10(%rbx), %rcx
0000000100035e84	cmpq	0x8(%rbx), %rcx
0000000100035e88	jae	0x100035e90
0000000100035e8a	cmpb	$0x45, (%rax,%rcx)
0000000100035e8e	je	0x100035ecb
0000000100035e90	subq	$0x1, %r12
0000000100035e94	jb	0x100035eb0
0000000100035e96	movq	0x20(%rbx), %rdx
0000000100035e9a	testq	%rdx, %rdx
0000000100035e9d	je	0x100035eb0
0000000100035e9f	movl	$0x3, %esi
0000000100035ea4	movq	%r15, %rdi
0000000100035ea7	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035eac	testb	%al, %al
0000000100035eae	jne	0x100035ec6
0000000100035eb0	movq	%rbx, %rdi
0000000100035eb3	callq	__ZN14rustc_demangle2v07Printer15print_dyn_trait17he3ecae93ee065759E ## rustc_demangle::v0::Printer::print_dyn_trait::he3ecae93ee065759
0000000100035eb8	testb	%al, %al
0000000100035eba	jne	0x100035ec6
0000000100035ebc	movq	(%rbx), %rax
0000000100035ebf	testq	%rax, %rax
0000000100035ec2	jne	0x100035e80
0000000100035ec4	jmp	0x100035ed2
0000000100035ec6	movb	$0x1, %r15b
0000000100035ec9	jmp	0x100035ed5
0000000100035ecb	incq	%rcx
0000000100035ece	movq	%rcx, 0x10(%rbx)
0000000100035ed2	xorl	%r15d, %r15d
0000000100035ed5	subl	%r14d, 0x28(%rbx)
0000000100035ed9	movl	%r15d, %eax
0000000100035edc	addq	$0x8, %rsp
0000000100035ee0	popq	%rbx
0000000100035ee1	popq	%r12
0000000100035ee3	popq	%r13
0000000100035ee5	popq	%r14
0000000100035ee7	popq	%r15
0000000100035ee9	popq	%rbp
0000000100035eea	retq
0000000100035eeb	nopl	(%rax,%rax)
__ZN14rustc_demangle2v07Printer9in_binder17h63706541515ae011E:
0000000100035ef0	pushq	%rbp
0000000100035ef1	movq	%rsp, %rbp
0000000100035ef4	pushq	%r15
0000000100035ef6	pushq	%r14
0000000100035ef8	pushq	%r13
0000000100035efa	pushq	%r12
0000000100035efc	pushq	%rbx
0000000100035efd	pushq	%rax
0000000100035efe	movq	%rdi, %rbx
0000000100035f01	movq	(%rdi), %rcx
0000000100035f04	testq	%rcx, %rcx
0000000100035f07	je	0x100035ff8
0000000100035f0d	movq	0x8(%rbx), %rsi
0000000100035f11	movq	0x10(%rbx), %rax
0000000100035f15	cmpq	%rsi, %rax
0000000100035f18	jae	0x100035f4b
0000000100035f1a	cmpb	$0x47, (%rcx,%rax)
0000000100035f1e	jne	0x100035f4b
0000000100035f20	leaq	0x1(%rax), %rdi
0000000100035f24	movq	%rdi, 0x10(%rbx)
0000000100035f28	cmpq	%rsi, %rdi
0000000100035f2b	jae	0x10003603a
0000000100035f31	cmpb	$0x5f, (%rcx,%rdi)
0000000100035f35	jne	0x10003603a
0000000100035f3b	addq	$0x2, %rax
0000000100035f3f	movq	%rax, 0x10(%rbx)
0000000100035f43	xorl	%r14d, %r14d
0000000100035f46	jmp	0x1000360b6
0000000100035f4b	xorl	%r14d, %r14d
0000000100035f4e	movq	0x20(%rbx), %rdx
0000000100035f52	testq	%rdx, %rdx
0000000100035f55	je	0x100036024
0000000100035f5b	testq	%r14, %r14
0000000100035f5e	je	0x100036111
0000000100035f64	leaq	0x105a1(%rip), %rdi
0000000100035f6b	movl	$0x4, %esi
0000000100035f70	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035f75	movb	$0x1, %r15b
0000000100035f78	testb	%al, %al
0000000100035f7a	jne	0x1000360ee
0000000100035f80	incl	0x28(%rbx)
0000000100035f83	movl	$0x1, %r13d
0000000100035f89	movl	$0x1, %esi
0000000100035f8e	movq	%rbx, %rdi
0000000100035f91	callq	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100035f96	testb	%al, %al
0000000100035f98	jne	0x1000360ee
0000000100035f9e	leaq	0x1037a(%rip), %r12
0000000100035fa5	jmp	0x100035fcb
0000000100035fa7	nopw	(%rax,%rax)
0000000100035fb0	incl	0x28(%rbx)
0000000100035fb3	movl	$0x1, %esi
0000000100035fb8	movq	%rbx, %rdi
0000000100035fbb	callq	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100035fc0	incq	%r13
0000000100035fc3	testb	%al, %al
0000000100035fc5	jne	0x1000360ee
0000000100035fcb	cmpq	%r13, %r14
0000000100035fce	je	0x1000360f3
0000000100035fd4	testq	%r13, %r13
0000000100035fd7	je	0x100035fb0
0000000100035fd9	movq	0x20(%rbx), %rdx
0000000100035fdd	testq	%rdx, %rdx
0000000100035fe0	je	0x100035fb0
0000000100035fe2	movl	$0x2, %esi
0000000100035fe7	movq	%r12, %rdi
0000000100035fea	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100035fef	testb	%al, %al
0000000100035ff1	je	0x100035fb0
0000000100035ff3	jmp	0x1000360ee
0000000100035ff8	movq	0x20(%rbx), %rdx
0000000100035ffc	testq	%rdx, %rdx
0000000100035fff	je	0x1000360eb
0000000100036005	leaq	0x1030f(%rip), %rdi
000000010003600c	movl	$0x1, %esi
0000000100036011	addq	$0x8, %rsp
0000000100036015	popq	%rbx
0000000100036016	popq	%r12
0000000100036018	popq	%r13
000000010003601a	popq	%r14
000000010003601c	popq	%r15
000000010003601e	popq	%rbp
000000010003601f	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036024	movq	%rbx, %rdi
0000000100036027	addq	$0x8, %rsp
000000010003602b	popq	%rbx
000000010003602c	popq	%r12
000000010003602e	popq	%r13
0000000100036030	popq	%r14
0000000100036032	popq	%r15
0000000100036034	popq	%rbp
0000000100036035	jmp	__ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h21c0bb4b8d1f80d9E ## rustc_demangle::v0::Printer::print_type::_$u7b$$u7b$closure$u7d$$u7d$::h21c0bb4b8d1f80d9
000000010003603a	xorl	%r14d, %r14d
000000010003603d	movl	$0x3e, %r8d
0000000100036043	nopw	%cs:(%rax,%rax)
000000010003604d	nopl	(%rax)
0000000100036050	cmpq	%rsi, %rdi
0000000100036053	jae	0x1000360bf
0000000100036055	movzbl	(%rcx,%rdi), %eax
0000000100036059	cmpb	$0x5f, %al
000000010003605b	je	0x1000360aa
000000010003605d	leal	-0x30(%rax), %r9d
0000000100036061	cmpb	$0xa, %r9b
0000000100036065	jb	0x10003608d
0000000100036067	leal	-0x61(%rax), %edx
000000010003606a	cmpb	$0x1a, %dl
000000010003606d	jae	0x100036080
000000010003606f	addb	$-0x57, %al
0000000100036071	jmp	0x10003608a
0000000100036073	nopw	%cs:(%rax,%rax)
000000010003607d	nopl	(%rax)
0000000100036080	leal	-0x41(%rax), %edx
0000000100036083	cmpb	$0x1a, %dl
0000000100036086	jae	0x1000360bf
0000000100036088	addb	$-0x1d, %al
000000010003608a	movl	%eax, %r9d
000000010003608d	incq	%rdi
0000000100036090	movq	%rdi, 0x10(%rbx)
0000000100036094	movq	%r14, %rax
0000000100036097	mulq	%r8
000000010003609a	jo	0x1000360bf
000000010003609c	movq	%rax, %r14
000000010003609f	movzbl	%r9b, %eax
00000001000360a3	addq	%rax, %r14
00000001000360a6	jae	0x100036050
00000001000360a8	jmp	0x1000360bf
00000001000360aa	incq	%rdi
00000001000360ad	movq	%rdi, 0x10(%rbx)
00000001000360b1	incq	%r14
00000001000360b4	je	0x1000360bf
00000001000360b6	incq	%r14
00000001000360b9	jne	0x100035f4e
00000001000360bf	movq	0x20(%rbx), %rdx
00000001000360c3	testq	%rdx, %rdx
00000001000360c6	je	0x1000360e0
00000001000360c8	leaq	0x10461(%rip), %rdi
00000001000360cf	movl	$0x10, %esi
00000001000360d4	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000360d9	movb	$0x1, %r15b
00000001000360dc	testb	%al, %al
00000001000360de	jne	0x1000360ee
00000001000360e0	movq	$0x0, (%rbx)
00000001000360e7	movb	$0x0, 0x8(%rbx)
00000001000360eb	xorl	%r15d, %r15d
00000001000360ee	movl	%r15d, %eax
00000001000360f1	jmp	0x10003611d
00000001000360f3	movq	0x20(%rbx), %rdx
00000001000360f7	testq	%rdx, %rdx
00000001000360fa	je	0x100036111
00000001000360fc	leaq	0x1021a(%rip), %rdi
0000000100036103	movl	$0x2, %esi
0000000100036108	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003610d	testb	%al, %al
000000010003610f	jne	0x1000360ee
0000000100036111	movq	%rbx, %rdi
0000000100036114	callq	__ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h21c0bb4b8d1f80d9E ## rustc_demangle::v0::Printer::print_type::_$u7b$$u7b$closure$u7d$$u7d$::h21c0bb4b8d1f80d9
0000000100036119	subl	%r14d, 0x28(%rbx)
000000010003611d	addq	$0x8, %rsp
0000000100036121	popq	%rbx
0000000100036122	popq	%r12
0000000100036124	popq	%r13
0000000100036126	popq	%r14
0000000100036128	popq	%r15
000000010003612a	popq	%rbp
000000010003612b	retq
000000010003612c	nopl	(%rax)
__ZN14rustc_demangle2v07Printer14print_sep_list17h35617fa381618f67E:
0000000100036130	pushq	%rbp
0000000100036131	movq	%rsp, %rbp
0000000100036134	pushq	%r15
0000000100036136	pushq	%r14
0000000100036138	pushq	%r12
000000010003613a	pushq	%rbx
000000010003613b	movq	(%rdi), %rax
000000010003613e	testq	%rax, %rax
0000000100036141	je	0x1000361a8
0000000100036143	movq	%rdi, %r15
0000000100036146	xorl	%r14d, %r14d
0000000100036149	leaq	0x101cf(%rip), %r12
0000000100036150	xorl	%ebx, %ebx
0000000100036152	nopw	%cs:(%rax,%rax)
000000010003615c	nopl	(%rax)
0000000100036160	movq	0x10(%r15), %rcx
0000000100036164	cmpq	0x8(%r15), %rcx
0000000100036168	jae	0x100036170
000000010003616a	cmpb	$0x45, (%rax,%rcx)
000000010003616e	je	0x1000361b4
0000000100036170	testq	%rbx, %rbx
0000000100036173	je	0x10003618f
0000000100036175	movq	0x20(%r15), %rdx
0000000100036179	testq	%rdx, %rdx
000000010003617c	je	0x10003618f
000000010003617e	movl	$0x2, %esi
0000000100036183	movq	%r12, %rdi
0000000100036186	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003618b	testb	%al, %al
000000010003618d	jne	0x1000361ac
000000010003618f	movq	%r15, %rdi
0000000100036192	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100036197	testb	%al, %al
0000000100036199	jne	0x1000361ac
000000010003619b	incq	%rbx
000000010003619e	movq	(%r15), %rax
00000001000361a1	testq	%rax, %rax
00000001000361a4	jne	0x100036160
00000001000361a6	jmp	0x1000361be
00000001000361a8	xorl	%ebx, %ebx
00000001000361aa	jmp	0x1000361bb
00000001000361ac	movl	$0x1, %r14d
00000001000361b2	jmp	0x1000361be
00000001000361b4	incq	%rcx
00000001000361b7	movq	%rcx, 0x10(%r15)
00000001000361bb	xorl	%r14d, %r14d
00000001000361be	movq	%r14, %rax
00000001000361c1	movq	%rbx, %rdx
00000001000361c4	popq	%rbx
00000001000361c5	popq	%r12
00000001000361c7	popq	%r14
00000001000361c9	popq	%r15
00000001000361cb	popq	%rbp
00000001000361cc	retq
00000001000361cd	nopl	(%rax)
__ZN14rustc_demangle2v07Printer14print_sep_list17h3f0f13fa992c4172E:
00000001000361d0	pushq	%rbp
00000001000361d1	movq	%rsp, %rbp
00000001000361d4	pushq	%r15
00000001000361d6	pushq	%r14
00000001000361d8	pushq	%r13
00000001000361da	pushq	%r12
00000001000361dc	pushq	%rbx
00000001000361dd	subq	$0x48, %rsp
00000001000361e1	movq	(%rdi), %rcx
00000001000361e4	testq	%rcx, %rcx
00000001000361e7	je	0x100036459
00000001000361ed	movq	%rdi, %rbx
00000001000361f0	movl	$0x3e, %r15d
00000001000361f6	leaq	-0x48(%rbp), %r14
00000001000361fa	xorl	%r13d, %r13d
00000001000361fd	jmp	0x100036224
00000001000361ff	nop
0000000100036200	movq	%rbx, %rdi
0000000100036203	movl	$0x1, %esi
0000000100036208	callq	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
000000010003620d	testb	%al, %al
000000010003620f	jne	0x100036446
0000000100036215	movq	(%rbx), %rcx
0000000100036218	incq	%r13
000000010003621b	testq	%rcx, %rcx
000000010003621e	je	0x100036459
0000000100036224	movq	0x10(%rbx), %rax
0000000100036228	cmpq	0x8(%rbx), %rax
000000010003622c	jae	0x100036238
000000010003622e	cmpb	$0x45, (%rcx,%rax)
0000000100036232	je	0x10003646e
0000000100036238	testq	%r13, %r13
000000010003623b	je	0x10003626b
000000010003623d	movq	0x20(%rbx), %rdx
0000000100036241	testq	%rdx, %rdx
0000000100036244	je	0x10003626b
0000000100036246	movl	$0x2, %esi
000000010003624b	leaq	0x100cd(%rip), %rdi
0000000100036252	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036257	testb	%al, %al
0000000100036259	jne	0x100036446
000000010003625f	movq	(%rbx), %rcx
0000000100036262	testq	%rcx, %rcx
0000000100036265	je	0x100036312
000000010003626b	movq	0x8(%rbx), %rsi
000000010003626f	movq	0x10(%rbx), %rax
0000000100036273	cmpq	%rsi, %rax
0000000100036276	jae	0x100036360
000000010003627c	cmpb	$0x73, (%rcx,%rax)
0000000100036280	jne	0x100036360
0000000100036286	leaq	0x1(%rax), %rdi
000000010003628a	movq	%rdi, 0x10(%rbx)
000000010003628e	cmpq	%rsi, %rdi
0000000100036291	jae	0x1000362a6
0000000100036293	cmpb	$0x5f, (%rcx,%rdi)
0000000100036297	jne	0x1000362a6
0000000100036299	addq	$0x2, %rax
000000010003629d	movq	%rax, 0x10(%rbx)
00000001000362a1	jmp	0x100036360
00000001000362a6	xorl	%eax, %eax
00000001000362a8	nopl	(%rax,%rax)
00000001000362b0	cmpq	%rsi, %rdi
00000001000362b3	jae	0x100036428
00000001000362b9	movzbl	(%rcx,%rdi), %edx
00000001000362bd	cmpb	$0x5f, %dl
00000001000362c0	je	0x100036343
00000001000362c6	leal	-0x30(%rdx), %r8d
00000001000362ca	cmpb	$0xa, %r8b
00000001000362ce	jb	0x1000362f4
00000001000362d0	leal	-0x61(%rdx), %r8d
00000001000362d4	cmpb	$0x1a, %r8b
00000001000362d8	jae	0x1000362e0
00000001000362da	addb	$-0x57, %dl
00000001000362dd	jmp	0x1000362f1
00000001000362df	nop
00000001000362e0	leal	-0x41(%rdx), %r8d
00000001000362e4	cmpb	$0x1a, %r8b
00000001000362e8	jae	0x100036428
00000001000362ee	addb	$-0x1d, %dl
00000001000362f1	movl	%edx, %r8d
00000001000362f4	incq	%rdi
00000001000362f7	movq	%rdi, 0x10(%rbx)
00000001000362fb	mulq	%r15
00000001000362fe	jo	0x100036428
0000000100036304	movzbl	%r8b, %edx
0000000100036308	addq	%rdx, %rax
000000010003630b	jae	0x1000362b0
000000010003630d	jmp	0x100036428
0000000100036312	movq	0x20(%rbx), %rdx
0000000100036316	testq	%rdx, %rdx
0000000100036319	je	0x100036459
000000010003631f	movl	$0x1, %r12d
0000000100036325	movl	$0x1, %esi
000000010003632a	leaq	0xffea(%rip), %rdi
0000000100036331	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036336	testb	%al, %al
0000000100036338	je	0x100036215
000000010003633e	jmp	0x10003645c
0000000100036343	incq	%rdi
0000000100036346	movq	%rdi, 0x10(%rbx)
000000010003634a	incq	%rax
000000010003634d	je	0x100036428
0000000100036353	cmpq	$-0x1, %rax
0000000100036357	je	0x100036428
000000010003635d	nopl	(%rax)
0000000100036360	movq	%r14, %rdi
0000000100036363	movq	%rbx, %rsi
0000000100036366	callq	__ZN14rustc_demangle2v06Parser5ident17h2232a8e6be06ef2fE ## rustc_demangle::v0::Parser::ident::h2232a8e6be06ef2f
000000010003636b	cmpq	$0x0, -0x48(%rbp)
0000000100036370	je	0x1000363e0
0000000100036372	movq	-0x30(%rbp), %rax
0000000100036376	movq	%rax, -0x50(%rbp)
000000010003637a	movq	-0x38(%rbp), %rax
000000010003637e	movq	%rax, -0x58(%rbp)
0000000100036382	movq	-0x48(%rbp), %rax
0000000100036386	movq	-0x40(%rbp), %rcx
000000010003638a	movq	%rcx, -0x60(%rbp)
000000010003638e	movq	%rax, -0x68(%rbp)
0000000100036392	movq	0x20(%rbx), %r12
0000000100036396	testq	%r12, %r12
0000000100036399	je	0x100036200
000000010003639f	leaq	-0x68(%rbp), %rdi
00000001000363a3	movq	%r12, %rsi
00000001000363a6	callq	__ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17he10953cd55b64102E ## _$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$::fmt::he10953cd55b64102
00000001000363ab	testb	%al, %al
00000001000363ad	jne	0x100036446
00000001000363b3	movl	$0x2, %esi
00000001000363b8	leaq	0xff96(%rip), %rdi
00000001000363bf	movq	%r12, %rdx
00000001000363c2	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000363c7	testb	%al, %al
00000001000363c9	je	0x100036200
00000001000363cf	jmp	0x100036446
00000001000363d1	nopw	%cs:(%rax,%rax)
00000001000363db	nopl	(%rax,%rax)
00000001000363e0	movzbl	-0x40(%rbp), %r12d
00000001000363e5	movq	0x20(%rbx), %rdx
00000001000363e9	testq	%rdx, %rdx
00000001000363ec	je	0x100036418
00000001000363ee	testb	%r12b, %r12b
00000001000363f1	leaq	0xff0a(%rip), %rdi
00000001000363f8	leaq	0x10131(%rip), %rax
00000001000363ff	cmoveq	%rax, %rdi
0000000100036403	movzbl	%r12b, %eax
0000000100036407	leaq	(%rax,%rax,8), %rsi
000000010003640b	orq	$0x10, %rsi
000000010003640f	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036414	testb	%al, %al
0000000100036416	jne	0x100036446
0000000100036418	movq	$0x0, (%rbx)
000000010003641f	movb	%r12b, 0x8(%rbx)
0000000100036423	jmp	0x100036215
0000000100036428	movq	0x20(%rbx), %rdx
000000010003642c	testq	%rdx, %rdx
000000010003642f	je	0x10003644e
0000000100036431	leaq	0x100f8(%rip), %rdi
0000000100036438	movl	$0x10, %esi
000000010003643d	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036442	testb	%al, %al
0000000100036444	je	0x10003644e
0000000100036446	movl	$0x1, %r12d
000000010003644c	jmp	0x10003645c
000000010003644e	movq	$0x0, (%rbx)
0000000100036455	movb	$0x0, 0x8(%rbx)
0000000100036459	xorl	%r12d, %r12d
000000010003645c	movq	%r12, %rax
000000010003645f	addq	$0x48, %rsp
0000000100036463	popq	%rbx
0000000100036464	popq	%r12
0000000100036466	popq	%r13
0000000100036468	popq	%r14
000000010003646a	popq	%r15
000000010003646c	popq	%rbp
000000010003646d	retq
000000010003646e	incq	%rax
0000000100036471	movq	%rax, 0x10(%rbx)
0000000100036475	jmp	0x100036459
0000000100036477	nopw	(%rax,%rax)
__ZN14rustc_demangle2v07Printer14print_sep_list17h5f985aac4908c105E:
0000000100036480	pushq	%rbp
0000000100036481	movq	%rsp, %rbp
0000000100036484	pushq	%r15
0000000100036486	pushq	%r14
0000000100036488	pushq	%r12
000000010003648a	pushq	%rbx
000000010003648b	movq	(%rdi), %rax
000000010003648e	testq	%rax, %rax
0000000100036491	je	0x100036504
0000000100036493	movq	%rdi, %r14
0000000100036496	xorl	%ebx, %ebx
0000000100036498	leaq	0xfe80(%rip), %r15
000000010003649f	xorl	%r12d, %r12d
00000001000364a2	nopw	%cs:(%rax,%rax)
00000001000364ac	nopl	(%rax)
00000001000364b0	movq	0x10(%r14), %rcx
00000001000364b4	cmpq	0x8(%r14), %rcx
00000001000364b8	jae	0x1000364c0
00000001000364ba	cmpb	$0x45, (%rax,%rcx)
00000001000364be	je	0x1000364fd
00000001000364c0	subq	$0x1, %r12
00000001000364c4	jb	0x1000364e0
00000001000364c6	movq	0x20(%r14), %rdx
00000001000364ca	testq	%rdx, %rdx
00000001000364cd	je	0x1000364e0
00000001000364cf	movl	$0x2, %esi
00000001000364d4	movq	%r15, %rdi
00000001000364d7	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000364dc	testb	%al, %al
00000001000364de	jne	0x1000364f6
00000001000364e0	movq	%r14, %rdi
00000001000364e3	callq	__ZN14rustc_demangle2v07Printer17print_generic_arg17hdea827297606b6ebE ## rustc_demangle::v0::Printer::print_generic_arg::hdea827297606b6eb
00000001000364e8	testb	%al, %al
00000001000364ea	jne	0x1000364f6
00000001000364ec	movq	(%r14), %rax
00000001000364ef	testq	%rax, %rax
00000001000364f2	jne	0x1000364b0
00000001000364f4	jmp	0x100036506
00000001000364f6	movl	$0x1, %ebx
00000001000364fb	jmp	0x100036506
00000001000364fd	incq	%rcx
0000000100036500	movq	%rcx, 0x10(%r14)
0000000100036504	xorl	%ebx, %ebx
0000000100036506	movq	%rbx, %rax
0000000100036509	popq	%rbx
000000010003650a	popq	%r12
000000010003650c	popq	%r14
000000010003650e	popq	%r15
0000000100036510	popq	%rbp
0000000100036511	retq
0000000100036512	nopw	%cs:(%rax,%rax)
000000010003651c	nopl	(%rax)
__ZN14rustc_demangle2v07Printer14print_sep_list17h65c1eb8fc015b61fE:
0000000100036520	pushq	%rbp
0000000100036521	movq	%rsp, %rbp
0000000100036524	pushq	%r15
0000000100036526	pushq	%r14
0000000100036528	pushq	%r12
000000010003652a	pushq	%rbx
000000010003652b	movq	(%rdi), %rax
000000010003652e	testq	%rax, %rax
0000000100036531	je	0x1000365a9
0000000100036533	movq	%rdi, %r14
0000000100036536	xorl	%ebx, %ebx
0000000100036538	leaq	0xfde0(%rip), %r15
000000010003653f	xorl	%r12d, %r12d
0000000100036542	nopw	%cs:(%rax,%rax)
000000010003654c	nopl	(%rax)
0000000100036550	movq	0x10(%r14), %rcx
0000000100036554	cmpq	0x8(%r14), %rcx
0000000100036558	jae	0x100036560
000000010003655a	cmpb	$0x45, (%rax,%rcx)
000000010003655e	je	0x1000365a2
0000000100036560	subq	$0x1, %r12
0000000100036564	jb	0x100036580
0000000100036566	movq	0x20(%r14), %rdx
000000010003656a	testq	%rdx, %rdx
000000010003656d	je	0x100036580
000000010003656f	movl	$0x2, %esi
0000000100036574	movq	%r15, %rdi
0000000100036577	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003657c	testb	%al, %al
000000010003657e	jne	0x10003659b
0000000100036580	movq	%r14, %rdi
0000000100036583	movl	$0x1, %esi
0000000100036588	callq	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
000000010003658d	testb	%al, %al
000000010003658f	jne	0x10003659b
0000000100036591	movq	(%r14), %rax
0000000100036594	testq	%rax, %rax
0000000100036597	jne	0x100036550
0000000100036599	jmp	0x1000365ab
000000010003659b	movl	$0x1, %ebx
00000001000365a0	jmp	0x1000365ab
00000001000365a2	incq	%rcx
00000001000365a5	movq	%rcx, 0x10(%r14)
00000001000365a9	xorl	%ebx, %ebx
00000001000365ab	movq	%rbx, %rax
00000001000365ae	popq	%rbx
00000001000365af	popq	%r12
00000001000365b1	popq	%r14
00000001000365b3	popq	%r15
00000001000365b5	popq	%rbp
00000001000365b6	retq
00000001000365b7	nopw	(%rax,%rax)
__ZN14rustc_demangle2v07Printer14print_sep_list17ha05d10c105be9b6aE:
00000001000365c0	pushq	%rbp
00000001000365c1	movq	%rsp, %rbp
00000001000365c4	pushq	%r15
00000001000365c6	pushq	%r14
00000001000365c8	pushq	%r12
00000001000365ca	pushq	%rbx
00000001000365cb	movq	(%rdi), %rax
00000001000365ce	testq	%rax, %rax
00000001000365d1	je	0x10003663d
00000001000365d3	movq	%rdi, %r15
00000001000365d6	xorl	%r14d, %r14d
00000001000365d9	leaq	0xfd3f(%rip), %r12
00000001000365e0	xorl	%ebx, %ebx
00000001000365e2	nopw	%cs:(%rax,%rax)
00000001000365ec	nopl	(%rax)
00000001000365f0	movq	0x10(%r15), %rcx
00000001000365f4	cmpq	0x8(%r15), %rcx
00000001000365f8	jae	0x100036600
00000001000365fa	cmpb	$0x45, (%rax,%rcx)
00000001000365fe	je	0x100036649
0000000100036600	testq	%rbx, %rbx
0000000100036603	je	0x10003661f
0000000100036605	movq	0x20(%r15), %rdx
0000000100036609	testq	%rdx, %rdx
000000010003660c	je	0x10003661f
000000010003660e	movl	$0x2, %esi
0000000100036613	movq	%r12, %rdi
0000000100036616	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003661b	testb	%al, %al
000000010003661d	jne	0x100036641
000000010003661f	movq	%r15, %rdi
0000000100036622	movl	$0x1, %esi
0000000100036627	callq	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
000000010003662c	testb	%al, %al
000000010003662e	jne	0x100036641
0000000100036630	incq	%rbx
0000000100036633	movq	(%r15), %rax
0000000100036636	testq	%rax, %rax
0000000100036639	jne	0x1000365f0
000000010003663b	jmp	0x100036653
000000010003663d	xorl	%ebx, %ebx
000000010003663f	jmp	0x100036650
0000000100036641	movl	$0x1, %r14d
0000000100036647	jmp	0x100036653
0000000100036649	incq	%rcx
000000010003664c	movq	%rcx, 0x10(%r15)
0000000100036650	xorl	%r14d, %r14d
0000000100036653	movq	%r14, %rax
0000000100036656	movq	%rbx, %rdx
0000000100036659	popq	%rbx
000000010003665a	popq	%r12
000000010003665c	popq	%r14
000000010003665e	popq	%r15
0000000100036660	popq	%rbp
0000000100036661	retq
0000000100036662	nopw	%cs:(%rax,%rax)
000000010003666c	nopl	(%rax)
__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE:
0000000100036670	pushq	%rbp
0000000100036671	movq	%rsp, %rbp
0000000100036674	pushq	%r15
0000000100036676	pushq	%r14
0000000100036678	pushq	%r12
000000010003667a	pushq	%rbx
000000010003667b	subq	$0x70, %rsp
000000010003667f	movq	%rdi, %rbx
0000000100036682	movq	(%rdi), %rcx
0000000100036685	testq	%rcx, %rcx
0000000100036688	je	0x100036b38
000000010003668e	movl	0x18(%rbx), %eax
0000000100036691	incl	%eax
0000000100036693	xorl	%r15d, %r15d
0000000100036696	cmpl	$0x1f5, %eax                    ## imm = 0x1F5
000000010003669b	adcb	$0x1, %r15b
000000010003669f	movl	%eax, 0x18(%rbx)
00000001000366a2	cmpl	$0x1f5, %eax                    ## imm = 0x1F5
00000001000366a7	jae	0x100036722
00000001000366a9	movl	%esi, %r12d
00000001000366ac	movq	0x8(%rbx), %rsi
00000001000366b0	movq	0x10(%rbx), %rax
00000001000366b4	cmpq	%rsi, %rax
00000001000366b7	jae	0x100036c17
00000001000366bd	movzbl	(%rcx,%rax), %r15d
00000001000366c2	leaq	0x1(%rax), %rdx
00000001000366c6	movq	%rdx, 0x10(%rbx)
00000001000366ca	leal	-0x42(%r15), %edi
00000001000366ce	cmpl	$0x17, %edi
00000001000366d1	ja	0x100036c17
00000001000366d7	leaq	0x6a2(%rip), %r8
00000001000366de	movslq	(%r8,%rdi,4), %rdi
00000001000366e2	addq	%r8, %rdi
00000001000366e5	jmpq	*%rdi
00000001000366e7	cmpq	%rsi, %rdx
00000001000366ea	jae	0x100036b7c
00000001000366f0	cmpb	$0x73, (%rcx,%rdx)
00000001000366f4	jne	0x100036b7c
00000001000366fa	leaq	0x2(%rax), %rdi
00000001000366fe	movq	%rdi, 0x10(%rbx)
0000000100036702	cmpq	%rsi, %rdi
0000000100036705	jae	0x100036989
000000010003670b	cmpb	$0x5f, (%rcx,%rdi)
000000010003670f	jne	0x100036989
0000000100036715	addq	$0x3, %rax
0000000100036719	movq	%rax, 0x10(%rbx)
000000010003671d	jmp	0x100036b7c
0000000100036722	movq	0x20(%rbx), %rdx
0000000100036726	testq	%rdx, %rdx
0000000100036729	je	0x100036747
000000010003672b	leaq	0xfbd0(%rip), %rdi
0000000100036732	movl	$0x19, %esi
0000000100036737	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003673c	movb	$0x1, %r14b
000000010003673f	testb	%al, %al
0000000100036741	jne	0x100036c46
0000000100036747	movq	$0x0, (%rbx)
000000010003674e	movb	%r15b, 0x8(%rbx)
0000000100036752	jmp	0x100036c43
0000000100036757	movzbl	%r12b, %esi
000000010003675b	movq	%rbx, %rdi
000000010003675e	callq	__ZN14rustc_demangle2v07Printer13print_backref17h110002543362aac2E ## rustc_demangle::v0::Printer::print_backref::h110002543362aac2
0000000100036763	movb	$0x1, %r14b
0000000100036766	jmp	0x100036c08
000000010003676b	leaq	-0x40(%rbp), %rdi
000000010003676f	movq	%rbx, %rsi
0000000100036772	callq	__ZN14rustc_demangle2v06Parser13disambiguator17h8158e9f01ea272f3E ## rustc_demangle::v0::Parser::disambiguator::h8158e9f01ea272f3
0000000100036777	cmpb	$0x0, -0x40(%rbp)
000000010003677b	je	0x1000369f2
0000000100036781	movzbl	-0x3f(%rbp), %r15d
0000000100036786	movq	0x20(%rbx), %rdx
000000010003678a	testq	%rdx, %rdx
000000010003678d	je	0x1000367c0
000000010003678f	testb	%r15b, %r15b
0000000100036792	leaq	0xfd97(%rip), %rax
0000000100036799	leaq	0xfb62(%rip), %rdi
00000001000367a0	cmoveq	%rax, %rdi
00000001000367a4	movzbl	%r15b, %eax
00000001000367a8	leaq	(%rax,%rax,8), %rsi
00000001000367ac	orq	$0x10, %rsi
00000001000367b0	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000367b5	movb	$0x1, %r14b
00000001000367b8	testb	%al, %al
00000001000367ba	jne	0x100036c46
00000001000367c0	movq	$0x0, (%rbx)
00000001000367c7	movb	%r15b, 0x8(%rbx)
00000001000367cb	jmp	0x100036c43
00000001000367d0	movzbl	%r12b, %esi
00000001000367d4	movq	%rbx, %rdi
00000001000367d7	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
00000001000367dc	movb	$0x1, %r14b
00000001000367df	testb	%al, %al
00000001000367e1	jne	0x100036c46
00000001000367e7	testb	%r12b, %r12b
00000001000367ea	je	0x10003680e
00000001000367ec	movq	0x20(%rbx), %rdx
00000001000367f0	testq	%rdx, %rdx
00000001000367f3	je	0x10003680e
00000001000367f5	leaq	0xf987(%rip), %rdi
00000001000367fc	movl	$0x2, %esi
0000000100036801	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036806	testb	%al, %al
0000000100036808	jne	0x100036c46
000000010003680e	movq	0x20(%rbx), %rdx
0000000100036812	testq	%rdx, %rdx
0000000100036815	je	0x100036830
0000000100036817	leaq	0xf96d(%rip), %rdi
000000010003681e	movl	$0x1, %esi
0000000100036823	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036828	testb	%al, %al
000000010003682a	jne	0x100036c46
0000000100036830	movq	%rbx, %rdi
0000000100036833	callq	__ZN14rustc_demangle2v07Printer14print_sep_list17h5f985aac4908c105E ## rustc_demangle::v0::Printer::print_sep_list::h5f985aac4908c105
0000000100036838	testq	%rax, %rax
000000010003683b	jne	0x100036c46
0000000100036841	jmp	0x100036bee
0000000100036846	movq	%rbx, %rdi
0000000100036849	callq	__ZN14rustc_demangle2v06Parser9namespace17h40b6bd2d298193b0E ## rustc_demangle::v0::Parser::namespace::h40b6bd2d298193b0
000000010003684e	movq	%rax, %r15
0000000100036851	testb	$0x1, %r15b
0000000100036855	jne	0x100036937
000000010003685b	movzbl	%r12b, %esi
000000010003685f	movq	%rbx, %rdi
0000000100036862	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100036867	movb	$0x1, %r14b
000000010003686a	testb	%al, %al
000000010003686c	jne	0x100036c46
0000000100036872	cmpq	$0x0, (%rbx)
0000000100036876	je	0x100036b08
000000010003687c	leaq	-0x40(%rbp), %rdi
0000000100036880	movq	%rbx, %rsi
0000000100036883	callq	__ZN14rustc_demangle2v06Parser13disambiguator17h8158e9f01ea272f3E ## rustc_demangle::v0::Parser::disambiguator::h8158e9f01ea272f3
0000000100036888	cmpb	$0x0, -0x40(%rbp)
000000010003688c	jne	0x100036781
0000000100036892	cmpq	$0x0, (%rbx)
0000000100036896	je	0x100036b38
000000010003689c	movq	-0x38(%rbp), %r12
00000001000368a0	leaq	-0x40(%rbp), %rdi
00000001000368a4	movq	%rbx, %rsi
00000001000368a7	callq	__ZN14rustc_demangle2v06Parser5ident17h2232a8e6be06ef2fE ## rustc_demangle::v0::Parser::ident::h2232a8e6be06ef2f
00000001000368ac	cmpq	$0x0, -0x40(%rbp)
00000001000368b1	je	0x100036af1
00000001000368b7	shrq	$0x20, %r15
00000001000368bb	movq	-0x28(%rbp), %rax
00000001000368bf	movq	%rax, -0x48(%rbp)
00000001000368c3	movq	-0x30(%rbp), %rax
00000001000368c7	movq	%rax, -0x50(%rbp)
00000001000368cb	movq	-0x40(%rbp), %rax
00000001000368cf	movq	-0x38(%rbp), %rcx
00000001000368d3	movq	%rcx, -0x58(%rbp)
00000001000368d7	movq	%rax, -0x60(%rbp)
00000001000368db	cmpl	$0x110000, %r15d                ## imm = 0x110000
00000001000368e2	jne	0x100036c56
00000001000368e8	movq	-0x58(%rbp), %rax
00000001000368ec	orq	-0x48(%rbp), %rax
00000001000368f0	je	0x100036c0c
00000001000368f6	movq	0x20(%rbx), %rdx
00000001000368fa	testq	%rdx, %rdx
00000001000368fd	je	0x100036c0c
0000000100036903	leaq	0xf879(%rip), %rdi
000000010003690a	movl	$0x2, %esi
000000010003690f	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036914	testb	%al, %al
0000000100036916	jne	0x100036c46
000000010003691c	movq	0x20(%rbx), %rsi
0000000100036920	testq	%rsi, %rsi
0000000100036923	je	0x100036c0c
0000000100036929	leaq	-0x60(%rbp), %rdi
000000010003692d	callq	__ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17he10953cd55b64102E ## _$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$::fmt::he10953cd55b64102
0000000100036932	jmp	0x100036c08
0000000100036937	shrq	$0x8, %r15
000000010003693b	andb	$0x1, %r15b
000000010003693f	movq	0x20(%rbx), %rdx
0000000100036943	testq	%rdx, %rdx
0000000100036946	je	0x100036979
0000000100036948	testb	%r15b, %r15b
000000010003694b	leaq	0xfbde(%rip), %rax
0000000100036952	leaq	0xf9a9(%rip), %rdi
0000000100036959	cmoveq	%rax, %rdi
000000010003695d	movzbl	%r15b, %eax
0000000100036961	leaq	(%rax,%rax,8), %rsi
0000000100036965	orq	$0x10, %rsi
0000000100036969	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003696e	movb	$0x1, %r14b
0000000100036971	testb	%al, %al
0000000100036973	jne	0x100036c46
0000000100036979	movq	$0x0, (%rbx)
0000000100036980	movb	%r15b, 0x8(%rbx)
0000000100036984	jmp	0x100036c43
0000000100036989	xorl	%eax, %eax
000000010003698b	movl	$0x3e, %r8d
0000000100036991	cmpq	%rsi, %rdi
0000000100036994	jae	0x100036c17
000000010003699a	movzbl	(%rcx,%rdi), %edx
000000010003699e	cmpb	$0x5f, %dl
00000001000369a1	je	0x100036b62
00000001000369a7	leal	-0x30(%rdx), %r9d
00000001000369ab	cmpb	$0xa, %r9b
00000001000369af	jb	0x1000369d4
00000001000369b1	leal	-0x61(%rdx), %r9d
00000001000369b5	cmpb	$0x1a, %r9b
00000001000369b9	jae	0x1000369c0
00000001000369bb	addb	$-0x57, %dl
00000001000369be	jmp	0x1000369d1
00000001000369c0	leal	-0x41(%rdx), %r9d
00000001000369c4	cmpb	$0x1a, %r9b
00000001000369c8	jae	0x100036c17
00000001000369ce	addb	$-0x1d, %dl
00000001000369d1	movl	%edx, %r9d
00000001000369d4	incq	%rdi
00000001000369d7	movq	%rdi, 0x10(%rbx)
00000001000369db	mulq	%r8
00000001000369de	jo	0x100036c17
00000001000369e4	movzbl	%r9b, %edx
00000001000369e8	addq	%rdx, %rax
00000001000369eb	jae	0x100036991
00000001000369ed	jmp	0x100036c17
00000001000369f2	movq	-0x38(%rbp), %rax
00000001000369f6	movq	%rax, -0x68(%rbp)
00000001000369fa	cmpq	$0x0, (%rbx)
00000001000369fe	je	0x100036acb
0000000100036a04	leaq	-0x40(%rbp), %rdi
0000000100036a08	movq	%rbx, %rsi
0000000100036a0b	callq	__ZN14rustc_demangle2v06Parser5ident17h2232a8e6be06ef2fE ## rustc_demangle::v0::Parser::ident::h2232a8e6be06ef2f
0000000100036a10	cmpq	$0x0, -0x40(%rbp)
0000000100036a15	je	0x100036af1
0000000100036a1b	movq	-0x28(%rbp), %rax
0000000100036a1f	movq	%rax, -0x70(%rbp)
0000000100036a23	movq	-0x30(%rbp), %rax
0000000100036a27	movq	%rax, -0x78(%rbp)
0000000100036a2b	movq	-0x40(%rbp), %rax
0000000100036a2f	movq	-0x38(%rbp), %rcx
0000000100036a33	movq	%rcx, -0x80(%rbp)
0000000100036a37	movq	%rax, -0x88(%rbp)
0000000100036a3e	movq	0x20(%rbx), %rsi
0000000100036a42	testq	%rsi, %rsi
0000000100036a45	je	0x100036c0c
0000000100036a4b	leaq	-0x88(%rbp), %rdi
0000000100036a52	callq	__ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17he10953cd55b64102E ## _$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$::fmt::he10953cd55b64102
0000000100036a57	movb	$0x1, %r14b
0000000100036a5a	testb	%al, %al
0000000100036a5c	jne	0x100036c46
0000000100036a62	movq	0x20(%rbx), %rdi
0000000100036a66	testq	%rdi, %rdi
0000000100036a69	je	0x100036c0c
0000000100036a6f	callq	__ZN4core3fmt9Formatter9alternate17hc2243bb2c4eca803E ## core::fmt::Formatter::alternate::hc2243bb2c4eca803
0000000100036a74	testb	%al, %al
0000000100036a76	jne	0x100036c0c
0000000100036a7c	movq	0x20(%rbx), %rdi
0000000100036a80	leaq	0xf89a(%rip), %rsi
0000000100036a87	movl	$0x1, %edx
0000000100036a8c	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100036a91	testb	%al, %al
0000000100036a93	jne	0x100036ac3
0000000100036a95	movq	0x20(%rbx), %rsi
0000000100036a99	leaq	-0x68(%rbp), %rdi
0000000100036a9d	callq	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$3fmt17hdccece5688b0c434E ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$::fmt::hdccece5688b0c434
0000000100036aa2	testb	%al, %al
0000000100036aa4	jne	0x100036ac3
0000000100036aa6	movq	0x20(%rbx), %rdi
0000000100036aaa	leaq	0xf871(%rip), %rsi
0000000100036ab1	movl	$0x1, %edx
0000000100036ab6	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100036abb	testb	%al, %al
0000000100036abd	je	0x100036c0c
0000000100036ac3	movb	$0x1, %r14b
0000000100036ac6	jmp	0x100036c46
0000000100036acb	movq	0x20(%rbx), %rdx
0000000100036acf	testq	%rdx, %rdx
0000000100036ad2	je	0x100036c43
0000000100036ad8	leaq	0xf83c(%rip), %rdi
0000000100036adf	movl	$0x1, %esi
0000000100036ae4	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036ae9	movl	%eax, %r14d
0000000100036aec	jmp	0x100036c46
0000000100036af1	movzbl	-0x38(%rbp), %r15d
0000000100036af6	movq	0x20(%rbx), %rdx
0000000100036afa	testq	%rdx, %rdx
0000000100036afd	jne	0x10003678f
0000000100036b03	jmp	0x1000367c0
0000000100036b08	movq	0x20(%rbx), %rdx
0000000100036b0c	testq	%rdx, %rdx
0000000100036b0f	je	0x100036c43
0000000100036b15	leaq	0xf667(%rip), %rdi
0000000100036b1c	movl	$0x2, %esi
0000000100036b21	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036b26	testb	%al, %al
0000000100036b28	jne	0x100036c46
0000000100036b2e	cmpq	$0x0, (%rbx)
0000000100036b32	jne	0x10003687c
0000000100036b38	movq	0x20(%rbx), %rdx
0000000100036b3c	testq	%rdx, %rdx
0000000100036b3f	je	0x100036c43
0000000100036b45	leaq	0xf7cf(%rip), %rdi
0000000100036b4c	movl	$0x1, %esi
0000000100036b51	addq	$0x70, %rsp
0000000100036b55	popq	%rbx
0000000100036b56	popq	%r12
0000000100036b58	popq	%r14
0000000100036b5a	popq	%r15
0000000100036b5c	popq	%rbp
0000000100036b5d	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036b62	incq	%rdi
0000000100036b65	movq	%rdi, 0x10(%rbx)
0000000100036b69	incq	%rax
0000000100036b6c	je	0x100036c17
0000000100036b72	cmpq	$-0x1, %rax
0000000100036b76	je	0x100036c17
0000000100036b7c	movq	%rbx, %rdi
0000000100036b7f	callq	__ZN14rustc_demangle2v07Printer17skipping_printing17hec91f2e9f07aeac7E ## rustc_demangle::v0::Printer::skipping_printing::hec91f2e9f07aeac7
0000000100036b84	movq	0x20(%rbx), %rdx
0000000100036b88	testq	%rdx, %rdx
0000000100036b8b	je	0x100036ba9
0000000100036b8d	leaq	0xf5f7(%rip), %rdi
0000000100036b94	movl	$0x1, %esi
0000000100036b99	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036b9e	movb	$0x1, %r14b
0000000100036ba1	testb	%al, %al
0000000100036ba3	jne	0x100036c46
0000000100036ba9	movq	%rbx, %rdi
0000000100036bac	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100036bb1	movb	$0x1, %r14b
0000000100036bb4	testb	%al, %al
0000000100036bb6	jne	0x100036c46
0000000100036bbc	cmpb	$0x4d, %r15b
0000000100036bc0	je	0x100036bee
0000000100036bc2	movq	0x20(%rbx), %rdx
0000000100036bc6	testq	%rdx, %rdx
0000000100036bc9	je	0x100036be0
0000000100036bcb	leaq	0xf942(%rip), %rdi
0000000100036bd2	movl	$0x4, %esi
0000000100036bd7	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036bdc	testb	%al, %al
0000000100036bde	jne	0x100036c46
0000000100036be0	movq	%rbx, %rdi
0000000100036be3	xorl	%esi, %esi
0000000100036be5	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100036bea	testb	%al, %al
0000000100036bec	jne	0x100036c46
0000000100036bee	movq	0x20(%rbx), %rdx
0000000100036bf2	testq	%rdx, %rdx
0000000100036bf5	je	0x100036c0c
0000000100036bf7	leaq	0xf58c(%rip), %rdi
0000000100036bfe	movl	$0x1, %esi
0000000100036c03	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036c08	testb	%al, %al
0000000100036c0a	jne	0x100036c46
0000000100036c0c	cmpq	$0x0, (%rbx)
0000000100036c10	je	0x100036c43
0000000100036c12	decl	0x18(%rbx)
0000000100036c15	jmp	0x100036c43
0000000100036c17	movq	0x20(%rbx), %rdx
0000000100036c1b	testq	%rdx, %rdx
0000000100036c1e	je	0x100036c38
0000000100036c20	leaq	0xf909(%rip), %rdi
0000000100036c27	movl	$0x10, %esi
0000000100036c2c	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036c31	movb	$0x1, %r14b
0000000100036c34	testb	%al, %al
0000000100036c36	jne	0x100036c46
0000000100036c38	movq	$0x0, (%rbx)
0000000100036c3f	movb	$0x0, 0x8(%rbx)
0000000100036c43	xorl	%r14d, %r14d
0000000100036c46	movl	%r14d, %eax
0000000100036c49	addq	$0x70, %rsp
0000000100036c4d	popq	%rbx
0000000100036c4e	popq	%r12
0000000100036c50	popq	%r14
0000000100036c52	popq	%r15
0000000100036c54	popq	%rbp
0000000100036c55	retq
0000000100036c56	movq	0x20(%rbx), %rdx
0000000100036c5a	testq	%rdx, %rdx
0000000100036c5d	je	0x100036c74
0000000100036c5f	leaq	0xf6bd(%rip), %rdi
0000000100036c66	movl	$0x3, %esi
0000000100036c6b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036c70	testb	%al, %al
0000000100036c72	jne	0x100036c46
0000000100036c74	cmpl	$0x43, %r15d
0000000100036c78	je	0x100036c97
0000000100036c7a	cmpl	$0x53, %r15d
0000000100036c7e	jne	0x100036cb3
0000000100036c80	movq	0x20(%rbx), %rdx
0000000100036c84	testq	%rdx, %rdx
0000000100036c87	je	0x100036cd1
0000000100036c89	leaq	0xf880(%rip), %rdi
0000000100036c90	movl	$0x4, %esi
0000000100036c95	jmp	0x100036cac
0000000100036c97	movq	0x20(%rbx), %rdx
0000000100036c9b	testq	%rdx, %rdx
0000000100036c9e	je	0x100036cd1
0000000100036ca0	leaq	0xf67f(%rip), %rdi
0000000100036ca7	movl	$0x7, %esi
0000000100036cac	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036cb1	jmp	0x100036cc9
0000000100036cb3	movq	0x20(%rbx), %rsi
0000000100036cb7	movl	%r15d, -0x40(%rbp)
0000000100036cbb	testq	%rsi, %rsi
0000000100036cbe	je	0x100036cd1
0000000100036cc0	leaq	-0x40(%rbp), %rdi
0000000100036cc4	callq	__ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h58c8d2487b4b288dE ## _$LT$char$u20$as$u20$core..fmt..Display$GT$::fmt::h58c8d2487b4b288d
0000000100036cc9	testb	%al, %al
0000000100036ccb	jne	0x100036c46
0000000100036cd1	movq	-0x58(%rbp), %rax
0000000100036cd5	orq	-0x48(%rbp), %rax
0000000100036cd9	je	0x100036d1f
0000000100036cdb	movq	0x20(%rbx), %rdx
0000000100036cdf	testq	%rdx, %rdx
0000000100036ce2	je	0x100036c0c
0000000100036ce8	leaq	0xf63e(%rip), %rdi
0000000100036cef	movl	$0x1, %esi
0000000100036cf4	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036cf9	testb	%al, %al
0000000100036cfb	jne	0x100036c46
0000000100036d01	movq	0x20(%rbx), %rsi
0000000100036d05	testq	%rsi, %rsi
0000000100036d08	je	0x100036c0c
0000000100036d0e	leaq	-0x60(%rbp), %rdi
0000000100036d12	callq	__ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17he10953cd55b64102E ## _$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$::fmt::he10953cd55b64102
0000000100036d17	testb	%al, %al
0000000100036d19	jne	0x100036c46
0000000100036d1f	movq	0x20(%rbx), %rdx
0000000100036d23	testq	%rdx, %rdx
0000000100036d26	je	0x100036c0c
0000000100036d2c	leaq	0xf5fb(%rip), %rdi
0000000100036d33	movl	$0x1, %esi
0000000100036d38	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036d3d	testb	%al, %al
0000000100036d3f	jne	0x100036c46
0000000100036d45	movq	0x20(%rbx), %rsi
0000000100036d49	movq	%r12, -0x40(%rbp)
0000000100036d4d	testq	%rsi, %rsi
0000000100036d50	je	0x100036c0c
0000000100036d56	leaq	-0x40(%rbp), %rdi
0000000100036d5a	callq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
0000000100036d5f	testb	%al, %al
0000000100036d61	jne	0x100036c46
0000000100036d67	movq	0x20(%rbx), %rdx
0000000100036d6b	testq	%rdx, %rdx
0000000100036d6e	je	0x100036c0c
0000000100036d74	leaq	0xf4c3(%rip), %rdi
0000000100036d7b	jmp	0x100036bfe
0000000100036d80	xlatb
0000000100036d81	stc
0000000100036d82	.byte 0xff #bad opcode
0000000100036d83	.byte 0xff #bad opcode
0000000100036d84	jmp	0x100036d7f
0000000100036d86	.byte 0xff #bad opcode
0000000100036d87	callq	*-0x68000002(%rdi)
0000000100036d8d	.byte 0xfe #bad opcode
0000000100036d8e	.byte 0xff #bad opcode
0000000100036d8f	callq	*-0x68000002(%rdi)
0000000100036d95	.byte 0xfe #bad opcode
0000000100036d96	.byte 0xff #bad opcode
0000000100036d97	callq	*0x50fffffe(%rdi)
0000000100036d9d	cli
0000000100036d9e	.byte 0xff #bad opcode
0000000100036d9f	callq	*-0x68000002(%rdi)
0000000100036da5	.byte 0xfe #bad opcode
0000000100036da6	.byte 0xff #bad opcode
0000000100036da7	callq	*0x67fffffe(%rdi)
0000000100036dad	stc
0000000100036dae	.byte 0xff #bad opcode
0000000100036daf	incl	%esi
0000000100036db1	cli
0000000100036db2	.byte 0xff #bad opcode
0000000100036db3	callq	*-0x68000002(%rdi)
0000000100036db9	.byte 0xfe #bad opcode
0000000100036dba	.byte 0xff #bad opcode
0000000100036dbb	callq	*-0x68000002(%rdi)
0000000100036dc1	.byte 0xfe #bad opcode
0000000100036dc2	.byte 0xff #bad opcode
0000000100036dc3	callq	*-0x68000002(%rdi)
0000000100036dc9	.byte 0xfe #bad opcode
0000000100036dca	.byte 0xff #bad opcode
0000000100036dcb	callq	*-0x68000002(%rdi)
0000000100036dd1	.byte 0xfe #bad opcode
0000000100036dd2	.byte 0xff #bad opcode
0000000100036dd3	callq	*0x67fffffe(%rdi)
0000000100036dd9	stc
0000000100036dda	.byte 0xff #bad opcode
0000000100036ddb	incl	(%rsi,%rdi,8)
0000000100036dde	.byte 0xff #bad opcode
0000000100036ddf	callq	*0x48(%rbp)
0000000100036de2	movl	%esp, %ebp
0000000100036de4	pushq	%rbx
0000000100036de5	pushq	%rax
0000000100036de6	movq	%rdi, %rbx
0000000100036de9	movq	(%rdi), %rcx
0000000100036dec	testq	%rcx, %rcx
0000000100036def	je	0x100036e43
0000000100036df1	movq	0x8(%rbx), %rsi
0000000100036df5	movq	0x10(%rbx), %rax
0000000100036df9	cmpq	%rsi, %rax
0000000100036dfc	jae	0x100036e43
0000000100036dfe	cmpb	$0x4c, (%rcx,%rax)
0000000100036e02	jne	0x100036e26
0000000100036e04	leaq	0x1(%rax), %rdi
0000000100036e08	movq	%rdi, 0x10(%rbx)
0000000100036e0c	cmpq	%rsi, %rdi
0000000100036e0f	jae	0x100036e51
0000000100036e11	cmpb	$0x5f, (%rcx,%rdi)
0000000100036e15	jne	0x100036e51
0000000100036e17	addq	$0x2, %rax
0000000100036e1b	movq	%rax, 0x10(%rbx)
0000000100036e1f	xorl	%eax, %eax
0000000100036e21	jmp	0x100036ef9
0000000100036e26	cmpb	$0x4b, (%rcx,%rax)
0000000100036e2a	jne	0x100036e43
0000000100036e2c	incq	%rax
0000000100036e2f	movq	%rax, 0x10(%rbx)
0000000100036e33	movq	%rbx, %rdi
0000000100036e36	xorl	%esi, %esi
0000000100036e38	addq	$0x8, %rsp
0000000100036e3c	popq	%rbx
0000000100036e3d	popq	%rbp
0000000100036e3e	jmp	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
0000000100036e43	movq	%rbx, %rdi
0000000100036e46	addq	$0x8, %rsp
0000000100036e4a	popq	%rbx
0000000100036e4b	popq	%rbp
0000000100036e4c	jmp	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100036e51	xorl	%eax, %eax
0000000100036e53	movl	$0x3e, %r8d
0000000100036e59	nopl	(%rax)
0000000100036e60	cmpq	%rsi, %rdi
0000000100036e63	jae	0x100036ec3
0000000100036e65	movzbl	(%rcx,%rdi), %edx
0000000100036e69	cmpb	$0x5f, %dl
0000000100036e6c	je	0x100036eb7
0000000100036e6e	leal	-0x30(%rdx), %r9d
0000000100036e72	cmpb	$0xa, %r9b
0000000100036e76	jb	0x100036ea0
0000000100036e78	leal	-0x61(%rdx), %r9d
0000000100036e7c	cmpb	$0x1a, %r9b
0000000100036e80	jae	0x100036e90
0000000100036e82	addb	$-0x57, %dl
0000000100036e85	jmp	0x100036e9d
0000000100036e87	nopw	(%rax,%rax)
0000000100036e90	leal	-0x41(%rdx), %r9d
0000000100036e94	cmpb	$0x1a, %r9b
0000000100036e98	jae	0x100036ec3
0000000100036e9a	addb	$-0x1d, %dl
0000000100036e9d	movl	%edx, %r9d
0000000100036ea0	incq	%rdi
0000000100036ea3	movq	%rdi, 0x10(%rbx)
0000000100036ea7	mulq	%r8
0000000100036eaa	jo	0x100036ec3
0000000100036eac	movzbl	%r9b, %edx
0000000100036eb0	addq	%rdx, %rax
0000000100036eb3	jae	0x100036e60
0000000100036eb5	jmp	0x100036ec3
0000000100036eb7	incq	%rdi
0000000100036eba	movq	%rdi, 0x10(%rbx)
0000000100036ebe	incq	%rax
0000000100036ec1	jne	0x100036ef9
0000000100036ec3	movq	0x20(%rbx), %rdx
0000000100036ec7	testq	%rdx, %rdx
0000000100036eca	je	0x100036ee5
0000000100036ecc	leaq	0xf65d(%rip), %rdi
0000000100036ed3	movl	$0x10, %esi
0000000100036ed8	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036edd	movl	%eax, %ecx
0000000100036edf	movb	$0x1, %al
0000000100036ee1	testb	%cl, %cl
0000000100036ee3	jne	0x100036ef2
0000000100036ee5	movq	$0x0, (%rbx)
0000000100036eec	movb	$0x0, 0x8(%rbx)
0000000100036ef0	xorl	%eax, %eax
0000000100036ef2	addq	$0x8, %rsp
0000000100036ef6	popq	%rbx
0000000100036ef7	popq	%rbp
0000000100036ef8	retq
0000000100036ef9	movq	%rbx, %rdi
0000000100036efc	movq	%rax, %rsi
0000000100036eff	addq	$0x8, %rsp
0000000100036f03	popq	%rbx
0000000100036f04	popq	%rbp
0000000100036f05	jmp	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100036f0a	nopw	(%rax,%rax)
__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE:
0000000100036f10	pushq	%rbp
0000000100036f11	movq	%rsp, %rbp
0000000100036f14	pushq	%r15
0000000100036f16	pushq	%r14
0000000100036f18	pushq	%r13
0000000100036f1a	pushq	%r12
0000000100036f1c	pushq	%rbx
0000000100036f1d	subq	$0x18, %rsp
0000000100036f21	movq	%rdi, %rbx
0000000100036f24	movq	(%rdi), %r13
0000000100036f27	testq	%r13, %r13
0000000100036f2a	je	0x100037006
0000000100036f30	movq	0x8(%rbx), %r12
0000000100036f34	movq	0x10(%rbx), %r15
0000000100036f38	cmpq	%r12, %r15
0000000100036f3b	jae	0x100037251
0000000100036f41	movzbl	(%r13,%r15), %esi
0000000100036f47	leaq	0x1(%r15), %r14
0000000100036f4b	movq	%r14, 0x10(%rbx)
0000000100036f4f	leal	-0x61(%rsi), %eax
0000000100036f52	cmpb	$0x1a, %al
0000000100036f54	jae	0x100036f67
0000000100036f56	movzbl	%al, %ecx
0000000100036f59	movl	$0x3bcfbbf, %edx                ## imm = 0x3BCFBBF
0000000100036f5e	btl	%ecx, %edx
0000000100036f61	jb	0x100037066
0000000100036f67	movl	0x18(%rbx), %eax
0000000100036f6a	incl	%eax
0000000100036f6c	movl	%eax, 0x18(%rbx)
0000000100036f6f	cmpl	$0x1f4, %eax                    ## imm = 0x1F4
0000000100036f74	ja	0x100037032
0000000100036f7a	leal	-0x41(%rsi), %eax
0000000100036f7d	cmpl	$0x13, %eax
0000000100036f80	ja	0x10003718e
0000000100036f86	leaq	0x467(%rip), %rcx
0000000100036f8d	movslq	(%rcx,%rax,4), %rax
0000000100036f91	addq	%rcx, %rax
0000000100036f94	jmpq	*%rax
0000000100036f96	movq	%rsi, %r14
0000000100036f99	movq	0x20(%rbx), %rdx
0000000100036f9d	testq	%rdx, %rdx
0000000100036fa0	je	0x100036fbd
0000000100036fa2	leaq	0xf378(%rip), %rdi
0000000100036fa9	movl	$0x1, %esi
0000000100036fae	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036fb3	movb	$0x1, %cl
0000000100036fb5	testb	%al, %al
0000000100036fb7	jne	0x10003727e
0000000100036fbd	movq	%rbx, %rdi
0000000100036fc0	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100036fc5	movb	$0x1, %cl
0000000100036fc7	testb	%al, %al
0000000100036fc9	jne	0x10003727e
0000000100036fcf	cmpb	$0x41, %r14b
0000000100036fd3	jne	0x100037345
0000000100036fd9	movq	0x20(%rbx), %rdx
0000000100036fdd	testq	%rdx, %rdx
0000000100036fe0	je	0x10003732e
0000000100036fe6	leaq	0xf349(%rip), %rdi
0000000100036fed	movl	$0x2, %esi
0000000100036ff2	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100036ff7	testb	%al, %al
0000000100036ff9	je	0x10003732e
0000000100036fff	movb	$0x1, %cl
0000000100037001	jmp	0x10003727e
0000000100037006	movq	0x20(%rbx), %rdx
000000010003700a	testq	%rdx, %rdx
000000010003700d	je	0x10003727c
0000000100037013	leaq	0xf301(%rip), %rdi
000000010003701a	movl	$0x1, %esi
000000010003701f	addq	$0x18, %rsp
0000000100037023	popq	%rbx
0000000100037024	popq	%r12
0000000100037026	popq	%r13
0000000100037028	popq	%r14
000000010003702a	popq	%r15
000000010003702c	popq	%rbp
000000010003702d	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037032	movq	0x20(%rbx), %rdx
0000000100037036	testq	%rdx, %rdx
0000000100037039	je	0x100037056
000000010003703b	leaq	0xf2c0(%rip), %rdi
0000000100037042	movl	$0x19, %esi
0000000100037047	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003704c	movb	$0x1, %cl
000000010003704e	testb	%al, %al
0000000100037050	jne	0x10003727e
0000000100037056	movq	$0x0, (%rbx)
000000010003705d	movb	$0x1, 0x8(%rbx)
0000000100037061	jmp	0x10003727c
0000000100037066	movq	0x20(%rbx), %rdx
000000010003706a	testq	%rdx, %rdx
000000010003706d	je	0x10003727c
0000000100037073	movsbq	%al, %rax
0000000100037077	leaq	0x12cc2(%rip), %rcx
000000010003707e	movq	(%rcx,%rax,8), %rdi
0000000100037082	leaq	0xf39f(%rip), %rcx
0000000100037089	movq	(%rcx,%rax,8), %rsi
000000010003708d	jmp	0x10003701f
000000010003708f	movq	0x20(%rbx), %r15
0000000100037093	testq	%r15, %r15
0000000100037096	je	0x1000373ce
000000010003709c	movq	%rsi, %r14
000000010003709f	leaq	0xf0e7(%rip), %rdi
00000001000370a6	movl	$0x1, %esi
00000001000370ab	movq	%r15, %rdx
00000001000370ae	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000370b3	movb	$0x1, %cl
00000001000370b5	testb	%al, %al
00000001000370b7	jne	0x10003727e
00000001000370bd	cmpb	$0x50, %r14b
00000001000370c1	jne	0x10003730b
00000001000370c7	leaq	0xf262(%rip), %rdi
00000001000370ce	movl	$0x6, %esi
00000001000370d3	jmp	0x100037317
00000001000370d8	movq	%rsi, -0x40(%rbp)
00000001000370dc	movq	0x20(%rbx), %rdx
00000001000370e0	testq	%rdx, %rdx
00000001000370e3	je	0x100037100
00000001000370e5	leaq	0xf0a0(%rip), %rdi
00000001000370ec	movl	$0x1, %esi
00000001000370f1	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000370f6	movb	$0x1, %cl
00000001000370f8	testb	%al, %al
00000001000370fa	jne	0x10003727e
0000000100037100	cmpq	%r12, %r14
0000000100037103	jae	0x1000373a4
0000000100037109	cmpb	$0x4c, (%r13,%r14)
000000010003710f	jne	0x1000373a4
0000000100037115	addq	$0x2, %r15
0000000100037119	movq	%r15, 0x10(%rbx)
000000010003711d	leaq	-0x38(%rbp), %rdi
0000000100037121	movq	%rbx, %rsi
0000000100037124	callq	__ZN14rustc_demangle2v06Parser10integer_6217h257d8636645c1e80E ## rustc_demangle::v0::Parser::integer_62::h257d8636645c1e80
0000000100037129	cmpb	$0x0, -0x38(%rbp)
000000010003712d	je	0x100037365
0000000100037133	movzbl	-0x37(%rbp), %r14d
0000000100037138	movq	0x20(%rbx), %rdx
000000010003713c	testq	%rdx, %rdx
000000010003713f	je	0x100037171
0000000100037141	testb	%r14b, %r14b
0000000100037144	leaq	0xf3e5(%rip), %rax
000000010003714b	leaq	0xf1b0(%rip), %rdi
0000000100037152	cmoveq	%rax, %rdi
0000000100037156	movzbl	%r14b, %eax
000000010003715a	leaq	(%rax,%rax,8), %rsi
000000010003715e	orq	$0x10, %rsi
0000000100037162	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037167	movb	$0x1, %cl
0000000100037169	testb	%al, %al
000000010003716b	jne	0x10003727e
0000000100037171	movq	$0x0, (%rbx)
0000000100037178	movb	%r14b, 0x8(%rbx)
000000010003717c	jmp	0x10003727c
0000000100037181	movq	%rbx, %rdi
0000000100037184	callq	__ZN14rustc_demangle2v07Printer13print_backref17h66acf481824a20dbE ## rustc_demangle::v0::Printer::print_backref::h66acf481824a20db
0000000100037189	jmp	0x1000373d6
000000010003718e	movq	%r15, 0x10(%rbx)
0000000100037192	movq	%rbx, %rdi
0000000100037195	xorl	%esi, %esi
0000000100037197	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
000000010003719c	jmp	0x1000373d6
00000001000371a1	movq	0x20(%rbx), %rdx
00000001000371a5	testq	%rdx, %rdx
00000001000371a8	je	0x1000371c5
00000001000371aa	leaq	0xf36b(%rip), %rdi
00000001000371b1	movl	$0x4, %esi
00000001000371b6	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000371bb	movb	$0x1, %cl
00000001000371bd	testb	%al, %al
00000001000371bf	jne	0x10003727e
00000001000371c5	movq	%rbx, %rdi
00000001000371c8	callq	__ZN14rustc_demangle2v07Printer9in_binder17h0660b04b144d8e43E ## rustc_demangle::v0::Printer::in_binder::h0660b04b144d8e43
00000001000371cd	movb	$0x1, %cl
00000001000371cf	testb	%al, %al
00000001000371d1	jne	0x10003727e
00000001000371d7	movq	(%rbx), %rcx
00000001000371da	testq	%rcx, %rcx
00000001000371dd	je	0x100037251
00000001000371df	movq	0x10(%rbx), %rax
00000001000371e3	cmpq	0x8(%rbx), %rax
00000001000371e7	jae	0x100037251
00000001000371e9	cmpb	$0x4c, (%rcx,%rax)
00000001000371ed	jne	0x100037251
00000001000371ef	incq	%rax
00000001000371f2	movq	%rax, 0x10(%rbx)
00000001000371f6	leaq	-0x38(%rbp), %rdi
00000001000371fa	movq	%rbx, %rsi
00000001000371fd	callq	__ZN14rustc_demangle2v06Parser10integer_6217h257d8636645c1e80E ## rustc_demangle::v0::Parser::integer_62::h257d8636645c1e80
0000000100037202	cmpb	$0x0, -0x38(%rbp)
0000000100037206	jne	0x100037133
000000010003720c	movq	-0x30(%rbp), %r15
0000000100037210	testq	%r15, %r15
0000000100037213	je	0x1000373e0
0000000100037219	movq	0x20(%rbx), %rdx
000000010003721d	testq	%rdx, %rdx
0000000100037220	je	0x10003723b
0000000100037222	leaq	0xf10f(%rip), %rdi
0000000100037229	movl	$0x3, %esi
000000010003722e	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037233	testb	%al, %al
0000000100037235	jne	0x100036fff
000000010003723b	movq	%rbx, %rdi
000000010003723e	movq	%r15, %rsi
0000000100037241	callq	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100037246	testb	%al, %al
0000000100037248	movb	$0x1, %cl
000000010003724a	jne	0x10003727e
000000010003724c	jmp	0x1000373e0
0000000100037251	movq	0x20(%rbx), %rdx
0000000100037255	testq	%rdx, %rdx
0000000100037258	je	0x100037271
000000010003725a	leaq	0xf2cf(%rip), %rdi
0000000100037261	movl	$0x10, %esi
0000000100037266	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003726b	movb	$0x1, %cl
000000010003726d	testb	%al, %al
000000010003726f	jne	0x10003727e
0000000100037271	movq	$0x0, (%rbx)
0000000100037278	movb	$0x0, 0x8(%rbx)
000000010003727c	xorl	%ecx, %ecx
000000010003727e	movl	%ecx, %eax
0000000100037280	addq	$0x18, %rsp
0000000100037284	popq	%rbx
0000000100037285	popq	%r12
0000000100037287	popq	%r13
0000000100037289	popq	%r14
000000010003728b	popq	%r15
000000010003728d	popq	%rbp
000000010003728e	retq
000000010003728f	movq	%rbx, %rdi
0000000100037292	callq	__ZN14rustc_demangle2v07Printer9in_binder17h63706541515ae011E ## rustc_demangle::v0::Printer::in_binder::h63706541515ae011
0000000100037297	jmp	0x1000373d6
000000010003729c	movq	0x20(%rbx), %rdx
00000001000372a0	testq	%rdx, %rdx
00000001000372a3	je	0x1000372bc
00000001000372a5	leaq	0xeedd(%rip), %rdi
00000001000372ac	movl	$0x1, %esi
00000001000372b1	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000372b6	movb	$0x1, %cl
00000001000372b8	testb	%al, %al
00000001000372ba	jne	0x10003727e
00000001000372bc	movq	%rbx, %rdi
00000001000372bf	callq	__ZN14rustc_demangle2v07Printer14print_sep_list17h35617fa381618f67E ## rustc_demangle::v0::Printer::print_sep_list::h35617fa381618f67
00000001000372c4	movb	$0x1, %cl
00000001000372c6	testq	%rax, %rax
00000001000372c9	jne	0x10003727e
00000001000372cb	cmpq	$0x1, %rdx
00000001000372cf	jne	0x1000372f5
00000001000372d1	movq	0x20(%rbx), %rdx
00000001000372d5	testq	%rdx, %rdx
00000001000372d8	je	0x1000373e0
00000001000372de	leaq	0xeea2(%rip), %rdi
00000001000372e5	movl	$0x1, %esi
00000001000372ea	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000372ef	movb	$0x1, %cl
00000001000372f1	testb	%al, %al
00000001000372f3	jne	0x10003727e
00000001000372f5	movq	0x20(%rbx), %rdx
00000001000372f9	testq	%rdx, %rdx
00000001000372fc	je	0x1000373e0
0000000100037302	leaq	0xee7f(%rip), %rdi
0000000100037309	jmp	0x100037359
000000010003730b	leaq	0xf206(%rip), %rdi
0000000100037312	movl	$0x4, %esi
0000000100037317	movq	%r15, %rdx
000000010003731a	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003731f	testb	%al, %al
0000000100037321	movb	$0x1, %cl
0000000100037323	jne	0x10003727e
0000000100037329	jmp	0x1000373ce
000000010003732e	movq	%rbx, %rdi
0000000100037331	movl	$0x1, %esi
0000000100037336	callq	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
000000010003733b	testb	%al, %al
000000010003733d	movb	$0x1, %cl
000000010003733f	jne	0x10003727e
0000000100037345	movq	0x20(%rbx), %rdx
0000000100037349	testq	%rdx, %rdx
000000010003734c	je	0x1000373e0
0000000100037352	leaq	0xefc9(%rip), %rdi
0000000100037359	movl	$0x1, %esi
000000010003735e	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037363	jmp	0x1000373d6
0000000100037365	movq	-0x30(%rbp), %rsi
0000000100037369	testq	%rsi, %rsi
000000010003736c	je	0x1000373a4
000000010003736e	movq	%rbx, %rdi
0000000100037371	callq	__ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h812c7e1f8ccbac23E ## rustc_demangle::v0::Printer::print_lifetime_from_index::h812c7e1f8ccbac23
0000000100037376	movb	$0x1, %cl
0000000100037378	testb	%al, %al
000000010003737a	jne	0x10003727e
0000000100037380	movq	0x20(%rbx), %rdx
0000000100037384	testq	%rdx, %rdx
0000000100037387	je	0x1000373a4
0000000100037389	leaq	0xef9f(%rip), %rdi
0000000100037390	movl	$0x1, %esi
0000000100037395	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003739a	movb	$0x1, %cl
000000010003739c	testb	%al, %al
000000010003739e	jne	0x10003727e
00000001000373a4	cmpb	$0x52, -0x40(%rbp)
00000001000373a8	je	0x1000373ce
00000001000373aa	movq	0x20(%rbx), %rdx
00000001000373ae	testq	%rdx, %rdx
00000001000373b1	je	0x1000373ce
00000001000373b3	leaq	0xf15e(%rip), %rdi
00000001000373ba	movl	$0x4, %esi
00000001000373bf	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000373c4	movb	$0x1, %cl
00000001000373c6	testb	%al, %al
00000001000373c8	jne	0x10003727e
00000001000373ce	movq	%rbx, %rdi
00000001000373d1	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
00000001000373d6	movb	$0x1, %cl
00000001000373d8	testb	%al, %al
00000001000373da	jne	0x10003727e
00000001000373e0	cmpq	$0x0, (%rbx)
00000001000373e4	je	0x10003727c
00000001000373ea	decl	0x18(%rbx)
00000001000373ed	jmp	0x10003727c
00000001000373f2	nop
00000001000373f4	movabsb	%al, -0x6500000272000005
00000001000373fd	std
00000001000373fe	.byte 0xff #bad opcode
00000001000373ff	ljmpl	*-0x65000003(%rbp)
0000000100037405	std
0000000100037406	.byte 0xff #bad opcode
0000000100037407	lcalll	*-0x65000002(%rbx)
000000010003740d	std
000000010003740e	.byte 0xff #bad opcode
000000010003740f	lcalll	*-0x65000003(%rdx)
0000000100037415	std
0000000100037416	.byte 0xff #bad opcode
0000000100037417	lcalll	*-0x65000003(%rdx)
000000010003741d	std
000000010003741e	.byte 0xff #bad opcode
000000010003741f	lcalll	*-0x65000003(%rdx)
0000000100037425	std
0000000100037426	.byte 0xff #bad opcode
0000000100037427	lcalll	*-0x64000003(%rdx)
000000010003742d	cld
000000010003742e	.byte 0xff #bad opcode
000000010003742f	lcalll	*-0x1b000004(%rbx)
0000000100037435	cld
0000000100037436	.byte 0xff #bad opcode
0000000100037437	jmpq	*%rsp
0000000100037439	cld
000000010003743a	.byte 0xff #bad opcode
000000010003743b	jmpq	*-0x57000005(%rdx)
0000000100037441	.byte 0xfe #bad opcode
0000000100037442	.byte 0xff #bad opcode
0000000100037443	jmpq	*0x2e(%rsi)
0000000100037446	nopl	(%rax,%rax)
000000010003744e	nop
__ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h21c0bb4b8d1f80d9E:
0000000100037450	pushq	%rbp
0000000100037451	movq	%rsp, %rbp
0000000100037454	pushq	%r15
0000000100037456	pushq	%r14
0000000100037458	pushq	%r13
000000010003745a	pushq	%r12
000000010003745c	pushq	%rbx
000000010003745d	subq	$0xa8, %rsp
0000000100037464	movq	%rdi, %rbx
0000000100037467	movq	(%rdi), %rcx
000000010003746a	testq	%rcx, %rcx
000000010003746d	je	0x10003771b
0000000100037473	movq	0x8(%rbx), %rdx
0000000100037477	movq	0x10(%rbx), %rax
000000010003747b	cmpq	%rdx, %rax
000000010003747e	jae	0x100037497
0000000100037480	cmpb	$0x55, (%rcx,%rax)
0000000100037484	jne	0x100037497
0000000100037486	incq	%rax
0000000100037489	movq	%rax, 0x10(%rbx)
000000010003748d	movb	$0x1, %r12b
0000000100037490	cmpq	%rdx, %rax
0000000100037493	jb	0x10003749f
0000000100037495	jmp	0x1000374da
0000000100037497	xorl	%r12d, %r12d
000000010003749a	cmpq	%rdx, %rax
000000010003749d	jae	0x1000374da
000000010003749f	cmpb	$0x4b, (%rcx,%rax)
00000001000374a3	jne	0x1000374da
00000001000374a5	leaq	0x1(%rax), %rsi
00000001000374a9	movq	%rsi, 0x10(%rbx)
00000001000374ad	cmpq	%rdx, %rsi
00000001000374b0	jae	0x1000375d4
00000001000374b6	cmpb	$0x43, (%rcx,%rsi)
00000001000374ba	jne	0x1000375d4
00000001000374c0	addq	$0x2, %rax
00000001000374c4	movq	%rax, 0x10(%rbx)
00000001000374c8	movl	$0x1, %r14d
00000001000374ce	leaq	0xecb1(%rip), %r15
00000001000374d5	jmp	0x100037631
00000001000374da	testb	%r12b, %r12b
00000001000374dd	je	0x10003771b
00000001000374e3	xorl	%r15d, %r15d
00000001000374e6	movq	0x20(%rbx), %rdx
00000001000374ea	testq	%rdx, %rdx
00000001000374ed	je	0x10003750c
00000001000374ef	leaq	0xee45(%rip), %rdi
00000001000374f6	movl	$0x7, %esi
00000001000374fb	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037500	movl	%eax, %ecx
0000000100037502	movb	$0x1, %al
0000000100037504	testb	%cl, %cl
0000000100037506	jne	0x100037830
000000010003750c	testq	%r15, %r15
000000010003750f	je	0x10003771b
0000000100037515	movq	0x20(%rbx), %r13
0000000100037519	testq	%r13, %r13
000000010003751c	je	0x10003753e
000000010003751e	leaq	0xf01b(%rip), %rdi
0000000100037525	movl	$0x8, %esi
000000010003752a	movq	%r13, %rdx
000000010003752d	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037532	movl	%eax, %ecx
0000000100037534	movb	$0x1, %al
0000000100037536	testb	%cl, %cl
0000000100037538	jne	0x100037830
000000010003753e	movq	$0x0, -0xb8(%rbp)
0000000100037549	movq	%r14, -0xb0(%rbp)
0000000100037550	leaq	-0xa8(%rbp), %rsi
0000000100037557	movq	%r15, -0xa8(%rbp)
000000010003755e	movq	%r14, -0xa0(%rbp)
0000000100037565	movq	$0x0, -0x98(%rbp)
0000000100037570	movq	%r14, -0x90(%rbp)
0000000100037577	movq	$0x1, -0x88(%rbp)
0000000100037582	movabsq	$0x5f0000005f, %rax             ## imm = 0x5F0000005F
000000010003758c	movq	%rax, -0x80(%rbp)
0000000100037590	movw	$0x1, -0x78(%rbp)
0000000100037596	leaq	-0x70(%rbp), %rdi
000000010003759a	callq	__ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17he73d148255917e64E ## _$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$::next_match::he73d148255917e64
000000010003759f	cmpq	$0x0, -0x70(%rbp)
00000001000375a4	je	0x100037691
00000001000375aa	movq	-0x68(%rbp), %rsi
00000001000375ae	movq	-0x60(%rbp), %rax
00000001000375b2	movq	-0xb8(%rbp), %rcx
00000001000375b9	addq	%rcx, %r15
00000001000375bc	subq	%rcx, %rsi
00000001000375bf	movq	%rax, -0xb8(%rbp)
00000001000375c6	testq	%r13, %r13
00000001000375c9	jne	0x1000376cb
00000001000375cf	jmp	0x1000376da
00000001000375d4	leaq	-0x70(%rbp), %rdi
00000001000375d8	movq	%rbx, %rsi
00000001000375db	callq	__ZN14rustc_demangle2v06Parser5ident17h2232a8e6be06ef2fE ## rustc_demangle::v0::Parser::ident::h2232a8e6be06ef2f
00000001000375e0	movq	-0x70(%rbp), %r15
00000001000375e4	testq	%r15, %r15
00000001000375e7	je	0x10003763f
00000001000375e9	movq	-0x68(%rbp), %r14
00000001000375ed	testq	%r14, %r14
00000001000375f0	je	0x1000375f9
00000001000375f2	cmpq	$0x0, -0x58(%rbp)
00000001000375f7	je	0x100037631
00000001000375f9	movq	0x20(%rbx), %rdx
00000001000375fd	testq	%rdx, %rdx
0000000100037600	je	0x10003761f
0000000100037602	leaq	0xef27(%rip), %rdi
0000000100037609	movl	$0x10, %esi
000000010003760e	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037613	movl	%eax, %ecx
0000000100037615	movb	$0x1, %al
0000000100037617	testb	%cl, %cl
0000000100037619	jne	0x100037830
000000010003761f	movq	$0x0, (%rbx)
0000000100037626	movb	$0x0, 0x8(%rbx)
000000010003762a	xorl	%eax, %eax
000000010003762c	jmp	0x100037830
0000000100037631	testb	%r12b, %r12b
0000000100037634	jne	0x1000374e6
000000010003763a	jmp	0x100037515
000000010003763f	movzbl	-0x68(%rbp), %r14d
0000000100037644	movq	0x20(%rbx), %rdx
0000000100037648	testq	%rdx, %rdx
000000010003764b	je	0x10003767f
000000010003764d	testb	%r14b, %r14b
0000000100037650	leaq	0xeed9(%rip), %rax
0000000100037657	leaq	0xeca4(%rip), %rdi
000000010003765e	cmoveq	%rax, %rdi
0000000100037662	movzbl	%r14b, %eax
0000000100037666	leaq	(%rax,%rax,8), %rsi
000000010003766a	orq	$0x10, %rsi
000000010003766e	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037673	movl	%eax, %ecx
0000000100037675	movb	$0x1, %al
0000000100037677	testb	%cl, %cl
0000000100037679	jne	0x100037830
000000010003767f	movq	$0x0, (%rbx)
0000000100037686	movb	%r14b, 0x8(%rbx)
000000010003768a	xorl	%eax, %eax
000000010003768c	jmp	0x100037830
0000000100037691	cmpb	$0x0, -0x77(%rbp)
0000000100037695	jne	0x100037909
000000010003769b	movb	$0x1, -0x77(%rbp)
000000010003769f	cmpb	$0x0, -0x78(%rbp)
00000001000376a3	movq	-0xb8(%rbp), %r15
00000001000376aa	movq	-0xb0(%rbp), %rsi
00000001000376b1	jne	0x1000376bc
00000001000376b3	cmpq	%r15, %rsi
00000001000376b6	je	0x100037909
00000001000376bc	subq	%r15, %rsi
00000001000376bf	addq	-0xa8(%rbp), %r15
00000001000376c6	testq	%r13, %r13
00000001000376c9	je	0x1000376da
00000001000376cb	movq	%r15, %rdi
00000001000376ce	movq	%r13, %rdx
00000001000376d1	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000376d6	testb	%al, %al
00000001000376d8	jne	0x100037714
00000001000376da	leaq	-0x70(%rbp), %rdi
00000001000376de	leaq	-0xb8(%rbp), %rsi
00000001000376e5	movl	$0x9, %ecx
00000001000376ea	rep		movsq	(%rsi), %es:(%rdi)
00000001000376ed	cmpb	$0x0, -0x2f(%rbp)
00000001000376f1	je	0x100037842
00000001000376f7	testq	%r13, %r13
00000001000376fa	je	0x10003771b
00000001000376fc	leaq	0xec3f(%rip), %rdi
0000000100037703	movl	$0x2, %esi
0000000100037708	movq	%r13, %rdx
000000010003770b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037710	testb	%al, %al
0000000100037712	je	0x10003771b
0000000100037714	movb	$0x1, %al
0000000100037716	jmp	0x100037830
000000010003771b	movq	0x20(%rbx), %rdx
000000010003771f	testq	%rdx, %rdx
0000000100037722	je	0x100037741
0000000100037724	leaq	0xec19(%rip), %rdi
000000010003772b	movl	$0x3, %esi
0000000100037730	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037735	movl	%eax, %ecx
0000000100037737	movb	$0x1, %al
0000000100037739	testb	%cl, %cl
000000010003773b	jne	0x100037830
0000000100037741	movq	(%rbx), %rax
0000000100037744	testq	%rax, %rax
0000000100037747	je	0x1000377a8
0000000100037749	leaq	0xebcf(%rip), %r14
0000000100037750	xorl	%r15d, %r15d
0000000100037753	nopw	%cs:(%rax,%rax)
000000010003775d	nopl	(%rax)
0000000100037760	movq	0x10(%rbx), %rcx
0000000100037764	cmpq	0x8(%rbx), %rcx
0000000100037768	jae	0x100037770
000000010003776a	cmpb	$0x45, (%rax,%rcx)
000000010003776e	je	0x1000377d6
0000000100037770	subq	$0x1, %r15
0000000100037774	jb	0x100037790
0000000100037776	movq	0x20(%rbx), %rdx
000000010003777a	testq	%rdx, %rdx
000000010003777d	je	0x100037790
000000010003777f	movl	$0x2, %esi
0000000100037784	movq	%r14, %rdi
0000000100037787	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003778c	testb	%al, %al
000000010003778e	jne	0x100037714
0000000100037790	movq	%rbx, %rdi
0000000100037793	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100037798	testb	%al, %al
000000010003779a	jne	0x100037714
00000001000377a0	movq	(%rbx), %rax
00000001000377a3	testq	%rax, %rax
00000001000377a6	jne	0x100037760
00000001000377a8	xorl	%eax, %eax
00000001000377aa	movq	0x20(%rbx), %rdx
00000001000377ae	testq	%rdx, %rdx
00000001000377b1	je	0x1000377e6
00000001000377b3	leaq	0xe9ce(%rip), %rdi
00000001000377ba	movl	$0x1, %esi
00000001000377bf	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000377c4	movl	%eax, %ecx
00000001000377c6	movb	$0x1, %al
00000001000377c8	testb	%cl, %cl
00000001000377ca	jne	0x100037830
00000001000377cc	movq	(%rbx), %rax
00000001000377cf	testq	%rax, %rax
00000001000377d2	jne	0x1000377eb
00000001000377d4	jmp	0x100037806
00000001000377d6	incq	%rcx
00000001000377d9	movq	%rcx, 0x10(%rbx)
00000001000377dd	movq	0x20(%rbx), %rdx
00000001000377e1	testq	%rdx, %rdx
00000001000377e4	jne	0x1000377b3
00000001000377e6	testq	%rax, %rax
00000001000377e9	je	0x100037806
00000001000377eb	movq	0x10(%rbx), %rcx
00000001000377ef	cmpq	0x8(%rbx), %rcx
00000001000377f3	jae	0x100037806
00000001000377f5	cmpb	$0x75, (%rax,%rcx)
00000001000377f9	jne	0x100037806
00000001000377fb	incq	%rcx
00000001000377fe	movq	%rcx, 0x10(%rbx)
0000000100037802	xorl	%eax, %eax
0000000100037804	jmp	0x100037830
0000000100037806	movq	0x20(%rbx), %rdx
000000010003780a	testq	%rdx, %rdx
000000010003780d	je	0x100037828
000000010003780f	leaq	0xed0a(%rip), %rdi
0000000100037816	movl	$0x4, %esi
000000010003781b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037820	movl	%eax, %ecx
0000000100037822	movb	$0x1, %al
0000000100037824	testb	%cl, %cl
0000000100037826	jne	0x100037830
0000000100037828	movq	%rbx, %rdi
000000010003782b	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100037830	addq	$0xa8, %rsp
0000000100037837	popq	%rbx
0000000100037838	popq	%r12
000000010003783a	popq	%r13
000000010003783c	popq	%r14
000000010003783e	popq	%r15
0000000100037840	popq	%rbp
0000000100037841	retq
0000000100037842	movq	%r13, %r14
0000000100037845	jmp	0x100037854
0000000100037847	xorl	%r14d, %r14d
000000010003784a	cmpb	$0x0, -0x2f(%rbp)
000000010003784e	jne	0x1000376f7
0000000100037854	movq	-0x60(%rbp), %r15
0000000100037858	leaq	-0xd0(%rbp), %rdi
000000010003785f	leaq	-0x60(%rbp), %rsi
0000000100037863	callq	__ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17he73d148255917e64E ## _$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$::next_match::he73d148255917e64
0000000100037868	cmpq	$0x0, -0xd0(%rbp)
0000000100037870	je	0x100037895
0000000100037872	movq	-0xc8(%rbp), %r12
0000000100037879	movq	-0xc0(%rbp), %rax
0000000100037880	movq	-0x70(%rbp), %rcx
0000000100037884	addq	%rcx, %r15
0000000100037887	subq	%rcx, %r12
000000010003788a	movq	%rax, -0x70(%rbp)
000000010003788e	testq	%r14, %r14
0000000100037891	jne	0x1000378c6
0000000100037893	jmp	0x100037847
0000000100037895	cmpb	$0x0, -0x2f(%rbp)
0000000100037899	jne	0x1000376f7
000000010003789f	movb	$0x1, -0x2f(%rbp)
00000001000378a3	cmpb	$0x0, -0x30(%rbp)
00000001000378a7	movq	-0x70(%rbp), %r15
00000001000378ab	movq	-0x68(%rbp), %r12
00000001000378af	jne	0x1000378ba
00000001000378b1	cmpq	%r15, %r12
00000001000378b4	je	0x1000376f7
00000001000378ba	subq	%r15, %r12
00000001000378bd	addq	-0x60(%rbp), %r15
00000001000378c1	testq	%r14, %r14
00000001000378c4	je	0x100037847
00000001000378c6	movl	$0x1, %esi
00000001000378cb	leaq	0xe96b(%rip), %rdi
00000001000378d2	movq	%r14, %rdx
00000001000378d5	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000378da	testb	%al, %al
00000001000378dc	jne	0x100037714
00000001000378e2	testq	%r13, %r13
00000001000378e5	je	0x100037847
00000001000378eb	movq	%r15, %rdi
00000001000378ee	movq	%r12, %rsi
00000001000378f1	movq	%r13, %rdx
00000001000378f4	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000378f9	movq	%r13, %r14
00000001000378fc	testb	%al, %al
00000001000378fe	je	0x10003784a
0000000100037904	jmp	0x100037714
0000000100037909	leaq	0xe848(%rip), %rdi
0000000100037910	leaq	0x123a1(%rip), %rdx
0000000100037917	movl	$0x2b, %esi
000000010003791c	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100037921	nopw	%cs:(%rax,%rax)
000000010003792b	nopl	(%rax,%rax)
__ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hab009cf836bb3f8eE:
0000000100037930	pushq	%rbp
0000000100037931	movq	%rsp, %rbp
0000000100037934	pushq	%r15
0000000100037936	pushq	%r14
0000000100037938	pushq	%r12
000000010003793a	pushq	%rbx
000000010003793b	subq	$0x20, %rsp
000000010003793f	movq	%rdi, %rbx
0000000100037942	movq	(%rdi), %rdi
0000000100037945	testq	%rdi, %rdi
0000000100037948	je	0x100037a3c
000000010003794e	movq	0x8(%rbx), %r8
0000000100037952	movq	0x10(%rbx), %rsi
0000000100037956	cmpq	%r8, %rsi
0000000100037959	jae	0x100037a3c
000000010003795f	cmpb	$0x42, (%rdi,%rsi)
0000000100037963	jne	0x100037990
0000000100037965	leaq	0x1(%rsi), %r9
0000000100037969	movq	%r9, 0x10(%rbx)
000000010003796d	cmpq	%r8, %r9
0000000100037970	jae	0x100037a5c
0000000100037976	cmpb	$0x5f, (%rdi,%r9)
000000010003797b	jne	0x100037a5c
0000000100037981	leaq	0x2(%rsi), %rax
0000000100037985	movq	%rax, 0x10(%rbx)
0000000100037989	xorl	%eax, %eax
000000010003798b	jmp	0x100037ade
0000000100037990	cmpb	$0x49, (%rdi,%rsi)
0000000100037994	jne	0x100037a3c
000000010003799a	incq	%rsi
000000010003799d	movq	%rsi, 0x10(%rbx)
00000001000379a1	movq	%rbx, %rdi
00000001000379a4	xorl	%esi, %esi
00000001000379a6	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
00000001000379ab	testb	%al, %al
00000001000379ad	jne	0x100037b8a
00000001000379b3	movq	0x20(%rbx), %rdx
00000001000379b7	testq	%rdx, %rdx
00000001000379ba	je	0x1000379d5
00000001000379bc	leaq	0xe7c8(%rip), %rdi
00000001000379c3	movl	$0x1, %esi
00000001000379c8	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000379cd	testb	%al, %al
00000001000379cf	jne	0x100037b8a
00000001000379d5	movq	(%rbx), %rax
00000001000379d8	movb	$0x1, %r14b
00000001000379db	testq	%rax, %rax
00000001000379de	je	0x100037a4c
00000001000379e0	xorl	%r12d, %r12d
00000001000379e3	leaq	0xe935(%rip), %r15
00000001000379ea	movq	0x10(%rbx), %rcx
00000001000379ee	cmpq	0x8(%rbx), %rcx
00000001000379f2	jae	0x1000379fe
00000001000379f4	cmpb	$0x45, (%rax,%rcx)
00000001000379f8	je	0x100037bb3
00000001000379fe	subq	$0x1, %r12
0000000100037a02	jb	0x100037a22
0000000100037a04	movq	0x20(%rbx), %rdx
0000000100037a08	testq	%rdx, %rdx
0000000100037a0b	je	0x100037a22
0000000100037a0d	movl	$0x2, %esi
0000000100037a12	movq	%r15, %rdi
0000000100037a15	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037a1a	testb	%al, %al
0000000100037a1c	jne	0x100037b8a
0000000100037a22	movq	%rbx, %rdi
0000000100037a25	callq	__ZN14rustc_demangle2v07Printer17print_generic_arg17hdea827297606b6ebE ## rustc_demangle::v0::Printer::print_generic_arg::hdea827297606b6eb
0000000100037a2a	testb	%al, %al
0000000100037a2c	jne	0x100037b8a
0000000100037a32	movq	(%rbx), %rax
0000000100037a35	testq	%rax, %rax
0000000100037a38	jne	0x1000379ea
0000000100037a3a	jmp	0x100037a4c
0000000100037a3c	movq	%rbx, %rdi
0000000100037a3f	xorl	%esi, %esi
0000000100037a41	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100037a46	movl	%eax, %r14d
0000000100037a49	addb	%r14b, %r14b
0000000100037a4c	movl	%r14d, %eax
0000000100037a4f	addq	$0x20, %rsp
0000000100037a53	popq	%rbx
0000000100037a54	popq	%r12
0000000100037a56	popq	%r14
0000000100037a58	popq	%r15
0000000100037a5a	popq	%rbp
0000000100037a5b	retq
0000000100037a5c	xorl	%eax, %eax
0000000100037a5e	movl	$0x3e, %r10d
0000000100037a64	nopw	%cs:(%rax,%rax)
0000000100037a6e	nop
0000000100037a70	movb	$0x1, %cl
0000000100037a72	cmpq	%r8, %r9
0000000100037a75	jae	0x100037b53
0000000100037a7b	movzbl	(%rdi,%r9), %edx
0000000100037a80	cmpb	$0x5f, %dl
0000000100037a83	je	0x100037ad2
0000000100037a85	leal	-0x30(%rdx), %r11d
0000000100037a89	cmpb	$0xa, %r11b
0000000100037a8d	jb	0x100037ab4
0000000100037a8f	leal	-0x61(%rdx), %r11d
0000000100037a93	cmpb	$0x1a, %r11b
0000000100037a97	jae	0x100037aa0
0000000100037a99	addb	$-0x57, %dl
0000000100037a9c	jmp	0x100037ab1
0000000100037a9e	nop
0000000100037aa0	leal	-0x41(%rdx), %r11d
0000000100037aa4	cmpb	$0x1a, %r11b
0000000100037aa8	jae	0x100037b53
0000000100037aae	addb	$-0x1d, %dl
0000000100037ab1	movl	%edx, %r11d
0000000100037ab4	incq	%r9
0000000100037ab7	movq	%r9, 0x10(%rbx)
0000000100037abb	mulq	%r10
0000000100037abe	jo	0x100037b53
0000000100037ac4	movzbl	%r11b, %edx
0000000100037ac8	addq	%rdx, %rax
0000000100037acb	jae	0x100037a70
0000000100037acd	jmp	0x100037b53
0000000100037ad2	incq	%r9
0000000100037ad5	movq	%r9, 0x10(%rbx)
0000000100037ad9	incq	%rax
0000000100037adc	je	0x100037b53
0000000100037ade	cmpq	%rsi, %rax
0000000100037ae1	jae	0x100037b51
0000000100037ae3	movl	0x18(%rbx), %ecx
0000000100037ae6	incl	%ecx
0000000100037ae8	cmpl	$0x1f4, %ecx                    ## imm = 0x1F4
0000000100037aee	ja	0x100037b92
0000000100037af4	cmpq	$0x0, 0x20(%rbx)
0000000100037af9	je	0x100037bab
0000000100037aff	movq	0x18(%rbx), %rdx
0000000100037b03	movq	%rdx, -0x28(%rbp)
0000000100037b07	movq	0x10(%rbx), %rdx
0000000100037b0b	movq	%rdx, -0x30(%rbp)
0000000100037b0f	movq	(%rbx), %rdx
0000000100037b12	movq	0x8(%rbx), %rsi
0000000100037b16	movq	%rsi, -0x38(%rbp)
0000000100037b1a	movq	%rdx, -0x40(%rbp)
0000000100037b1e	movq	%rax, 0x10(%rbx)
0000000100037b22	movl	%ecx, 0x18(%rbx)
0000000100037b25	movq	%rbx, %rdi
0000000100037b28	callq	__ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hab009cf836bb3f8eE ## rustc_demangle::v0::Printer::print_path_maybe_open_generics::hab009cf836bb3f8e
0000000100037b2d	movq	-0x40(%rbp), %rcx
0000000100037b31	movq	-0x38(%rbp), %rdx
0000000100037b35	movq	%rcx, (%rbx)
0000000100037b38	movq	%rdx, 0x8(%rbx)
0000000100037b3c	movq	-0x30(%rbp), %rcx
0000000100037b40	movq	%rcx, 0x10(%rbx)
0000000100037b44	movq	-0x28(%rbp), %rcx
0000000100037b48	movq	%rcx, 0x18(%rbx)
0000000100037b4c	jmp	0x100037a4f
0000000100037b51	movb	$0x1, %cl
0000000100037b53	xorl	%r14d, %r14d
0000000100037b56	movq	0x20(%rbx), %rdx
0000000100037b5a	testq	%rdx, %rdx
0000000100037b5d	je	0x100037ba0
0000000100037b5f	leaq	0xe9ca(%rip), %rax
0000000100037b66	leaq	0xe795(%rip), %rdi
0000000100037b6d	testb	%cl, %cl
0000000100037b6f	cmovneq	%rax, %rdi
0000000100037b73	xorb	$0x1, %cl
0000000100037b76	movzbl	%cl, %eax
0000000100037b79	leaq	(%rax,%rax,8), %rsi
0000000100037b7d	orq	$0x10, %rsi
0000000100037b81	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037b86	testb	%al, %al
0000000100037b88	je	0x100037ba0
0000000100037b8a	movb	$0x2, %r14b
0000000100037b8d	jmp	0x100037a4c
0000000100037b92	movb	$0x1, %r14b
0000000100037b95	xorl	%ecx, %ecx
0000000100037b97	movq	0x20(%rbx), %rdx
0000000100037b9b	testq	%rdx, %rdx
0000000100037b9e	jne	0x100037b5f
0000000100037ba0	movq	$0x0, (%rbx)
0000000100037ba7	movb	%r14b, 0x8(%rbx)
0000000100037bab	xorl	%r14d, %r14d
0000000100037bae	jmp	0x100037a4c
0000000100037bb3	incq	%rcx
0000000100037bb6	movq	%rcx, 0x10(%rbx)
0000000100037bba	jmp	0x100037a4c
0000000100037bbf	nop
__ZN14rustc_demangle2v07Printer15print_dyn_trait17he3ecae93ee065759E:
0000000100037bc0	pushq	%rbp
0000000100037bc1	movq	%rsp, %rbp
0000000100037bc4	pushq	%r15
0000000100037bc6	pushq	%r14
0000000100037bc8	pushq	%r13
0000000100037bca	pushq	%r12
0000000100037bcc	pushq	%rbx
0000000100037bcd	subq	$0x48, %rsp
0000000100037bd1	movq	%rdi, %r14
0000000100037bd4	callq	__ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hab009cf836bb3f8eE ## rustc_demangle::v0::Printer::print_path_maybe_open_generics::hab009cf836bb3f8e
0000000100037bd9	movb	$0x1, %bl
0000000100037bdb	cmpb	$0x2, %al
0000000100037bdd	je	0x100037da9
0000000100037be3	movl	%eax, %r15d
0000000100037be6	leaq	-0x48(%rbp), %r12
0000000100037bea	leaq	-0x68(%rbp), %r13
0000000100037bee	jmp	0x100037c00
0000000100037bf0	movq	%r14, %rdi
0000000100037bf3	callq	__ZN14rustc_demangle2v07Printer10print_type17hfc113d348aaf1debE ## rustc_demangle::v0::Printer::print_type::hfc113d348aaf1deb
0000000100037bf8	testb	%al, %al
0000000100037bfa	jne	0x100037da9
0000000100037c00	movq	(%r14), %rcx
0000000100037c03	testq	%rcx, %rcx
0000000100037c06	je	0x100037d3c
0000000100037c0c	movq	0x10(%r14), %rax
0000000100037c10	cmpq	0x8(%r14), %rax
0000000100037c14	jae	0x100037d3c
0000000100037c1a	cmpb	$0x70, (%rcx,%rax)
0000000100037c1e	jne	0x100037d3c
0000000100037c24	incq	%rax
0000000100037c27	movq	%rax, 0x10(%r14)
0000000100037c2b	movq	0x20(%r14), %rdx
0000000100037c2f	testb	$0x1, %r15b
0000000100037c33	je	0x100037c60
0000000100037c35	testq	%rdx, %rdx
0000000100037c38	je	0x100037c85
0000000100037c3a	movl	$0x2, %esi
0000000100037c3f	leaq	0xe6d9(%rip), %rdi
0000000100037c46	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037c4b	testb	%al, %al
0000000100037c4d	je	0x100037c85
0000000100037c4f	jmp	0x100037da9
0000000100037c54	nopw	%cs:(%rax,%rax)
0000000100037c5e	nop
0000000100037c60	testq	%rdx, %rdx
0000000100037c63	je	0x100037d0d
0000000100037c69	movl	$0x1, %esi
0000000100037c6e	leaq	0xe516(%rip), %rdi
0000000100037c75	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037c7a	movb	$0x1, %r15b
0000000100037c7d	testb	%al, %al
0000000100037c7f	jne	0x100037dba
0000000100037c85	cmpq	$0x0, (%r14)
0000000100037c89	je	0x100037d1a
0000000100037c8f	movq	%r12, %rdi
0000000100037c92	movq	%r14, %rsi
0000000100037c95	callq	__ZN14rustc_demangle2v06Parser5ident17h2232a8e6be06ef2fE ## rustc_demangle::v0::Parser::ident::h2232a8e6be06ef2f
0000000100037c9a	cmpq	$0x0, -0x48(%rbp)
0000000100037c9f	je	0x100037d62
0000000100037ca5	movq	-0x30(%rbp), %rax
0000000100037ca9	movq	%rax, -0x50(%rbp)
0000000100037cad	movq	-0x38(%rbp), %rax
0000000100037cb1	movq	%rax, -0x58(%rbp)
0000000100037cb5	movq	-0x48(%rbp), %rax
0000000100037cb9	movq	-0x40(%rbp), %rcx
0000000100037cbd	movq	%rcx, -0x60(%rbp)
0000000100037cc1	movq	%rax, -0x68(%rbp)
0000000100037cc5	movq	0x20(%r14), %rsi
0000000100037cc9	testq	%rsi, %rsi
0000000100037ccc	je	0x100037bf0
0000000100037cd2	movq	%r13, %rdi
0000000100037cd5	callq	__ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17he10953cd55b64102E ## _$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$::fmt::he10953cd55b64102
0000000100037cda	testb	%al, %al
0000000100037cdc	jne	0x100037da9
0000000100037ce2	movq	0x20(%r14), %rdx
0000000100037ce6	testq	%rdx, %rdx
0000000100037ce9	je	0x100037bf0
0000000100037cef	movl	$0x3, %esi
0000000100037cf4	leaq	0xe64c(%rip), %rdi
0000000100037cfb	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037d00	testb	%al, %al
0000000100037d02	je	0x100037bf0
0000000100037d08	jmp	0x100037da9
0000000100037d0d	movb	$0x1, %r15b
0000000100037d10	cmpq	$0x0, (%r14)
0000000100037d14	jne	0x100037c8f
0000000100037d1a	movq	0x20(%r14), %rdx
0000000100037d1e	testq	%rdx, %rdx
0000000100037d21	je	0x100037da7
0000000100037d27	leaq	0xe5ed(%rip), %rdi
0000000100037d2e	movl	$0x1, %esi
0000000100037d33	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037d38	movl	%eax, %ebx
0000000100037d3a	jmp	0x100037da9
0000000100037d3c	testb	$0x1, %r15b
0000000100037d40	je	0x100037da7
0000000100037d42	movq	0x20(%r14), %rdx
0000000100037d46	testq	%rdx, %rdx
0000000100037d49	je	0x100037da7
0000000100037d4b	leaq	0xe438(%rip), %rdi
0000000100037d52	movl	$0x1, %esi
0000000100037d57	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037d5c	testb	%al, %al
0000000100037d5e	je	0x100037da7
0000000100037d60	jmp	0x100037da9
0000000100037d62	movzbl	-0x40(%rbp), %r15d
0000000100037d67	movq	0x20(%r14), %rdx
0000000100037d6b	testq	%rdx, %rdx
0000000100037d6e	je	0x100037d9c
0000000100037d70	testb	%r15b, %r15b
0000000100037d73	leaq	0xe7b6(%rip), %rax
0000000100037d7a	leaq	0xe581(%rip), %rdi
0000000100037d81	cmoveq	%rax, %rdi
0000000100037d85	movzbl	%r15b, %eax
0000000100037d89	leaq	(%rax,%rax,8), %rsi
0000000100037d8d	orq	$0x10, %rsi
0000000100037d91	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037d96	movb	$0x1, %bl
0000000100037d98	testb	%al, %al
0000000100037d9a	jne	0x100037da9
0000000100037d9c	movq	$0x0, (%r14)
0000000100037da3	movb	%r15b, 0x8(%r14)
0000000100037da7	xorl	%ebx, %ebx
0000000100037da9	movl	%ebx, %eax
0000000100037dab	addq	$0x48, %rsp
0000000100037daf	popq	%rbx
0000000100037db0	popq	%r12
0000000100037db2	popq	%r13
0000000100037db4	popq	%r14
0000000100037db6	popq	%r15
0000000100037db8	popq	%rbp
0000000100037db9	retq
0000000100037dba	movb	$0x1, %bl
0000000100037dbc	jmp	0x100037da9
0000000100037dbe	nop
__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE:
0000000100037dc0	pushq	%rbp
0000000100037dc1	movq	%rsp, %rbp
0000000100037dc4	pushq	%r15
0000000100037dc6	pushq	%r14
0000000100037dc8	pushq	%r12
0000000100037dca	pushq	%rbx
0000000100037dcb	subq	$0x10, %rsp
0000000100037dcf	movq	%rdi, %rbx
0000000100037dd2	movq	(%rdi), %rcx
0000000100037dd5	testq	%rcx, %rcx
0000000100037dd8	je	0x100038394
0000000100037dde	movq	0x8(%rbx), %rdi
0000000100037de2	movq	0x10(%rbx), %rax
0000000100037de6	cmpq	%rdi, %rax
0000000100037de9	jae	0x100037ffc
0000000100037def	movzbl	(%rcx,%rax), %r15d
0000000100037df4	leaq	0x1(%rax), %rdx
0000000100037df8	movq	%rdx, 0x10(%rbx)
0000000100037dfc	movl	0x18(%rbx), %r8d
0000000100037e00	incl	%r8d
0000000100037e03	movl	%r8d, 0x18(%rbx)
0000000100037e07	cmpl	$0x1f4, %r8d                    ## imm = 0x1F4
0000000100037e0e	ja	0x100037e8f
0000000100037e10	leal	-0x41(%r15), %r8d
0000000100037e14	cmpl	$0x38, %r8d
0000000100037e18	ja	0x100037ffc
0000000100037e1e	leaq	0x697(%rip), %r9
0000000100037e25	movslq	(%r9,%r8,4), %r8
0000000100037e29	addq	%r9, %r8
0000000100037e2c	jmpq	*%r8
0000000100037e2f	cmpq	%rdi, %rdx
0000000100037e32	jae	0x100037e67
0000000100037e34	cmpb	$0x6e, (%rcx,%rdx)
0000000100037e38	jne	0x100037e67
0000000100037e3a	addq	$0x2, %rax
0000000100037e3e	movq	%rax, 0x10(%rbx)
0000000100037e42	movq	0x20(%rbx), %rdx
0000000100037e46	testq	%rdx, %rdx
0000000100037e49	je	0x100037e67
0000000100037e4b	leaq	0xe3eb(%rip), %rdi
0000000100037e52	movl	$0x1, %esi
0000000100037e57	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037e5c	movb	$0x1, %r14b
0000000100037e5f	testb	%al, %al
0000000100037e61	jne	0x1000383bd
0000000100037e67	movq	%rbx, %rdi
0000000100037e6a	movl	%r15d, %esi
0000000100037e6d	callq	__ZN14rustc_demangle2v07Printer16print_const_uint17h7724f57f429c3499E ## rustc_demangle::v0::Printer::print_const_uint::h7724f57f429c3499
0000000100037e72	movb	$0x1, %r14b
0000000100037e75	testb	%al, %al
0000000100037e77	jne	0x1000383bd
0000000100037e7d	cmpq	$0x0, (%rbx)
0000000100037e81	je	0x1000383ba
0000000100037e87	decl	0x18(%rbx)
0000000100037e8a	jmp	0x1000383ba
0000000100037e8f	movq	0x20(%rbx), %rdx
0000000100037e93	testq	%rdx, %rdx
0000000100037e96	je	0x100037eb4
0000000100037e98	leaq	0xe463(%rip), %rdi
0000000100037e9f	movl	$0x19, %esi
0000000100037ea4	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100037ea9	movb	$0x1, %r14b
0000000100037eac	testb	%al, %al
0000000100037eae	jne	0x1000383bd
0000000100037eb4	movq	$0x0, (%rbx)
0000000100037ebb	movb	$0x1, 0x8(%rbx)
0000000100037ebf	jmp	0x1000383ba
0000000100037ec4	cmpb	$0x52, %r15b
0000000100037ec8	jne	0x100037ee7
0000000100037eca	cmpq	%rdi, %rdx
0000000100037ecd	jae	0x100037ee7
0000000100037ecf	cmpb	$0x65, (%rcx,%rdx)
0000000100037ed3	jne	0x100037ee7
0000000100037ed5	addq	$0x2, %rax
0000000100037ed9	movq	%rax, 0x10(%rbx)
0000000100037edd	movq	%rbx, %rdi
0000000100037ee0	callq	__ZN14rustc_demangle2v07Printer23print_const_str_literal17h1e8f06487692e04eE ## rustc_demangle::v0::Printer::print_const_str_literal::h1e8f06487692e04e
0000000100037ee5	jmp	0x100037e72
0000000100037ee7	movq	0x20(%rbx), %rdx
0000000100037eeb	testb	%sil, %sil
0000000100037eee	je	0x10003805f
0000000100037ef4	xorl	%r12d, %r12d
0000000100037ef7	jmp	0x10003808b
0000000100037efc	movq	0x20(%rbx), %rdx
0000000100037f00	testb	%sil, %sil
0000000100037f03	je	0x100038104
0000000100037f09	xorl	%r12d, %r12d
0000000100037f0c	jmp	0x100038130
0000000100037f11	movzbl	%sil, %esi
0000000100037f15	movq	%rbx, %rdi
0000000100037f18	callq	__ZN14rustc_demangle2v07Printer13print_backref17hd153d2f89f5c54f7E ## rustc_demangle::v0::Printer::print_backref::hd153d2f89f5c54f7
0000000100037f1d	jmp	0x100037e72
0000000100037f22	movq	0x20(%rbx), %rdx
0000000100037f26	testb	%sil, %sil
0000000100037f29	je	0x10003815a
0000000100037f2f	xorl	%r12d, %r12d
0000000100037f32	jmp	0x100038186
0000000100037f37	testb	%sil, %sil
0000000100037f3a	je	0x1000381b0
0000000100037f40	xorl	%r12d, %r12d
0000000100037f43	jmp	0x100038320
0000000100037f48	leaq	-0x30(%rbp), %rdi
0000000100037f4c	movq	%rbx, %rsi
0000000100037f4f	callq	__ZN14rustc_demangle2v06Parser11hex_nibbles17h3e7d6119c18b9acdE ## rustc_demangle::v0::Parser::hex_nibbles::h3e7d6119c18b9acd
0000000100037f54	movq	-0x30(%rbp), %rdi
0000000100037f58	testq	%rdi, %rdi
0000000100037f5b	je	0x1000380b5
0000000100037f61	movq	-0x28(%rbp), %rsi
0000000100037f65	callq	__ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h3aa97c0ac1f1c2b1E ## rustc_demangle::v0::HexNibbles::try_parse_uint::h3aa97c0ac1f1c2b1
0000000100037f6a	cmpq	$0x1, %rax
0000000100037f6e	jne	0x100037ffc
0000000100037f74	testq	%rdx, %rdx
0000000100037f77	je	0x10003840b
0000000100037f7d	cmpq	$0x1, %rdx
0000000100037f81	jne	0x100037ffc
0000000100037f83	movq	0x20(%rbx), %rdx
0000000100037f87	testq	%rdx, %rdx
0000000100037f8a	je	0x100037e7d
0000000100037f90	leaq	0xe685(%rip), %rdi
0000000100037f97	movl	$0x4, %esi
0000000100037f9c	jmp	0x100038401
0000000100037fa1	leaq	-0x30(%rbp), %rdi
0000000100037fa5	movq	%rbx, %rsi
0000000100037fa8	callq	__ZN14rustc_demangle2v06Parser11hex_nibbles17h3e7d6119c18b9acdE ## rustc_demangle::v0::Parser::hex_nibbles::h3e7d6119c18b9acd
0000000100037fad	movq	-0x30(%rbp), %rdi
0000000100037fb1	testq	%rdi, %rdi
0000000100037fb4	je	0x1000380b5
0000000100037fba	movq	-0x28(%rbp), %rsi
0000000100037fbe	callq	__ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h3aa97c0ac1f1c2b1E ## rustc_demangle::v0::HexNibbles::try_parse_uint::h3aa97c0ac1f1c2b1
0000000100037fc3	testq	%rax, %rax
0000000100037fc6	je	0x100037ffc
0000000100037fc8	movq	%rdx, %rax
0000000100037fcb	shrq	$0x20, %rax
0000000100037fcf	jne	0x100037ffc
0000000100037fd1	movl	%edx, %eax
0000000100037fd3	xorl	$0xd800, %eax                   ## imm = 0xD800
0000000100037fd8	addl	$0xffef0000, %eax               ## imm = 0xFFEF0000
0000000100037fdd	cmpl	$0xffef0800, %eax               ## imm = 0xFFEF0800
0000000100037fe2	jb	0x100037ffc
0000000100037fe4	cmpl	$0x110000, %edx                 ## imm = 0x110000
0000000100037fea	je	0x100037ffc
0000000100037fec	movq	0x20(%rbx), %rdi
0000000100037ff0	movl	%edx, %esi
0000000100037ff2	callq	__ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h6ccc261c13e6f737E ## rustc_demangle::v0::Printer::print_quoted_escaped_chars::h6ccc261c13e6f737
0000000100037ff7	jmp	0x100037e72
0000000100037ffc	movq	0x20(%rbx), %rdx
0000000100038000	testq	%rdx, %rdx
0000000100038003	je	0x100038021
0000000100038005	leaq	0xe524(%rip), %rdi
000000010003800c	movl	$0x10, %esi
0000000100038011	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038016	movb	$0x1, %r14b
0000000100038019	testb	%al, %al
000000010003801b	jne	0x1000383bd
0000000100038021	movq	$0x0, (%rbx)
0000000100038028	movb	$0x0, 0x8(%rbx)
000000010003802c	jmp	0x1000383ba
0000000100038031	movq	0x20(%rbx), %rdx
0000000100038035	testb	%sil, %sil
0000000100038038	je	0x1000381e1
000000010003803e	xorl	%r12d, %r12d
0000000100038041	jmp	0x10003820d
0000000100038046	movq	0x20(%rbx), %rdx
000000010003804a	testq	%rdx, %rdx
000000010003804d	je	0x100037e7d
0000000100038053	leaq	0xe2a4(%rip), %rdi
000000010003805a	jmp	0x1000383fc
000000010003805f	testq	%rdx, %rdx
0000000100038062	je	0x100038237
0000000100038068	leaq	0xe2e5(%rip), %rdi
000000010003806f	movl	$0x1, %esi
0000000100038074	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038079	movb	$0x1, %r14b
000000010003807c	testb	%al, %al
000000010003807e	jne	0x1000383bd
0000000100038084	movq	0x20(%rbx), %rdx
0000000100038088	movb	$0x1, %r12b
000000010003808b	testq	%rdx, %rdx
000000010003808e	je	0x10003823a
0000000100038094	leaq	0xe0f1(%rip), %rdi
000000010003809b	movl	$0x1, %esi
00000001000380a0	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000380a5	movb	$0x1, %r14b
00000001000380a8	testb	%al, %al
00000001000380aa	jne	0x1000383bd
00000001000380b0	jmp	0x10003823a
00000001000380b5	movzbl	-0x28(%rbp), %r15d
00000001000380ba	movq	0x20(%rbx), %rdx
00000001000380be	testq	%rdx, %rdx
00000001000380c1	je	0x1000380f4
00000001000380c3	testb	%r15b, %r15b
00000001000380c6	leaq	0xe463(%rip), %rax
00000001000380cd	leaq	0xe22e(%rip), %rdi
00000001000380d4	cmoveq	%rax, %rdi
00000001000380d8	movzbl	%r15b, %eax
00000001000380dc	leaq	(%rax,%rax,8), %rsi
00000001000380e0	orq	$0x10, %rsi
00000001000380e4	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000380e9	movb	$0x1, %r14b
00000001000380ec	testb	%al, %al
00000001000380ee	jne	0x1000383bd
00000001000380f4	movq	$0x0, (%rbx)
00000001000380fb	movb	%r15b, 0x8(%rbx)
00000001000380ff	jmp	0x1000383ba
0000000100038104	testq	%rdx, %rdx
0000000100038107	je	0x100038282
000000010003810d	leaq	0xe240(%rip), %rdi
0000000100038114	movl	$0x1, %esi
0000000100038119	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003811e	movb	$0x1, %r14b
0000000100038121	testb	%al, %al
0000000100038123	jne	0x1000383bd
0000000100038129	movq	0x20(%rbx), %rdx
000000010003812d	movb	$0x1, %r12b
0000000100038130	testq	%rdx, %rdx
0000000100038133	je	0x100038285
0000000100038139	leaq	0xe1e1(%rip), %rdi
0000000100038140	movl	$0x1, %esi
0000000100038145	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003814a	movb	$0x1, %r14b
000000010003814d	testb	%al, %al
000000010003814f	jne	0x1000383bd
0000000100038155	jmp	0x100038285
000000010003815a	testq	%rdx, %rdx
000000010003815d	je	0x1000382af
0000000100038163	leaq	0xe1ea(%rip), %rdi
000000010003816a	movl	$0x1, %esi
000000010003816f	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038174	movb	$0x1, %r14b
0000000100038177	testb	%al, %al
0000000100038179	jne	0x1000383bd
000000010003817f	movq	0x20(%rbx), %rdx
0000000100038183	movb	$0x1, %r12b
0000000100038186	testq	%rdx, %rdx
0000000100038189	je	0x1000382b2
000000010003818f	leaq	0xdff3(%rip), %rdi
0000000100038196	movl	$0x1, %esi
000000010003819b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000381a0	movb	$0x1, %r14b
00000001000381a3	testb	%al, %al
00000001000381a5	jne	0x1000383bd
00000001000381ab	jmp	0x1000382b2
00000001000381b0	movq	0x20(%rbx), %rdx
00000001000381b4	testq	%rdx, %rdx
00000001000381b7	je	0x10003831d
00000001000381bd	leaq	0xe190(%rip), %rdi
00000001000381c4	movl	$0x1, %esi
00000001000381c9	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000381ce	movb	$0x1, %r12b
00000001000381d1	movb	$0x1, %r14b
00000001000381d4	testb	%al, %al
00000001000381d6	jne	0x1000383bd
00000001000381dc	jmp	0x100038320
00000001000381e1	testq	%rdx, %rdx
00000001000381e4	je	0x1000383cd
00000001000381ea	leaq	0xe163(%rip), %rdi
00000001000381f1	movl	$0x1, %esi
00000001000381f6	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000381fb	movb	$0x1, %r14b
00000001000381fe	testb	%al, %al
0000000100038200	jne	0x1000383bd
0000000100038206	movq	0x20(%rbx), %rdx
000000010003820a	movb	$0x1, %r12b
000000010003820d	testq	%rdx, %rdx
0000000100038210	je	0x1000383d0
0000000100038216	leaq	0xdf70(%rip), %rdi
000000010003821d	movl	$0x1, %esi
0000000100038222	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038227	movb	$0x1, %r14b
000000010003822a	testb	%al, %al
000000010003822c	jne	0x1000383bd
0000000100038232	jmp	0x1000383d0
0000000100038237	movb	$0x1, %r12b
000000010003823a	cmpb	$0x52, %r15b
000000010003823e	je	0x100038265
0000000100038240	movq	0x20(%rbx), %rdx
0000000100038244	testq	%rdx, %rdx
0000000100038247	je	0x100038265
0000000100038249	leaq	0xe2c8(%rip), %rdi
0000000100038250	movl	$0x4, %esi
0000000100038255	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003825a	movb	$0x1, %r14b
000000010003825d	testb	%al, %al
000000010003825f	jne	0x1000383bd
0000000100038265	movq	%rbx, %rdi
0000000100038268	movl	$0x1, %esi
000000010003826d	callq	__ZN14rustc_demangle2v07Printer11print_const17hca3881c8d99cf63bE ## rustc_demangle::v0::Printer::print_const::hca3881c8d99cf63b
0000000100038272	movb	$0x1, %r14b
0000000100038275	testb	%al, %al
0000000100038277	jne	0x1000383bd
000000010003827d	jmp	0x1000383df
0000000100038282	movb	$0x1, %r12b
0000000100038285	movq	%rbx, %rdi
0000000100038288	callq	__ZN14rustc_demangle2v07Printer14print_sep_list17h65c1eb8fc015b61fE ## rustc_demangle::v0::Printer::print_sep_list::h65c1eb8fc015b61f
000000010003828d	movb	$0x1, %r14b
0000000100038290	testq	%rax, %rax
0000000100038293	jne	0x1000383bd
0000000100038299	movq	0x20(%rbx), %rdx
000000010003829d	testq	%rdx, %rdx
00000001000382a0	je	0x1000383df
00000001000382a6	leaq	0xe075(%rip), %rdi
00000001000382ad	jmp	0x100038306
00000001000382af	movb	$0x1, %r12b
00000001000382b2	movq	%rbx, %rdi
00000001000382b5	callq	__ZN14rustc_demangle2v07Printer14print_sep_list17ha05d10c105be9b6aE ## rustc_demangle::v0::Printer::print_sep_list::ha05d10c105be9b6a
00000001000382ba	movb	$0x1, %r14b
00000001000382bd	testq	%rax, %rax
00000001000382c0	jne	0x1000383bd
00000001000382c6	cmpq	$0x1, %rdx
00000001000382ca	jne	0x1000382f2
00000001000382cc	movq	0x20(%rbx), %rdx
00000001000382d0	testq	%rdx, %rdx
00000001000382d3	je	0x1000383df
00000001000382d9	leaq	0xdea7(%rip), %rdi
00000001000382e0	movl	$0x1, %esi
00000001000382e5	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000382ea	testb	%al, %al
00000001000382ec	jne	0x1000383bd
00000001000382f2	movq	0x20(%rbx), %rdx
00000001000382f6	testq	%rdx, %rdx
00000001000382f9	je	0x1000383df
00000001000382ff	leaq	0xde82(%rip), %rdi
0000000100038306	movl	$0x1, %esi
000000010003830b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038310	testb	%al, %al
0000000100038312	jne	0x1000383bd
0000000100038318	jmp	0x1000383df
000000010003831d	movb	$0x1, %r12b
0000000100038320	movq	%rbx, %rdi
0000000100038323	movl	$0x1, %esi
0000000100038328	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
000000010003832d	movb	$0x1, %r14b
0000000100038330	testb	%al, %al
0000000100038332	jne	0x1000383bd
0000000100038338	movq	(%rbx), %rax
000000010003833b	testq	%rax, %rax
000000010003833e	je	0x100038394
0000000100038340	movq	0x10(%rbx), %rcx
0000000100038344	cmpq	0x8(%rbx), %rcx
0000000100038348	jae	0x10003836c
000000010003834a	movzbl	(%rax,%rcx), %eax
000000010003834e	incq	%rcx
0000000100038351	movq	%rcx, 0x10(%rbx)
0000000100038355	cmpl	$0x53, %eax
0000000100038358	je	0x100038426
000000010003835e	cmpl	$0x54, %eax
0000000100038361	je	0x100038484
0000000100038367	cmpl	$0x55, %eax
000000010003836a	je	0x1000383df
000000010003836c	movq	0x20(%rbx), %rdx
0000000100038370	testq	%rdx, %rdx
0000000100038373	je	0x100038021
0000000100038379	leaq	0xe1b0(%rip), %rdi
0000000100038380	movl	$0x10, %esi
0000000100038385	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003838a	testb	%al, %al
000000010003838c	je	0x100038021
0000000100038392	jmp	0x1000383bd
0000000100038394	movq	0x20(%rbx), %rdx
0000000100038398	testq	%rdx, %rdx
000000010003839b	je	0x1000383ba
000000010003839d	leaq	0xdf77(%rip), %rdi
00000001000383a4	movl	$0x1, %esi
00000001000383a9	addq	$0x10, %rsp
00000001000383ad	popq	%rbx
00000001000383ae	popq	%r12
00000001000383b0	popq	%r14
00000001000383b2	popq	%r15
00000001000383b4	popq	%rbp
00000001000383b5	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000383ba	xorl	%r14d, %r14d
00000001000383bd	movl	%r14d, %eax
00000001000383c0	addq	$0x10, %rsp
00000001000383c4	popq	%rbx
00000001000383c5	popq	%r12
00000001000383c7	popq	%r14
00000001000383c9	popq	%r15
00000001000383cb	popq	%rbp
00000001000383cc	retq
00000001000383cd	movb	$0x1, %r12b
00000001000383d0	movq	%rbx, %rdi
00000001000383d3	callq	__ZN14rustc_demangle2v07Printer23print_const_str_literal17h1e8f06487692e04eE ## rustc_demangle::v0::Printer::print_const_str_literal::h1e8f06487692e04e
00000001000383d8	movb	$0x1, %r14b
00000001000383db	testb	%al, %al
00000001000383dd	jne	0x1000383bd
00000001000383df	testb	%r12b, %r12b
00000001000383e2	je	0x100037e7d
00000001000383e8	movq	0x20(%rbx), %rdx
00000001000383ec	testq	%rdx, %rdx
00000001000383ef	je	0x100037e7d
00000001000383f5	leaq	0xde42(%rip), %rdi
00000001000383fc	movl	$0x1, %esi
0000000100038401	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038406	jmp	0x100037e72
000000010003840b	movq	0x20(%rbx), %rdx
000000010003840f	testq	%rdx, %rdx
0000000100038412	je	0x100037e7d
0000000100038418	leaq	0xdf2b(%rip), %rdi
000000010003841f	movl	$0x5, %esi
0000000100038424	jmp	0x100038401
0000000100038426	movq	0x20(%rbx), %rdx
000000010003842a	testq	%rdx, %rdx
000000010003842d	je	0x100038448
000000010003842f	leaq	0xdf19(%rip), %rdi
0000000100038436	movl	$0x3, %esi
000000010003843b	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038440	testb	%al, %al
0000000100038442	jne	0x1000383bd
0000000100038448	movq	%rbx, %rdi
000000010003844b	callq	__ZN14rustc_demangle2v07Printer14print_sep_list17h3f0f13fa992c4172E ## rustc_demangle::v0::Printer::print_sep_list::h3f0f13fa992c4172
0000000100038450	testq	%rax, %rax
0000000100038453	jne	0x1000383bd
0000000100038459	movq	0x20(%rbx), %rdx
000000010003845d	testq	%rdx, %rdx
0000000100038460	je	0x1000383df
0000000100038466	leaq	0xdee5(%rip), %rdi
000000010003846d	movl	$0x2, %esi
0000000100038472	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038477	testb	%al, %al
0000000100038479	jne	0x1000383bd
000000010003847f	jmp	0x1000383df
0000000100038484	movq	0x20(%rbx), %rdx
0000000100038488	testq	%rdx, %rdx
000000010003848b	je	0x1000384a6
000000010003848d	leaq	0xdcf5(%rip), %rdi
0000000100038494	movl	$0x1, %esi
0000000100038499	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003849e	testb	%al, %al
00000001000384a0	jne	0x1000383bd
00000001000384a6	movq	%rbx, %rdi
00000001000384a9	callq	__ZN14rustc_demangle2v07Printer14print_sep_list17h65c1eb8fc015b61fE ## rustc_demangle::v0::Printer::print_sep_list::h65c1eb8fc015b61f
00000001000384ae	testq	%rax, %rax
00000001000384b1	jne	0x1000383bd
00000001000384b7	jmp	0x1000382f2
00000001000384bc	cli
00000001000384be	.byte 0xff #bad opcode
00000001000384bf	callq	*-0x6(%rbp)
00000001000384c2	.byte 0xff #bad opcode
00000001000384c3	incl	-0x5(%rax)
00000001000384c6	.byte 0xff #bad opcode
00000001000384c7	incl	-0x5(%rax)
00000001000384ca	.byte 0xff #bad opcode
00000001000384cb	incl	-0x5(%rax)
00000001000384ce	.byte 0xff #bad opcode
00000001000384cf	incl	-0x5(%rax)
00000001000384d2	.byte 0xff #bad opcode
00000001000384d3	incl	-0x5(%rax)
00000001000384d6	.byte 0xff #bad opcode
00000001000384d7	incl	-0x5(%rax)
00000001000384da	.byte 0xff #bad opcode
00000001000384db	incl	-0x5(%rax)
00000001000384de	.byte 0xff #bad opcode
00000001000384df	incl	-0x5(%rax)
00000001000384e2	.byte 0xff #bad opcode
00000001000384e3	incl	-0x5(%rax)
00000001000384e6	.byte 0xff #bad opcode
00000001000384e7	incl	-0x5(%rax)
00000001000384ea	.byte 0xff #bad opcode
00000001000384eb	incl	-0x5(%rax)
00000001000384ee	.byte 0xff #bad opcode
00000001000384ef	incl	-0x5(%rax)
00000001000384f2	.byte 0xff #bad opcode
00000001000384f3	incl	-0x5(%rax)
00000001000384f6	.byte 0xff #bad opcode
00000001000384f7	incl	-0x5(%rax)
00000001000384fa	.byte 0xff #bad opcode
00000001000384fb	decl	(%rax)
00000001000384fd	cli
00000001000384fe	.byte 0xff #bad opcode
00000001000384ff	decl	(%rax)
0000000100038501	cli
0000000100038502	.byte 0xff #bad opcode
0000000100038503	incl	-0x5(%rax)
0000000100038506	.byte 0xff #bad opcode
0000000100038507	jmpq	*-0x6(%rsi)
000000010003850a	.byte 0xff #bad opcode
000000010003850b	incl	-0x5(%rax)
000000010003850e	.byte 0xff #bad opcode
000000010003850f	.byte 0xff #bad opcode
0000000100038510	jnp	0x10003850c
0000000100038512	.byte 0xff #bad opcode
0000000100038513	incl	-0x5(%rax)
0000000100038516	.byte 0xff #bad opcode
0000000100038517	incl	-0x5(%rax)
000000010003851a	.byte 0xff #bad opcode
000000010003851b	incl	-0x5(%rax)
000000010003851e	.byte 0xff #bad opcode
000000010003851f	incl	-0x5(%rax)
0000000100038522	.byte 0xff #bad opcode
0000000100038523	incl	-0x5(%rax)
0000000100038526	.byte 0xff #bad opcode
0000000100038527	incl	-0x5(%rax)
000000010003852a	.byte 0xff #bad opcode
000000010003852b	incl	-0x5(%rax)
000000010003852e	.byte 0xff #bad opcode
000000010003852f	incl	-0x5(%rax)
0000000100038532	.byte 0xff #bad opcode
0000000100038533	incl	-0x5(%rax)
0000000100038536	.byte 0xff #bad opcode
0000000100038537	incl	-0x5(%rax)
000000010003853a	.byte 0xff #bad opcode
000000010003853b	pushq	-0x7(%rbx)
000000010003853e	.byte 0xff #bad opcode
000000010003853f	decl	-0x51a0001(%rdx,%rdi,8)
0000000100038546	.byte 0xff #bad opcode
0000000100038547	incl	-0x5(%rax)
000000010003854a	.byte 0xff #bad opcode
000000010003854b	pushq	-0x5(%rbp)
000000010003854e	.byte 0xff #bad opcode
000000010003854f	incl	-0x5(%rax)
0000000100038552	.byte 0xff #bad opcode
0000000100038553	incl	-0x5(%rax)
0000000100038556	.byte 0xff #bad opcode
0000000100038557	ljmpl	*0x73fffff9(%rbx)
000000010003855d	stc
000000010003855e	.byte 0xff #bad opcode
000000010003855f	ljmpl	*0x40fffff9(%rbx)
0000000100038565	sti
0000000100038566	.byte 0xff #bad opcode
0000000100038567	pushq	-0x7(%rbx)
000000010003856a	.byte 0xff #bad opcode
000000010003856b	ljmpl	*0x73fffff9(%rbx)
0000000100038571	stc
0000000100038572	.byte 0xff #bad opcode
0000000100038573	ljmpl	*-0x75000007(%rbx)
0000000100038579	sti
000000010003857a	.byte 0xff #bad opcode
000000010003857b	incl	-0x5(%rax)
000000010003857e	.byte 0xff #bad opcode
000000010003857f	incl	-0x5(%rax)
0000000100038582	.byte 0xff #bad opcode
0000000100038583	pushq	-0x7(%rbx)
0000000100038586	.byte 0xff #bad opcode
0000000100038587	ljmpl	*0x40fffff9(%rbx)
000000010003858d	sti
000000010003858e	.byte 0xff #bad opcode
000000010003858f	incl	-0x5(%rax)
0000000100038592	.byte 0xff #bad opcode
0000000100038593	incl	-0x5(%rax)
0000000100038596	.byte 0xff #bad opcode
0000000100038597	pushq	-0x7(%rbx)
000000010003859a	.byte 0xff #bad opcode
000000010003859b	ljmpl	*0x55fffff9(%rbx)
00000001000385a1	movq	%rsp, %rbp
00000001000385a4	pushq	%r15
00000001000385a6	pushq	%r14
00000001000385a8	pushq	%r13
00000001000385aa	pushq	%r12
00000001000385ac	pushq	%rbx
00000001000385ad	pushq	%rax
00000001000385ae	movq	%rdi, %r14
00000001000385b1	movq	(%rdi), %rdi
00000001000385b4	testq	%rdi, %rdi
00000001000385b7	je	0x10003866e
00000001000385bd	movl	%esi, %ebx
00000001000385bf	movq	0x8(%r14), %rsi
00000001000385c3	movq	0x10(%r14), %rdx
00000001000385c7	leaq	0x1(%rdx), %rax
00000001000385cb	leaq	(%rdi,%rdx), %r15
00000001000385cf	xorl	%r12d, %r12d
00000001000385d2	nopw	%cs:(%rax,%rax)
00000001000385dc	nopl	(%rax)
00000001000385e0	leaq	(%rdx,%r12), %rcx
00000001000385e4	cmpq	%rsi, %rcx
00000001000385e7	jae	0x100038638
00000001000385e9	movzbl	(%r15,%r12), %ecx
00000001000385ee	leaq	(%rax,%r12), %r8
00000001000385f2	movq	%r8, 0x10(%r14)
00000001000385f6	leal	-0x30(%rcx), %r8d
00000001000385fa	incq	%r12
00000001000385fd	cmpb	$0xa, %r8b
0000000100038601	jb	0x1000385e0
0000000100038603	leal	-0x61(%rcx), %r8d
0000000100038607	cmpb	$0x6, %r8b
000000010003860b	jb	0x1000385e0
000000010003860d	cmpb	$0x5f, %cl
0000000100038610	jne	0x100038638
0000000100038612	leaq	-0x1(%rdx,%r12), %rcx
0000000100038617	cmpq	%rdx, %rcx
000000010003861a	jb	0x10003862c
000000010003861c	testq	%rdx, %rdx
000000010003861f	je	0x100038696
0000000100038621	cmpq	%rsi, %rdx
0000000100038624	jae	0x100038694
0000000100038626	cmpb	$-0x41, (%rdi,%rdx)
000000010003862a	jg	0x100038696
000000010003862c	leaq	0x1160d(%rip), %r8
0000000100038633	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100038638	movq	0x20(%r14), %rdx
000000010003863c	testq	%rdx, %rdx
000000010003863f	je	0x10003865d
0000000100038641	leaq	0xdee8(%rip), %rdi
0000000100038648	movl	$0x10, %esi
000000010003864d	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038652	movb	$0x1, %r13b
0000000100038655	testb	%al, %al
0000000100038657	jne	0x100038755
000000010003865d	movq	$0x0, (%r14)
0000000100038664	movb	$0x0, 0x8(%r14)
0000000100038669	jmp	0x100038752
000000010003866e	movq	0x20(%r14), %rdx
0000000100038672	testq	%rdx, %rdx
0000000100038675	je	0x100038752
000000010003867b	leaq	0xdc99(%rip), %rdi
0000000100038682	movl	$0x1, %esi
0000000100038687	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003868c	movl	%eax, %r13d
000000010003868f	jmp	0x100038755
0000000100038694	jne	0x10003862c
0000000100038696	decq	%r12
0000000100038699	movq	%r15, %rdi
000000010003869c	movq	%r12, %rsi
000000010003869f	callq	__ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h3aa97c0ac1f1c2b1E ## rustc_demangle::v0::HexNibbles::try_parse_uint::h3aa97c0ac1f1c2b1
00000001000386a4	testq	%rax, %rax
00000001000386a7	je	0x1000386d2
00000001000386a9	movq	0x20(%r14), %r14
00000001000386ad	movq	%rdx, -0x30(%rbp)
00000001000386b1	testq	%r14, %r14
00000001000386b4	je	0x100038752
00000001000386ba	leaq	-0x30(%rbp), %rdi
00000001000386be	movq	%r14, %rsi
00000001000386c1	callq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
00000001000386c6	movb	$0x1, %r13b
00000001000386c9	testb	%al, %al
00000001000386cb	je	0x100038708
00000001000386cd	jmp	0x100038755
00000001000386d2	movq	0x20(%r14), %r14
00000001000386d6	testq	%r14, %r14
00000001000386d9	je	0x100038752
00000001000386db	leaq	0xdc75(%rip), %rdi
00000001000386e2	movl	$0x2, %esi
00000001000386e7	movq	%r14, %rdx
00000001000386ea	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
00000001000386ef	movb	$0x1, %r13b
00000001000386f2	testb	%al, %al
00000001000386f4	jne	0x100038755
00000001000386f6	movq	%r15, %rdi
00000001000386f9	movq	%r12, %rsi
00000001000386fc	movq	%r14, %rdx
00000001000386ff	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038704	testb	%al, %al
0000000100038706	jne	0x100038755
0000000100038708	movq	%r14, %rdi
000000010003870b	callq	__ZN4core3fmt9Formatter9alternate17hc2243bb2c4eca803E ## core::fmt::Formatter::alternate::hc2243bb2c4eca803
0000000100038710	testb	%al, %al
0000000100038712	jne	0x100038752
0000000100038714	addb	$-0x61, %bl
0000000100038717	cmpb	$0x1a, %bl
000000010003871a	jae	0x100038767
000000010003871c	movzbl	%bl, %eax
000000010003871f	movl	$0x3bcfbbf, %ecx                ## imm = 0x3BCFBBF
0000000100038724	btl	%eax, %ecx
0000000100038727	jae	0x100038767
0000000100038729	movsbq	%bl, %rax
000000010003872d	leaq	0xdcf4(%rip), %rcx
0000000100038734	movq	(%rcx,%rax,8), %rsi
0000000100038738	leaq	0x11601(%rip), %rcx
000000010003873f	movq	(%rcx,%rax,8), %rdi
0000000100038743	movq	%r14, %rdx
0000000100038746	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003874b	movb	$0x1, %r13b
000000010003874e	testb	%al, %al
0000000100038750	jne	0x100038755
0000000100038752	xorl	%r13d, %r13d
0000000100038755	movl	%r13d, %eax
0000000100038758	addq	$0x8, %rsp
000000010003875c	popq	%rbx
000000010003875d	popq	%r12
000000010003875f	popq	%r13
0000000100038761	popq	%r14
0000000100038763	popq	%r15
0000000100038765	popq	%rbp
0000000100038766	retq
0000000100038767	leaq	0xd9ea(%rip), %rdi
000000010003876e	leaq	0x1155b(%rip), %rdx
0000000100038775	movl	$0x2b, %esi
000000010003877a	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010003877f	nop
__ZN14rustc_demangle2v07Printer23print_const_str_literal17h1e8f06487692e04eE:
0000000100038780	pushq	%rbp
0000000100038781	movq	%rsp, %rbp
0000000100038784	pushq	%r15
0000000100038786	pushq	%r14
0000000100038788	pushq	%r13
000000010003878a	pushq	%r12
000000010003878c	pushq	%rbx
000000010003878d	subq	$0x48, %rsp
0000000100038791	movq	%rdi, %r14
0000000100038794	movq	(%rdi), %rdi
0000000100038797	testq	%rdi, %rdi
000000010003879a	je	0x100038810
000000010003879c	movq	0x8(%r14), %rsi
00000001000387a0	movq	0x10(%r14), %rdx
00000001000387a4	leaq	0x1(%rdx), %rax
00000001000387a8	leaq	(%rdi,%rdx), %r15
00000001000387ac	xorl	%r12d, %r12d
00000001000387af	nop
00000001000387b0	leaq	(%rdx,%r12), %rcx
00000001000387b4	cmpq	%rsi, %rcx
00000001000387b7	jae	0x1000388ef
00000001000387bd	movzbl	(%r15,%r12), %ecx
00000001000387c2	leaq	(%rax,%r12), %r8
00000001000387c6	movq	%r8, 0x10(%r14)
00000001000387ca	leal	-0x30(%rcx), %r8d
00000001000387ce	incq	%r12
00000001000387d1	cmpb	$0xa, %r8b
00000001000387d5	jb	0x1000387b0
00000001000387d7	leal	-0x61(%rcx), %r8d
00000001000387db	cmpb	$0x6, %r8b
00000001000387df	jb	0x1000387b0
00000001000387e1	cmpb	$0x5f, %cl
00000001000387e4	jne	0x1000388ef
00000001000387ea	leaq	-0x1(%rdx,%r12), %rcx
00000001000387ef	cmpq	%rdx, %rcx
00000001000387f2	jb	0x100038804
00000001000387f4	testq	%rdx, %rdx
00000001000387f7	je	0x10003883e
00000001000387f9	cmpq	%rsi, %rdx
00000001000387fc	jae	0x10003883c
00000001000387fe	cmpb	$-0x41, (%rdi,%rdx)
0000000100038802	jg	0x10003883e
0000000100038804	leaq	0x11435(%rip), %r8
000000010003880b	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100038810	movq	0x20(%r14), %rdx
0000000100038814	testq	%rdx, %rdx
0000000100038817	je	0x10003891b
000000010003881d	leaq	0xdaf7(%rip), %rdi
0000000100038824	movl	$0x1, %esi
0000000100038829	addq	$0x48, %rsp
000000010003882d	popq	%rbx
000000010003882e	popq	%r12
0000000100038830	popq	%r13
0000000100038832	popq	%r14
0000000100038834	popq	%r15
0000000100038836	popq	%rbp
0000000100038837	jmp	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
000000010003883c	jne	0x100038804
000000010003883e	decq	%r12
0000000100038841	testb	$0x1, %r12b
0000000100038845	jne	0x1000388ef
000000010003884b	andq	$-0x2, %r12
000000010003884f	leaq	(%r15,%r12), %r13
0000000100038853	movq	%r15, -0x60(%rbp)
0000000100038857	movq	%r12, -0x58(%rbp)
000000010003885b	movq	%r13, -0x50(%rbp)
000000010003885f	movq	$0x0, -0x48(%rbp)
0000000100038867	movq	$0x2, -0x40(%rbp)
000000010003886f	leaq	-0x60(%rbp), %rbx
0000000100038873	nopw	%cs:(%rax,%rax)
000000010003887d	nopl	(%rax)
0000000100038880	movq	%rbx, %rdi
0000000100038883	callq	__ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97824079a41840b4E ## _$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h97824079a41840b4
0000000100038888	cmpl	$0x110000, %eax                 ## imm = 0x110000
000000010003888d	jb	0x100038880
000000010003888f	cmpl	$0x110001, %eax                 ## imm = 0x110001
0000000100038894	jne	0x1000388ef
0000000100038896	movq	0x20(%r14), %r14
000000010003889a	testq	%r14, %r14
000000010003889d	je	0x10003891b
000000010003889f	movq	%r14, %rdi
00000001000388a2	movl	$0x22, %esi
00000001000388a7	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
00000001000388ac	movb	$0x1, %bl
00000001000388ae	testb	%al, %al
00000001000388b0	jne	0x10003891d
00000001000388b2	movq	%r15, -0x60(%rbp)
00000001000388b6	movq	%r12, -0x58(%rbp)
00000001000388ba	movq	%r13, -0x50(%rbp)
00000001000388be	movq	$0x0, -0x48(%rbp)
00000001000388c6	movq	$0x2, -0x40(%rbp)
00000001000388ce	leaq	-0x60(%rbp), %rdi
00000001000388d2	callq	__ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97824079a41840b4E ## _$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h97824079a41840b4
00000001000388d7	cmpl	$0x110001, %eax                 ## imm = 0x110001
00000001000388dc	jne	0x10003892e
00000001000388de	movq	%r14, %rdi
00000001000388e1	movl	$0x22, %esi
00000001000388e6	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
00000001000388eb	movl	%eax, %ebx
00000001000388ed	jmp	0x10003891d
00000001000388ef	movq	0x20(%r14), %rdx
00000001000388f3	testq	%rdx, %rdx
00000001000388f6	je	0x10003890f
00000001000388f8	leaq	0xdc31(%rip), %rdi
00000001000388ff	movl	$0x10, %esi
0000000100038904	callq	__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE ## _$LT$str$u20$as$u20$core..fmt..Display$GT$::fmt::h26d707e39524d4ef
0000000100038909	movb	$0x1, %bl
000000010003890b	testb	%al, %al
000000010003890d	jne	0x10003891d
000000010003890f	movq	$0x0, (%r14)
0000000100038916	movb	$0x0, 0x8(%r14)
000000010003891b	xorl	%ebx, %ebx
000000010003891d	movl	%ebx, %eax
000000010003891f	addq	$0x48, %rsp
0000000100038923	popq	%rbx
0000000100038924	popq	%r12
0000000100038926	popq	%r13
0000000100038928	popq	%r14
000000010003892a	popq	%r15
000000010003892c	popq	%rbp
000000010003892d	retq
000000010003892e	leaq	-0x60(%rbp), %r15
0000000100038932	leaq	-0x38(%rbp), %r13
0000000100038936	cmpl	$0x110000, %eax                 ## imm = 0x110000
000000010003893b	je	0x1000389da
0000000100038941	cmpl	$0x27, %eax
0000000100038944	jne	0x10003896b
0000000100038946	movq	%r14, %rdi
0000000100038949	movl	$0x27, %esi
000000010003894e	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
0000000100038953	testb	%al, %al
0000000100038955	jne	0x10003891d
0000000100038957	movq	%r15, %rdi
000000010003895a	callq	__ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97824079a41840b4E ## _$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h97824079a41840b4
000000010003895f	cmpl	$0x110001, %eax                 ## imm = 0x110001
0000000100038964	jne	0x100038936
0000000100038966	jmp	0x1000388de
000000010003896b	leaq	-0x70(%rbp), %rdi
000000010003896f	movl	%eax, %esi
0000000100038971	callq	__ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h99e3bb949009c8b4E ## core::char::methods::_$LT$impl$u20$char$GT$::escape_debug_ext::h99e3bb949009c8b4
0000000100038976	movl	-0x68(%rbp), %eax
0000000100038979	movl	%eax, -0x30(%rbp)
000000010003897c	movq	-0x70(%rbp), %rax
0000000100038980	movq	%rax, -0x38(%rbp)
0000000100038984	jmp	0x1000389a5
0000000100038986	movl	-0x34(%rbp), %r12d
000000010003898a	movq	%r13, %rdi
000000010003898d	callq	__ZN4core4char11EscapeDebug5clear17hcf380bd05808c8daE ## core::char::EscapeDebug::clear::hcf380bd05808c8da
0000000100038992	movq	%r14, %rdi
0000000100038995	movl	%r12d, %esi
0000000100038998	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_char::h20f333622ad58bf0
000000010003899d	testb	%al, %al
000000010003899f	jne	0x10003891d
00000001000389a5	cmpb	$-0x80, -0x38(%rbp)
00000001000389a9	je	0x100038986
00000001000389ab	movzbl	-0x2e(%rbp), %edi
00000001000389af	cmpb	-0x2d(%rbp), %dil
00000001000389b3	jae	0x100038957
00000001000389b5	leal	0x1(%rdi), %eax
00000001000389b8	movb	%al, -0x2e(%rbp)
00000001000389bb	cmpb	$0xa, %dil
00000001000389bf	jae	0x1000389c9
00000001000389c1	movzbl	-0x38(%rbp,%rdi), %r12d
00000001000389c7	jmp	0x100038992
00000001000389c9	leaq	0x10e68(%rip), %rdx
00000001000389d0	movl	$0xa, %esi
00000001000389d5	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
00000001000389da	leaq	0xd6e1(%rip), %rdi
00000001000389e1	leaq	0x10ec8(%rip), %rcx
00000001000389e8	leaq	0x10de9(%rip), %r8
00000001000389ef	leaq	-0x38(%rbp), %rdx
00000001000389f3	movl	$0x2b, %esi
00000001000389f8	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
00000001000389fd	nopl	(%rax)
__ZN14rustc_demangle8demangle17hba373145485b9efcE:
0000000100038a00	pushq	%rbp
0000000100038a01	movq	%rsp, %rbp
0000000100038a04	pushq	%r15
0000000100038a06	pushq	%r14
0000000100038a08	pushq	%r13
0000000100038a0a	pushq	%r12
0000000100038a0c	pushq	%rbx
0000000100038a0d	subq	$0x98, %rsp
0000000100038a14	movq	%rdx, %r15
0000000100038a17	movq	%rdi, %r14
0000000100038a1a	leaq	0xd938(%rip), %rcx
0000000100038a21	leaq	-0x98(%rbp), %rdi
0000000100038a28	movl	$0x6, %r8d
0000000100038a2e	movq	%rsi, -0x30(%rbp)
0000000100038a32	callq	__ZN4core3str7pattern11StrSearcher3new17h056863fc02a6ed7bE ## core::str::pattern::StrSearcher::new::h056863fc02a6ed7b
0000000100038a37	cmpq	$0x0, -0x98(%rbp)
0000000100038a3f	je	0x100038a8e
0000000100038a41	leaq	-0x90(%rbp), %rsi
0000000100038a48	movq	-0x50(%rbp), %rdx
0000000100038a4c	xorl	%eax, %eax
0000000100038a4e	cmpq	$-0x1, -0x60(%rbp)
0000000100038a53	sete	%al
0000000100038a56	movq	-0x48(%rbp), %rcx
0000000100038a5a	movq	-0x40(%rbp), %r8
0000000100038a5e	movq	-0x38(%rbp), %r9
0000000100038a62	movl	%eax, (%rsp)
0000000100038a65	leaq	-0xb0(%rbp), %rdi
0000000100038a6c	callq	__ZN4core3str7pattern14TwoWaySearcher4next17hfb8e8c0f9cc2f4abE ## core::str::pattern::TwoWaySearcher::next::hfb8e8c0f9cc2f4ab
0000000100038a71	movq	-0xb0(%rbp), %rax
0000000100038a78	movq	-0xa8(%rbp), %rcx
0000000100038a7f	movq	-0x30(%rbp), %r10
0000000100038a83	cmpq	$0x1, %rax
0000000100038a87	je	0x100038ae8
0000000100038a89	jmp	0x100038c17
0000000100038a8e	leaq	-0xb0(%rbp), %r12
0000000100038a95	leaq	-0x98(%rbp), %r13
0000000100038a9c	nopl	(%rax)
0000000100038aa0	movq	%r12, %rdi
0000000100038aa3	movq	%r13, %rsi
0000000100038aa6	callq	__ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6c99b026dd33e6a4E ## _$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$::next::h6c99b026dd33e6a4
0000000100038aab	movq	-0xb0(%rbp), %rax
0000000100038ab2	cmpq	$0x1, %rax
0000000100038ab6	je	0x100038aa0
0000000100038ab8	testq	%rax, %rax
0000000100038abb	jne	0x100038ad8
0000000100038abd	movl	$0x1, %eax
0000000100038ac2	movq	-0xa8(%rbp), %rcx
0000000100038ac9	movq	-0x30(%rbp), %r10
0000000100038acd	cmpq	$0x1, %rax
0000000100038ad1	je	0x100038ae8
0000000100038ad3	jmp	0x100038c17
0000000100038ad8	xorl	%eax, %eax
0000000100038ada	movq	-0x30(%rbp), %r10
0000000100038ade	cmpq	$0x1, %rax
0000000100038ae2	jne	0x100038c17
0000000100038ae8	movq	%rcx, %rdx
0000000100038aeb	movq	%r15, %rax
0000000100038aee	addq	$0x6, %rdx
0000000100038af2	je	0x100038b18
0000000100038af4	cmpq	%r15, %rdx
0000000100038af7	jae	0x100038b0c
0000000100038af9	cmpb	$-0x41, (%r10,%rdx)
0000000100038afe	jle	0x10003933d
0000000100038b04	movq	%r15, %rax
0000000100038b07	subq	%rdx, %rax
0000000100038b0a	jmp	0x100038b18
0000000100038b0c	movq	%r15, %rax
0000000100038b0f	subq	%rdx, %rax
0000000100038b12	jne	0x10003933d
0000000100038b18	addq	%r10, %rdx
0000000100038b1b	addq	%rdx, %rax
0000000100038b1e	jmp	0x100038b4c
0000000100038b20	addq	$0x2, %rdx
0000000100038b24	shll	$0x6, %edi
0000000100038b27	orl	%r9d, %edi
0000000100038b2a	movl	%edi, %esi
0000000100038b2c	leal	-0x40(%rsi), %edi
0000000100038b2f	cmpl	$0x7, %edi
0000000100038b32	jb	0x100038b4c
0000000100038b34	nopw	%cs:(%rax,%rax)
0000000100038b3e	nop
0000000100038b40	addl	$-0x30, %esi
0000000100038b43	cmpl	$0xa, %esi
0000000100038b46	jae	0x100038c17
0000000100038b4c	cmpq	%rax, %rdx
0000000100038b4f	je	0x100038be8
0000000100038b55	movzbl	(%rdx), %esi
0000000100038b58	testb	%sil, %sil
0000000100038b5b	js	0x100038b70
0000000100038b5d	incq	%rdx
0000000100038b60	leal	-0x40(%rsi), %edi
0000000100038b63	cmpl	$0x7, %edi
0000000100038b66	jae	0x100038b40
0000000100038b68	jmp	0x100038b4c
0000000100038b6a	nopw	(%rax,%rax)
0000000100038b70	movl	%esi, %edi
0000000100038b72	andl	$0x1f, %edi
0000000100038b75	movzbl	0x1(%rdx), %r9d
0000000100038b7a	andl	$0x3f, %r9d
0000000100038b7e	cmpb	$-0x21, %sil
0000000100038b82	jbe	0x100038b20
0000000100038b84	movzbl	0x2(%rdx), %r8d
0000000100038b89	shll	$0x6, %r9d
0000000100038b8d	andl	$0x3f, %r8d
0000000100038b91	orl	%r9d, %r8d
0000000100038b94	cmpb	$-0x10, %sil
0000000100038b98	jb	0x100038bca
0000000100038b9a	movzbl	0x3(%rdx), %esi
0000000100038b9e	andl	$0x7, %edi
0000000100038ba1	shll	$0x12, %edi
0000000100038ba4	shll	$0x6, %r8d
0000000100038ba8	andl	$0x3f, %esi
0000000100038bab	orl	%r8d, %esi
0000000100038bae	orl	%edi, %esi
0000000100038bb0	cmpl	$0x110000, %esi                 ## imm = 0x110000
0000000100038bb6	je	0x100038be8
0000000100038bb8	addq	$0x4, %rdx
0000000100038bbc	leal	-0x40(%rsi), %edi
0000000100038bbf	cmpl	$0x7, %edi
0000000100038bc2	jae	0x100038b40
0000000100038bc8	jmp	0x100038b4c
0000000100038bca	addq	$0x3, %rdx
0000000100038bce	shll	$0xc, %edi
0000000100038bd1	orl	%edi, %r8d
0000000100038bd4	movl	%r8d, %esi
0000000100038bd7	leal	-0x40(%rsi), %edi
0000000100038bda	cmpl	$0x7, %edi
0000000100038bdd	jae	0x100038b40
0000000100038be3	jmp	0x100038b4c
0000000100038be8	testq	%rcx, %rcx
0000000100038beb	je	0x100038c02
0000000100038bed	cmpq	%r15, %rcx
0000000100038bf0	jae	0x100038c11
0000000100038bf2	cmpb	$-0x41, (%r10,%rcx)
0000000100038bf7	jle	0x10003936c
0000000100038bfd	movq	%rcx, %r15
0000000100038c00	jmp	0x100038c17
0000000100038c02	leaq	0xd3cf(%rip), %rbx
0000000100038c09	xorl	%r15d, %r15d
0000000100038c0c	jmp	0x100038def
0000000100038c11	jne	0x10003936c
0000000100038c17	cmpq	$0x3, %r15
0000000100038c1b	jae	0x100038c49
0000000100038c1d	cmpq	$0x2, %r15
0000000100038c21	jne	0x100038de8
0000000100038c27	movzwl	(%r10), %eax
0000000100038c2b	cmpl	$0x4e5a, %eax                   ## imm = 0x4E5A
0000000100038c30	jne	0x100038dc2
0000000100038c36	movl	$0x2, %r15d
0000000100038c3c	xorl	%r12d, %r12d
0000000100038c3f	movl	$0x2, %ecx
0000000100038c44	jmp	0x100038ce1
0000000100038c49	movzwl	(%r10), %eax
0000000100038c4d	xorl	$0x5a5f, %eax                   ## imm = 0x5A5F
0000000100038c52	movzbl	0x2(%r10), %ecx
0000000100038c57	xorl	$0x4e, %ecx
0000000100038c5a	orw	%ax, %cx
0000000100038c5d	je	0x100038ca6
0000000100038c5f	movzwl	(%r10), %eax
0000000100038c63	cmpl	$0x4e5a, %eax                   ## imm = 0x4E5A
0000000100038c68	je	0x100038cc2
0000000100038c6a	movl	$0x3, %ecx
0000000100038c6f	cmpq	$0x4, %r15
0000000100038c73	jb	0x100038da2
0000000100038c79	cmpl	$0x4e5a5f5f, (%r10)             ## imm = 0x4E5A5F5F
0000000100038c80	jne	0x100038d9f
0000000100038c86	movl	$0x4, %ecx
0000000100038c8b	cmpq	$0x5, %r15
0000000100038c8f	jb	0x100038d69
0000000100038c95	cmpb	$-0x41, 0x4(%r10)
0000000100038c9a	jle	0x100039417
0000000100038ca0	leaq	-0x4(%r15), %r12
0000000100038ca4	jmp	0x100038ce1
0000000100038ca6	movl	$0x3, %ecx
0000000100038cab	cmpq	$0x4, %r15
0000000100038caf	jb	0x100038cd8
0000000100038cb1	cmpb	$-0x41, 0x3(%r10)
0000000100038cb6	jle	0x1000393d7
0000000100038cbc	leaq	-0x3(%r15), %r12
0000000100038cc0	jmp	0x100038ce1
0000000100038cc2	cmpb	$-0x41, 0x2(%r10)
0000000100038cc7	jle	0x100039397
0000000100038ccd	leaq	-0x2(%r15), %r12
0000000100038cd1	movl	$0x2, %ecx
0000000100038cd6	jmp	0x100038ce1
0000000100038cd8	xorl	%r12d, %r12d
0000000100038cdb	movl	$0x3, %r15d
0000000100038ce1	addq	%r10, %rcx
0000000100038ce4	leaq	(%rcx,%r12), %rsi
0000000100038ce8	xorl	%eax, %eax
0000000100038cea	nopw	(%rax,%rax)
0000000100038cf0	cmpq	%rax, %r12
0000000100038cf3	je	0x100038d04
0000000100038cf5	cmpb	$0x0, (%rcx,%rax)
0000000100038cf9	leaq	0x1(%rax), %rax
0000000100038cfd	jns	0x100038cf0
0000000100038cff	jmp	0x100038d99
0000000100038d04	testq	%r12, %r12
0000000100038d07	je	0x100038d99
0000000100038d0d	movzbl	(%rcx), %eax
0000000100038d10	testb	%al, %al
0000000100038d12	js	0x100038d1d
0000000100038d14	leaq	0x1(%rcx), %rbx
0000000100038d18	movl	%eax, %r8d
0000000100038d1b	jmp	0x100038d82
0000000100038d1d	movl	%eax, %r8d
0000000100038d20	andl	$0x1f, %r8d
0000000100038d24	movzbl	0x1(%rcx), %edi
0000000100038d28	andl	$0x3f, %edi
0000000100038d2b	cmpb	$-0x21, %al
0000000100038d2d	jbe	0x100038d5c
0000000100038d2f	movzbl	0x2(%rcx), %edx
0000000100038d33	shll	$0x6, %edi
0000000100038d36	andl	$0x3f, %edx
0000000100038d39	orl	%edi, %edx
0000000100038d3b	cmpb	$-0x10, %al
0000000100038d3d	jb	0x100038d77
0000000100038d3f	leaq	0x4(%rcx), %rbx
0000000100038d43	movzbl	0x3(%rcx), %eax
0000000100038d47	andl	$0x7, %r8d
0000000100038d4b	shll	$0x12, %r8d
0000000100038d4f	shll	$0x6, %edx
0000000100038d52	andl	$0x3f, %eax
0000000100038d55	orl	%edx, %eax
0000000100038d57	orl	%eax, %r8d
0000000100038d5a	jmp	0x100038d82
0000000100038d5c	leaq	0x2(%rcx), %rbx
0000000100038d60	shll	$0x6, %r8d
0000000100038d64	orl	%edi, %r8d
0000000100038d67	jmp	0x100038d82
0000000100038d69	xorl	%r12d, %r12d
0000000100038d6c	movl	$0x4, %r15d
0000000100038d72	jmp	0x100038ce1
0000000100038d77	leaq	0x3(%rcx), %rbx
0000000100038d7b	shll	$0xc, %r8d
0000000100038d7f	orl	%edx, %r8d
0000000100038d82	cmpl	$0x45, %r8d
0000000100038d86	je	0x10003901a
0000000100038d8c	cmpl	$0x110000, %r8d                 ## imm = 0x110000
0000000100038d93	jne	0x100039025
0000000100038d99	cmpq	$0x3, %r15
0000000100038d9d	jb	0x100038dbc
0000000100038d9f	movq	%r15, %rcx
0000000100038da2	movzwl	(%r10), %eax
0000000100038da6	cmpl	$0x525f, %eax                   ## imm = 0x525F
0000000100038dab	je	0x100038df9
0000000100038dad	cmpb	$0x52, (%r10)
0000000100038db1	jne	0x100038e7e
0000000100038db7	movq	%rcx, %r15
0000000100038dba	jmp	0x100038dce
0000000100038dbc	cmpq	$0x2, %r15
0000000100038dc0	jne	0x100038de8
0000000100038dc2	movl	$0x2, %r15d
0000000100038dc8	cmpb	$0x52, (%r10)
0000000100038dcc	jne	0x100038de8
0000000100038dce	movzbl	0x1(%r10), %eax
0000000100038dd3	cmpb	$-0x41, %al
0000000100038dd5	jle	0x100039352
0000000100038ddb	leaq	0x1(%r10), %r12
0000000100038ddf	movq	$-0x1, %r13
0000000100038de6	jmp	0x100038e14
0000000100038de8	leaq	0xd1e9(%rip), %rbx
0000000100038def	xorl	%r13d, %r13d
0000000100038df2	xorl	%r12d, %r12d
0000000100038df5	xorl	%ecx, %ecx
0000000100038df7	jmp	0x100038e46
0000000100038df9	movzbl	0x2(%r10), %eax
0000000100038dfe	cmpb	$-0x41, %al
0000000100038e00	jle	0x100039380
0000000100038e06	leaq	0x2(%r10), %r12
0000000100038e0a	movq	$-0x2, %r13
0000000100038e11	movq	%rcx, %r15
0000000100038e14	addb	$-0x41, %al
0000000100038e16	leaq	0xd1bb(%rip), %rbx
0000000100038e1d	xorl	%ecx, %ecx
0000000100038e1f	cmpb	$0x19, %al
0000000100038e21	ja	0x100038e40
0000000100038e23	addq	%r15, %r13
0000000100038e26	xorl	%ecx, %ecx
0000000100038e28	xorl	%eax, %eax
0000000100038e2a	nopw	(%rax,%rax)
0000000100038e30	cmpq	%rax, %r13
0000000100038e33	je	0x100038eb4
0000000100038e35	cmpb	$0x0, (%r12,%rax)
0000000100038e3a	leaq	0x1(%rax), %rax
0000000100038e3e	jns	0x100038e30
0000000100038e40	xorl	%r13d, %r13d
0000000100038e43	xorl	%r12d, %r12d
0000000100038e46	xorl	%eax, %eax
0000000100038e48	xorl	%esi, %esi
0000000100038e4a	movq	%rax, (%r14)
0000000100038e4d	movq	%rcx, 0x8(%r14)
0000000100038e51	movq	%r12, 0x10(%r14)
0000000100038e55	movq	%r13, 0x18(%r14)
0000000100038e59	movq	%r10, 0x20(%r14)
0000000100038e5d	movq	%r15, 0x28(%r14)
0000000100038e61	movq	%rbx, 0x30(%r14)
0000000100038e65	movq	%rsi, 0x38(%r14)
0000000100038e69	movq	%r14, %rax
0000000100038e6c	addq	$0x98, %rsp
0000000100038e73	popq	%rbx
0000000100038e74	popq	%r12
0000000100038e76	popq	%r13
0000000100038e78	popq	%r14
0000000100038e7a	popq	%r15
0000000100038e7c	popq	%rbp
0000000100038e7d	retq
0000000100038e7e	leaq	0xd153(%rip), %rbx
0000000100038e85	cmpq	$0x3, %rcx
0000000100038e89	jbe	0x10003900f
0000000100038e8f	movzwl	(%r10), %eax
0000000100038e93	xorl	$0x5f5f, %eax                   ## imm = 0x5F5F
0000000100038e98	movzbl	0x2(%r10), %edx
0000000100038e9d	xorl	$0x52, %edx
0000000100038ea0	xorl	%r13d, %r13d
0000000100038ea3	orw	%ax, %dx
0000000100038ea6	je	0x1000391c1
0000000100038eac	movq	%rcx, %r15
0000000100038eaf	jmp	0x100038df2
0000000100038eb4	movq	%r12, -0x98(%rbp)
0000000100038ebb	movq	%r13, -0x90(%rbp)
0000000100038ec2	movq	$0x0, -0x88(%rbp)
0000000100038ecd	movl	$0x0, -0x80(%rbp)
0000000100038ed4	movq	$0x0, -0x78(%rbp)
0000000100038edc	movl	$0x0, -0x70(%rbp)
0000000100038ee3	leaq	-0x98(%rbp), %rdi
0000000100038eea	xorl	%esi, %esi
0000000100038eec	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100038ef1	testb	%al, %al
0000000100038ef3	jne	0x1000393b1
0000000100038ef9	movq	-0x98(%rbp), %rdi
0000000100038f00	movzbl	-0x90(%rbp), %eax
0000000100038f07	testq	%rdi, %rdi
0000000100038f0a	movq	-0x30(%rbp), %r10
0000000100038f0e	je	0x1000391b1
0000000100038f14	movzbl	%al, %eax
0000000100038f17	movzbl	-0x89(%rbp), %ecx
0000000100038f1e	shll	$0x10, %ecx
0000000100038f21	movzwl	-0x8b(%rbp), %edx
0000000100038f28	orl	%ecx, %edx
0000000100038f2a	shlq	$0x20, %rdx
0000000100038f2e	movl	-0x8f(%rbp), %ecx
0000000100038f34	orq	%rdx, %rcx
0000000100038f37	movq	-0x88(%rbp), %rdx
0000000100038f3e	shlq	$0x8, %rcx
0000000100038f42	orq	%rax, %rcx
0000000100038f45	cmpq	%rcx, %rdx
0000000100038f48	jae	0x100038feb
0000000100038f4e	movzbl	(%rdi,%rdx), %eax
0000000100038f52	addb	$-0x41, %al
0000000100038f54	cmpb	$0x1a, %al
0000000100038f56	jae	0x100038feb
0000000100038f5c	movsd	-0x80(%rbp), %xmm0              ## xmm0 = mem[0],zero
0000000100038f61	movq	%rdi, -0x98(%rbp)
0000000100038f68	movq	%rcx, -0x90(%rbp)
0000000100038f6f	movq	%rdx, -0x88(%rbp)
0000000100038f76	movlps	%xmm0, -0x80(%rbp)
0000000100038f7a	movq	$0x0, -0x78(%rbp)
0000000100038f82	movl	$0x0, -0x70(%rbp)
0000000100038f89	leaq	-0x98(%rbp), %rdi
0000000100038f90	xorl	%esi, %esi
0000000100038f92	callq	__ZN14rustc_demangle2v07Printer10print_path17h63f307846bdb081eE ## rustc_demangle::v0::Printer::print_path::h63f307846bdb081e
0000000100038f97	testb	%al, %al
0000000100038f99	jne	0x1000393b1
0000000100038f9f	movq	-0x98(%rbp), %rdi
0000000100038fa6	movzbl	-0x90(%rbp), %eax
0000000100038fad	testq	%rdi, %rdi
0000000100038fb0	movq	-0x30(%rbp), %r10
0000000100038fb4	je	0x1000391b1
0000000100038fba	movzbl	%al, %eax
0000000100038fbd	movzbl	-0x89(%rbp), %ecx
0000000100038fc4	shll	$0x10, %ecx
0000000100038fc7	movzwl	-0x8b(%rbp), %edx
0000000100038fce	orl	%ecx, %edx
0000000100038fd0	shlq	$0x20, %rdx
0000000100038fd4	movl	-0x8f(%rbp), %ecx
0000000100038fda	orq	%rdx, %rcx
0000000100038fdd	movq	-0x88(%rbp), %rdx
0000000100038fe4	shlq	$0x8, %rcx
0000000100038fe8	orq	%rax, %rcx
0000000100038feb	testq	%rdx, %rdx
0000000100038fee	je	0x1000391bc
0000000100038ff4	movq	%rcx, %rsi
0000000100038ff7	subq	%rdx, %rsi
0000000100038ffa	jbe	0x1000391de
0000000100039000	cmpb	$-0x41, (%rdi,%rdx)
0000000100039004	jg	0x1000391e4
000000010003900a	jmp	0x1000393f1
000000010003900f	movl	$0x3, %r15d
0000000100039015	jmp	0x100038def
000000010003901a	xorl	%r13d, %r13d
000000010003901d	subq	%rbx, %rsi
0000000100039020	jmp	0x1000391ec
0000000100039025	xorl	%r13d, %r13d
0000000100039028	movl	$0xa, %edi
000000010003902d	addl	$-0x30, %r8d
0000000100039031	cmpl	$0x9, %r8d
0000000100039035	ja	0x100038d99
000000010003903b	xorl	%eax, %eax
000000010003903d	jmp	0x100039051
000000010003903f	nop
0000000100039040	incq	%rbx
0000000100039043	leal	-0x30(%rdx), %r8d
0000000100039047	cmpl	$0xa, %r8d
000000010003904b	jae	0x100039100
0000000100039051	mulq	%rdi
0000000100039054	jo	0x100038d99
000000010003905a	movl	%r8d, %edx
000000010003905d	addq	%rdx, %rax
0000000100039060	jb	0x100038d99
0000000100039066	cmpq	%rsi, %rbx
0000000100039069	je	0x100038d99
000000010003906f	movzbl	(%rbx), %edx
0000000100039072	testb	%dl, %dl
0000000100039074	jns	0x100039040
0000000100039076	movl	%edx, %r8d
0000000100039079	andl	$0x1f, %r8d
000000010003907d	movzbl	0x1(%rbx), %r10d
0000000100039082	andl	$0x3f, %r10d
0000000100039086	cmpb	$-0x21, %dl
0000000100039089	jbe	0x1000390d2
000000010003908b	movzbl	0x2(%rbx), %r9d
0000000100039090	shll	$0x6, %r10d
0000000100039094	andl	$0x3f, %r9d
0000000100039098	orl	%r10d, %r9d
000000010003909b	cmpb	$-0x10, %dl
000000010003909e	jb	0x1000390e9
00000001000390a0	movzbl	0x3(%rbx), %edx
00000001000390a4	andl	$0x7, %r8d
00000001000390a8	shll	$0x12, %r8d
00000001000390ac	shll	$0x6, %r9d
00000001000390b0	andl	$0x3f, %edx
00000001000390b3	orl	%r9d, %edx
00000001000390b6	orl	%r8d, %edx
00000001000390b9	cmpl	$0x110000, %edx                 ## imm = 0x110000
00000001000390bf	movq	-0x30(%rbp), %r10
00000001000390c3	je	0x100038d99
00000001000390c9	addq	$0x4, %rbx
00000001000390cd	jmp	0x100039043
00000001000390d2	addq	$0x2, %rbx
00000001000390d6	shll	$0x6, %r8d
00000001000390da	orl	%r10d, %r8d
00000001000390dd	movl	%r8d, %edx
00000001000390e0	movq	-0x30(%rbp), %r10
00000001000390e4	jmp	0x100039043
00000001000390e9	addq	$0x3, %rbx
00000001000390ed	shll	$0xc, %r8d
00000001000390f1	orl	%r8d, %r9d
00000001000390f4	movl	%r9d, %edx
00000001000390f7	movq	-0x30(%rbp), %r10
00000001000390fb	jmp	0x100039043
0000000100039100	testq	%rax, %rax
0000000100039103	jne	0x100039121
0000000100039105	incq	%r13
0000000100039108	movl	%edx, %r8d
000000010003910b	cmpl	$0x45, %edx
000000010003910e	jne	0x10003902d
0000000100039114	jmp	0x10003901d
0000000100039119	incq	%rbx
000000010003911c	decq	%rax
000000010003911f	je	0x100039105
0000000100039121	cmpq	%rsi, %rbx
0000000100039124	je	0x100038d99
000000010003912a	movzbl	(%rbx), %edx
000000010003912d	testb	%dl, %dl
000000010003912f	jns	0x100039119
0000000100039131	movl	%edx, %r8d
0000000100039134	andl	$0x1f, %r8d
0000000100039138	movzbl	0x1(%rbx), %r10d
000000010003913d	andl	$0x3f, %r10d
0000000100039141	cmpb	$-0x21, %dl
0000000100039144	jbe	0x10003918a
0000000100039146	movzbl	0x2(%rbx), %r9d
000000010003914b	shll	$0x6, %r10d
000000010003914f	andl	$0x3f, %r9d
0000000100039153	orl	%r10d, %r9d
0000000100039156	cmpb	$-0x10, %dl
0000000100039159	jb	0x10003919a
000000010003915b	movzbl	0x3(%rbx), %edx
000000010003915f	andl	$0x7, %r8d
0000000100039163	shll	$0x12, %r8d
0000000100039167	shll	$0x6, %r9d
000000010003916b	andl	$0x3f, %edx
000000010003916e	orl	%r9d, %edx
0000000100039171	orl	%r8d, %edx
0000000100039174	cmpl	$0x110000, %edx                 ## imm = 0x110000
000000010003917a	movq	-0x30(%rbp), %r10
000000010003917e	je	0x100038d99
0000000100039184	addq	$0x4, %rbx
0000000100039188	jmp	0x10003911c
000000010003918a	addq	$0x2, %rbx
000000010003918e	shll	$0x6, %r8d
0000000100039192	orl	%r10d, %r8d
0000000100039195	movl	%r8d, %edx
0000000100039198	jmp	0x1000391a8
000000010003919a	addq	$0x3, %rbx
000000010003919e	shll	$0xc, %r8d
00000001000391a2	orl	%r8d, %r9d
00000001000391a5	movl	%r9d, %edx
00000001000391a8	movq	-0x30(%rbp), %r10
00000001000391ac	jmp	0x10003911c
00000001000391b1	andb	$0x1, %al
00000001000391b3	movzbl	%al, %r13d
00000001000391b7	jmp	0x100038df2
00000001000391bc	movq	%rcx, %rsi
00000001000391bf	jmp	0x1000391e4
00000001000391c1	movzbl	0x3(%r10), %eax
00000001000391c6	cmpb	$-0x41, %al
00000001000391c8	jle	0x100039400
00000001000391ce	leaq	0x3(%r10), %r12
00000001000391d2	movq	$-0x3, %r13
00000001000391d9	jmp	0x100038e11
00000001000391de	jne	0x1000393f1
00000001000391e4	addq	%rdx, %rdi
00000001000391e7	xorl	%ecx, %ecx
00000001000391e9	movq	%rdi, %rbx
00000001000391ec	movl	$0x1, %eax
00000001000391f1	testq	%rsi, %rsi
00000001000391f4	je	0x100038e48
00000001000391fa	leaq	0xcdd7(%rip), %rdx
0000000100039201	cmpb	$0x2e, (%rbx)
0000000100039204	jne	0x100039328
000000010003920a	leaq	(%rbx,%rsi), %rdi
000000010003920e	movb	$0x2e, %r10b
0000000100039211	movq	%rbx, %r9
0000000100039214	testb	%r10b, %r10b
0000000100039217	jns	0x1000392c0
000000010003921d	nopl	(%rax)
0000000100039220	movl	%r10d, %edx
0000000100039223	andb	$0x1f, %dl
0000000100039226	movzbl	%dl, %r11d
000000010003922a	movzbl	0x1(%r9), %r8d
000000010003922f	andl	$0x3f, %r8d
0000000100039233	cmpb	$-0x21, %r10b
0000000100039237	jbe	0x100039284
0000000100039239	movzbl	0x2(%r9), %edx
000000010003923e	shll	$0x6, %r8d
0000000100039242	andl	$0x3f, %edx
0000000100039245	orl	%r8d, %edx
0000000100039248	cmpb	$-0x10, %r10b
000000010003924c	jb	0x10003929d
000000010003924e	movzbl	0x3(%r9), %r10d
0000000100039253	andl	$0x7, %r11d
0000000100039257	shll	$0x12, %r11d
000000010003925b	shll	$0x6, %edx
000000010003925e	andl	$0x3f, %r10d
0000000100039262	orl	%edx, %r10d
0000000100039265	orl	%r11d, %r10d
0000000100039268	cmpl	$0x110000, %r10d                ## imm = 0x110000
000000010003926f	je	0x100039334
0000000100039275	addq	$0x4, %r9
0000000100039279	leal	-0x21(%r10), %edx
000000010003927d	cmpl	$0x19, %edx
0000000100039280	jae	0x1000392d0
0000000100039282	jmp	0x1000392f7
0000000100039284	addq	$0x2, %r9
0000000100039288	shll	$0x6, %r11d
000000010003928c	orl	%r8d, %r11d
000000010003928f	movl	%r11d, %r10d
0000000100039292	leal	-0x21(%r10), %edx
0000000100039296	cmpl	$0x19, %edx
0000000100039299	jae	0x1000392d0
000000010003929b	jmp	0x1000392f7
000000010003929d	addq	$0x3, %r9
00000001000392a1	shll	$0xc, %r11d
00000001000392a5	orl	%r11d, %edx
00000001000392a8	movl	%edx, %r10d
00000001000392ab	leal	-0x21(%r10), %edx
00000001000392af	cmpl	$0x19, %edx
00000001000392b2	jae	0x1000392d0
00000001000392b4	jmp	0x1000392f7
00000001000392b6	nopw	%cs:(%rax,%rax)
00000001000392c0	incq	%r9
00000001000392c3	movzbl	%r10b, %r10d
00000001000392c7	leal	-0x21(%r10), %edx
00000001000392cb	cmpl	$0x19, %edx
00000001000392ce	jb	0x1000392f7
00000001000392d0	movl	%r10d, %edx
00000001000392d3	andl	$-0x21, %edx
00000001000392d6	addl	$-0x41, %edx
00000001000392d9	cmpl	$0x1a, %edx
00000001000392dc	jb	0x1000392f7
00000001000392de	leal	-0x3a(%r10), %edx
00000001000392e2	cmpl	$0x26, %edx
00000001000392e5	ja	0x10003930a
00000001000392e7	movabsq	$0x7e0000007f, %r8              ## imm = 0x7E0000007F
00000001000392f1	btq	%rdx, %r8
00000001000392f5	jae	0x10003930a
00000001000392f7	cmpq	%rdi, %r9
00000001000392fa	je	0x100039334
00000001000392fc	movzbl	(%r9), %r10d
0000000100039300	testb	%r10b, %r10b
0000000100039303	jns	0x1000392c0
0000000100039305	jmp	0x100039220
000000010003930a	addl	$-0x7f, %r10d
000000010003930e	cmpl	$-0x4, %r10d
0000000100039312	jae	0x1000392f7
0000000100039314	xorl	%eax, %eax
0000000100039316	xorl	%esi, %esi
0000000100039318	leaq	0xccb9(%rip), %rbx
000000010003931f	movq	-0x30(%rbp), %r10
0000000100039323	jmp	0x100038e4a
0000000100039328	xorl	%eax, %eax
000000010003932a	xorl	%esi, %esi
000000010003932c	movq	%rdx, %rbx
000000010003932f	jmp	0x100038e4a
0000000100039334	movq	-0x30(%rbp), %r10
0000000100039338	jmp	0x100038e4a
000000010003933d	leaq	0x109a4(%rip), %r8
0000000100039344	movq	%r10, %rdi
0000000100039347	movq	%r15, %rsi
000000010003934a	movq	%r15, %rcx
000000010003934d	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100039352	leaq	0x1079f(%rip), %r8
0000000100039359	movl	$0x1, %edx
000000010003935e	movq	%r10, %rdi
0000000100039361	movq	%r15, %rsi
0000000100039364	movq	%r15, %rcx
0000000100039367	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003936c	leaq	0x1098d(%rip), %r8
0000000100039373	movq	%r10, %rdi
0000000100039376	movq	%r15, %rsi
0000000100039379	xorl	%edx, %edx
000000010003937b	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100039380	leaq	0x10789(%rip), %r8
0000000100039387	movl	$0x2, %edx
000000010003938c	movq	%r10, %rdi
000000010003938f	movq	%rcx, %rsi
0000000100039392	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100039397	leaq	0x1057a(%rip), %r8
000000010003939e	movl	$0x2, %edx
00000001000393a3	movq	%r10, %rdi
00000001000393a6	movq	%r15, %rsi
00000001000393a9	movq	%r15, %rcx
00000001000393ac	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000393b1	leaq	0xce3f(%rip), %rdi
00000001000393b8	leaq	0x104b1(%rip), %rcx
00000001000393bf	leaq	0x1077a(%rip), %r8
00000001000393c6	leaq	-0xb0(%rbp), %rdx
00000001000393cd	movl	$0x3d, %esi
00000001000393d2	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
00000001000393d7	leaq	0x10552(%rip), %r8
00000001000393de	movl	$0x3, %edx
00000001000393e3	movq	%r10, %rdi
00000001000393e6	movq	%r15, %rsi
00000001000393e9	movq	%r15, %rcx
00000001000393ec	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
00000001000393f1	leaq	0x10730(%rip), %r8
00000001000393f8	movq	%rcx, %rsi
00000001000393fb	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100039400	leaq	0x106d9(%rip), %r8
0000000100039407	movl	$0x3, %edx
000000010003940c	movq	%r10, %rdi
000000010003940f	movq	%rcx, %rsi
0000000100039412	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100039417	leaq	0x104e2(%rip), %r8
000000010003941e	movl	$0x4, %edx
0000000100039423	movq	%r10, %rdi
0000000100039426	movq	%r15, %rsi
0000000100039429	movq	%r15, %rcx
000000010003942c	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
0000000100039431	nopw	%cs:(%rax,%rax)
000000010003943b	nopl	(%rax,%rax)
__ZN14rustc_demangle12try_demangle17h569606a384f77f78E:
0000000100039440	pushq	%rbp
0000000100039441	movq	%rsp, %rbp
0000000100039444	pushq	%rbx
0000000100039445	subq	$0x48, %rsp
0000000100039449	movq	%rdi, %rbx
000000010003944c	leaq	-0x48(%rbp), %rdi
0000000100039450	callq	__ZN14rustc_demangle8demangle17hba373145485b9efcE ## rustc_demangle::demangle::hba373145485b9efc
0000000100039455	cmpq	$0x0, -0x48(%rbp)
000000010003945a	je	0x10003949d
000000010003945c	movq	-0x10(%rbp), %rax
0000000100039460	movq	%rax, 0x38(%rbx)
0000000100039464	movq	-0x18(%rbp), %rax
0000000100039468	movq	%rax, 0x30(%rbx)
000000010003946c	movq	-0x20(%rbp), %rax
0000000100039470	movq	%rax, 0x28(%rbx)
0000000100039474	movq	-0x28(%rbp), %rax
0000000100039478	movq	%rax, 0x20(%rbx)
000000010003947c	movq	-0x30(%rbp), %rax
0000000100039480	movq	%rax, 0x18(%rbx)
0000000100039484	movq	-0x38(%rbp), %rax
0000000100039488	movq	%rax, 0x10(%rbx)
000000010003948c	movq	-0x48(%rbp), %rax
0000000100039490	movq	-0x40(%rbp), %rcx
0000000100039494	movq	%rcx, 0x8(%rbx)
0000000100039498	movq	%rax, (%rbx)
000000010003949b	jmp	0x1000394a4
000000010003949d	movq	$0x2, (%rbx)
00000001000394a4	movq	%rbx, %rax
00000001000394a7	addq	$0x48, %rsp
00000001000394ab	popq	%rbx
00000001000394ac	popq	%rbp
00000001000394ad	retq
00000001000394ae	nop
__ZN14rustc_demangle8Demangle6as_str17h915ddc69429fd011E:
00000001000394b0	pushq	%rbp
00000001000394b1	movq	%rsp, %rbp
00000001000394b4	movq	0x20(%rdi), %rax
00000001000394b8	movq	0x28(%rdi), %rdx
00000001000394bc	popq	%rbp
00000001000394bd	retq
00000001000394be	nop
__ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h69253d9fda19d534E:
00000001000394c0	pushq	%rbp
00000001000394c1	movq	%rsp, %rbp
00000001000394c4	pushq	%r14
00000001000394c6	pushq	%rbx
00000001000394c7	subq	$0xa0, %rsp
00000001000394ce	movq	%rsi, %rbx
00000001000394d1	movq	%rdi, %r14
00000001000394d4	cmpq	$0x0, (%rdi)
00000001000394d8	je	0x1000395bc
00000001000394de	leaq	0x8(%r14), %rax
00000001000394e2	movq	%rax, -0x18(%rbp)
00000001000394e6	movq	%rbx, %rdi
00000001000394e9	callq	__ZN4core3fmt9Formatter9alternate17hc2243bb2c4eca803E ## core::fmt::Formatter::alternate::hc2243bb2c4eca803
00000001000394ee	movq	$0x0, -0x40(%rbp)
00000001000394f6	movq	$0xf4240, -0x38(%rbp)           ## imm = 0xF4240
00000001000394fe	movq	%rbx, -0x30(%rbp)
0000000100039502	testb	%al, %al
0000000100039504	je	0x1000395dd
000000010003950a	leaq	-0x40(%rbp), %rax
000000010003950e	movq	%rax, -0x48(%rbp)
0000000100039512	leaq	-0x18(%rbp), %rax
0000000100039516	movq	%rax, -0x28(%rbp)
000000010003951a	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h386479295a7728e9E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h386479295a7728e9
0000000100039521	movq	%rax, -0x20(%rbp)
0000000100039525	movq	$0x2, -0x80(%rbp)
000000010003952d	movq	$0x2, -0x70(%rbp)
0000000100039535	movq	$0x0, -0x60(%rbp)
000000010003953d	movabsq	$0x400000020, %rax              ## imm = 0x400000020
0000000100039547	movq	%rax, -0x58(%rbp)
000000010003954b	movb	$0x3, -0x50(%rbp)
000000010003954f	leaq	0x107c2(%rip), %rax
0000000100039556	movq	%rax, -0xb0(%rbp)
000000010003955d	movq	$0x1, -0xa8(%rbp)
0000000100039568	leaq	-0x28(%rbp), %rax
000000010003956c	movq	%rax, -0xa0(%rbp)
0000000100039573	movq	$0x1, -0x98(%rbp)
000000010003957e	leaq	-0x80(%rbp), %rax
0000000100039582	movq	%rax, -0x90(%rbp)
0000000100039589	movq	$0x1, -0x88(%rbp)
0000000100039594	leaq	0x101ed(%rip), %rsi
000000010003959b	leaq	-0x48(%rbp), %rdi
000000010003959f	leaq	-0xb0(%rbp), %rdx
00000001000395a6	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
00000001000395ab	movq	-0x40(%rbp), %rcx
00000001000395af	testb	%al, %al
00000001000395b1	jne	0x100039648
00000001000395b7	jmp	0x100039667
00000001000395bc	movq	0x20(%r14), %rsi
00000001000395c0	movq	0x28(%r14), %rdx
00000001000395c4	movq	%rbx, %rdi
00000001000395c7	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
00000001000395cc	movl	%eax, %ecx
00000001000395ce	movb	$0x1, %al
00000001000395d0	testb	%cl, %cl
00000001000395d2	je	0x100039674
00000001000395d8	jmp	0x100039684
00000001000395dd	leaq	-0x40(%rbp), %rax
00000001000395e1	movq	%rax, -0x28(%rbp)
00000001000395e5	leaq	-0x18(%rbp), %rax
00000001000395e9	movq	%rax, -0xb0(%rbp)
00000001000395f0	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h386479295a7728e9E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h386479295a7728e9
00000001000395f7	movq	%rax, -0xa8(%rbp)
00000001000395fe	leaq	0x10713(%rip), %rax
0000000100039605	movq	%rax, -0x80(%rbp)
0000000100039609	movq	$0x1, -0x78(%rbp)
0000000100039611	leaq	-0xb0(%rbp), %rax
0000000100039618	movq	%rax, -0x70(%rbp)
000000010003961c	movq	$0x1, -0x68(%rbp)
0000000100039624	movq	$0x0, -0x60(%rbp)
000000010003962c	leaq	0x10155(%rip), %rsi
0000000100039633	leaq	-0x28(%rbp), %rdi
0000000100039637	leaq	-0x80(%rbp), %rdx
000000010003963b	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
0000000100039640	movq	-0x40(%rbp), %rcx
0000000100039644	testb	%al, %al
0000000100039646	je	0x100039667
0000000100039648	testq	%rcx, %rcx
000000010003964b	je	0x100039667
000000010003964d	leaq	0xcd6e(%rip), %rsi
0000000100039654	movl	$0x14, %edx
0000000100039659	movq	%rbx, %rdi
000000010003965c	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100039661	testb	%al, %al
0000000100039663	jne	0x10003966b
0000000100039665	jmp	0x100039674
0000000100039667	testb	%al, %al
0000000100039669	je	0x10003966f
000000010003966b	movb	$0x1, %al
000000010003966d	jmp	0x100039684
000000010003966f	testq	%rcx, %rcx
0000000100039672	jne	0x100039690
0000000100039674	movq	0x30(%r14), %rsi
0000000100039678	movq	0x38(%r14), %rdx
000000010003967c	movq	%rbx, %rdi
000000010003967f	callq	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
0000000100039684	addq	$0xa0, %rsp
000000010003968b	popq	%rbx
000000010003968c	popq	%r14
000000010003968e	popq	%rbp
000000010003968f	retq
0000000100039690	leaq	0xcd3f(%rip), %rdi
0000000100039697	leaq	0x101b2(%rip), %rcx
000000010003969e	leaq	0x10683(%rip), %r8
00000001000396a5	leaq	-0x80(%rbp), %rdx
00000001000396a9	movl	$0x37, %esi
00000001000396ae	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
00000001000396b3	nopw	%cs:(%rax,%rax)
00000001000396bd	nopl	(%rax)
__ZN71_$LT$rustc_demangle..SizeLimitExhausted$u20$as$u20$core..fmt..Debug$GT$3fmt17h44d5cd5efddc068bE:
00000001000396c0	pushq	%rbp
00000001000396c1	movq	%rsp, %rbp
00000001000396c4	movq	%rsi, %rdi
00000001000396c7	leaq	0xcd42(%rip), %rsi
00000001000396ce	movl	$0x12, %edx
00000001000396d3	popq	%rbp
00000001000396d4	jmp	__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h0c9e77523bfe065bE ## _$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$::write_str::h0c9e77523bfe065b
00000001000396d9	nop
00000001000396da	nop
00000001000396db	nop
00000001000396dc	nop
00000001000396dd	nop
00000001000396de	nop
00000001000396df	nop
__ZN4libc4unix3bsd5apple9siginfo_t7si_addr17h6e20e9ae5f88908dE:
00000001000396e0	pushq	%rbp
00000001000396e1	movq	%rsp, %rbp
00000001000396e4	movq	0x18(%rdi), %rax
00000001000396e8	popq	%rbp
00000001000396e9	retq
00000001000396ea	nopw	(%rax,%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h66bf648de7a60097E:
00000001000396f0	pushq	%rbp
00000001000396f1	movq	%rsp, %rbp
00000001000396f4	pushq	%r14
00000001000396f6	pushq	%rbx
00000001000396f7	movq	%rsi, %rbx
00000001000396fa	movq	(%rdi), %r14
00000001000396fd	movq	%rsi, %rdi
0000000100039700	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
0000000100039705	testb	%al, %al
0000000100039707	je	0x100039718
0000000100039709	movq	%r14, %rdi
000000010003970c	movq	%rbx, %rsi
000000010003970f	popq	%rbx
0000000100039710	popq	%r14
0000000100039712	popq	%rbp
0000000100039713	jmp	__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h4ff30f3db6526c2aE ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$::fmt::h4ff30f3db6526c2a
0000000100039718	movq	%rbx, %rdi
000000010003971b	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
0000000100039720	movq	%r14, %rdi
0000000100039723	movq	%rbx, %rsi
0000000100039726	testb	%al, %al
0000000100039728	je	0x100039733
000000010003972a	popq	%rbx
000000010003972b	popq	%r14
000000010003972d	popq	%rbp
000000010003972e	jmp	__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h9d2e79c904d8a800E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$::fmt::h9d2e79c904d8a800
0000000100039733	popq	%rbx
0000000100039734	popq	%r14
0000000100039736	popq	%rbp
0000000100039737	jmp	__ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hb08bf60f5df77f3dE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$::fmt::hb08bf60f5df77f3d
000000010003973c	nopl	(%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd217f3ead8c721d4E:
0000000100039740	pushq	%rbp
0000000100039741	movq	%rsp, %rbp
0000000100039744	pushq	%r15
0000000100039746	pushq	%r14
0000000100039748	pushq	%r13
000000010003974a	pushq	%r12
000000010003974c	pushq	%rbx
000000010003974d	subq	$0x18, %rsp
0000000100039751	movq	(%rdi), %rax
0000000100039754	movq	(%rax), %r12
0000000100039757	movq	0x10(%rax), %r13
000000010003975b	leaq	-0x40(%rbp), %rdi
000000010003975f	callq	__ZN4core3fmt9Formatter10debug_list17hea453ad51fae0031E ## core::fmt::Formatter::debug_list::hea453ad51fae0031
0000000100039764	testq	%r13, %r13
0000000100039767	je	0x10003979a
0000000100039769	leaq	0x106a0(%rip), %rbx
0000000100039770	leaq	-0x40(%rbp), %r14
0000000100039774	leaq	-0x30(%rbp), %r15
0000000100039778	nopl	(%rax,%rax)
0000000100039780	movq	%r12, -0x30(%rbp)
0000000100039784	incq	%r12
0000000100039787	movq	%r14, %rdi
000000010003978a	movq	%r15, %rsi
000000010003978d	movq	%rbx, %rdx
0000000100039790	callq	__ZN4core3fmt8builders8DebugSet5entry17hf11f5493a502177bE ## core::fmt::builders::DebugSet::entry::hf11f5493a502177b
0000000100039795	decq	%r13
0000000100039798	jne	0x100039780
000000010003979a	leaq	-0x40(%rbp), %rdi
000000010003979e	callq	__ZN4core3fmt8builders9DebugList6finish17hf1eecb5654d2cf1aE ## core::fmt::builders::DebugList::finish::hf1eecb5654d2cf1a
00000001000397a3	addq	$0x18, %rsp
00000001000397a7	popq	%rbx
00000001000397a8	popq	%r12
00000001000397aa	popq	%r13
00000001000397ac	popq	%r14
00000001000397ae	popq	%r15
00000001000397b0	popq	%rbp
00000001000397b1	retq
00000001000397b2	nopw	%cs:(%rax,%rax)
00000001000397bc	nopl	(%rax)
__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h217f2733c4d46545E:
00000001000397c0	pushq	%rbp
00000001000397c1	movq	%rsp, %rbp
00000001000397c4	pushq	%r14
00000001000397c6	pushq	%rbx
00000001000397c7	movq	%rsi, %rbx
00000001000397ca	movq	%rdi, %r14
00000001000397cd	movq	%rsi, %rdi
00000001000397d0	callq	__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE ## core::fmt::Formatter::debug_lower_hex::h74a237fdb70eb1dd
00000001000397d5	testb	%al, %al
00000001000397d7	je	0x1000397e8
00000001000397d9	movq	%r14, %rdi
00000001000397dc	movq	%rbx, %rsi
00000001000397df	popq	%rbx
00000001000397e0	popq	%r14
00000001000397e2	popq	%rbp
00000001000397e3	jmp	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$3fmt17hdccece5688b0c434E ## core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$::fmt::hdccece5688b0c434
00000001000397e8	movq	%rbx, %rdi
00000001000397eb	callq	__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E ## core::fmt::Formatter::debug_upper_hex::h5639a4fa664d99f2
00000001000397f0	movq	%r14, %rdi
00000001000397f3	movq	%rbx, %rsi
00000001000397f6	testb	%al, %al
00000001000397f8	je	0x100039803
00000001000397fa	popq	%rbx
00000001000397fb	popq	%r14
00000001000397fd	popq	%rbp
00000001000397fe	jmp	__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h6243124a4619f577E ## core::fmt::num::_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$::fmt::h6243124a4619f577
0000000100039803	popq	%rbx
0000000100039804	popq	%r14
0000000100039806	popq	%rbp
0000000100039807	jmp	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010003980c	nopl	(%rax)
__ZN4core3ptr26drop_in_place$LT$usize$GT$17h62a11430026e6901E:
0000000100039810	pushq	%rbp
0000000100039811	movq	%rsp, %rbp
0000000100039814	popq	%rbp
0000000100039815	retq
0000000100039816	nopw	%cs:(%rax,%rax)
__ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h3c86ef67ae1634ddE:
0000000100039820	pushq	%rbp
0000000100039821	movq	%rsp, %rbp
0000000100039824	popq	%rbp
0000000100039825	retq
0000000100039826	nopw	%cs:(%rax,%rax)
__ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hd0c3f7a1850d92d2E:
0000000100039830	pushq	%rbp
0000000100039831	movq	%rsp, %rbp
0000000100039834	testq	%rsi, %rsi
0000000100039837	je	0x100039844
0000000100039839	movl	$0x1, %edx
000000010003983e	popq	%rbp
000000010003983f	jmp	___rust_dealloc
0000000100039844	popq	%rbp
0000000100039845	retq
0000000100039846	nopw	%cs:(%rax,%rax)
__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hcb4dc8f65afc19d3E:
0000000100039850	pushq	%rbp
0000000100039851	movq	%rsp, %rbp
0000000100039854	movq	0x8(%rdi), %rsi
0000000100039858	testq	%rsi, %rsi
000000010003985b	je	0x10003986b
000000010003985d	movq	(%rdi), %rdi
0000000100039860	movl	$0x1, %edx
0000000100039865	popq	%rbp
0000000100039866	jmp	___rust_dealloc
000000010003986b	popq	%rbp
000000010003986c	retq
000000010003986d	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hcee029375fba7f74E:
0000000100039870	pushq	%rbp
0000000100039871	movq	%rsp, %rbp
0000000100039874	pushq	%r14
0000000100039876	pushq	%rbx
0000000100039877	subq	$0x30, %rsp
000000010003987b	incq	%rsi
000000010003987e	je	0x1000398fb
0000000100039880	movq	%rdi, %rbx
0000000100039883	movq	0x8(%rdi), %rax
0000000100039887	leaq	(%rax,%rax), %rcx
000000010003988b	cmpq	%rsi, %rcx
000000010003988e	cmovaq	%rcx, %rsi
0000000100039892	cmpq	$0x9, %rsi
0000000100039896	movl	$0x8, %r14d
000000010003989c	cmovaeq	%rsi, %r14
00000001000398a0	movq	%r14, %rsi
00000001000398a3	notq	%rsi
00000001000398a6	shrq	$0x3f, %rsi
00000001000398aa	testq	%rax, %rax
00000001000398ad	je	0x1000398c4
00000001000398af	movq	(%rbx), %rcx
00000001000398b2	movq	%rcx, -0x28(%rbp)
00000001000398b6	movq	$0x1, -0x20(%rbp)
00000001000398be	movq	%rax, -0x18(%rbp)
00000001000398c2	jmp	0x1000398cc
00000001000398c4	movq	$0x0, -0x20(%rbp)
00000001000398cc	leaq	-0x40(%rbp), %rdi
00000001000398d0	leaq	-0x28(%rbp), %rcx
00000001000398d4	movq	%r14, %rdx
00000001000398d7	callq	__ZN5alloc7raw_vec11finish_grow17h93eef04547315975E ## alloc::raw_vec::finish_grow::h93eef04547315975
00000001000398dc	cmpq	$0x0, -0x40(%rbp)
00000001000398e1	movq	-0x38(%rbp), %rdi
00000001000398e5	je	0x100039900
00000001000398e7	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
00000001000398f1	cmpq	%rax, %rdi
00000001000398f4	je	0x100039907
00000001000398f6	testq	%rdi, %rdi
00000001000398f9	jne	0x100039910
00000001000398fb	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100039900	movq	%rdi, (%rbx)
0000000100039903	movq	%r14, 0x8(%rbx)
0000000100039907	addq	$0x30, %rsp
000000010003990b	popq	%rbx
000000010003990c	popq	%r14
000000010003990e	popq	%rbp
000000010003990f	retq
0000000100039910	movq	-0x30(%rbp), %rsi
0000000100039914	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100039919	nopl	(%rax)
__ZN5alloc7raw_vec11finish_grow17h93eef04547315975E:
0000000100039920	pushq	%rbp
0000000100039921	movq	%rsp, %rbp
0000000100039924	pushq	%r14
0000000100039926	pushq	%rbx
0000000100039927	movq	%rdx, %rbx
000000010003992a	movq	%rdi, %r14
000000010003992d	testq	%rsi, %rsi
0000000100039930	je	0x100039984
0000000100039932	cmpq	$0x0, 0x8(%rcx)
0000000100039937	je	0x100039959
0000000100039939	movq	0x10(%rcx), %rsi
000000010003993d	testq	%rsi, %rsi
0000000100039940	je	0x100039959
0000000100039942	movq	(%rcx), %rdi
0000000100039945	movl	$0x1, %edx
000000010003994a	movq	%rbx, %rcx
000000010003994d	callq	___rust_realloc
0000000100039952	testq	%rax, %rax
0000000100039955	jne	0x100039998
0000000100039957	jmp	0x10003997a
0000000100039959	testq	%rbx, %rbx
000000010003995c	je	0x100039993
000000010003995e	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100039965	movzbl	(%rax), %eax
0000000100039968	movl	$0x1, %esi
000000010003996d	movq	%rbx, %rdi
0000000100039970	callq	___rust_alloc
0000000100039975	testq	%rax, %rax
0000000100039978	jne	0x100039998
000000010003997a	movq	$0x1, 0x8(%r14)
0000000100039982	jmp	0x10003998c
0000000100039984	movq	$0x0, 0x8(%r14)
000000010003998c	movl	$0x1, %eax
0000000100039991	jmp	0x10003999e
0000000100039993	movl	$0x1, %eax
0000000100039998	movq	%rax, 0x8(%r14)
000000010003999c	xorl	%eax, %eax
000000010003999e	movq	%rbx, 0x10(%r14)
00000001000399a2	movq	%rax, (%r14)
00000001000399a5	popq	%rbx
00000001000399a6	popq	%r14
00000001000399a8	popq	%rbp
00000001000399a9	retq
00000001000399aa	nopw	(%rax,%rax)
__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE:
00000001000399b0	pushq	%rbp
00000001000399b1	movq	%rsp, %rbp
00000001000399b4	subq	$0x30, %rsp
00000001000399b8	leaq	0x10491(%rip), %rax
00000001000399bf	movq	%rax, -0x30(%rbp)
00000001000399c3	movq	$0x1, -0x28(%rbp)
00000001000399cb	movq	$0x0, -0x10(%rbp)
00000001000399d3	leaq	0xcb6e(%rip), %rax
00000001000399da	movq	%rax, -0x20(%rbp)
00000001000399de	movq	$0x0, -0x18(%rbp)
00000001000399e6	leaq	0x10473(%rip), %rsi
00000001000399ed	leaq	-0x30(%rbp), %rdi
00000001000399f1	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000399f6	nopw	%cs:(%rax,%rax)
__ZN5alloc5alloc18handle_alloc_error8rt_error17hf65a1a7a6a62f8c4E:
0000000100039a00	pushq	%rbp
0000000100039a01	movq	%rsp, %rbp
0000000100039a04	movq	%rdi, %rax
0000000100039a07	movq	%rsi, %rdi
0000000100039a0a	movq	%rax, %rsi
0000000100039a0d	callq	___rust_alloc_error_handler
0000000100039a12	nopw	%cs:(%rax,%rax)
0000000100039a1c	nopl	(%rax)
__ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf6ce6a0ffec90dfaE:
0000000100039a20	pushq	%rbp
0000000100039a21	movq	%rsp, %rbp
0000000100039a24	ud2
0000000100039a26	nopw	%cs:(%rax,%rax)
__ZN5alloc11collections5btree4node10splitpoint17hfb16b3107f583869E:
0000000100039a30	movq	%rdi, %rax
0000000100039a33	cmpq	$0x5, %rsi
0000000100039a37	jae	0x100039a42
0000000100039a39	movl	$0x4, %edx
0000000100039a3e	xorl	%ecx, %ecx
0000000100039a40	jmp	0x100039a6d
0000000100039a42	je	0x100039a58
0000000100039a44	cmpq	$0x6, %rsi
0000000100039a48	jne	0x100039a5f
0000000100039a4a	movl	$0x1, %ecx
0000000100039a4f	movl	$0x5, %edx
0000000100039a54	xorl	%esi, %esi
0000000100039a56	jmp	0x100039a6d
0000000100039a58	xorl	%ecx, %ecx
0000000100039a5a	movq	%rsi, %rdx
0000000100039a5d	jmp	0x100039a6d
0000000100039a5f	addq	$-0x7, %rsi
0000000100039a63	movl	$0x1, %ecx
0000000100039a68	movl	$0x6, %edx
0000000100039a6d	pushq	%rbp
0000000100039a6e	movq	%rsp, %rbp
0000000100039a71	movq	%rdx, (%rax)
0000000100039a74	movq	%rcx, 0x8(%rax)
0000000100039a78	movq	%rsi, 0x10(%rax)
0000000100039a7c	popq	%rbp
0000000100039a7d	retq
0000000100039a7e	nop
__ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hef8c413dc80fb552E:
0000000100039a80	pushq	%rbp
0000000100039a81	movq	%rsp, %rbp
0000000100039a84	pushq	%r15
0000000100039a86	pushq	%r14
0000000100039a88	pushq	%r13
0000000100039a8a	pushq	%r12
0000000100039a8c	pushq	%rbx
0000000100039a8d	subq	$0x38, %rsp
0000000100039a91	movq	%rdx, %r12
0000000100039a94	incq	%r12
0000000100039a97	je	0x100039b9a
0000000100039a9d	setns	%al
0000000100039aa0	js	0x100039bb2
0000000100039aa6	movq	%rdx, %r14
0000000100039aa9	movq	%rsi, %r15
0000000100039aac	movq	%rdi, %rbx
0000000100039aaf	movzbl	%al, %r13d
0000000100039ab3	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100039aba	movzbl	(%rax), %eax
0000000100039abd	movq	%r12, %rdi
0000000100039ac0	movq	%r13, %rsi
0000000100039ac3	callq	___rust_alloc
0000000100039ac8	testq	%rax, %rax
0000000100039acb	je	0x100039bb7
0000000100039ad1	movq	%rax, -0x40(%rbp)
0000000100039ad5	movq	%r12, -0x38(%rbp)
0000000100039ad9	movq	%rax, %rdi
0000000100039adc	movq	%r15, %rsi
0000000100039adf	movq	%r14, %rdx
0000000100039ae2	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100039ae7	movq	%r14, -0x30(%rbp)
0000000100039aeb	cmpq	$0x10, %r14
0000000100039aef	jae	0x100039b19
0000000100039af1	testq	%r14, %r14
0000000100039af4	je	0x100039b28
0000000100039af6	xorl	%eax, %eax
0000000100039af8	xorl	%edx, %edx
0000000100039afa	nopw	(%rax,%rax)
0000000100039b00	cmpb	$0x0, (%r15,%rdx)
0000000100039b05	je	0x100039b4e
0000000100039b07	incq	%rdx
0000000100039b0a	cmpq	%rdx, %r14
0000000100039b0d	jne	0x100039b00
0000000100039b0f	movq	%r14, %rdx
0000000100039b12	testq	%rax, %rax
0000000100039b15	jne	0x100039b31
0000000100039b17	jmp	0x100039b58
0000000100039b19	xorl	%edi, %edi
0000000100039b1b	movq	%r15, %rsi
0000000100039b1e	movq	%r14, %rdx
0000000100039b21	callq	__ZN4core5slice6memchr14memchr_aligned17hab88d30e96119121E ## core::slice::memchr::memchr_aligned::hab88d30e96119121
0000000100039b26	jmp	0x100039b2c
0000000100039b28	xorl	%edx, %edx
0000000100039b2a	xorl	%eax, %eax
0000000100039b2c	testq	%rax, %rax
0000000100039b2f	je	0x100039b58
0000000100039b31	movq	-0x30(%rbp), %rax
0000000100039b35	movq	%rax, 0x10(%rbx)
0000000100039b39	movq	-0x40(%rbp), %rax
0000000100039b3d	movq	-0x38(%rbp), %rcx
0000000100039b41	movq	%rcx, 0x8(%rbx)
0000000100039b45	movq	%rax, (%rbx)
0000000100039b48	movq	%rdx, 0x18(%rbx)
0000000100039b4c	jmp	0x100039b88
0000000100039b4e	movl	$0x1, %eax
0000000100039b53	testq	%rax, %rax
0000000100039b56	jne	0x100039b31
0000000100039b58	movq	-0x30(%rbp), %rax
0000000100039b5c	movq	%rax, -0x48(%rbp)
0000000100039b60	movq	-0x40(%rbp), %rax
0000000100039b64	movq	-0x38(%rbp), %rcx
0000000100039b68	movq	%rcx, -0x50(%rbp)
0000000100039b6c	movq	%rax, -0x58(%rbp)
0000000100039b70	leaq	-0x58(%rbp), %rdi
0000000100039b74	callq	__ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17hd85adefff2526a00E ## alloc::ffi::c_str::CString::_from_vec_unchecked::hd85adefff2526a00
0000000100039b79	movq	%rax, 0x8(%rbx)
0000000100039b7d	movq	%rdx, 0x10(%rbx)
0000000100039b81	movq	$0x0, (%rbx)
0000000100039b88	movq	%rbx, %rax
0000000100039b8b	addq	$0x38, %rsp
0000000100039b8f	popq	%rbx
0000000100039b90	popq	%r12
0000000100039b92	popq	%r13
0000000100039b94	popq	%r14
0000000100039b96	popq	%r15
0000000100039b98	popq	%rbp
0000000100039b99	retq
0000000100039b9a	leaq	0xca22(%rip), %rdi
0000000100039ba1	leaq	0x102d0(%rip), %rdx
0000000100039ba8	movl	$0x2b, %esi
0000000100039bad	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100039bb2	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100039bb7	movq	%r13, %rdi
0000000100039bba	movq	%r12, %rsi
0000000100039bbd	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100039bc2	movq	%rax, %rbx
0000000100039bc5	leaq	-0x40(%rbp), %rdi
0000000100039bc9	callq	__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hcb4dc8f65afc19d3E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$::hcb4dc8f65afc19d3
0000000100039bce	movq	%rbx, %rdi
0000000100039bd1	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100039bd6	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100039bdb	nopl	(%rax,%rax)
__ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17hd85adefff2526a00E:
0000000100039be0	pushq	%rbp
0000000100039be1	movq	%rsp, %rbp
0000000100039be4	pushq	%r15
0000000100039be6	pushq	%r14
0000000100039be8	pushq	%rbx
0000000100039be9	subq	$0x38, %rsp
0000000100039bed	movq	%rdi, %rbx
0000000100039bf0	movq	0x8(%rdi), %r15
0000000100039bf4	movq	0x10(%rdi), %r14
0000000100039bf8	cmpq	%r14, %r15
0000000100039bfb	jne	0x100039c6e
0000000100039bfd	movq	%r14, %r15
0000000100039c00	incq	%r15
0000000100039c03	je	0x100039c60
0000000100039c05	movq	%r15, %rsi
0000000100039c08	notq	%rsi
0000000100039c0b	shrq	$0x3f, %rsi
0000000100039c0f	testq	%r14, %r14
0000000100039c12	je	0x100039c29
0000000100039c14	movq	(%rbx), %rax
0000000100039c17	movq	%rax, -0x30(%rbp)
0000000100039c1b	movq	$0x1, -0x28(%rbp)
0000000100039c23	movq	%r14, -0x20(%rbp)
0000000100039c27	jmp	0x100039c31
0000000100039c29	movq	$0x0, -0x28(%rbp)
0000000100039c31	leaq	-0x48(%rbp), %rdi
0000000100039c35	leaq	-0x30(%rbp), %rcx
0000000100039c39	movq	%r15, %rdx
0000000100039c3c	callq	__ZN5alloc7raw_vec11finish_grow17h93eef04547315975E ## alloc::raw_vec::finish_grow::h93eef04547315975
0000000100039c41	cmpq	$0x0, -0x48(%rbp)
0000000100039c46	movq	-0x40(%rbp), %rdi
0000000100039c4a	je	0x100039c67
0000000100039c4c	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
0000000100039c56	cmpq	%rax, %rdi
0000000100039c59	je	0x100039c73
0000000100039c5b	testq	%rdi, %rdi
0000000100039c5e	jne	0x100039cbc
0000000100039c60	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100039c65	jmp	0x100039cc5
0000000100039c67	movq	%rdi, (%rbx)
0000000100039c6a	movq	%r15, 0x8(%rbx)
0000000100039c6e	cmpq	%r15, %r14
0000000100039c71	jne	0x100039c82
0000000100039c73	movq	%rbx, %rdi
0000000100039c76	movq	%r14, %rsi
0000000100039c79	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hcee029375fba7f74E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::hcee029375fba7f74
0000000100039c7e	movq	0x10(%rbx), %r14
0000000100039c82	movq	(%rbx), %rax
0000000100039c85	movb	$0x0, (%rax,%r14)
0000000100039c8a	incq	%r14
0000000100039c8d	movq	%r14, 0x10(%rbx)
0000000100039c91	movq	0x10(%rbx), %rax
0000000100039c95	movq	%rax, -0x20(%rbp)
0000000100039c99	movq	(%rbx), %rax
0000000100039c9c	movq	0x8(%rbx), %rcx
0000000100039ca0	movq	%rcx, -0x28(%rbp)
0000000100039ca4	movq	%rax, -0x30(%rbp)
0000000100039ca8	leaq	-0x30(%rbp), %rdi
0000000100039cac	callq	__ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h930ba8176d98bc1eE ## alloc::vec::Vec$LT$T$C$A$GT$::into_boxed_slice::h930ba8176d98bc1e
0000000100039cb1	addq	$0x38, %rsp
0000000100039cb5	popq	%rbx
0000000100039cb6	popq	%r14
0000000100039cb8	popq	%r15
0000000100039cba	popq	%rbp
0000000100039cbb	retq
0000000100039cbc	movq	-0x38(%rbp), %rsi
0000000100039cc0	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100039cc5	ud2
0000000100039cc7	movq	%rax, %r14
0000000100039cca	movq	%rbx, %rdi
0000000100039ccd	callq	__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hcb4dc8f65afc19d3E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$::hcb4dc8f65afc19d3
0000000100039cd2	movq	%r14, %rdi
0000000100039cd5	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100039cda	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100039cdf	nop
__ZN5alloc6string6String15from_utf8_lossy17hf6cd95066e5242f9E:
0000000100039ce0	pushq	%rbp
0000000100039ce1	movq	%rsp, %rbp
0000000100039ce4	pushq	%r15
0000000100039ce6	pushq	%r14
0000000100039ce8	pushq	%r13
0000000100039cea	pushq	%r12
0000000100039cec	pushq	%rbx
0000000100039ced	subq	$0x88, %rsp
0000000100039cf4	movq	%rdx, %rbx
0000000100039cf7	movq	%rdi, %r13
0000000100039cfa	movq	%rsi, %rdi
0000000100039cfd	movq	%rdx, %rsi
0000000100039d00	callq	__ZN4core3str5lossy10Utf8Chunks3new17h9a5c7d169aa2de52E ## core::str::lossy::Utf8Chunks::new::h9a5c7d169aa2de52
0000000100039d05	movq	%rax, -0x70(%rbp)
0000000100039d09	movq	%rdx, -0x68(%rbp)
0000000100039d0d	leaq	-0x60(%rbp), %rdi
0000000100039d11	leaq	-0x70(%rbp), %rsi
0000000100039d15	callq	__ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc340660218f074abE ## _$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hc340660218f074ab
0000000100039d1a	cmpq	$0x0, -0x60(%rbp)
0000000100039d1f	je	0x100039da7
0000000100039d25	movq	-0x48(%rbp), %rax
0000000100039d29	movq	%rax, -0x78(%rbp)
0000000100039d2d	movq	-0x50(%rbp), %rax
0000000100039d31	movq	%rax, -0x80(%rbp)
0000000100039d35	movq	-0x60(%rbp), %rax
0000000100039d39	movq	-0x58(%rbp), %rcx
0000000100039d3d	movq	%rcx, -0x88(%rbp)
0000000100039d44	movq	%rax, -0x90(%rbp)
0000000100039d4b	leaq	-0x90(%rbp), %r12
0000000100039d52	movq	%r12, %rdi
0000000100039d55	callq	__ZN4core3str5lossy9Utf8Chunk5valid17hccdc9e27ad836984E ## core::str::lossy::Utf8Chunk::valid::hccdc9e27ad836984
0000000100039d5a	movq	%rax, %r15
0000000100039d5d	movq	%rdx, %r14
0000000100039d60	movq	%r12, %rdi
0000000100039d63	callq	__ZN4core3str5lossy9Utf8Chunk7invalid17he07223169c69df7bE ## core::str::lossy::Utf8Chunk::invalid::he07223169c69df7b
0000000100039d68	testq	%rdx, %rdx
0000000100039d6b	je	0x100039dbc
0000000100039d6d	testq	%rbx, %rbx
0000000100039d70	je	0x100039dd1
0000000100039d72	setns	%al
0000000100039d75	js	0x100039f91
0000000100039d7b	movzbl	%al, %r12d
0000000100039d7f	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
0000000100039d86	movzbl	(%rax), %eax
0000000100039d89	movq	%rbx, %rdi
0000000100039d8c	movq	%r12, %rsi
0000000100039d8f	callq	___rust_alloc
0000000100039d94	movq	%rax, %rdi
0000000100039d97	testq	%rax, %rax
0000000100039d9a	jne	0x100039dd6
0000000100039d9c	movq	%r12, %rdi
0000000100039d9f	movq	%rbx, %rsi
0000000100039da2	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100039da7	leaq	0xc79a(%rip), %rax
0000000100039dae	movq	%rax, 0x8(%r13)
0000000100039db2	movq	$0x0, 0x10(%r13)
0000000100039dba	jmp	0x100039dc4
0000000100039dbc	movq	%r15, 0x8(%r13)
0000000100039dc0	movq	%r14, 0x10(%r13)
0000000100039dc4	movq	$0x0, (%r13)
0000000100039dcc	jmp	0x100039f7c
0000000100039dd1	movl	$0x1, %edi
0000000100039dd6	movq	%rdi, -0x40(%rbp)
0000000100039dda	movq	%rbx, -0x38(%rbp)
0000000100039dde	movq	$0x0, -0x30(%rbp)
0000000100039de6	cmpq	%rbx, %r14
0000000100039de9	jbe	0x100039e03
0000000100039deb	leaq	-0x40(%rbp), %rdi
0000000100039def	xorl	%esi, %esi
0000000100039df1	movq	%r14, %rdx
0000000100039df4	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3200a7c95c7f2d93E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h3200a7c95c7f2d93
0000000100039df9	movq	-0x40(%rbp), %rdi
0000000100039dfd	movq	-0x30(%rbp), %rbx
0000000100039e01	jmp	0x100039e05
0000000100039e03	xorl	%ebx, %ebx
0000000100039e05	addq	%rbx, %rdi
0000000100039e08	movq	%r15, %rsi
0000000100039e0b	movq	%r14, %rdx
0000000100039e0e	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100039e13	addq	%rbx, %r14
0000000100039e16	movq	%r14, -0x30(%rbp)
0000000100039e1a	movq	-0x38(%rbp), %rax
0000000100039e1e	subq	%r14, %rax
0000000100039e21	cmpq	$0x2, %rax
0000000100039e25	movq	%r13, -0x98(%rbp)
0000000100039e2c	ja	0x100039e43
0000000100039e2e	leaq	-0x40(%rbp), %rdi
0000000100039e32	movl	$0x3, %edx
0000000100039e37	movq	%r14, %rsi
0000000100039e3a	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3200a7c95c7f2d93E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h3200a7c95c7f2d93
0000000100039e3f	movq	-0x30(%rbp), %r14
0000000100039e43	movq	-0x40(%rbp), %r12
0000000100039e47	movb	$-0x43, 0x2(%r12,%r14)
0000000100039e4d	movw	$0xbfef, (%r12,%r14)            ## imm = 0xBFEF
0000000100039e54	addq	$0x3, %r14
0000000100039e58	movq	%r14, -0x30(%rbp)
0000000100039e5c	movq	-0x70(%rbp), %rax
0000000100039e60	movq	-0x68(%rbp), %rcx
0000000100039e64	movq	%rax, -0xa8(%rbp)
0000000100039e6b	movq	%rcx, -0xa0(%rbp)
0000000100039e72	leaq	-0x90(%rbp), %r13
0000000100039e79	jmp	0x100039e99
0000000100039e7b	nopl	(%rax,%rax)
0000000100039e80	movq	-0x40(%rbp), %r12
0000000100039e84	movb	$-0x43, 0x2(%r12,%r14)
0000000100039e8a	movw	$0xbfef, (%r12,%r14)            ## imm = 0xBFEF
0000000100039e91	addq	$0x3, %r14
0000000100039e95	movq	%r14, -0x30(%rbp)
0000000100039e99	leaq	-0x60(%rbp), %rdi
0000000100039e9d	leaq	-0xa8(%rbp), %rsi
0000000100039ea4	callq	__ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc340660218f074abE ## _$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hc340660218f074ab
0000000100039ea9	cmpq	$0x0, -0x60(%rbp)
0000000100039eae	je	0x100039f5d
0000000100039eb4	movq	-0x48(%rbp), %rax
0000000100039eb8	movq	%rax, -0x78(%rbp)
0000000100039ebc	movq	-0x50(%rbp), %rax
0000000100039ec0	movq	%rax, -0x80(%rbp)
0000000100039ec4	movq	-0x60(%rbp), %rax
0000000100039ec8	movq	-0x58(%rbp), %rcx
0000000100039ecc	movq	%rcx, -0x88(%rbp)
0000000100039ed3	movq	%rax, -0x90(%rbp)
0000000100039eda	movq	%r13, %rdi
0000000100039edd	callq	__ZN4core3str5lossy9Utf8Chunk5valid17hccdc9e27ad836984E ## core::str::lossy::Utf8Chunk::valid::hccdc9e27ad836984
0000000100039ee2	movq	%rax, %r15
0000000100039ee5	movq	%rdx, %rbx
0000000100039ee8	movq	-0x38(%rbp), %rax
0000000100039eec	subq	%r14, %rax
0000000100039eef	cmpq	%rdx, %rax
0000000100039ef2	jae	0x100039f0b
0000000100039ef4	leaq	-0x40(%rbp), %rdi
0000000100039ef8	movq	%r14, %rsi
0000000100039efb	movq	%rbx, %rdx
0000000100039efe	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3200a7c95c7f2d93E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h3200a7c95c7f2d93
0000000100039f03	movq	-0x40(%rbp), %r12
0000000100039f07	movq	-0x30(%rbp), %r14
0000000100039f0b	leaq	(%r12,%r14), %rdi
0000000100039f0f	movq	%r15, %rsi
0000000100039f12	movq	%rbx, %rdx
0000000100039f15	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100039f1a	addq	%rbx, %r14
0000000100039f1d	movq	%r14, -0x30(%rbp)
0000000100039f21	movq	%r13, %rdi
0000000100039f24	callq	__ZN4core3str5lossy9Utf8Chunk7invalid17he07223169c69df7bE ## core::str::lossy::Utf8Chunk::invalid::he07223169c69df7b
0000000100039f29	testq	%rdx, %rdx
0000000100039f2c	je	0x100039e99
0000000100039f32	movq	-0x38(%rbp), %rax
0000000100039f36	subq	%r14, %rax
0000000100039f39	cmpq	$0x2, %rax
0000000100039f3d	ja	0x100039e80
0000000100039f43	movl	$0x3, %edx
0000000100039f48	leaq	-0x40(%rbp), %rdi
0000000100039f4c	movq	%r14, %rsi
0000000100039f4f	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3200a7c95c7f2d93E ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h3200a7c95c7f2d93
0000000100039f54	movq	-0x30(%rbp), %r14
0000000100039f58	jmp	0x100039e80
0000000100039f5d	movq	-0x30(%rbp), %rax
0000000100039f61	movq	-0x98(%rbp), %r13
0000000100039f68	movq	%rax, 0x10(%r13)
0000000100039f6c	movq	-0x40(%rbp), %rax
0000000100039f70	movq	-0x38(%rbp), %rcx
0000000100039f74	movq	%rcx, 0x8(%r13)
0000000100039f78	movq	%rax, (%r13)
0000000100039f7c	movq	%r13, %rax
0000000100039f7f	addq	$0x88, %rsp
0000000100039f86	popq	%rbx
0000000100039f87	popq	%r12
0000000100039f89	popq	%r13
0000000100039f8b	popq	%r14
0000000100039f8d	popq	%r15
0000000100039f8f	popq	%rbp
0000000100039f90	retq
0000000100039f91	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100039f96	jmp	0x100039f98
0000000100039f98	movq	%rax, %rbx
0000000100039f9b	movq	-0x40(%rbp), %rdi
0000000100039f9f	movq	-0x38(%rbp), %rsi
0000000100039fa3	callq	__ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hd0c3f7a1850d92d2E ## core::ptr::drop_in_place$LT$alloc..string..String$GT$::hd0c3f7a1850d92d2
0000000100039fa8	movq	%rbx, %rdi
0000000100039fab	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
__ZN5alloc6string13FromUtf8Error10into_bytes17hd4b354ab290f9941E:
0000000100039fb0	pushq	%rbp
0000000100039fb1	movq	%rsp, %rbp
0000000100039fb4	movq	%rdi, %rax
0000000100039fb7	movq	0x10(%rsi), %rcx
0000000100039fbb	movq	%rcx, 0x10(%rdi)
0000000100039fbf	movq	(%rsi), %rcx
0000000100039fc2	movq	0x8(%rsi), %rdx
0000000100039fc6	movq	%rdx, 0x8(%rdi)
0000000100039fca	movq	%rcx, (%rdi)
0000000100039fcd	popq	%rbp
0000000100039fce	retq
0000000100039fcf	nop
__ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hc7f9a95ff05a0bbcE:
0000000100039fd0	pushq	%rbp
0000000100039fd1	movq	%rsp, %rbp
0000000100039fd4	pushq	%r15
0000000100039fd6	pushq	%r14
0000000100039fd8	pushq	%r13
0000000100039fda	pushq	%r12
0000000100039fdc	pushq	%rbx
0000000100039fdd	pushq	%rax
0000000100039fde	movq	%rdi, %rbx
0000000100039fe1	cmpq	$0x0, (%rsi)
0000000100039fe5	je	0x100039fff
0000000100039fe7	movq	0x10(%rsi), %rax
0000000100039feb	movq	%rax, 0x10(%rbx)
0000000100039fef	movq	(%rsi), %rax
0000000100039ff2	movq	0x8(%rsi), %rcx
0000000100039ff6	movq	%rcx, 0x8(%rbx)
0000000100039ffa	movq	%rax, (%rbx)
0000000100039ffd	jmp	0x10003a05c
0000000100039fff	movq	0x8(%rsi), %r15
000000010003a003	movq	0x10(%rsi), %r14
000000010003a007	testq	%r14, %r14
000000010003a00a	je	0x10003a03d
000000010003a00c	setns	%al
000000010003a00f	js	0x10003a06e
000000010003a011	movzbl	%al, %r12d
000000010003a015	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010003a01c	movzbl	(%rax), %eax
000000010003a01f	movq	%r14, %rdi
000000010003a022	movq	%r12, %rsi
000000010003a025	callq	___rust_alloc
000000010003a02a	movq	%rax, %r13
000000010003a02d	testq	%rax, %rax
000000010003a030	jne	0x10003a043
000000010003a032	movq	%r12, %rdi
000000010003a035	movq	%r14, %rsi
000000010003a038	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010003a03d	movl	$0x1, %r13d
000000010003a043	movq	%r13, %rdi
000000010003a046	movq	%r15, %rsi
000000010003a049	movq	%r14, %rdx
000000010003a04c	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010003a051	movq	%r13, (%rbx)
000000010003a054	movq	%r14, 0x8(%rbx)
000000010003a058	movq	%r14, 0x10(%rbx)
000000010003a05c	movq	%rbx, %rax
000000010003a05f	addq	$0x8, %rsp
000000010003a063	popq	%rbx
000000010003a064	popq	%r12
000000010003a066	popq	%r13
000000010003a068	popq	%r14
000000010003a06a	popq	%r15
000000010003a06c	popq	%rbp
000000010003a06d	retq
000000010003a06e	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
000000010003a073	nopw	%cs:(%rax,%rax)
000000010003a07d	nopl	(%rax)
__ZN5alloc4sync32arcinner_layout_for_value_layout17h1f210eb2a4ff3987E:
000000010003a080	cmpq	$0x9, %rdi
000000010003a084	movl	$0x8, %eax
000000010003a089	cmovaeq	%rdi, %rax
000000010003a08d	leaq	0xf(%rdi), %rcx
000000010003a091	negq	%rdi
000000010003a094	andq	%rcx, %rdi
000000010003a097	addq	$-0x10, %rdi
000000010003a09b	addq	$0x10, %rdi
000000010003a09f	jb	0x10003a0c7
000000010003a0a1	addq	%rsi, %rdi
000000010003a0a4	jb	0x10003a0c7
000000010003a0a6	movabsq	$-0x8000000000000000, %rcx      ## imm = 0x8000000000000000
000000010003a0b0	subq	%rax, %rcx
000000010003a0b3	cmpq	%rcx, %rdi
000000010003a0b6	ja	0x10003a0c7
000000010003a0b8	leaq	-0x1(%rax,%rdi), %rcx
000000010003a0bd	movq	%rax, %rdx
000000010003a0c0	negq	%rdx
000000010003a0c3	andq	%rcx, %rdx
000000010003a0c6	retq
000000010003a0c7	pushq	%rbp
000000010003a0c8	movq	%rsp, %rbp
000000010003a0cb	subq	$0x10, %rsp
000000010003a0cf	leaq	0xc473(%rip), %rdi
000000010003a0d6	leaq	0xfd53(%rip), %rcx
000000010003a0dd	leaq	0xfdac(%rip), %r8
000000010003a0e4	leaq	-0x8(%rbp), %rdx
000000010003a0e8	movl	$0x2b, %esi
000000010003a0ed	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
000000010003a0f2	nopw	%cs:(%rax,%rax)
000000010003a0fc	nopl	(%rax)
__ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h930ba8176d98bc1eE:
000000010003a100	pushq	%rbp
000000010003a101	movq	%rsp, %rbp
000000010003a104	pushq	%r15
000000010003a106	pushq	%r14
000000010003a108	pushq	%rbx
000000010003a109	pushq	%rax
000000010003a10a	movq	%rdi, %rbx
000000010003a10d	movq	0x8(%rdi), %rsi
000000010003a111	movq	0x10(%rdi), %r14
000000010003a115	cmpq	%r14, %rsi
000000010003a118	jbe	0x10003a146
000000010003a11a	movq	(%rbx), %rdi
000000010003a11d	testq	%r14, %r14
000000010003a120	je	0x10003a14b
000000010003a122	movl	$0x1, %edx
000000010003a127	movq	%r14, %rcx
000000010003a12a	callq	___rust_realloc
000000010003a12f	movq	%rax, %r15
000000010003a132	testq	%rax, %rax
000000010003a135	jne	0x10003a15b
000000010003a137	movl	$0x1, %edi
000000010003a13c	movq	%r14, %rsi
000000010003a13f	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010003a144	ud2
000000010003a146	movq	(%rbx), %r15
000000010003a149	jmp	0x10003a162
000000010003a14b	movl	$0x1, %r15d
000000010003a151	movl	$0x1, %edx
000000010003a156	callq	___rust_dealloc
000000010003a15b	movq	%r15, (%rbx)
000000010003a15e	movq	%r14, 0x8(%rbx)
000000010003a162	movq	%r15, %rax
000000010003a165	movq	%r14, %rdx
000000010003a168	addq	$0x8, %rsp
000000010003a16c	popq	%rbx
000000010003a16d	popq	%r14
000000010003a16f	popq	%r15
000000010003a171	popq	%rbp
000000010003a172	retq
000000010003a173	movq	%rax, %r14
000000010003a176	movq	%rbx, %rdi
000000010003a179	callq	__ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hcb4dc8f65afc19d3E ## core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$::hcb4dc8f65afc19d3
000000010003a17e	movq	%r14, %rdi
000000010003a181	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
000000010003a186	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
000000010003a18b	nopl	(%rax,%rax)
__ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hb8a03741e38fbdb5E:
000000010003a190	pushq	%rbp
000000010003a191	movq	%rsp, %rbp
000000010003a194	subq	$0x10, %rsp
000000010003a198	movq	%rsi, %rax
000000010003a19b	movq	%rdi, -0x8(%rbp)
000000010003a19f	leaq	0x18(%rdi), %rcx
000000010003a1a3	leaq	0xfd1e(%rip), %rdx
000000010003a1aa	movq	%rdx, (%rsp)
000000010003a1ae	leaq	0xc45b(%rip), %rsi
000000010003a1b5	leaq	0xfcec(%rip), %r8
000000010003a1bc	leaq	-0x8(%rbp), %r9
000000010003a1c0	movl	$0x8, %edx
000000010003a1c5	movq	%rax, %rdi
000000010003a1c8	callq	__ZN4core3fmt9Formatter25debug_tuple_field2_finish17h4bcc313ff9ca324cE ## core::fmt::Formatter::debug_tuple_field2_finish::h4bcc313ff9ca324c
000000010003a1cd	addq	$0x10, %rsp
000000010003a1d1	popq	%rbp
000000010003a1d2	retq
000000010003a1d3	nopw	%cs:(%rax,%rax)
000000010003a1dd	nopl	(%rax)
__ZN4core3ops8function6FnOnce9call_once17h82d84aa57661d2a0E:
000000010003a1e0	pushq	%rbp
000000010003a1e1	movq	%rsp, %rbp
000000010003a1e4	movq	(%rdi), %rax
000000010003a1e7	nopw	(%rax,%rax)
000000010003a1f0	jmp	0x10003a1f0
000000010003a1f2	nopw	%cs:(%rax,%rax)
000000010003a1fc	nopl	(%rax)
__ZN4core3ptr102drop_in_place$LT$$RF$core..iter..adapters..copied..Copied$LT$core..slice..iter..Iter$LT$u8$GT$$GT$$GT$17hbc2d1f1274f1e385E:
000000010003a200	pushq	%rbp
000000010003a201	movq	%rsp, %rbp
000000010003a204	popq	%rbp
000000010003a205	retq
000000010003a206	nopw	%cs:(%rax,%rax)
__ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h808421b070e928bbE:
000000010003a210	pushq	%rbp
000000010003a211	movq	%rsp, %rbp
000000010003a214	popq	%rbp
000000010003a215	retq
000000010003a216	nopw	%cs:(%rax,%rax)
__ZN4core3num14from_str_radix17h4badf1622e618239E:
000000010003a220	pushq	%rbp
000000010003a221	movq	%rsp, %rbp
000000010003a224	pushq	%r14
000000010003a226	pushq	%rbx
000000010003a227	subq	$0x50, %rsp
000000010003a22b	movl	%edx, %ecx
000000010003a22d	movl	%edx, -0x14(%rbp)
000000010003a230	leal	-0x2(%rcx), %eax
000000010003a233	cmpl	$0x22, %eax
000000010003a236	ja	0x10003a3dc
000000010003a23c	movl	$0x1, %r8d
000000010003a242	testq	%rsi, %rsi
000000010003a245	je	0x10003a264
000000010003a247	movzbl	(%rdi), %eax
000000010003a24a	cmpl	$0x2b, %eax
000000010003a24d	je	0x10003a26d
000000010003a24f	cmpl	$0x2d, %eax
000000010003a252	jne	0x10003a25a
000000010003a254	cmpq	$0x1, %rsi
000000010003a258	je	0x10003a2d9
000000010003a25a	cmpl	$0x10, %ecx
000000010003a25d	jbe	0x10003a27e
000000010003a25f	jmp	0x10003a2e5
000000010003a264	xorl	%eax, %eax
000000010003a266	xorl	%edx, %edx
000000010003a268	jmp	0x10003a3b5
000000010003a26d	decq	%rsi
000000010003a270	je	0x10003a3ae
000000010003a276	incq	%rdi
000000010003a279	cmpl	$0x10, %ecx
000000010003a27c	ja	0x10003a2e5
000000010003a27e	cmpq	$0x9, %rsi
000000010003a282	jae	0x10003a2e5
000000010003a284	cmpl	$0xa, %ecx
000000010003a287	jbe	0x10003a342
000000010003a28d	movl	$0xffffffff, %edx               ## imm = 0xFFFFFFFF
000000010003a292	xorl	%r9d, %r9d
000000010003a295	xorl	%eax, %eax
000000010003a297	jmp	0x10003a2b2
000000010003a299	nopl	(%rax)
000000010003a2a0	imull	%ecx, %eax
000000010003a2a3	addl	%r11d, %eax
000000010003a2a6	incq	%r9
000000010003a2a9	cmpq	%r9, %rsi
000000010003a2ac	je	0x10003a370
000000010003a2b2	movzbl	(%rdi,%r9), %r10d
000000010003a2b7	leal	-0x30(%r10), %r11d
000000010003a2bb	cmpl	$0xa, %r11d
000000010003a2bf	jb	0x10003a2a0
000000010003a2c1	orl	$0x20, %r10d
000000010003a2c5	addl	$-0x61, %r10d
000000010003a2c9	addl	$0xa, %r10d
000000010003a2cd	cmovbl	%edx, %r10d
000000010003a2d1	movl	%r10d, %r11d
000000010003a2d4	cmpl	%ecx, %r10d
000000010003a2d7	jb	0x10003a2a0
000000010003a2d9	movl	$0x100, %edx                    ## imm = 0x100
000000010003a2de	xorl	%eax, %eax
000000010003a2e0	jmp	0x10003a3b5
000000010003a2e5	cmpl	$0xa, %ecx
000000010003a2e8	jbe	0x10003a37b
000000010003a2ee	movl	$0xffffffff, %r9d               ## imm = 0xFFFFFFFF
000000010003a2f4	xorl	%r10d, %r10d
000000010003a2f7	xorl	%eax, %eax
000000010003a2f9	nopl	(%rax)
000000010003a300	cmpq	%r10, %rsi
000000010003a303	je	0x10003a370
000000010003a305	movzbl	(%rdi,%r10), %ebx
000000010003a30a	mull	%ecx
000000010003a30c	seto	%r11b
000000010003a310	leal	-0x30(%rbx), %r14d
000000010003a314	cmpl	$0xa, %r14d
000000010003a318	jb	0x10003a32e
000000010003a31a	orl	$0x20, %ebx
000000010003a31d	addl	$-0x61, %ebx
000000010003a320	addl	$0xa, %ebx
000000010003a323	cmovbl	%r9d, %ebx
000000010003a327	movl	%ebx, %r14d
000000010003a32a	cmpl	%ecx, %ebx
000000010003a32c	jae	0x10003a2d9
000000010003a32e	movl	$0x200, %edx                    ## imm = 0x200
000000010003a333	testb	%r11b, %r11b
000000010003a336	jne	0x10003a2de
000000010003a338	incq	%r10
000000010003a33b	addl	%r14d, %eax
000000010003a33e	jae	0x10003a300
000000010003a340	jmp	0x10003a2de
000000010003a342	xorl	%edx, %edx
000000010003a344	xorl	%eax, %eax
000000010003a346	nopw	%cs:(%rax,%rax)
000000010003a350	movzbl	(%rdi,%rdx), %r9d
000000010003a355	addl	$-0x30, %r9d
000000010003a359	cmpl	%ecx, %r9d
000000010003a35c	jae	0x10003a2d9
000000010003a362	imull	%ecx, %eax
000000010003a365	addl	%r9d, %eax
000000010003a368	incq	%rdx
000000010003a36b	cmpq	%rdx, %rsi
000000010003a36e	jne	0x10003a350
000000010003a370	shlq	$0x20, %rax
000000010003a374	xorl	%edx, %edx
000000010003a376	xorl	%r8d, %r8d
000000010003a379	jmp	0x10003a3b5
000000010003a37b	xorl	%r9d, %r9d
000000010003a37e	xorl	%eax, %eax
000000010003a380	cmpq	%r9, %rsi
000000010003a383	je	0x10003a370
000000010003a385	movzbl	(%rdi,%r9), %r10d
000000010003a38a	mull	%ecx
000000010003a38c	seto	%dl
000000010003a38f	addl	$-0x30, %r10d
000000010003a393	cmpl	%ecx, %r10d
000000010003a396	jae	0x10003a3c4
000000010003a398	testb	%dl, %dl
000000010003a39a	jne	0x10003a3c4
000000010003a39c	incq	%r9
000000010003a39f	addl	%r10d, %eax
000000010003a3a2	jae	0x10003a380
000000010003a3a4	movl	$0x200, %edx                    ## imm = 0x200
000000010003a3a9	jmp	0x10003a2de
000000010003a3ae	xorl	%eax, %eax
000000010003a3b0	movl	$0x100, %edx                    ## imm = 0x100
000000010003a3b5	orq	%r8, %rax
000000010003a3b8	orq	%rdx, %rax
000000010003a3bb	addq	$0x50, %rsp
000000010003a3bf	popq	%rbx
000000010003a3c0	popq	%r14
000000010003a3c2	popq	%rbp
000000010003a3c3	retq
000000010003a3c4	xorl	%edx, %edx
000000010003a3c6	cmpl	%ecx, %r10d
000000010003a3c9	setb	%dl
000000010003a3cc	shlq	$0x8, %rdx
000000010003a3d0	addq	$0x100, %rdx                    ## imm = 0x100
000000010003a3d7	jmp	0x10003a2de
000000010003a3dc	leaq	-0x14(%rbp), %rax
000000010003a3e0	movq	%rax, -0x28(%rbp)
000000010003a3e4	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
000000010003a3eb	movq	%rax, -0x20(%rbp)
000000010003a3ef	leaq	0xfaf2(%rip), %rax
000000010003a3f6	movq	%rax, -0x58(%rbp)
000000010003a3fa	movq	$0x1, -0x50(%rbp)
000000010003a402	movq	$0x0, -0x38(%rbp)
000000010003a40a	leaq	-0x28(%rbp), %rax
000000010003a40e	movq	%rax, -0x48(%rbp)
000000010003a412	movq	$0x1, -0x40(%rbp)
000000010003a41a	leaq	0xfad7(%rip), %rsi
000000010003a421	leaq	-0x58(%rbp), %rdi
000000010003a425	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010003a42a	nopw	(%rax,%rax)
__ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h13afdf0493bb600eE:
000000010003a430	pushq	%rbp
000000010003a431	movq	%rsp, %rbp
000000010003a434	pushq	%r14
000000010003a436	pushq	%rbx
000000010003a437	subq	$0x30, %rsp
000000010003a43b	movq	%rsi, %rbx
000000010003a43e	movq	%rdi, %r14
000000010003a441	callq	__ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17hc24811d62d4aef55E ## core::fmt::num::_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$::fmt::hc24811d62d4aef55
000000010003a446	testb	%al, %al
000000010003a448	jne	0x10003a48d
000000010003a44a	movq	0x20(%rbx), %rdi
000000010003a44e	movq	0x28(%rbx), %rsi
000000010003a452	leaq	0xfab7(%rip), %rax
000000010003a459	movq	%rax, -0x40(%rbp)
000000010003a45d	movq	$0x1, -0x38(%rbp)
000000010003a465	leaq	0xc28c(%rip), %rax
000000010003a46c	movq	%rax, -0x30(%rbp)
000000010003a470	movq	$0x0, -0x28(%rbp)
000000010003a478	movq	$0x0, -0x20(%rbp)
000000010003a480	leaq	-0x40(%rbp), %rdx
000000010003a484	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003a489	testb	%al, %al
000000010003a48b	je	0x10003a498
000000010003a48d	movb	$0x1, %al
000000010003a48f	addq	$0x30, %rsp
000000010003a493	popq	%rbx
000000010003a494	popq	%r14
000000010003a496	popq	%rbp
000000010003a497	retq
000000010003a498	addq	$0x8, %r14
000000010003a49c	movq	%r14, %rdi
000000010003a49f	movq	%rbx, %rsi
000000010003a4a2	addq	$0x30, %rsp
000000010003a4a6	popq	%rbx
000000010003a4a7	popq	%r14
000000010003a4a9	popq	%rbp
000000010003a4aa	jmp	__ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17hc24811d62d4aef55E ## core::fmt::num::_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$::fmt::hc24811d62d4aef55
000000010003a4af	nop
__ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17he9fc344b022f4776E:
000000010003a4b0	pushq	%rbp
000000010003a4b1	movq	%rsp, %rbp
000000010003a4b4	movabsq	$-0x2b5ed91ee92b041f, %rax      ## imm = 0xD4A126E116D4FBE1
000000010003a4be	movabsq	$0x2695eb7b66cc2182, %rdx       ## imm = 0x2695EB7B66CC2182
000000010003a4c8	popq	%rbp
000000010003a4c9	retq
000000010003a4ca	nopw	(%rax,%rax)
__ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5046350e83e872f4E:
000000010003a4d0	pushq	%rbp
000000010003a4d1	movq	%rsp, %rbp
000000010003a4d4	movq	0x20(%rsi), %rdi
000000010003a4d8	movq	0x28(%rsi), %rax
000000010003a4dc	movq	0x18(%rax), %rax
000000010003a4e0	leaq	0xc2e4(%rip), %rsi
000000010003a4e7	movl	$0xe, %edx
000000010003a4ec	popq	%rbp
000000010003a4ed	jmpq	*%rax
000000010003a4ef	nop
__ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h99e3bb949009c8b4E:
000000010003a4f0	pushq	%rbp
000000010003a4f1	movq	%rsp, %rbp
000000010003a4f4	pushq	%r14
000000010003a4f6	pushq	%rbx
000000010003a4f7	subq	$0x10, %rsp
000000010003a4fb	movl	%esi, %r14d
000000010003a4fe	movq	%rdi, %rbx
000000010003a501	cmpl	$0x27, %esi
000000010003a504	ja	0x10003a523
000000010003a506	movl	%r14d, %eax
000000010003a509	leaq	0x164(%rip), %rcx
000000010003a510	movslq	(%rcx,%rax,4), %rax
000000010003a514	addq	%rcx, %rax
000000010003a517	jmpq	*%rax
000000010003a519	movw	$0x305c, (%rbx)                 ## imm = 0x305C
000000010003a51e	jmp	0x10003a64c
000000010003a523	cmpl	$0x5c, %r14d
000000010003a527	jne	0x10003a56f
000000010003a529	movw	$0x5c5c, (%rbx)                 ## imm = 0x5C5C
000000010003a52e	jmp	0x10003a64c
000000010003a533	movw	$0x745c, (%rbx)                 ## imm = 0x745C
000000010003a538	jmp	0x10003a64c
000000010003a53d	movw	$0x6e5c, (%rbx)                 ## imm = 0x6E5C
000000010003a542	jmp	0x10003a64c
000000010003a547	movw	$0x725c, (%rbx)                 ## imm = 0x725C
000000010003a54c	jmp	0x10003a64c
000000010003a551	testl	$0x10000, %edx                  ## imm = 0x10000
000000010003a557	je	0x10003a56f
000000010003a559	movw	$0x225c, (%rbx)                 ## imm = 0x225C
000000010003a55e	jmp	0x10003a64c
000000010003a563	testl	$0x100, %edx                    ## imm = 0x100
000000010003a569	jne	0x10003a647
000000010003a56f	testb	$0x1, %dl
000000010003a572	je	0x10003a580
000000010003a574	movl	%r14d, %edi
000000010003a577	callq	__ZN4core7unicode12unicode_data15grapheme_extend6lookup17h82558d6328afff9fE ## core::unicode::unicode_data::grapheme_extend::lookup::h82558d6328afff9f
000000010003a57c	testb	%al, %al
000000010003a57e	jne	0x10003a598
000000010003a580	movl	%r14d, %edi
000000010003a583	callq	__ZN4core7unicode9printable12is_printable17he44a4dc6186a389eE ## core::unicode::printable::is_printable::he44a4dc6186a389e
000000010003a588	testb	%al, %al
000000010003a58a	je	0x10003a598
000000010003a58c	movb	$-0x80, (%rbx)
000000010003a58f	movl	%r14d, 0x4(%rbx)
000000010003a593	jmp	0x10003a65a
000000010003a598	movb	$0x0, -0x18(%rbp)
000000010003a59c	movw	$0x0, -0x1a(%rbp)
000000010003a5a2	movb	$0x7d, -0x11(%rbp)
000000010003a5a6	movl	%r14d, %ecx
000000010003a5a9	shrl	$0x14, %ecx
000000010003a5ac	andl	$0xf, %ecx
000000010003a5af	leaq	0xc12a(%rip), %rax
000000010003a5b6	movzbl	(%rcx,%rax), %ecx
000000010003a5ba	movb	%cl, -0x17(%rbp)
000000010003a5bd	movl	%r14d, %ecx
000000010003a5c0	shrl	$0x10, %ecx
000000010003a5c3	andl	$0xf, %ecx
000000010003a5c6	movzbl	(%rcx,%rax), %ecx
000000010003a5ca	movb	%cl, -0x16(%rbp)
000000010003a5cd	movl	%r14d, %ecx
000000010003a5d0	shrl	$0xc, %ecx
000000010003a5d3	andl	$0xf, %ecx
000000010003a5d6	movzbl	(%rcx,%rax), %ecx
000000010003a5da	movb	%cl, -0x15(%rbp)
000000010003a5dd	movl	%r14d, %ecx
000000010003a5e0	shrl	$0x8, %ecx
000000010003a5e3	andl	$0xf, %ecx
000000010003a5e6	movzbl	(%rcx,%rax), %ecx
000000010003a5ea	movb	%cl, -0x14(%rbp)
000000010003a5ed	movl	%r14d, %ecx
000000010003a5f0	shrl	$0x4, %ecx
000000010003a5f3	andl	$0xf, %ecx
000000010003a5f6	movzbl	(%rcx,%rax), %ecx
000000010003a5fa	movb	%cl, -0x13(%rbp)
000000010003a5fd	movl	%r14d, %ecx
000000010003a600	andl	$0xf, %ecx
000000010003a603	movzbl	(%rcx,%rax), %eax
000000010003a607	movb	%al, -0x12(%rbp)
000000010003a60a	orl	$0x1, %r14d
000000010003a60e	bsrl	%r14d, %edi
000000010003a612	xorl	$0x1c, %edi
000000010003a615	shrl	$0x2, %edi
000000010003a618	addq	$-0x2, %rdi
000000010003a61c	cmpq	$0xb, %rdi
000000010003a620	jae	0x10003a663
000000010003a622	movb	$0x7b, -0x18(%rbp,%rdi)
000000010003a627	movw	$0x755c, -0x1a(%rbp,%rdi)       ## imm = 0x755C
000000010003a62e	movzwl	-0x12(%rbp), %eax
000000010003a632	movw	%ax, 0x8(%rbx)
000000010003a636	movq	-0x1a(%rbp), %rax
000000010003a63a	movq	%rax, (%rbx)
000000010003a63d	movb	%dil, 0xa(%rbx)
000000010003a641	movb	$0xa, 0xb(%rbx)
000000010003a645	jmp	0x10003a65a
000000010003a647	movw	$0x275c, (%rbx)                 ## imm = 0x275C
000000010003a64c	movq	$0x0, 0x2(%rbx)
000000010003a654	movw	$0x200, 0xa(%rbx)               ## imm = 0x200
000000010003a65a	addq	$0x10, %rsp
000000010003a65e	popq	%rbx
000000010003a65f	popq	%r14
000000010003a661	popq	%rbp
000000010003a662	retq
000000010003a663	leaq	0xfd26(%rip), %rdx
000000010003a66a	movl	$0xa, %esi
000000010003a66f	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003a674	movsl	(%rsi), %es:(%rdi)
000000010003a675	.byte 0xfe #bad opcode
000000010003a676	.byte 0xff #bad opcode
000000010003a677	.byte 0xff #bad opcode
000000010003a678	sti
000000010003a679	.byte 0xfe #bad opcode
000000010003a67a	.byte 0xff #bad opcode
000000010003a67b	.byte 0xff #bad opcode
000000010003a67c	sti
000000010003a67d	.byte 0xfe #bad opcode
000000010003a67e	.byte 0xff #bad opcode
000000010003a67f	.byte 0xff #bad opcode
000000010003a680	sti
000000010003a681	.byte 0xfe #bad opcode
000000010003a682	.byte 0xff #bad opcode
000000010003a683	.byte 0xff #bad opcode
000000010003a684	sti
000000010003a685	.byte 0xfe #bad opcode
000000010003a686	.byte 0xff #bad opcode
000000010003a687	.byte 0xff #bad opcode
000000010003a688	sti
000000010003a689	.byte 0xfe #bad opcode
000000010003a68a	.byte 0xff #bad opcode
000000010003a68b	.byte 0xff #bad opcode
000000010003a68c	sti
000000010003a68d	.byte 0xfe #bad opcode
000000010003a68e	.byte 0xff #bad opcode
000000010003a68f	.byte 0xff #bad opcode
000000010003a690	sti
000000010003a691	.byte 0xfe #bad opcode
000000010003a692	.byte 0xff #bad opcode
000000010003a693	.byte 0xff #bad opcode
000000010003a694	sti
000000010003a695	.byte 0xfe #bad opcode
000000010003a696	.byte 0xff #bad opcode
000000010003a697	.byte 0xff #bad opcode
000000010003a698	movl	$0xc9fffffe, %edi               ## imm = 0xC9FFFFFE
000000010003a69d	.byte 0xfe #bad opcode
000000010003a69e	.byte 0xff #bad opcode
000000010003a69f	.byte 0xff #bad opcode
000000010003a6a0	sti
000000010003a6a1	.byte 0xfe #bad opcode
000000010003a6a2	.byte 0xff #bad opcode
000000010003a6a3	.byte 0xff #bad opcode
000000010003a6a4	sti
000000010003a6a5	.byte 0xfe #bad opcode
000000010003a6a6	.byte 0xff #bad opcode
000000010003a6a7	callq	*%rbx
000000010003a6a9	.byte 0xfe #bad opcode
000000010003a6aa	.byte 0xff #bad opcode
000000010003a6ab	.byte 0xff #bad opcode
000000010003a6ac	sti
000000010003a6ad	.byte 0xfe #bad opcode
000000010003a6ae	.byte 0xff #bad opcode
000000010003a6af	.byte 0xff #bad opcode
000000010003a6b0	sti
000000010003a6b1	.byte 0xfe #bad opcode
000000010003a6b2	.byte 0xff #bad opcode
000000010003a6b3	.byte 0xff #bad opcode
000000010003a6b4	sti
000000010003a6b5	.byte 0xfe #bad opcode
000000010003a6b6	.byte 0xff #bad opcode
000000010003a6b7	.byte 0xff #bad opcode
000000010003a6b8	sti
000000010003a6b9	.byte 0xfe #bad opcode
000000010003a6ba	.byte 0xff #bad opcode
000000010003a6bb	.byte 0xff #bad opcode
000000010003a6bc	sti
000000010003a6bd	.byte 0xfe #bad opcode
000000010003a6be	.byte 0xff #bad opcode
000000010003a6bf	.byte 0xff #bad opcode
000000010003a6c0	sti
000000010003a6c1	.byte 0xfe #bad opcode
000000010003a6c2	.byte 0xff #bad opcode
000000010003a6c3	.byte 0xff #bad opcode
000000010003a6c4	sti
000000010003a6c5	.byte 0xfe #bad opcode
000000010003a6c6	.byte 0xff #bad opcode
000000010003a6c7	.byte 0xff #bad opcode
000000010003a6c8	sti
000000010003a6c9	.byte 0xfe #bad opcode
000000010003a6ca	.byte 0xff #bad opcode
000000010003a6cb	.byte 0xff #bad opcode
000000010003a6cc	sti
000000010003a6cd	.byte 0xfe #bad opcode
000000010003a6ce	.byte 0xff #bad opcode
000000010003a6cf	.byte 0xff #bad opcode
000000010003a6d0	sti
000000010003a6d1	.byte 0xfe #bad opcode
000000010003a6d2	.byte 0xff #bad opcode
000000010003a6d3	.byte 0xff #bad opcode
000000010003a6d4	sti
000000010003a6d5	.byte 0xfe #bad opcode
000000010003a6d6	.byte 0xff #bad opcode
000000010003a6d7	.byte 0xff #bad opcode
000000010003a6d8	sti
000000010003a6d9	.byte 0xfe #bad opcode
000000010003a6da	.byte 0xff #bad opcode
000000010003a6db	.byte 0xff #bad opcode
000000010003a6dc	sti
000000010003a6dd	.byte 0xfe #bad opcode
000000010003a6de	.byte 0xff #bad opcode
000000010003a6df	.byte 0xff #bad opcode
000000010003a6e0	sti
000000010003a6e1	.byte 0xfe #bad opcode
000000010003a6e2	.byte 0xff #bad opcode
000000010003a6e3	.byte 0xff #bad opcode
000000010003a6e4	sti
000000010003a6e5	.byte 0xfe #bad opcode
000000010003a6e6	.byte 0xff #bad opcode
000000010003a6e7	.byte 0xff #bad opcode
000000010003a6e8	sti
000000010003a6e9	.byte 0xfe #bad opcode
000000010003a6ea	.byte 0xff #bad opcode
000000010003a6eb	.byte 0xff #bad opcode
000000010003a6ec	sti
000000010003a6ed	.byte 0xfe #bad opcode
000000010003a6ee	.byte 0xff #bad opcode
000000010003a6ef	.byte 0xff #bad opcode
000000010003a6f0	sti
000000010003a6f1	.byte 0xfe #bad opcode
000000010003a6f2	.byte 0xff #bad opcode
000000010003a6f3	.byte 0xff #bad opcode
000000010003a6f4	sti
000000010003a6f5	.byte 0xfe #bad opcode
000000010003a6f6	.byte 0xff #bad opcode
000000010003a6f7	.byte 0xff #bad opcode
000000010003a6f8	sti
000000010003a6f9	.byte 0xfe #bad opcode
000000010003a6fa	.byte 0xff #bad opcode
000000010003a6fb	.byte 0xff #bad opcode
000000010003a6fc	.byte 0xdd #bad opcode
000000010003a6fd	.byte 0xfe #bad opcode
000000010003a6fe	.byte 0xff #bad opcode
000000010003a6ff	.byte 0xff #bad opcode
000000010003a700	sti
000000010003a701	.byte 0xfe #bad opcode
000000010003a702	.byte 0xff #bad opcode
000000010003a703	.byte 0xff #bad opcode
000000010003a704	sti
000000010003a705	.byte 0xfe #bad opcode
000000010003a706	.byte 0xff #bad opcode
000000010003a707	.byte 0xff #bad opcode
000000010003a708	sti
000000010003a709	.byte 0xfe #bad opcode
000000010003a70a	.byte 0xff #bad opcode
000000010003a70b	.byte 0xff #bad opcode
000000010003a70c	sti
000000010003a70d	.byte 0xfe #bad opcode
000000010003a70e	.byte 0xff #bad opcode
000000010003a70f	.byte 0xff #bad opcode
000000010003a710	outl	%eax, %dx
000000010003a711	.byte 0xfe #bad opcode
000000010003a712	.byte 0xff #bad opcode
000000010003a713	jmpq	*0x2e(%rsi)
000000010003a716	nopl	(%rax,%rax)
000000010003a71e	nop
__ZN4core4char13EscapeUnicode3new17hc16d2c55ce4ce54fE:
000000010003a720	pushq	%rbp
000000010003a721	movq	%rsp, %rbp
000000010003a724	subq	$0x10, %rsp
000000010003a728	movb	$0x0, -0x8(%rbp)
000000010003a72c	movw	$0x0, -0xa(%rbp)
000000010003a732	movb	$0x7d, -0x1(%rbp)
000000010003a736	movl	%esi, %ecx
000000010003a738	shrl	$0x14, %ecx
000000010003a73b	andl	$0xf, %ecx
000000010003a73e	leaq	0xbf9b(%rip), %rax
000000010003a745	movzbl	(%rcx,%rax), %ecx
000000010003a749	movb	%cl, -0x7(%rbp)
000000010003a74c	movl	%esi, %ecx
000000010003a74e	shrl	$0x10, %ecx
000000010003a751	andl	$0xf, %ecx
000000010003a754	movzbl	(%rcx,%rax), %ecx
000000010003a758	movb	%cl, -0x6(%rbp)
000000010003a75b	movl	%esi, %ecx
000000010003a75d	shrl	$0xc, %ecx
000000010003a760	andl	$0xf, %ecx
000000010003a763	movzbl	(%rcx,%rax), %ecx
000000010003a767	movb	%cl, -0x5(%rbp)
000000010003a76a	movl	%esi, %ecx
000000010003a76c	shrl	$0x8, %ecx
000000010003a76f	andl	$0xf, %ecx
000000010003a772	movzbl	(%rcx,%rax), %ecx
000000010003a776	movb	%cl, -0x4(%rbp)
000000010003a779	movl	%esi, %ecx
000000010003a77b	shrl	$0x4, %ecx
000000010003a77e	andl	$0xf, %ecx
000000010003a781	movzbl	(%rcx,%rax), %ecx
000000010003a785	movb	%cl, -0x3(%rbp)
000000010003a788	movl	%esi, %ecx
000000010003a78a	andl	$0xf, %ecx
000000010003a78d	movzbl	(%rcx,%rax), %eax
000000010003a791	movb	%al, -0x2(%rbp)
000000010003a794	orl	$0x1, %esi
000000010003a797	bsrl	%esi, %eax
000000010003a79a	xorl	$0x1c, %eax
000000010003a79d	shrl	$0x2, %eax
000000010003a7a0	addq	$-0x2, %rax
000000010003a7a4	cmpq	$0xb, %rax
000000010003a7a8	jae	0x10003a7d5
000000010003a7aa	movb	$0x7b, -0x8(%rbp,%rax)
000000010003a7af	movw	$0x755c, -0xa(%rbp,%rax)        ## imm = 0x755C
000000010003a7b6	movzwl	-0x2(%rbp), %ecx
000000010003a7ba	movw	%cx, 0x8(%rdi)
000000010003a7be	movq	-0xa(%rbp), %rcx
000000010003a7c2	movq	%rcx, (%rdi)
000000010003a7c5	movb	%al, 0xa(%rdi)
000000010003a7c8	movb	$0xa, 0xb(%rdi)
000000010003a7cc	movq	%rdi, %rax
000000010003a7cf	addq	$0x10, %rsp
000000010003a7d3	popq	%rbp
000000010003a7d4	retq
000000010003a7d5	leaq	0xfbb4(%rip), %rdx
000000010003a7dc	movl	$0xa, %esi
000000010003a7e1	movq	%rax, %rdi
000000010003a7e4	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003a7e9	nopl	(%rax)
__ZN4core4char11EscapeDebug9printable17h811f210e3132f2d1E:
000000010003a7f0	pushq	%rbp
000000010003a7f1	movq	%rsp, %rbp
000000010003a7f4	movq	%rdi, %rax
000000010003a7f7	movb	$-0x80, (%rdi)
000000010003a7fa	movl	%esi, 0x4(%rdi)
000000010003a7fd	popq	%rbp
000000010003a7fe	retq
000000010003a7ff	nop
__ZN4core4char11EscapeDebug9backslash17h14790b6fe37a3e27E:
000000010003a800	pushq	%rbp
000000010003a801	movq	%rsp, %rbp
000000010003a804	movq	%rdi, %rax
000000010003a807	shll	$0x8, %esi
000000010003a80a	orl	$0x5c, %esi
000000010003a80d	movw	%si, (%rdi)
000000010003a810	movq	$0x0, 0x2(%rdi)
000000010003a818	movw	$0x200, 0xa(%rdi)               ## imm = 0x200
000000010003a81e	popq	%rbp
000000010003a81f	retq
__ZN4core4char11EscapeDebug12from_unicode17h76517ab022da5513E:
000000010003a820	pushq	%rbp
000000010003a821	movq	%rsp, %rbp
000000010003a824	movq	%rdi, %rax
000000010003a827	movl	0x8(%rsi), %ecx
000000010003a82a	movl	%ecx, 0x8(%rdi)
000000010003a82d	movq	(%rsi), %rcx
000000010003a830	movq	%rcx, (%rdi)
000000010003a833	popq	%rbp
000000010003a834	retq
000000010003a835	nopw	%cs:(%rax,%rax)
000000010003a83f	nop
__ZN4core4char11EscapeDebug5clear17hcf380bd05808c8daE:
000000010003a840	pushq	%rbp
000000010003a841	movq	%rsp, %rbp
000000010003a844	movl	$0x0, 0x8(%rdi)
000000010003a84b	movq	$0x0, (%rdi)
000000010003a852	popq	%rbp
000000010003a853	retq
000000010003a854	nopw	%cs:(%rax,%rax)
000000010003a85e	nop
__ZN4core3ffi5c_str4CStr8from_ptr9strlen_rt17h8fdb3db5c71cd065E:
000000010003a860	pushq	%rbp
000000010003a861	movq	%rsp, %rbp
000000010003a864	popq	%rbp
000000010003a865	jmp	0x100042874                     ## symbol stub for: _strlen
000000010003a86a	nopw	(%rax,%rax)
__ZN4core3ffi5c_str4CStr19from_bytes_with_nul17hb2e722b352771ae9E:
000000010003a870	pushq	%rbp
000000010003a871	movq	%rsp, %rbp
000000010003a874	movq	%rdi, %rax
000000010003a877	cmpq	$0x10, %rdx
000000010003a87b	jae	0x10003a8a7
000000010003a87d	testq	%rdx, %rdx
000000010003a880	je	0x10003a94e
000000010003a886	xorl	%edi, %edi
000000010003a888	nopl	(%rax,%rax)
000000010003a890	cmpb	$0x0, (%rsi,%rdi)
000000010003a894	je	0x10003a95b
000000010003a89a	incq	%rdi
000000010003a89d	cmpq	%rdi, %rdx
000000010003a8a0	jne	0x10003a890
000000010003a8a2	jmp	0x10003a94e
000000010003a8a7	leaq	0x7(%rsi), %rcx
000000010003a8ab	andq	$-0x8, %rcx
000000010003a8af	subq	%rsi, %rcx
000000010003a8b2	je	0x10003a8dd
000000010003a8b4	je	0x10003a8dd
000000010003a8b6	xorl	%edi, %edi
000000010003a8b8	nopl	(%rax,%rax)
000000010003a8c0	cmpb	$0x0, (%rsi,%rdi)
000000010003a8c4	je	0x10003a95b
000000010003a8ca	incq	%rdi
000000010003a8cd	cmpq	%rdi, %rcx
000000010003a8d0	jne	0x10003a8c0
000000010003a8d2	leaq	-0x10(%rdx), %rdi
000000010003a8d6	cmpq	%rdi, %rcx
000000010003a8d9	jbe	0x10003a8e3
000000010003a8db	jmp	0x10003a934
000000010003a8dd	leaq	-0x10(%rdx), %rdi
000000010003a8e1	xorl	%ecx, %ecx
000000010003a8e3	movabsq	$-0x101010101010101, %r8        ## imm = 0xFEFEFEFEFEFEFEFF
000000010003a8ed	movabsq	$-0x7f7f7f7f7f7f7f80, %r9       ## imm = 0x8080808080808080
000000010003a8f7	nopw	(%rax,%rax)
000000010003a900	movq	(%rsi,%rcx), %r10
000000010003a904	movq	%r10, %r11
000000010003a907	notq	%r11
000000010003a90a	addq	%r8, %r10
000000010003a90d	andq	%r9, %r11
000000010003a910	testq	%r10, %r11
000000010003a913	jne	0x10003a934
000000010003a915	movq	0x8(%rsi,%rcx), %r10
000000010003a91a	movq	%r10, %r11
000000010003a91d	notq	%r11
000000010003a920	addq	%r8, %r10
000000010003a923	andq	%r9, %r11
000000010003a926	testq	%r10, %r11
000000010003a929	jne	0x10003a934
000000010003a92b	addq	$0x10, %rcx
000000010003a92f	cmpq	%rdi, %rcx
000000010003a932	jbe	0x10003a900
000000010003a934	cmpq	%rdx, %rcx
000000010003a937	je	0x10003a94e
000000010003a939	nopl	(%rax)
000000010003a940	cmpb	$0x0, (%rsi,%rcx)
000000010003a944	je	0x10003a958
000000010003a946	incq	%rcx
000000010003a949	cmpq	%rcx, %rdx
000000010003a94c	jne	0x10003a940
000000010003a94e	movq	$0x1, 0x8(%rax)
000000010003a956	jmp	0x10003a97f
000000010003a958	movq	%rcx, %rdi
000000010003a95b	leaq	0x1(%rdi), %rcx
000000010003a95f	cmpq	%rdx, %rcx
000000010003a962	jne	0x10003a973
000000010003a964	movq	%rsi, 0x8(%rax)
000000010003a968	movq	%rdx, 0x10(%rax)
000000010003a96c	xorl	%ecx, %ecx
000000010003a96e	movq	%rcx, (%rax)
000000010003a971	popq	%rbp
000000010003a972	retq
000000010003a973	movq	$0x0, 0x8(%rax)
000000010003a97b	movq	%rdi, 0x10(%rax)
000000010003a97f	movl	$0x1, %ecx
000000010003a984	movq	%rcx, (%rax)
000000010003a987	popq	%rbp
000000010003a988	retq
000000010003a989	nopl	(%rax)
__ZN70_$LT$core..panic..location..Location$u20$as$u20$core..fmt..Display$GT$3fmt17h591d3a0c76b306bfE:
000000010003a990	pushq	%rbp
000000010003a991	movq	%rsp, %rbp
000000010003a994	subq	$0x60, %rsp
000000010003a998	leaq	0x10(%rdi), %rax
000000010003a99c	movq	%rdi, -0x30(%rbp)
000000010003a9a0	addq	$0x14, %rdi
000000010003a9a4	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rcx ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010003a9ab	movq	%rcx, -0x28(%rbp)
000000010003a9af	movq	%rax, -0x20(%rbp)
000000010003a9b3	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
000000010003a9ba	movq	%rax, -0x18(%rbp)
000000010003a9be	movq	%rdi, -0x10(%rbp)
000000010003a9c2	movq	%rax, -0x8(%rbp)
000000010003a9c6	movq	0x20(%rsi), %rdi
000000010003a9ca	movq	0x28(%rsi), %rsi
000000010003a9ce	leaq	0xf55b(%rip), %rax
000000010003a9d5	movq	%rax, -0x60(%rbp)
000000010003a9d9	movq	$0x3, -0x58(%rbp)
000000010003a9e1	leaq	-0x30(%rbp), %rax
000000010003a9e5	movq	%rax, -0x50(%rbp)
000000010003a9e9	movq	$0x3, -0x48(%rbp)
000000010003a9f1	movq	$0x0, -0x40(%rbp)
000000010003a9f9	leaq	-0x60(%rbp), %rdx
000000010003a9fd	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003aa02	addq	$0x60, %rsp
000000010003aa06	popq	%rbp
000000010003aa07	retq
000000010003aa08	nopl	(%rax,%rax)
__ZN4core5panic10panic_info9PanicInfo7payload17h2614b56217624438E:
000000010003aa10	pushq	%rbp
000000010003aa11	movq	%rsp, %rbp
000000010003aa14	movq	(%rdi), %rax
000000010003aa17	movq	0x8(%rdi), %rdx
000000010003aa1b	popq	%rbp
000000010003aa1c	retq
000000010003aa1d	nopl	(%rax)
__ZN4core5panic10panic_info9PanicInfo7message17hdb60b92dfa50382eE:
000000010003aa20	pushq	%rbp
000000010003aa21	movq	%rsp, %rbp
000000010003aa24	movq	0x18(%rdi), %rax
000000010003aa28	popq	%rbp
000000010003aa29	retq
000000010003aa2a	nopw	(%rax,%rax)
__ZN4core5panic10panic_info9PanicInfo8location17hf1d748ac41880118E:
000000010003aa30	pushq	%rbp
000000010003aa31	movq	%rsp, %rbp
000000010003aa34	movq	0x10(%rdi), %rax
000000010003aa38	popq	%rbp
000000010003aa39	retq
000000010003aa3a	nopw	(%rax,%rax)
__ZN4core5panic10panic_info9PanicInfo10can_unwind17hf21b386442f2c70aE:
000000010003aa40	pushq	%rbp
000000010003aa41	movq	%rsp, %rbp
000000010003aa44	movzbl	0x20(%rdi), %eax
000000010003aa48	popq	%rbp
000000010003aa49	retq
000000010003aa4a	nopw	(%rax,%rax)
__ZN73_$LT$core..panic..panic_info..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17h60441752cb68794aE:
000000010003aa50	pushq	%rbp
000000010003aa51	movq	%rsp, %rbp
000000010003aa54	pushq	%r15
000000010003aa56	pushq	%r14
000000010003aa58	pushq	%r13
000000010003aa5a	pushq	%r12
000000010003aa5c	pushq	%rbx
000000010003aa5d	subq	$0x68, %rsp
000000010003aa61	movq	%rdi, %r15
000000010003aa64	movq	0x20(%rsi), %rbx
000000010003aa68	movq	0x28(%rsi), %r14
000000010003aa6c	leaq	0xbd7d(%rip), %rsi
000000010003aa73	movl	$0xc, %edx
000000010003aa78	movq	%rbx, %rdi
000000010003aa7b	callq	*0x18(%r14)
000000010003aa7f	movb	$0x1, %r12b
000000010003aa82	testb	%al, %al
000000010003aa84	jne	0x10003abad
000000010003aa8a	movq	0x18(%r15), %rax
000000010003aa8e	testq	%rax, %rax
000000010003aa91	je	0x10003aaab
000000010003aa93	movq	%rax, -0x30(%rbp)
000000010003aa97	leaq	-0x30(%rbp), %rax
000000010003aa9b	movq	%rax, -0x90(%rbp)
000000010003aaa2	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hbd7cba8781808278E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::hbd7cba8781808278
000000010003aaa9	jmp	0x10003aaed
000000010003aaab	movq	(%r15), %r13
000000010003aaae	movq	0x8(%r15), %rax
000000010003aab2	movq	%r13, %rdi
000000010003aab5	callq	*0x18(%rax)
000000010003aab8	movabsq	$-0x243e97eff4e109c, %rcx       ## imm = 0xFDBC168100B1EF64
000000010003aac2	xorq	%rdx, %rcx
000000010003aac5	movabsq	$-0x3e5d376332e1843f, %rdx      ## imm = 0xC1A2C89CCD1E7BC1
000000010003aacf	xorq	%rax, %rdx
000000010003aad2	orq	%rcx, %rdx
000000010003aad5	jne	0x10003ab35
000000010003aad7	movq	%r13, -0x30(%rbp)
000000010003aadb	leaq	-0x30(%rbp), %rax
000000010003aadf	movq	%rax, -0x90(%rbp)
000000010003aae6	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0a17fd63c56a4decE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::h0a17fd63c56a4dec
000000010003aaed	movq	%rax, -0x88(%rbp)
000000010003aaf4	leaq	0xf465(%rip), %rax
000000010003aafb	movq	%rax, -0x60(%rbp)
000000010003aaff	movq	$0x2, -0x58(%rbp)
000000010003ab07	leaq	-0x90(%rbp), %rax
000000010003ab0e	movq	%rax, -0x50(%rbp)
000000010003ab12	movq	$0x1, -0x48(%rbp)
000000010003ab1a	movq	$0x0, -0x40(%rbp)
000000010003ab22	leaq	-0x60(%rbp), %rdx
000000010003ab26	movq	%rbx, %rdi
000000010003ab29	movq	%r14, %rsi
000000010003ab2c	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003ab31	testb	%al, %al
000000010003ab33	jne	0x10003abad
000000010003ab35	movq	0x10(%r15), %rax
000000010003ab39	leaq	0x10(%rax), %rcx
000000010003ab3d	movq	%rax, -0x90(%rbp)
000000010003ab44	addq	$0x14, %rax
000000010003ab48	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rdx ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010003ab4f	movq	%rdx, -0x88(%rbp)
000000010003ab56	movq	%rcx, -0x80(%rbp)
000000010003ab5a	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E(%rip), %rcx ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$::fmt::hb5f3b7f7cca68a64
000000010003ab61	movq	%rcx, -0x78(%rbp)
000000010003ab65	movq	%rax, -0x70(%rbp)
000000010003ab69	movq	%rcx, -0x68(%rbp)
000000010003ab6d	leaq	0xf3bc(%rip), %rax
000000010003ab74	movq	%rax, -0x60(%rbp)
000000010003ab78	movq	$0x3, -0x58(%rbp)
000000010003ab80	leaq	-0x90(%rbp), %rax
000000010003ab87	movq	%rax, -0x50(%rbp)
000000010003ab8b	movq	$0x3, -0x48(%rbp)
000000010003ab93	movq	$0x0, -0x40(%rbp)
000000010003ab9b	leaq	-0x60(%rbp), %rdx
000000010003ab9f	movq	%rbx, %rdi
000000010003aba2	movq	%r14, %rsi
000000010003aba5	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003abaa	movl	%eax, %r12d
000000010003abad	movl	%r12d, %eax
000000010003abb0	addq	$0x68, %rsp
000000010003abb4	popq	%rbx
000000010003abb5	popq	%r12
000000010003abb7	popq	%r13
000000010003abb9	popq	%r14
000000010003abbb	popq	%r15
000000010003abbd	popq	%rbp
000000010003abbe	retq
000000010003abbf	nop
__ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h50f0784cd500b536E:
000000010003abc0	pushq	%rbp
000000010003abc1	movq	%rsp, %rbp
000000010003abc4	pushq	%r15
000000010003abc6	pushq	%r14
000000010003abc8	pushq	%r13
000000010003abca	pushq	%r12
000000010003abcc	pushq	%rbx
000000010003abcd	subq	$0x38, %rsp
000000010003abd1	movq	%rdx, %rbx
000000010003abd4	movabsq	$-0x101010101010101, %r10       ## imm = 0xFEFEFEFEFEFEFEFF
000000010003abde	movabsq	$-0x7f7f7f7f7f7f7f80, %r11      ## imm = 0x8080808080808080
000000010003abe8	movabsq	$0xa0a0a0a0a0a0a0a, %r15        ## imm = 0xA0A0A0A0A0A0A0A
000000010003abf2	movq	0x10(%rdi), %rax
000000010003abf6	movq	%rax, -0x50(%rbp)
000000010003abfa	movq	(%rdi), %rax
000000010003abfd	movq	%rax, -0x48(%rbp)
000000010003ac01	movq	0x8(%rdi), %rax
000000010003ac05	movq	%rax, -0x40(%rbp)
000000010003ac09	movq	%rsi, -0x30(%rbp)
000000010003ac0d	leaq	0x8(%rsi), %rax
000000010003ac11	movq	%rax, -0x58(%rbp)
000000010003ac15	xorl	%r14d, %r14d
000000010003ac18	xorl	%edi, %edi
000000010003ac1a	xorl	%eax, %eax
000000010003ac1c	jmp	0x10003ac61
000000010003ac1e	nop
000000010003ac20	cmpb	$0xa, -0x1(%rdx,%rsi)
000000010003ac25	sete	%al
000000010003ac28	movq	%r12, %rbx
000000010003ac2b	movq	-0x50(%rbp), %rcx
000000010003ac2f	movb	%al, (%rcx)
000000010003ac31	movq	-0x48(%rbp), %rdi
000000010003ac35	movq	-0x40(%rbp), %rax
000000010003ac39	callq	*0x18(%rax)
000000010003ac3c	movq	%r13, %rdi
000000010003ac3f	testb	%al, %al
000000010003ac41	movq	%r15, %r10
000000010003ac44	movabsq	$-0x7f7f7f7f7f7f7f80, %r11      ## imm = 0x8080808080808080
000000010003ac4e	movabsq	$0xa0a0a0a0a0a0a0a, %r15        ## imm = 0xA0A0A0A0A0A0A0A
000000010003ac58	movl	-0x34(%rbp), %eax
000000010003ac5b	jne	0x10003ae32
000000010003ac61	testb	%al, %al
000000010003ac63	jne	0x10003ae2e
000000010003ac69	cmpq	%rbx, %r14
000000010003ac6c	jbe	0x10003ac8c
000000010003ac6e	movq	%r14, %r13
000000010003ac71	jmp	0x10003adc3
000000010003ac76	nopw	%cs:(%rax,%rax)
000000010003ac80	movq	%r13, %r14
000000010003ac83	cmpq	%rbx, %r13
000000010003ac86	ja	0x10003adc3
000000010003ac8c	movq	%rbx, %rax
000000010003ac8f	subq	%r14, %rax
000000010003ac92	movq	-0x30(%rbp), %rcx
000000010003ac96	addq	%r14, %rcx
000000010003ac99	cmpq	$0x10, %rax
000000010003ac9d	jae	0x10003acd0
000000010003ac9f	cmpq	%rbx, %r14
000000010003aca2	je	0x10003adc0
000000010003aca8	xorl	%esi, %esi
000000010003acaa	nopw	(%rax,%rax)
000000010003acb0	cmpb	$0xa, (%rcx,%rsi)
000000010003acb4	je	0x10003ad83
000000010003acba	incq	%rsi
000000010003acbd	cmpq	%rsi, %rax
000000010003acc0	jne	0x10003acb0
000000010003acc2	jmp	0x10003adc0
000000010003acc7	nopw	(%rax,%rax)
000000010003acd0	leaq	0x7(%rcx), %rdx
000000010003acd4	andq	$-0x8, %rdx
000000010003acd8	subq	%rcx, %rdx
000000010003acdb	je	0x10003ad10
000000010003acdd	je	0x10003ad10
000000010003acdf	xorl	%esi, %esi
000000010003ace1	nopw	%cs:(%rax,%rax)
000000010003aceb	nopl	(%rax,%rax)
000000010003acf0	cmpb	$0xa, (%rcx,%rsi)
000000010003acf4	je	0x10003ad83
000000010003acfa	incq	%rsi
000000010003acfd	cmpq	%rsi, %rdx
000000010003ad00	jne	0x10003acf0
000000010003ad02	movq	%rdi, %r12
000000010003ad05	leaq	-0x10(%rax), %rsi
000000010003ad09	cmpq	%rsi, %rdx
000000010003ad0c	jbe	0x10003ad19
000000010003ad0e	jmp	0x10003ad5a
000000010003ad10	movq	%rdi, %r12
000000010003ad13	leaq	-0x10(%rax), %rsi
000000010003ad17	xorl	%edx, %edx
000000010003ad19	movq	-0x58(%rbp), %rdi
000000010003ad1d	addq	%r14, %rdi
000000010003ad20	movq	-0x8(%rdi,%rdx), %r8
000000010003ad25	movq	%r8, %r9
000000010003ad28	notq	%r9
000000010003ad2b	xorq	%r15, %r8
000000010003ad2e	addq	%r10, %r8
000000010003ad31	andq	%r11, %r9
000000010003ad34	testq	%r8, %r9
000000010003ad37	jne	0x10003ad5a
000000010003ad39	movq	(%rdi,%rdx), %r8
000000010003ad3d	movq	%r8, %r9
000000010003ad40	notq	%r9
000000010003ad43	xorq	%r15, %r8
000000010003ad46	addq	%r10, %r8
000000010003ad49	andq	%r11, %r9
000000010003ad4c	testq	%r8, %r9
000000010003ad4f	jne	0x10003ad5a
000000010003ad51	addq	$0x10, %rdx
000000010003ad55	cmpq	%rsi, %rdx
000000010003ad58	jbe	0x10003ad20
000000010003ad5a	cmpq	%rdx, %rax
000000010003ad5d	je	0x10003ae26
000000010003ad63	movq	%r12, %rdi
000000010003ad66	nopw	%cs:(%rax,%rax)
000000010003ad70	cmpb	$0xa, (%rcx,%rdx)
000000010003ad74	je	0x10003ad80
000000010003ad76	incq	%rdx
000000010003ad79	cmpq	%rdx, %rax
000000010003ad7c	jne	0x10003ad70
000000010003ad7e	jmp	0x10003adc0
000000010003ad80	movq	%rdx, %rsi
000000010003ad83	leaq	0x1(%r14,%rsi), %r13
000000010003ad88	addq	%rsi, %r14
000000010003ad8b	cmpq	%rbx, %r14
000000010003ad8e	jae	0x10003ac80
000000010003ad94	movq	-0x30(%rbp), %rax
000000010003ad98	cmpb	$0xa, (%rax,%r14)
000000010003ad9d	jne	0x10003ac80
000000010003ada3	movq	%r10, %r15
000000010003ada6	movq	%rbx, %r12
000000010003ada9	xorl	%ecx, %ecx
000000010003adab	movq	%r13, %r14
000000010003adae	movq	%r13, %rbx
000000010003adb1	jmp	0x10003add9
000000010003adb3	nopw	%cs:(%rax,%rax)
000000010003adbd	nopl	(%rax)
000000010003adc0	movq	%rbx, %r13
000000010003adc3	movq	%r10, %r15
000000010003adc6	movb	$0x1, %cl
000000010003adc8	movq	%r13, %r14
000000010003adcb	movq	%rdi, %r13
000000010003adce	movq	%rbx, %rax
000000010003add1	movq	%rbx, %r12
000000010003add4	cmpq	%rbx, %rdi
000000010003add7	je	0x10003ae2e
000000010003add9	movl	%ecx, -0x34(%rbp)
000000010003addc	movq	-0x50(%rbp), %rax
000000010003ade0	cmpb	$0x0, (%rax)
000000010003ade3	je	0x10003ae08
000000010003ade5	movl	$0x4, %edx
000000010003adea	movq	%rdi, -0x60(%rbp)
000000010003adee	movq	-0x48(%rbp), %rdi
000000010003adf2	leaq	0xb81f(%rip), %rsi
000000010003adf9	movq	-0x40(%rbp), %rax
000000010003adfd	callq	*0x18(%rax)
000000010003ae00	movq	-0x60(%rbp), %rdi
000000010003ae04	testb	%al, %al
000000010003ae06	jne	0x10003ae32
000000010003ae08	movq	%rbx, %rdx
000000010003ae0b	subq	%rdi, %rdx
000000010003ae0e	movq	-0x30(%rbp), %rax
000000010003ae12	leaq	(%rax,%rdi), %rsi
000000010003ae16	cmpq	%rdi, %rbx
000000010003ae19	jne	0x10003ac20
000000010003ae1f	xorl	%eax, %eax
000000010003ae21	jmp	0x10003ac28
000000010003ae26	movq	%rbx, %r13
000000010003ae29	movq	%r12, %rdi
000000010003ae2c	jmp	0x10003adc3
000000010003ae2e	xorl	%eax, %eax
000000010003ae30	jmp	0x10003ae34
000000010003ae32	movb	$0x1, %al
000000010003ae34	addq	$0x38, %rsp
000000010003ae38	popq	%rbx
000000010003ae39	popq	%r12
000000010003ae3b	popq	%r13
000000010003ae3d	popq	%r14
000000010003ae3f	popq	%r15
000000010003ae41	popq	%rbp
000000010003ae42	retq
000000010003ae43	nopw	%cs:(%rax,%rax)
000000010003ae4d	nopl	(%rax)
__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE:
000000010003ae50	pushq	%rbp
000000010003ae51	movq	%rsp, %rbp
000000010003ae54	pushq	%r15
000000010003ae56	pushq	%r14
000000010003ae58	pushq	%r13
000000010003ae5a	pushq	%r12
000000010003ae5c	pushq	%rbx
000000010003ae5d	subq	$0x78, %rsp
000000010003ae61	movq	%rdi, %rbx
000000010003ae64	movb	$0x1, %r15b
000000010003ae67	cmpb	$0x0, 0x8(%rdi)
000000010003ae6b	je	0x10003ae87
000000010003ae6d	movb	%r15b, 0x8(%rbx)
000000010003ae71	movb	$0x1, 0x9(%rbx)
000000010003ae75	movq	%rbx, %rax
000000010003ae78	addq	$0x78, %rsp
000000010003ae7c	popq	%rbx
000000010003ae7d	popq	%r12
000000010003ae7f	popq	%r13
000000010003ae81	popq	%r14
000000010003ae83	popq	%r15
000000010003ae85	popq	%rbp
000000010003ae86	retq
000000010003ae87	movq	%rdx, %r13
000000010003ae8a	movq	%rsi, %r14
000000010003ae8d	movq	(%rbx), %r12
000000010003ae90	movl	0x34(%r12), %eax
000000010003ae95	movzbl	0x9(%rbx), %esi
000000010003ae99	testb	$0x4, %al
000000010003ae9b	movq	%r8, -0x40(%rbp)
000000010003ae9f	movq	%rcx, -0x38(%rbp)
000000010003aea3	jne	0x10003af1f
000000010003aea5	xorl	%edx, %edx
000000010003aea7	testb	%sil, %sil
000000010003aeaa	leaq	0xba25(%rip), %rax
000000010003aeb1	leaq	0xba21(%rip), %rsi
000000010003aeb8	cmoveq	%rax, %rsi
000000010003aebc	sete	%dl
000000010003aebf	orq	$0x2, %rdx
000000010003aec3	movq	0x20(%r12), %rdi
000000010003aec8	movq	0x28(%r12), %rax
000000010003aecd	callq	*0x18(%rax)
000000010003aed0	testb	%al, %al
000000010003aed2	jne	0x10003ae6d
000000010003aed4	movq	0x20(%r12), %rdi
000000010003aed9	movq	0x28(%r12), %rax
000000010003aede	movq	%r14, %rsi
000000010003aee1	movq	%r13, %rdx
000000010003aee4	callq	*0x18(%rax)
000000010003aee7	testb	%al, %al
000000010003aee9	jne	0x10003ae6d
000000010003aeeb	movq	0x20(%r12), %rdi
000000010003aef0	movq	0x28(%r12), %rax
000000010003aef5	leaq	0xb9d8(%rip), %rsi
000000010003aefc	movl	$0x2, %edx
000000010003af01	callq	*0x18(%rax)
000000010003af04	testb	%al, %al
000000010003af06	jne	0x10003ae6d
000000010003af0c	movq	-0x38(%rbp), %rdi
000000010003af10	movq	%r12, %rsi
000000010003af13	movq	-0x40(%rbp), %rax
000000010003af17	callq	*0x18(%rax)
000000010003af1a	jmp	0x10003b001
000000010003af1f	testb	%sil, %sil
000000010003af22	jne	0x10003af4a
000000010003af24	movq	0x20(%r12), %rdi
000000010003af29	movq	0x28(%r12), %rax
000000010003af2e	leaq	0xb9a6(%rip), %rsi
000000010003af35	movl	$0x3, %edx
000000010003af3a	callq	*0x18(%rax)
000000010003af3d	testb	%al, %al
000000010003af3f	jne	0x10003ae6d
000000010003af45	movl	0x34(%r12), %eax
000000010003af4a	movb	$0x1, -0x29(%rbp)
000000010003af4e	movups	0x20(%r12), %xmm0
000000010003af54	movaps	%xmm0, -0x60(%rbp)
000000010003af58	leaq	-0x29(%rbp), %rcx
000000010003af5c	movq	%rcx, -0x50(%rbp)
000000010003af60	movl	0x30(%r12), %ecx
000000010003af65	movzbl	0x38(%r12), %edx
000000010003af6b	movl	%eax, -0x6c(%rbp)
000000010003af6e	movl	%ecx, -0x70(%rbp)
000000010003af71	movb	%dl, -0x68(%rbp)
000000010003af74	movups	(%r12), %xmm0
000000010003af79	movaps	%xmm0, -0xa0(%rbp)
000000010003af80	movups	0x10(%r12), %xmm0
000000010003af86	movaps	%xmm0, -0x90(%rbp)
000000010003af8d	leaq	-0x60(%rbp), %rdi
000000010003af91	movq	%rdi, -0x80(%rbp)
000000010003af95	leaq	0xf0dc(%rip), %rax
000000010003af9c	movq	%rax, -0x78(%rbp)
000000010003afa0	movq	%r14, %rsi
000000010003afa3	movq	%r13, %rdx
000000010003afa6	callq	__ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h50f0784cd500b536E ## _$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$::write_str::h50f0784cd500b536
000000010003afab	testb	%al, %al
000000010003afad	jne	0x10003ae6d
000000010003afb3	leaq	0xb91a(%rip), %rsi
000000010003afba	leaq	-0x60(%rbp), %rdi
000000010003afbe	movl	$0x2, %edx
000000010003afc3	callq	__ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h50f0784cd500b536E ## _$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$::write_str::h50f0784cd500b536
000000010003afc8	testb	%al, %al
000000010003afca	jne	0x10003ae6d
000000010003afd0	leaq	-0xa0(%rbp), %rsi
000000010003afd7	movq	-0x38(%rbp), %rdi
000000010003afdb	movq	-0x40(%rbp), %rax
000000010003afdf	callq	*0x18(%rax)
000000010003afe2	testb	%al, %al
000000010003afe4	jne	0x10003ae6d
000000010003afea	movq	-0x80(%rbp), %rdi
000000010003afee	movq	-0x78(%rbp), %rax
000000010003aff2	leaq	0xb8e5(%rip), %rsi
000000010003aff9	movl	$0x2, %edx
000000010003affe	callq	*0x18(%rax)
000000010003b001	movl	%eax, %r15d
000000010003b004	jmp	0x10003ae6d
000000010003b009	nopl	(%rax)
__ZN4core3fmt8builders11DebugStruct6finish17he31cc25ca0a4d1e9E:
000000010003b010	pushq	%rbp
000000010003b011	movq	%rsp, %rbp
000000010003b014	pushq	%rbx
000000010003b015	pushq	%rax
000000010003b016	cmpb	$0x0, 0x9(%rdi)
000000010003b01a	movzbl	0x8(%rdi), %ecx
000000010003b01e	je	0x10003b064
000000010003b020	movq	%rdi, %rbx
000000010003b023	movb	$0x1, %al
000000010003b025	testb	%cl, %cl
000000010003b027	jne	0x10003b05f
000000010003b029	movq	(%rbx), %rax
000000010003b02c	testb	$0x4, 0x34(%rax)
000000010003b030	jne	0x10003b048
000000010003b032	movq	0x20(%rax), %rdi
000000010003b036	movq	0x28(%rax), %rax
000000010003b03a	leaq	0xb8a0(%rip), %rsi
000000010003b041	movl	$0x2, %edx
000000010003b046	jmp	0x10003b05c
000000010003b048	movq	0x20(%rax), %rdi
000000010003b04c	movq	0x28(%rax), %rax
000000010003b050	leaq	0xb889(%rip), %rsi
000000010003b057	movl	$0x1, %edx
000000010003b05c	callq	*0x18(%rax)
000000010003b05f	movb	%al, 0x8(%rbx)
000000010003b062	movl	%eax, %ecx
000000010003b064	movl	%ecx, %eax
000000010003b066	addq	$0x8, %rsp
000000010003b06a	popq	%rbx
000000010003b06b	popq	%rbp
000000010003b06c	retq
000000010003b06d	nopl	(%rax)
__ZN4core3fmt8builders10DebugTuple5field17hde51ac2d3aad1932E:
000000010003b070	pushq	%rbp
000000010003b071	movq	%rsp, %rbp
000000010003b074	pushq	%r15
000000010003b076	pushq	%r14
000000010003b078	pushq	%r13
000000010003b07a	pushq	%r12
000000010003b07c	pushq	%rbx
000000010003b07d	subq	$0x68, %rsp
000000010003b081	movq	%rdi, %rbx
000000010003b084	cmpb	$0x0, 0x10(%rdi)
000000010003b088	je	0x10003b0aa
000000010003b08a	movq	(%rbx), %r13
000000010003b08d	movb	$0x1, %al
000000010003b08f	movb	%al, 0x10(%rbx)
000000010003b092	incq	%r13
000000010003b095	movq	%r13, (%rbx)
000000010003b098	movq	%rbx, %rax
000000010003b09b	addq	$0x68, %rsp
000000010003b09f	popq	%rbx
000000010003b0a0	popq	%r12
000000010003b0a2	popq	%r13
000000010003b0a4	popq	%r14
000000010003b0a6	popq	%r15
000000010003b0a8	popq	%rbp
000000010003b0a9	retq
000000010003b0aa	movq	%rdx, %r14
000000010003b0ad	movq	%rsi, %r15
000000010003b0b0	movq	(%rbx), %r13
000000010003b0b3	movq	0x8(%rbx), %r12
000000010003b0b7	movl	0x34(%r12), %eax
000000010003b0bc	testb	$0x4, %al
000000010003b0be	jne	0x10003b103
000000010003b0c0	xorl	%eax, %eax
000000010003b0c2	testq	%r13, %r13
000000010003b0c5	sete	%al
000000010003b0c8	leaq	0xb814(%rip), %rcx
000000010003b0cf	leaq	0xb803(%rip), %rsi
000000010003b0d6	cmoveq	%rcx, %rsi
000000010003b0da	movl	$0x2, %edx
000000010003b0df	subq	%rax, %rdx
000000010003b0e2	movq	0x20(%r12), %rdi
000000010003b0e7	movq	0x28(%r12), %rax
000000010003b0ec	callq	*0x18(%rax)
000000010003b0ef	movl	%eax, %ecx
000000010003b0f1	movb	$0x1, %al
000000010003b0f3	testb	%cl, %cl
000000010003b0f5	jne	0x10003b08f
000000010003b0f7	movq	%r15, %rdi
000000010003b0fa	movq	%r12, %rsi
000000010003b0fd	callq	*0x18(%r14)
000000010003b101	jmp	0x10003b08f
000000010003b103	testq	%r13, %r13
000000010003b106	jne	0x10003b132
000000010003b108	movq	0x20(%r12), %rdi
000000010003b10d	movq	0x28(%r12), %rax
000000010003b112	leaq	0xb7cb(%rip), %rsi
000000010003b119	movl	$0x2, %edx
000000010003b11e	callq	*0x18(%rax)
000000010003b121	movl	%eax, %ecx
000000010003b123	movb	$0x1, %al
000000010003b125	testb	%cl, %cl
000000010003b127	jne	0x10003b08f
000000010003b12d	movl	0x34(%r12), %eax
000000010003b132	movb	$0x1, -0x29(%rbp)
000000010003b136	movups	0x20(%r12), %xmm0
000000010003b13c	movaps	%xmm0, -0x90(%rbp)
000000010003b143	leaq	-0x29(%rbp), %rcx
000000010003b147	movq	%rcx, -0x80(%rbp)
000000010003b14b	movl	0x30(%r12), %ecx
000000010003b150	movzbl	0x38(%r12), %edx
000000010003b156	movl	%eax, -0x3c(%rbp)
000000010003b159	movl	%ecx, -0x40(%rbp)
000000010003b15c	movb	%dl, -0x38(%rbp)
000000010003b15f	movups	(%r12), %xmm0
000000010003b164	movaps	%xmm0, -0x70(%rbp)
000000010003b168	movups	0x10(%r12), %xmm0
000000010003b16e	movaps	%xmm0, -0x60(%rbp)
000000010003b172	leaq	-0x90(%rbp), %rax
000000010003b179	movq	%rax, -0x50(%rbp)
000000010003b17d	leaq	0xeef4(%rip), %rax
000000010003b184	movq	%rax, -0x48(%rbp)
000000010003b188	leaq	-0x70(%rbp), %rsi
000000010003b18c	movq	%r15, %rdi
000000010003b18f	callq	*0x18(%r14)
000000010003b193	testb	%al, %al
000000010003b195	jne	0x10003b08d
000000010003b19b	movq	-0x50(%rbp), %rdi
000000010003b19f	movq	-0x48(%rbp), %rax
000000010003b1a3	leaq	0xb734(%rip), %rsi
000000010003b1aa	movl	$0x2, %edx
000000010003b1af	callq	*0x18(%rax)
000000010003b1b2	jmp	0x10003b08f
000000010003b1b7	nopw	(%rax,%rax)
__ZN4core3fmt8builders10DebugTuple6finish17ha860931e67ea6decE:
000000010003b1c0	pushq	%rbp
000000010003b1c1	movq	%rsp, %rbp
000000010003b1c4	pushq	%r15
000000010003b1c6	pushq	%r14
000000010003b1c8	pushq	%rbx
000000010003b1c9	pushq	%rax
000000010003b1ca	movq	(%rdi), %rcx
000000010003b1cd	movzbl	0x10(%rdi), %eax
000000010003b1d1	testq	%rcx, %rcx
000000010003b1d4	je	0x10003b239
000000010003b1d6	movq	%rdi, %rbx
000000010003b1d9	movb	$0x1, %r14b
000000010003b1dc	testb	%al, %al
000000010003b1de	jne	0x10003b232
000000010003b1e0	cmpq	$0x1, %rcx
000000010003b1e4	jne	0x10003b214
000000010003b1e6	cmpb	$0x0, 0x11(%rbx)
000000010003b1ea	je	0x10003b214
000000010003b1ec	movq	0x8(%rbx), %r15
000000010003b1f0	testb	$0x4, 0x34(%r15)
000000010003b1f5	jne	0x10003b218
000000010003b1f7	movq	0x20(%r15), %rdi
000000010003b1fb	movq	0x28(%r15), %rax
000000010003b1ff	leaq	0xb6e0(%rip), %rsi
000000010003b206	movl	$0x1, %edx
000000010003b20b	callq	*0x18(%rax)
000000010003b20e	testb	%al, %al
000000010003b210	je	0x10003b218
000000010003b212	jmp	0x10003b232
000000010003b214	movq	0x8(%rbx), %r15
000000010003b218	movq	0x20(%r15), %rdi
000000010003b21c	movq	0x28(%r15), %rax
000000010003b220	leaq	0xb577(%rip), %rsi
000000010003b227	movl	$0x1, %edx
000000010003b22c	callq	*0x18(%rax)
000000010003b22f	movl	%eax, %r14d
000000010003b232	movb	%r14b, 0x10(%rbx)
000000010003b236	movl	%r14d, %eax
000000010003b239	addq	$0x8, %rsp
000000010003b23d	popq	%rbx
000000010003b23e	popq	%r14
000000010003b240	popq	%r15
000000010003b242	popq	%rbp
000000010003b243	retq
000000010003b244	nopw	%cs:(%rax,%rax)
000000010003b24e	nop
__ZN4core3fmt8builders10DebugInner5entry17hb931d5441a20124cE:
000000010003b250	pushq	%rbp
000000010003b251	movq	%rsp, %rbp
000000010003b254	pushq	%r15
000000010003b256	pushq	%r14
000000010003b258	pushq	%r12
000000010003b25a	pushq	%rbx
000000010003b25b	subq	$0x70, %rsp
000000010003b25f	movq	%rdi, %rbx
000000010003b262	movb	$0x1, %al
000000010003b264	cmpb	$0x0, 0x8(%rdi)
000000010003b268	je	0x10003b27e
000000010003b26a	movb	%al, 0x8(%rbx)
000000010003b26d	movb	$0x1, 0x9(%rbx)
000000010003b271	addq	$0x70, %rsp
000000010003b275	popq	%rbx
000000010003b276	popq	%r12
000000010003b278	popq	%r14
000000010003b27a	popq	%r15
000000010003b27c	popq	%rbp
000000010003b27d	retq
000000010003b27e	movq	%rdx, %r14
000000010003b281	movq	%rsi, %r15
000000010003b284	movq	(%rbx), %r12
000000010003b287	movl	0x34(%r12), %eax
000000010003b28c	movzbl	0x9(%rbx), %ecx
000000010003b290	testb	$0x4, %al
000000010003b292	jne	0x10003b2c5
000000010003b294	testb	%cl, %cl
000000010003b296	je	0x10003b2b9
000000010003b298	movq	0x20(%r12), %rdi
000000010003b29d	movq	0x28(%r12), %rax
000000010003b2a2	leaq	0xb630(%rip), %rsi
000000010003b2a9	movl	$0x2, %edx
000000010003b2ae	callq	*0x18(%rax)
000000010003b2b1	movl	%eax, %ecx
000000010003b2b3	movb	$0x1, %al
000000010003b2b5	testb	%cl, %cl
000000010003b2b7	jne	0x10003b26a
000000010003b2b9	movq	%r15, %rdi
000000010003b2bc	movq	%r12, %rsi
000000010003b2bf	callq	*0x18(%r14)
000000010003b2c3	jmp	0x10003b26a
000000010003b2c5	testb	%cl, %cl
000000010003b2c7	jne	0x10003b2ef
000000010003b2c9	movq	0x20(%r12), %rdi
000000010003b2ce	movq	0x28(%r12), %rax
000000010003b2d3	leaq	0xb60d(%rip), %rsi
000000010003b2da	movl	$0x1, %edx
000000010003b2df	callq	*0x18(%rax)
000000010003b2e2	movl	%eax, %ecx
000000010003b2e4	movb	$0x1, %al
000000010003b2e6	testb	%cl, %cl
000000010003b2e8	jne	0x10003b26a
000000010003b2ea	movl	0x34(%r12), %eax
000000010003b2ef	movb	$0x1, -0x21(%rbp)
000000010003b2f3	movups	0x20(%r12), %xmm0
000000010003b2f9	movaps	%xmm0, -0x90(%rbp)
000000010003b300	leaq	-0x21(%rbp), %rcx
000000010003b304	movq	%rcx, -0x80(%rbp)
000000010003b308	movl	0x30(%r12), %ecx
000000010003b30d	movzbl	0x38(%r12), %edx
000000010003b313	movl	%eax, -0x3c(%rbp)
000000010003b316	movl	%ecx, -0x40(%rbp)
000000010003b319	movb	%dl, -0x38(%rbp)
000000010003b31c	movups	(%r12), %xmm0
000000010003b321	movaps	%xmm0, -0x70(%rbp)
000000010003b325	movups	0x10(%r12), %xmm0
000000010003b32b	movaps	%xmm0, -0x60(%rbp)
000000010003b32f	leaq	-0x90(%rbp), %rax
000000010003b336	movq	%rax, -0x50(%rbp)
000000010003b33a	leaq	0xed37(%rip), %rax
000000010003b341	movq	%rax, -0x48(%rbp)
000000010003b345	leaq	-0x70(%rbp), %rsi
000000010003b349	movq	%r15, %rdi
000000010003b34c	callq	*0x18(%r14)
000000010003b350	testb	%al, %al
000000010003b352	je	0x10003b35b
000000010003b354	movb	$0x1, %al
000000010003b356	jmp	0x10003b26a
000000010003b35b	movq	-0x50(%rbp), %rdi
000000010003b35f	movq	-0x48(%rbp), %rax
000000010003b363	leaq	0xb574(%rip), %rsi
000000010003b36a	movl	$0x2, %edx
000000010003b36f	callq	*0x18(%rax)
000000010003b372	jmp	0x10003b26a
000000010003b377	nopw	(%rax,%rax)
__ZN4core3fmt8builders8DebugSet5entry17hf11f5493a502177bE:
000000010003b380	pushq	%rbp
000000010003b381	movq	%rsp, %rbp
000000010003b384	pushq	%rbx
000000010003b385	pushq	%rax
000000010003b386	movq	%rdi, %rbx
000000010003b389	callq	__ZN4core3fmt8builders10DebugInner5entry17hb931d5441a20124cE ## core::fmt::builders::DebugInner::entry::hb931d5441a20124c
000000010003b38e	movq	%rbx, %rax
000000010003b391	addq	$0x8, %rsp
000000010003b395	popq	%rbx
000000010003b396	popq	%rbp
000000010003b397	retq
000000010003b398	nopl	(%rax,%rax)
__ZN4core3fmt8builders9DebugList6finish17hf1eecb5654d2cf1aE:
000000010003b3a0	pushq	%rbp
000000010003b3a1	movq	%rsp, %rbp
000000010003b3a4	cmpb	$0x0, 0x8(%rdi)
000000010003b3a8	je	0x10003b3ae
000000010003b3aa	movb	$0x1, %al
000000010003b3ac	popq	%rbp
000000010003b3ad	retq
000000010003b3ae	movq	(%rdi), %rax
000000010003b3b1	movq	0x20(%rax), %rdi
000000010003b3b5	movq	0x28(%rax), %rax
000000010003b3b9	movq	0x18(%rax), %rax
000000010003b3bd	leaq	0xb525(%rip), %rsi
000000010003b3c4	movl	$0x1, %edx
000000010003b3c9	popq	%rbp
000000010003b3ca	jmpq	*%rax
000000010003b3cc	nopl	(%rax)
__ZN4core3fmt5Write10write_char17h7846ba374ff04310E:
000000010003b3d0	pushq	%rbp
000000010003b3d1	movq	%rsp, %rbp
000000010003b3d4	subq	$0x10, %rsp
000000010003b3d8	movl	$0x0, -0x4(%rbp)
000000010003b3df	cmpl	$0x80, %esi
000000010003b3e5	jae	0x10003b3f5
000000010003b3e7	movb	%sil, -0x4(%rbp)
000000010003b3eb	movl	$0x1, %edx
000000010003b3f0	jmp	0x10003b47c
000000010003b3f5	movl	%esi, %eax
000000010003b3f7	cmpl	$0x800, %esi                    ## imm = 0x800
000000010003b3fd	jae	0x10003b41a
000000010003b3ff	shrl	$0x6, %eax
000000010003b402	orb	$-0x40, %al
000000010003b404	movb	%al, -0x4(%rbp)
000000010003b407	andb	$0x3f, %sil
000000010003b40b	orb	$-0x80, %sil
000000010003b40f	movb	%sil, -0x3(%rbp)
000000010003b413	movl	$0x2, %edx
000000010003b418	jmp	0x10003b47c
000000010003b41a	cmpl	$0x10000, %esi                  ## imm = 0x10000
000000010003b420	jae	0x10003b449
000000010003b422	shrl	$0xc, %eax
000000010003b425	orb	$-0x20, %al
000000010003b427	movb	%al, -0x4(%rbp)
000000010003b42a	movl	%esi, %eax
000000010003b42c	shrl	$0x6, %eax
000000010003b42f	andb	$0x3f, %al
000000010003b431	orb	$-0x80, %al
000000010003b433	movb	%al, -0x3(%rbp)
000000010003b436	andb	$0x3f, %sil
000000010003b43a	orb	$-0x80, %sil
000000010003b43e	movb	%sil, -0x2(%rbp)
000000010003b442	movl	$0x3, %edx
000000010003b447	jmp	0x10003b47c
000000010003b449	shrl	$0x12, %eax
000000010003b44c	andb	$0x7, %al
000000010003b44e	orb	$-0x10, %al
000000010003b450	movb	%al, -0x4(%rbp)
000000010003b453	movl	%esi, %eax
000000010003b455	shrl	$0xc, %eax
000000010003b458	andb	$0x3f, %al
000000010003b45a	orb	$-0x80, %al
000000010003b45c	movb	%al, -0x3(%rbp)
000000010003b45f	movl	%esi, %eax
000000010003b461	shrl	$0x6, %eax
000000010003b464	andb	$0x3f, %al
000000010003b466	orb	$-0x80, %al
000000010003b468	movb	%al, -0x2(%rbp)
000000010003b46b	andb	$0x3f, %sil
000000010003b46f	orb	$-0x80, %sil
000000010003b473	movb	%sil, -0x1(%rbp)
000000010003b477	movl	$0x4, %edx
000000010003b47c	leaq	-0x4(%rbp), %rsi
000000010003b480	callq	__ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h50f0784cd500b536E ## _$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$::write_str::h50f0784cd500b536
000000010003b485	addq	$0x10, %rsp
000000010003b489	popq	%rbp
000000010003b48a	retq
000000010003b48b	nopl	(%rax,%rax)
__ZN4core3fmt5Write9write_fmt17hfd332746c30b44fbE:
000000010003b490	pushq	%rbp
000000010003b491	movq	%rsp, %rbp
000000010003b494	subq	$0x40, %rsp
000000010003b498	movq	%rdi, -0x8(%rbp)
000000010003b49c	movq	0x28(%rsi), %rax
000000010003b4a0	movq	%rax, -0x10(%rbp)
000000010003b4a4	movq	0x20(%rsi), %rax
000000010003b4a8	movq	%rax, -0x18(%rbp)
000000010003b4ac	movq	0x18(%rsi), %rax
000000010003b4b0	movq	%rax, -0x20(%rbp)
000000010003b4b4	movq	0x10(%rsi), %rax
000000010003b4b8	movq	%rax, -0x28(%rbp)
000000010003b4bc	movq	(%rsi), %rax
000000010003b4bf	movq	0x8(%rsi), %rcx
000000010003b4c3	movq	%rcx, -0x30(%rbp)
000000010003b4c7	movq	%rax, -0x38(%rbp)
000000010003b4cb	leaq	0xebf6(%rip), %rsi
000000010003b4d2	leaq	-0x8(%rbp), %rdi
000000010003b4d6	leaq	-0x38(%rbp), %rdx
000000010003b4da	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003b4df	addq	$0x40, %rsp
000000010003b4e3	popq	%rbp
000000010003b4e4	retq
000000010003b4e5	nopw	%cs:(%rax,%rax)
000000010003b4ef	nop
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hfabc33ed958c625fE:
000000010003b4f0	pushq	%rbp
000000010003b4f1	movq	%rsp, %rbp
000000010003b4f4	movq	(%rdi), %rdi
000000010003b4f7	popq	%rbp
000000010003b4f8	jmp	__ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h50f0784cd500b536E ## _$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$::write_str::h50f0784cd500b536
000000010003b4fd	nopl	(%rax)
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hbff39385327e0355E:
000000010003b500	pushq	%rbp
000000010003b501	movq	%rsp, %rbp
000000010003b504	subq	$0x10, %rsp
000000010003b508	movq	(%rdi), %rdi
000000010003b50b	movl	$0x0, -0x4(%rbp)
000000010003b512	cmpl	$0x80, %esi
000000010003b518	jae	0x10003b528
000000010003b51a	movb	%sil, -0x4(%rbp)
000000010003b51e	movl	$0x1, %edx
000000010003b523	jmp	0x10003b5af
000000010003b528	movl	%esi, %eax
000000010003b52a	cmpl	$0x800, %esi                    ## imm = 0x800
000000010003b530	jae	0x10003b54d
000000010003b532	shrl	$0x6, %eax
000000010003b535	orb	$-0x40, %al
000000010003b537	movb	%al, -0x4(%rbp)
000000010003b53a	andb	$0x3f, %sil
000000010003b53e	orb	$-0x80, %sil
000000010003b542	movb	%sil, -0x3(%rbp)
000000010003b546	movl	$0x2, %edx
000000010003b54b	jmp	0x10003b5af
000000010003b54d	cmpl	$0x10000, %esi                  ## imm = 0x10000
000000010003b553	jae	0x10003b57c
000000010003b555	shrl	$0xc, %eax
000000010003b558	orb	$-0x20, %al
000000010003b55a	movb	%al, -0x4(%rbp)
000000010003b55d	movl	%esi, %eax
000000010003b55f	shrl	$0x6, %eax
000000010003b562	andb	$0x3f, %al
000000010003b564	orb	$-0x80, %al
000000010003b566	movb	%al, -0x3(%rbp)
000000010003b569	andb	$0x3f, %sil
000000010003b56d	orb	$-0x80, %sil
000000010003b571	movb	%sil, -0x2(%rbp)
000000010003b575	movl	$0x3, %edx
000000010003b57a	jmp	0x10003b5af
000000010003b57c	shrl	$0x12, %eax
000000010003b57f	andb	$0x7, %al
000000010003b581	orb	$-0x10, %al
000000010003b583	movb	%al, -0x4(%rbp)
000000010003b586	movl	%esi, %eax
000000010003b588	shrl	$0xc, %eax
000000010003b58b	andb	$0x3f, %al
000000010003b58d	orb	$-0x80, %al
000000010003b58f	movb	%al, -0x3(%rbp)
000000010003b592	movl	%esi, %eax
000000010003b594	shrl	$0x6, %eax
000000010003b597	andb	$0x3f, %al
000000010003b599	orb	$-0x80, %al
000000010003b59b	movb	%al, -0x2(%rbp)
000000010003b59e	andb	$0x3f, %sil
000000010003b5a2	orb	$-0x80, %sil
000000010003b5a6	movb	%sil, -0x1(%rbp)
000000010003b5aa	movl	$0x4, %edx
000000010003b5af	leaq	-0x4(%rbp), %rsi
000000010003b5b3	callq	__ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h50f0784cd500b536E ## _$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$::write_str::h50f0784cd500b536
000000010003b5b8	addq	$0x10, %rsp
000000010003b5bc	popq	%rbp
000000010003b5bd	retq
000000010003b5be	nop
__ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hc3536176dcc2d570E:
000000010003b5c0	pushq	%rbp
000000010003b5c1	movq	%rsp, %rbp
000000010003b5c4	subq	$0x40, %rsp
000000010003b5c8	movq	(%rdi), %rax
000000010003b5cb	movq	0x28(%rsi), %rcx
000000010003b5cf	movq	%rcx, -0x10(%rbp)
000000010003b5d3	movq	0x20(%rsi), %rcx
000000010003b5d7	movq	%rcx, -0x18(%rbp)
000000010003b5db	movq	0x18(%rsi), %rcx
000000010003b5df	movq	%rcx, -0x20(%rbp)
000000010003b5e3	movq	0x10(%rsi), %rcx
000000010003b5e7	movq	%rcx, -0x28(%rbp)
000000010003b5eb	movq	(%rsi), %rcx
000000010003b5ee	movq	0x8(%rsi), %rdx
000000010003b5f2	movq	%rdx, -0x30(%rbp)
000000010003b5f6	movq	%rcx, -0x38(%rbp)
000000010003b5fa	movq	%rax, -0x8(%rbp)
000000010003b5fe	leaq	0xeac3(%rip), %rsi
000000010003b605	leaq	-0x8(%rbp), %rdi
000000010003b609	leaq	-0x38(%rbp), %rdx
000000010003b60d	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003b612	addq	$0x40, %rsp
000000010003b616	popq	%rbp
000000010003b617	retq
000000010003b618	nopl	(%rax,%rax)
__ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17hbcb535daa51f7025E:
000000010003b620	pushq	%rbp
000000010003b621	movq	%rsp, %rbp
000000010003b624	movq	%rdi, %rdx
000000010003b627	movq	0x20(%rsi), %rdi
000000010003b62b	movq	0x28(%rsi), %rsi
000000010003b62f	popq	%rbp
000000010003b630	jmp	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003b635	nopw	%cs:(%rax,%rax)
000000010003b63f	nop
__ZN4core3fmt5write17h745c6d87d2702197E:
000000010003b640	pushq	%rbp
000000010003b641	movq	%rsp, %rbp
000000010003b644	pushq	%r15
000000010003b646	pushq	%r14
000000010003b648	pushq	%r13
000000010003b64a	pushq	%r12
000000010003b64c	pushq	%rbx
000000010003b64d	subq	$0x48, %rsp
000000010003b651	movq	$0x20, -0x40(%rbp)
000000010003b659	movb	$0x3, -0x38(%rbp)
000000010003b65d	movq	$0x0, -0x70(%rbp)
000000010003b665	movq	$0x0, -0x60(%rbp)
000000010003b66d	movq	%rdi, -0x50(%rbp)
000000010003b671	movq	%rsi, -0x48(%rbp)
000000010003b675	movq	0x20(%rdx), %r12
000000010003b679	testq	%r12, %r12
000000010003b67c	movq	%rdx, -0x30(%rbp)
000000010003b680	je	0x10003b798
000000010003b686	movq	0x28(%rdx), %rax
000000010003b68a	testq	%rax, %rax
000000010003b68d	je	0x10003b7fd
000000010003b693	movq	(%rdx), %r13
000000010003b696	addq	$0x8, %r13
000000010003b69a	imulq	$0x38, %rax, %rbx
000000010003b69e	xorl	%r14d, %r14d
000000010003b6a1	xorl	%r15d, %r15d
000000010003b6a4	nopw	%cs:(%rax,%rax)
000000010003b6ae	nop
000000010003b6b0	movq	(%r13), %rdx
000000010003b6b4	testq	%rdx, %rdx
000000010003b6b7	je	0x10003b6d0
000000010003b6b9	movq	-0x50(%rbp), %rdi
000000010003b6bd	movq	-0x48(%rbp), %rax
000000010003b6c1	movq	-0x8(%r13), %rsi
000000010003b6c5	callq	*0x18(%rax)
000000010003b6c8	testb	%al, %al
000000010003b6ca	jne	0x10003b83c
000000010003b6d0	movq	-0x30(%rbp), %rax
000000010003b6d4	movq	0x10(%rax), %rax
000000010003b6d8	movzbl	0x30(%r12,%r14), %ecx
000000010003b6de	movb	%cl, -0x38(%rbp)
000000010003b6e1	movq	0x28(%r12,%r14), %rcx
000000010003b6e6	movq	%rcx, -0x40(%rbp)
000000010003b6ea	movq	0x10(%r12,%r14), %rdx
000000010003b6ef	movq	0x18(%r12,%r14), %rcx
000000010003b6f4	testq	%rdx, %rdx
000000010003b6f7	je	0x10003b71b
000000010003b6f9	cmpl	$0x1, %edx
000000010003b6fc	jne	0x10003b710
000000010003b6fe	shlq	$0x4, %rcx
000000010003b702	leaq	__ZN4core3ops8function6FnOnce9call_once17h82d84aa57661d2a0E(%rip), %rdx ## core::ops::function::FnOnce::call_once::h82d84aa57661d2a0
000000010003b709	cmpq	%rdx, 0x8(%rax,%rcx)
000000010003b70e	je	0x10003b714
000000010003b710	xorl	%edx, %edx
000000010003b712	jmp	0x10003b720
000000010003b714	movq	(%rax,%rcx), %rcx
000000010003b718	movq	(%rcx), %rcx
000000010003b71b	movl	$0x1, %edx
000000010003b720	movq	%rdx, -0x70(%rbp)
000000010003b724	movq	%rcx, -0x68(%rbp)
000000010003b728	movq	(%r12,%r14), %rdx
000000010003b72c	movq	0x8(%r12,%r14), %rcx
000000010003b731	testq	%rdx, %rdx
000000010003b734	je	0x10003b758
000000010003b736	cmpl	$0x1, %edx
000000010003b739	jne	0x10003b74d
000000010003b73b	shlq	$0x4, %rcx
000000010003b73f	leaq	__ZN4core3ops8function6FnOnce9call_once17h82d84aa57661d2a0E(%rip), %rdx ## core::ops::function::FnOnce::call_once::h82d84aa57661d2a0
000000010003b746	cmpq	%rdx, 0x8(%rax,%rcx)
000000010003b74b	je	0x10003b751
000000010003b74d	xorl	%edx, %edx
000000010003b74f	jmp	0x10003b75d
000000010003b751	movq	(%rax,%rcx), %rcx
000000010003b755	movq	(%rcx), %rcx
000000010003b758	movl	$0x1, %edx
000000010003b75d	movq	%rdx, -0x60(%rbp)
000000010003b761	movq	%rcx, -0x58(%rbp)
000000010003b765	movq	0x20(%r12,%r14), %rcx
000000010003b76a	shlq	$0x4, %rcx
000000010003b76e	movq	(%rax,%rcx), %rdi
000000010003b772	leaq	-0x70(%rbp), %rsi
000000010003b776	callq	*0x8(%rax,%rcx)
000000010003b77a	testb	%al, %al
000000010003b77c	jne	0x10003b83c
000000010003b782	addq	$0x10, %r13
000000010003b786	addq	$0x38, %r14
000000010003b78a	incq	%r15
000000010003b78d	cmpq	%r14, %rbx
000000010003b790	jne	0x10003b6b0
000000010003b796	jmp	0x10003b800
000000010003b798	movq	0x18(%rdx), %r12
000000010003b79c	testq	%r12, %r12
000000010003b79f	je	0x10003b80c
000000010003b7a1	movq	0x10(%rdx), %r13
000000010003b7a5	movq	(%rdx), %r14
000000010003b7a8	shlq	$0x4, %r12
000000010003b7ac	xorl	%ebx, %ebx
000000010003b7ae	xorl	%r15d, %r15d
000000010003b7b1	nopw	%cs:(%rax,%rax)
000000010003b7bb	nopl	(%rax,%rax)
000000010003b7c0	movq	0x8(%r14,%rbx), %rdx
000000010003b7c5	testq	%rdx, %rdx
000000010003b7c8	je	0x10003b7dd
000000010003b7ca	movq	-0x50(%rbp), %rdi
000000010003b7ce	movq	-0x48(%rbp), %rax
000000010003b7d2	movq	(%r14,%rbx), %rsi
000000010003b7d6	callq	*0x18(%rax)
000000010003b7d9	testb	%al, %al
000000010003b7db	jne	0x10003b83c
000000010003b7dd	movq	(%r13,%rbx), %rdi
000000010003b7e2	leaq	-0x70(%rbp), %rsi
000000010003b7e6	callq	*0x8(%r13,%rbx)
000000010003b7eb	testb	%al, %al
000000010003b7ed	jne	0x10003b83c
000000010003b7ef	addq	$0x10, %rbx
000000010003b7f3	incq	%r15
000000010003b7f6	cmpq	%rbx, %r12
000000010003b7f9	jne	0x10003b7c0
000000010003b7fb	jmp	0x10003b800
000000010003b7fd	xorl	%r15d, %r15d
000000010003b800	movq	-0x30(%rbp), %rax
000000010003b804	cmpq	0x8(%rax), %r15
000000010003b808	jb	0x10003b819
000000010003b80a	jmp	0x10003b840
000000010003b80c	xorl	%r15d, %r15d
000000010003b80f	movq	-0x30(%rbp), %rax
000000010003b813	cmpq	0x8(%rax), %r15
000000010003b817	jae	0x10003b840
000000010003b819	movq	-0x30(%rbp), %rax
000000010003b81d	movq	(%rax), %rax
000000010003b820	shlq	$0x4, %r15
000000010003b824	movq	-0x50(%rbp), %rdi
000000010003b828	movq	-0x48(%rbp), %rcx
000000010003b82c	movq	(%rax,%r15), %rsi
000000010003b830	movq	0x8(%rax,%r15), %rdx
000000010003b835	callq	*0x18(%rcx)
000000010003b838	testb	%al, %al
000000010003b83a	je	0x10003b840
000000010003b83c	movb	$0x1, %al
000000010003b83e	jmp	0x10003b842
000000010003b840	xorl	%eax, %eax
000000010003b842	addq	$0x48, %rsp
000000010003b846	popq	%rbx
000000010003b847	popq	%r12
000000010003b849	popq	%r13
000000010003b84b	popq	%r14
000000010003b84d	popq	%r15
000000010003b84f	popq	%rbp
000000010003b850	retq
000000010003b851	nopw	%cs:(%rax,%rax)
000000010003b85b	nopl	(%rax,%rax)
__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E:
000000010003b860	pushq	%rbp
000000010003b861	movq	%rsp, %rbp
000000010003b864	pushq	%r15
000000010003b866	pushq	%r14
000000010003b868	pushq	%r13
000000010003b86a	pushq	%r12
000000010003b86c	pushq	%rbx
000000010003b86d	subq	$0x28, %rsp
000000010003b871	movq	%r9, %r12
000000010003b874	movq	%r8, %r15
000000010003b877	movq	%rcx, -0x30(%rbp)
000000010003b87b	movq	%rdx, %r13
000000010003b87e	testl	%esi, %esi
000000010003b880	je	0x10003b8d1
000000010003b882	movl	0x34(%rdi), %ebx
000000010003b885	movl	%ebx, %r14d
000000010003b888	andl	$0x1, %r14d
000000010003b88c	movl	$0x110000, %eax                 ## imm = 0x110000
000000010003b891	movl	$0x2b, %edx
000000010003b896	cmovel	%eax, %edx
000000010003b899	addq	%r12, %r14
000000010003b89c	movq	-0x30(%rbp), %r8
000000010003b8a0	testb	$0x4, %bl
000000010003b8a3	je	0x10003b8e7
000000010003b8a5	cmpq	$0x20, %r8
000000010003b8a9	movl	%edx, -0x34(%rbp)
000000010003b8ac	jae	0x10003b964
000000010003b8b2	movq	%r8, %rax
000000010003b8b5	testq	%r8, %r8
000000010003b8b8	je	0x10003ba76
000000010003b8be	cmpq	$0x1, %r8
000000010003b8c2	jne	0x10003b9ed
000000010003b8c8	xorl	%ecx, %ecx
000000010003b8ca	xorl	%eax, %eax
000000010003b8cc	jmp	0x10003ba60
000000010003b8d1	leaq	0x1(%r12), %r14
000000010003b8d6	movl	0x34(%rdi), %ebx
000000010003b8d9	movl	$0x2d, %edx
000000010003b8de	movq	-0x30(%rbp), %r8
000000010003b8e2	testb	$0x4, %bl
000000010003b8e5	jne	0x10003b8a5
000000010003b8e7	xorl	%r13d, %r13d
000000010003b8ea	cmpq	$0x0, (%rdi)
000000010003b8ee	je	0x10003ba86
000000010003b8f4	movq	%r15, -0x50(%rbp)
000000010003b8f8	movq	0x8(%rdi), %r15
000000010003b8fc	subq	%r14, %r15
000000010003b8ff	jbe	0x10003b933
000000010003b901	testb	$0x8, %bl
000000010003b904	jne	0x10003b98d
000000010003b90a	movl	%edx, -0x34(%rbp)
000000010003b90d	movq	%r12, -0x48(%rbp)
000000010003b911	movzbl	0x38(%rdi), %r12d
000000010003b916	leaq	0x28f(%rip), %rax
000000010003b91d	movslq	(%rax,%r12,4), %rcx
000000010003b921	addq	%rax, %rcx
000000010003b924	movq	%r15, %rax
000000010003b927	jmpq	*%rcx
000000010003b929	xorl	%eax, %eax
000000010003b92b	movq	%r15, %r12
000000010003b92e	jmp	0x10003bafa
000000010003b933	movq	0x20(%rdi), %rbx
000000010003b937	movq	0x28(%rdi), %r14
000000010003b93b	movq	%rbx, %rdi
000000010003b93e	movq	%r14, %rsi
000000010003b941	movq	%r13, %rcx
000000010003b944	callq	__ZN4core3fmt9Formatter12pad_integral12write_prefix17hcd7f8e628e5b648eE ## core::fmt::Formatter::pad_integral::write_prefix::hcd7f8e628e5b648e
000000010003b949	movb	$0x1, %r13b
000000010003b94c	testb	%al, %al
000000010003b94e	movq	-0x50(%rbp), %rsi
000000010003b952	jne	0x10003bb49
000000010003b958	movq	0x18(%r14), %rax
000000010003b95c	movq	%rbx, %rdi
000000010003b95f	jmp	0x10003bab1
000000010003b964	movq	%r12, -0x48(%rbp)
000000010003b968	movq	%r15, %r12
000000010003b96b	movq	%rdi, %r15
000000010003b96e	movq	%r13, %rdi
000000010003b971	movq	-0x30(%rbp), %rsi
000000010003b975	callq	__ZN4core3str5count14do_count_chars17h76e3cfb00548d338E ## core::str::count::do_count_chars::h76e3cfb00548d338
000000010003b97a	movq	%r15, %rdi
000000010003b97d	movq	%r12, %r15
000000010003b980	movq	-0x48(%rbp), %r12
000000010003b984	movq	-0x30(%rbp), %r8
000000010003b988	jmp	0x10003ba76
000000010003b98d	movl	0x30(%rdi), %eax
000000010003b990	movl	%eax, -0x48(%rbp)
000000010003b993	movl	$0x30, 0x30(%rdi)
000000010003b99a	movzbl	0x38(%rdi), %eax
000000010003b99e	movb	%al, -0x40(%rbp)
000000010003b9a1	movb	$0x1, 0x38(%rdi)
000000010003b9a5	movq	0x20(%rdi), %r14
000000010003b9a9	movq	%rdi, -0x30(%rbp)
000000010003b9ad	movq	0x28(%rdi), %rbx
000000010003b9b1	movq	%r14, %rdi
000000010003b9b4	movq	%rbx, %rsi
000000010003b9b7	movq	%r13, %rcx
000000010003b9ba	callq	__ZN4core3fmt9Formatter12pad_integral12write_prefix17hcd7f8e628e5b648eE ## core::fmt::Formatter::pad_integral::write_prefix::hcd7f8e628e5b648e
000000010003b9bf	movb	$0x1, %r13b
000000010003b9c2	testb	%al, %al
000000010003b9c4	jne	0x10003bb49
000000010003b9ca	incq	%r15
000000010003b9cd	nopl	(%rax)
000000010003b9d0	decq	%r15
000000010003b9d3	je	0x10003bac4
000000010003b9d9	movq	%r14, %rdi
000000010003b9dc	movl	$0x30, %esi
000000010003b9e1	callq	*0x20(%rbx)
000000010003b9e4	testb	%al, %al
000000010003b9e6	je	0x10003b9d0
000000010003b9e8	jmp	0x10003bb49
000000010003b9ed	movq	%r8, %rcx
000000010003b9f0	andq	$-0x2, %rcx
000000010003b9f4	pxor	%xmm0, %xmm0
000000010003b9f8	xorl	%eax, %eax
000000010003b9fa	movdqa	0xac2e(%rip), %xmm1
000000010003ba02	movdqa	0xac36(%rip), %xmm2
000000010003ba0a	movdqa	0xac3e(%rip), %xmm3
000000010003ba12	nopw	%cs:(%rax,%rax)
000000010003ba1c	nopl	(%rax)
000000010003ba20	movzwl	(%r13,%rax), %edx
000000010003ba26	movd	%edx, %xmm4
000000010003ba2a	pcmpgtb	%xmm1, %xmm4
000000010003ba2e	pshufb	%xmm2, %xmm4
000000010003ba33	pand	%xmm3, %xmm4
000000010003ba37	paddq	%xmm4, %xmm0
000000010003ba3b	addq	$0x2, %rax
000000010003ba3f	cmpq	%rax, %rcx
000000010003ba42	jne	0x10003ba20
000000010003ba44	pshufd	$0xee, %xmm0, %xmm1             ## xmm1 = xmm0[2,3,2,3]
000000010003ba49	paddq	%xmm0, %xmm1
000000010003ba4d	movq	%xmm1, %rax
000000010003ba52	cmpq	%r8, %rcx
000000010003ba55	je	0x10003ba76
000000010003ba57	nopw	(%rax,%rax)
000000010003ba60	xorl	%edx, %edx
000000010003ba62	cmpb	$-0x40, (%r13,%rcx)
000000010003ba68	setge	%dl
000000010003ba6b	addq	%rdx, %rax
000000010003ba6e	incq	%rcx
000000010003ba71	cmpq	%rcx, %r8
000000010003ba74	jne	0x10003ba60
000000010003ba76	addq	%rax, %r14
000000010003ba79	movl	-0x34(%rbp), %edx
000000010003ba7c	cmpq	$0x0, (%rdi)
000000010003ba80	jne	0x10003b8f4
000000010003ba86	movq	0x20(%rdi), %rbx
000000010003ba8a	movq	0x28(%rdi), %r14
000000010003ba8e	movq	%rbx, %rdi
000000010003ba91	movq	%r14, %rsi
000000010003ba94	movq	%r13, %rcx
000000010003ba97	callq	__ZN4core3fmt9Formatter12pad_integral12write_prefix17hcd7f8e628e5b648eE ## core::fmt::Formatter::pad_integral::write_prefix::hcd7f8e628e5b648e
000000010003ba9c	movb	$0x1, %r13b
000000010003ba9f	testb	%al, %al
000000010003baa1	jne	0x10003bb49
000000010003baa7	movq	0x18(%r14), %rax
000000010003baab	movq	%rbx, %rdi
000000010003baae	movq	%r15, %rsi
000000010003bab1	movq	%r12, %rdx
000000010003bab4	addq	$0x28, %rsp
000000010003bab8	popq	%rbx
000000010003bab9	popq	%r12
000000010003babb	popq	%r13
000000010003babd	popq	%r14
000000010003babf	popq	%r15
000000010003bac1	popq	%rbp
000000010003bac2	jmpq	*%rax
000000010003bac4	movq	%r14, %rdi
000000010003bac7	movq	-0x50(%rbp), %rsi
000000010003bacb	movq	%r12, %rdx
000000010003bace	callq	*0x18(%rbx)
000000010003bad1	testb	%al, %al
000000010003bad3	jne	0x10003bb49
000000010003bad5	movq	-0x30(%rbp), %rax
000000010003bad9	movl	-0x48(%rbp), %ecx
000000010003badc	movl	%ecx, 0x30(%rax)
000000010003badf	movzbl	-0x40(%rbp), %ecx
000000010003bae3	movb	%cl, 0x38(%rax)
000000010003bae6	xorl	%r13d, %r13d
000000010003bae9	jmp	0x10003bb49
000000010003baeb	movq	%r15, %r12
000000010003baee	shrq	%r12
000000010003baf1	incq	%r15
000000010003baf4	shrq	%r15
000000010003baf7	movq	%r15, %rax
000000010003bafa	movq	%rax, -0x40(%rbp)
000000010003bafe	movq	0x20(%rdi), %r14
000000010003bb02	movq	0x28(%rdi), %rbx
000000010003bb06	movl	0x30(%rdi), %r15d
000000010003bb0a	incq	%r12
000000010003bb0d	nopl	(%rax)
000000010003bb10	decq	%r12
000000010003bb13	je	0x10003bb24
000000010003bb15	movq	%r14, %rdi
000000010003bb18	movl	%r15d, %esi
000000010003bb1b	callq	*0x20(%rbx)
000000010003bb1e	testb	%al, %al
000000010003bb20	je	0x10003bb10
000000010003bb22	jmp	0x10003bb46
000000010003bb24	cmpl	$0x110000, %r15d                ## imm = 0x110000
000000010003bb2b	je	0x10003bb46
000000010003bb2d	movq	%r14, %rdi
000000010003bb30	movq	%rbx, %rsi
000000010003bb33	movl	-0x34(%rbp), %edx
000000010003bb36	movq	%r13, %rcx
000000010003bb39	movq	-0x30(%rbp), %r8
000000010003bb3d	callq	__ZN4core3fmt9Formatter12pad_integral12write_prefix17hcd7f8e628e5b648eE ## core::fmt::Formatter::pad_integral::write_prefix::hcd7f8e628e5b648e
000000010003bb42	testb	%al, %al
000000010003bb44	je	0x10003bb5b
000000010003bb46	movb	$0x1, %r13b
000000010003bb49	movl	%r13d, %eax
000000010003bb4c	addq	$0x28, %rsp
000000010003bb50	popq	%rbx
000000010003bb51	popq	%r12
000000010003bb53	popq	%r13
000000010003bb55	popq	%r14
000000010003bb57	popq	%r15
000000010003bb59	popq	%rbp
000000010003bb5a	retq
000000010003bb5b	movq	%r14, %rdi
000000010003bb5e	movq	-0x50(%rbp), %rsi
000000010003bb62	movq	-0x48(%rbp), %rdx
000000010003bb66	callq	*0x18(%rbx)
000000010003bb69	testb	%al, %al
000000010003bb6b	movb	$0x1, %r13b
000000010003bb6e	jne	0x10003bb49
000000010003bb70	movq	-0x40(%rbp), %r13
000000010003bb74	negq	%r13
000000010003bb77	movq	$-0x1, %r12
000000010003bb7e	leaq	(%r13,%r12), %rax
000000010003bb83	cmpq	$-0x1, %rax
000000010003bb87	je	0x10003bb9b
000000010003bb89	movq	%r14, %rdi
000000010003bb8c	movl	%r15d, %esi
000000010003bb8f	callq	*0x20(%rbx)
000000010003bb92	incq	%r12
000000010003bb95	testb	%al, %al
000000010003bb97	je	0x10003bb7e
000000010003bb99	jmp	0x10003bb9f
000000010003bb9b	movq	-0x40(%rbp), %r12
000000010003bb9f	cmpq	-0x40(%rbp), %r12
000000010003bba3	setb	%r13b
000000010003bba7	jmp	0x10003bb49
000000010003bba9	nopl	(%rax)
000000010003bbac	.byte 0x4e #bad opcode
000000010003bbad	.byte 0xff #bad opcode
000000010003bbae	.byte 0xff #bad opcode
000000010003bbaf	.byte 0xff #bad opcode
000000010003bbb0	jge	0x10003bbaf
000000010003bbb2	.byte 0xff #bad opcode
000000010003bbb3	.byte 0xff #bad opcode
000000010003bbb4	.byte 0x3f #bad opcode
000000010003bbb5	.byte 0xff #bad opcode
000000010003bbb6	.byte 0xff #bad opcode
000000010003bbb7	.byte 0xff #bad opcode
000000010003bbb8	jge	0x10003bbb7
000000010003bbba	.byte 0xff #bad opcode
000000010003bbbb	decl	(%rdi)
000000010003bbbd	.byte 0x1f #bad opcode
000000010003bbbe	addb	%dl, 0x48(%rbp)
000000010003bbc2	movl	%esp, %ebp
000000010003bbc4	pushq	%r15
000000010003bbc6	pushq	%r14
000000010003bbc8	pushq	%r12
000000010003bbca	pushq	%rbx
000000010003bbcb	movq	%r8, %rbx
000000010003bbce	movq	%rcx, %r14
000000010003bbd1	movq	%rsi, %r12
000000010003bbd4	movq	%rdi, %r15
000000010003bbd7	cmpl	$0x110000, %edx                 ## imm = 0x110000
000000010003bbdd	je	0x10003bbf1
000000010003bbdf	movq	%r15, %rdi
000000010003bbe2	movl	%edx, %esi
000000010003bbe4	callq	*0x20(%r12)
000000010003bbe9	movl	%eax, %ecx
000000010003bbeb	movb	$0x1, %al
000000010003bbed	testb	%cl, %cl
000000010003bbef	jne	0x10003bc10
000000010003bbf1	testq	%r14, %r14
000000010003bbf4	je	0x10003bc0e
000000010003bbf6	movq	0x18(%r12), %rax
000000010003bbfb	movq	%r15, %rdi
000000010003bbfe	movq	%r14, %rsi
000000010003bc01	movq	%rbx, %rdx
000000010003bc04	popq	%rbx
000000010003bc05	popq	%r12
000000010003bc07	popq	%r14
000000010003bc09	popq	%r15
000000010003bc0b	popq	%rbp
000000010003bc0c	jmpq	*%rax
000000010003bc0e	xorl	%eax, %eax
000000010003bc10	popq	%rbx
000000010003bc11	popq	%r12
000000010003bc13	popq	%r14
000000010003bc15	popq	%r15
000000010003bc17	popq	%rbp
000000010003bc18	retq
000000010003bc19	nopl	(%rax)
__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE:
000000010003bc20	pushq	%rbp
000000010003bc21	movq	%rsp, %rbp
000000010003bc24	pushq	%r15
000000010003bc26	pushq	%r14
000000010003bc28	pushq	%r13
000000010003bc2a	pushq	%r12
000000010003bc2c	pushq	%rbx
000000010003bc2d	subq	$0x18, %rsp
000000010003bc31	movq	%rdx, %r12
000000010003bc34	movq	%rsi, %r14
000000010003bc37	movq	%rdi, %r15
000000010003bc3a	movq	(%rdi), %rax
000000010003bc3d	movq	0x10(%rdi), %rcx
000000010003bc41	movq	%rax, %rdx
000000010003bc44	orq	%rcx, %rdx
000000010003bc47	je	0x10003be73
000000010003bc4d	testq	%rcx, %rcx
000000010003bc50	je	0x10003bd97
000000010003bc56	movq	0x18(%r15), %rdi
000000010003bc5a	leaq	(%r14,%r12), %rsi
000000010003bc5e	incq	%rdi
000000010003bc61	xorl	%ecx, %ecx
000000010003bc63	movq	%r14, %rdx
000000010003bc66	jmp	0x10003bc8a
000000010003bc68	nopl	(%rax,%rax)
000000010003bc70	leaq	0x1(%rdx), %r10
000000010003bc74	subq	%rdx, %rcx
000000010003bc77	addq	%r10, %rcx
000000010003bc7a	movq	%r10, %rdx
000000010003bc7d	cmpl	$0x110000, %r8d                 ## imm = 0x110000
000000010003bc84	je	0x10003bd97
000000010003bc8a	decq	%rdi
000000010003bc8d	je	0x10003bd25
000000010003bc93	cmpq	%rsi, %rdx
000000010003bc96	je	0x10003bd97
000000010003bc9c	movzbl	(%rdx), %r8d
000000010003bca0	testb	%r8b, %r8b
000000010003bca3	jns	0x10003bc70
000000010003bca5	movl	%r8d, %r9d
000000010003bca8	andl	$0x1f, %r9d
000000010003bcac	movzbl	0x1(%rdx), %ebx
000000010003bcb0	andl	$0x3f, %ebx
000000010003bcb3	cmpb	$-0x21, %r8b
000000010003bcb7	jbe	0x10003bcff
000000010003bcb9	movzbl	0x2(%rdx), %r11d
000000010003bcbe	shll	$0x6, %ebx
000000010003bcc1	andl	$0x3f, %r11d
000000010003bcc5	orl	%ebx, %r11d
000000010003bcc8	cmpb	$-0x10, %r8b
000000010003bccc	jb	0x10003bd12
000000010003bcce	movzbl	0x3(%rdx), %r8d
000000010003bcd3	andl	$0x7, %r9d
000000010003bcd7	shll	$0x12, %r9d
000000010003bcdb	shll	$0x6, %r11d
000000010003bcdf	andl	$0x3f, %r8d
000000010003bce3	orl	%r11d, %r8d
000000010003bce6	orl	%r9d, %r8d
000000010003bce9	cmpl	$0x110000, %r8d                 ## imm = 0x110000
000000010003bcf0	je	0x10003bd97
000000010003bcf6	leaq	0x4(%rdx), %r10
000000010003bcfa	jmp	0x10003bc74
000000010003bcff	leaq	0x2(%rdx), %r10
000000010003bd03	shll	$0x6, %r9d
000000010003bd07	orl	%ebx, %r9d
000000010003bd0a	movl	%r9d, %r8d
000000010003bd0d	jmp	0x10003bc74
000000010003bd12	leaq	0x3(%rdx), %r10
000000010003bd16	shll	$0xc, %r9d
000000010003bd1a	orl	%r9d, %r11d
000000010003bd1d	movl	%r11d, %r8d
000000010003bd20	jmp	0x10003bc74
000000010003bd25	cmpq	%rsi, %rdx
000000010003bd28	je	0x10003bd97
000000010003bd2a	movzbl	(%rdx), %esi
000000010003bd2d	testb	%sil, %sil
000000010003bd30	jns	0x10003bd72
000000010003bd32	cmpb	$-0x20, %sil
000000010003bd36	jb	0x10003bd72
000000010003bd38	cmpb	$-0x10, %sil
000000010003bd3c	jb	0x10003bd72
000000010003bd3e	movzbl	0x1(%rdx), %edi
000000010003bd42	andl	$0x3f, %edi
000000010003bd45	movzbl	0x2(%rdx), %r8d
000000010003bd4a	andl	$0x3f, %r8d
000000010003bd4e	movzbl	0x3(%rdx), %edx
000000010003bd52	andl	$0x7, %esi
000000010003bd55	shll	$0x12, %esi
000000010003bd58	shll	$0xc, %edi
000000010003bd5b	shll	$0x6, %r8d
000000010003bd5f	orl	%edi, %r8d
000000010003bd62	andl	$0x3f, %edx
000000010003bd65	orl	%r8d, %edx
000000010003bd68	orl	%esi, %edx
000000010003bd6a	cmpl	$0x110000, %edx                 ## imm = 0x110000
000000010003bd70	je	0x10003bd97
000000010003bd72	testq	%rcx, %rcx
000000010003bd75	je	0x10003bd89
000000010003bd77	cmpq	%r12, %rcx
000000010003bd7a	jae	0x10003bd87
000000010003bd7c	cmpb	$-0x40, (%r14,%rcx)
000000010003bd81	jge	0x10003bd89
000000010003bd83	xorl	%edx, %edx
000000010003bd85	jmp	0x10003bd8c
000000010003bd87	jne	0x10003bd83
000000010003bd89	movq	%r14, %rdx
000000010003bd8c	testq	%rdx, %rdx
000000010003bd8f	cmovneq	%rcx, %r12
000000010003bd93	cmovneq	%rdx, %r14
000000010003bd97	testq	%rax, %rax
000000010003bd9a	je	0x10003be73
000000010003bda0	movq	0x8(%r15), %rbx
000000010003bda4	cmpq	$0x20, %r12
000000010003bda8	jae	0x10003bdc2
000000010003bdaa	movq	%r12, %rax
000000010003bdad	testq	%r12, %r12
000000010003bdb0	je	0x10003be48
000000010003bdb6	cmpq	$0x1, %r12
000000010003bdba	jne	0x10003bdcf
000000010003bdbc	xorl	%ecx, %ecx
000000010003bdbe	xorl	%eax, %eax
000000010003bdc0	jmp	0x10003be33
000000010003bdc2	movq	%r14, %rdi
000000010003bdc5	movq	%r12, %rsi
000000010003bdc8	callq	__ZN4core3str5count14do_count_chars17h76e3cfb00548d338E ## core::str::count::do_count_chars::h76e3cfb00548d338
000000010003bdcd	jmp	0x10003be48
000000010003bdcf	movq	%r12, %rcx
000000010003bdd2	andq	$-0x2, %rcx
000000010003bdd6	pxor	%xmm0, %xmm0
000000010003bdda	xorl	%eax, %eax
000000010003bddc	movdqa	0xa84c(%rip), %xmm1
000000010003bde4	movdqa	0xa854(%rip), %xmm2
000000010003bdec	movdqa	0xa85c(%rip), %xmm3
000000010003bdf4	nopw	%cs:(%rax,%rax)
000000010003bdfe	nop
000000010003be00	movzwl	(%r14,%rax), %edx
000000010003be05	movd	%edx, %xmm4
000000010003be09	pcmpgtb	%xmm1, %xmm4
000000010003be0d	pshufb	%xmm2, %xmm4
000000010003be12	pand	%xmm3, %xmm4
000000010003be16	paddq	%xmm4, %xmm0
000000010003be1a	addq	$0x2, %rax
000000010003be1e	cmpq	%rax, %rcx
000000010003be21	jne	0x10003be00
000000010003be23	pshufd	$0xee, %xmm0, %xmm1             ## xmm1 = xmm0[2,3,2,3]
000000010003be28	paddq	%xmm0, %xmm1
000000010003be2c	movq	%xmm1, %rax
000000010003be31	jmp	0x10003be43
000000010003be33	xorl	%edx, %edx
000000010003be35	cmpb	$-0x40, (%r14,%rcx)
000000010003be3a	setge	%dl
000000010003be3d	addq	%rdx, %rax
000000010003be40	incq	%rcx
000000010003be43	cmpq	%rcx, %r12
000000010003be46	jne	0x10003be33
000000010003be48	subq	%rax, %rbx
000000010003be4b	jbe	0x10003be73
000000010003be4d	movq	%r12, -0x38(%rbp)
000000010003be51	movzbl	0x38(%r15), %eax
000000010003be56	xorl	%r12d, %r12d
000000010003be59	leaq	0xec(%rip), %rcx
000000010003be60	movslq	(%rcx,%rax,4), %rax
000000010003be64	addq	%rcx, %rax
000000010003be67	movq	%rbx, %rcx
000000010003be6a	jmpq	*%rax
000000010003be6c	xorl	%ecx, %ecx
000000010003be6e	movq	%rbx, %r12
000000010003be71	jmp	0x10003bea4
000000010003be73	movq	0x20(%r15), %rdi
000000010003be77	movq	0x28(%r15), %rax
000000010003be7b	movq	0x18(%rax), %rax
000000010003be7f	movq	%r14, %rsi
000000010003be82	movq	%r12, %rdx
000000010003be85	addq	$0x18, %rsp
000000010003be89	popq	%rbx
000000010003be8a	popq	%r12
000000010003be8c	popq	%r13
000000010003be8e	popq	%r14
000000010003be90	popq	%r15
000000010003be92	popq	%rbp
000000010003be93	jmpq	*%rax
000000010003be95	movq	%rbx, %r12
000000010003be98	shrq	%r12
000000010003be9b	incq	%rbx
000000010003be9e	shrq	%rbx
000000010003bea1	movq	%rbx, %rcx
000000010003bea4	movq	%rcx, -0x30(%rbp)
000000010003bea8	movq	0x20(%r15), %rbx
000000010003beac	movq	0x28(%r15), %r13
000000010003beb0	movl	0x30(%r15), %r15d
000000010003beb4	incq	%r12
000000010003beb7	nopw	(%rax,%rax)
000000010003bec0	decq	%r12
000000010003bec3	je	0x10003bed8
000000010003bec5	movq	%rbx, %rdi
000000010003bec8	movl	%r15d, %esi
000000010003becb	callq	*0x20(%r13)
000000010003becf	testb	%al, %al
000000010003bed1	je	0x10003bec0
000000010003bed3	movb	$0x1, %r12b
000000010003bed6	jmp	0x10003bf39
000000010003bed8	movb	$0x1, %r12b
000000010003bedb	cmpl	$0x110000, %r15d                ## imm = 0x110000
000000010003bee2	je	0x10003bf39
000000010003bee4	movq	%rbx, %rdi
000000010003bee7	movq	%r14, %rsi
000000010003beea	movq	-0x38(%rbp), %rdx
000000010003beee	callq	*0x18(%r13)
000000010003bef2	testb	%al, %al
000000010003bef4	jne	0x10003bf39
000000010003bef6	movq	-0x30(%rbp), %r12
000000010003befa	negq	%r12
000000010003befd	movq	$-0x1, %r14
000000010003bf04	nopw	%cs:(%rax,%rax)
000000010003bf0e	nop
000000010003bf10	leaq	(%r12,%r14), %rax
000000010003bf14	cmpq	$-0x1, %rax
000000010003bf18	je	0x10003bf2d
000000010003bf1a	movq	%rbx, %rdi
000000010003bf1d	movl	%r15d, %esi
000000010003bf20	callq	*0x20(%r13)
000000010003bf24	incq	%r14
000000010003bf27	testb	%al, %al
000000010003bf29	je	0x10003bf10
000000010003bf2b	jmp	0x10003bf31
000000010003bf2d	movq	-0x30(%rbp), %r14
000000010003bf31	cmpq	-0x30(%rbp), %r14
000000010003bf35	setb	%r12b
000000010003bf39	movl	%r12d, %eax
000000010003bf3c	addq	$0x18, %rsp
000000010003bf40	popq	%rbx
000000010003bf41	popq	%r12
000000010003bf43	popq	%r13
000000010003bf45	popq	%r14
000000010003bf47	popq	%r15
000000010003bf49	popq	%rbp
000000010003bf4a	retq
000000010003bf4b	nop
000000010003bf4c	popq	%rax
000000010003bf4d	.byte 0xff #bad opcode
000000010003bf4e	.byte 0xff #bad opcode
000000010003bf4f	jmpq	*(%rax)
000000010003bf51	.byte 0xff #bad opcode
000000010003bf52	.byte 0xff #bad opcode
000000010003bf53	decl	-0x1(%rcx)
000000010003bf56	.byte 0xff #bad opcode
000000010003bf57	lcalll	*-0x1(%rax)
000000010003bf5a	.byte 0xff #bad opcode
000000010003bf5b	decl	(%rdi)
000000010003bf5d	.byte 0x1f #bad opcode
000000010003bf5e	addb	%dl, 0x48(%rbp)
000000010003bf62	movl	%esp, %ebp
000000010003bf64	movq	0x20(%rdi), %rax
000000010003bf68	movq	0x28(%rdi), %rcx
000000010003bf6c	movq	0x18(%rcx), %rcx
000000010003bf70	movq	%rax, %rdi
000000010003bf73	popq	%rbp
000000010003bf74	jmpq	*%rcx
000000010003bf76	nopw	%cs:(%rax,%rax)
__ZN4core3fmt9Formatter9write_fmt17h406266965a9d7271E:
000000010003bf80	pushq	%rbp
000000010003bf81	movq	%rsp, %rbp
000000010003bf84	subq	$0x30, %rsp
000000010003bf88	movq	0x20(%rdi), %rax
000000010003bf8c	movq	0x28(%rdi), %rcx
000000010003bf90	movq	0x28(%rsi), %rdx
000000010003bf94	movq	%rdx, -0x8(%rbp)
000000010003bf98	movq	0x20(%rsi), %rdx
000000010003bf9c	movq	%rdx, -0x10(%rbp)
000000010003bfa0	movq	0x18(%rsi), %rdx
000000010003bfa4	movq	%rdx, -0x18(%rbp)
000000010003bfa8	movq	0x10(%rsi), %rdx
000000010003bfac	movq	%rdx, -0x20(%rbp)
000000010003bfb0	movq	(%rsi), %rdx
000000010003bfb3	movq	0x8(%rsi), %rsi
000000010003bfb7	movq	%rsi, -0x28(%rbp)
000000010003bfbb	movq	%rdx, -0x30(%rbp)
000000010003bfbf	leaq	-0x30(%rbp), %rdx
000000010003bfc3	movq	%rax, %rdi
000000010003bfc6	movq	%rcx, %rsi
000000010003bfc9	callq	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003bfce	addq	$0x30, %rsp
000000010003bfd2	popq	%rbp
000000010003bfd3	retq
000000010003bfd4	nopw	%cs:(%rax,%rax)
000000010003bfde	nop
__ZN4core3fmt9Formatter9alternate17hc2243bb2c4eca803E:
000000010003bfe0	pushq	%rbp
000000010003bfe1	movq	%rsp, %rbp
000000010003bfe4	movzbl	0x34(%rdi), %eax
000000010003bfe8	andb	$0x4, %al
000000010003bfea	shrb	$0x2, %al
000000010003bfed	popq	%rbp
000000010003bfee	retq
000000010003bfef	nop
__ZN4core3fmt9Formatter15debug_lower_hex17h74a237fdb70eb1ddE:
000000010003bff0	pushq	%rbp
000000010003bff1	movq	%rsp, %rbp
000000010003bff4	movzbl	0x34(%rdi), %eax
000000010003bff8	andb	$0x10, %al
000000010003bffa	shrb	$0x4, %al
000000010003bffd	popq	%rbp
000000010003bffe	retq
000000010003bfff	nop
__ZN4core3fmt9Formatter15debug_upper_hex17h5639a4fa664d99f2E:
000000010003c000	pushq	%rbp
000000010003c001	movq	%rsp, %rbp
000000010003c004	movzbl	0x34(%rdi), %eax
000000010003c008	andb	$0x20, %al
000000010003c00a	shrb	$0x5, %al
000000010003c00d	popq	%rbp
000000010003c00e	retq
000000010003c00f	nop
__ZN4core3fmt9Formatter12debug_struct17h53b6b171d80fedffE:
000000010003c010	pushq	%rbp
000000010003c011	movq	%rsp, %rbp
000000010003c014	pushq	%r14
000000010003c016	pushq	%rbx
000000010003c017	movq	%rsi, %rbx
000000010003c01a	movq	%rdi, %r14
000000010003c01d	movq	0x20(%rsi), %rdi
000000010003c021	movq	0x28(%rsi), %rax
000000010003c025	movq	%rdx, %rsi
000000010003c028	movq	%rcx, %rdx
000000010003c02b	callq	*0x18(%rax)
000000010003c02e	movq	%rbx, (%r14)
000000010003c031	movb	%al, 0x8(%r14)
000000010003c035	movb	$0x0, 0x9(%r14)
000000010003c03a	movq	%r14, %rax
000000010003c03d	popq	%rbx
000000010003c03e	popq	%r14
000000010003c040	popq	%rbp
000000010003c041	retq
000000010003c042	nopw	%cs:(%rax,%rax)
000000010003c04c	nopl	(%rax)
__ZN4core3fmt9Formatter26debug_struct_field2_finish17h224cdebad454e5faE:
000000010003c050	pushq	%rbp
000000010003c051	movq	%rsp, %rbp
000000010003c054	pushq	%r15
000000010003c056	pushq	%r14
000000010003c058	pushq	%r13
000000010003c05a	pushq	%r12
000000010003c05c	pushq	%rbx
000000010003c05d	subq	$0x18, %rsp
000000010003c061	movq	%r9, %rbx
000000010003c064	movq	%r8, %r14
000000010003c067	movq	%rcx, %r15
000000010003c06a	movq	%rdi, %r12
000000010003c06d	movq	0x10(%rbp), %r13
000000010003c071	movq	0x20(%rdi), %rdi
000000010003c075	movq	0x28(%r12), %rax
000000010003c07a	callq	*0x18(%rax)
000000010003c07d	movq	%r12, -0x38(%rbp)
000000010003c081	movb	%al, -0x30(%rbp)
000000010003c084	movb	$0x0, -0x2f(%rbp)
000000010003c088	leaq	-0x38(%rbp), %r12
000000010003c08c	movq	%r12, %rdi
000000010003c08f	movq	%r15, %rsi
000000010003c092	movq	%r14, %rdx
000000010003c095	movq	%rbx, %rcx
000000010003c098	movq	%r13, %r8
000000010003c09b	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010003c0a0	movq	%r12, %rdi
000000010003c0a3	movq	0x18(%rbp), %rsi
000000010003c0a7	movq	0x20(%rbp), %rdx
000000010003c0ab	movq	0x28(%rbp), %rcx
000000010003c0af	movq	0x30(%rbp), %r8
000000010003c0b3	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010003c0b8	cmpb	$0x0, -0x2f(%rbp)
000000010003c0bc	movzbl	-0x30(%rbp), %eax
000000010003c0c0	je	0x10003c0ff
000000010003c0c2	testb	%al, %al
000000010003c0c4	movb	$0x1, %al
000000010003c0c6	jne	0x10003c0ff
000000010003c0c8	movq	-0x38(%rbp), %rax
000000010003c0cc	testb	$0x4, 0x34(%rax)
000000010003c0d0	jne	0x10003c0e8
000000010003c0d2	movq	0x20(%rax), %rdi
000000010003c0d6	movq	0x28(%rax), %rax
000000010003c0da	leaq	0xa800(%rip), %rsi
000000010003c0e1	movl	$0x2, %edx
000000010003c0e6	jmp	0x10003c0fc
000000010003c0e8	movq	0x20(%rax), %rdi
000000010003c0ec	movq	0x28(%rax), %rax
000000010003c0f0	leaq	0xa7e9(%rip), %rsi
000000010003c0f7	movl	$0x1, %edx
000000010003c0fc	callq	*0x18(%rax)
000000010003c0ff	addq	$0x18, %rsp
000000010003c103	popq	%rbx
000000010003c104	popq	%r12
000000010003c106	popq	%r13
000000010003c108	popq	%r14
000000010003c10a	popq	%r15
000000010003c10c	popq	%rbp
000000010003c10d	retq
000000010003c10e	nop
__ZN4core3fmt9Formatter11debug_tuple17habb12f7d8f2d3eb2E:
000000010003c110	pushq	%rbp
000000010003c111	movq	%rsp, %rbp
000000010003c114	pushq	%r15
000000010003c116	pushq	%r14
000000010003c118	pushq	%rbx
000000010003c119	pushq	%rax
000000010003c11a	movq	%rcx, %rbx
000000010003c11d	movq	%rsi, %r14
000000010003c120	movq	%rdi, %r15
000000010003c123	movq	0x20(%rsi), %rdi
000000010003c127	movq	0x28(%rsi), %rax
000000010003c12b	movq	%rdx, %rsi
000000010003c12e	movq	%rcx, %rdx
000000010003c131	callq	*0x18(%rax)
000000010003c134	testq	%rbx, %rbx
000000010003c137	movq	%r14, 0x8(%r15)
000000010003c13b	movb	%al, 0x10(%r15)
000000010003c13f	movq	$0x0, (%r15)
000000010003c146	sete	0x11(%r15)
000000010003c14b	movq	%r15, %rax
000000010003c14e	addq	$0x8, %rsp
000000010003c152	popq	%rbx
000000010003c153	popq	%r14
000000010003c155	popq	%r15
000000010003c157	popq	%rbp
000000010003c158	retq
000000010003c159	nopl	(%rax)
__ZN4core3fmt9Formatter25debug_tuple_field1_finish17h2bdcaa91cff1015bE:
000000010003c160	pushq	%rbp
000000010003c161	movq	%rsp, %rbp
000000010003c164	pushq	%r15
000000010003c166	pushq	%r14
000000010003c168	pushq	%r12
000000010003c16a	pushq	%rbx
000000010003c16b	subq	$0x20, %rsp
000000010003c16f	movq	%r8, %rbx
000000010003c172	movq	%rcx, %r14
000000010003c175	movq	%rdx, %r15
000000010003c178	movq	%rdi, %r12
000000010003c17b	movq	0x20(%rdi), %rdi
000000010003c17f	movq	0x28(%r12), %rax
000000010003c184	callq	*0x18(%rax)
000000010003c187	testq	%r15, %r15
000000010003c18a	movq	%r12, -0x30(%rbp)
000000010003c18e	movb	%al, -0x28(%rbp)
000000010003c191	movq	$0x0, -0x38(%rbp)
000000010003c199	sete	-0x27(%rbp)
000000010003c19d	leaq	-0x38(%rbp), %rdi
000000010003c1a1	movq	%r14, %rsi
000000010003c1a4	movq	%rbx, %rdx
000000010003c1a7	callq	__ZN4core3fmt8builders10DebugTuple5field17hde51ac2d3aad1932E ## core::fmt::builders::DebugTuple::field::hde51ac2d3aad1932
000000010003c1ac	movq	-0x38(%rbp), %rax
000000010003c1b0	movzbl	-0x28(%rbp), %ecx
000000010003c1b4	testq	%rax, %rax
000000010003c1b7	je	0x10003c20c
000000010003c1b9	movb	$0x1, %bl
000000010003c1bb	testb	%cl, %cl
000000010003c1bd	jne	0x10003c20e
000000010003c1bf	movq	-0x30(%rbp), %r14
000000010003c1c3	cmpq	$0x1, %rax
000000010003c1c7	jne	0x10003c1f1
000000010003c1c9	cmpb	$0x0, -0x27(%rbp)
000000010003c1cd	je	0x10003c1f1
000000010003c1cf	testb	$0x4, 0x34(%r14)
000000010003c1d4	jne	0x10003c1f1
000000010003c1d6	movq	0x20(%r14), %rdi
000000010003c1da	movq	0x28(%r14), %rax
000000010003c1de	leaq	0xa701(%rip), %rsi
000000010003c1e5	movl	$0x1, %edx
000000010003c1ea	callq	*0x18(%rax)
000000010003c1ed	testb	%al, %al
000000010003c1ef	jne	0x10003c20e
000000010003c1f1	movq	0x20(%r14), %rdi
000000010003c1f5	movq	0x28(%r14), %rax
000000010003c1f9	leaq	0xa59e(%rip), %rsi
000000010003c200	movl	$0x1, %edx
000000010003c205	callq	*0x18(%rax)
000000010003c208	movl	%eax, %ebx
000000010003c20a	jmp	0x10003c20e
000000010003c20c	movl	%ecx, %ebx
000000010003c20e	movl	%ebx, %eax
000000010003c210	addq	$0x20, %rsp
000000010003c214	popq	%rbx
000000010003c215	popq	%r12
000000010003c217	popq	%r14
000000010003c219	popq	%r15
000000010003c21b	popq	%rbp
000000010003c21c	retq
000000010003c21d	nopl	(%rax)
__ZN4core3fmt9Formatter25debug_tuple_field2_finish17h4bcc313ff9ca324cE:
000000010003c220	pushq	%rbp
000000010003c221	movq	%rsp, %rbp
000000010003c224	pushq	%r15
000000010003c226	pushq	%r14
000000010003c228	pushq	%r13
000000010003c22a	pushq	%r12
000000010003c22c	pushq	%rbx
000000010003c22d	subq	$0x18, %rsp
000000010003c231	movq	%r9, %rbx
000000010003c234	movq	%r8, %r14
000000010003c237	movq	%rcx, %r15
000000010003c23a	movq	%rdx, %r12
000000010003c23d	movq	%rdi, %r13
000000010003c240	movq	0x20(%rdi), %rdi
000000010003c244	movq	0x28(%r13), %rax
000000010003c248	callq	*0x18(%rax)
000000010003c24b	testq	%r12, %r12
000000010003c24e	movq	%r13, -0x38(%rbp)
000000010003c252	movb	%al, -0x30(%rbp)
000000010003c255	movq	$0x0, -0x40(%rbp)
000000010003c25d	sete	-0x2f(%rbp)
000000010003c261	leaq	-0x40(%rbp), %r12
000000010003c265	movq	%r12, %rdi
000000010003c268	movq	%r15, %rsi
000000010003c26b	movq	%r14, %rdx
000000010003c26e	callq	__ZN4core3fmt8builders10DebugTuple5field17hde51ac2d3aad1932E ## core::fmt::builders::DebugTuple::field::hde51ac2d3aad1932
000000010003c273	movq	%r12, %rdi
000000010003c276	movq	%rbx, %rsi
000000010003c279	movq	0x10(%rbp), %rdx
000000010003c27d	callq	__ZN4core3fmt8builders10DebugTuple5field17hde51ac2d3aad1932E ## core::fmt::builders::DebugTuple::field::hde51ac2d3aad1932
000000010003c282	movq	-0x40(%rbp), %rax
000000010003c286	movzbl	-0x30(%rbp), %ecx
000000010003c28a	testq	%rax, %rax
000000010003c28d	je	0x10003c2e2
000000010003c28f	movb	$0x1, %bl
000000010003c291	testb	%cl, %cl
000000010003c293	jne	0x10003c2e4
000000010003c295	movq	-0x38(%rbp), %r14
000000010003c299	cmpq	$0x1, %rax
000000010003c29d	jne	0x10003c2c7
000000010003c29f	cmpb	$0x0, -0x2f(%rbp)
000000010003c2a3	je	0x10003c2c7
000000010003c2a5	testb	$0x4, 0x34(%r14)
000000010003c2aa	jne	0x10003c2c7
000000010003c2ac	movq	0x20(%r14), %rdi
000000010003c2b0	movq	0x28(%r14), %rax
000000010003c2b4	leaq	0xa62b(%rip), %rsi
000000010003c2bb	movl	$0x1, %edx
000000010003c2c0	callq	*0x18(%rax)
000000010003c2c3	testb	%al, %al
000000010003c2c5	jne	0x10003c2e4
000000010003c2c7	movq	0x20(%r14), %rdi
000000010003c2cb	movq	0x28(%r14), %rax
000000010003c2cf	leaq	0xa4c8(%rip), %rsi
000000010003c2d6	movl	$0x1, %edx
000000010003c2db	callq	*0x18(%rax)
000000010003c2de	movl	%eax, %ebx
000000010003c2e0	jmp	0x10003c2e4
000000010003c2e2	movl	%ecx, %ebx
000000010003c2e4	movl	%ebx, %eax
000000010003c2e6	addq	$0x18, %rsp
000000010003c2ea	popq	%rbx
000000010003c2eb	popq	%r12
000000010003c2ed	popq	%r13
000000010003c2ef	popq	%r14
000000010003c2f1	popq	%r15
000000010003c2f3	popq	%rbp
000000010003c2f4	retq
000000010003c2f5	nopw	%cs:(%rax,%rax)
000000010003c2ff	nop
__ZN4core3fmt9Formatter10debug_list17hea453ad51fae0031E:
000000010003c300	pushq	%rbp
000000010003c301	movq	%rsp, %rbp
000000010003c304	pushq	%r14
000000010003c306	pushq	%rbx
000000010003c307	movq	%rsi, %rbx
000000010003c30a	movq	%rdi, %r14
000000010003c30d	movq	0x20(%rsi), %rdi
000000010003c311	movq	0x28(%rsi), %rax
000000010003c315	leaq	0xa4d0(%rip), %rsi
000000010003c31c	movl	$0x1, %edx
000000010003c321	callq	*0x18(%rax)
000000010003c324	movq	%rbx, (%r14)
000000010003c327	movb	%al, 0x8(%r14)
000000010003c32b	movb	$0x0, 0x9(%r14)
000000010003c330	movq	%r14, %rax
000000010003c333	popq	%rbx
000000010003c334	popq	%r14
000000010003c336	popq	%rbp
000000010003c337	retq
000000010003c338	nopl	(%rax,%rax)
__ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h20f333622ad58bf0E:
000000010003c340	pushq	%rbp
000000010003c341	movq	%rsp, %rbp
000000010003c344	movq	0x20(%rdi), %rax
000000010003c348	movq	0x28(%rdi), %rcx
000000010003c34c	movq	0x20(%rcx), %rcx
000000010003c350	movq	%rax, %rdi
000000010003c353	popq	%rbp
000000010003c354	jmpq	*%rcx
000000010003c356	nopw	%cs:(%rax,%rax)
__ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad51f5198b8b56bE:
000000010003c360	pushq	%rbp
000000010003c361	movq	%rsp, %rbp
000000010003c364	pushq	%r15
000000010003c366	pushq	%r14
000000010003c368	pushq	%r13
000000010003c36a	pushq	%r12
000000010003c36c	pushq	%rbx
000000010003c36d	subq	$0x68, %rsp
000000010003c371	movq	%rsi, %r13
000000010003c374	movq	%rdi, %r14
000000010003c377	movq	0x20(%rdx), %rbx
000000010003c37b	movq	0x28(%rdx), %r12
000000010003c37f	movq	0x20(%r12), %rax
000000010003c384	movq	%rbx, %rdi
000000010003c387	movl	$0x22, %esi
000000010003c38c	movq	%rax, -0x50(%rbp)
000000010003c390	callq	*%rax
000000010003c392	testb	%al, %al
000000010003c394	je	0x10003c3a7
000000010003c396	movb	$0x1, %al
000000010003c398	addq	$0x68, %rsp
000000010003c39c	popq	%rbx
000000010003c39d	popq	%r12
000000010003c39f	popq	%r13
000000010003c3a1	popq	%r14
000000010003c3a3	popq	%r15
000000010003c3a5	popq	%rbp
000000010003c3a6	retq
000000010003c3a7	testq	%r13, %r13
000000010003c3aa	je	0x10003c649
000000010003c3b0	movq	%r12, -0x70(%rbp)
000000010003c3b4	leaq	(%r14,%r13), %rax
000000010003c3b8	movq	%rax, -0x88(%rbp)
000000010003c3bf	xorl	%r15d, %r15d
000000010003c3c2	movq	%r14, %rcx
000000010003c3c5	xorl	%r12d, %r12d
000000010003c3c8	movq	%r14, -0x80(%rbp)
000000010003c3cc	movq	%r13, -0x78(%rbp)
000000010003c3d0	jmp	0x10003c406
000000010003c3d2	nopw	%cs:(%rax,%rax)
000000010003c3dc	nopl	(%rax)
000000010003c3e0	addq	%r12, %r15
000000010003c3e3	movq	-0x80(%rbp), %r14
000000010003c3e7	movq	-0x78(%rbp), %r13
000000010003c3eb	movq	-0x48(%rbp), %rax
000000010003c3ef	subq	%rax, %r12
000000010003c3f2	movq	-0x40(%rbp), %rcx
000000010003c3f6	addq	%rcx, %r12
000000010003c3f9	cmpq	-0x88(%rbp), %rcx
000000010003c400	je	0x10003c684
000000010003c406	movzbl	(%rcx), %edi
000000010003c409	testb	%dil, %dil
000000010003c40c	movq	%rcx, -0x48(%rbp)
000000010003c410	js	0x10003c430
000000010003c412	leaq	0x1(%rcx), %rax
000000010003c416	movq	%rax, -0x40(%rbp)
000000010003c41a	movl	%edi, %esi
000000010003c41c	jmp	0x10003c4b0
000000010003c421	nopw	%cs:(%rax,%rax)
000000010003c42b	nopl	(%rax,%rax)
000000010003c430	movl	%edi, %eax
000000010003c432	andl	$0x1f, %eax
000000010003c435	movzbl	0x1(%rcx), %edx
000000010003c439	andl	$0x3f, %edx
000000010003c43c	cmpb	$-0x21, %dil
000000010003c440	jbe	0x10003c485
000000010003c442	leaq	0x3(%rcx), %rsi
000000010003c446	movzbl	0x2(%rcx), %ecx
000000010003c44a	shll	$0x6, %edx
000000010003c44d	andl	$0x3f, %ecx
000000010003c450	orl	%edx, %ecx
000000010003c452	cmpb	$-0x10, %dil
000000010003c456	jb	0x10003c496
000000010003c458	movzbl	(%rsi), %esi
000000010003c45b	andl	$0x7, %eax
000000010003c45e	shll	$0x12, %eax
000000010003c461	shll	$0x6, %ecx
000000010003c464	andl	$0x3f, %esi
000000010003c467	orl	%ecx, %esi
000000010003c469	orl	%eax, %esi
000000010003c46b	cmpl	$0x110000, %esi                 ## imm = 0x110000
000000010003c471	je	0x10003c684
000000010003c477	movq	-0x48(%rbp), %rax
000000010003c47b	addq	$0x4, %rax
000000010003c47f	movq	%rax, -0x40(%rbp)
000000010003c483	jmp	0x10003c4b0
000000010003c485	addq	$0x2, %rcx
000000010003c489	movq	%rcx, -0x40(%rbp)
000000010003c48d	shll	$0x6, %eax
000000010003c490	orl	%edx, %eax
000000010003c492	movl	%eax, %esi
000000010003c494	jmp	0x10003c4b0
000000010003c496	movq	%rsi, -0x40(%rbp)
000000010003c49a	shll	$0xc, %eax
000000010003c49d	orl	%eax, %ecx
000000010003c49f	movl	%ecx, %esi
000000010003c4a1	nopw	%cs:(%rax,%rax)
000000010003c4ab	nopl	(%rax,%rax)
000000010003c4b0	leaq	-0x60(%rbp), %rdi
000000010003c4b4	movl	%esi, -0x64(%rbp)
000000010003c4b7	movl	$0x10001, %edx                  ## imm = 0x10001
000000010003c4bc	callq	__ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h99e3bb949009c8b4E ## core::char::methods::_$LT$impl$u20$char$GT$::escape_debug_ext::h99e3bb949009c8b4
000000010003c4c1	cmpb	$-0x80, -0x60(%rbp)
000000010003c4c5	je	0x10003c3eb
000000010003c4cb	movzbl	-0x55(%rbp), %eax
000000010003c4cf	subb	-0x56(%rbp), %al
000000010003c4d2	cmpb	$0x1, %al
000000010003c4d4	je	0x10003c3eb
000000010003c4da	movq	%r12, %rdx
000000010003c4dd	subq	%r15, %rdx
000000010003c4e0	jb	0x10003c6c4
000000010003c4e6	testq	%r15, %r15
000000010003c4e9	je	0x10003c502
000000010003c4eb	cmpq	%r13, %r15
000000010003c4ee	jae	0x10003c4fc
000000010003c4f0	cmpb	$-0x40, (%r14,%r15)
000000010003c4f5	jge	0x10003c502
000000010003c4f7	jmp	0x10003c6c4
000000010003c4fc	jne	0x10003c6c4
000000010003c502	testq	%r12, %r12
000000010003c505	je	0x10003c51e
000000010003c507	cmpq	%r13, %r12
000000010003c50a	jae	0x10003c518
000000010003c50c	cmpb	$-0x41, (%r14,%r12)
000000010003c511	jg	0x10003c51e
000000010003c513	jmp	0x10003c6c4
000000010003c518	jne	0x10003c6c4
000000010003c51e	addq	%r14, %r15
000000010003c521	movq	%rbx, %rdi
000000010003c524	movq	%r15, %rsi
000000010003c527	movq	-0x70(%rbp), %rax
000000010003c52b	callq	*0x18(%rax)
000000010003c52e	testb	%al, %al
000000010003c530	jne	0x10003c396
000000010003c536	movl	-0x58(%rbp), %eax
000000010003c539	movl	%eax, -0x30(%rbp)
000000010003c53c	movq	-0x60(%rbp), %rax
000000010003c540	movq	%rax, -0x38(%rbp)
000000010003c544	cmpb	$-0x80, %al
000000010003c546	jne	0x10003c5b0
000000010003c548	movb	$-0x80, %r14b
000000010003c54b	jmp	0x10003c573
000000010003c54d	nopl	(%rax)
000000010003c550	movl	-0x34(%rbp), %esi
000000010003c553	movl	$0x0, -0x30(%rbp)
000000010003c55a	movq	$0x0, -0x38(%rbp)
000000010003c562	xorl	%r14d, %r14d
000000010003c565	movq	%rbx, %rdi
000000010003c568	callq	*-0x50(%rbp)
000000010003c56b	testb	%al, %al
000000010003c56d	jne	0x10003c396
000000010003c573	cmpb	$-0x80, %r14b
000000010003c577	je	0x10003c550
000000010003c579	movzbl	-0x2e(%rbp), %r15d
000000010003c57e	cmpb	-0x2d(%rbp), %r15b
000000010003c582	jae	0x10003c610
000000010003c588	leal	0x1(%r15), %eax
000000010003c58c	movb	%al, -0x2e(%rbp)
000000010003c58f	cmpb	$0xa, %r15b
000000010003c593	jae	0x10003c6b0
000000010003c599	movzbl	-0x38(%rbp,%r15), %esi
000000010003c59f	jmp	0x10003c565
000000010003c5a1	nopw	%cs:(%rax,%rax)
000000010003c5ab	nopl	(%rax,%rax)
000000010003c5b0	movzbl	-0x2d(%rbp), %eax
000000010003c5b4	movzbl	-0x2e(%rbp), %r14d
000000010003c5b9	cmpb	%r14b, %al
000000010003c5bc	cmovbel	%r14d, %eax
000000010003c5c0	movzbl	%al, %r13d
000000010003c5c4	cmpb	$0xb, %r14b
000000010003c5c8	movl	$0xa, %r15d
000000010003c5ce	cmovael	%r14d, %r15d
000000010003c5d2	nopw	%cs:(%rax,%rax)
000000010003c5dc	nopl	(%rax)
000000010003c5e0	cmpq	%r14, %r13
000000010003c5e3	je	0x10003c610
000000010003c5e5	leal	0x1(%r14), %eax
000000010003c5e9	movb	%al, -0x2e(%rbp)
000000010003c5ec	cmpq	%r14, %r15
000000010003c5ef	je	0x10003c6b0
000000010003c5f5	movzbl	-0x38(%rbp,%r14), %esi
000000010003c5fb	movq	%rbx, %rdi
000000010003c5fe	callq	*-0x50(%rbp)
000000010003c601	incq	%r14
000000010003c604	testb	%al, %al
000000010003c606	je	0x10003c5e0
000000010003c608	jmp	0x10003c396
000000010003c60d	nopl	(%rax)
000000010003c610	movl	$0x1, %r15d
000000010003c616	movl	-0x64(%rbp), %eax
000000010003c619	cmpl	$0x80, %eax
000000010003c61e	jb	0x10003c3e0
000000010003c624	movl	$0x2, %r15d
000000010003c62a	cmpl	$0x800, %eax                    ## imm = 0x800
000000010003c62f	jb	0x10003c3e0
000000010003c635	cmpl	$0x10000, %eax                  ## imm = 0x10000
000000010003c63a	movl	$0x4, %r15d
000000010003c640	sbbq	$0x0, %r15
000000010003c644	jmp	0x10003c3e0
000000010003c649	xorl	%r15d, %r15d
000000010003c64c	xorl	%r13d, %r13d
000000010003c64f	addq	%r15, %r14
000000010003c652	movq	%rbx, %rdi
000000010003c655	movq	%r14, %rsi
000000010003c658	movq	%r13, %rdx
000000010003c65b	callq	*0x18(%r12)
000000010003c660	testb	%al, %al
000000010003c662	jne	0x10003c396
000000010003c668	movq	%rbx, %rdi
000000010003c66b	movl	$0x22, %esi
000000010003c670	movq	-0x50(%rbp), %rax
000000010003c674	addq	$0x68, %rsp
000000010003c678	popq	%rbx
000000010003c679	popq	%r12
000000010003c67b	popq	%r13
000000010003c67d	popq	%r14
000000010003c67f	popq	%r15
000000010003c681	popq	%rbp
000000010003c682	jmpq	*%rax
000000010003c684	testq	%r15, %r15
000000010003c687	movq	-0x70(%rbp), %r12
000000010003c68b	je	0x10003c69e
000000010003c68d	cmpq	%r13, %r15
000000010003c690	jae	0x10003c6a3
000000010003c692	cmpb	$-0x41, (%r14,%r15)
000000010003c697	jle	0x10003c6dc
000000010003c699	subq	%r15, %r13
000000010003c69c	jmp	0x10003c64f
000000010003c69e	xorl	%r15d, %r15d
000000010003c6a1	jmp	0x10003c64f
000000010003c6a3	movq	%r13, %rax
000000010003c6a6	subq	%r15, %rax
000000010003c6a9	jne	0x10003c6dc
000000010003c6ab	movq	%rax, %r13
000000010003c6ae	jmp	0x10003c64f
000000010003c6b0	leaq	0xdcf1(%rip), %rdx
000000010003c6b7	movl	$0xa, %esi
000000010003c6bc	movq	%r15, %rdi
000000010003c6bf	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003c6c4	leaq	0xda45(%rip), %r8
000000010003c6cb	movq	%r14, %rdi
000000010003c6ce	movq	%r13, %rsi
000000010003c6d1	movq	%r15, %rdx
000000010003c6d4	movq	%r12, %rcx
000000010003c6d7	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003c6dc	leaq	0xda15(%rip), %r8
000000010003c6e3	movq	%r14, %rdi
000000010003c6e6	movq	%r13, %rsi
000000010003c6e9	movq	%r15, %rdx
000000010003c6ec	movq	%r13, %rcx
000000010003c6ef	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003c6f4	nopw	%cs:(%rax,%rax)
000000010003c6fe	nop
__ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h26d707e39524d4efE:
000000010003c700	pushq	%rbp
000000010003c701	movq	%rsp, %rbp
000000010003c704	movq	%rdx, %rax
000000010003c707	movq	%rsi, %rdx
000000010003c70a	movq	%rdi, %rsi
000000010003c70d	movq	%rax, %rdi
000000010003c710	popq	%rbp
000000010003c711	jmp	__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE ## core::fmt::Formatter::pad::h699bd9f3561ce56c
000000010003c716	nopw	%cs:(%rax,%rax)
__ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c3a6ac0a6f4b647E:
000000010003c720	pushq	%rbp
000000010003c721	movq	%rsp, %rbp
000000010003c724	pushq	%r15
000000010003c726	pushq	%r14
000000010003c728	pushq	%r13
000000010003c72a	pushq	%r12
000000010003c72c	pushq	%rbx
000000010003c72d	subq	$0x18, %rsp
000000010003c731	movq	%rdi, %r14
000000010003c734	movq	0x20(%rsi), %rbx
000000010003c738	movq	0x28(%rsi), %rax
000000010003c73c	movq	0x20(%rax), %rax
000000010003c740	movq	%rbx, %rdi
000000010003c743	movl	$0x27, %esi
000000010003c748	movq	%rax, %r13
000000010003c74b	callq	*%rax
000000010003c74d	testb	%al, %al
000000010003c74f	je	0x10003c762
000000010003c751	movb	$0x1, %al
000000010003c753	addq	$0x18, %rsp
000000010003c757	popq	%rbx
000000010003c758	popq	%r12
000000010003c75a	popq	%r13
000000010003c75c	popq	%r14
000000010003c75e	popq	%r15
000000010003c760	popq	%rbp
000000010003c761	retq
000000010003c762	movl	(%r14), %esi
000000010003c765	leaq	-0x38(%rbp), %rdi
000000010003c769	movl	$0x101, %edx                    ## imm = 0x101
000000010003c76e	callq	__ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h99e3bb949009c8b4E ## core::char::methods::_$LT$impl$u20$char$GT$::escape_debug_ext::h99e3bb949009c8b4
000000010003c773	cmpb	$-0x80, -0x38(%rbp)
000000010003c777	jne	0x10003c7d6
000000010003c779	movb	$-0x80, %r15b
000000010003c77c	jmp	0x10003c79f
000000010003c77e	nop
000000010003c780	movl	-0x34(%rbp), %esi
000000010003c783	movl	$0x0, -0x30(%rbp)
000000010003c78a	movq	$0x0, -0x38(%rbp)
000000010003c792	xorl	%r15d, %r15d
000000010003c795	movq	%rbx, %rdi
000000010003c798	callq	*%r13
000000010003c79b	testb	%al, %al
000000010003c79d	jne	0x10003c751
000000010003c79f	cmpb	$-0x80, %r15b
000000010003c7a3	je	0x10003c780
000000010003c7a5	movzbl	-0x2e(%rbp), %r14d
000000010003c7aa	cmpb	-0x2d(%rbp), %r14b
000000010003c7ae	jae	0x10003c829
000000010003c7b0	leal	0x1(%r14), %eax
000000010003c7b4	movb	%al, -0x2e(%rbp)
000000010003c7b7	cmpb	$0xa, %r14b
000000010003c7bb	jae	0x10003c844
000000010003c7c1	movzbl	-0x38(%rbp,%r14), %esi
000000010003c7c7	movq	%rbx, %rdi
000000010003c7ca	callq	*%r13
000000010003c7cd	testb	%al, %al
000000010003c7cf	je	0x10003c79f
000000010003c7d1	jmp	0x10003c751
000000010003c7d6	movzbl	-0x2d(%rbp), %eax
000000010003c7da	movzbl	-0x2e(%rbp), %r15d
000000010003c7df	cmpb	%r15b, %al
000000010003c7e2	cmovbel	%r15d, %eax
000000010003c7e6	movzbl	%al, %r12d
000000010003c7ea	cmpb	$0xb, %r15b
000000010003c7ee	movl	$0xa, %r14d
000000010003c7f4	cmovael	%r15d, %r14d
000000010003c7f8	nopl	(%rax,%rax)
000000010003c800	cmpq	%r15, %r12
000000010003c803	je	0x10003c829
000000010003c805	leal	0x1(%r15), %eax
000000010003c809	movb	%al, -0x2e(%rbp)
000000010003c80c	cmpq	%r15, %r14
000000010003c80f	je	0x10003c844
000000010003c811	movzbl	-0x38(%rbp,%r15), %esi
000000010003c817	movq	%rbx, %rdi
000000010003c81a	callq	*%r13
000000010003c81d	incq	%r15
000000010003c820	testb	%al, %al
000000010003c822	je	0x10003c800
000000010003c824	jmp	0x10003c751
000000010003c829	movq	%rbx, %rdi
000000010003c82c	movl	$0x27, %esi
000000010003c831	movq	%r13, %rax
000000010003c834	addq	$0x18, %rsp
000000010003c838	popq	%rbx
000000010003c839	popq	%r12
000000010003c83b	popq	%r13
000000010003c83d	popq	%r14
000000010003c83f	popq	%r15
000000010003c841	popq	%rbp
000000010003c842	jmpq	*%rax
000000010003c844	leaq	0xdb5d(%rip), %rdx
000000010003c84b	movl	$0xa, %esi
000000010003c850	movq	%r14, %rdi
000000010003c853	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003c858	nopl	(%rax,%rax)
__ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h58c8d2487b4b288dE:
000000010003c860	pushq	%rbp
000000010003c861	movq	%rsp, %rbp
000000010003c864	subq	$0x10, %rsp
000000010003c868	movq	(%rsi), %rax
000000010003c86b	orq	0x10(%rsi), %rax
000000010003c86f	movl	(%rdi), %eax
000000010003c871	jne	0x10003c888
000000010003c873	movq	0x20(%rsi), %rdi
000000010003c877	movq	0x28(%rsi), %rcx
000000010003c87b	movq	0x20(%rcx), %rcx
000000010003c87f	movl	%eax, %esi
000000010003c881	addq	$0x10, %rsp
000000010003c885	popq	%rbp
000000010003c886	jmpq	*%rcx
000000010003c888	movl	$0x0, -0x4(%rbp)
000000010003c88f	cmpl	$0x80, %eax
000000010003c894	jae	0x10003c8a0
000000010003c896	movb	%al, -0x4(%rbp)
000000010003c899	movl	$0x1, %edx
000000010003c89e	jmp	0x10003c91d
000000010003c8a0	movl	%eax, %ecx
000000010003c8a2	cmpl	$0x800, %eax                    ## imm = 0x800
000000010003c8a7	jae	0x10003c8c0
000000010003c8a9	shrl	$0x6, %ecx
000000010003c8ac	orb	$-0x40, %cl
000000010003c8af	movb	%cl, -0x4(%rbp)
000000010003c8b2	andb	$0x3f, %al
000000010003c8b4	orb	$-0x80, %al
000000010003c8b6	movb	%al, -0x3(%rbp)
000000010003c8b9	movl	$0x2, %edx
000000010003c8be	jmp	0x10003c91d
000000010003c8c0	cmpl	$0x10000, %eax                  ## imm = 0x10000
000000010003c8c5	jae	0x10003c8ec
000000010003c8c7	shrl	$0xc, %ecx
000000010003c8ca	orb	$-0x20, %cl
000000010003c8cd	movb	%cl, -0x4(%rbp)
000000010003c8d0	movl	%eax, %ecx
000000010003c8d2	shrl	$0x6, %ecx
000000010003c8d5	andb	$0x3f, %cl
000000010003c8d8	orb	$-0x80, %cl
000000010003c8db	movb	%cl, -0x3(%rbp)
000000010003c8de	andb	$0x3f, %al
000000010003c8e0	orb	$-0x80, %al
000000010003c8e2	movb	%al, -0x2(%rbp)
000000010003c8e5	movl	$0x3, %edx
000000010003c8ea	jmp	0x10003c91d
000000010003c8ec	shrl	$0x12, %ecx
000000010003c8ef	orb	$-0x10, %cl
000000010003c8f2	movb	%cl, -0x4(%rbp)
000000010003c8f5	movl	%eax, %ecx
000000010003c8f7	shrl	$0xc, %ecx
000000010003c8fa	andb	$0x3f, %cl
000000010003c8fd	orb	$-0x80, %cl
000000010003c900	movb	%cl, -0x3(%rbp)
000000010003c903	movl	%eax, %ecx
000000010003c905	shrl	$0x6, %ecx
000000010003c908	andb	$0x3f, %cl
000000010003c90b	orb	$-0x80, %cl
000000010003c90e	movb	%cl, -0x2(%rbp)
000000010003c911	andb	$0x3f, %al
000000010003c913	orb	$-0x80, %al
000000010003c915	movb	%al, -0x1(%rbp)
000000010003c918	movl	$0x4, %edx
000000010003c91d	leaq	-0x4(%rbp), %rax
000000010003c921	movq	%rsi, %rdi
000000010003c924	movq	%rax, %rsi
000000010003c927	callq	__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE ## core::fmt::Formatter::pad::h699bd9f3561ce56c
000000010003c92c	addq	$0x10, %rsp
000000010003c930	popq	%rbp
000000010003c931	retq
000000010003c932	nopw	%cs:(%rax,%rax)
000000010003c93c	nopl	(%rax)
__ZN4core3fmt17pointer_fmt_inner17h0b3b0e8b0f148988E:
000000010003c940	pushq	%rbp
000000010003c941	movq	%rsp, %rbp
000000010003c944	pushq	%r14
000000010003c946	pushq	%rbx
000000010003c947	subq	$0x90, %rsp
000000010003c94e	movq	%rsi, %rbx
000000010003c951	movdqu	(%rsi), %xmm0
000000010003c955	movl	0x34(%rsi), %r14d
000000010003c959	movl	%r14d, %eax
000000010003c95c	testb	$0x4, %r14b
000000010003c960	je	0x10003c981
000000010003c962	movl	%r14d, %eax
000000010003c965	orl	$0x8, %eax
000000010003c968	movq	%xmm0, %rcx
000000010003c96d	testq	%rcx, %rcx
000000010003c970	jne	0x10003c981
000000010003c972	movq	$0x1, (%rbx)
000000010003c979	movq	$0x12, 0x8(%rbx)
000000010003c981	orl	$0x4, %eax
000000010003c984	movl	%eax, 0x34(%rbx)
000000010003c987	leaq	-0x20(%rbp), %r8
000000010003c98b	xorl	%r9d, %r9d
000000010003c98e	movl	$0x30, %eax
000000010003c993	movq	%rdi, %rcx
000000010003c996	nopw	%cs:(%rax,%rax)
000000010003c9a0	shrq	$0x4, %rcx
000000010003c9a4	movl	%edi, %edx
000000010003c9a6	andb	$0xf, %dl
000000010003c9a9	cmpb	$0xa, %dl
000000010003c9ac	movl	$0x57, %esi
000000010003c9b1	cmovbl	%eax, %esi
000000010003c9b4	addb	%dl, %sil
000000010003c9b7	movb	%sil, -0x1(%r8)
000000010003c9bb	decq	%r8
000000010003c9be	incq	%r9
000000010003c9c1	cmpq	$0x10, %rdi
000000010003c9c5	movq	%rcx, %rdi
000000010003c9c8	jae	0x10003c9a0
000000010003c9ca	movdqa	%xmm0, -0x20(%rbp)
000000010003c9cf	movl	$0x80, %edi
000000010003c9d4	subq	%r9, %rdi
000000010003c9d7	cmpq	$0x81, %rdi
000000010003c9de	jae	0x10003ca10
000000010003c9e0	leaq	0x9f20(%rip), %rdx
000000010003c9e7	movl	$0x2, %ecx
000000010003c9ec	movq	%rbx, %rdi
000000010003c9ef	movl	$0x1, %esi
000000010003c9f4	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003c9f9	movaps	-0x20(%rbp), %xmm0
000000010003c9fd	movups	%xmm0, (%rbx)
000000010003ca00	movl	%r14d, 0x34(%rbx)
000000010003ca04	addq	$0x90, %rsp
000000010003ca0b	popq	%rbx
000000010003ca0c	popq	%r14
000000010003ca0e	popq	%rbp
000000010003ca0f	retq
000000010003ca10	leaq	0xd691(%rip), %rdx
000000010003ca17	movl	$0x80, %esi
000000010003ca1c	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003ca21	nopw	%cs:(%rax,%rax)
000000010003ca2b	nopl	(%rax,%rax)
__ZN4core5slice6memchr14memchr_aligned17hab88d30e96119121E:
000000010003ca30	pushq	%rbp
000000010003ca31	movq	%rsp, %rbp
000000010003ca34	pushq	%rbx
000000010003ca35	leaq	0x7(%rsi), %r8
000000010003ca39	andq	$-0x8, %r8
000000010003ca3d	subq	%rsi, %r8
000000010003ca40	je	0x10003ca6d
000000010003ca42	cmpq	%rdx, %r8
000000010003ca45	cmovaeq	%rdx, %r8
000000010003ca49	testq	%r8, %r8
000000010003ca4c	je	0x10003ca6d
000000010003ca4e	xorl	%ecx, %ecx
000000010003ca50	cmpb	%dil, (%rsi,%rcx)
000000010003ca54	je	0x10003cb15
000000010003ca5a	incq	%rcx
000000010003ca5d	cmpq	%rcx, %r8
000000010003ca60	jne	0x10003ca50
000000010003ca62	leaq	-0x10(%rdx), %rax
000000010003ca66	cmpq	%rax, %r8
000000010003ca69	jbe	0x10003ca74
000000010003ca6b	jmp	0x10003cada
000000010003ca6d	leaq	-0x10(%rdx), %rax
000000010003ca71	xorl	%r8d, %r8d
000000010003ca74	movabsq	$-0x101010101010101, %rcx       ## imm = 0xFEFEFEFEFEFEFEFF
000000010003ca7e	movabsq	$-0x7f7f7f7f7f7f7f80, %r9       ## imm = 0x8080808080808080
000000010003ca88	movzbl	%dil, %r11d
000000010003ca8c	movabsq	$0x101010101010101, %r10        ## imm = 0x101010101010101
000000010003ca96	imulq	%r11, %r10
000000010003ca9a	nopw	(%rax,%rax)
000000010003caa0	movq	(%rsi,%r8), %r11
000000010003caa4	xorq	%r10, %r11
000000010003caa7	movq	%r11, %rbx
000000010003caaa	notq	%rbx
000000010003caad	addq	%rcx, %r11
000000010003cab0	andq	%r9, %rbx
000000010003cab3	testq	%r11, %rbx
000000010003cab6	jne	0x10003cada
000000010003cab8	movq	0x8(%rsi,%r8), %r11
000000010003cabd	xorq	%r10, %r11
000000010003cac0	movq	%r11, %rbx
000000010003cac3	notq	%rbx
000000010003cac6	addq	%rcx, %r11
000000010003cac9	andq	%r9, %rbx
000000010003cacc	testq	%r11, %rbx
000000010003cacf	jne	0x10003cada
000000010003cad1	addq	$0x10, %r8
000000010003cad5	cmpq	%rax, %r8
000000010003cad8	jbe	0x10003caa0
000000010003cada	xorl	%eax, %eax
000000010003cadc	cmpq	%rdx, %r8
000000010003cadf	je	0x10003cafe
000000010003cae1	nopw	%cs:(%rax,%rax)
000000010003caeb	nopl	(%rax,%rax)
000000010003caf0	cmpb	%dil, (%rsi,%r8)
000000010003caf4	je	0x10003cb07
000000010003caf6	incq	%r8
000000010003caf9	cmpq	%r8, %rdx
000000010003cafc	jne	0x10003caf0
000000010003cafe	movq	%rdx, %rcx
000000010003cb01	movq	%rcx, %rdx
000000010003cb04	popq	%rbx
000000010003cb05	popq	%rbp
000000010003cb06	retq
000000010003cb07	movl	$0x1, %eax
000000010003cb0c	movq	%r8, %rcx
000000010003cb0f	movq	%rcx, %rdx
000000010003cb12	popq	%rbx
000000010003cb13	popq	%rbp
000000010003cb14	retq
000000010003cb15	movl	$0x1, %eax
000000010003cb1a	movq	%rcx, %rdx
000000010003cb1d	popq	%rbx
000000010003cb1e	popq	%rbp
000000010003cb1f	retq
__ZN4core5slice6memchr7memrchr17hdf86f1da36afe5e5E:
000000010003cb20	pushq	%rbp
000000010003cb21	movq	%rsp, %rbp
000000010003cb24	pushq	%r14
000000010003cb26	pushq	%rbx
000000010003cb27	leaq	0x7(%rsi), %rax
000000010003cb2b	andq	$-0x8, %rax
000000010003cb2f	subq	%rsi, %rax
000000010003cb32	movq	%rdx, %rcx
000000010003cb35	subq	%rax, %rcx
000000010003cb38	andl	$0xf, %ecx
000000010003cb3b	xorl	%r8d, %r8d
000000010003cb3e	cmpq	%rax, %rdx
000000010003cb41	cmovbeq	%rdx, %rax
000000010003cb45	cmovaeq	%rcx, %r8
000000010003cb49	movq	%rdx, %rcx
000000010003cb4c	subq	%r8, %rcx
000000010003cb4f	jb	0x10003cc22
000000010003cb55	leaq	-0x1(%rdx,%rsi), %r10
000000010003cb5a	xorl	%r9d, %r9d
000000010003cb5d	nopl	(%rax)
000000010003cb60	cmpq	%r9, %r8
000000010003cb63	je	0x10003cb7c
000000010003cb65	leaq	-0x1(%r10), %r11
000000010003cb69	incq	%r9
000000010003cb6c	cmpb	%dil, (%r10)
000000010003cb6f	movq	%r11, %r10
000000010003cb72	jne	0x10003cb60
000000010003cb74	subq	%r9, %rdx
000000010003cb77	jmp	0x10003cc13
000000010003cb7c	movabsq	$-0x101010101010101, %r9        ## imm = 0xFEFEFEFEFEFEFEFF
000000010003cb86	movabsq	$-0x7f7f7f7f7f7f7f80, %r10      ## imm = 0x8080808080808080
000000010003cb90	movzbl	%dil, %r8d
000000010003cb94	movabsq	$0x101010101010101, %r11        ## imm = 0x101010101010101
000000010003cb9e	imulq	%r8, %r11
000000010003cba2	nopw	%cs:(%rax,%rax)
000000010003cbac	nopl	(%rax)
000000010003cbb0	movq	%rcx, %r8
000000010003cbb3	cmpq	%rax, %rcx
000000010003cbb6	jbe	0x10003cbee
000000010003cbb8	movq	-0x10(%rsi,%r8), %rcx
000000010003cbbd	xorq	%r11, %rcx
000000010003cbc0	movq	%rcx, %rbx
000000010003cbc3	notq	%rbx
000000010003cbc6	addq	%r9, %rcx
000000010003cbc9	andq	%r10, %rbx
000000010003cbcc	testq	%rcx, %rbx
000000010003cbcf	jne	0x10003cbee
000000010003cbd1	movq	-0x8(%rsi,%r8), %rbx
000000010003cbd6	xorq	%r11, %rbx
000000010003cbd9	movq	%rbx, %r14
000000010003cbdc	notq	%r14
000000010003cbdf	addq	%r9, %rbx
000000010003cbe2	andq	%r10, %r14
000000010003cbe5	leaq	-0x10(%r8), %rcx
000000010003cbe9	testq	%rbx, %r14
000000010003cbec	je	0x10003cbb0
000000010003cbee	cmpq	%rdx, %r8
000000010003cbf1	ja	0x10003cc37
000000010003cbf3	xorl	%eax, %eax
000000010003cbf5	nopw	%cs:(%rax,%rax)
000000010003cbff	nop
000000010003cc00	testq	%r8, %r8
000000010003cc03	je	0x10003cc1d
000000010003cc05	leaq	-0x1(%r8), %rdx
000000010003cc09	cmpb	%dil, -0x1(%rsi,%r8)
000000010003cc0e	movq	%rdx, %r8
000000010003cc11	jne	0x10003cc00
000000010003cc13	movl	$0x1, %eax
000000010003cc18	popq	%rbx
000000010003cc19	popq	%r14
000000010003cc1b	popq	%rbp
000000010003cc1c	retq
000000010003cc1d	popq	%rbx
000000010003cc1e	popq	%r14
000000010003cc20	popq	%rbp
000000010003cc21	retq
000000010003cc22	leaq	0xd4ff(%rip), %rax
000000010003cc29	movq	%rcx, %rdi
000000010003cc2c	movq	%rdx, %rsi
000000010003cc2f	movq	%rax, %rdx
000000010003cc32	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003cc37	leaq	0xd502(%rip), %rax
000000010003cc3e	movq	%r8, %rdi
000000010003cc41	movq	%rdx, %rsi
000000010003cc44	movq	%rax, %rdx
000000010003cc47	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010003cc4c	nopl	(%rax)
__ZN4core3str8converts9from_utf817h1af6699b7ded4823E:
000000010003cc50	pushq	%rbp
000000010003cc51	movq	%rsp, %rbp
000000010003cc54	pushq	%r15
000000010003cc56	pushq	%r14
000000010003cc58	pushq	%rbx
000000010003cc59	movq	%rdi, %rax
000000010003cc5c	xorl	%edi, %edi
000000010003cc5e	movq	%rdx, %rcx
000000010003cc61	subq	$0xf, %rcx
000000010003cc65	cmovaeq	%rcx, %rdi
000000010003cc69	testq	%rdx, %rdx
000000010003cc6c	je	0x10003ce2f
000000010003cc72	leaq	0x7(%rsi), %r8
000000010003cc76	andq	$-0x8, %r8
000000010003cc7a	subq	%rsi, %r8
000000010003cc7d	xorl	%ecx, %ecx
000000010003cc7f	leaq	0x9e02(%rip), %r9
000000010003cc86	movabsq	$-0x7f7f7f7f7f7f7f80, %r10      ## imm = 0x8080808080808080
000000010003cc90	jmp	0x10003ccaf
000000010003cc92	nopw	%cs:(%rax,%rax)
000000010003cc9c	nopl	(%rax)
000000010003cca0	incq	%r14
000000010003cca3	movq	%r14, %rcx
000000010003cca6	cmpq	%rdx, %rcx
000000010003cca9	jae	0x10003ce2f
000000010003ccaf	movzbl	(%rsi,%rcx), %ebx
000000010003ccb3	testb	%bl, %bl
000000010003ccb5	js	0x10003cd20
000000010003ccb7	movl	%r8d, %r11d
000000010003ccba	subl	%ecx, %r11d
000000010003ccbd	testb	$0x7, %r11b
000000010003ccc1	je	0x10003ccd4
000000010003ccc3	incq	%rcx
000000010003ccc6	jmp	0x10003cca6
000000010003ccc8	nopl	(%rax,%rax)
000000010003ccd0	addq	$0x10, %rcx
000000010003ccd4	cmpq	%rdi, %rcx
000000010003ccd7	jae	0x10003ccf0
000000010003ccd9	testq	%r10, (%rsi,%rcx)
000000010003ccdd	jne	0x10003ccf0
000000010003ccdf	testq	%r10, 0x8(%rsi,%rcx)
000000010003cce4	je	0x10003ccd0
000000010003cce6	nopw	%cs:(%rax,%rax)
000000010003ccf0	cmpq	%rdx, %rcx
000000010003ccf3	jae	0x10003cca6
000000010003ccf5	nopw	%cs:(%rax,%rax)
000000010003ccff	nop
000000010003cd00	cmpb	$0x0, (%rsi,%rcx)
000000010003cd04	js	0x10003cca6
000000010003cd06	incq	%rcx
000000010003cd09	cmpq	%rcx, %rdx
000000010003cd0c	jne	0x10003cd00
000000010003cd0e	jmp	0x10003ce2f
000000010003cd13	nopw	%cs:(%rax,%rax)
000000010003cd1d	nopl	(%rax)
000000010003cd20	movzbl	(%rbx,%r9), %r14d
000000010003cd25	movb	$0x1, %r11b
000000010003cd28	cmpl	$0x4, %r14d
000000010003cd2c	je	0x10003cd5d
000000010003cd2e	cmpl	$0x3, %r14d
000000010003cd32	je	0x10003cd87
000000010003cd34	cmpl	$0x2, %r14d
000000010003cd38	jne	0x10003ce40
000000010003cd3e	leaq	0x1(%rcx), %r14
000000010003cd42	cmpq	%rdx, %r14
000000010003cd45	jae	0x10003ce3b
000000010003cd4b	cmpb	$-0x41, (%rsi,%r14)
000000010003cd50	movb	$0x1, %bl
000000010003cd52	jle	0x10003cca0
000000010003cd58	jmp	0x10003ce46
000000010003cd5d	leaq	0x1(%rcx), %r14
000000010003cd61	cmpq	%rdx, %r14
000000010003cd64	jae	0x10003ce3b
000000010003cd6a	movzbl	(%rsi,%r14), %r14d
000000010003cd6f	cmpb	$-0x10, %bl
000000010003cd72	je	0x10003cdb1
000000010003cd74	cmpl	$0xf4, %ebx
000000010003cd7a	jne	0x10003cdc0
000000010003cd7c	cmpb	$-0x71, %r14b
000000010003cd80	jle	0x10003cdce
000000010003cd82	jmp	0x10003ce40
000000010003cd87	leaq	0x1(%rcx), %r14
000000010003cd8b	cmpq	%rdx, %r14
000000010003cd8e	jae	0x10003ce3b
000000010003cd94	movzbl	(%rsi,%r14), %r14d
000000010003cd99	cmpb	$-0x20, %bl
000000010003cd9c	je	0x10003cdf3
000000010003cd9e	cmpl	$0xed, %ebx
000000010003cda4	jne	0x10003cdff
000000010003cda6	cmpb	$-0x61, %r14b
000000010003cdaa	jle	0x10003ce17
000000010003cdac	jmp	0x10003ce40
000000010003cdb1	addb	$0x70, %r14b
000000010003cdb5	cmpb	$0x30, %r14b
000000010003cdb9	jb	0x10003cdce
000000010003cdbb	jmp	0x10003ce40
000000010003cdc0	addb	$0xf, %bl
000000010003cdc3	cmpb	$0x2, %bl
000000010003cdc6	ja	0x10003ce40
000000010003cdc8	cmpb	$-0x40, %r14b
000000010003cdcc	jge	0x10003ce40
000000010003cdce	leaq	0x2(%rcx), %rbx
000000010003cdd2	cmpq	%rdx, %rbx
000000010003cdd5	jae	0x10003ce3b
000000010003cdd7	cmpb	$-0x41, (%rsi,%rbx)
000000010003cddb	jg	0x10003ce2b
000000010003cddd	leaq	0x3(%rcx), %r14
000000010003cde1	cmpq	%rdx, %r14
000000010003cde4	jae	0x10003ce3b
000000010003cde6	cmpb	$-0x41, (%rsi,%r14)
000000010003cdeb	jle	0x10003cca0
000000010003cdf1	jmp	0x10003ce44
000000010003cdf3	andb	$-0x20, %r14b
000000010003cdf7	cmpb	$-0x60, %r14b
000000010003cdfb	je	0x10003ce17
000000010003cdfd	jmp	0x10003ce40
000000010003cdff	leal	0x1f(%rbx), %r15d
000000010003ce03	cmpb	$0xc, %r15b
000000010003ce07	jb	0x10003ce11
000000010003ce09	andb	$-0x2, %bl
000000010003ce0c	cmpb	$-0x12, %bl
000000010003ce0f	jne	0x10003ce40
000000010003ce11	cmpb	$-0x40, %r14b
000000010003ce15	jge	0x10003ce40
000000010003ce17	leaq	0x2(%rcx), %r14
000000010003ce1b	cmpq	%rdx, %r14
000000010003ce1e	jae	0x10003ce3b
000000010003ce20	cmpb	$-0x41, (%rsi,%r14)
000000010003ce25	jle	0x10003cca0
000000010003ce2b	movb	$0x2, %bl
000000010003ce2d	jmp	0x10003ce46
000000010003ce2f	movq	%rsi, 0x8(%rax)
000000010003ce33	movq	%rdx, 0x10(%rax)
000000010003ce37	xorl	%ecx, %ecx
000000010003ce39	jmp	0x10003ce56
000000010003ce3b	xorl	%r11d, %r11d
000000010003ce3e	jmp	0x10003ce46
000000010003ce40	movb	$0x1, %bl
000000010003ce42	jmp	0x10003ce46
000000010003ce44	movb	$0x3, %bl
000000010003ce46	movq	%rcx, 0x8(%rax)
000000010003ce4a	movb	%r11b, 0x10(%rax)
000000010003ce4e	movb	%bl, 0x11(%rax)
000000010003ce51	movl	$0x1, %ecx
000000010003ce56	movq	%rcx, (%rax)
000000010003ce59	popq	%rbx
000000010003ce5a	popq	%r14
000000010003ce5c	popq	%r15
000000010003ce5e	popq	%rbp
000000010003ce5f	retq
__ZN4core3str5count14do_count_chars17h76e3cfb00548d338E:
000000010003ce60	pushq	%rbp
000000010003ce61	movq	%rsp, %rbp
000000010003ce64	pushq	%r15
000000010003ce66	pushq	%r14
000000010003ce68	pushq	%rbx
000000010003ce69	leaq	0x7(%rdi), %r8
000000010003ce6d	andq	$-0x8, %r8
000000010003ce71	movq	%r8, %rdx
000000010003ce74	subq	%rdi, %rdx
000000010003ce77	cmpq	%rsi, %rdx
000000010003ce7a	ja	0x10003ce88
000000010003ce7c	movq	%rsi, %rcx
000000010003ce7f	subq	%rdx, %rcx
000000010003ce82	cmpq	$0x8, %rcx
000000010003ce86	jae	0x10003cea3
000000010003ce88	testq	%rsi, %rsi
000000010003ce8b	je	0x10003ce9c
000000010003ce8d	cmpq	$0x4, %rsi
000000010003ce91	jae	0x10003ceb8
000000010003ce93	xorl	%ecx, %ecx
000000010003ce95	xorl	%eax, %eax
000000010003ce97	jmp	0x10003cf50
000000010003ce9c	xorl	%eax, %eax
000000010003ce9e	jmp	0x10003d252
000000010003cea3	movl	%ecx, %eax
000000010003cea5	andl	$0x7, %eax
000000010003cea8	cmpq	%rdi, %r8
000000010003ceab	jne	0x10003cf69
000000010003ceb1	xorl	%esi, %esi
000000010003ceb3	jmp	0x10003d01b
000000010003ceb8	movq	%rsi, %rcx
000000010003cebb	andq	$-0x4, %rcx
000000010003cebf	pxor	%xmm0, %xmm0
000000010003cec3	xorl	%eax, %eax
000000010003cec5	movdqa	0x9763(%rip), %xmm2
000000010003cecd	movdqa	0x976b(%rip), %xmm3
000000010003ced5	movdqa	0x9773(%rip), %xmm4
000000010003cedd	pxor	%xmm1, %xmm1
000000010003cee1	nopw	%cs:(%rax,%rax)
000000010003ceeb	nopl	(%rax,%rax)
000000010003cef0	movzwl	(%rdi,%rax), %edx
000000010003cef4	movd	%edx, %xmm5
000000010003cef8	movzwl	0x2(%rdi,%rax), %edx
000000010003cefd	movd	%edx, %xmm6
000000010003cf01	pcmpgtb	%xmm2, %xmm5
000000010003cf05	pshufb	%xmm3, %xmm5
000000010003cf0a	pand	%xmm4, %xmm5
000000010003cf0e	paddq	%xmm5, %xmm0
000000010003cf12	pcmpgtb	%xmm2, %xmm6
000000010003cf16	pshufb	%xmm3, %xmm6
000000010003cf1b	pand	%xmm4, %xmm6
000000010003cf1f	paddq	%xmm6, %xmm1
000000010003cf23	addq	$0x4, %rax
000000010003cf27	cmpq	%rax, %rcx
000000010003cf2a	jne	0x10003cef0
000000010003cf2c	paddq	%xmm0, %xmm1
000000010003cf30	pshufd	$0xee, %xmm1, %xmm0             ## xmm0 = xmm1[2,3,2,3]
000000010003cf35	paddq	%xmm1, %xmm0
000000010003cf39	movq	%xmm0, %rax
000000010003cf3e	cmpq	%rsi, %rcx
000000010003cf41	je	0x10003d252
000000010003cf47	nopw	(%rax,%rax)
000000010003cf50	xorl	%edx, %edx
000000010003cf52	cmpb	$-0x40, (%rdi,%rcx)
000000010003cf56	setge	%dl
000000010003cf59	addq	%rdx, %rax
000000010003cf5c	incq	%rcx
000000010003cf5f	cmpq	%rcx, %rsi
000000010003cf62	jne	0x10003cf50
000000010003cf64	jmp	0x10003d252
000000010003cf69	cmpq	$0x4, %rdx
000000010003cf6d	jae	0x10003cf79
000000010003cf6f	xorl	%r8d, %r8d
000000010003cf72	xorl	%esi, %esi
000000010003cf74	jmp	0x10003d004
000000010003cf79	movq	%rdx, %r8
000000010003cf7c	andq	$-0x4, %r8
000000010003cf80	pxor	%xmm0, %xmm0
000000010003cf84	xorl	%esi, %esi
000000010003cf86	movdqa	0x96a2(%rip), %xmm2
000000010003cf8e	movdqa	0x96aa(%rip), %xmm3
000000010003cf96	movdqa	0x96b2(%rip), %xmm4
000000010003cf9e	pxor	%xmm1, %xmm1
000000010003cfa2	nopw	%cs:(%rax,%rax)
000000010003cfac	nopl	(%rax)
000000010003cfb0	movzwl	(%rdi,%rsi), %r9d
000000010003cfb5	movd	%r9d, %xmm5
000000010003cfba	movzwl	0x2(%rdi,%rsi), %r9d
000000010003cfc0	movd	%r9d, %xmm6
000000010003cfc5	pcmpgtb	%xmm2, %xmm5
000000010003cfc9	pshufb	%xmm3, %xmm5
000000010003cfce	pand	%xmm4, %xmm5
000000010003cfd2	paddq	%xmm5, %xmm0
000000010003cfd6	pcmpgtb	%xmm2, %xmm6
000000010003cfda	pshufb	%xmm3, %xmm6
000000010003cfdf	pand	%xmm4, %xmm6
000000010003cfe3	paddq	%xmm6, %xmm1
000000010003cfe7	addq	$0x4, %rsi
000000010003cfeb	cmpq	%rsi, %r8
000000010003cfee	jne	0x10003cfb0
000000010003cff0	paddq	%xmm0, %xmm1
000000010003cff4	pshufd	$0xee, %xmm1, %xmm0             ## xmm0 = xmm1[2,3,2,3]
000000010003cff9	paddq	%xmm1, %xmm0
000000010003cffd	movq	%xmm0, %rsi
000000010003d002	jmp	0x10003d016
000000010003d004	xorl	%r9d, %r9d
000000010003d007	cmpb	$-0x40, (%rdi,%r8)
000000010003d00c	setge	%r9b
000000010003d010	addq	%r9, %rsi
000000010003d013	incq	%r8
000000010003d016	cmpq	%r8, %rdx
000000010003d019	jne	0x10003d004
000000010003d01b	addq	%rdx, %rdi
000000010003d01e	testq	%rax, %rax
000000010003d021	je	0x10003d0b6
000000010003d027	movq	%rcx, %r8
000000010003d02a	andq	$-0x8, %r8
000000010003d02e	xorl	%edx, %edx
000000010003d030	cmpb	$-0x40, (%rdi,%r8)
000000010003d035	setge	%dl
000000010003d038	cmpl	$0x1, %eax
000000010003d03b	je	0x10003d0b8
000000010003d03d	xorl	%r9d, %r9d
000000010003d040	cmpb	$-0x40, 0x1(%rdi,%r8)
000000010003d046	setge	%r9b
000000010003d04a	addq	%r9, %rdx
000000010003d04d	cmpl	$0x2, %eax
000000010003d050	je	0x10003d0b8
000000010003d052	xorl	%r9d, %r9d
000000010003d055	cmpb	$-0x40, 0x2(%rdi,%r8)
000000010003d05b	setge	%r9b
000000010003d05f	addq	%r9, %rdx
000000010003d062	cmpl	$0x3, %eax
000000010003d065	je	0x10003d0b8
000000010003d067	xorl	%r9d, %r9d
000000010003d06a	cmpb	$-0x40, 0x3(%rdi,%r8)
000000010003d070	setge	%r9b
000000010003d074	addq	%r9, %rdx
000000010003d077	cmpl	$0x4, %eax
000000010003d07a	je	0x10003d0b8
000000010003d07c	xorl	%r9d, %r9d
000000010003d07f	cmpb	$-0x40, 0x4(%rdi,%r8)
000000010003d085	setge	%r9b
000000010003d089	addq	%r9, %rdx
000000010003d08c	cmpl	$0x5, %eax
000000010003d08f	je	0x10003d0b8
000000010003d091	xorl	%r9d, %r9d
000000010003d094	cmpb	$-0x40, 0x5(%rdi,%r8)
000000010003d09a	setge	%r9b
000000010003d09e	addq	%r9, %rdx
000000010003d0a1	cmpl	$0x6, %eax
000000010003d0a4	je	0x10003d0b8
000000010003d0a6	xorl	%eax, %eax
000000010003d0a8	cmpb	$-0x40, 0x6(%rdi,%r8)
000000010003d0ae	setge	%al
000000010003d0b1	addq	%rax, %rdx
000000010003d0b4	jmp	0x10003d0b8
000000010003d0b6	xorl	%edx, %edx
000000010003d0b8	addq	%rsi, %rdx
000000010003d0bb	shrq	$0x3, %rcx
000000010003d0bf	movabsq	$0xff00ff00ff00ff, %r8          ## imm = 0xFF00FF00FF00FF
000000010003d0c9	movabsq	$0x1000100010001, %rsi          ## imm = 0x1000100010001
000000010003d0d3	pcmpeqd	%xmm0, %xmm0
000000010003d0d7	movdqa	0x9581(%rip), %xmm1
000000010003d0df	jmp	0x10003d11d
000000010003d0e1	nopw	%cs:(%rax,%rax)
000000010003d0eb	nopl	(%rax,%rax)
000000010003d0f0	xorl	%edx, %edx
000000010003d0f2	leaq	(%r9,%rbx,8), %rdi
000000010003d0f6	subq	%rbx, %rcx
000000010003d0f9	movq	%rdx, %rbx
000000010003d0fc	andq	%r8, %rbx
000000010003d0ff	shrq	$0x8, %rdx
000000010003d103	andq	%r8, %rdx
000000010003d106	addq	%rbx, %rdx
000000010003d109	imulq	%rsi, %rdx
000000010003d10d	shrq	$0x30, %rdx
000000010003d111	addq	%rax, %rdx
000000010003d114	testq	%r11, %r11
000000010003d117	jne	0x10003d1c8
000000010003d11d	movq	%rdx, %rax
000000010003d120	testq	%rcx, %rcx
000000010003d123	je	0x10003d252
000000010003d129	movq	%rdi, %r9
000000010003d12c	cmpq	$0xc0, %rcx
000000010003d133	movl	$0xc0, %ebx
000000010003d138	cmovbq	%rcx, %rbx
000000010003d13c	movl	%ebx, %r11d
000000010003d13f	andl	$0x3, %r11d
000000010003d143	movq	%rbx, %r10
000000010003d146	andq	$0xfc, %r10
000000010003d14d	je	0x10003d0f0
000000010003d14f	movq	%rbx, %rdi
000000010003d152	shrq	$0x2, %rdi
000000010003d156	shlq	$0x5, %rdi
000000010003d15a	xorl	%edx, %edx
000000010003d15c	movq	%r9, %r14
000000010003d15f	nop
000000010003d160	testq	%r14, %r14
000000010003d163	je	0x10003d0f2
000000010003d165	movdqu	(%r14), %xmm2
000000010003d16a	movdqu	0x10(%r14), %xmm3
000000010003d170	addq	$0x20, %r14
000000010003d174	movdqa	%xmm2, %xmm4
000000010003d178	pxor	%xmm0, %xmm4
000000010003d17c	movdqa	%xmm3, %xmm5
000000010003d180	pxor	%xmm0, %xmm5
000000010003d184	psrlq	$0x7, %xmm5
000000010003d189	psrlq	$0x7, %xmm4
000000010003d18e	psrlq	$0x6, %xmm3
000000010003d193	por	%xmm5, %xmm3
000000010003d197	psrlq	$0x6, %xmm2
000000010003d19c	por	%xmm4, %xmm2
000000010003d1a0	pand	%xmm1, %xmm3
000000010003d1a4	pand	%xmm1, %xmm2
000000010003d1a8	paddq	%xmm3, %xmm2
000000010003d1ac	pshufd	$0xee, %xmm2, %xmm3             ## xmm3 = xmm2[2,3,2,3]
000000010003d1b1	paddq	%xmm2, %xmm3
000000010003d1b5	movq	%xmm3, %r15
000000010003d1ba	addq	%r15, %rdx
000000010003d1bd	addq	$-0x20, %rdi
000000010003d1c1	jne	0x10003d160
000000010003d1c3	jmp	0x10003d0f2
000000010003d1c8	testq	%r9, %r9
000000010003d1cb	je	0x10003d235
000000010003d1cd	movabsq	$0x101010101010101, %rcx        ## imm = 0x101010101010101
000000010003d1d7	movq	(%r9,%r10,8), %rax
000000010003d1db	movq	%rax, %rdi
000000010003d1de	notq	%rdi
000000010003d1e1	shrq	$0x7, %rdi
000000010003d1e5	shrq	$0x6, %rax
000000010003d1e9	orq	%rdi, %rax
000000010003d1ec	andq	%rcx, %rax
000000010003d1ef	cmpl	$0x1, %r11d
000000010003d1f3	je	0x10003d237
000000010003d1f5	movq	0x8(%r9,%r10,8), %rdi
000000010003d1fa	movq	%rdi, %rbx
000000010003d1fd	notq	%rbx
000000010003d200	shrq	$0x7, %rbx
000000010003d204	shrq	$0x6, %rdi
000000010003d208	orq	%rbx, %rdi
000000010003d20b	andq	%rcx, %rdi
000000010003d20e	addq	%rdi, %rax
000000010003d211	cmpl	$0x2, %r11d
000000010003d215	je	0x10003d237
000000010003d217	movq	0x10(%r9,%r10,8), %rdi
000000010003d21c	movq	%rdi, %r9
000000010003d21f	notq	%r9
000000010003d222	shrq	$0x7, %r9
000000010003d226	shrq	$0x6, %rdi
000000010003d22a	orq	%r9, %rdi
000000010003d22d	andq	%rcx, %rdi
000000010003d230	addq	%rdi, %rax
000000010003d233	jmp	0x10003d237
000000010003d235	xorl	%eax, %eax
000000010003d237	movq	%rax, %rcx
000000010003d23a	andq	%r8, %rcx
000000010003d23d	shrq	$0x8, %rax
000000010003d241	andq	%r8, %rax
000000010003d244	addq	%rcx, %rax
000000010003d247	imulq	%rsi, %rax
000000010003d24b	shrq	$0x30, %rax
000000010003d24f	addq	%rdx, %rax
000000010003d252	popq	%rbx
000000010003d253	popq	%r14
000000010003d255	popq	%r15
000000010003d257	popq	%rbp
000000010003d258	retq
000000010003d259	nopl	(%rax)
__ZN4core3str5count23char_count_general_case17hdca0746f7b103829E:
000000010003d260	pushq	%rbp
000000010003d261	movq	%rsp, %rbp
000000010003d264	testq	%rsi, %rsi
000000010003d267	je	0x10003d278
000000010003d269	cmpq	$0x4, %rsi
000000010003d26d	jae	0x10003d27c
000000010003d26f	xorl	%ecx, %ecx
000000010003d271	xorl	%eax, %eax
000000010003d273	jmp	0x10003d310
000000010003d278	xorl	%eax, %eax
000000010003d27a	popq	%rbp
000000010003d27b	retq
000000010003d27c	movq	%rsi, %rcx
000000010003d27f	andq	$-0x4, %rcx
000000010003d283	pxor	%xmm0, %xmm0
000000010003d287	xorl	%eax, %eax
000000010003d289	movdqa	0x939f(%rip), %xmm2
000000010003d291	movdqa	0x93a7(%rip), %xmm3
000000010003d299	movdqa	0x93af(%rip), %xmm4
000000010003d2a1	pxor	%xmm1, %xmm1
000000010003d2a5	nopw	%cs:(%rax,%rax)
000000010003d2af	nop
000000010003d2b0	movzwl	(%rdi,%rax), %edx
000000010003d2b4	movd	%edx, %xmm5
000000010003d2b8	movzwl	0x2(%rdi,%rax), %edx
000000010003d2bd	movd	%edx, %xmm6
000000010003d2c1	pcmpgtb	%xmm2, %xmm5
000000010003d2c5	pshufb	%xmm3, %xmm5
000000010003d2ca	pand	%xmm4, %xmm5
000000010003d2ce	paddq	%xmm5, %xmm0
000000010003d2d2	pcmpgtb	%xmm2, %xmm6
000000010003d2d6	pshufb	%xmm3, %xmm6
000000010003d2db	pand	%xmm4, %xmm6
000000010003d2df	paddq	%xmm6, %xmm1
000000010003d2e3	addq	$0x4, %rax
000000010003d2e7	cmpq	%rax, %rcx
000000010003d2ea	jne	0x10003d2b0
000000010003d2ec	paddq	%xmm0, %xmm1
000000010003d2f0	pshufd	$0xee, %xmm1, %xmm0             ## xmm0 = xmm1[2,3,2,3]
000000010003d2f5	paddq	%xmm1, %xmm0
000000010003d2f9	movq	%xmm0, %rax
000000010003d2fe	cmpq	%rsi, %rcx
000000010003d301	je	0x10003d324
000000010003d303	nopw	%cs:(%rax,%rax)
000000010003d30d	nopl	(%rax)
000000010003d310	xorl	%edx, %edx
000000010003d312	cmpb	$-0x40, (%rdi,%rcx)
000000010003d316	setge	%dl
000000010003d319	addq	%rdx, %rax
000000010003d31c	incq	%rcx
000000010003d31f	cmpq	%rcx, %rsi
000000010003d322	jne	0x10003d310
000000010003d324	popq	%rbp
000000010003d325	retq
000000010003d326	nopw	%cs:(%rax,%rax)
__ZN4core3str7pattern11StrSearcher3new17h056863fc02a6ed7bE:
000000010003d330	pushq	%rbp
000000010003d331	movq	%rsp, %rbp
000000010003d334	pushq	%r15
000000010003d336	pushq	%r14
000000010003d338	pushq	%r13
000000010003d33a	pushq	%r12
000000010003d33c	pushq	%rbx
000000010003d33d	subq	$0x18, %rsp
000000010003d341	movq	%rcx, %r12
000000010003d344	movq	%rdi, %r14
000000010003d347	testq	%r8, %r8
000000010003d34a	je	0x10003d3d9
000000010003d350	movq	%r8, %rbx
000000010003d353	cmpq	$0x1, %r8
000000010003d357	movq	%rsi, -0x38(%rbp)
000000010003d35b	jne	0x10003d411
000000010003d361	movl	$0x1, %r13d
000000010003d367	xorl	%eax, %eax
000000010003d369	movl	$0x1, %ecx
000000010003d36e	xorl	%r15d, %r15d
000000010003d371	cmpq	%r15, %rax
000000010003d374	cmovbeq	%rcx, %r13
000000010003d378	cmovaq	%rax, %r15
000000010003d37c	cmpq	%rbx, %r15
000000010003d37f	ja	0x10003d915
000000010003d385	movq	%r13, %rsi
000000010003d388	addq	%r15, %rsi
000000010003d38b	jb	0x10003d927
000000010003d391	movq	%rdx, -0x30(%rbp)
000000010003d395	cmpq	%rbx, %rsi
000000010003d398	ja	0x10003d936
000000010003d39e	leaq	(%r12,%r13), %rsi
000000010003d3a2	movq	%r12, %rdi
000000010003d3a5	movq	%r15, %rdx
000000010003d3a8	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003d3ad	testl	%eax, %eax
000000010003d3af	je	0x10003d520
000000010003d3b5	movq	%rbx, %r13
000000010003d3b8	subq	%r15, %r13
000000010003d3bb	cmpq	%r13, %r15
000000010003d3be	cmovaq	%r15, %r13
000000010003d3c2	cmpq	$0x4, %rbx
000000010003d3c6	jae	0x10003d6b9
000000010003d3cc	xorl	%eax, %eax
000000010003d3ce	xorl	%ecx, %ecx
000000010003d3d0	movq	-0x30(%rbp), %r8
000000010003d3d4	jmp	0x10003d780
000000010003d3d9	movq	%rsi, 0x48(%r14)
000000010003d3dd	movq	%rdx, 0x50(%r14)
000000010003d3e1	movq	%r12, 0x58(%r14)
000000010003d3e5	movq	$0x0, 0x60(%r14)
000000010003d3ed	movq	$0x0, (%r14)
000000010003d3f4	movq	$0x0, 0x8(%r14)
000000010003d3fc	movq	%rdx, 0x10(%r14)
000000010003d400	movw	$0x101, 0x18(%r14)              ## imm = 0x101
000000010003d407	movb	$0x0, 0x1a(%r14)
000000010003d40c	jmp	0x10003d8d3
000000010003d411	movl	$0x1, %r8d
000000010003d417	xorl	%ecx, %ecx
000000010003d419	xorl	%eax, %eax
000000010003d41b	movl	$0x1, %r10d
000000010003d421	xorl	%r9d, %r9d
000000010003d424	movl	$0x1, %r13d
000000010003d42a	jmp	0x10003d44a
000000010003d42c	nopl	(%rax)
000000010003d430	leaq	0x1(%r10,%r9), %rdi
000000010003d435	movq	%rdi, %r13
000000010003d438	subq	%rax, %r13
000000010003d43b	xorl	%r9d, %r9d
000000010003d43e	leaq	(%rdi,%r9), %r8
000000010003d442	movq	%rdi, %r10
000000010003d445	cmpq	%rbx, %r8
000000010003d448	jae	0x10003d492
000000010003d44a	leaq	(%r9,%rax), %rdi
000000010003d44e	cmpq	%rbx, %rdi
000000010003d451	jae	0x10003d8e5
000000010003d457	movzbl	(%r12,%rdi), %edi
000000010003d45c	cmpb	%dil, (%r12,%r8)
000000010003d460	jb	0x10003d430
000000010003d462	jne	0x10003d480
000000010003d464	incq	%r9
000000010003d467	cmpq	%r13, %r9
000000010003d46a	movq	%r9, %r8
000000010003d46d	cmoveq	%rcx, %r8
000000010003d471	cmovneq	%rcx, %r9
000000010003d475	movq	%r9, %rdi
000000010003d478	addq	%r10, %rdi
000000010003d47b	movq	%r8, %r9
000000010003d47e	jmp	0x10003d43e
000000010003d480	leaq	0x1(%r10), %rdi
000000010003d484	movl	$0x1, %r13d
000000010003d48a	xorl	%r9d, %r9d
000000010003d48d	movq	%r10, %rax
000000010003d490	jmp	0x10003d43e
000000010003d492	movl	$0x1, %r9d
000000010003d498	xorl	%r10d, %r10d
000000010003d49b	xorl	%r15d, %r15d
000000010003d49e	movl	$0x1, %r8d
000000010003d4a4	xorl	%esi, %esi
000000010003d4a6	movl	$0x1, %ecx
000000010003d4ab	jmp	0x10003d4cd
000000010003d4ad	nopl	(%rax)
000000010003d4b0	leaq	0x1(%r8,%rsi), %rdi
000000010003d4b5	movq	%rdi, %rcx
000000010003d4b8	subq	%r15, %rcx
000000010003d4bb	xorl	%esi, %esi
000000010003d4bd	leaq	(%rdi,%rsi), %r9
000000010003d4c1	movq	%rdi, %r8
000000010003d4c4	cmpq	%rbx, %r9
000000010003d4c7	jae	0x10003d371
000000010003d4cd	leaq	(%rsi,%r15), %rdi
000000010003d4d1	cmpq	%rbx, %rdi
000000010003d4d4	jae	0x10003d8e5
000000010003d4da	movzbl	(%r12,%rdi), %edi
000000010003d4df	cmpb	%dil, (%r12,%r9)
000000010003d4e3	ja	0x10003d4b0
000000010003d4e5	jne	0x10003d510
000000010003d4e7	incq	%rsi
000000010003d4ea	cmpq	%rcx, %rsi
000000010003d4ed	movq	%rsi, %r9
000000010003d4f0	cmoveq	%r10, %r9
000000010003d4f4	cmovneq	%r10, %rsi
000000010003d4f8	movq	%rsi, %rdi
000000010003d4fb	addq	%r8, %rdi
000000010003d4fe	movq	%r9, %rsi
000000010003d501	jmp	0x10003d4bd
000000010003d503	nopw	%cs:(%rax,%rax)
000000010003d50d	nopl	(%rax)
000000010003d510	leaq	0x1(%r8), %rdi
000000010003d514	movl	$0x1, %ecx
000000010003d519	xorl	%esi, %esi
000000010003d51b	movq	%r8, %r15
000000010003d51e	jmp	0x10003d4bd
000000010003d520	movl	$0x1, %esi
000000010003d525	xorl	%edx, %edx
000000010003d527	xorl	%r8d, %r8d
000000010003d52a	movl	$0x1, %r9d
000000010003d530	xorl	%ecx, %ecx
000000010003d532	jmp	0x10003d55c
000000010003d534	nopw	%cs:(%rax,%rax)
000000010003d53e	nop
000000010003d540	leaq	0x1(%r8,%r9), %r10
000000010003d545	movq	%r10, %rsi
000000010003d548	subq	%rcx, %rsi
000000010003d54b	xorl	%r8d, %r8d
000000010003d54e	movq	%rcx, %r9
000000010003d551	movq	%r9, %rcx
000000010003d554	movq	%r10, %r9
000000010003d557	cmpq	%r13, %rsi
000000010003d55a	je	0x10003d5d3
000000010003d55c	leaq	(%r9,%r8), %rax
000000010003d560	cmpq	%rbx, %rax
000000010003d563	jae	0x10003d5d3
000000010003d565	movq	%r9, %rax
000000010003d568	notq	%rax
000000010003d56b	movq	%rbx, %rdi
000000010003d56e	subq	%r8, %rdi
000000010003d571	addq	%rax, %rdi
000000010003d574	cmpq	%rbx, %rdi
000000010003d577	jae	0x10003d8f4
000000010003d57d	movq	%r8, %rax
000000010003d580	notq	%rax
000000010003d583	addq	%rbx, %rax
000000010003d586	subq	%rcx, %rax
000000010003d589	cmpq	%rbx, %rax
000000010003d58c	jae	0x10003d903
000000010003d592	leaq	0x1(%r9), %r10
000000010003d596	movzbl	(%r12,%rax), %eax
000000010003d59b	cmpb	%al, (%r12,%rdi)
000000010003d59f	jb	0x10003d540
000000010003d5a1	jne	0x10003d5c0
000000010003d5a3	incq	%r8
000000010003d5a6	cmpq	%rsi, %r8
000000010003d5a9	movq	%r8, %rax
000000010003d5ac	cmoveq	%rdx, %rax
000000010003d5b0	cmovneq	%rdx, %r8
000000010003d5b4	movq	%r8, %r10
000000010003d5b7	addq	%r9, %r10
000000010003d5ba	movq	%rax, %r8
000000010003d5bd	jmp	0x10003d54e
000000010003d5bf	nop
000000010003d5c0	movl	$0x1, %esi
000000010003d5c5	xorl	%r8d, %r8d
000000010003d5c8	movq	%r9, %rcx
000000010003d5cb	movq	%r10, %r9
000000010003d5ce	cmpq	%r13, %rsi
000000010003d5d1	jne	0x10003d55c
000000010003d5d3	movl	$0x1, %esi
000000010003d5d8	xorl	%edx, %edx
000000010003d5da	xorl	%r9d, %r9d
000000010003d5dd	movl	$0x1, %r10d
000000010003d5e3	xorl	%r8d, %r8d
000000010003d5e6	jmp	0x10003d60c
000000010003d5e8	nopl	(%rax,%rax)
000000010003d5f0	leaq	0x1(%r9,%r10), %r11
000000010003d5f5	movq	%r11, %rsi
000000010003d5f8	subq	%r8, %rsi
000000010003d5fb	xorl	%r9d, %r9d
000000010003d5fe	movq	%r8, %r10
000000010003d601	movq	%r10, %r8
000000010003d604	movq	%r11, %r10
000000010003d607	cmpq	%r13, %rsi
000000010003d60a	je	0x10003d683
000000010003d60c	leaq	(%r10,%r9), %rax
000000010003d610	cmpq	%rbx, %rax
000000010003d613	jae	0x10003d683
000000010003d615	movq	%r10, %rax
000000010003d618	notq	%rax
000000010003d61b	movq	%rbx, %rdi
000000010003d61e	subq	%r9, %rdi
000000010003d621	addq	%rax, %rdi
000000010003d624	cmpq	%rbx, %rdi
000000010003d627	jae	0x10003d8f4
000000010003d62d	movq	%r9, %rax
000000010003d630	notq	%rax
000000010003d633	addq	%rbx, %rax
000000010003d636	subq	%r8, %rax
000000010003d639	cmpq	%rbx, %rax
000000010003d63c	jae	0x10003d903
000000010003d642	leaq	0x1(%r10), %r11
000000010003d646	movzbl	(%r12,%rax), %eax
000000010003d64b	cmpb	%al, (%r12,%rdi)
000000010003d64f	ja	0x10003d5f0
000000010003d651	jne	0x10003d670
000000010003d653	incq	%r9
000000010003d656	cmpq	%rsi, %r9
000000010003d659	movq	%r9, %rax
000000010003d65c	cmoveq	%rdx, %rax
000000010003d660	cmovneq	%rdx, %r9
000000010003d664	movq	%r9, %r11
000000010003d667	addq	%r10, %r11
000000010003d66a	movq	%rax, %r9
000000010003d66d	jmp	0x10003d5fe
000000010003d66f	nop
000000010003d670	movl	$0x1, %esi
000000010003d675	xorl	%r9d, %r9d
000000010003d678	movq	%r10, %r8
000000010003d67b	movq	%r11, %r10
000000010003d67e	cmpq	%r13, %rsi
000000010003d681	jne	0x10003d60c
000000010003d683	cmpq	%r8, %rcx
000000010003d686	cmovaq	%rcx, %r8
000000010003d68a	cmpq	%rbx, %r13
000000010003d68d	ja	0x10003d948
000000010003d693	movq	%rbx, %rax
000000010003d696	subq	%r8, %rax
000000010003d699	testq	%r13, %r13
000000010003d69c	movq	-0x30(%rbp), %r8
000000010003d6a0	je	0x10003d7aa
000000010003d6a6	cmpq	$0x4, %r13
000000010003d6aa	jae	0x10003d7b9
000000010003d6b0	xorl	%edx, %edx
000000010003d6b2	xorl	%ecx, %ecx
000000010003d6b4	jmp	0x10003d877
000000010003d6b9	movq	%rbx, %rax
000000010003d6bc	andq	$-0x4, %rax
000000010003d6c0	xorpd	%xmm0, %xmm0
000000010003d6c4	xorl	%ecx, %ecx
000000010003d6c6	movdqa	0x8fa2(%rip), %xmm2
000000010003d6ce	movdqa	0x8faa(%rip), %xmm3
000000010003d6d6	movdqa	0x8f72(%rip), %xmm4
000000010003d6de	xorpd	%xmm1, %xmm1
000000010003d6e2	movq	-0x30(%rbp), %r8
000000010003d6e6	nopw	%cs:(%rax,%rax)
000000010003d6f0	movzwl	(%r12,%rcx), %edx
000000010003d6f5	movd	%edx, %xmm5
000000010003d6f9	movzwl	0x2(%r12,%rcx), %edx
000000010003d6ff	movd	%edx, %xmm6
000000010003d703	pand	%xmm2, %xmm5
000000010003d707	pand	%xmm2, %xmm6
000000010003d70b	pshufb	%xmm3, %xmm5
000000010003d710	pshufb	%xmm3, %xmm6
000000010003d715	movdqa	%xmm4, %xmm7
000000010003d719	psllq	%xmm5, %xmm7
000000010003d71d	pshufd	$0xee, %xmm5, %xmm5             ## xmm5 = xmm5[2,3,2,3]
000000010003d722	movdqa	%xmm4, %xmm8
000000010003d727	psllq	%xmm5, %xmm8
000000010003d72c	movsd	%xmm7, %xmm8                    ## xmm8 = xmm7[0],xmm8[1]
000000010003d731	orpd	%xmm8, %xmm0
000000010003d736	movdqa	%xmm4, %xmm5
000000010003d73a	psllq	%xmm6, %xmm5
000000010003d73e	pshufd	$0xee, %xmm6, %xmm6             ## xmm6 = xmm6[2,3,2,3]
000000010003d743	movdqa	%xmm4, %xmm7
000000010003d747	psllq	%xmm6, %xmm7
000000010003d74b	movsd	%xmm5, %xmm7                    ## xmm7 = xmm5[0],xmm7[1]
000000010003d74f	orpd	%xmm7, %xmm1
000000010003d753	addq	$0x4, %rcx
000000010003d757	cmpq	%rcx, %rax
000000010003d75a	jne	0x10003d6f0
000000010003d75c	orpd	%xmm0, %xmm1
000000010003d760	pshufd	$0xee, %xmm1, %xmm0             ## xmm0 = xmm1[2,3,2,3]
000000010003d765	por	%xmm1, %xmm0
000000010003d769	movq	%xmm0, %rcx
000000010003d76e	cmpq	%rbx, %rax
000000010003d771	je	0x10003d791
000000010003d773	nopw	%cs:(%rax,%rax)
000000010003d77d	nopl	(%rax)
000000010003d780	movzbl	(%r12,%rax), %edx
000000010003d785	btsq	%rdx, %rcx
000000010003d789	incq	%rax
000000010003d78c	cmpq	%rax, %rbx
000000010003d78f	jne	0x10003d780
000000010003d791	incq	%r13
000000010003d794	movq	$-0x1, %rsi
000000010003d79b	movq	$-0x1, %rdx
000000010003d7a2	movq	%r15, %rax
000000010003d7a5	jmp	0x10003d894
000000010003d7aa	xorl	%esi, %esi
000000010003d7ac	movq	%rbx, %rdx
000000010003d7af	xorl	%ecx, %ecx
000000010003d7b1	xorl	%r13d, %r13d
000000010003d7b4	jmp	0x10003d894
000000010003d7b9	movq	%r13, %rdx
000000010003d7bc	andq	$-0x4, %rdx
000000010003d7c0	xorpd	%xmm0, %xmm0
000000010003d7c4	xorl	%ecx, %ecx
000000010003d7c6	movdqa	0x8ea2(%rip), %xmm2
000000010003d7ce	movdqa	0x8eaa(%rip), %xmm3
000000010003d7d6	movdqa	0x8e72(%rip), %xmm4
000000010003d7de	xorpd	%xmm1, %xmm1
000000010003d7e2	nopw	%cs:(%rax,%rax)
000000010003d7ec	nopl	(%rax)
000000010003d7f0	movzwl	(%r12,%rcx), %esi
000000010003d7f5	movd	%esi, %xmm5
000000010003d7f9	movzwl	0x2(%r12,%rcx), %esi
000000010003d7ff	movd	%esi, %xmm6
000000010003d803	pand	%xmm2, %xmm5
000000010003d807	pand	%xmm2, %xmm6
000000010003d80b	pshufb	%xmm3, %xmm5
000000010003d810	pshufb	%xmm3, %xmm6
000000010003d815	movdqa	%xmm4, %xmm7
000000010003d819	psllq	%xmm5, %xmm7
000000010003d81d	pshufd	$0xee, %xmm5, %xmm5             ## xmm5 = xmm5[2,3,2,3]
000000010003d822	movdqa	%xmm4, %xmm8
000000010003d827	psllq	%xmm5, %xmm8
000000010003d82c	movsd	%xmm7, %xmm8                    ## xmm8 = xmm7[0],xmm8[1]
000000010003d831	orpd	%xmm8, %xmm0
000000010003d836	movdqa	%xmm4, %xmm5
000000010003d83a	psllq	%xmm6, %xmm5
000000010003d83e	pshufd	$0xee, %xmm6, %xmm6             ## xmm6 = xmm6[2,3,2,3]
000000010003d843	movdqa	%xmm4, %xmm7
000000010003d847	psllq	%xmm6, %xmm7
000000010003d84b	movsd	%xmm5, %xmm7                    ## xmm7 = xmm5[0],xmm7[1]
000000010003d84f	orpd	%xmm7, %xmm1
000000010003d853	addq	$0x4, %rcx
000000010003d857	cmpq	%rcx, %rdx
000000010003d85a	jne	0x10003d7f0
000000010003d85c	orpd	%xmm0, %xmm1
000000010003d860	pshufd	$0xee, %xmm1, %xmm0             ## xmm0 = xmm1[2,3,2,3]
000000010003d865	por	%xmm1, %xmm0
000000010003d869	movq	%xmm0, %rcx
000000010003d86e	cmpq	%rdx, %r13
000000010003d871	jne	0x10003d877
000000010003d873	xorl	%esi, %esi
000000010003d875	jmp	0x10003d891
000000010003d877	xorl	%esi, %esi
000000010003d879	nopl	(%rax)
000000010003d880	movzbl	(%r12,%rdx), %edi
000000010003d885	btsq	%rdi, %rcx
000000010003d889	incq	%rdx
000000010003d88c	cmpq	%rdx, %r13
000000010003d88f	jne	0x10003d880
000000010003d891	movq	%rbx, %rdx
000000010003d894	movq	-0x38(%rbp), %rdi
000000010003d898	movq	%rdi, 0x48(%r14)
000000010003d89c	movq	%r8, 0x50(%r14)
000000010003d8a0	movq	%r12, 0x58(%r14)
000000010003d8a4	movq	%rbx, 0x60(%r14)
000000010003d8a8	movq	$0x1, (%r14)
000000010003d8af	movq	%r15, 0x8(%r14)
000000010003d8b3	movq	%rax, 0x10(%r14)
000000010003d8b7	movq	%r13, 0x18(%r14)
000000010003d8bb	movq	%rcx, 0x20(%r14)
000000010003d8bf	movq	$0x0, 0x28(%r14)
000000010003d8c7	movq	%r8, 0x30(%r14)
000000010003d8cb	movq	%rsi, 0x38(%r14)
000000010003d8cf	movq	%rdx, 0x40(%r14)
000000010003d8d3	movq	%r14, %rax
000000010003d8d6	addq	$0x18, %rsp
000000010003d8da	popq	%rbx
000000010003d8db	popq	%r12
000000010003d8dd	popq	%r13
000000010003d8df	popq	%r14
000000010003d8e1	popq	%r15
000000010003d8e3	popq	%rbp
000000010003d8e4	retq
000000010003d8e5	leaq	0xc924(%rip), %rdx
000000010003d8ec	movq	%rbx, %rsi
000000010003d8ef	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003d8f4	leaq	0xc92d(%rip), %rdx
000000010003d8fb	movq	%rbx, %rsi
000000010003d8fe	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003d903	leaq	0xc936(%rip), %rdx
000000010003d90a	movq	%rax, %rdi
000000010003d90d	movq	%rbx, %rsi
000000010003d910	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003d915	leaq	0xc8ac(%rip), %rdx
000000010003d91c	movq	%r15, %rdi
000000010003d91f	movq	%rbx, %rsi
000000010003d922	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010003d927	leaq	0xc8b2(%rip), %rdx
000000010003d92e	movq	%r13, %rdi
000000010003d931	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010003d936	leaq	0xc8a3(%rip), %rdx
000000010003d93d	movq	%rsi, %rdi
000000010003d940	movq	%rbx, %rsi
000000010003d943	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010003d948	leaq	0xc8a9(%rip), %rdx
000000010003d94f	movq	%r13, %rdi
000000010003d952	movq	%rbx, %rsi
000000010003d955	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010003d95a	nopw	(%rax,%rax)
__ZN4core3str5lossy9Utf8Chunk5valid17hccdc9e27ad836984E:
000000010003d960	pushq	%rbp
000000010003d961	movq	%rsp, %rbp
000000010003d964	movq	(%rdi), %rax
000000010003d967	movq	0x8(%rdi), %rdx
000000010003d96b	popq	%rbp
000000010003d96c	retq
000000010003d96d	nopl	(%rax)
__ZN4core3str5lossy9Utf8Chunk7invalid17he07223169c69df7bE:
000000010003d970	pushq	%rbp
000000010003d971	movq	%rsp, %rbp
000000010003d974	movq	0x10(%rdi), %rax
000000010003d978	movq	0x18(%rdi), %rdx
000000010003d97c	popq	%rbp
000000010003d97d	retq
000000010003d97e	nop
__ZN4core3str5lossy10Utf8Chunks3new17h9a5c7d169aa2de52E:
000000010003d980	pushq	%rbp
000000010003d981	movq	%rsp, %rbp
000000010003d984	movq	%rsi, %rdx
000000010003d987	movq	%rdi, %rax
000000010003d98a	popq	%rbp
000000010003d98b	retq
000000010003d98c	nopl	(%rax)
__ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc340660218f074abE:
000000010003d990	pushq	%rbp
000000010003d991	movq	%rsp, %rbp
000000010003d994	pushq	%r14
000000010003d996	pushq	%rbx
000000010003d997	movq	%rdi, %rax
000000010003d99a	movq	0x8(%rsi), %rdx
000000010003d99e	testq	%rdx, %rdx
000000010003d9a1	je	0x10003db42
000000010003d9a7	movq	(%rsi), %rcx
000000010003d9aa	xorl	%edi, %edi
000000010003d9ac	leaq	0x90d5(%rip), %r9
000000010003d9b3	leaq	0x91ed(%rip), %r10
000000010003d9ba	jmp	0x10003d9fd
000000010003d9bc	andb	$-0x20, %bl
000000010003d9bf	cmpb	$-0x60, %bl
000000010003d9c2	jne	0x10003db1a
000000010003d9c8	leaq	0x2(%rdi), %r8
000000010003d9cc	cmpq	%rdx, %r8
000000010003d9cf	leaq	0x2(%rcx,%rdi), %r11
000000010003d9d4	cmovaeq	%r10, %r11
000000010003d9d8	movzbl	(%r11), %r11d
000000010003d9dc	andb	$-0x40, %r11b
000000010003d9e0	cmpb	$-0x80, %r11b
000000010003d9e4	jne	0x10003db1a
000000010003d9ea	addq	$0x3, %rdi
000000010003d9ee	movq	%rdi, %r8
000000010003d9f1	movq	%r8, %rdi
000000010003d9f4	cmpq	%rdx, %r8
000000010003d9f7	jae	0x10003db1a
000000010003d9fd	movzbl	(%rcx,%rdi), %r11d
000000010003da02	leaq	0x1(%rdi), %r8
000000010003da06	testb	%r11b, %r11b
000000010003da09	jns	0x10003d9f1
000000010003da0b	movzbl	(%r11,%r9), %ebx
000000010003da10	cmpl	$0x4, %ebx
000000010003da13	je	0x10003da46
000000010003da15	cmpl	$0x3, %ebx
000000010003da18	je	0x10003da6d
000000010003da1a	cmpl	$0x2, %ebx
000000010003da1d	jne	0x10003db1a
000000010003da23	leaq	(%rcx,%r8), %r11
000000010003da27	cmpq	%rdx, %r8
000000010003da2a	cmovaeq	%r10, %r11
000000010003da2e	movzbl	(%r11), %r11d
000000010003da32	andb	$-0x40, %r11b
000000010003da36	cmpb	$-0x80, %r11b
000000010003da3a	jne	0x10003db1a
000000010003da40	addq	$0x2, %rdi
000000010003da44	jmp	0x10003d9ee
000000010003da46	leaq	(%rcx,%r8), %rbx
000000010003da4a	cmpq	%rdx, %r8
000000010003da4d	cmovaeq	%r10, %rbx
000000010003da51	movzbl	(%rbx), %ebx
000000010003da54	cmpb	$-0x10, %r11b
000000010003da58	je	0x10003da9c
000000010003da5a	cmpl	$0xf4, %r11d
000000010003da61	jne	0x10003daa6
000000010003da63	cmpb	$-0x71, %bl
000000010003da66	jle	0x10003dab5
000000010003da68	jmp	0x10003db1a
000000010003da6d	leaq	(%rcx,%r8), %rbx
000000010003da71	cmpq	%rdx, %r8
000000010003da74	cmovaeq	%r10, %rbx
000000010003da78	movzbl	(%rbx), %ebx
000000010003da7b	cmpl	$0xe0, %r11d
000000010003da82	je	0x10003d9bc
000000010003da88	cmpl	$0xed, %r11d
000000010003da8f	jne	0x10003dafa
000000010003da91	cmpb	$-0x61, %bl
000000010003da94	jle	0x10003d9c8
000000010003da9a	jmp	0x10003db1a
000000010003da9c	addb	$0x70, %bl
000000010003da9f	cmpb	$0x30, %bl
000000010003daa2	jb	0x10003dab5
000000010003daa4	jmp	0x10003db1a
000000010003daa6	addb	$0xf, %r11b
000000010003daaa	cmpb	$0x2, %r11b
000000010003daae	ja	0x10003db1a
000000010003dab0	cmpb	$-0x40, %bl
000000010003dab3	jge	0x10003db1a
000000010003dab5	leaq	0x2(%rdi), %r8
000000010003dab9	cmpq	%rdx, %r8
000000010003dabc	leaq	0x2(%rcx,%rdi), %r11
000000010003dac1	cmovaeq	%r10, %r11
000000010003dac5	movzbl	(%r11), %r11d
000000010003dac9	andb	$-0x40, %r11b
000000010003dacd	cmpb	$-0x80, %r11b
000000010003dad1	jne	0x10003db1a
000000010003dad3	leaq	0x3(%rdi), %r8
000000010003dad7	cmpq	%rdx, %r8
000000010003dada	leaq	0x3(%rcx,%rdi), %r11
000000010003dadf	cmovaeq	%r10, %r11
000000010003dae3	movzbl	(%r11), %r11d
000000010003dae7	andb	$-0x40, %r11b
000000010003daeb	cmpb	$-0x80, %r11b
000000010003daef	jne	0x10003db1a
000000010003daf1	addq	$0x4, %rdi
000000010003daf5	jmp	0x10003d9ee
000000010003dafa	movl	%r11d, %r14d
000000010003dafd	addb	$0x1f, %r14b
000000010003db01	cmpb	$0xc, %r14b
000000010003db05	jb	0x10003db11
000000010003db07	andb	$-0x2, %r11b
000000010003db0b	cmpb	$-0x12, %r11b
000000010003db0f	jne	0x10003db1a
000000010003db11	cmpb	$-0x40, %bl
000000010003db14	jl	0x10003d9c8
000000010003db1a	leaq	(%rcx,%r8), %r9
000000010003db1e	subq	%r8, %rdx
000000010003db21	movq	%r9, (%rsi)
000000010003db24	movq	%rdx, 0x8(%rsi)
000000010003db28	subq	%rdi, %r8
000000010003db2b	movq	%rcx, (%rax)
000000010003db2e	addq	%rdi, %rcx
000000010003db31	movq	%rdi, 0x8(%rax)
000000010003db35	movq	%rcx, 0x10(%rax)
000000010003db39	movq	%r8, 0x18(%rax)
000000010003db3d	popq	%rbx
000000010003db3e	popq	%r14
000000010003db40	popq	%rbp
000000010003db41	retq
000000010003db42	movq	$0x0, (%rax)
000000010003db49	popq	%rbx
000000010003db4a	popq	%r14
000000010003db4c	popq	%rbp
000000010003db4d	retq
000000010003db4e	nop
__ZN4core3str19slice_error_fail_rt17h379e777cbb9d27fdE:
000000010003db50	pushq	%rbp
000000010003db51	movq	%rsp, %rbp
000000010003db54	subq	$0xd0, %rsp
000000010003db5b	movq	%rdx, -0xc0(%rbp)
000000010003db62	movq	%rcx, -0xc8(%rbp)
000000010003db69	cmpq	$0x101, %rsi                    ## imm = 0x101
000000010003db70	jb	0x10003dbd7
000000010003db72	movl	$0x100, %eax                    ## imm = 0x100
000000010003db77	cmpb	$-0x41, 0x100(%rdi)
000000010003db7e	jg	0x10003dba1
000000010003db80	movl	$0xff, %eax
000000010003db85	cmpb	$-0x41, 0xff(%rdi)
000000010003db8c	jg	0x10003dba1
000000010003db8e	movl	$0xfe, %eax
000000010003db93	cmpb	$-0x41, 0xfe(%rdi)
000000010003db9a	jg	0x10003dba1
000000010003db9c	movl	$0xfd, %eax
000000010003dba1	cmpb	$-0x41, (%rdi,%rax)
000000010003dba5	jle	0x10003dd24
000000010003dbab	movq	%rdi, -0x18(%rbp)
000000010003dbaf	movq	%rax, -0x10(%rbp)
000000010003dbb3	movl	$0x5, %eax
000000010003dbb8	leaq	0x8fef(%rip), %r9
000000010003dbbf	movq	%r9, -0xa8(%rbp)
000000010003dbc6	movq	%rax, -0xa0(%rbp)
000000010003dbcd	cmpq	%rsi, %rdx
000000010003dbd0	jbe	0x10003dbff
000000010003dbd2	jmp	0x10003dc9b
000000010003dbd7	movq	%rdi, -0x18(%rbp)
000000010003dbdb	movq	%rsi, -0x10(%rbp)
000000010003dbdf	leaq	0x8b12(%rip), %r9
000000010003dbe6	xorl	%eax, %eax
000000010003dbe8	movq	%r9, -0xa8(%rbp)
000000010003dbef	movq	%rax, -0xa0(%rbp)
000000010003dbf6	cmpq	%rsi, %rdx
000000010003dbf9	ja	0x10003dc9b
000000010003dbff	cmpq	%rsi, %rcx
000000010003dc02	ja	0x10003dc9b
000000010003dc08	cmpq	%rcx, %rdx
000000010003dc0b	jbe	0x10003dd2e
000000010003dc11	leaq	-0xc0(%rbp), %rax
000000010003dc18	movq	%rax, -0x98(%rbp)
000000010003dc1f	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010003dc26	movq	%rax, -0x90(%rbp)
000000010003dc2d	leaq	-0xc8(%rbp), %rcx
000000010003dc34	movq	%rcx, -0x88(%rbp)
000000010003dc3b	movq	%rax, -0x80(%rbp)
000000010003dc3f	leaq	-0x18(%rbp), %rax
000000010003dc43	movq	%rax, -0x78(%rbp)
000000010003dc47	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010003dc4e	movq	%rax, -0x70(%rbp)
000000010003dc52	leaq	-0xa8(%rbp), %rcx
000000010003dc59	movq	%rcx, -0x68(%rbp)
000000010003dc5d	movq	%rax, -0x60(%rbp)
000000010003dc61	leaq	0xc640(%rip), %rax
000000010003dc68	movq	%rax, -0x48(%rbp)
000000010003dc6c	movq	$0x4, -0x40(%rbp)
000000010003dc74	movq	$0x0, -0x28(%rbp)
000000010003dc7c	leaq	-0x98(%rbp), %rax
000000010003dc83	movq	%rax, -0x38(%rbp)
000000010003dc87	movq	$0x4, -0x30(%rbp)
000000010003dc8f	leaq	-0x48(%rbp), %rdi
000000010003dc93	movq	%r8, %rsi
000000010003dc96	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010003dc9b	cmpq	%rsi, %rdx
000000010003dc9e	cmovaq	%rdx, %rcx
000000010003dca2	movq	%rcx, -0xb8(%rbp)
000000010003dca9	leaq	-0xb8(%rbp), %rax
000000010003dcb0	movq	%rax, -0x98(%rbp)
000000010003dcb7	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010003dcbe	movq	%rax, -0x90(%rbp)
000000010003dcc5	leaq	-0x18(%rbp), %rax
000000010003dcc9	movq	%rax, -0x88(%rbp)
000000010003dcd0	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010003dcd7	movq	%rax, -0x80(%rbp)
000000010003dcdb	leaq	-0xa8(%rbp), %rcx
000000010003dce2	movq	%rcx, -0x78(%rbp)
000000010003dce6	movq	%rax, -0x70(%rbp)
000000010003dcea	leaq	0xc5f7(%rip), %rax
000000010003dcf1	movq	%rax, -0x48(%rbp)
000000010003dcf5	movq	$0x3, -0x40(%rbp)
000000010003dcfd	movq	$0x0, -0x28(%rbp)
000000010003dd05	leaq	-0x98(%rbp), %rax
000000010003dd0c	movq	%rax, -0x38(%rbp)
000000010003dd10	movq	$0x3, -0x30(%rbp)
000000010003dd18	leaq	-0x48(%rbp), %rdi
000000010003dd1c	movq	%r8, %rsi
000000010003dd1f	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010003dd24	xorl	%edx, %edx
000000010003dd26	movq	%rax, %rcx
000000010003dd29	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003dd2e	testq	%rdx, %rdx
000000010003dd31	je	0x10003dd42
000000010003dd33	cmpq	%rsi, %rdx
000000010003dd36	jae	0x10003dd40
000000010003dd38	cmpb	$-0x40, (%rdi,%rdx)
000000010003dd3c	jge	0x10003dd42
000000010003dd3e	jmp	0x10003dd45
000000010003dd40	jne	0x10003dd45
000000010003dd42	movq	%rcx, %rdx
000000010003dd45	movq	%rdx, -0xd0(%rbp)
000000010003dd4c	movq	%rsi, %rax
000000010003dd4f	cmpq	%rsi, %rdx
000000010003dd52	jae	0x10003dde2
000000010003dd58	xorl	%ecx, %ecx
000000010003dd5a	movq	%rdx, %rax
000000010003dd5d	subq	$0x3, %rax
000000010003dd61	cmovaeq	%rax, %rcx
000000010003dd65	leaq	0x1(%rdx), %rax
000000010003dd69	cmpq	%rcx, %rax
000000010003dd6c	jae	0x10003dd80
000000010003dd6e	leaq	0xc5a3(%rip), %rdx
000000010003dd75	movq	%rcx, %rdi
000000010003dd78	movq	%rax, %rsi
000000010003dd7b	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010003dd80	je	0x10003dddf
000000010003dd82	leaq	(%rdi,%rcx), %r9
000000010003dd86	addq	%rdi, %rax
000000010003dd89	subq	%r9, %rax
000000010003dd8c	cmpb	$-0x41, (%rdi,%rdx)
000000010003dd90	jle	0x10003dd97
000000010003dd92	decq	%rax
000000010003dd95	jmp	0x10003dddf
000000010003dd97	cmpq	%rdx, %rcx
000000010003dd9a	je	0x10003dddf
000000010003dd9c	addq	%rdi, %rdx
000000010003dd9f	cmpb	$-0x41, -0x1(%rdx)
000000010003dda3	jle	0x10003ddab
000000010003dda5	addq	$-0x2, %rax
000000010003dda9	jmp	0x10003dddf
000000010003ddab	decq	%rdx
000000010003ddae	cmpq	%rdx, %r9
000000010003ddb1	je	0x10003dddf
000000010003ddb3	cmpb	$-0x41, -0x1(%rdx)
000000010003ddb7	jle	0x10003ddbf
000000010003ddb9	addq	$-0x3, %rax
000000010003ddbd	jmp	0x10003dddf
000000010003ddbf	decq	%rdx
000000010003ddc2	cmpq	%rdx, %r9
000000010003ddc5	je	0x10003dddf
000000010003ddc7	cmpb	$-0x41, -0x1(%rdx)
000000010003ddcb	jle	0x10003ddd3
000000010003ddcd	addq	$-0x4, %rax
000000010003ddd1	jmp	0x10003dddf
000000010003ddd3	decq	%rdx
000000010003ddd6	cmpq	%rdx, %r9
000000010003ddd9	je	0x10003dddf
000000010003dddb	addq	$-0x5, %rax
000000010003dddf	addq	%rcx, %rax
000000010003dde2	testq	%rax, %rax
000000010003dde5	je	0x10003ddf5
000000010003dde7	cmpq	%rsi, %rax
000000010003ddea	jae	0x10003de26
000000010003ddec	cmpb	$-0x41, (%rdi,%rax)
000000010003ddf0	jle	0x10003de2e
000000010003ddf2	subq	%rax, %rsi
000000010003ddf5	movq	%rsi, %rcx
000000010003ddf8	testq	%rcx, %rcx
000000010003ddfb	jne	0x10003de11
000000010003ddfd	leaq	0x8902(%rip), %rdi
000000010003de04	movl	$0x2b, %esi
000000010003de09	movq	%r8, %rdx
000000010003de0c	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010003de11	movzbl	(%rdi,%rax), %edx
000000010003de15	testb	%dl, %dl
000000010003de17	js	0x10003de39
000000010003de19	movl	%edx, -0x4(%rbp)
000000010003de1c	movl	$0x1, %ecx
000000010003de21	jmp	0x10003dec1
000000010003de26	movq	%rsi, %rcx
000000010003de29	subq	%rax, %rcx
000000010003de2c	je	0x10003ddf8
000000010003de2e	movq	%rax, %rdx
000000010003de31	movq	%rsi, %rcx
000000010003de34	callq	__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E ## core::str::slice_error_fail::hdd8c6cbe6663e024
000000010003de39	movl	%edx, %ecx
000000010003de3b	andl	$0x1f, %ecx
000000010003de3e	movzbl	0x1(%rdi,%rax), %r9d
000000010003de44	andl	$0x3f, %r9d
000000010003de48	cmpb	$-0x21, %dl
000000010003de4b	jbe	0x10003de84
000000010003de4d	movzbl	0x2(%rdi,%rax), %esi
000000010003de52	shll	$0x6, %r9d
000000010003de56	andl	$0x3f, %esi
000000010003de59	orl	%r9d, %esi
000000010003de5c	cmpb	$-0x10, %dl
000000010003de5f	jb	0x10003de8e
000000010003de61	movzbl	0x3(%rdi,%rax), %edx
000000010003de66	andl	$0x7, %ecx
000000010003de69	shll	$0x12, %ecx
000000010003de6c	shll	$0x6, %esi
000000010003de6f	andl	$0x3f, %edx
000000010003de72	orl	%esi, %edx
000000010003de74	orl	%ecx, %edx
000000010003de76	cmpl	$0x110000, %edx                 ## imm = 0x110000
000000010003de7c	je	0x10003ddfd
000000010003de82	jmp	0x10003de95
000000010003de84	shll	$0x6, %ecx
000000010003de87	orl	%r9d, %ecx
000000010003de8a	movl	%ecx, %edx
000000010003de8c	jmp	0x10003de95
000000010003de8e	shll	$0xc, %ecx
000000010003de91	orl	%ecx, %esi
000000010003de93	movl	%esi, %edx
000000010003de95	movl	%edx, -0x4(%rbp)
000000010003de98	movl	$0x1, %ecx
000000010003de9d	cmpl	$0x80, %edx
000000010003dea3	jb	0x10003dec1
000000010003dea5	movl	$0x2, %ecx
000000010003deaa	cmpl	$0x800, %edx                    ## imm = 0x800
000000010003deb0	jb	0x10003dec1
000000010003deb2	cmpl	$0x10000, %edx                  ## imm = 0x10000
000000010003deb8	movl	$0x4, %ecx
000000010003debd	sbbq	$0x0, %rcx
000000010003dec1	addq	%rax, %rcx
000000010003dec4	movq	%rax, -0xb8(%rbp)
000000010003decb	movq	%rcx, -0xb0(%rbp)
000000010003ded2	leaq	-0xd0(%rbp), %rax
000000010003ded9	movq	%rax, -0x98(%rbp)
000000010003dee0	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010003dee7	movq	%rax, -0x90(%rbp)
000000010003deee	leaq	-0x4(%rbp), %rax
000000010003def2	movq	%rax, -0x88(%rbp)
000000010003def9	leaq	__ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c3a6ac0a6f4b647E(%rip), %rax ## _$LT$char$u20$as$u20$core..fmt..Debug$GT$::fmt::h2c3a6ac0a6f4b647
000000010003df00	movq	%rax, -0x80(%rbp)
000000010003df04	leaq	-0xb8(%rbp), %rax
000000010003df0b	movq	%rax, -0x78(%rbp)
000000010003df0f	leaq	__ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h13afdf0493bb600eE(%rip), %rax ## _$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$::fmt::h13afdf0493bb600e
000000010003df16	movq	%rax, -0x70(%rbp)
000000010003df1a	leaq	-0x18(%rbp), %rax
000000010003df1e	movq	%rax, -0x68(%rbp)
000000010003df22	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010003df29	movq	%rax, -0x60(%rbp)
000000010003df2d	leaq	-0xa8(%rbp), %rcx
000000010003df34	movq	%rcx, -0x58(%rbp)
000000010003df38	movq	%rax, -0x50(%rbp)
000000010003df3c	leaq	0xc315(%rip), %rax
000000010003df43	movq	%rax, -0x48(%rbp)
000000010003df47	movq	$0x5, -0x40(%rbp)
000000010003df4f	movq	$0x0, -0x28(%rbp)
000000010003df57	leaq	-0x98(%rbp), %rax
000000010003df5e	movq	%rax, -0x38(%rbp)
000000010003df62	movq	$0x5, -0x30(%rbp)
000000010003df6a	leaq	-0x48(%rbp), %rdi
000000010003df6e	movq	%r8, %rsi
000000010003df71	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010003df76	nopw	%cs:(%rax,%rax)
__ZN4core7unicode9printable5check17h7db81a2574c2f72dE:
000000010003df80	pushq	%rbp
000000010003df81	movq	%rsp, %rbp
000000010003df84	pushq	%r15
000000010003df86	pushq	%r14
000000010003df88	pushq	%rbx
000000010003df89	pushq	%rax
000000010003df8a	testq	%rdx, %rdx
000000010003df8d	je	0x10003dffa
000000010003df8f	movl	%edi, %r11d
000000010003df92	shrl	$0x8, %r11d
000000010003df96	leaq	(%rsi,%rdx,2), %rdx
000000010003df9a	xorl	%eax, %eax
000000010003df9c	movq	%rsi, %r14
000000010003df9f	movzbl	0x1(%rsi), %ebx
000000010003dfa3	addq	$0x2, %rsi
000000010003dfa7	leaq	(%rax,%rbx), %r10
000000010003dfab	cmpb	%r11b, (%r14)
000000010003dfae	jne	0x10003dff0
000000010003dfb0	cmpq	%rax, %r10
000000010003dfb3	jb	0x10003e07e
000000010003dfb9	cmpq	%r8, %r10
000000010003dfbc	ja	0x10003e090
000000010003dfc2	addq	%rcx, %rax
000000010003dfc5	xorl	%r14d, %r14d
000000010003dfc8	nopl	(%rax,%rax)
000000010003dfd0	cmpq	%r14, %rbx
000000010003dfd3	je	0x10003dff2
000000010003dfd5	leaq	0x1(%r14), %r15
000000010003dfd9	cmpb	%dil, (%rax,%r14)
000000010003dfdd	movq	%r15, %r14
000000010003dfe0	jne	0x10003dfd0
000000010003dfe2	jmp	0x10003e053
000000010003dfe4	nopw	%cs:(%rax,%rax)
000000010003dfee	nop
000000010003dff0	ja	0x10003dffa
000000010003dff2	movq	%r10, %rax
000000010003dff5	cmpq	%rdx, %rsi
000000010003dff8	jne	0x10003df9c
000000010003dffa	movq	0x10(%rbp), %rcx
000000010003dffe	testq	%rcx, %rcx
000000010003e001	je	0x10003e057
000000010003e003	addq	%r9, %rcx
000000010003e006	movzwl	%di, %edx
000000010003e009	movb	$0x1, %al
000000010003e00b	nopl	(%rax,%rax)
000000010003e010	leaq	0x1(%r9), %rdi
000000010003e014	movzbl	(%r9), %esi
000000010003e018	testb	%sil, %sil
000000010003e01b	js	0x10003e030
000000010003e01d	movq	%rdi, %r9
000000010003e020	subl	%esi, %edx
000000010003e022	jns	0x10003e04a
000000010003e024	jmp	0x10003e059
000000010003e026	nopw	%cs:(%rax,%rax)
000000010003e030	cmpq	%rcx, %rdi
000000010003e033	je	0x10003e066
000000010003e035	movzbl	0x1(%r9), %edi
000000010003e03a	addq	$0x2, %r9
000000010003e03e	andl	$0x7f, %esi
000000010003e041	shll	$0x8, %esi
000000010003e044	orl	%edi, %esi
000000010003e046	subl	%esi, %edx
000000010003e048	js	0x10003e059
000000010003e04a	xorb	$0x1, %al
000000010003e04c	cmpq	%rcx, %r9
000000010003e04f	jne	0x10003e010
000000010003e051	jmp	0x10003e059
000000010003e053	xorl	%eax, %eax
000000010003e055	jmp	0x10003e059
000000010003e057	movb	$0x1, %al
000000010003e059	andb	$0x1, %al
000000010003e05b	addq	$0x8, %rsp
000000010003e05f	popq	%rbx
000000010003e060	popq	%r14
000000010003e062	popq	%r15
000000010003e064	popq	%rbp
000000010003e065	retq
000000010003e066	leaq	0x8699(%rip), %rdi
000000010003e06d	leaq	0xc2bc(%rip), %rdx
000000010003e074	movl	$0x2b, %esi
000000010003e079	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
000000010003e07e	leaq	0xc2c3(%rip), %rdx
000000010003e085	movq	%rax, %rdi
000000010003e088	movq	%r10, %rsi
000000010003e08b	callq	__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E ## core::slice::index::slice_index_order_fail::h4ae574740f24bf16
000000010003e090	leaq	0xc2b1(%rip), %rdx
000000010003e097	movq	%r10, %rdi
000000010003e09a	movq	%r8, %rsi
000000010003e09d	callq	__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E ## core::slice::index::slice_end_index_len_fail::h36a4aa94eb3902e5
000000010003e0a2	nopw	%cs:(%rax,%rax)
000000010003e0ac	nopl	(%rax)
__ZN4core7unicode9printable12is_printable17he44a4dc6186a389eE:
000000010003e0b0	pushq	%rbp
000000010003e0b1	movq	%rsp, %rbp
000000010003e0b4	subq	$0x10, %rsp
000000010003e0b8	cmpl	$0x20, %edi
000000010003e0bb	jae	0x10003e0c1
000000010003e0bd	xorl	%eax, %eax
000000010003e0bf	jmp	0x10003e0c8
000000010003e0c1	movb	$0x1, %al
000000010003e0c3	cmpl	$0x7f, %edi
000000010003e0c6	jae	0x10003e0ce
000000010003e0c8	addq	$0x10, %rsp
000000010003e0cc	popq	%rbp
000000010003e0cd	retq
000000010003e0ce	cmpl	$0x10000, %edi                  ## imm = 0x10000
000000010003e0d4	jae	0x10003e109
000000010003e0d6	movq	$0x12f, (%rsp)                  ## imm = 0x12F
000000010003e0de	leaq	0x8e4b(%rip), %rsi
000000010003e0e5	leaq	0x8e94(%rip), %rcx
000000010003e0ec	leaq	0x8fac(%rip), %r9
000000010003e0f3	movl	$0x28, %edx
000000010003e0f8	movl	$0x11f, %r8d                    ## imm = 0x11F
000000010003e0fe	callq	__ZN4core7unicode9printable5check17h7db81a2574c2f72dE ## core::unicode::printable::check::h7db81a2574c2f72d
000000010003e103	addq	$0x10, %rsp
000000010003e107	popq	%rbp
000000010003e108	retq
000000010003e109	cmpl	$0x20000, %edi                  ## imm = 0x20000
000000010003e10f	jae	0x10003e144
000000010003e111	movq	$0x1c2, (%rsp)                  ## imm = 0x1C2
000000010003e119	leaq	0x8b32(%rip), %rsi
000000010003e120	leaq	0x8b83(%rip), %rcx
000000010003e127	leaq	0x8c40(%rip), %r9
000000010003e12e	movl	$0x2c, %edx
000000010003e133	movl	$0xc4, %r8d
000000010003e139	callq	__ZN4core7unicode9printable5check17h7db81a2574c2f72dE ## core::unicode::printable::check::h7db81a2574c2f72d
000000010003e13e	addq	$0x10, %rsp
000000010003e142	popq	%rbp
000000010003e143	retq
000000010003e144	movd	%edi, %xmm0
000000010003e148	pshufd	$0x0, %xmm0, %xmm0              ## xmm0 = xmm0[0,0,0,0]
000000010003e14d	paddd	0x853b(%rip), %xmm0
000000010003e155	pxor	0x8543(%rip), %xmm0
000000010003e15d	movdqa	0x854b(%rip), %xmm1
000000010003e165	pcmpgtd	%xmm0, %xmm1
000000010003e169	movmskps	%xmm1, %ecx
000000010003e16c	xorl	%eax, %eax
000000010003e16e	testl	%ecx, %ecx
000000010003e170	jne	0x10003e0c8
000000010003e176	leal	-0x3134b(%rdi), %ecx
000000010003e17c	cmpl	$0x5, %ecx
000000010003e17f	jb	0x10003e0c8
000000010003e185	leal	-0x323b0(%rdi), %ecx
000000010003e18b	cmpl	$0xadd50, %ecx                  ## imm = 0xADD50
000000010003e191	jb	0x10003e0c8
000000010003e197	movl	%edi, %ecx
000000010003e199	andl	$-0x20, %ecx
000000010003e19c	cmpl	$0x2a6e0, %ecx                  ## imm = 0x2A6E0
000000010003e1a2	je	0x10003e0c8
000000010003e1a8	movl	%edi, %ecx
000000010003e1aa	andl	$-0x2, %ecx
000000010003e1ad	cmpl	$0x2b81e, %ecx                  ## imm = 0x2B81E
000000010003e1b3	je	0x10003e0c8
000000010003e1b9	addl	$0xffef0000, %edi               ## imm = 0xFFEF0000
000000010003e1bf	cmpl	$0xfffd01f0, %edi               ## imm = 0xFFFD01F0
000000010003e1c5	setb	%al
000000010003e1c8	addq	$0x10, %rsp
000000010003e1cc	popq	%rbp
000000010003e1cd	retq
000000010003e1ce	nop
__ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h873b274d311b3c6dE:
000000010003e1d0	pushq	%rbp
000000010003e1d1	movq	%rsp, %rbp
000000010003e1d4	pushq	%rbx
000000010003e1d5	subq	$0x18, %rsp
000000010003e1d9	movq	%rsi, %rbx
000000010003e1dc	movq	%rdi, -0x20(%rbp)
000000010003e1e0	movq	0x20(%rsi), %rdi
000000010003e1e4	movq	0x28(%rsi), %rax
000000010003e1e8	leaq	0x9040(%rip), %rsi
000000010003e1ef	movl	$0xd, %edx
000000010003e1f4	callq	*0x18(%rax)
000000010003e1f7	movq	%rbx, -0x18(%rbp)
000000010003e1fb	movb	%al, -0x10(%rbp)
000000010003e1fe	movb	$0x0, -0xf(%rbp)
000000010003e202	leaq	0x7763(%rip), %rsi
000000010003e209	leaq	0xc1b0(%rip), %r8
000000010003e210	leaq	-0x18(%rbp), %rdi
000000010003e214	leaq	-0x20(%rbp), %rcx
000000010003e218	movl	$0x4, %edx
000000010003e21d	callq	__ZN4core3fmt8builders11DebugStruct5field17ha819dded0c6eed4fE ## core::fmt::builders::DebugStruct::field::ha819dded0c6eed4f
000000010003e222	cmpb	$0x0, -0xf(%rbp)
000000010003e226	movzbl	-0x10(%rbp), %eax
000000010003e22a	je	0x10003e232
000000010003e22c	testb	%al, %al
000000010003e22e	movb	$0x1, %al
000000010003e230	je	0x10003e239
000000010003e232	addq	$0x18, %rsp
000000010003e236	popq	%rbx
000000010003e237	popq	%rbp
000000010003e238	retq
000000010003e239	movq	-0x18(%rbp), %rax
000000010003e23d	testb	$0x4, 0x34(%rax)
000000010003e241	jne	0x10003e259
000000010003e243	movq	0x20(%rax), %rdi
000000010003e247	movq	0x28(%rax), %rax
000000010003e24b	leaq	0x868f(%rip), %rsi
000000010003e252	movl	$0x2, %edx
000000010003e257	jmp	0x10003e26d
000000010003e259	movq	0x20(%rax), %rdi
000000010003e25d	movq	0x28(%rax), %rax
000000010003e261	leaq	0x8678(%rip), %rsi
000000010003e268	movl	$0x1, %edx
000000010003e26d	callq	*0x18(%rax)
000000010003e270	addq	$0x18, %rsp
000000010003e274	popq	%rbx
000000010003e275	popq	%rbp
000000010003e276	retq
000000010003e277	nopw	(%rax,%rax)
__ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17h1ca489ae38ff676fE:
000000010003e280	pushq	%rbp
000000010003e281	movq	%rsp, %rbp
000000010003e284	popq	%rbp
000000010003e285	jmp	__ZN4core3num14from_str_radix17h4badf1622e618239E ## core::num::from_str_radix::h4badf1622e618239
000000010003e28a	nopw	(%rax,%rax)
__ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$8from_str17h490d0f91aebd0fe9E:
000000010003e290	pushq	%rbp
000000010003e291	movq	%rsp, %rbp
000000010003e294	testq	%rdx, %rdx
000000010003e297	je	0x10003e2b3
000000010003e299	movq	%rdx, %rcx
000000010003e29c	movzbl	(%rsi), %eax
000000010003e29f	cmpl	$0x2d, %eax
000000010003e2a2	je	0x10003e2bc
000000010003e2a4	cmpl	$0x2b, %eax
000000010003e2a7	jne	0x10003e2cb
000000010003e2a9	decq	%rcx
000000010003e2ac	je	0x10003e2c2
000000010003e2ae	incq	%rsi
000000010003e2b1	jmp	0x10003e2cb
000000010003e2b3	movb	$0x0, 0x1(%rdi)
000000010003e2b7	jmp	0x10003e354
000000010003e2bc	cmpq	$0x1, %rcx
000000010003e2c0	jne	0x10003e2cb
000000010003e2c2	movb	$0x1, 0x1(%rdi)
000000010003e2c6	jmp	0x10003e354
000000010003e2cb	cmpq	$0x11, %rcx
000000010003e2cf	jae	0x10003e30f
000000010003e2d1	xorl	%edx, %edx
000000010003e2d3	xorl	%eax, %eax
000000010003e2d5	nopw	%cs:(%rax,%rax)
000000010003e2df	nop
000000010003e2e0	movzbl	(%rsi,%rdx), %r8d
000000010003e2e5	addl	$-0x30, %r8d
000000010003e2e9	cmpl	$0x9, %r8d
000000010003e2ed	ja	0x10003e2c2
000000010003e2ef	leaq	(%rax,%rax,4), %rax
000000010003e2f3	movl	%r8d, %r8d
000000010003e2f6	leaq	(%r8,%rax,2), %rax
000000010003e2fa	incq	%rdx
000000010003e2fd	cmpq	%rdx, %rcx
000000010003e300	jne	0x10003e2e0
000000010003e302	movq	%rax, 0x8(%rdi)
000000010003e306	xorl	%eax, %eax
000000010003e308	movb	%al, (%rdi)
000000010003e30a	movq	%rdi, %rax
000000010003e30d	popq	%rbp
000000010003e30e	retq
000000010003e30f	xorl	%r8d, %r8d
000000010003e312	movl	$0xa, %r9d
000000010003e318	xorl	%eax, %eax
000000010003e31a	nopw	(%rax,%rax)
000000010003e320	cmpq	%r8, %rcx
000000010003e323	je	0x10003e302
000000010003e325	movzbl	(%rsi,%r8), %r11d
000000010003e32a	mulq	%r9
000000010003e32d	seto	%dl
000000010003e330	addl	$-0x30, %r11d
000000010003e334	cmpl	$0xa, %r11d
000000010003e338	cmovbl	%r11d, %r10d
000000010003e33c	jae	0x10003e2c2
000000010003e33e	testb	%dl, %dl
000000010003e340	jne	0x10003e350
000000010003e342	movl	%r10d, %edx
000000010003e345	incq	%r8
000000010003e348	movl	%r11d, %r10d
000000010003e34b	addq	%rdx, %rax
000000010003e34e	jae	0x10003e320
000000010003e350	movb	$0x2, 0x1(%rdi)
000000010003e354	movb	$0x1, %al
000000010003e356	movb	%al, (%rdi)
000000010003e358	movq	%rdi, %rax
000000010003e35b	popq	%rbp
000000010003e35c	retq
000000010003e35d	nopl	(%rax)
__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h4ff30f3db6526c2aE:
000000010003e360	pushq	%rbp
000000010003e361	movq	%rsp, %rbp
000000010003e364	subq	$0x80, %rsp
000000010003e36b	movzbl	(%rdi), %eax
000000010003e36e	leaq	(%rbp), %r8
000000010003e372	xorl	%r9d, %r9d
000000010003e375	movl	$0x30, %ecx
000000010003e37a	movl	%eax, %edx
000000010003e37c	nopl	(%rax)
000000010003e380	movl	%eax, %edi
000000010003e382	andb	$0xf, %dil
000000010003e386	shrb	$0x4, %dl
000000010003e389	cmpb	$0xa, %dil
000000010003e38d	movl	$0x57, %r10d
000000010003e393	cmovbl	%ecx, %r10d
000000010003e397	addb	%dil, %r10b
000000010003e39a	movb	%r10b, -0x1(%r8)
000000010003e39e	decq	%r8
000000010003e3a1	incq	%r9
000000010003e3a4	cmpb	$0x10, %al
000000010003e3a6	movl	%edx, %eax
000000010003e3a8	jae	0x10003e380
000000010003e3aa	movl	$0x80, %edi
000000010003e3af	subq	%r9, %rdi
000000010003e3b2	cmpq	$0x81, %rdi
000000010003e3b9	jae	0x10003e3dd
000000010003e3bb	leaq	0x8545(%rip), %rdx
000000010003e3c2	movl	$0x2, %ecx
000000010003e3c7	movq	%rsi, %rdi
000000010003e3ca	movl	$0x1, %esi
000000010003e3cf	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e3d4	addq	$0x80, %rsp
000000010003e3db	popq	%rbp
000000010003e3dc	retq
000000010003e3dd	leaq	0xbcc4(%rip), %rdx
000000010003e3e4	movl	$0x80, %esi
000000010003e3e9	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e3ee	nop
__ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h9d2e79c904d8a800E:
000000010003e3f0	pushq	%rbp
000000010003e3f1	movq	%rsp, %rbp
000000010003e3f4	subq	$0x80, %rsp
000000010003e3fb	movzbl	(%rdi), %eax
000000010003e3fe	leaq	(%rbp), %r8
000000010003e402	xorl	%r9d, %r9d
000000010003e405	movl	$0x30, %ecx
000000010003e40a	movl	%eax, %edx
000000010003e40c	nopl	(%rax)
000000010003e410	movl	%eax, %edi
000000010003e412	andb	$0xf, %dil
000000010003e416	shrb	$0x4, %dl
000000010003e419	cmpb	$0xa, %dil
000000010003e41d	movl	$0x37, %r10d
000000010003e423	cmovbl	%ecx, %r10d
000000010003e427	addb	%dil, %r10b
000000010003e42a	movb	%r10b, -0x1(%r8)
000000010003e42e	decq	%r8
000000010003e431	incq	%r9
000000010003e434	cmpb	$0x10, %al
000000010003e436	movl	%edx, %eax
000000010003e438	jae	0x10003e410
000000010003e43a	movl	$0x80, %edi
000000010003e43f	subq	%r9, %rdi
000000010003e442	cmpq	$0x81, %rdi
000000010003e449	jae	0x10003e46d
000000010003e44b	leaq	0x84b5(%rip), %rdx
000000010003e452	movl	$0x2, %ecx
000000010003e457	movq	%rsi, %rdi
000000010003e45a	movl	$0x1, %esi
000000010003e45f	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e464	addq	$0x80, %rsp
000000010003e46b	popq	%rbp
000000010003e46c	retq
000000010003e46d	leaq	0xbc34(%rip), %rdx
000000010003e474	movl	$0x80, %esi
000000010003e479	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e47e	nop
__ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hf5351be80c8a3767E:
000000010003e480	pushq	%rbp
000000010003e481	movq	%rsp, %rbp
000000010003e484	subq	$0x80, %rsp
000000010003e48b	movl	(%rdi), %eax
000000010003e48d	leaq	(%rbp), %r8
000000010003e491	xorl	%r9d, %r9d
000000010003e494	movl	$0x30, %ecx
000000010003e499	movl	%eax, %edx
000000010003e49b	nopl	(%rax,%rax)
000000010003e4a0	shrl	$0x4, %edx
000000010003e4a3	movl	%eax, %edi
000000010003e4a5	andb	$0xf, %dil
000000010003e4a9	cmpb	$0xa, %dil
000000010003e4ad	movl	$0x57, %r10d
000000010003e4b3	cmovbl	%ecx, %r10d
000000010003e4b7	addb	%dil, %r10b
000000010003e4ba	movb	%r10b, -0x1(%r8)
000000010003e4be	decq	%r8
000000010003e4c1	incq	%r9
000000010003e4c4	cmpl	$0x10, %eax
000000010003e4c7	movl	%edx, %eax
000000010003e4c9	jae	0x10003e4a0
000000010003e4cb	movl	$0x80, %edi
000000010003e4d0	subq	%r9, %rdi
000000010003e4d3	cmpq	$0x81, %rdi
000000010003e4da	jae	0x10003e4fe
000000010003e4dc	leaq	0x8424(%rip), %rdx
000000010003e4e3	movl	$0x2, %ecx
000000010003e4e8	movq	%rsi, %rdi
000000010003e4eb	movl	$0x1, %esi
000000010003e4f0	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e4f5	addq	$0x80, %rsp
000000010003e4fc	popq	%rbp
000000010003e4fd	retq
000000010003e4fe	leaq	0xbba3(%rip), %rdx
000000010003e505	movl	$0x80, %esi
000000010003e50a	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e50f	nop
__ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h9bf3f388e43276e4E:
000000010003e510	pushq	%rbp
000000010003e511	movq	%rsp, %rbp
000000010003e514	subq	$0x80, %rsp
000000010003e51b	movl	(%rdi), %eax
000000010003e51d	leaq	(%rbp), %r8
000000010003e521	xorl	%r9d, %r9d
000000010003e524	movl	$0x30, %ecx
000000010003e529	movl	%eax, %edx
000000010003e52b	nopl	(%rax,%rax)
000000010003e530	shrl	$0x4, %edx
000000010003e533	movl	%eax, %edi
000000010003e535	andb	$0xf, %dil
000000010003e539	cmpb	$0xa, %dil
000000010003e53d	movl	$0x37, %r10d
000000010003e543	cmovbl	%ecx, %r10d
000000010003e547	addb	%dil, %r10b
000000010003e54a	movb	%r10b, -0x1(%r8)
000000010003e54e	decq	%r8
000000010003e551	incq	%r9
000000010003e554	cmpl	$0x10, %eax
000000010003e557	movl	%edx, %eax
000000010003e559	jae	0x10003e530
000000010003e55b	movl	$0x80, %edi
000000010003e560	subq	%r9, %rdi
000000010003e563	cmpq	$0x81, %rdi
000000010003e56a	jae	0x10003e58e
000000010003e56c	leaq	0x8394(%rip), %rdx
000000010003e573	movl	$0x2, %ecx
000000010003e578	movq	%rsi, %rdi
000000010003e57b	movl	$0x1, %esi
000000010003e580	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e585	addq	$0x80, %rsp
000000010003e58c	popq	%rbp
000000010003e58d	retq
000000010003e58e	leaq	0xbb13(%rip), %rdx
000000010003e595	movl	$0x80, %esi
000000010003e59a	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e59f	nop
__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$3fmt17hdccece5688b0c434E:
000000010003e5a0	pushq	%rbp
000000010003e5a1	movq	%rsp, %rbp
000000010003e5a4	subq	$0x80, %rsp
000000010003e5ab	movq	(%rdi), %rax
000000010003e5ae	leaq	(%rbp), %r8
000000010003e5b2	xorl	%r9d, %r9d
000000010003e5b5	movl	$0x30, %ecx
000000010003e5ba	movq	%rax, %rdx
000000010003e5bd	nopl	(%rax)
000000010003e5c0	shrq	$0x4, %rdx
000000010003e5c4	movl	%eax, %edi
000000010003e5c6	andb	$0xf, %dil
000000010003e5ca	cmpb	$0xa, %dil
000000010003e5ce	movl	$0x57, %r10d
000000010003e5d4	cmovbl	%ecx, %r10d
000000010003e5d8	addb	%dil, %r10b
000000010003e5db	movb	%r10b, -0x1(%r8)
000000010003e5df	decq	%r8
000000010003e5e2	incq	%r9
000000010003e5e5	cmpq	$0x10, %rax
000000010003e5e9	movq	%rdx, %rax
000000010003e5ec	jae	0x10003e5c0
000000010003e5ee	movl	$0x80, %edi
000000010003e5f3	subq	%r9, %rdi
000000010003e5f6	cmpq	$0x81, %rdi
000000010003e5fd	jae	0x10003e621
000000010003e5ff	leaq	0x8301(%rip), %rdx
000000010003e606	movl	$0x2, %ecx
000000010003e60b	movq	%rsi, %rdi
000000010003e60e	movl	$0x1, %esi
000000010003e613	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e618	addq	$0x80, %rsp
000000010003e61f	popq	%rbp
000000010003e620	retq
000000010003e621	leaq	0xba80(%rip), %rdx
000000010003e628	movl	$0x80, %esi
000000010003e62d	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e632	nopw	%cs:(%rax,%rax)
000000010003e63c	nopl	(%rax)
__ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h6243124a4619f577E:
000000010003e640	pushq	%rbp
000000010003e641	movq	%rsp, %rbp
000000010003e644	subq	$0x80, %rsp
000000010003e64b	movq	(%rdi), %rax
000000010003e64e	leaq	(%rbp), %r8
000000010003e652	xorl	%r9d, %r9d
000000010003e655	movl	$0x30, %ecx
000000010003e65a	movq	%rax, %rdx
000000010003e65d	nopl	(%rax)
000000010003e660	shrq	$0x4, %rdx
000000010003e664	movl	%eax, %edi
000000010003e666	andb	$0xf, %dil
000000010003e66a	cmpb	$0xa, %dil
000000010003e66e	movl	$0x37, %r10d
000000010003e674	cmovbl	%ecx, %r10d
000000010003e678	addb	%dil, %r10b
000000010003e67b	movb	%r10b, -0x1(%r8)
000000010003e67f	decq	%r8
000000010003e682	incq	%r9
000000010003e685	cmpq	$0x10, %rax
000000010003e689	movq	%rdx, %rax
000000010003e68c	jae	0x10003e660
000000010003e68e	movl	$0x80, %edi
000000010003e693	subq	%r9, %rdi
000000010003e696	cmpq	$0x81, %rdi
000000010003e69d	jae	0x10003e6c1
000000010003e69f	leaq	0x8261(%rip), %rdx
000000010003e6a6	movl	$0x2, %ecx
000000010003e6ab	movq	%rsi, %rdi
000000010003e6ae	movl	$0x1, %esi
000000010003e6b3	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e6b8	addq	$0x80, %rsp
000000010003e6bf	popq	%rbp
000000010003e6c0	retq
000000010003e6c1	leaq	0xb9e0(%rip), %rdx
000000010003e6c8	movl	$0x80, %esi
000000010003e6cd	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e6d2	nopw	%cs:(%rax,%rax)
000000010003e6dc	nopl	(%rax)
__ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17hc24811d62d4aef55E:
000000010003e6e0	pushq	%rbp
000000010003e6e1	movq	%rsp, %rbp
000000010003e6e4	subq	$0x80, %rsp
000000010003e6eb	movl	0x34(%rsi), %eax
000000010003e6ee	testb	$0x10, %al
000000010003e6f0	jne	0x10003e7de
000000010003e6f6	testb	$0x20, %al
000000010003e6f8	jne	0x10003e820
000000010003e6fe	movq	(%rdi), %rcx
000000010003e701	movl	$0x27, %eax
000000010003e706	cmpq	$0x2710, %rcx                   ## imm = 0x2710
000000010003e70d	jb	0x10003e8a1
000000010003e713	movl	$0x27, %r9d
000000010003e719	movabsq	$0x346dc5d63886594b, %rdi       ## imm = 0x346DC5D63886594B
000000010003e723	leaq	0x81e3(%rip), %r8
000000010003e72a	nopw	(%rax,%rax)
000000010003e730	movq	%rcx, %rax
000000010003e733	mulq	%rdi
000000010003e736	shrq	$0xb, %rdx
000000010003e73a	imull	$0x2710, %edx, %eax             ## imm = 0x2710
000000010003e740	movl	%ecx, %r10d
000000010003e743	subl	%eax, %r10d
000000010003e746	imull	$0x147b, %r10d, %r11d           ## imm = 0x147B
000000010003e74d	shrl	$0x13, %r11d
000000010003e751	imull	$0x64, %r11d, %eax
000000010003e755	subl	%eax, %r10d
000000010003e758	movzwl	%r10w, %r10d
000000010003e75c	leaq	-0x4(%r9), %rax
000000010003e760	movzwl	(%r8,%r11,2), %r11d
000000010003e765	movw	%r11w, -0x84(%rbp,%r9)
000000010003e76e	movzwl	(%r8,%r10,2), %r10d
000000010003e773	movw	%r10w, -0x82(%rbp,%r9)
000000010003e77c	movq	%rax, %r9
000000010003e77f	cmpq	$0x5f5e0ff, %rcx                ## imm = 0x5F5E0FF
000000010003e786	movq	%rdx, %rcx
000000010003e789	ja	0x10003e730
000000010003e78b	cmpq	$0x63, %rdx
000000010003e78f	jbe	0x10003e7c2
000000010003e791	movzwl	%dx, %ecx
000000010003e794	shrl	$0x2, %ecx
000000010003e797	imull	$0x147b, %ecx, %ecx             ## imm = 0x147B
000000010003e79d	shrl	$0x11, %ecx
000000010003e7a0	imull	$0x64, %ecx, %edi
000000010003e7a3	subl	%edi, %edx
000000010003e7a5	movzwl	%dx, %edx
000000010003e7a8	leaq	0x815e(%rip), %rdi
000000010003e7af	movzwl	(%rdi,%rdx,2), %edx
000000010003e7b3	movw	%dx, -0x82(%rbp,%rax)
000000010003e7bb	addq	$-0x2, %rax
000000010003e7bf	movq	%rcx, %rdx
000000010003e7c2	cmpq	$0xa, %rdx
000000010003e7c6	jae	0x10003e8b3
000000010003e7cc	addb	$0x30, %dl
000000010003e7cf	movb	%dl, -0x81(%rbp,%rax)
000000010003e7d6	decq	%rax
000000010003e7d9	jmp	0x10003e8ca
000000010003e7de	movq	(%rdi), %rax
000000010003e7e1	leaq	(%rbp), %r8
000000010003e7e5	xorl	%r9d, %r9d
000000010003e7e8	movl	$0x30, %ecx
000000010003e7ed	movq	%rax, %rdx
000000010003e7f0	shrq	$0x4, %rdx
000000010003e7f4	movl	%eax, %edi
000000010003e7f6	andb	$0xf, %dil
000000010003e7fa	cmpb	$0xa, %dil
000000010003e7fe	movl	$0x57, %r10d
000000010003e804	cmovbl	%ecx, %r10d
000000010003e808	addb	%dil, %r10b
000000010003e80b	movb	%r10b, -0x1(%r8)
000000010003e80f	decq	%r8
000000010003e812	incq	%r9
000000010003e815	cmpq	$0x10, %rax
000000010003e819	movq	%rdx, %rax
000000010003e81c	jae	0x10003e7f0
000000010003e81e	jmp	0x10003e86e
000000010003e820	movq	(%rdi), %rax
000000010003e823	leaq	(%rbp), %r8
000000010003e827	xorl	%r9d, %r9d
000000010003e82a	movl	$0x30, %ecx
000000010003e82f	movq	%rax, %rdx
000000010003e832	nopw	%cs:(%rax,%rax)
000000010003e83c	nopl	(%rax)
000000010003e840	shrq	$0x4, %rdx
000000010003e844	movl	%eax, %edi
000000010003e846	andb	$0xf, %dil
000000010003e84a	cmpb	$0xa, %dil
000000010003e84e	movl	$0x37, %r10d
000000010003e854	cmovbl	%ecx, %r10d
000000010003e858	addb	%dil, %r10b
000000010003e85b	movb	%r10b, -0x1(%r8)
000000010003e85f	decq	%r8
000000010003e862	incq	%r9
000000010003e865	cmpq	$0x10, %rax
000000010003e869	movq	%rdx, %rax
000000010003e86c	jae	0x10003e840
000000010003e86e	movl	$0x80, %edi
000000010003e873	subq	%r9, %rdi
000000010003e876	cmpq	$0x81, %rdi
000000010003e87d	jae	0x10003e8f7
000000010003e87f	leaq	0x8081(%rip), %rdx
000000010003e886	movl	$0x2, %ecx
000000010003e88b	movq	%rsi, %rdi
000000010003e88e	movl	$0x1, %esi
000000010003e893	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e898	addq	$0x80, %rsp
000000010003e89f	popq	%rbp
000000010003e8a0	retq
000000010003e8a1	movq	%rcx, %rdx
000000010003e8a4	cmpq	$0x63, %rdx
000000010003e8a8	ja	0x10003e791
000000010003e8ae	jmp	0x10003e7c2
000000010003e8b3	leaq	0x8053(%rip), %rcx
000000010003e8ba	movzwl	(%rcx,%rdx,2), %ecx
000000010003e8be	movw	%cx, -0x82(%rbp,%rax)
000000010003e8c6	addq	$-0x2, %rax
000000010003e8ca	leaq	-0x80(%rbp,%rax), %r8
000000010003e8cf	movl	$0x27, %r9d
000000010003e8d5	subq	%rax, %r9
000000010003e8d8	leaq	0x7e19(%rip), %rdx
000000010003e8df	movq	%rsi, %rdi
000000010003e8e2	movl	$0x1, %esi
000000010003e8e7	xorl	%ecx, %ecx
000000010003e8e9	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e8ee	addq	$0x80, %rsp
000000010003e8f5	popq	%rbp
000000010003e8f6	retq
000000010003e8f7	leaq	0xb7aa(%rip), %rdx
000000010003e8fe	movl	$0x80, %esi
000000010003e903	callq	__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E ## core::slice::index::slice_start_index_len_fail::h3a1d3f77836c25b1
000000010003e908	nopl	(%rax,%rax)
__ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hb08bf60f5df77f3dE:
000000010003e910	pushq	%rbp
000000010003e911	movq	%rsp, %rbp
000000010003e914	subq	$0x30, %rsp
000000010003e918	movzbl	(%rdi), %eax
000000010003e91b	cmpq	$0x63, %rax
000000010003e91f	jbe	0x10003e950
000000010003e921	movzbl	%al, %ecx
000000010003e924	leal	(%rcx,%rcx,4), %edx
000000010003e927	leal	(%rcx,%rdx,8), %ecx
000000010003e92a	movzwl	%cx, %edx
000000010003e92d	shrl	$0xc, %edx
000000010003e930	imull	$0x64, %edx, %ecx
000000010003e933	subb	%cl, %al
000000010003e935	movzbl	%al, %eax
000000010003e938	leaq	0x7fce(%rip), %rcx
000000010003e93f	movzwl	(%rcx,%rax,2), %eax
000000010003e943	movw	%ax, -0x2(%rbp)
000000010003e947	movl	$0x24, %ecx
000000010003e94c	movl	%edx, %eax
000000010003e94e	jmp	0x10003e959
000000010003e950	movl	$0x26, %ecx
000000010003e955	cmpb	$0xa, %al
000000010003e957	jae	0x10003e961
000000010003e959	orb	$0x30, %al
000000010003e95b	movb	%al, -0x27(%rbp,%rcx)
000000010003e95f	jmp	0x10003e975
000000010003e961	leaq	0x7fa5(%rip), %rcx
000000010003e968	movzwl	(%rcx,%rax,2), %eax
000000010003e96c	movw	%ax, -0x2(%rbp)
000000010003e970	movl	$0x25, %ecx
000000010003e975	leaq	-0x27(%rbp,%rcx), %r8
000000010003e97a	movl	$0x27, %r9d
000000010003e980	subq	%rcx, %r9
000000010003e983	leaq	0x7d6e(%rip), %rdx
000000010003e98a	movq	%rsi, %rdi
000000010003e98d	movl	$0x1, %esi
000000010003e992	xorl	%ecx, %ecx
000000010003e994	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003e999	addq	$0x30, %rsp
000000010003e99d	popq	%rbp
000000010003e99e	retq
000000010003e99f	nop
__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h4b5ed76a5f3e8336E:
000000010003e9a0	pushq	%rbp
000000010003e9a1	movq	%rsp, %rbp
000000010003e9a4	pushq	%rbx
000000010003e9a5	subq	$0x28, %rsp
000000010003e9a9	movslq	(%rdi), %rcx
000000010003e9ac	movq	%rcx, %rax
000000010003e9af	negq	%rax
000000010003e9b2	testq	%rcx, %rcx
000000010003e9b5	movl	%ecx, %r8d
000000010003e9b8	cmovsq	%rax, %r8
000000010003e9bc	movq	%rsi, %rdi
000000010003e9bf	movl	$0x27, %eax
000000010003e9c4	leaq	0x7f42(%rip), %rsi
000000010003e9cb	cmpq	$0x2710, %r8                    ## imm = 0x2710
000000010003e9d2	jb	0x10003ea87
000000010003e9d8	movl	$0x27, %r10d
000000010003e9de	movabsq	$0x346dc5d63886594b, %r9        ## imm = 0x346DC5D63886594B
000000010003e9e8	nopl	(%rax,%rax)
000000010003e9f0	movq	%r8, %rax
000000010003e9f3	mulq	%r9
000000010003e9f6	shrq	$0xb, %rdx
000000010003e9fa	imull	$0x2710, %edx, %eax             ## imm = 0x2710
000000010003ea00	movl	%r8d, %r11d
000000010003ea03	subl	%eax, %r11d
000000010003ea06	imull	$0x147b, %r11d, %ebx            ## imm = 0x147B
000000010003ea0d	shrl	$0x13, %ebx
000000010003ea10	imull	$0x64, %ebx, %eax
000000010003ea13	subl	%eax, %r11d
000000010003ea16	movzwl	%r11w, %r11d
000000010003ea1a	leaq	-0x4(%r10), %rax
000000010003ea1e	movzwl	(%rsi,%rbx,2), %ebx
000000010003ea22	movw	%bx, -0x33(%rbp,%r10)
000000010003ea28	movzwl	(%rsi,%r11,2), %r11d
000000010003ea2d	movw	%r11w, -0x31(%rbp,%r10)
000000010003ea33	movq	%rax, %r10
000000010003ea36	cmpq	$0x5f5e0ff, %r8                 ## imm = 0x5F5E0FF
000000010003ea3d	movq	%rdx, %r8
000000010003ea40	ja	0x10003e9f0
000000010003ea42	cmpq	$0x63, %rdx
000000010003ea46	jbe	0x10003ea75
000000010003ea48	movzwl	%dx, %r8d
000000010003ea4c	shrl	$0x2, %r8d
000000010003ea50	imull	$0x147b, %r8d, %r8d             ## imm = 0x147B
000000010003ea57	shrl	$0x11, %r8d
000000010003ea5b	imull	$0x64, %r8d, %r9d
000000010003ea5f	subl	%r9d, %edx
000000010003ea62	movzwl	%dx, %edx
000000010003ea65	movzwl	(%rsi,%rdx,2), %edx
000000010003ea69	movw	%dx, -0x31(%rbp,%rax)
000000010003ea6e	addq	$-0x2, %rax
000000010003ea72	movq	%r8, %rdx
000000010003ea75	cmpq	$0xa, %rdx
000000010003ea79	jae	0x10003ea92
000000010003ea7b	addb	$0x30, %dl
000000010003ea7e	movb	%dl, -0x30(%rbp,%rax)
000000010003ea82	decq	%rax
000000010003ea85	jmp	0x10003ea9f
000000010003ea87	movq	%r8, %rdx
000000010003ea8a	cmpq	$0x63, %rdx
000000010003ea8e	ja	0x10003ea48
000000010003ea90	jmp	0x10003ea75
000000010003ea92	movzwl	(%rsi,%rdx,2), %edx
000000010003ea96	movw	%dx, -0x31(%rbp,%rax)
000000010003ea9b	addq	$-0x2, %rax
000000010003ea9f	leaq	-0x2f(%rbp,%rax), %r8
000000010003eaa4	movl	$0x27, %r9d
000000010003eaaa	subq	%rax, %r9
000000010003eaad	notl	%ecx
000000010003eaaf	shrl	$0x1f, %ecx
000000010003eab2	leaq	0x7c3f(%rip), %rdx
000000010003eab9	movl	%ecx, %esi
000000010003eabb	xorl	%ecx, %ecx
000000010003eabd	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003eac2	addq	$0x28, %rsp
000000010003eac6	popq	%rbx
000000010003eac7	popq	%rbp
000000010003eac8	retq
000000010003eac9	nopl	(%rax)
__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hb5f3b7f7cca68a64E:
000000010003ead0	pushq	%rbp
000000010003ead1	movq	%rsp, %rbp
000000010003ead4	subq	$0x30, %rsp
000000010003ead8	movl	(%rdi), %ecx
000000010003eada	movl	$0x27, %eax
000000010003eadf	leaq	0x7e27(%rip), %rdi
000000010003eae6	cmpq	$0x2710, %rcx                   ## imm = 0x2710
000000010003eaed	jb	0x10003eba6
000000010003eaf3	movl	$0x27, %r9d
000000010003eaf9	movabsq	$0x346dc5d63886594b, %r8        ## imm = 0x346DC5D63886594B
000000010003eb03	nopw	%cs:(%rax,%rax)
000000010003eb0d	nopl	(%rax)
000000010003eb10	movq	%rcx, %rax
000000010003eb13	mulq	%r8
000000010003eb16	shrq	$0xb, %rdx
000000010003eb1a	imull	$0x2710, %edx, %eax             ## imm = 0x2710
000000010003eb20	movl	%ecx, %r10d
000000010003eb23	subl	%eax, %r10d
000000010003eb26	imull	$0x147b, %r10d, %r11d           ## imm = 0x147B
000000010003eb2d	shrl	$0x13, %r11d
000000010003eb31	imull	$0x64, %r11d, %eax
000000010003eb35	subl	%eax, %r10d
000000010003eb38	movzwl	%r10w, %r10d
000000010003eb3c	leaq	-0x4(%r9), %rax
000000010003eb40	movzwl	(%rdi,%r11,2), %r11d
000000010003eb45	movw	%r11w, -0x2b(%rbp,%r9)
000000010003eb4b	movzwl	(%rdi,%r10,2), %r10d
000000010003eb50	movw	%r10w, -0x29(%rbp,%r9)
000000010003eb56	movq	%rax, %r9
000000010003eb59	cmpq	$0x5f5e0ff, %rcx                ## imm = 0x5F5E0FF
000000010003eb60	movq	%rdx, %rcx
000000010003eb63	ja	0x10003eb10
000000010003eb65	cmpq	$0x63, %rdx
000000010003eb69	jbe	0x10003eb94
000000010003eb6b	movzwl	%dx, %ecx
000000010003eb6e	shrl	$0x2, %ecx
000000010003eb71	imull	$0x147b, %ecx, %ecx             ## imm = 0x147B
000000010003eb77	shrl	$0x11, %ecx
000000010003eb7a	imull	$0x64, %ecx, %r8d
000000010003eb7e	subl	%r8d, %edx
000000010003eb81	movzwl	%dx, %edx
000000010003eb84	movzwl	(%rdi,%rdx,2), %edx
000000010003eb88	movw	%dx, -0x29(%rbp,%rax)
000000010003eb8d	addq	$-0x2, %rax
000000010003eb91	movq	%rcx, %rdx
000000010003eb94	cmpq	$0xa, %rdx
000000010003eb98	jae	0x10003ebb1
000000010003eb9a	addb	$0x30, %dl
000000010003eb9d	movb	%dl, -0x28(%rbp,%rax)
000000010003eba1	decq	%rax
000000010003eba4	jmp	0x10003ebbe
000000010003eba6	movq	%rcx, %rdx
000000010003eba9	cmpq	$0x63, %rdx
000000010003ebad	ja	0x10003eb6b
000000010003ebaf	jmp	0x10003eb94
000000010003ebb1	movzwl	(%rdi,%rdx,2), %ecx
000000010003ebb5	movw	%cx, -0x29(%rbp,%rax)
000000010003ebba	addq	$-0x2, %rax
000000010003ebbe	leaq	-0x27(%rbp,%rax), %r8
000000010003ebc3	movl	$0x27, %r9d
000000010003ebc9	subq	%rax, %r9
000000010003ebcc	leaq	0x7b25(%rip), %rdx
000000010003ebd3	movq	%rsi, %rdi
000000010003ebd6	movl	$0x1, %esi
000000010003ebdb	xorl	%ecx, %ecx
000000010003ebdd	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003ebe2	addq	$0x30, %rsp
000000010003ebe6	popq	%rbp
000000010003ebe7	retq
000000010003ebe8	nopl	(%rax,%rax)
__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE:
000000010003ebf0	pushq	%rbp
000000010003ebf1	movq	%rsp, %rbp
000000010003ebf4	subq	$0x30, %rsp
000000010003ebf8	movq	(%rdi), %rcx
000000010003ebfb	movl	$0x27, %eax
000000010003ec00	leaq	0x7d06(%rip), %rdi
000000010003ec07	cmpq	$0x2710, %rcx                   ## imm = 0x2710
000000010003ec0e	jb	0x10003ecc6
000000010003ec14	movl	$0x27, %r9d
000000010003ec1a	movabsq	$0x346dc5d63886594b, %r8        ## imm = 0x346DC5D63886594B
000000010003ec24	nopw	%cs:(%rax,%rax)
000000010003ec2e	nop
000000010003ec30	movq	%rcx, %rax
000000010003ec33	mulq	%r8
000000010003ec36	shrq	$0xb, %rdx
000000010003ec3a	imull	$0x2710, %edx, %eax             ## imm = 0x2710
000000010003ec40	movl	%ecx, %r10d
000000010003ec43	subl	%eax, %r10d
000000010003ec46	imull	$0x147b, %r10d, %r11d           ## imm = 0x147B
000000010003ec4d	shrl	$0x13, %r11d
000000010003ec51	imull	$0x64, %r11d, %eax
000000010003ec55	subl	%eax, %r10d
000000010003ec58	movzwl	%r10w, %r10d
000000010003ec5c	leaq	-0x4(%r9), %rax
000000010003ec60	movzwl	(%rdi,%r11,2), %r11d
000000010003ec65	movw	%r11w, -0x2b(%rbp,%r9)
000000010003ec6b	movzwl	(%rdi,%r10,2), %r10d
000000010003ec70	movw	%r10w, -0x29(%rbp,%r9)
000000010003ec76	movq	%rax, %r9
000000010003ec79	cmpq	$0x5f5e0ff, %rcx                ## imm = 0x5F5E0FF
000000010003ec80	movq	%rdx, %rcx
000000010003ec83	ja	0x10003ec30
000000010003ec85	cmpq	$0x63, %rdx
000000010003ec89	jbe	0x10003ecb4
000000010003ec8b	movzwl	%dx, %ecx
000000010003ec8e	shrl	$0x2, %ecx
000000010003ec91	imull	$0x147b, %ecx, %ecx             ## imm = 0x147B
000000010003ec97	shrl	$0x11, %ecx
000000010003ec9a	imull	$0x64, %ecx, %r8d
000000010003ec9e	subl	%r8d, %edx
000000010003eca1	movzwl	%dx, %edx
000000010003eca4	movzwl	(%rdi,%rdx,2), %edx
000000010003eca8	movw	%dx, -0x29(%rbp,%rax)
000000010003ecad	addq	$-0x2, %rax
000000010003ecb1	movq	%rcx, %rdx
000000010003ecb4	cmpq	$0xa, %rdx
000000010003ecb8	jae	0x10003ecd1
000000010003ecba	addb	$0x30, %dl
000000010003ecbd	movb	%dl, -0x28(%rbp,%rax)
000000010003ecc1	decq	%rax
000000010003ecc4	jmp	0x10003ecde
000000010003ecc6	movq	%rcx, %rdx
000000010003ecc9	cmpq	$0x63, %rdx
000000010003eccd	ja	0x10003ec8b
000000010003eccf	jmp	0x10003ecb4
000000010003ecd1	movzwl	(%rdi,%rdx,2), %ecx
000000010003ecd5	movw	%cx, -0x29(%rbp,%rax)
000000010003ecda	addq	$-0x2, %rax
000000010003ecde	leaq	-0x27(%rbp,%rax), %r8
000000010003ece3	movl	$0x27, %r9d
000000010003ece9	subq	%rax, %r9
000000010003ecec	leaq	0x7a05(%rip), %rdx
000000010003ecf3	movq	%rsi, %rdi
000000010003ecf6	movl	$0x1, %esi
000000010003ecfb	xorl	%ecx, %ecx
000000010003ecfd	callq	__ZN4core3fmt9Formatter12pad_integral17h0bae911d07a688c4E ## core::fmt::Formatter::pad_integral::h0bae911d07a688c4
000000010003ed02	addq	$0x30, %rsp
000000010003ed06	popq	%rbp
000000010003ed07	retq
000000010003ed08	nopl	(%rax,%rax)
__ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h8aa8961edee5e848E:
000000010003ed10	pushq	%rbp
000000010003ed11	movq	%rsp, %rbp
000000010003ed14	movq	0x20(%rsi), %rdi
000000010003ed18	movq	0x28(%rsi), %rax
000000010003ed1c	movq	0x18(%rax), %rax
000000010003ed20	leaq	0x8540(%rip), %rsi
000000010003ed27	movl	$0x5, %edx
000000010003ed2c	popq	%rbp
000000010003ed2d	jmpq	*%rax
000000010003ed2f	nop
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h077a7d3ce5dc8141E:
000000010003ed30	pushq	%rbp
000000010003ed31	movq	%rsp, %rbp
000000010003ed34	movq	(%rdi), %rax
000000010003ed37	movzbl	(%rax), %eax
000000010003ed3a	leaq	0x88af(%rip), %rcx
000000010003ed41	movq	(%rcx,%rax,8), %rdx
000000010003ed45	leaq	0xb694(%rip), %rcx
000000010003ed4c	movq	(%rcx,%rax,8), %rax
000000010003ed50	movq	0x20(%rsi), %rdi
000000010003ed54	movq	0x28(%rsi), %rcx
000000010003ed58	movq	0x18(%rcx), %rcx
000000010003ed5c	movq	%rax, %rsi
000000010003ed5f	popq	%rbp
000000010003ed60	jmpq	*%rcx
000000010003ed62	nopw	%cs:(%rax,%rax)
000000010003ed6c	nopl	(%rax)
__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17habaec484e23b8351E:
000000010003ed70	pushq	%rbp
000000010003ed71	movq	%rsp, %rbp
000000010003ed74	movq	(%rdi), %rax
000000010003ed77	movq	0x8(%rdi), %rcx
000000010003ed7b	movq	0x18(%rcx), %rcx
000000010003ed7f	movq	%rax, %rdi
000000010003ed82	popq	%rbp
000000010003ed83	jmpq	*%rcx
000000010003ed85	nopw	%cs:(%rax,%rax)
000000010003ed8f	nop
__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0a17fd63c56a4decE:
000000010003ed90	pushq	%rbp
000000010003ed91	movq	%rsp, %rbp
000000010003ed94	movq	%rsi, %rax
000000010003ed97	movq	(%rdi), %rcx
000000010003ed9a	movq	(%rcx), %rsi
000000010003ed9d	movq	0x8(%rcx), %rdx
000000010003eda1	movq	%rax, %rdi
000000010003eda4	popq	%rbp
000000010003eda5	jmp	__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE ## core::fmt::Formatter::pad::h699bd9f3561ce56c
000000010003edaa	nopw	(%rax,%rax)
__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE:
000000010003edb0	pushq	%rbp
000000010003edb1	movq	%rsp, %rbp
000000010003edb4	movq	%rsi, %rax
000000010003edb7	movq	(%rdi), %rsi
000000010003edba	movq	0x8(%rdi), %rdx
000000010003edbe	movq	%rax, %rdi
000000010003edc1	popq	%rbp
000000010003edc2	jmp	__ZN4core3fmt9Formatter3pad17h699bd9f3561ce56cE ## core::fmt::Formatter::pad::h699bd9f3561ce56c
000000010003edc7	nopw	(%rax,%rax)
__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hbd7cba8781808278E:
000000010003edd0	pushq	%rbp
000000010003edd1	movq	%rsp, %rbp
000000010003edd4	movq	(%rdi), %rdx
000000010003edd7	movq	0x20(%rsi), %rdi
000000010003eddb	movq	0x28(%rsi), %rsi
000000010003eddf	popq	%rbp
000000010003ede0	jmp	__ZN4core3fmt5write17h745c6d87d2702197E ## core::fmt::write::h745c6d87d2702197
000000010003ede5	nopw	%cs:(%rax,%rax)
000000010003edef	nop
__ZN4core7unicode12unicode_data2cc6lookup17h574e3bd0e2ec9e2cE:
000000010003edf0	movl	%edi, %eax
000000010003edf2	shll	$0xb, %eax
000000010003edf5	cmpl	$0x88050000, %eax               ## imm = 0x88050000
000000010003edfa	jae	0x10003ee0e
000000010003edfc	cmpl	$0x20, %edi
000000010003edff	setb	%cl
000000010003ee02	addl	$-0x7f, %edi
000000010003ee05	cmpl	$0x21, %edi
000000010003ee08	setb	%al
000000010003ee0b	orb	%cl, %al
000000010003ee0d	retq
000000010003ee0e	pushq	%rbp
000000010003ee0f	movq	%rsp, %rbp
000000010003ee12	leaq	0xb547(%rip), %rdx
000000010003ee19	movl	$0x1, %edi
000000010003ee1e	movl	$0x1, %esi
000000010003ee23	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003ee28	nopl	(%rax,%rax)
__ZN4core7unicode12unicode_data15grapheme_extend6lookup17h82558d6328afff9fE:
000000010003ee30	pushq	%rbp
000000010003ee31	movq	%rsp, %rbp
000000010003ee34	movl	%edi, %esi
000000010003ee36	shll	$0xb, %esi
000000010003ee39	movl	$0x21, %eax
000000010003ee3e	xorl	%ecx, %ecx
000000010003ee40	leaq	__ZN4core7unicode12unicode_data15grapheme_extend17SHORT_OFFSET_RUNS17h3d7f4259459b3757E(%rip), %rdx ## core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS::h3d7f4259459b3757
000000010003ee47	movl	$0xff, %r8d
000000010003ee4d	movl	$0x21, %r9d
000000010003ee53	jmp	0x10003ee68
000000010003ee55	nopw	%cs:(%rax,%rax)
000000010003ee5f	nop
000000010003ee60	movq	%rax, %r9
000000010003ee63	subq	%rcx, %rax
000000010003ee66	jbe	0x10003eea9
000000010003ee68	shrq	%rax
000000010003ee6b	addq	%rcx, %rax
000000010003ee6e	movl	(%rdx,%rax,4), %r11d
000000010003ee72	shll	$0xb, %r11d
000000010003ee76	xorl	%r10d, %r10d
000000010003ee79	cmpl	%esi, %r11d
000000010003ee7c	setne	%r10b
000000010003ee80	cmovbl	%r8d, %r10d
000000010003ee84	cmpb	$0x1, %r10b
000000010003ee88	je	0x10003ee60
000000010003ee8a	movzbl	%r10b, %ecx
000000010003ee8e	incq	%rax
000000010003ee91	cmpl	$0xff, %ecx
000000010003ee97	jne	0x10003eea6
000000010003ee99	movq	%rax, %rcx
000000010003ee9c	movq	%r9, %rax
000000010003ee9f	subq	%rcx, %rax
000000010003eea2	ja	0x10003ee68
000000010003eea4	jmp	0x10003eea9
000000010003eea6	movq	%rax, %rcx
000000010003eea9	cmpq	$0x20, %rcx
000000010003eead	ja	0x10003ef5e
000000010003eeb3	movl	(%rdx,%rcx,4), %eax
000000010003eeb6	shrq	$0x15, %rax
000000010003eeba	cmpq	$0x20, %rcx
000000010003eebe	jne	0x10003eecc
000000010003eec0	movl	$0x2d7, %esi                    ## imm = 0x2D7
000000010003eec5	movl	$0x1f, %ecx
000000010003eeca	jmp	0x10003eedd
000000010003eecc	movl	0x4(%rdx,%rcx,4), %esi
000000010003eed0	shrq	$0x15, %rsi
000000010003eed4	xorl	%r8d, %r8d
000000010003eed7	subq	$0x1, %rcx
000000010003eedb	jb	0x10003eee7
000000010003eedd	movl	$0x1fffff, %r8d                 ## imm = 0x1FFFFF
000000010003eee3	andl	(%rdx,%rcx,4), %r8d
000000010003eee7	movq	%rax, %rcx
000000010003eeea	notq	%rcx
000000010003eeed	addq	%rsi, %rcx
000000010003eef0	je	0x10003ef30
000000010003eef2	subl	%r8d, %edi
000000010003eef5	decq	%rsi
000000010003eef8	xorl	%ecx, %ecx
000000010003eefa	leaq	__ZN4core7unicode12unicode_data15grapheme_extend7OFFSETS17h43f941ebde5cddd6E(%rip), %r8 ## core::unicode::unicode_data::grapheme_extend::OFFSETS::h43f941ebde5cddd6
000000010003ef01	movq	%rax, %rdx
000000010003ef04	nopw	%cs:(%rax,%rax)
000000010003ef0e	nop
000000010003ef10	cmpq	$0x2d6, %rdx                    ## imm = 0x2D6
000000010003ef17	ja	0x10003ef3b
000000010003ef19	movzbl	(%rdx,%r8), %r9d
000000010003ef1e	addl	%r9d, %ecx
000000010003ef21	cmpl	%edi, %ecx
000000010003ef23	ja	0x10003ef34
000000010003ef25	incq	%rdx
000000010003ef28	cmpq	%rdx, %rsi
000000010003ef2b	jne	0x10003ef10
000000010003ef2d	movq	%rsi, %rax
000000010003ef30	andb	$0x1, %al
000000010003ef32	popq	%rbp
000000010003ef33	retq
000000010003ef34	movq	%rdx, %rax
000000010003ef37	andb	$0x1, %al
000000010003ef39	popq	%rbp
000000010003ef3a	retq
000000010003ef3b	cmpq	$0x2d8, %rax                    ## imm = 0x2D8
000000010003ef41	movl	$0x2d7, %ecx                    ## imm = 0x2D7
000000010003ef46	cmovbq	%rcx, %rax
000000010003ef4a	leaq	0xb427(%rip), %rdx
000000010003ef51	movl	$0x2d7, %esi                    ## imm = 0x2D7
000000010003ef56	movq	%rax, %rdi
000000010003ef59	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003ef5e	leaq	0xb3fb(%rip), %rdx
000000010003ef65	movl	$0x21, %esi
000000010003ef6a	movq	%rcx, %rdi
000000010003ef6d	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003ef72	nopw	%cs:(%rax,%rax)
000000010003ef7c	nopl	(%rax)
__ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hbfd16358c471a936E:
000000010003ef80	pushq	%rbp
000000010003ef81	movq	%rsp, %rbp
000000010003ef84	movq	0x20(%rsi), %rdi
000000010003ef88	movq	0x28(%rsi), %rax
000000010003ef8c	movq	0x18(%rax), %rax
000000010003ef90	leaq	0x8646(%rip), %rsi
000000010003ef97	movl	$0xb, %edx
000000010003ef9c	popq	%rbp
000000010003ef9d	jmpq	*%rax
000000010003ef9f	nop
__ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h0ea9f0c76e788be3E:
000000010003efa0	pushq	%rbp
000000010003efa1	movq	%rsp, %rbp
000000010003efa4	pushq	%rbx
000000010003efa5	xorl	%eax, %eax
000000010003efa7	testw	%dx, %dx
000000010003efaa	je	0x10003f0bf
000000010003efb0	testb	%cl, %cl
000000010003efb2	jne	0x10003f0bf
000000010003efb8	incq	%rsi
000000010003efbb	movq	(%rdi), %r8
000000010003efbe	movq	0x10(%rdi), %r9
000000010003efc2	movq	0x18(%rdi), %rdi
000000010003efc6	movq	%rdi, %rax
000000010003efc9	subq	$0x4, %rax
000000010003efcd	jb	0x10003f07c
000000010003efd3	testq	%rax, %rax
000000010003efd6	jg	0x10003f020
000000010003efd8	movl	(%r9,%rax), %edi
000000010003efdc	addq	%rax, %r8
000000010003efdf	nop
000000010003efe0	tzcntl	%edx, %ecx
000000010003efe4	leaq	(%rsi,%rcx), %rax
000000010003efe8	cmpl	%edi, (%r8,%rax)
000000010003efec	sete	%al
000000010003efef	je	0x10003f0bf
000000010003eff5	movw	$0xfffe, %r9w                   ## imm = 0xFFFE
000000010003effa	rolw	%cl, %r9w
000000010003effe	andw	%r9w, %dx
000000010003f002	jne	0x10003efe0
000000010003f004	jmp	0x10003f0bf
000000010003f009	nopl	(%rax)
000000010003f010	movw	$0xfffe, %di                    ## imm = 0xFFFE
000000010003f014	rolw	%cl, %di
000000010003f017	andw	%di, %dx
000000010003f01a	je	0x10003f0c2
000000010003f020	tzcntl	%edx, %ecx
000000010003f024	movq	%rcx, %rdi
000000010003f027	addq	%rsi, %rdi
000000010003f02a	addq	%r8, %rdi
000000010003f02d	leaq	(%rdi,%rax), %r10
000000010003f031	movq	%r9, %r11
000000010003f034	nopw	%cs:(%rax,%rax)
000000010003f03e	nop
000000010003f040	movl	(%rdi), %ebx
000000010003f042	cmpl	(%r11), %ebx
000000010003f045	jne	0x10003f010
000000010003f047	addq	$0x4, %rdi
000000010003f04b	addq	$0x4, %r11
000000010003f04f	cmpq	%r10, %rdi
000000010003f052	jb	0x10003f040
000000010003f054	movl	(%r10), %edi
000000010003f057	cmpl	(%r9,%rax), %edi
000000010003f05b	jne	0x10003f010
000000010003f05d	movb	$0x1, %al
000000010003f05f	popq	%rbx
000000010003f060	popq	%rbp
000000010003f061	retq
000000010003f062	nopw	%cs:(%rax,%rax)
000000010003f06c	nopl	(%rax)
000000010003f070	movw	$0xfffe, %ax                    ## imm = 0xFFFE
000000010003f074	rolw	%cl, %ax
000000010003f077	andw	%ax, %dx
000000010003f07a	je	0x10003f0c2
000000010003f07c	movb	$0x1, %al
000000010003f07e	testq	%rdi, %rdi
000000010003f081	je	0x10003f0bf
000000010003f083	tzcntl	%edx, %ecx
000000010003f087	leaq	(%rsi,%rcx), %r10
000000010003f08b	movzbl	(%r8,%r10), %r11d
000000010003f090	cmpb	(%r9), %r11b
000000010003f093	jne	0x10003f070
000000010003f095	cmpq	$0x1, %rdi
000000010003f099	je	0x10003f0bf
000000010003f09b	movzbl	0x1(%r8,%r10), %r11d
000000010003f0a1	cmpb	0x1(%r9), %r11b
000000010003f0a5	jne	0x10003f070
000000010003f0a7	cmpq	$0x2, %rdi
000000010003f0ab	je	0x10003f0bf
000000010003f0ad	movzbl	0x2(%r8,%r10), %r10d
000000010003f0b3	cmpb	0x2(%r9), %r10b
000000010003f0b7	jne	0x10003f070
000000010003f0b9	cmpq	$0x3, %rdi
000000010003f0bd	jne	0x10003f070
000000010003f0bf	popq	%rbx
000000010003f0c0	popq	%rbp
000000010003f0c1	retq
000000010003f0c2	xorl	%eax, %eax
000000010003f0c4	popq	%rbx
000000010003f0c5	popq	%rbp
000000010003f0c6	retq
000000010003f0c7	nopw	(%rax,%rax)
__ZN4core5slice4sort14break_patterns17h27c3d1772f214318E:
000000010003f0d0	pushq	%rbp
000000010003f0d1	movq	%rsp, %rbp
000000010003f0d4	pushq	%r15
000000010003f0d6	pushq	%r14
000000010003f0d8	pushq	%r12
000000010003f0da	pushq	%rbx
000000010003f0db	subq	$0x30, %rsp
000000010003f0df	leaq	-0x1(%rsi), %rax
000000010003f0e3	bsrq	%rax, %rcx
000000010003f0e7	notl	%ecx
000000010003f0e9	movq	$-0x1, %r8
000000010003f0f0	shrq	%cl, %r8
000000010003f0f3	movq	%rsi, %rdx
000000010003f0f6	shrq	%rdx
000000010003f0f9	movq	%rdx, %r9
000000010003f0fc	andq	$-0x2, %r9
000000010003f100	leaq	-0x1(%r9), %rcx
000000010003f104	movq	%rsi, %rax
000000010003f107	shlq	$0xd, %rax
000000010003f10b	xorq	%rsi, %rax
000000010003f10e	movq	%rax, %r11
000000010003f111	shrq	$0x7, %r11
000000010003f115	xorq	%rax, %r11
000000010003f118	movq	%r11, %r10
000000010003f11b	shlq	$0x11, %r10
000000010003f11f	xorq	%r11, %r10
000000010003f122	movq	%r10, %rax
000000010003f125	andq	%r8, %rax
000000010003f128	xorl	%r11d, %r11d
000000010003f12b	cmpq	%rsi, %rax
000000010003f12e	cmovaeq	%rsi, %r11
000000010003f132	cmpq	%rsi, %rcx
000000010003f135	jae	0x10003f3a1
000000010003f13b	subq	%r11, %rax
000000010003f13e	cmpq	%rsi, %rax
000000010003f141	jae	0x10003f38a
000000010003f147	leaq	(%rcx,%rcx,4), %rcx
000000010003f14b	leaq	(%rax,%rax,4), %rax
000000010003f14f	movq	0x20(%rdi,%rcx,8), %r11
000000010003f154	movq	%r11, -0x28(%rbp)
000000010003f158	movq	0x18(%rdi,%rcx,8), %r11
000000010003f15d	movq	%r11, -0x30(%rbp)
000000010003f161	movq	0x10(%rdi,%rcx,8), %r11
000000010003f166	movq	%r11, -0x38(%rbp)
000000010003f16a	movq	(%rdi,%rcx,8), %r11
000000010003f16e	movq	0x8(%rdi,%rcx,8), %rbx
000000010003f173	movq	%rbx, -0x40(%rbp)
000000010003f177	movq	%r11, -0x48(%rbp)
000000010003f17b	movq	0x20(%rdi,%rax,8), %r11
000000010003f180	movq	0x18(%rdi,%rax,8), %rbx
000000010003f185	movq	0x10(%rdi,%rax,8), %r14
000000010003f18a	movq	(%rdi,%rax,8), %r15
000000010003f18e	movq	0x8(%rdi,%rax,8), %r12
000000010003f193	movq	%r15, (%rdi,%rcx,8)
000000010003f197	movq	%r12, 0x8(%rdi,%rcx,8)
000000010003f19c	movq	%r14, 0x10(%rdi,%rcx,8)
000000010003f1a1	movq	%rbx, 0x18(%rdi,%rcx,8)
000000010003f1a6	movq	%r11, 0x20(%rdi,%rcx,8)
000000010003f1ab	movq	-0x28(%rbp), %rcx
000000010003f1af	movq	%rcx, 0x20(%rdi,%rax,8)
000000010003f1b4	movq	-0x30(%rbp), %rcx
000000010003f1b8	movq	%rcx, 0x18(%rdi,%rax,8)
000000010003f1bd	movq	-0x38(%rbp), %rcx
000000010003f1c1	movq	%rcx, 0x10(%rdi,%rax,8)
000000010003f1c6	movq	-0x48(%rbp), %rcx
000000010003f1ca	movq	-0x40(%rbp), %r11
000000010003f1ce	movq	%r11, 0x8(%rdi,%rax,8)
000000010003f1d3	movq	%rcx, (%rdi,%rax,8)
000000010003f1d7	movq	%r10, %rax
000000010003f1da	shlq	$0xd, %rax
000000010003f1de	xorq	%r10, %rax
000000010003f1e1	movq	%rax, %r10
000000010003f1e4	shrq	$0x7, %r10
000000010003f1e8	xorq	%rax, %r10
000000010003f1eb	movq	%r10, %rcx
000000010003f1ee	shlq	$0x11, %rcx
000000010003f1f2	xorq	%r10, %rcx
000000010003f1f5	movq	%rcx, %rax
000000010003f1f8	andq	%r8, %rax
000000010003f1fb	xorl	%r10d, %r10d
000000010003f1fe	cmpq	%rsi, %rax
000000010003f201	cmovaeq	%rsi, %r10
000000010003f205	cmpq	%rsi, %r9
000000010003f208	jae	0x10003f399
000000010003f20e	subq	%r10, %rax
000000010003f211	cmpq	%rsi, %rax
000000010003f214	jae	0x10003f38a
000000010003f21a	leaq	(%r9,%r9,4), %r9
000000010003f21e	leaq	(%rax,%rax,4), %rax
000000010003f222	movq	0x20(%rdi,%r9,8), %r10
000000010003f227	movq	%r10, -0x28(%rbp)
000000010003f22b	movq	0x18(%rdi,%r9,8), %r10
000000010003f230	movq	%r10, -0x30(%rbp)
000000010003f234	movq	0x10(%rdi,%r9,8), %r10
000000010003f239	movq	%r10, -0x38(%rbp)
000000010003f23d	movq	(%rdi,%r9,8), %r10
000000010003f241	movq	0x8(%rdi,%r9,8), %r11
000000010003f246	movq	%r11, -0x40(%rbp)
000000010003f24a	movq	%r10, -0x48(%rbp)
000000010003f24e	movq	0x20(%rdi,%rax,8), %r10
000000010003f253	movq	0x18(%rdi,%rax,8), %r11
000000010003f258	movq	0x10(%rdi,%rax,8), %rbx
000000010003f25d	movq	(%rdi,%rax,8), %r14
000000010003f261	movq	0x8(%rdi,%rax,8), %r15
000000010003f266	movq	%r14, (%rdi,%r9,8)
000000010003f26a	movq	%r15, 0x8(%rdi,%r9,8)
000000010003f26f	movq	%rbx, 0x10(%rdi,%r9,8)
000000010003f274	movq	%r11, 0x18(%rdi,%r9,8)
000000010003f279	movq	%r10, 0x20(%rdi,%r9,8)
000000010003f27e	movq	-0x28(%rbp), %r9
000000010003f282	movq	%r9, 0x20(%rdi,%rax,8)
000000010003f287	movq	-0x30(%rbp), %r9
000000010003f28b	movq	%r9, 0x18(%rdi,%rax,8)
000000010003f290	movq	-0x38(%rbp), %r9
000000010003f294	movq	%r9, 0x10(%rdi,%rax,8)
000000010003f299	movq	-0x48(%rbp), %r9
000000010003f29d	movq	-0x40(%rbp), %r10
000000010003f2a1	movq	%r10, 0x8(%rdi,%rax,8)
000000010003f2a6	movq	%r9, (%rdi,%rax,8)
000000010003f2aa	movq	%rcx, %rax
000000010003f2ad	shlq	$0xd, %rax
000000010003f2b1	xorq	%rcx, %rax
000000010003f2b4	movq	%rax, %rcx
000000010003f2b7	shrq	$0x7, %rcx
000000010003f2bb	xorq	%rax, %rcx
000000010003f2be	movq	%rcx, %rax
000000010003f2c1	shlq	$0x11, %rax
000000010003f2c5	xorq	%rcx, %rax
000000010003f2c8	andq	%r8, %rax
000000010003f2cb	xorl	%ecx, %ecx
000000010003f2cd	cmpq	%rsi, %rax
000000010003f2d0	cmovaeq	%rsi, %rcx
000000010003f2d4	orq	$0x1, %rdx
000000010003f2d8	cmpq	%rsi, %rdx
000000010003f2db	jae	0x10003f39e
000000010003f2e1	subq	%rcx, %rax
000000010003f2e4	cmpq	%rsi, %rax
000000010003f2e7	jae	0x10003f38a
000000010003f2ed	leaq	(%rdx,%rdx,4), %rcx
000000010003f2f1	leaq	(%rax,%rax,4), %rax
000000010003f2f5	movq	0x20(%rdi,%rcx,8), %rdx
000000010003f2fa	movq	%rdx, -0x28(%rbp)
000000010003f2fe	movq	0x18(%rdi,%rcx,8), %rdx
000000010003f303	movq	%rdx, -0x30(%rbp)
000000010003f307	movq	0x10(%rdi,%rcx,8), %rdx
000000010003f30c	movq	%rdx, -0x38(%rbp)
000000010003f310	movq	(%rdi,%rcx,8), %rdx
000000010003f314	movq	0x8(%rdi,%rcx,8), %rsi
000000010003f319	movq	%rsi, -0x40(%rbp)
000000010003f31d	movq	%rdx, -0x48(%rbp)
000000010003f321	movq	0x20(%rdi,%rax,8), %rdx
000000010003f326	movq	0x18(%rdi,%rax,8), %rsi
000000010003f32b	movq	0x10(%rdi,%rax,8), %r8
000000010003f330	movq	(%rdi,%rax,8), %r9
000000010003f334	movq	0x8(%rdi,%rax,8), %r10
000000010003f339	movq	%r9, (%rdi,%rcx,8)
000000010003f33d	movq	%r10, 0x8(%rdi,%rcx,8)
000000010003f342	movq	%r8, 0x10(%rdi,%rcx,8)
000000010003f347	movq	%rsi, 0x18(%rdi,%rcx,8)
000000010003f34c	movq	%rdx, 0x20(%rdi,%rcx,8)
000000010003f351	movq	-0x28(%rbp), %rcx
000000010003f355	movq	%rcx, 0x20(%rdi,%rax,8)
000000010003f35a	movq	-0x30(%rbp), %rcx
000000010003f35e	movq	%rcx, 0x18(%rdi,%rax,8)
000000010003f363	movq	-0x38(%rbp), %rcx
000000010003f367	movq	%rcx, 0x10(%rdi,%rax,8)
000000010003f36c	movq	-0x48(%rbp), %rcx
000000010003f370	movq	-0x40(%rbp), %rdx
000000010003f374	movq	%rdx, 0x8(%rdi,%rax,8)
000000010003f379	movq	%rcx, (%rdi,%rax,8)
000000010003f37d	addq	$0x30, %rsp
000000010003f381	popq	%rbx
000000010003f382	popq	%r12
000000010003f384	popq	%r14
000000010003f386	popq	%r15
000000010003f388	popq	%rbp
000000010003f389	retq
000000010003f38a	leaq	0x9107(%rip), %rdx
000000010003f391	movq	%rax, %rdi
000000010003f394	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003f399	movq	%r9, %rcx
000000010003f39c	jmp	0x10003f3a1
000000010003f39e	movq	%rdx, %rcx
000000010003f3a1	leaq	0x90f0(%rip), %rdx
000000010003f3a8	movq	%rcx, %rdi
000000010003f3ab	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
__ZN4core5slice4sort14break_patterns17he887c7f229d3696eE:
000000010003f3b0	pushq	%rbp
000000010003f3b1	movq	%rsp, %rbp
000000010003f3b4	pushq	%r14
000000010003f3b6	pushq	%rbx
000000010003f3b7	subq	$0x20, %rsp
000000010003f3bb	leaq	-0x1(%rsi), %rax
000000010003f3bf	bsrq	%rax, %rcx
000000010003f3c3	notl	%ecx
000000010003f3c5	movq	$-0x1, %r8
000000010003f3cc	shrq	%cl, %r8
000000010003f3cf	movq	%rsi, %rdx
000000010003f3d2	shrq	%rdx
000000010003f3d5	movq	%rdx, %r9
000000010003f3d8	andq	$-0x2, %r9
000000010003f3dc	leaq	-0x1(%r9), %rcx
000000010003f3e0	movq	%rsi, %rax
000000010003f3e3	shlq	$0xd, %rax
000000010003f3e7	xorq	%rsi, %rax
000000010003f3ea	movq	%rax, %r11
000000010003f3ed	shrq	$0x7, %r11
000000010003f3f1	xorq	%rax, %r11
000000010003f3f4	movq	%r11, %r10
000000010003f3f7	shlq	$0x11, %r10
000000010003f3fb	xorq	%r11, %r10
000000010003f3fe	movq	%r10, %rax
000000010003f401	andq	%r8, %rax
000000010003f404	xorl	%r11d, %r11d
000000010003f407	cmpq	%rsi, %rax
000000010003f40a	cmovaeq	%rsi, %r11
000000010003f40e	cmpq	%rsi, %rcx
000000010003f411	jae	0x10003f5c9
000000010003f417	subq	%r11, %rax
000000010003f41a	cmpq	%rsi, %rax
000000010003f41d	jae	0x10003f5b2
000000010003f423	leaq	(%rcx,%rcx,2), %rcx
000000010003f427	leaq	(%rax,%rax,2), %rax
000000010003f42b	movq	0x10(%rdi,%rcx,8), %r11
000000010003f430	movq	%r11, -0x18(%rbp)
000000010003f434	movq	(%rdi,%rcx,8), %r11
000000010003f438	movq	0x8(%rdi,%rcx,8), %rbx
000000010003f43d	movq	%rbx, -0x20(%rbp)
000000010003f441	movq	%r11, -0x28(%rbp)
000000010003f445	movq	0x10(%rdi,%rax,8), %r11
000000010003f44a	movq	(%rdi,%rax,8), %rbx
000000010003f44e	movq	0x8(%rdi,%rax,8), %r14
000000010003f453	movq	%rbx, (%rdi,%rcx,8)
000000010003f457	movq	%r14, 0x8(%rdi,%rcx,8)
000000010003f45c	movq	%r11, 0x10(%rdi,%rcx,8)
000000010003f461	movq	-0x18(%rbp), %rcx
000000010003f465	movq	%rcx, 0x10(%rdi,%rax,8)
000000010003f46a	movq	-0x28(%rbp), %rcx
000000010003f46e	movq	-0x20(%rbp), %r11
000000010003f472	movq	%r11, 0x8(%rdi,%rax,8)
000000010003f477	movq	%rcx, (%rdi,%rax,8)
000000010003f47b	movq	%r10, %rax
000000010003f47e	shlq	$0xd, %rax
000000010003f482	xorq	%r10, %rax
000000010003f485	movq	%rax, %r10
000000010003f488	shrq	$0x7, %r10
000000010003f48c	xorq	%rax, %r10
000000010003f48f	movq	%r10, %rcx
000000010003f492	shlq	$0x11, %rcx
000000010003f496	xorq	%r10, %rcx
000000010003f499	movq	%rcx, %rax
000000010003f49c	andq	%r8, %rax
000000010003f49f	xorl	%r10d, %r10d
000000010003f4a2	cmpq	%rsi, %rax
000000010003f4a5	cmovaeq	%rsi, %r10
000000010003f4a9	cmpq	%rsi, %r9
000000010003f4ac	jae	0x10003f5c1
000000010003f4b2	subq	%r10, %rax
000000010003f4b5	cmpq	%rsi, %rax
000000010003f4b8	jae	0x10003f5b2
000000010003f4be	leaq	(%r9,%r9,2), %r9
000000010003f4c2	leaq	(%rax,%rax,2), %rax
000000010003f4c6	movq	0x10(%rdi,%r9,8), %r10
000000010003f4cb	movq	%r10, -0x18(%rbp)
000000010003f4cf	movq	(%rdi,%r9,8), %r10
000000010003f4d3	movq	0x8(%rdi,%r9,8), %r11
000000010003f4d8	movq	%r11, -0x20(%rbp)
000000010003f4dc	movq	%r10, -0x28(%rbp)
000000010003f4e0	movq	0x10(%rdi,%rax,8), %r10
000000010003f4e5	movq	(%rdi,%rax,8), %r11
000000010003f4e9	movq	0x8(%rdi,%rax,8), %rbx
000000010003f4ee	movq	%r11, (%rdi,%r9,8)
000000010003f4f2	movq	%rbx, 0x8(%rdi,%r9,8)
000000010003f4f7	movq	%r10, 0x10(%rdi,%r9,8)
000000010003f4fc	movq	-0x18(%rbp), %r9
000000010003f500	movq	%r9, 0x10(%rdi,%rax,8)
000000010003f505	movq	-0x28(%rbp), %r9
000000010003f509	movq	-0x20(%rbp), %r10
000000010003f50d	movq	%r10, 0x8(%rdi,%rax,8)
000000010003f512	movq	%r9, (%rdi,%rax,8)
000000010003f516	movq	%rcx, %rax
000000010003f519	shlq	$0xd, %rax
000000010003f51d	xorq	%rcx, %rax
000000010003f520	movq	%rax, %rcx
000000010003f523	shrq	$0x7, %rcx
000000010003f527	xorq	%rax, %rcx
000000010003f52a	movq	%rcx, %rax
000000010003f52d	shlq	$0x11, %rax
000000010003f531	xorq	%rcx, %rax
000000010003f534	andq	%r8, %rax
000000010003f537	xorl	%ecx, %ecx
000000010003f539	cmpq	%rsi, %rax
000000010003f53c	cmovaeq	%rsi, %rcx
000000010003f540	orq	$0x1, %rdx
000000010003f544	cmpq	%rsi, %rdx
000000010003f547	jae	0x10003f5c6
000000010003f549	subq	%rcx, %rax
000000010003f54c	cmpq	%rsi, %rax
000000010003f54f	jae	0x10003f5b2
000000010003f551	leaq	(%rdx,%rdx,2), %rcx
000000010003f555	leaq	(%rax,%rax,2), %rax
000000010003f559	movq	0x10(%rdi,%rcx,8), %rdx
000000010003f55e	movq	%rdx, -0x18(%rbp)
000000010003f562	movq	(%rdi,%rcx,8), %rdx
000000010003f566	movq	0x8(%rdi,%rcx,8), %rsi
000000010003f56b	movq	%rsi, -0x20(%rbp)
000000010003f56f	movq	%rdx, -0x28(%rbp)
000000010003f573	movq	0x10(%rdi,%rax,8), %rdx
000000010003f578	movq	(%rdi,%rax,8), %rsi
000000010003f57c	movq	0x8(%rdi,%rax,8), %r8
000000010003f581	movq	%rsi, (%rdi,%rcx,8)
000000010003f585	movq	%r8, 0x8(%rdi,%rcx,8)
000000010003f58a	movq	%rdx, 0x10(%rdi,%rcx,8)
000000010003f58f	movq	-0x18(%rbp), %rcx
000000010003f593	movq	%rcx, 0x10(%rdi,%rax,8)
000000010003f598	movq	-0x28(%rbp), %rcx
000000010003f59c	movq	-0x20(%rbp), %rdx
000000010003f5a0	movq	%rdx, 0x8(%rdi,%rax,8)
000000010003f5a5	movq	%rcx, (%rdi,%rax,8)
000000010003f5a9	addq	$0x20, %rsp
000000010003f5ad	popq	%rbx
000000010003f5ae	popq	%r14
000000010003f5b0	popq	%rbp
000000010003f5b1	retq
000000010003f5b2	leaq	0x8edf(%rip), %rdx
000000010003f5b9	movq	%rax, %rdi
000000010003f5bc	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003f5c1	movq	%r9, %rcx
000000010003f5c4	jmp	0x10003f5c9
000000010003f5c6	movq	%rdx, %rcx
000000010003f5c9	leaq	0x8ec8(%rip), %rdx
000000010003f5d0	movq	%rcx, %rdi
000000010003f5d3	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003f5d8	nopl	(%rax,%rax)
__ZN4core5slice4sort22partial_insertion_sort17h1f2b59ab48fe7820E:
000000010003f5e0	pushq	%rbp
000000010003f5e1	movq	%rsp, %rbp
000000010003f5e4	pushq	%r15
000000010003f5e6	pushq	%r14
000000010003f5e8	pushq	%r13
000000010003f5ea	pushq	%r12
000000010003f5ec	pushq	%rbx
000000010003f5ed	subq	$0x28, %rsp
000000010003f5f1	movq	%rsi, %rbx
000000010003f5f4	movq	%rdi, %r14
000000010003f5f7	cmpq	$0x31, %rsi
000000010003f5fb	ja	0x10003f655
000000010003f5fd	movl	$0x1, %eax
000000010003f602	cmpq	$0x1, %rbx
000000010003f606	jbe	0x10003f8d6
000000010003f60c	movq	0x38(%r14), %rcx
000000010003f610	cmpq	0x10(%r14), %rcx
000000010003f614	jb	0x10003f8d6
000000010003f61a	movl	$0x2, %edx
000000010003f61f	subq	%rbx, %rdx
000000010003f622	addq	$0x60, %r14
000000010003f626	nopw	%cs:(%rax,%rax)
000000010003f630	leaq	(%rdx,%rax), %rsi
000000010003f634	cmpq	$0x1, %rsi
000000010003f638	je	0x10003f8d3
000000010003f63e	incq	%rax
000000010003f641	movq	(%r14), %rsi
000000010003f644	addq	$0x28, %r14
000000010003f648	cmpq	%rcx, %rsi
000000010003f64b	movq	%rsi, %rcx
000000010003f64e	jae	0x10003f630
000000010003f650	jmp	0x10003f8d6
000000010003f655	movq	0x38(%r14), %rax
000000010003f659	movl	$0x1, %r15d
000000010003f65f	movb	$0x1, %dil
000000010003f662	movb	$0x1, %cl
000000010003f664	cmpq	0x10(%r14), %rax
000000010003f668	jb	0x10003f6a6
000000010003f66a	leaq	0x60(%r14), %rcx
000000010003f66e	movl	$0x2, %edx
000000010003f673	subq	%rbx, %rdx
000000010003f676	nopw	%cs:(%rax,%rax)
000000010003f680	leaq	(%rdx,%r15), %rsi
000000010003f684	cmpq	$0x1, %rsi
000000010003f688	je	0x10003fafa
000000010003f68e	movq	(%rcx), %rsi
000000010003f691	addq	$0x28, %rcx
000000010003f695	incq	%r15
000000010003f698	cmpq	%rax, %rsi
000000010003f69b	movq	%rsi, %rax
000000010003f69e	jae	0x10003f680
000000010003f6a0	cmpq	%rbx, %r15
000000010003f6a3	setb	%cl
000000010003f6a6	cmpq	%rbx, %r15
000000010003f6a9	je	0x10003fafd
000000010003f6af	leaq	-0x1(%r15), %rdx
000000010003f6b3	cmpq	%rbx, %rdx
000000010003f6b6	jae	0x10003fbdd
000000010003f6bc	testb	%cl, %cl
000000010003f6be	je	0x10003fbf2
000000010003f6c4	leaq	(%rdx,%rdx,4), %r12
000000010003f6c8	leaq	(%r15,%r15,4), %r13
000000010003f6cc	movq	0x20(%r14,%r12,8), %rax
000000010003f6d1	movq	%rax, -0x30(%rbp)
000000010003f6d5	movq	0x18(%r14,%r12,8), %rax
000000010003f6da	movq	%rax, -0x38(%rbp)
000000010003f6de	movq	0x10(%r14,%r12,8), %rax
000000010003f6e3	movq	%rax, -0x40(%rbp)
000000010003f6e7	movq	(%r14,%r12,8), %rax
000000010003f6eb	movq	0x8(%r14,%r12,8), %rcx
000000010003f6f0	movq	%rcx, -0x48(%rbp)
000000010003f6f4	movq	%rax, -0x50(%rbp)
000000010003f6f8	movq	0x20(%r14,%r13,8), %rax
000000010003f6fd	movq	%rax, 0x20(%r14,%r12,8)
000000010003f702	movq	0x18(%r14,%r13,8), %rax
000000010003f707	movq	%rax, 0x18(%r14,%r12,8)
000000010003f70c	movq	0x10(%r14,%r13,8), %rax
000000010003f711	movq	%rax, 0x10(%r14,%r12,8)
000000010003f716	movq	(%r14,%r13,8), %rax
000000010003f71a	movq	0x8(%r14,%r13,8), %rcx
000000010003f71f	movq	%rcx, 0x8(%r14,%r12,8)
000000010003f724	movq	%rax, (%r14,%r12,8)
000000010003f728	movq	-0x30(%rbp), %rax
000000010003f72c	movq	%rax, 0x20(%r14,%r13,8)
000000010003f731	movq	-0x38(%rbp), %rax
000000010003f735	movq	%rax, 0x18(%r14,%r13,8)
000000010003f73a	movq	-0x40(%rbp), %rax
000000010003f73e	movq	%rax, 0x10(%r14,%r13,8)
000000010003f743	movq	-0x50(%rbp), %rax
000000010003f747	movq	-0x48(%rbp), %rcx
000000010003f74b	movq	%rcx, 0x8(%r14,%r13,8)
000000010003f750	movq	%rax, (%r14,%r13,8)
000000010003f754	cmpq	$0x1, %r15
000000010003f758	jbe	0x10003f773
000000010003f75a	movq	%r14, %rdi
000000010003f75d	movq	%r15, %rsi
000000010003f760	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E ## core::slice::sort::insertion_sort_shift_left::he675f3b01b9c50b8
000000010003f765	movq	%r14, %rdi
000000010003f768	movq	%r15, %rsi
000000010003f76b	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h219fc72bc6ad259bE ## core::slice::sort::insertion_sort_shift_right::h219fc72bc6ad259b
000000010003f770	movb	$0x1, %dil
000000010003f773	cmpq	%rbx, %r15
000000010003f776	jae	0x10003f7bb
000000010003f778	movq	0x10(%r14,%r13,8), %rax
000000010003f77d	movb	$0x1, %cl
000000010003f77f	cmpq	0x10(%r14,%r12,8), %rax
000000010003f784	jb	0x10003f7b1
000000010003f786	leaq	0x38(%r14,%r13,8), %rcx
000000010003f78b	leaq	-0x1(%rbx), %rdx
000000010003f78f	nop
000000010003f790	cmpq	%r15, %rdx
000000010003f793	je	0x10003fafa
000000010003f799	movq	(%rcx), %rsi
000000010003f79c	addq	$0x28, %rcx
000000010003f7a0	incq	%r15
000000010003f7a3	cmpq	%rax, %rsi
000000010003f7a6	movq	%rsi, %rax
000000010003f7a9	jae	0x10003f790
000000010003f7ab	cmpq	%rbx, %r15
000000010003f7ae	setb	%cl
000000010003f7b1	cmpq	%rbx, %r15
000000010003f7b4	jne	0x10003f7c6
000000010003f7b6	jmp	0x10003fafd
000000010003f7bb	xorl	%ecx, %ecx
000000010003f7bd	cmpq	%rbx, %r15
000000010003f7c0	je	0x10003fafd
000000010003f7c6	leaq	-0x1(%r15), %rdx
000000010003f7ca	cmpq	%rbx, %rdx
000000010003f7cd	jae	0x10003fbdd
000000010003f7d3	testb	%cl, %cl
000000010003f7d5	je	0x10003fbf2
000000010003f7db	leaq	(%rdx,%rdx,4), %r12
000000010003f7df	leaq	(%r15,%r15,4), %r13
000000010003f7e3	movq	0x20(%r14,%r12,8), %rax
000000010003f7e8	movq	%rax, -0x30(%rbp)
000000010003f7ec	movq	0x18(%r14,%r12,8), %rax
000000010003f7f1	movq	%rax, -0x38(%rbp)
000000010003f7f5	movq	0x10(%r14,%r12,8), %rax
000000010003f7fa	movq	%rax, -0x40(%rbp)
000000010003f7fe	movq	(%r14,%r12,8), %rax
000000010003f802	movq	0x8(%r14,%r12,8), %rcx
000000010003f807	movq	%rcx, -0x48(%rbp)
000000010003f80b	movq	%rax, -0x50(%rbp)
000000010003f80f	movq	0x20(%r14,%r13,8), %rax
000000010003f814	movq	%rax, 0x20(%r14,%r12,8)
000000010003f819	movq	0x18(%r14,%r13,8), %rax
000000010003f81e	movq	%rax, 0x18(%r14,%r12,8)
000000010003f823	movq	0x10(%r14,%r13,8), %rax
000000010003f828	movq	%rax, 0x10(%r14,%r12,8)
000000010003f82d	movq	(%r14,%r13,8), %rax
000000010003f831	movq	0x8(%r14,%r13,8), %rcx
000000010003f836	movq	%rcx, 0x8(%r14,%r12,8)
000000010003f83b	movq	%rax, (%r14,%r12,8)
000000010003f83f	movq	-0x30(%rbp), %rax
000000010003f843	movq	%rax, 0x20(%r14,%r13,8)
000000010003f848	movq	-0x38(%rbp), %rax
000000010003f84c	movq	%rax, 0x18(%r14,%r13,8)
000000010003f851	movq	-0x40(%rbp), %rax
000000010003f855	movq	%rax, 0x10(%r14,%r13,8)
000000010003f85a	movq	-0x50(%rbp), %rax
000000010003f85e	movq	-0x48(%rbp), %rcx
000000010003f862	movq	%rcx, 0x8(%r14,%r13,8)
000000010003f867	movq	%rax, (%r14,%r13,8)
000000010003f86b	cmpq	$0x2, %r15
000000010003f86f	jb	0x10003f88a
000000010003f871	movq	%r14, %rdi
000000010003f874	movq	%r15, %rsi
000000010003f877	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E ## core::slice::sort::insertion_sort_shift_left::he675f3b01b9c50b8
000000010003f87c	movq	%r14, %rdi
000000010003f87f	movq	%r15, %rsi
000000010003f882	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h219fc72bc6ad259bE ## core::slice::sort::insertion_sort_shift_right::h219fc72bc6ad259b
000000010003f887	movb	$0x1, %dil
000000010003f88a	cmpq	%rbx, %r15
000000010003f88d	jae	0x10003f8e2
000000010003f88f	movq	0x10(%r14,%r13,8), %rax
000000010003f894	movb	$0x1, %cl
000000010003f896	cmpq	0x10(%r14,%r12,8), %rax
000000010003f89b	jb	0x10003f8e4
000000010003f89d	leaq	0x38(%r14,%r13,8), %rcx
000000010003f8a2	leaq	-0x1(%rbx), %rdx
000000010003f8a6	nopw	%cs:(%rax,%rax)
000000010003f8b0	cmpq	%r15, %rdx
000000010003f8b3	je	0x10003fafa
000000010003f8b9	movq	(%rcx), %rsi
000000010003f8bc	addq	$0x28, %rcx
000000010003f8c0	incq	%r15
000000010003f8c3	cmpq	%rax, %rsi
000000010003f8c6	movq	%rsi, %rax
000000010003f8c9	jae	0x10003f8b0
000000010003f8cb	cmpq	%rbx, %r15
000000010003f8ce	setb	%cl
000000010003f8d1	jmp	0x10003f8e4
000000010003f8d3	movq	%rbx, %rax
000000010003f8d6	cmpq	%rbx, %rax
000000010003f8d9	sete	%dil
000000010003f8dd	jmp	0x10003fafd
000000010003f8e2	xorl	%ecx, %ecx
000000010003f8e4	cmpq	%rbx, %r15
000000010003f8e7	je	0x10003fafd
000000010003f8ed	leaq	-0x1(%r15), %rdx
000000010003f8f1	cmpq	%rbx, %rdx
000000010003f8f4	jae	0x10003fbdd
000000010003f8fa	testb	%cl, %cl
000000010003f8fc	je	0x10003fbf2
000000010003f902	leaq	(%rdx,%rdx,4), %r12
000000010003f906	leaq	(%r15,%r15,4), %r13
000000010003f90a	movq	0x20(%r14,%r12,8), %rax
000000010003f90f	movq	%rax, -0x30(%rbp)
000000010003f913	movq	0x18(%r14,%r12,8), %rax
000000010003f918	movq	%rax, -0x38(%rbp)
000000010003f91c	movq	0x10(%r14,%r12,8), %rax
000000010003f921	movq	%rax, -0x40(%rbp)
000000010003f925	movq	(%r14,%r12,8), %rax
000000010003f929	movq	0x8(%r14,%r12,8), %rcx
000000010003f92e	movq	%rcx, -0x48(%rbp)
000000010003f932	movq	%rax, -0x50(%rbp)
000000010003f936	movq	0x20(%r14,%r13,8), %rax
000000010003f93b	movq	%rax, 0x20(%r14,%r12,8)
000000010003f940	movq	0x18(%r14,%r13,8), %rax
000000010003f945	movq	%rax, 0x18(%r14,%r12,8)
000000010003f94a	movq	0x10(%r14,%r13,8), %rax
000000010003f94f	movq	%rax, 0x10(%r14,%r12,8)
000000010003f954	movq	(%r14,%r13,8), %rax
000000010003f958	movq	0x8(%r14,%r13,8), %rcx
000000010003f95d	movq	%rcx, 0x8(%r14,%r12,8)
000000010003f962	movq	%rax, (%r14,%r12,8)
000000010003f966	movq	-0x30(%rbp), %rax
000000010003f96a	movq	%rax, 0x20(%r14,%r13,8)
000000010003f96f	movq	-0x38(%rbp), %rax
000000010003f973	movq	%rax, 0x18(%r14,%r13,8)
000000010003f978	movq	-0x40(%rbp), %rax
000000010003f97c	movq	%rax, 0x10(%r14,%r13,8)
000000010003f981	movq	-0x50(%rbp), %rax
000000010003f985	movq	-0x48(%rbp), %rcx
000000010003f989	movq	%rcx, 0x8(%r14,%r13,8)
000000010003f98e	movq	%rax, (%r14,%r13,8)
000000010003f992	cmpq	$0x2, %r15
000000010003f996	jb	0x10003f9b1
000000010003f998	movq	%r14, %rdi
000000010003f99b	movq	%r15, %rsi
000000010003f99e	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E ## core::slice::sort::insertion_sort_shift_left::he675f3b01b9c50b8
000000010003f9a3	movq	%r14, %rdi
000000010003f9a6	movq	%r15, %rsi
000000010003f9a9	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h219fc72bc6ad259bE ## core::slice::sort::insertion_sort_shift_right::h219fc72bc6ad259b
000000010003f9ae	movb	$0x1, %dil
000000010003f9b1	cmpq	%rbx, %r15
000000010003f9b4	jae	0x10003f9f0
000000010003f9b6	movq	0x10(%r14,%r13,8), %rax
000000010003f9bb	movb	$0x1, %cl
000000010003f9bd	cmpq	0x10(%r14,%r12,8), %rax
000000010003f9c2	jb	0x10003f9f2
000000010003f9c4	leaq	0x38(%r14,%r13,8), %rcx
000000010003f9c9	leaq	-0x1(%rbx), %rdx
000000010003f9cd	cmpq	%r15, %rdx
000000010003f9d0	je	0x10003fafa
000000010003f9d6	movq	(%rcx), %rsi
000000010003f9d9	addq	$0x28, %rcx
000000010003f9dd	incq	%r15
000000010003f9e0	cmpq	%rax, %rsi
000000010003f9e3	movq	%rsi, %rax
000000010003f9e6	jae	0x10003f9cd
000000010003f9e8	cmpq	%rbx, %r15
000000010003f9eb	setb	%cl
000000010003f9ee	jmp	0x10003f9f2
000000010003f9f0	xorl	%ecx, %ecx
000000010003f9f2	cmpq	%rbx, %r15
000000010003f9f5	je	0x10003fafd
000000010003f9fb	leaq	-0x1(%r15), %rdx
000000010003f9ff	cmpq	%rbx, %rdx
000000010003fa02	jae	0x10003fbdd
000000010003fa08	testb	%cl, %cl
000000010003fa0a	je	0x10003fbf2
000000010003fa10	leaq	(%rdx,%rdx,4), %r12
000000010003fa14	leaq	(%r15,%r15,4), %r13
000000010003fa18	movq	0x20(%r14,%r12,8), %rax
000000010003fa1d	movq	%rax, -0x30(%rbp)
000000010003fa21	movq	0x18(%r14,%r12,8), %rax
000000010003fa26	movq	%rax, -0x38(%rbp)
000000010003fa2a	movq	0x10(%r14,%r12,8), %rax
000000010003fa2f	movq	%rax, -0x40(%rbp)
000000010003fa33	movq	(%r14,%r12,8), %rax
000000010003fa37	movq	0x8(%r14,%r12,8), %rcx
000000010003fa3c	movq	%rcx, -0x48(%rbp)
000000010003fa40	movq	%rax, -0x50(%rbp)
000000010003fa44	movq	0x20(%r14,%r13,8), %rax
000000010003fa49	movq	%rax, 0x20(%r14,%r12,8)
000000010003fa4e	movq	0x18(%r14,%r13,8), %rax
000000010003fa53	movq	%rax, 0x18(%r14,%r12,8)
000000010003fa58	movq	0x10(%r14,%r13,8), %rax
000000010003fa5d	movq	%rax, 0x10(%r14,%r12,8)
000000010003fa62	movq	(%r14,%r13,8), %rax
000000010003fa66	movq	0x8(%r14,%r13,8), %rcx
000000010003fa6b	movq	%rcx, 0x8(%r14,%r12,8)
000000010003fa70	movq	%rax, (%r14,%r12,8)
000000010003fa74	movq	-0x30(%rbp), %rax
000000010003fa78	movq	%rax, 0x20(%r14,%r13,8)
000000010003fa7d	movq	-0x38(%rbp), %rax
000000010003fa81	movq	%rax, 0x18(%r14,%r13,8)
000000010003fa86	movq	-0x40(%rbp), %rax
000000010003fa8a	movq	%rax, 0x10(%r14,%r13,8)
000000010003fa8f	movq	-0x50(%rbp), %rax
000000010003fa93	movq	-0x48(%rbp), %rcx
000000010003fa97	movq	%rcx, 0x8(%r14,%r13,8)
000000010003fa9c	movq	%rax, (%r14,%r13,8)
000000010003faa0	cmpq	$0x2, %r15
000000010003faa4	jb	0x10003fabf
000000010003faa6	movq	%r14, %rdi
000000010003faa9	movq	%r15, %rsi
000000010003faac	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E ## core::slice::sort::insertion_sort_shift_left::he675f3b01b9c50b8
000000010003fab1	movq	%r14, %rdi
000000010003fab4	movq	%r15, %rsi
000000010003fab7	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h219fc72bc6ad259bE ## core::slice::sort::insertion_sort_shift_right::h219fc72bc6ad259b
000000010003fabc	movb	$0x1, %dil
000000010003fabf	cmpq	%rbx, %r15
000000010003fac2	jae	0x10003fb0e
000000010003fac4	movq	0x10(%r14,%r13,8), %rax
000000010003fac9	movb	$0x1, %cl
000000010003facb	cmpq	0x10(%r14,%r12,8), %rax
000000010003fad0	jb	0x10003fb10
000000010003fad2	leaq	0x38(%r14,%r13,8), %rcx
000000010003fad7	leaq	-0x1(%rbx), %rdx
000000010003fadb	cmpq	%r15, %rdx
000000010003fade	je	0x10003fafa
000000010003fae0	movq	(%rcx), %rsi
000000010003fae3	addq	$0x28, %rcx
000000010003fae7	incq	%r15
000000010003faea	cmpq	%rax, %rsi
000000010003faed	movq	%rsi, %rax
000000010003faf0	jae	0x10003fadb
000000010003faf2	cmpq	%rbx, %r15
000000010003faf5	setb	%cl
000000010003faf8	jmp	0x10003fb10
000000010003fafa	movb	$0x1, %dil
000000010003fafd	movl	%edi, %eax
000000010003faff	addq	$0x28, %rsp
000000010003fb03	popq	%rbx
000000010003fb04	popq	%r12
000000010003fb06	popq	%r13
000000010003fb08	popq	%r14
000000010003fb0a	popq	%r15
000000010003fb0c	popq	%rbp
000000010003fb0d	retq
000000010003fb0e	xorl	%ecx, %ecx
000000010003fb10	cmpq	%rbx, %r15
000000010003fb13	je	0x10003fafd
000000010003fb15	leaq	-0x1(%r15), %rdx
000000010003fb19	cmpq	%rbx, %rdx
000000010003fb1c	jae	0x10003fbdd
000000010003fb22	testb	%cl, %cl
000000010003fb24	je	0x10003fbf2
000000010003fb2a	leaq	(%rdx,%rdx,4), %rcx
000000010003fb2e	leaq	(%r15,%r15,4), %rax
000000010003fb32	movq	0x20(%r14,%rcx,8), %rsi
000000010003fb37	movq	%rsi, -0x30(%rbp)
000000010003fb3b	movq	0x18(%r14,%rcx,8), %rsi
000000010003fb40	movq	%rsi, -0x38(%rbp)
000000010003fb44	movq	0x10(%r14,%rcx,8), %rsi
000000010003fb49	movq	%rsi, -0x40(%rbp)
000000010003fb4d	movq	(%r14,%rcx,8), %rsi
000000010003fb51	movq	0x8(%r14,%rcx,8), %rdi
000000010003fb56	movq	%rdi, -0x48(%rbp)
000000010003fb5a	movq	%rsi, -0x50(%rbp)
000000010003fb5e	movq	0x20(%r14,%rax,8), %rsi
000000010003fb63	movq	%rsi, 0x20(%r14,%rcx,8)
000000010003fb68	movq	0x18(%r14,%rax,8), %rsi
000000010003fb6d	movq	%rsi, 0x18(%r14,%rcx,8)
000000010003fb72	movq	0x10(%r14,%rax,8), %rsi
000000010003fb77	movq	%rsi, 0x10(%r14,%rcx,8)
000000010003fb7c	movq	(%r14,%rax,8), %rsi
000000010003fb80	movq	0x8(%r14,%rax,8), %rdi
000000010003fb85	movq	%rdi, 0x8(%r14,%rcx,8)
000000010003fb8a	movq	%rsi, (%r14,%rcx,8)
000000010003fb8e	movq	-0x30(%rbp), %rcx
000000010003fb92	movq	%rcx, 0x20(%r14,%rax,8)
000000010003fb97	movq	-0x38(%rbp), %rcx
000000010003fb9b	movq	%rcx, 0x18(%r14,%rax,8)
000000010003fba0	movq	-0x40(%rbp), %rcx
000000010003fba4	movq	%rcx, 0x10(%r14,%rax,8)
000000010003fba9	movq	-0x50(%rbp), %rcx
000000010003fbad	movq	-0x48(%rbp), %rsi
000000010003fbb1	movq	%rsi, 0x8(%r14,%rax,8)
000000010003fbb6	movq	%rcx, (%r14,%rax,8)
000000010003fbba	cmpq	$0x2, %r15
000000010003fbbe	jb	0x10003fbd6
000000010003fbc0	movq	%r14, %rdi
000000010003fbc3	movq	%r15, %rsi
000000010003fbc6	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he675f3b01b9c50b8E ## core::slice::sort::insertion_sort_shift_left::he675f3b01b9c50b8
000000010003fbcb	movq	%r14, %rdi
000000010003fbce	movq	%r15, %rsi
000000010003fbd1	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h219fc72bc6ad259bE ## core::slice::sort::insertion_sort_shift_right::h219fc72bc6ad259b
000000010003fbd6	xorl	%edi, %edi
000000010003fbd8	jmp	0x10003fafd
000000010003fbdd	leaq	0x88fc(%rip), %rax
000000010003fbe4	movq	%rdx, %rdi
000000010003fbe7	movq	%rbx, %rsi
000000010003fbea	movq	%rax, %rdx
000000010003fbed	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003fbf2	leaq	0x88e7(%rip), %rdx
000000010003fbf9	movq	%r15, %rdi
000000010003fbfc	movq	%rbx, %rsi
000000010003fbff	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010003fc04	nopw	%cs:(%rax,%rax)
000000010003fc0e	nop
__ZN4core5slice4sort22partial_insertion_sort17h86d6969c3415af64E:
000000010003fc10	pushq	%rbp
000000010003fc11	movq	%rsp, %rbp
000000010003fc14	pushq	%r15
000000010003fc16	pushq	%r14
000000010003fc18	pushq	%r13
000000010003fc1a	pushq	%r12
000000010003fc1c	pushq	%rbx
000000010003fc1d	subq	$0x48, %rsp
000000010003fc21	movq	%rdi, %r13
000000010003fc24	cmpq	$0x31, %rsi
000000010003fc28	ja	0x10003fc9a
000000010003fc2a	movl	$0x1, %ebx
000000010003fc2f	cmpq	$0x1, %rsi
000000010003fc33	jbe	0x10003fed1
000000010003fc39	movq	%rsi, -0x30(%rbp)
000000010003fc3d	movq	(%r13), %r15
000000010003fc41	movq	0x8(%r13), %r14
000000010003fc45	addq	$0x20, %r13
000000010003fc49	nopl	(%rax)
000000010003fc50	movq	%r15, %rsi
000000010003fc53	movq	%r14, %rdx
000000010003fc56	movq	-0x8(%r13), %r15
000000010003fc5a	movq	(%r13), %r14
000000010003fc5e	movq	%r14, %r12
000000010003fc61	subq	%rdx, %r12
000000010003fc64	cmovbq	%r14, %rdx
000000010003fc68	movq	%r15, %rdi
000000010003fc6b	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003fc70	cltq
000000010003fc72	testl	%eax, %eax
000000010003fc74	cmovneq	%rax, %r12
000000010003fc78	testq	%r12, %r12
000000010003fc7b	js	0x10003fecd
000000010003fc81	incq	%rbx
000000010003fc84	addq	$0x18, %r13
000000010003fc88	cmpq	%rbx, -0x30(%rbp)
000000010003fc8c	jne	0x10003fc50
000000010003fc8e	movq	-0x30(%rbp), %rsi
000000010003fc92	movq	%rsi, %rbx
000000010003fc95	jmp	0x10003fed1
000000010003fc9a	movq	%rdx, -0x68(%rbp)
000000010003fc9e	movq	%rsi, -0x30(%rbp)
000000010003fca2	movq	(%r13), %rsi
000000010003fca6	movq	0x8(%r13), %rdx
000000010003fcaa	movq	0x18(%r13), %rdi
000000010003fcae	movq	0x20(%r13), %r15
000000010003fcb2	movq	%r15, %r14
000000010003fcb5	subq	%rdx, %r14
000000010003fcb8	cmovbq	%r15, %rdx
000000010003fcbc	movq	%rdi, %r12
000000010003fcbf	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003fcc4	cltq
000000010003fcc6	testl	%eax, %eax
000000010003fcc8	cmovneq	%rax, %r14
000000010003fccc	testq	%r14, %r14
000000010003fccf	movq	%r13, -0x38(%rbp)
000000010003fcd3	js	0x10003fd53
000000010003fcd5	leaq	0x38(%r13), %r14
000000010003fcd9	movl	$0x2, %eax
000000010003fcde	subq	-0x30(%rbp), %rax
000000010003fce2	movq	%rax, -0x48(%rbp)
000000010003fce6	movl	$0x1, %r9d
000000010003fcec	movq	%r12, %rsi
000000010003fcef	nop
000000010003fcf0	movq	-0x48(%rbp), %rax
000000010003fcf4	addq	%r9, %rax
000000010003fcf7	cmpq	$0x1, %rax
000000010003fcfb	je	0x10004032c
000000010003fd01	movq	-0x8(%r14), %r13
000000010003fd05	movq	(%r14), %rbx
000000010003fd08	movq	%rbx, %r12
000000010003fd0b	subq	%r15, %r12
000000010003fd0e	cmovbq	%rbx, %r15
000000010003fd12	movq	%r13, %rdi
000000010003fd15	movq	%r15, %rdx
000000010003fd18	movq	%r9, %r15
000000010003fd1b	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003fd20	movq	%r15, %r9
000000010003fd23	cltq
000000010003fd25	testl	%eax, %eax
000000010003fd27	cmovneq	%rax, %r12
000000010003fd2b	addq	$0x18, %r14
000000010003fd2f	incq	%r9
000000010003fd32	movq	%rbx, %r15
000000010003fd35	movq	%r13, %rsi
000000010003fd38	testq	%r12, %r12
000000010003fd3b	jns	0x10003fcf0
000000010003fd3d	movq	-0x30(%rbp), %r15
000000010003fd41	cmpq	%r15, %r9
000000010003fd44	setb	%cl
000000010003fd47	movb	$0x1, %al
000000010003fd49	cmpq	%r15, %r9
000000010003fd4c	jne	0x10003fd6a
000000010003fd4e	jmp	0x10004032e
000000010003fd53	movl	$0x1, %r9d
000000010003fd59	movb	$0x1, %cl
000000010003fd5b	movq	-0x30(%rbp), %r15
000000010003fd5f	movb	$0x1, %al
000000010003fd61	cmpq	%r15, %r9
000000010003fd64	je	0x10004032e
000000010003fd6a	leaq	-0x1(%r9), %rdx
000000010003fd6e	cmpq	%r15, %rdx
000000010003fd71	jae	0x1000403f3
000000010003fd77	testb	%cl, %cl
000000010003fd79	je	0x100040408
000000010003fd7f	leaq	(%rdx,%rdx,2), %r14
000000010003fd83	leaq	(%r9,%r9,2), %rbx
000000010003fd87	movq	-0x38(%rbp), %rdi
000000010003fd8b	movq	0x10(%rdi,%r14,8), %rax
000000010003fd90	movq	%rax, -0x50(%rbp)
000000010003fd94	movq	(%rdi,%r14,8), %rax
000000010003fd98	movq	0x8(%rdi,%r14,8), %rcx
000000010003fd9d	movq	%rcx, -0x58(%rbp)
000000010003fda1	movq	%rax, -0x60(%rbp)
000000010003fda5	movq	0x10(%rdi,%rbx,8), %rax
000000010003fdaa	movq	%rax, 0x10(%rdi,%r14,8)
000000010003fdaf	movq	(%rdi,%rbx,8), %rax
000000010003fdb3	movq	0x8(%rdi,%rbx,8), %rcx
000000010003fdb8	movq	%rcx, 0x8(%rdi,%r14,8)
000000010003fdbd	movq	%rax, (%rdi,%r14,8)
000000010003fdc1	movq	-0x50(%rbp), %rax
000000010003fdc5	movq	%rax, 0x10(%rdi,%rbx,8)
000000010003fdca	movq	-0x60(%rbp), %rax
000000010003fdce	movq	-0x58(%rbp), %rcx
000000010003fdd2	movq	%rcx, 0x8(%rdi,%rbx,8)
000000010003fdd7	movq	%rax, (%rdi,%rbx,8)
000000010003fddb	cmpq	$0x1, %r9
000000010003fddf	jbe	0x10003fe09
000000010003fde1	movq	%r9, %rsi
000000010003fde4	movq	-0x68(%rbp), %r12
000000010003fde8	movq	%r12, %rcx
000000010003fdeb	movq	%r9, %r13
000000010003fdee	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E ## core::slice::sort::insertion_sort_shift_left::he249994ee084fbf8
000000010003fdf3	movq	-0x38(%rbp), %rdi
000000010003fdf7	movq	%r13, %rsi
000000010003fdfa	movq	%r12, %rdx
000000010003fdfd	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h12707e027ba23ba1E ## core::slice::sort::insertion_sort_shift_right::h12707e027ba23ba1
000000010003fe02	movq	%r13, %r9
000000010003fe05	movq	-0x38(%rbp), %rdi
000000010003fe09	cmpq	%r15, %r9
000000010003fe0c	jae	0x10003fedc
000000010003fe12	movq	%r9, -0x40(%rbp)
000000010003fe16	movq	%rdi, %r12
000000010003fe19	leaq	(%rdi,%r14,8), %rax
000000010003fe1d	movq	(%rax), %rsi
000000010003fe20	movq	0x8(%rax), %rdx
000000010003fe24	movq	(%rdi,%rbx,8), %rdi
000000010003fe28	movq	0x8(%r12,%rbx,8), %r15
000000010003fe2d	movq	%r15, %r14
000000010003fe30	subq	%rdx, %r14
000000010003fe33	cmovbq	%r15, %rdx
000000010003fe37	movq	%rdi, %r13
000000010003fe3a	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003fe3f	cltq
000000010003fe41	testl	%eax, %eax
000000010003fe43	cmovneq	%rax, %r14
000000010003fe47	testq	%r14, %r14
000000010003fe4a	js	0x10003feeb
000000010003fe50	leaq	0x20(%r12,%rbx,8), %r14
000000010003fe55	movq	-0x30(%rbp), %rax
000000010003fe59	decq	%rax
000000010003fe5c	movq	%rax, -0x48(%rbp)
000000010003fe60	movq	-0x40(%rbp), %r9
000000010003fe64	movq	%r13, %rsi
000000010003fe67	nopw	(%rax,%rax)
000000010003fe70	cmpq	%r9, -0x48(%rbp)
000000010003fe74	je	0x10004032c
000000010003fe7a	movq	-0x8(%r14), %rbx
000000010003fe7e	movq	(%r14), %r13
000000010003fe81	movq	%r13, %r12
000000010003fe84	subq	%r15, %r12
000000010003fe87	cmovbq	%r13, %r15
000000010003fe8b	movq	%rbx, %rdi
000000010003fe8e	movq	%r15, %rdx
000000010003fe91	movq	%r9, %r15
000000010003fe94	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003fe99	movq	%r15, %r9
000000010003fe9c	cltq
000000010003fe9e	testl	%eax, %eax
000000010003fea0	cmovneq	%rax, %r12
000000010003fea4	addq	$0x18, %r14
000000010003fea8	incq	%r9
000000010003feab	movq	%r13, %r15
000000010003feae	movq	%rbx, %rsi
000000010003feb1	testq	%r12, %r12
000000010003feb4	jns	0x10003fe70
000000010003feb6	movq	-0x30(%rbp), %r15
000000010003feba	cmpq	%r15, %r9
000000010003febd	setb	%cl
000000010003fec0	cmpq	%r15, %r9
000000010003fec3	movb	$0x1, %al
000000010003fec5	je	0x10004032e
000000010003fecb	jmp	0x10003ff00
000000010003fecd	movq	-0x30(%rbp), %rsi
000000010003fed1	cmpq	%rsi, %rbx
000000010003fed4	sete	%al
000000010003fed7	jmp	0x10004032e
000000010003fedc	xorl	%ecx, %ecx
000000010003fede	cmpq	%r15, %r9
000000010003fee1	movb	$0x1, %al
000000010003fee3	je	0x10004032e
000000010003fee9	jmp	0x10003ff00
000000010003feeb	movb	$0x1, %cl
000000010003feed	movq	-0x30(%rbp), %r15
000000010003fef1	movq	-0x40(%rbp), %r9
000000010003fef5	cmpq	%r15, %r9
000000010003fef8	movb	$0x1, %al
000000010003fefa	je	0x10004032e
000000010003ff00	leaq	-0x1(%r9), %rdx
000000010003ff04	cmpq	%r15, %rdx
000000010003ff07	jae	0x1000403f3
000000010003ff0d	testb	%cl, %cl
000000010003ff0f	je	0x100040408
000000010003ff15	leaq	(%rdx,%rdx,2), %r14
000000010003ff19	leaq	(%r9,%r9,2), %rbx
000000010003ff1d	movq	-0x38(%rbp), %rdi
000000010003ff21	movq	0x10(%rdi,%r14,8), %rax
000000010003ff26	movq	%rax, -0x50(%rbp)
000000010003ff2a	movq	(%rdi,%r14,8), %rax
000000010003ff2e	movq	0x8(%rdi,%r14,8), %rcx
000000010003ff33	movq	%rcx, -0x58(%rbp)
000000010003ff37	movq	%rax, -0x60(%rbp)
000000010003ff3b	movq	0x10(%rdi,%rbx,8), %rax
000000010003ff40	movq	%rax, 0x10(%rdi,%r14,8)
000000010003ff45	movq	(%rdi,%rbx,8), %rax
000000010003ff49	movq	0x8(%rdi,%rbx,8), %rcx
000000010003ff4e	movq	%rcx, 0x8(%rdi,%r14,8)
000000010003ff53	movq	%rax, (%rdi,%r14,8)
000000010003ff57	movq	-0x50(%rbp), %rax
000000010003ff5b	movq	%rax, 0x10(%rdi,%rbx,8)
000000010003ff60	movq	-0x60(%rbp), %rax
000000010003ff64	movq	-0x58(%rbp), %rcx
000000010003ff68	movq	%rcx, 0x8(%rdi,%rbx,8)
000000010003ff6d	movq	%rax, (%rdi,%rbx,8)
000000010003ff71	cmpq	$0x2, %r9
000000010003ff75	jb	0x10003ff9f
000000010003ff77	movq	%r9, %rsi
000000010003ff7a	movq	-0x68(%rbp), %r12
000000010003ff7e	movq	%r12, %rcx
000000010003ff81	movq	%r9, %r13
000000010003ff84	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E ## core::slice::sort::insertion_sort_shift_left::he249994ee084fbf8
000000010003ff89	movq	-0x38(%rbp), %rdi
000000010003ff8d	movq	%r13, %rsi
000000010003ff90	movq	%r12, %rdx
000000010003ff93	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h12707e027ba23ba1E ## core::slice::sort::insertion_sort_shift_right::h12707e027ba23ba1
000000010003ff98	movq	%r13, %r9
000000010003ff9b	movq	-0x38(%rbp), %rdi
000000010003ff9f	cmpq	%r15, %r9
000000010003ffa2	jae	0x10004005d
000000010003ffa8	movq	%r9, -0x40(%rbp)
000000010003ffac	movq	%rdi, %r12
000000010003ffaf	leaq	(%rdi,%r14,8), %rax
000000010003ffb3	movq	(%rax), %rsi
000000010003ffb6	movq	0x8(%rax), %rdx
000000010003ffba	movq	(%rdi,%rbx,8), %rdi
000000010003ffbe	movq	0x8(%r12,%rbx,8), %r15
000000010003ffc3	movq	%r15, %r14
000000010003ffc6	subq	%rdx, %r14
000000010003ffc9	cmovbq	%r15, %rdx
000000010003ffcd	movq	%rdi, %r13
000000010003ffd0	callq	0x1000427c0                     ## symbol stub for: _memcmp
000000010003ffd5	cltq
000000010003ffd7	testl	%eax, %eax
000000010003ffd9	cmovneq	%rax, %r14
000000010003ffdd	testq	%r14, %r14
000000010003ffe0	js	0x10004006c
000000010003ffe6	leaq	0x20(%r12,%rbx,8), %r14
000000010003ffeb	movq	-0x30(%rbp), %rax
000000010003ffef	decq	%rax
000000010003fff2	movq	%rax, -0x48(%rbp)
000000010003fff6	movq	-0x40(%rbp), %r9
000000010003fffa	movq	%r13, %rsi
000000010003fffd	nopl	(%rax)
0000000100040000	cmpq	%r9, -0x48(%rbp)
0000000100040004	je	0x10004032c
000000010004000a	movq	-0x8(%r14), %rbx
000000010004000e	movq	(%r14), %r13
0000000100040011	movq	%r13, %r12
0000000100040014	subq	%r15, %r12
0000000100040017	cmovbq	%r13, %r15
000000010004001b	movq	%rbx, %rdi
000000010004001e	movq	%r15, %rdx
0000000100040021	movq	%r9, %r15
0000000100040024	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100040029	movq	%r15, %r9
000000010004002c	cltq
000000010004002e	testl	%eax, %eax
0000000100040030	cmovneq	%rax, %r12
0000000100040034	addq	$0x18, %r14
0000000100040038	incq	%r9
000000010004003b	movq	%r13, %r15
000000010004003e	movq	%rbx, %rsi
0000000100040041	testq	%r12, %r12
0000000100040044	jns	0x100040000
0000000100040046	movq	-0x30(%rbp), %r15
000000010004004a	cmpq	%r15, %r9
000000010004004d	setb	%cl
0000000100040050	cmpq	%r15, %r9
0000000100040053	movb	$0x1, %al
0000000100040055	je	0x10004032e
000000010004005b	jmp	0x100040081
000000010004005d	xorl	%ecx, %ecx
000000010004005f	cmpq	%r15, %r9
0000000100040062	movb	$0x1, %al
0000000100040064	je	0x10004032e
000000010004006a	jmp	0x100040081
000000010004006c	movb	$0x1, %cl
000000010004006e	movq	-0x30(%rbp), %r15
0000000100040072	movq	-0x40(%rbp), %r9
0000000100040076	cmpq	%r15, %r9
0000000100040079	movb	$0x1, %al
000000010004007b	je	0x10004032e
0000000100040081	leaq	-0x1(%r9), %rdx
0000000100040085	cmpq	%r15, %rdx
0000000100040088	jae	0x1000403f3
000000010004008e	testb	%cl, %cl
0000000100040090	je	0x100040408
0000000100040096	leaq	(%rdx,%rdx,2), %r14
000000010004009a	leaq	(%r9,%r9,2), %rbx
000000010004009e	movq	-0x38(%rbp), %rdi
00000001000400a2	movq	0x10(%rdi,%r14,8), %rax
00000001000400a7	movq	%rax, -0x50(%rbp)
00000001000400ab	movq	(%rdi,%r14,8), %rax
00000001000400af	movq	0x8(%rdi,%r14,8), %rcx
00000001000400b4	movq	%rcx, -0x58(%rbp)
00000001000400b8	movq	%rax, -0x60(%rbp)
00000001000400bc	movq	0x10(%rdi,%rbx,8), %rax
00000001000400c1	movq	%rax, 0x10(%rdi,%r14,8)
00000001000400c6	movq	(%rdi,%rbx,8), %rax
00000001000400ca	movq	0x8(%rdi,%rbx,8), %rcx
00000001000400cf	movq	%rcx, 0x8(%rdi,%r14,8)
00000001000400d4	movq	%rax, (%rdi,%r14,8)
00000001000400d8	movq	-0x50(%rbp), %rax
00000001000400dc	movq	%rax, 0x10(%rdi,%rbx,8)
00000001000400e1	movq	-0x60(%rbp), %rax
00000001000400e5	movq	-0x58(%rbp), %rcx
00000001000400e9	movq	%rcx, 0x8(%rdi,%rbx,8)
00000001000400ee	movq	%rax, (%rdi,%rbx,8)
00000001000400f2	cmpq	$0x2, %r9
00000001000400f6	jb	0x100040120
00000001000400f8	movq	%r9, %rsi
00000001000400fb	movq	-0x68(%rbp), %r12
00000001000400ff	movq	%r12, %rcx
0000000100040102	movq	%r9, %r13
0000000100040105	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E ## core::slice::sort::insertion_sort_shift_left::he249994ee084fbf8
000000010004010a	movq	-0x38(%rbp), %rdi
000000010004010e	movq	%r13, %rsi
0000000100040111	movq	%r12, %rdx
0000000100040114	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h12707e027ba23ba1E ## core::slice::sort::insertion_sort_shift_right::h12707e027ba23ba1
0000000100040119	movq	%r13, %r9
000000010004011c	movq	-0x38(%rbp), %rdi
0000000100040120	cmpq	%r15, %r9
0000000100040123	jae	0x1000401cc
0000000100040129	movq	%r9, -0x40(%rbp)
000000010004012d	movq	%rdi, %r12
0000000100040130	leaq	(%rdi,%r14,8), %rax
0000000100040134	movq	(%rax), %rsi
0000000100040137	movq	0x8(%rax), %rdx
000000010004013b	movq	(%rdi,%rbx,8), %rdi
000000010004013f	movq	0x8(%r12,%rbx,8), %r15
0000000100040144	movq	%r15, %r14
0000000100040147	subq	%rdx, %r14
000000010004014a	cmovbq	%r15, %rdx
000000010004014e	movq	%rdi, %r13
0000000100040151	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100040156	cltq
0000000100040158	testl	%eax, %eax
000000010004015a	cmovneq	%rax, %r14
000000010004015e	testq	%r14, %r14
0000000100040161	js	0x1000401d0
0000000100040163	leaq	0x20(%r12,%rbx,8), %r14
0000000100040168	movq	-0x30(%rbp), %rax
000000010004016c	decq	%rax
000000010004016f	movq	%rax, -0x48(%rbp)
0000000100040173	movq	-0x40(%rbp), %r9
0000000100040177	movq	%r13, %rsi
000000010004017a	cmpq	%r9, -0x48(%rbp)
000000010004017e	je	0x10004032c
0000000100040184	movq	-0x8(%r14), %rbx
0000000100040188	movq	(%r14), %r13
000000010004018b	movq	%r13, %r12
000000010004018e	subq	%r15, %r12
0000000100040191	cmovbq	%r13, %r15
0000000100040195	movq	%rbx, %rdi
0000000100040198	movq	%r15, %rdx
000000010004019b	movq	%r9, %r15
000000010004019e	callq	0x1000427c0                     ## symbol stub for: _memcmp
00000001000401a3	movq	%r15, %r9
00000001000401a6	cltq
00000001000401a8	testl	%eax, %eax
00000001000401aa	cmovneq	%rax, %r12
00000001000401ae	addq	$0x18, %r14
00000001000401b2	incq	%r9
00000001000401b5	movq	%r13, %r15
00000001000401b8	movq	%rbx, %rsi
00000001000401bb	testq	%r12, %r12
00000001000401be	jns	0x10004017a
00000001000401c0	movq	-0x30(%rbp), %r15
00000001000401c4	cmpq	%r15, %r9
00000001000401c7	setb	%cl
00000001000401ca	jmp	0x1000401da
00000001000401cc	xorl	%ecx, %ecx
00000001000401ce	jmp	0x1000401da
00000001000401d0	movb	$0x1, %cl
00000001000401d2	movq	-0x30(%rbp), %r15
00000001000401d6	movq	-0x40(%rbp), %r9
00000001000401da	cmpq	%r15, %r9
00000001000401dd	movb	$0x1, %al
00000001000401df	je	0x10004032e
00000001000401e5	leaq	-0x1(%r9), %rdx
00000001000401e9	cmpq	%r15, %rdx
00000001000401ec	jae	0x1000403f3
00000001000401f2	testb	%cl, %cl
00000001000401f4	je	0x100040408
00000001000401fa	leaq	(%rdx,%rdx,2), %r14
00000001000401fe	leaq	(%r9,%r9,2), %rbx
0000000100040202	movq	-0x38(%rbp), %rdi
0000000100040206	movq	0x10(%rdi,%r14,8), %rax
000000010004020b	movq	%rax, -0x50(%rbp)
000000010004020f	movq	(%rdi,%r14,8), %rax
0000000100040213	movq	0x8(%rdi,%r14,8), %rcx
0000000100040218	movq	%rcx, -0x58(%rbp)
000000010004021c	movq	%rax, -0x60(%rbp)
0000000100040220	movq	0x10(%rdi,%rbx,8), %rax
0000000100040225	movq	%rax, 0x10(%rdi,%r14,8)
000000010004022a	movq	(%rdi,%rbx,8), %rax
000000010004022e	movq	0x8(%rdi,%rbx,8), %rcx
0000000100040233	movq	%rcx, 0x8(%rdi,%r14,8)
0000000100040238	movq	%rax, (%rdi,%r14,8)
000000010004023c	movq	-0x50(%rbp), %rax
0000000100040240	movq	%rax, 0x10(%rdi,%rbx,8)
0000000100040245	movq	-0x60(%rbp), %rax
0000000100040249	movq	-0x58(%rbp), %rcx
000000010004024d	movq	%rcx, 0x8(%rdi,%rbx,8)
0000000100040252	movq	%rax, (%rdi,%rbx,8)
0000000100040256	cmpq	$0x2, %r9
000000010004025a	jb	0x100040284
000000010004025c	movq	%r9, %rsi
000000010004025f	movq	-0x68(%rbp), %r12
0000000100040263	movq	%r12, %rcx
0000000100040266	movq	%r9, %r13
0000000100040269	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E ## core::slice::sort::insertion_sort_shift_left::he249994ee084fbf8
000000010004026e	movq	-0x38(%rbp), %rdi
0000000100040272	movq	%r13, %rsi
0000000100040275	movq	%r12, %rdx
0000000100040278	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h12707e027ba23ba1E ## core::slice::sort::insertion_sort_shift_right::h12707e027ba23ba1
000000010004027d	movq	%r13, %r9
0000000100040280	movq	-0x38(%rbp), %rdi
0000000100040284	cmpq	%r15, %r9
0000000100040287	jae	0x10004033d
000000010004028d	movq	%r9, -0x40(%rbp)
0000000100040291	movq	%rdi, %r12
0000000100040294	leaq	(%rdi,%r14,8), %rax
0000000100040298	movq	(%rax), %rsi
000000010004029b	movq	0x8(%rax), %rdx
000000010004029f	movq	(%rdi,%rbx,8), %rdi
00000001000402a3	movq	0x8(%r12,%rbx,8), %r15
00000001000402a8	movq	%r15, %r14
00000001000402ab	subq	%rdx, %r14
00000001000402ae	cmovbq	%r15, %rdx
00000001000402b2	movq	%rdi, %r13
00000001000402b5	callq	0x1000427c0                     ## symbol stub for: _memcmp
00000001000402ba	cltq
00000001000402bc	testl	%eax, %eax
00000001000402be	cmovneq	%rax, %r14
00000001000402c2	testq	%r14, %r14
00000001000402c5	js	0x100040341
00000001000402c7	leaq	0x20(%r12,%rbx,8), %r14
00000001000402cc	movq	-0x30(%rbp), %rax
00000001000402d0	decq	%rax
00000001000402d3	movq	%rax, -0x48(%rbp)
00000001000402d7	movq	-0x40(%rbp), %r9
00000001000402db	movq	%r13, %rsi
00000001000402de	cmpq	%r9, -0x48(%rbp)
00000001000402e2	je	0x10004032c
00000001000402e4	movq	-0x8(%r14), %rbx
00000001000402e8	movq	(%r14), %r13
00000001000402eb	movq	%r13, %r12
00000001000402ee	subq	%r15, %r12
00000001000402f1	cmovbq	%r13, %r15
00000001000402f5	movq	%rbx, %rdi
00000001000402f8	movq	%r15, %rdx
00000001000402fb	movq	%r9, %r15
00000001000402fe	callq	0x1000427c0                     ## symbol stub for: _memcmp
0000000100040303	movq	%r15, %r9
0000000100040306	cltq
0000000100040308	testl	%eax, %eax
000000010004030a	cmovneq	%rax, %r12
000000010004030e	addq	$0x18, %r14
0000000100040312	incq	%r9
0000000100040315	movq	%r13, %r15
0000000100040318	movq	%rbx, %rsi
000000010004031b	testq	%r12, %r12
000000010004031e	jns	0x1000402de
0000000100040320	movq	-0x30(%rbp), %r15
0000000100040324	cmpq	%r15, %r9
0000000100040327	setb	%cl
000000010004032a	jmp	0x10004034b
000000010004032c	movb	$0x1, %al
000000010004032e	addq	$0x48, %rsp
0000000100040332	popq	%rbx
0000000100040333	popq	%r12
0000000100040335	popq	%r13
0000000100040337	popq	%r14
0000000100040339	popq	%r15
000000010004033b	popq	%rbp
000000010004033c	retq
000000010004033d	xorl	%ecx, %ecx
000000010004033f	jmp	0x10004034b
0000000100040341	movb	$0x1, %cl
0000000100040343	movq	-0x30(%rbp), %r15
0000000100040347	movq	-0x40(%rbp), %r9
000000010004034b	cmpq	%r15, %r9
000000010004034e	movb	$0x1, %al
0000000100040350	je	0x10004032e
0000000100040352	leaq	-0x1(%r9), %rdx
0000000100040356	cmpq	%r15, %rdx
0000000100040359	jae	0x1000403f3
000000010004035f	testb	%cl, %cl
0000000100040361	je	0x100040408
0000000100040367	leaq	(%rdx,%rdx,2), %rax
000000010004036b	leaq	(%r9,%r9,2), %rcx
000000010004036f	movq	-0x38(%rbp), %rbx
0000000100040373	movq	0x10(%rbx,%rax,8), %rsi
0000000100040378	movq	%rsi, -0x50(%rbp)
000000010004037c	movq	(%rbx,%rax,8), %rsi
0000000100040380	movq	0x8(%rbx,%rax,8), %rdi
0000000100040385	movq	%rdi, -0x58(%rbp)
0000000100040389	movq	%rsi, -0x60(%rbp)
000000010004038d	movq	0x10(%rbx,%rcx,8), %rsi
0000000100040392	movq	%rsi, 0x10(%rbx,%rax,8)
0000000100040397	movq	(%rbx,%rcx,8), %rsi
000000010004039b	movq	0x8(%rbx,%rcx,8), %rdi
00000001000403a0	movq	%rdi, 0x8(%rbx,%rax,8)
00000001000403a5	movq	%rsi, (%rbx,%rax,8)
00000001000403a9	movq	-0x50(%rbp), %rax
00000001000403ad	movq	%rax, 0x10(%rbx,%rcx,8)
00000001000403b2	movq	-0x60(%rbp), %rax
00000001000403b6	movq	-0x58(%rbp), %rsi
00000001000403ba	movq	%rsi, 0x8(%rbx,%rcx,8)
00000001000403bf	movq	%rax, (%rbx,%rcx,8)
00000001000403c3	cmpq	$0x2, %r9
00000001000403c7	jb	0x1000403ec
00000001000403c9	movq	%rbx, %rdi
00000001000403cc	movq	%r9, %rsi
00000001000403cf	movq	-0x68(%rbp), %r14
00000001000403d3	movq	%r14, %rcx
00000001000403d6	movq	%r9, %r15
00000001000403d9	callq	__ZN4core5slice4sort25insertion_sort_shift_left17he249994ee084fbf8E ## core::slice::sort::insertion_sort_shift_left::he249994ee084fbf8
00000001000403de	movq	%rbx, %rdi
00000001000403e1	movq	%r15, %rsi
00000001000403e4	movq	%r14, %rdx
00000001000403e7	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h12707e027ba23ba1E ## core::slice::sort::insertion_sort_shift_right::h12707e027ba23ba1
00000001000403ec	xorl	%eax, %eax
00000001000403ee	jmp	0x10004032e
00000001000403f3	leaq	0x80e6(%rip), %rax
00000001000403fa	movq	%rdx, %rdi
00000001000403fd	movq	%r15, %rsi
0000000100040400	movq	%rax, %rdx
0000000100040403	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040408	leaq	0x80d1(%rip), %rdx
000000010004040f	movq	%r9, %rdi
0000000100040412	movq	%r15, %rsi
0000000100040415	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010004041a	nopw	(%rax,%rax)
__ZN4core5slice4sort22partial_insertion_sort17hd9b1e9bffe4e61b1E:
0000000100040420	pushq	%rbp
0000000100040421	movq	%rsp, %rbp
0000000100040424	pushq	%r15
0000000100040426	pushq	%r14
0000000100040428	pushq	%r13
000000010004042a	pushq	%r12
000000010004042c	pushq	%rbx
000000010004042d	subq	$0x18, %rsp
0000000100040431	movq	%rsi, %rbx
0000000100040434	movq	%rdi, %r14
0000000100040437	cmpq	$0x31, %rsi
000000010004043b	ja	0x100040495
000000010004043d	movl	$0x1, %eax
0000000100040442	cmpq	$0x1, %rbx
0000000100040446	jbe	0x1000406a6
000000010004044c	movq	0x28(%r14), %rcx
0000000100040450	cmpq	0x10(%r14), %rcx
0000000100040454	jb	0x1000406a6
000000010004045a	movl	$0x2, %edx
000000010004045f	subq	%rbx, %rdx
0000000100040462	addq	$0x40, %r14
0000000100040466	nopw	%cs:(%rax,%rax)
0000000100040470	leaq	(%rdx,%rax), %rsi
0000000100040474	cmpq	$0x1, %rsi
0000000100040478	je	0x1000406a3
000000010004047e	incq	%rax
0000000100040481	movq	(%r14), %rsi
0000000100040484	addq	$0x18, %r14
0000000100040488	cmpq	%rcx, %rsi
000000010004048b	movq	%rsi, %rcx
000000010004048e	jae	0x100040470
0000000100040490	jmp	0x1000406a6
0000000100040495	movq	0x28(%r14), %rax
0000000100040499	movl	$0x1, %r15d
000000010004049f	movb	$0x1, %dil
00000001000404a2	movb	$0x1, %cl
00000001000404a4	cmpq	0x10(%r14), %rax
00000001000404a8	jb	0x1000404e6
00000001000404aa	leaq	0x40(%r14), %rcx
00000001000404ae	movl	$0x2, %edx
00000001000404b3	subq	%rbx, %rdx
00000001000404b6	nopw	%cs:(%rax,%rax)
00000001000404c0	leaq	(%rdx,%r15), %rsi
00000001000404c4	cmpq	$0x1, %rsi
00000001000404c8	je	0x10004085a
00000001000404ce	movq	(%rcx), %rsi
00000001000404d1	addq	$0x18, %rcx
00000001000404d5	incq	%r15
00000001000404d8	cmpq	%rax, %rsi
00000001000404db	movq	%rsi, %rax
00000001000404de	jae	0x1000404c0
00000001000404e0	cmpq	%rbx, %r15
00000001000404e3	setb	%cl
00000001000404e6	cmpq	%rbx, %r15
00000001000404e9	je	0x10004085d
00000001000404ef	leaq	-0x1(%r15), %rdx
00000001000404f3	cmpq	%rbx, %rdx
00000001000404f6	jae	0x100040905
00000001000404fc	testb	%cl, %cl
00000001000404fe	je	0x10004091a
0000000100040504	leaq	(%rdx,%rdx,2), %r12
0000000100040508	leaq	(%r15,%r15,2), %r13
000000010004050c	movq	0x10(%r14,%r12,8), %rax
0000000100040511	movq	%rax, -0x30(%rbp)
0000000100040515	movq	(%r14,%r12,8), %rax
0000000100040519	movq	0x8(%r14,%r12,8), %rcx
000000010004051e	movq	%rcx, -0x38(%rbp)
0000000100040522	movq	%rax, -0x40(%rbp)
0000000100040526	movq	0x10(%r14,%r13,8), %rax
000000010004052b	movq	%rax, 0x10(%r14,%r12,8)
0000000100040530	movq	(%r14,%r13,8), %rax
0000000100040534	movq	0x8(%r14,%r13,8), %rcx
0000000100040539	movq	%rcx, 0x8(%r14,%r12,8)
000000010004053e	movq	%rax, (%r14,%r12,8)
0000000100040542	movq	-0x30(%rbp), %rax
0000000100040546	movq	%rax, 0x10(%r14,%r13,8)
000000010004054b	movq	-0x40(%rbp), %rax
000000010004054f	movq	-0x38(%rbp), %rcx
0000000100040553	movq	%rcx, 0x8(%r14,%r13,8)
0000000100040558	movq	%rax, (%r14,%r13,8)
000000010004055c	cmpq	$0x1, %r15
0000000100040560	jbe	0x10004057b
0000000100040562	movq	%r14, %rdi
0000000100040565	movq	%r15, %rsi
0000000100040568	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E ## core::slice::sort::insertion_sort_shift_left::h567b21521a376ea8
000000010004056d	movq	%r14, %rdi
0000000100040570	movq	%r15, %rsi
0000000100040573	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h28dabbdd4ee424f5E ## core::slice::sort::insertion_sort_shift_right::h28dabbdd4ee424f5
0000000100040578	movb	$0x1, %dil
000000010004057b	cmpq	%rbx, %r15
000000010004057e	jae	0x1000405cb
0000000100040580	movq	0x10(%r14,%r13,8), %rax
0000000100040585	movb	$0x1, %cl
0000000100040587	cmpq	0x10(%r14,%r12,8), %rax
000000010004058c	jb	0x1000405c1
000000010004058e	leaq	0x28(%r14,%r13,8), %rcx
0000000100040593	leaq	-0x1(%rbx), %rdx
0000000100040597	nopw	(%rax,%rax)
00000001000405a0	cmpq	%r15, %rdx
00000001000405a3	je	0x10004085a
00000001000405a9	movq	(%rcx), %rsi
00000001000405ac	addq	$0x18, %rcx
00000001000405b0	incq	%r15
00000001000405b3	cmpq	%rax, %rsi
00000001000405b6	movq	%rsi, %rax
00000001000405b9	jae	0x1000405a0
00000001000405bb	cmpq	%rbx, %r15
00000001000405be	setb	%cl
00000001000405c1	cmpq	%rbx, %r15
00000001000405c4	jne	0x1000405d6
00000001000405c6	jmp	0x10004085d
00000001000405cb	xorl	%ecx, %ecx
00000001000405cd	cmpq	%rbx, %r15
00000001000405d0	je	0x10004085d
00000001000405d6	leaq	-0x1(%r15), %rdx
00000001000405da	cmpq	%rbx, %rdx
00000001000405dd	jae	0x100040905
00000001000405e3	testb	%cl, %cl
00000001000405e5	je	0x10004091a
00000001000405eb	leaq	(%rdx,%rdx,2), %r12
00000001000405ef	leaq	(%r15,%r15,2), %r13
00000001000405f3	movq	0x10(%r14,%r12,8), %rax
00000001000405f8	movq	%rax, -0x30(%rbp)
00000001000405fc	movq	(%r14,%r12,8), %rax
0000000100040600	movq	0x8(%r14,%r12,8), %rcx
0000000100040605	movq	%rcx, -0x38(%rbp)
0000000100040609	movq	%rax, -0x40(%rbp)
000000010004060d	movq	0x10(%r14,%r13,8), %rax
0000000100040612	movq	%rax, 0x10(%r14,%r12,8)
0000000100040617	movq	(%r14,%r13,8), %rax
000000010004061b	movq	0x8(%r14,%r13,8), %rcx
0000000100040620	movq	%rcx, 0x8(%r14,%r12,8)
0000000100040625	movq	%rax, (%r14,%r12,8)
0000000100040629	movq	-0x30(%rbp), %rax
000000010004062d	movq	%rax, 0x10(%r14,%r13,8)
0000000100040632	movq	-0x40(%rbp), %rax
0000000100040636	movq	-0x38(%rbp), %rcx
000000010004063a	movq	%rcx, 0x8(%r14,%r13,8)
000000010004063f	movq	%rax, (%r14,%r13,8)
0000000100040643	cmpq	$0x2, %r15
0000000100040647	jb	0x100040662
0000000100040649	movq	%r14, %rdi
000000010004064c	movq	%r15, %rsi
000000010004064f	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E ## core::slice::sort::insertion_sort_shift_left::h567b21521a376ea8
0000000100040654	movq	%r14, %rdi
0000000100040657	movq	%r15, %rsi
000000010004065a	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h28dabbdd4ee424f5E ## core::slice::sort::insertion_sort_shift_right::h28dabbdd4ee424f5
000000010004065f	movb	$0x1, %dil
0000000100040662	cmpq	%rbx, %r15
0000000100040665	jae	0x1000406b2
0000000100040667	movq	0x10(%r14,%r13,8), %rax
000000010004066c	movb	$0x1, %cl
000000010004066e	cmpq	0x10(%r14,%r12,8), %rax
0000000100040673	jb	0x1000406b4
0000000100040675	leaq	0x28(%r14,%r13,8), %rcx
000000010004067a	leaq	-0x1(%rbx), %rdx
000000010004067e	nop
0000000100040680	cmpq	%r15, %rdx
0000000100040683	je	0x10004085a
0000000100040689	movq	(%rcx), %rsi
000000010004068c	addq	$0x18, %rcx
0000000100040690	incq	%r15
0000000100040693	cmpq	%rax, %rsi
0000000100040696	movq	%rsi, %rax
0000000100040699	jae	0x100040680
000000010004069b	cmpq	%rbx, %r15
000000010004069e	setb	%cl
00000001000406a1	jmp	0x1000406b4
00000001000406a3	movq	%rbx, %rax
00000001000406a6	cmpq	%rbx, %rax
00000001000406a9	sete	%dil
00000001000406ad	jmp	0x10004085d
00000001000406b2	xorl	%ecx, %ecx
00000001000406b4	cmpq	%rbx, %r15
00000001000406b7	je	0x10004085d
00000001000406bd	leaq	-0x1(%r15), %rdx
00000001000406c1	cmpq	%rbx, %rdx
00000001000406c4	jae	0x100040905
00000001000406ca	testb	%cl, %cl
00000001000406cc	je	0x10004091a
00000001000406d2	leaq	(%rdx,%rdx,2), %r12
00000001000406d6	leaq	(%r15,%r15,2), %r13
00000001000406da	movq	0x10(%r14,%r12,8), %rax
00000001000406df	movq	%rax, -0x30(%rbp)
00000001000406e3	movq	(%r14,%r12,8), %rax
00000001000406e7	movq	0x8(%r14,%r12,8), %rcx
00000001000406ec	movq	%rcx, -0x38(%rbp)
00000001000406f0	movq	%rax, -0x40(%rbp)
00000001000406f4	movq	0x10(%r14,%r13,8), %rax
00000001000406f9	movq	%rax, 0x10(%r14,%r12,8)
00000001000406fe	movq	(%r14,%r13,8), %rax
0000000100040702	movq	0x8(%r14,%r13,8), %rcx
0000000100040707	movq	%rcx, 0x8(%r14,%r12,8)
000000010004070c	movq	%rax, (%r14,%r12,8)
0000000100040710	movq	-0x30(%rbp), %rax
0000000100040714	movq	%rax, 0x10(%r14,%r13,8)
0000000100040719	movq	-0x40(%rbp), %rax
000000010004071d	movq	-0x38(%rbp), %rcx
0000000100040721	movq	%rcx, 0x8(%r14,%r13,8)
0000000100040726	movq	%rax, (%r14,%r13,8)
000000010004072a	cmpq	$0x2, %r15
000000010004072e	jb	0x100040749
0000000100040730	movq	%r14, %rdi
0000000100040733	movq	%r15, %rsi
0000000100040736	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E ## core::slice::sort::insertion_sort_shift_left::h567b21521a376ea8
000000010004073b	movq	%r14, %rdi
000000010004073e	movq	%r15, %rsi
0000000100040741	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h28dabbdd4ee424f5E ## core::slice::sort::insertion_sort_shift_right::h28dabbdd4ee424f5
0000000100040746	movb	$0x1, %dil
0000000100040749	cmpq	%rbx, %r15
000000010004074c	jae	0x100040788
000000010004074e	movq	0x10(%r14,%r13,8), %rax
0000000100040753	movb	$0x1, %cl
0000000100040755	cmpq	0x10(%r14,%r12,8), %rax
000000010004075a	jb	0x10004078a
000000010004075c	leaq	0x28(%r14,%r13,8), %rcx
0000000100040761	leaq	-0x1(%rbx), %rdx
0000000100040765	cmpq	%r15, %rdx
0000000100040768	je	0x10004085a
000000010004076e	movq	(%rcx), %rsi
0000000100040771	addq	$0x18, %rcx
0000000100040775	incq	%r15
0000000100040778	cmpq	%rax, %rsi
000000010004077b	movq	%rsi, %rax
000000010004077e	jae	0x100040765
0000000100040780	cmpq	%rbx, %r15
0000000100040783	setb	%cl
0000000100040786	jmp	0x10004078a
0000000100040788	xorl	%ecx, %ecx
000000010004078a	cmpq	%rbx, %r15
000000010004078d	je	0x10004085d
0000000100040793	leaq	-0x1(%r15), %rdx
0000000100040797	cmpq	%rbx, %rdx
000000010004079a	jae	0x100040905
00000001000407a0	testb	%cl, %cl
00000001000407a2	je	0x10004091a
00000001000407a8	leaq	(%rdx,%rdx,2), %r12
00000001000407ac	leaq	(%r15,%r15,2), %r13
00000001000407b0	movq	0x10(%r14,%r12,8), %rax
00000001000407b5	movq	%rax, -0x30(%rbp)
00000001000407b9	movq	(%r14,%r12,8), %rax
00000001000407bd	movq	0x8(%r14,%r12,8), %rcx
00000001000407c2	movq	%rcx, -0x38(%rbp)
00000001000407c6	movq	%rax, -0x40(%rbp)
00000001000407ca	movq	0x10(%r14,%r13,8), %rax
00000001000407cf	movq	%rax, 0x10(%r14,%r12,8)
00000001000407d4	movq	(%r14,%r13,8), %rax
00000001000407d8	movq	0x8(%r14,%r13,8), %rcx
00000001000407dd	movq	%rcx, 0x8(%r14,%r12,8)
00000001000407e2	movq	%rax, (%r14,%r12,8)
00000001000407e6	movq	-0x30(%rbp), %rax
00000001000407ea	movq	%rax, 0x10(%r14,%r13,8)
00000001000407ef	movq	-0x40(%rbp), %rax
00000001000407f3	movq	-0x38(%rbp), %rcx
00000001000407f7	movq	%rcx, 0x8(%r14,%r13,8)
00000001000407fc	movq	%rax, (%r14,%r13,8)
0000000100040800	cmpq	$0x2, %r15
0000000100040804	jb	0x10004081f
0000000100040806	movq	%r14, %rdi
0000000100040809	movq	%r15, %rsi
000000010004080c	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E ## core::slice::sort::insertion_sort_shift_left::h567b21521a376ea8
0000000100040811	movq	%r14, %rdi
0000000100040814	movq	%r15, %rsi
0000000100040817	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h28dabbdd4ee424f5E ## core::slice::sort::insertion_sort_shift_right::h28dabbdd4ee424f5
000000010004081c	movb	$0x1, %dil
000000010004081f	cmpq	%rbx, %r15
0000000100040822	jae	0x10004086e
0000000100040824	movq	0x10(%r14,%r13,8), %rax
0000000100040829	movb	$0x1, %cl
000000010004082b	cmpq	0x10(%r14,%r12,8), %rax
0000000100040830	jb	0x100040870
0000000100040832	leaq	0x28(%r14,%r13,8), %rcx
0000000100040837	leaq	-0x1(%rbx), %rdx
000000010004083b	cmpq	%r15, %rdx
000000010004083e	je	0x10004085a
0000000100040840	movq	(%rcx), %rsi
0000000100040843	addq	$0x18, %rcx
0000000100040847	incq	%r15
000000010004084a	cmpq	%rax, %rsi
000000010004084d	movq	%rsi, %rax
0000000100040850	jae	0x10004083b
0000000100040852	cmpq	%rbx, %r15
0000000100040855	setb	%cl
0000000100040858	jmp	0x100040870
000000010004085a	movb	$0x1, %dil
000000010004085d	movl	%edi, %eax
000000010004085f	addq	$0x18, %rsp
0000000100040863	popq	%rbx
0000000100040864	popq	%r12
0000000100040866	popq	%r13
0000000100040868	popq	%r14
000000010004086a	popq	%r15
000000010004086c	popq	%rbp
000000010004086d	retq
000000010004086e	xorl	%ecx, %ecx
0000000100040870	cmpq	%rbx, %r15
0000000100040873	je	0x10004085d
0000000100040875	leaq	-0x1(%r15), %rdx
0000000100040879	cmpq	%rbx, %rdx
000000010004087c	jae	0x100040905
0000000100040882	testb	%cl, %cl
0000000100040884	je	0x10004091a
000000010004088a	leaq	(%rdx,%rdx,2), %rax
000000010004088e	leaq	(%r15,%r15,2), %rcx
0000000100040892	movq	0x10(%r14,%rax,8), %rsi
0000000100040897	movq	%rsi, -0x30(%rbp)
000000010004089b	movq	(%r14,%rax,8), %rsi
000000010004089f	movq	0x8(%r14,%rax,8), %rdi
00000001000408a4	movq	%rdi, -0x38(%rbp)
00000001000408a8	movq	%rsi, -0x40(%rbp)
00000001000408ac	movq	0x10(%r14,%rcx,8), %rsi
00000001000408b1	movq	%rsi, 0x10(%r14,%rax,8)
00000001000408b6	movq	(%r14,%rcx,8), %rsi
00000001000408ba	movq	0x8(%r14,%rcx,8), %rdi
00000001000408bf	movq	%rdi, 0x8(%r14,%rax,8)
00000001000408c4	movq	%rsi, (%r14,%rax,8)
00000001000408c8	movq	-0x30(%rbp), %rax
00000001000408cc	movq	%rax, 0x10(%r14,%rcx,8)
00000001000408d1	movq	-0x40(%rbp), %rax
00000001000408d5	movq	-0x38(%rbp), %rsi
00000001000408d9	movq	%rsi, 0x8(%r14,%rcx,8)
00000001000408de	movq	%rax, (%r14,%rcx,8)
00000001000408e2	cmpq	$0x2, %r15
00000001000408e6	jb	0x1000408fe
00000001000408e8	movq	%r14, %rdi
00000001000408eb	movq	%r15, %rsi
00000001000408ee	callq	__ZN4core5slice4sort25insertion_sort_shift_left17h567b21521a376ea8E ## core::slice::sort::insertion_sort_shift_left::h567b21521a376ea8
00000001000408f3	movq	%r14, %rdi
00000001000408f6	movq	%r15, %rsi
00000001000408f9	callq	__ZN4core5slice4sort26insertion_sort_shift_right17h28dabbdd4ee424f5E ## core::slice::sort::insertion_sort_shift_right::h28dabbdd4ee424f5
00000001000408fe	xorl	%edi, %edi
0000000100040900	jmp	0x10004085d
0000000100040905	leaq	0x7bd4(%rip), %rax
000000010004090c	movq	%rdx, %rdi
000000010004090f	movq	%rbx, %rsi
0000000100040912	movq	%rax, %rdx
0000000100040915	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010004091a	leaq	0x7bbf(%rip), %rdx
0000000100040921	movq	%r15, %rdi
0000000100040924	movq	%rbx, %rsi
0000000100040927	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
000000010004092c	nopl	(%rax)
__ZN4core5slice4sort8heapsort17h3e754a659d46bfd2E:
0000000100040930	pushq	%rbp
0000000100040931	movq	%rsp, %rbp
0000000100040934	pushq	%r15
0000000100040936	pushq	%r14
0000000100040938	pushq	%r13
000000010004093a	pushq	%r12
000000010004093c	pushq	%rbx
000000010004093d	subq	$0x28, %rsp
0000000100040941	movq	%rdx, -0x30(%rbp)
0000000100040945	cmpq	$0x2, %rsi
0000000100040949	jb	0x100040a0c
000000010004094f	movq	%rsi, %rbx
0000000100040952	movq	%rdi, %r14
0000000100040955	movq	%rsi, %r15
0000000100040958	shrq	%r15
000000010004095b	decq	%r15
000000010004095e	leaq	-0x30(%rbp), %r12
0000000100040962	nopw	%cs:(%rax,%rax)
000000010004096c	nopl	(%rax)
0000000100040970	movq	%r12, %rdi
0000000100040973	movq	%r14, %rsi
0000000100040976	movq	%rbx, %rdx
0000000100040979	movq	%r15, %rcx
000000010004097c	callq	__ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h6e671b82acb4afbaE ## core::slice::sort::heapsort::_$u7b$$u7b$closure$u7d$$u7d$::h6e671b82acb4afba
0000000100040981	addq	$-0x1, %r15
0000000100040985	jb	0x100040970
0000000100040987	cmpq	$0x2, %rbx
000000010004098b	jb	0x100040a0c
000000010004098d	leaq	(%rbx,%rbx,2), %rax
0000000100040991	leaq	-0x18(%r14,%rax,8), %r13
0000000100040996	leaq	-0x30(%rbp), %r15
000000010004099a	movq	%rbx, %rdi
000000010004099d	nopl	(%rax)
00000001000409a0	leaq	-0x1(%rdi), %r12
00000001000409a4	cmpq	%rbx, %r12
00000001000409a7	jae	0x100040a1b
00000001000409a9	movq	0x10(%r14), %rax
00000001000409ad	movq	%rax, -0x38(%rbp)
00000001000409b1	movq	(%r14), %rax
00000001000409b4	movq	0x8(%r14), %rcx
00000001000409b8	movq	%rcx, -0x40(%rbp)
00000001000409bc	movq	%rax, -0x48(%rbp)
00000001000409c0	movq	0x10(%r13), %rax
00000001000409c4	movq	(%r13), %rcx
00000001000409c8	movq	0x8(%r13), %rdx
00000001000409cc	movq	%rcx, (%r14)
00000001000409cf	movq	%rdx, 0x8(%r14)
00000001000409d3	movq	%rax, 0x10(%r14)
00000001000409d7	movq	-0x38(%rbp), %rax
00000001000409db	movq	%rax, 0x10(%r13)
00000001000409df	movq	-0x48(%rbp), %rax
00000001000409e3	movq	-0x40(%rbp), %rcx
00000001000409e7	movq	%rcx, 0x8(%r13)
00000001000409eb	movq	%rax, (%r13)
00000001000409ef	movq	%r15, %rdi
00000001000409f2	movq	%r14, %rsi
00000001000409f5	movq	%r12, %rdx
00000001000409f8	xorl	%ecx, %ecx
00000001000409fa	callq	__ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h6e671b82acb4afbaE ## core::slice::sort::heapsort::_$u7b$$u7b$closure$u7d$$u7d$::h6e671b82acb4afba
00000001000409ff	addq	$-0x18, %r13
0000000100040a03	movq	%r12, %rdi
0000000100040a06	cmpq	$0x1, %r12
0000000100040a0a	ja	0x1000409a0
0000000100040a0c	addq	$0x28, %rsp
0000000100040a10	popq	%rbx
0000000100040a11	popq	%r12
0000000100040a13	popq	%r13
0000000100040a15	popq	%r14
0000000100040a17	popq	%r15
0000000100040a19	popq	%rbp
0000000100040a1a	retq
0000000100040a1b	decq	%rdi
0000000100040a1e	leaq	0x7b33(%rip), %rdx
0000000100040a25	movq	%rbx, %rsi
0000000100040a28	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040a2d	nopl	(%rax)
__ZN4core5slice4sort8heapsort17h448528fd0e467ce8E:
0000000100040a30	pushq	%rbp
0000000100040a31	movq	%rsp, %rbp
0000000100040a34	subq	$0x20, %rsp
0000000100040a38	cmpq	$0x2, %rsi
0000000100040a3c	jb	0x100040c72
0000000100040a42	movq	%rsi, %rdx
0000000100040a45	shrq	%rdx
0000000100040a48	jmp	0x100040a59
0000000100040a4a	nopw	(%rax,%rax)
0000000100040a50	testq	%rdx, %rdx
0000000100040a53	je	0x100040b2e
0000000100040a59	movq	%rdx, %rax
0000000100040a5c	decq	%rdx
0000000100040a5f	leaq	-0x1(%rax,%rax), %r8
0000000100040a64	cmpq	%rsi, %r8
0000000100040a67	jae	0x100040a50
0000000100040a69	leaq	-0x2(%rax,%rax), %r9
0000000100040a6e	movq	%rdx, %rcx
0000000100040a71	nopw	%cs:(%rax,%rax)
0000000100040a7b	nopl	(%rax,%rax)
0000000100040a80	addq	$0x2, %r9
0000000100040a84	cmpq	%rsi, %r9
0000000100040a87	jae	0x100040a9f
0000000100040a89	leaq	(%r8,%r8,2), %rax
0000000100040a8d	movq	0x10(%rdi,%rax,8), %rax
0000000100040a92	leaq	(%r9,%r9,2), %r9
0000000100040a96	cmpq	0x10(%rdi,%r9,8), %rax
0000000100040a9b	adcq	$0x0, %r8
0000000100040a9f	movq	%r8, %rax
0000000100040aa2	cmpq	%rsi, %rcx
0000000100040aa5	jae	0x100040c78
0000000100040aab	cmpq	%rsi, %rax
0000000100040aae	jae	0x100040c87
0000000100040ab4	leaq	(%rcx,%rcx,2), %rcx
0000000100040ab8	leaq	(%rax,%rax,2), %r8
0000000100040abc	movq	0x10(%rdi,%rcx,8), %r9
0000000100040ac1	cmpq	0x10(%rdi,%r8,8), %r9
0000000100040ac6	jae	0x100040a50
0000000100040ac8	leaq	(%rdi,%rcx,8), %rcx
0000000100040acc	leaq	(%rdi,%r8,8), %r8
0000000100040ad0	movq	0x10(%rcx), %r9
0000000100040ad4	movq	%r9, -0x8(%rbp)
0000000100040ad8	movq	(%rcx), %r9
0000000100040adb	movq	0x8(%rcx), %r10
0000000100040adf	movq	%r10, -0x10(%rbp)
0000000100040ae3	movq	%r9, -0x18(%rbp)
0000000100040ae7	movq	0x10(%r8), %r9
0000000100040aeb	movq	(%r8), %r10
0000000100040aee	movq	0x8(%r8), %r11
0000000100040af2	movq	%r10, (%rcx)
0000000100040af5	movq	%r11, 0x8(%rcx)
0000000100040af9	movq	%r9, 0x10(%rcx)
0000000100040afd	movq	-0x8(%rbp), %rcx
0000000100040b01	movq	%rcx, 0x10(%r8)
0000000100040b05	movq	-0x18(%rbp), %rcx
0000000100040b09	movq	-0x10(%rbp), %r9
0000000100040b0d	movq	%r9, 0x8(%r8)
0000000100040b11	movq	%rcx, (%r8)
0000000100040b14	leaq	(%rax,%rax), %r9
0000000100040b18	leaq	0x1(%rax,%rax), %r8
0000000100040b1d	movq	%rax, %rcx
0000000100040b20	cmpq	%rsi, %r8
0000000100040b23	jb	0x100040a80
0000000100040b29	jmp	0x100040a50
0000000100040b2e	cmpq	$0x2, %rsi
0000000100040b32	jb	0x100040c72
0000000100040b38	movq	%rsi, %rax
0000000100040b3b	jmp	0x100040b4a
0000000100040b3d	nopl	(%rax)
0000000100040b40	cmpq	$0x1, %rax
0000000100040b44	jbe	0x100040c72
0000000100040b4a	decq	%rax
0000000100040b4d	cmpq	%rsi, %rax
0000000100040b50	jae	0x100040cba
0000000100040b56	leaq	(%rax,%rax,2), %rcx
0000000100040b5a	movq	0x10(%rdi), %rdx
0000000100040b5e	movq	%rdx, -0x8(%rbp)
0000000100040b62	movq	(%rdi), %rdx
0000000100040b65	movq	0x8(%rdi), %r8
0000000100040b69	movq	%r8, -0x10(%rbp)
0000000100040b6d	movq	%rdx, -0x18(%rbp)
0000000100040b71	movq	0x10(%rdi,%rcx,8), %rdx
0000000100040b76	movq	(%rdi,%rcx,8), %r8
0000000100040b7a	movq	0x8(%rdi,%rcx,8), %r9
0000000100040b7f	movq	%r8, (%rdi)
0000000100040b82	movq	%r9, 0x8(%rdi)
0000000100040b86	movq	%rdx, 0x10(%rdi)
0000000100040b8a	movq	-0x8(%rbp), %rdx
0000000100040b8e	movq	%rdx, 0x10(%rdi,%rcx,8)
0000000100040b93	movq	-0x18(%rbp), %rdx
0000000100040b97	movq	-0x10(%rbp), %r8
0000000100040b9b	movq	%r8, 0x8(%rdi,%rcx,8)
0000000100040ba0	movq	%rdx, (%rdi,%rcx,8)
0000000100040ba4	cmpq	$0x2, %rax
0000000100040ba8	jb	0x100040c72
0000000100040bae	movl	$0x1, %edx
0000000100040bb3	xorl	%r9d, %r9d
0000000100040bb6	xorl	%r8d, %r8d
0000000100040bb9	nopl	(%rax)
0000000100040bc0	addq	$0x2, %r9
0000000100040bc4	cmpq	%rax, %r9
0000000100040bc7	jae	0x100040bdf
0000000100040bc9	leaq	(%rdx,%rdx,2), %rcx
0000000100040bcd	movq	0x10(%rdi,%rcx,8), %rcx
0000000100040bd2	leaq	(%r9,%r9,2), %r9
0000000100040bd6	cmpq	0x10(%rdi,%r9,8), %rcx
0000000100040bdb	adcq	$0x0, %rdx
0000000100040bdf	movq	%rdx, %rcx
0000000100040be2	cmpq	%rax, %r8
0000000100040be5	jae	0x100040c96
0000000100040beb	cmpq	%rax, %rcx
0000000100040bee	jae	0x100040ca8
0000000100040bf4	leaq	(%r8,%r8,2), %rdx
0000000100040bf8	leaq	(%rcx,%rcx,2), %r8
0000000100040bfc	movq	0x10(%rdi,%rdx,8), %r9
0000000100040c01	cmpq	0x10(%rdi,%r8,8), %r9
0000000100040c06	jae	0x100040b40
0000000100040c0c	leaq	(%rdi,%rdx,8), %rdx
0000000100040c10	leaq	(%rdi,%r8,8), %r8
0000000100040c14	movq	0x10(%rdx), %r9
0000000100040c18	movq	%r9, -0x8(%rbp)
0000000100040c1c	movq	(%rdx), %r9
0000000100040c1f	movq	0x8(%rdx), %r10
0000000100040c23	movq	%r10, -0x10(%rbp)
0000000100040c27	movq	%r9, -0x18(%rbp)
0000000100040c2b	movq	0x10(%r8), %r9
0000000100040c2f	movq	(%r8), %r10
0000000100040c32	movq	0x8(%r8), %r11
0000000100040c36	movq	%r10, (%rdx)
0000000100040c39	movq	%r11, 0x8(%rdx)
0000000100040c3d	movq	%r9, 0x10(%rdx)
0000000100040c41	movq	-0x8(%rbp), %rdx
0000000100040c45	movq	%rdx, 0x10(%r8)
0000000100040c49	movq	-0x18(%rbp), %rdx
0000000100040c4d	movq	-0x10(%rbp), %r9
0000000100040c51	movq	%r9, 0x8(%r8)
0000000100040c55	movq	%rdx, (%r8)
0000000100040c58	leaq	(%rcx,%rcx), %r9
0000000100040c5c	leaq	0x1(%rcx,%rcx), %rdx
0000000100040c61	movq	%rcx, %r8
0000000100040c64	cmpq	%rax, %rdx
0000000100040c67	jb	0x100040bc0
0000000100040c6d	jmp	0x100040b40
0000000100040c72	addq	$0x20, %rsp
0000000100040c76	popq	%rbp
0000000100040c77	retq
0000000100040c78	leaq	0x78f1(%rip), %rdx
0000000100040c7f	movq	%rcx, %rdi
0000000100040c82	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040c87	leaq	0x78fa(%rip), %rdx
0000000100040c8e	movq	%rax, %rdi
0000000100040c91	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040c96	leaq	0x78d3(%rip), %rdx
0000000100040c9d	movq	%r8, %rdi
0000000100040ca0	movq	%rax, %rsi
0000000100040ca3	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040ca8	leaq	0x78d9(%rip), %rdx
0000000100040caf	movq	%rcx, %rdi
0000000100040cb2	movq	%rax, %rsi
0000000100040cb5	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040cba	leaq	0x7897(%rip), %rdx
0000000100040cc1	movq	%rax, %rdi
0000000100040cc4	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040cc9	nopl	(%rax)
__ZN4core5slice4sort8heapsort17hbf70ec74e8aafa1cE:
0000000100040cd0	pushq	%rbp
0000000100040cd1	movq	%rsp, %rbp
0000000100040cd4	pushq	%r14
0000000100040cd6	pushq	%rbx
0000000100040cd7	subq	$0x30, %rsp
0000000100040cdb	cmpq	$0x2, %rsi
0000000100040cdf	jb	0x100040fa2
0000000100040ce5	movq	%rsi, %rdx
0000000100040ce8	shrq	%rdx
0000000100040ceb	jmp	0x100040cf9
0000000100040ced	nopl	(%rax)
0000000100040cf0	testq	%rdx, %rdx
0000000100040cf3	je	0x100040dfe
0000000100040cf9	movq	%rdx, %rax
0000000100040cfc	decq	%rdx
0000000100040cff	leaq	-0x1(%rax,%rax), %r8
0000000100040d04	cmpq	%rsi, %r8
0000000100040d07	jae	0x100040cf0
0000000100040d09	leaq	-0x2(%rax,%rax), %r9
0000000100040d0e	movq	%rdx, %rcx
0000000100040d11	nopw	%cs:(%rax,%rax)
0000000100040d1b	nopl	(%rax,%rax)
0000000100040d20	addq	$0x2, %r9
0000000100040d24	cmpq	%rsi, %r9
0000000100040d27	jae	0x100040d3f
0000000100040d29	leaq	(%r8,%r8,4), %rax
0000000100040d2d	movq	0x10(%rdi,%rax,8), %rax
0000000100040d32	leaq	(%r9,%r9,4), %r9
0000000100040d36	cmpq	0x10(%rdi,%r9,8), %rax
0000000100040d3b	adcq	$0x0, %r8
0000000100040d3f	movq	%r8, %rax
0000000100040d42	cmpq	%rsi, %rcx
0000000100040d45	jae	0x100040fab
0000000100040d4b	cmpq	%rsi, %rax
0000000100040d4e	jae	0x100040fba
0000000100040d54	leaq	(%rcx,%rcx,4), %rcx
0000000100040d58	leaq	(%rax,%rax,4), %r8
0000000100040d5c	movq	0x10(%rdi,%rcx,8), %r9
0000000100040d61	cmpq	0x10(%rdi,%r8,8), %r9
0000000100040d66	jae	0x100040cf0
0000000100040d68	leaq	(%rdi,%rcx,8), %r9
0000000100040d6c	leaq	(%rdi,%r8,8), %rcx
0000000100040d70	movq	0x20(%r9), %r8
0000000100040d74	movq	%r8, -0x18(%rbp)
0000000100040d78	movq	0x18(%r9), %r8
0000000100040d7c	movq	%r8, -0x20(%rbp)
0000000100040d80	movq	0x10(%r9), %r8
0000000100040d84	movq	%r8, -0x28(%rbp)
0000000100040d88	movq	(%r9), %r8
0000000100040d8b	movq	0x8(%r9), %r10
0000000100040d8f	movq	%r10, -0x30(%rbp)
0000000100040d93	movq	%r8, -0x38(%rbp)
0000000100040d97	movq	0x20(%rcx), %r8
0000000100040d9b	movq	0x18(%rcx), %r10
0000000100040d9f	movq	0x10(%rcx), %r11
0000000100040da3	movq	(%rcx), %rbx
0000000100040da6	movq	0x8(%rcx), %r14
0000000100040daa	movq	%rbx, (%r9)
0000000100040dad	movq	%r14, 0x8(%r9)
0000000100040db1	movq	%r11, 0x10(%r9)
0000000100040db5	movq	%r10, 0x18(%r9)
0000000100040db9	movq	%r8, 0x20(%r9)
0000000100040dbd	movq	-0x18(%rbp), %r8
0000000100040dc1	movq	%r8, 0x20(%rcx)
0000000100040dc5	movq	-0x20(%rbp), %r8
0000000100040dc9	movq	%r8, 0x18(%rcx)
0000000100040dcd	movq	-0x28(%rbp), %r8
0000000100040dd1	movq	%r8, 0x10(%rcx)
0000000100040dd5	movq	-0x38(%rbp), %r8
0000000100040dd9	movq	-0x30(%rbp), %r9
0000000100040ddd	movq	%r9, 0x8(%rcx)
0000000100040de1	movq	%r8, (%rcx)
0000000100040de4	leaq	(%rax,%rax), %r9
0000000100040de8	leaq	0x1(%rax,%rax), %r8
0000000100040ded	movq	%rax, %rcx
0000000100040df0	cmpq	%rsi, %r8
0000000100040df3	jb	0x100040d20
0000000100040df9	jmp	0x100040cf0
0000000100040dfe	cmpq	$0x2, %rsi
0000000100040e02	jb	0x100040fa2
0000000100040e08	movq	%rsi, %rax
0000000100040e0b	jmp	0x100040e1a
0000000100040e0d	nopl	(%rax)
0000000100040e10	cmpq	$0x1, %rax
0000000100040e14	jbe	0x100040fa2
0000000100040e1a	decq	%rax
0000000100040e1d	cmpq	%rsi, %rax
0000000100040e20	jae	0x100040fed
0000000100040e26	leaq	(%rax,%rax,4), %rcx
0000000100040e2a	movq	0x20(%rdi), %rdx
0000000100040e2e	movq	%rdx, -0x18(%rbp)
0000000100040e32	movq	0x18(%rdi), %rdx
0000000100040e36	movq	%rdx, -0x20(%rbp)
0000000100040e3a	movq	0x10(%rdi), %rdx
0000000100040e3e	movq	%rdx, -0x28(%rbp)
0000000100040e42	movq	(%rdi), %rdx
0000000100040e45	movq	0x8(%rdi), %r8
0000000100040e49	movq	%r8, -0x30(%rbp)
0000000100040e4d	movq	%rdx, -0x38(%rbp)
0000000100040e51	movq	0x20(%rdi,%rcx,8), %rdx
0000000100040e56	movq	0x18(%rdi,%rcx,8), %r8
0000000100040e5b	movq	0x10(%rdi,%rcx,8), %r9
0000000100040e60	movq	(%rdi,%rcx,8), %r10
0000000100040e64	movq	0x8(%rdi,%rcx,8), %r11
0000000100040e69	movq	%r10, (%rdi)
0000000100040e6c	movq	%r11, 0x8(%rdi)
0000000100040e70	movq	%r9, 0x10(%rdi)
0000000100040e74	movq	%r8, 0x18(%rdi)
0000000100040e78	movq	%rdx, 0x20(%rdi)
0000000100040e7c	movq	-0x18(%rbp), %rdx
0000000100040e80	movq	%rdx, 0x20(%rdi,%rcx,8)
0000000100040e85	movq	-0x20(%rbp), %rdx
0000000100040e89	movq	%rdx, 0x18(%rdi,%rcx,8)
0000000100040e8e	movq	-0x28(%rbp), %rdx
0000000100040e92	movq	%rdx, 0x10(%rdi,%rcx,8)
0000000100040e97	movq	-0x38(%rbp), %rdx
0000000100040e9b	movq	-0x30(%rbp), %r8
0000000100040e9f	movq	%r8, 0x8(%rdi,%rcx,8)
0000000100040ea4	movq	%rdx, (%rdi,%rcx,8)
0000000100040ea8	cmpq	$0x2, %rax
0000000100040eac	jb	0x100040fa2
0000000100040eb2	movl	$0x1, %edx
0000000100040eb7	xorl	%r9d, %r9d
0000000100040eba	xorl	%r8d, %r8d
0000000100040ebd	nopl	(%rax)
0000000100040ec0	addq	$0x2, %r9
0000000100040ec4	cmpq	%rax, %r9
0000000100040ec7	jae	0x100040edf
0000000100040ec9	leaq	(%rdx,%rdx,4), %rcx
0000000100040ecd	movq	0x10(%rdi,%rcx,8), %rcx
0000000100040ed2	leaq	(%r9,%r9,4), %r9
0000000100040ed6	cmpq	0x10(%rdi,%r9,8), %rcx
0000000100040edb	adcq	$0x0, %rdx
0000000100040edf	movq	%rdx, %rcx
0000000100040ee2	cmpq	%rax, %r8
0000000100040ee5	jae	0x100040fc9
0000000100040eeb	cmpq	%rax, %rcx
0000000100040eee	jae	0x100040fdb
0000000100040ef4	leaq	(%r8,%r8,4), %rdx
0000000100040ef8	leaq	(%rcx,%rcx,4), %r8
0000000100040efc	movq	0x10(%rdi,%rdx,8), %r9
0000000100040f01	cmpq	0x10(%rdi,%r8,8), %r9
0000000100040f06	jae	0x100040e10
0000000100040f0c	leaq	(%rdi,%rdx,8), %r9
0000000100040f10	leaq	(%rdi,%r8,8), %rdx
0000000100040f14	movq	0x20(%r9), %r8
0000000100040f18	movq	%r8, -0x18(%rbp)
0000000100040f1c	movq	0x18(%r9), %r8
0000000100040f20	movq	%r8, -0x20(%rbp)
0000000100040f24	movq	0x10(%r9), %r8
0000000100040f28	movq	%r8, -0x28(%rbp)
0000000100040f2c	movq	(%r9), %r8
0000000100040f2f	movq	0x8(%r9), %r10
0000000100040f33	movq	%r10, -0x30(%rbp)
0000000100040f37	movq	%r8, -0x38(%rbp)
0000000100040f3b	movq	0x20(%rdx), %r8
0000000100040f3f	movq	0x18(%rdx), %r10
0000000100040f43	movq	0x10(%rdx), %r11
0000000100040f47	movq	(%rdx), %rbx
0000000100040f4a	movq	0x8(%rdx), %r14
0000000100040f4e	movq	%rbx, (%r9)
0000000100040f51	movq	%r14, 0x8(%r9)
0000000100040f55	movq	%r11, 0x10(%r9)
0000000100040f59	movq	%r10, 0x18(%r9)
0000000100040f5d	movq	%r8, 0x20(%r9)
0000000100040f61	movq	-0x18(%rbp), %r8
0000000100040f65	movq	%r8, 0x20(%rdx)
0000000100040f69	movq	-0x20(%rbp), %r8
0000000100040f6d	movq	%r8, 0x18(%rdx)
0000000100040f71	movq	-0x28(%rbp), %r8
0000000100040f75	movq	%r8, 0x10(%rdx)
0000000100040f79	movq	-0x38(%rbp), %r8
0000000100040f7d	movq	-0x30(%rbp), %r9
0000000100040f81	movq	%r9, 0x8(%rdx)
0000000100040f85	movq	%r8, (%rdx)
0000000100040f88	leaq	(%rcx,%rcx), %r9
0000000100040f8c	leaq	0x1(%rcx,%rcx), %rdx
0000000100040f91	movq	%rcx, %r8
0000000100040f94	cmpq	%rax, %rdx
0000000100040f97	jb	0x100040ec0
0000000100040f9d	jmp	0x100040e10
0000000100040fa2	addq	$0x30, %rsp
0000000100040fa6	popq	%rbx
0000000100040fa7	popq	%r14
0000000100040fa9	popq	%rbp
0000000100040faa	retq
0000000100040fab	leaq	0x75be(%rip), %rdx
0000000100040fb2	movq	%rcx, %rdi
0000000100040fb5	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040fba	leaq	0x75c7(%rip), %rdx
0000000100040fc1	movq	%rax, %rdi
0000000100040fc4	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040fc9	leaq	0x75a0(%rip), %rdx
0000000100040fd0	movq	%r8, %rdi
0000000100040fd3	movq	%rax, %rsi
0000000100040fd6	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040fdb	leaq	0x75a6(%rip), %rdx
0000000100040fe2	movq	%rcx, %rdi
0000000100040fe5	movq	%rax, %rsi
0000000100040fe8	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040fed	leaq	0x7564(%rip), %rdx
0000000100040ff4	movq	%rax, %rdi
0000000100040ff7	callq	__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E ## core::panicking::panic_bounds_check::h032ea9df84e9c180
0000000100040ffc	nopl	(%rax)
__ZN4core9panicking13assert_failed17h04fd3a4c733da442E:
0000000100041000	pushq	%rbp
0000000100041001	movq	%rsp, %rbp
0000000100041004	subq	$0x50, %rsp
0000000100041008	movq	%rsi, -0x8(%rbp)
000000010004100c	movq	%rdx, -0x10(%rbp)
0000000100041010	movq	0x28(%rcx), %rax
0000000100041014	movq	%rax, -0x18(%rbp)
0000000100041018	movq	0x20(%rcx), %rax
000000010004101c	movq	%rax, -0x20(%rbp)
0000000100041020	movq	0x18(%rcx), %rax
0000000100041024	movq	%rax, -0x28(%rbp)
0000000100041028	movq	0x10(%rcx), %rax
000000010004102c	movq	%rax, -0x30(%rbp)
0000000100041030	movq	(%rcx), %rax
0000000100041033	movq	0x8(%rcx), %rcx
0000000100041037	movq	%rcx, -0x38(%rbp)
000000010004103b	movq	%rax, -0x40(%rbp)
000000010004103f	movq	%r8, (%rsp)
0000000100041043	leaq	0x75fe(%rip), %rdx
000000010004104a	leaq	-0x8(%rbp), %rsi
000000010004104e	leaq	-0x10(%rbp), %rcx
0000000100041052	leaq	-0x40(%rbp), %r9
0000000100041056	movq	%rdx, %r8
0000000100041059	callq	__ZN4core9panicking19assert_failed_inner17h6064066c055fb1fdE ## core::panicking::assert_failed_inner::h6064066c055fb1fd
000000010004105e	nop
__ZN4core9panicking13assert_failed17hadb438b5c2e6c647E:
0000000100041060	pushq	%rbp
0000000100041061	movq	%rsp, %rbp
0000000100041064	subq	$0x50, %rsp
0000000100041068	movq	%rdi, -0x8(%rbp)
000000010004106c	leaq	0x4945(%rip), %rax
0000000100041073	movq	%rax, -0x10(%rbp)
0000000100041077	movq	0x28(%rsi), %rax
000000010004107b	movq	%rax, -0x18(%rbp)
000000010004107f	movq	0x20(%rsi), %rax
0000000100041083	movq	%rax, -0x20(%rbp)
0000000100041087	movq	0x18(%rsi), %rax
000000010004108b	movq	%rax, -0x28(%rbp)
000000010004108f	movq	0x10(%rsi), %rax
0000000100041093	movq	%rax, -0x30(%rbp)
0000000100041097	movq	(%rsi), %rax
000000010004109a	movq	0x8(%rsi), %rcx
000000010004109e	movq	%rcx, -0x38(%rbp)
00000001000410a2	movq	%rax, -0x40(%rbp)
00000001000410a6	leaq	0x84fb(%rip), %rax
00000001000410ad	movq	%rax, (%rsp)
00000001000410b1	leaq	0x75b0(%rip), %rdx
00000001000410b8	leaq	-0x8(%rbp), %rsi
00000001000410bc	leaq	-0x10(%rbp), %rcx
00000001000410c0	leaq	-0x40(%rbp), %r9
00000001000410c4	xorl	%edi, %edi
00000001000410c6	movq	%rdx, %r8
00000001000410c9	callq	__ZN4core9panicking19assert_failed_inner17h6064066c055fb1fdE ## core::panicking::assert_failed_inner::h6064066c055fb1fd
00000001000410ce	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h46367eeffb1a12a2E:
00000001000410d0	pushq	%rbp
00000001000410d1	movq	%rsp, %rbp
00000001000410d4	pushq	%r14
00000001000410d6	pushq	%rbx
00000001000410d7	subq	$0x30, %rsp
00000001000410db	addq	%rdx, %rsi
00000001000410de	jb	0x10004117d
00000001000410e4	movq	%rdi, %rbx
00000001000410e7	movq	0x8(%rdi), %rax
00000001000410eb	leaq	(%rax,%rax), %rcx
00000001000410ef	cmpq	%rsi, %rcx
00000001000410f2	cmovaq	%rcx, %rsi
00000001000410f6	cmpq	$0x5, %rsi
00000001000410fa	movl	$0x4, %r14d
0000000100041100	cmovaeq	%rsi, %r14
0000000100041104	movabsq	$0x555555555555556, %rcx        ## imm = 0x555555555555556
000000010004110e	xorl	%esi, %esi
0000000100041110	cmpq	%rcx, %r14
0000000100041113	setb	%sil
0000000100041117	leaq	(,%r14,8), %rcx
000000010004111f	leaq	(%rcx,%rcx,2), %rdx
0000000100041123	shlq	$0x3, %rsi
0000000100041127	testq	%rax, %rax
000000010004112a	je	0x100041149
000000010004112c	movq	(%rbx), %rcx
000000010004112f	shlq	$0x3, %rax
0000000100041133	leaq	(%rax,%rax,2), %rax
0000000100041137	movq	%rcx, -0x28(%rbp)
000000010004113b	movq	$0x8, -0x20(%rbp)
0000000100041143	movq	%rax, -0x18(%rbp)
0000000100041147	jmp	0x100041151
0000000100041149	movq	$0x0, -0x20(%rbp)
0000000100041151	leaq	-0x40(%rbp), %rdi
0000000100041155	leaq	-0x28(%rbp), %rcx
0000000100041159	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010004115e	cmpq	$0x0, -0x40(%rbp)
0000000100041163	movq	-0x38(%rbp), %rdi
0000000100041167	je	0x100041182
0000000100041169	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
0000000100041173	cmpq	%rax, %rdi
0000000100041176	je	0x100041189
0000000100041178	testq	%rdi, %rdi
000000010004117b	jne	0x100041192
000000010004117d	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100041182	movq	%rdi, (%rbx)
0000000100041185	movq	%r14, 0x8(%rbx)
0000000100041189	addq	$0x30, %rsp
000000010004118d	popq	%rbx
000000010004118e	popq	%r14
0000000100041190	popq	%rbp
0000000100041191	retq
0000000100041192	movq	-0x30(%rbp), %rsi
0000000100041196	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
000000010004119b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h53c5f70843385dc4E:
00000001000411a0	pushq	%rbp
00000001000411a1	movq	%rsp, %rbp
00000001000411a4	pushq	%r14
00000001000411a6	pushq	%rbx
00000001000411a7	subq	$0x30, %rsp
00000001000411ab	addq	%rdx, %rsi
00000001000411ae	jb	0x10004122b
00000001000411b0	movq	%rdi, %rbx
00000001000411b3	movq	0x8(%rdi), %rax
00000001000411b7	leaq	(%rax,%rax), %rcx
00000001000411bb	cmpq	%rsi, %rcx
00000001000411be	cmovaq	%rcx, %rsi
00000001000411c2	cmpq	$0x9, %rsi
00000001000411c6	movl	$0x8, %r14d
00000001000411cc	cmovaeq	%rsi, %r14
00000001000411d0	movq	%r14, %rsi
00000001000411d3	notq	%rsi
00000001000411d6	shrq	$0x3f, %rsi
00000001000411da	testq	%rax, %rax
00000001000411dd	je	0x1000411f4
00000001000411df	movq	(%rbx), %rcx
00000001000411e2	movq	%rcx, -0x28(%rbp)
00000001000411e6	movq	$0x1, -0x20(%rbp)
00000001000411ee	movq	%rax, -0x18(%rbp)
00000001000411f2	jmp	0x1000411fc
00000001000411f4	movq	$0x0, -0x20(%rbp)
00000001000411fc	leaq	-0x40(%rbp), %rdi
0000000100041200	leaq	-0x28(%rbp), %rcx
0000000100041204	movq	%r14, %rdx
0000000100041207	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
000000010004120c	cmpq	$0x0, -0x40(%rbp)
0000000100041211	movq	-0x38(%rbp), %rdi
0000000100041215	je	0x100041230
0000000100041217	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
0000000100041221	cmpq	%rax, %rdi
0000000100041224	je	0x100041237
0000000100041226	testq	%rdi, %rdi
0000000100041229	jne	0x100041240
000000010004122b	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100041230	movq	%rdi, (%rbx)
0000000100041233	movq	%r14, 0x8(%rbx)
0000000100041237	addq	$0x30, %rsp
000000010004123b	popq	%rbx
000000010004123c	popq	%r14
000000010004123e	popq	%rbp
000000010004123f	retq
0000000100041240	movq	-0x30(%rbp), %rsi
0000000100041244	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100041249	nopl	(%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h5a3f51c5336d5586E:
0000000100041250	pushq	%rbp
0000000100041251	movq	%rsp, %rbp
0000000100041254	pushq	%r14
0000000100041256	pushq	%rbx
0000000100041257	subq	$0x30, %rsp
000000010004125b	addq	%rdx, %rsi
000000010004125e	jb	0x1000412f7
0000000100041264	movq	%rdi, %rbx
0000000100041267	movq	0x8(%rdi), %rax
000000010004126b	leaq	(%rax,%rax), %rcx
000000010004126f	cmpq	%rsi, %rcx
0000000100041272	cmovaq	%rcx, %rsi
0000000100041276	cmpq	$0x5, %rsi
000000010004127a	movl	$0x4, %r14d
0000000100041280	cmovaeq	%rsi, %r14
0000000100041284	movabsq	$0x381c0e070381c1, %rcx         ## imm = 0x381C0E070381C1
000000010004128e	xorl	%esi, %esi
0000000100041290	cmpq	%rcx, %r14
0000000100041293	setb	%sil
0000000100041297	imulq	$0x248, %r14, %rdx              ## imm = 0x248
000000010004129e	shlq	$0x3, %rsi
00000001000412a2	testq	%rax, %rax
00000001000412a5	je	0x1000412c3
00000001000412a7	movq	(%rbx), %rcx
00000001000412aa	imulq	$0x248, %rax, %rax              ## imm = 0x248
00000001000412b1	movq	%rcx, -0x28(%rbp)
00000001000412b5	movq	$0x8, -0x20(%rbp)
00000001000412bd	movq	%rax, -0x18(%rbp)
00000001000412c1	jmp	0x1000412cb
00000001000412c3	movq	$0x0, -0x20(%rbp)
00000001000412cb	leaq	-0x40(%rbp), %rdi
00000001000412cf	leaq	-0x28(%rbp), %rcx
00000001000412d3	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
00000001000412d8	cmpq	$0x0, -0x40(%rbp)
00000001000412dd	movq	-0x38(%rbp), %rdi
00000001000412e1	je	0x1000412fc
00000001000412e3	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
00000001000412ed	cmpq	%rax, %rdi
00000001000412f0	je	0x100041303
00000001000412f2	testq	%rdi, %rdi
00000001000412f5	jne	0x10004130c
00000001000412f7	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
00000001000412fc	movq	%rdi, (%rbx)
00000001000412ff	movq	%r14, 0x8(%rbx)
0000000100041303	addq	$0x30, %rsp
0000000100041307	popq	%rbx
0000000100041308	popq	%r14
000000010004130a	popq	%rbp
000000010004130b	retq
000000010004130c	movq	-0x30(%rbp), %rsi
0000000100041310	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100041315	nopw	%cs:(%rax,%rax)
000000010004131f	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h70c95565943a02e4E:
0000000100041320	pushq	%rbp
0000000100041321	movq	%rsp, %rbp
0000000100041324	pushq	%r14
0000000100041326	pushq	%rbx
0000000100041327	subq	$0x30, %rsp
000000010004132b	incq	%rsi
000000010004132e	je	0x1000413c7
0000000100041334	movq	%rdi, %rbx
0000000100041337	movq	0x8(%rdi), %rax
000000010004133b	leaq	(%rax,%rax), %rcx
000000010004133f	cmpq	%rsi, %rcx
0000000100041342	cmovaq	%rcx, %rsi
0000000100041346	cmpq	$0x5, %rsi
000000010004134a	movl	$0x4, %r14d
0000000100041350	cmovaeq	%rsi, %r14
0000000100041354	movabsq	$0x3759f2298375a0, %rcx         ## imm = 0x3759F2298375A0
000000010004135e	xorl	%esi, %esi
0000000100041360	cmpq	%rcx, %r14
0000000100041363	setb	%sil
0000000100041367	imulq	$0x250, %r14, %rdx              ## imm = 0x250
000000010004136e	shlq	$0x3, %rsi
0000000100041372	testq	%rax, %rax
0000000100041375	je	0x100041393
0000000100041377	movq	(%rbx), %rcx
000000010004137a	imulq	$0x250, %rax, %rax              ## imm = 0x250
0000000100041381	movq	%rcx, -0x28(%rbp)
0000000100041385	movq	$0x8, -0x20(%rbp)
000000010004138d	movq	%rax, -0x18(%rbp)
0000000100041391	jmp	0x10004139b
0000000100041393	movq	$0x0, -0x20(%rbp)
000000010004139b	leaq	-0x40(%rbp), %rdi
000000010004139f	leaq	-0x28(%rbp), %rcx
00000001000413a3	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
00000001000413a8	cmpq	$0x0, -0x40(%rbp)
00000001000413ad	movq	-0x38(%rbp), %rdi
00000001000413b1	je	0x1000413cc
00000001000413b3	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
00000001000413bd	cmpq	%rax, %rdi
00000001000413c0	je	0x1000413d3
00000001000413c2	testq	%rdi, %rdi
00000001000413c5	jne	0x1000413dc
00000001000413c7	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
00000001000413cc	movq	%rdi, (%rbx)
00000001000413cf	movq	%r14, 0x8(%rbx)
00000001000413d3	addq	$0x30, %rsp
00000001000413d7	popq	%rbx
00000001000413d8	popq	%r14
00000001000413da	popq	%rbp
00000001000413db	retq
00000001000413dc	movq	-0x30(%rbp), %rsi
00000001000413e0	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000413e5	nopw	%cs:(%rax,%rax)
00000001000413ef	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hc82b8f84544cd222E:
00000001000413f0	pushq	%rbp
00000001000413f1	movq	%rsp, %rbp
00000001000413f4	pushq	%r14
00000001000413f6	pushq	%rbx
00000001000413f7	subq	$0x30, %rsp
00000001000413fb	addq	%rdx, %rsi
00000001000413fe	jb	0x100041491
0000000100041404	movq	%rdi, %rbx
0000000100041407	movq	0x8(%rdi), %rax
000000010004140b	leaq	(%rax,%rax), %rcx
000000010004140f	cmpq	%rsi, %rcx
0000000100041412	cmovaq	%rcx, %rsi
0000000100041416	cmpq	$0x5, %rsi
000000010004141a	movl	$0x4, %r14d
0000000100041420	cmovaeq	%rsi, %r14
0000000100041424	movabsq	$0x24924924924924a, %rcx        ## imm = 0x24924924924924A
000000010004142e	xorl	%esi, %esi
0000000100041430	cmpq	%rcx, %r14
0000000100041433	setb	%sil
0000000100041437	imulq	$0x38, %r14, %rdx
000000010004143b	shlq	$0x3, %rsi
000000010004143f	testq	%rax, %rax
0000000100041442	je	0x10004145d
0000000100041444	movq	(%rbx), %rcx
0000000100041447	imulq	$0x38, %rax, %rax
000000010004144b	movq	%rcx, -0x28(%rbp)
000000010004144f	movq	$0x8, -0x20(%rbp)
0000000100041457	movq	%rax, -0x18(%rbp)
000000010004145b	jmp	0x100041465
000000010004145d	movq	$0x0, -0x20(%rbp)
0000000100041465	leaq	-0x40(%rbp), %rdi
0000000100041469	leaq	-0x28(%rbp), %rcx
000000010004146d	callq	__ZN5alloc7raw_vec11finish_grow17h3ad1278d2945d789E ## alloc::raw_vec::finish_grow::h3ad1278d2945d789
0000000100041472	cmpq	$0x0, -0x40(%rbp)
0000000100041477	movq	-0x38(%rbp), %rdi
000000010004147b	je	0x100041496
000000010004147d	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
0000000100041487	cmpq	%rax, %rdi
000000010004148a	je	0x10004149d
000000010004148c	testq	%rdi, %rdi
000000010004148f	jne	0x1000414a6
0000000100041491	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100041496	movq	%rdi, (%rbx)
0000000100041499	movq	%r14, 0x8(%rbx)
000000010004149d	addq	$0x30, %rsp
00000001000414a1	popq	%rbx
00000001000414a2	popq	%r14
00000001000414a4	popq	%rbp
00000001000414a5	retq
00000001000414a6	movq	-0x30(%rbp), %rsi
00000001000414aa	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000414af	nop
__ZN3std6thread8ThreadId3new9exhausted17hc5501be4d58a3bb3E:
00000001000414b0	pushq	%rbp
00000001000414b1	movq	%rsp, %rbp
00000001000414b4	subq	$0x30, %rsp
00000001000414b8	leaq	0x74c9(%rip), %rax
00000001000414bf	movq	%rax, -0x30(%rbp)
00000001000414c3	movq	$0x1, -0x28(%rbp)
00000001000414cb	movq	$0x0, -0x10(%rbp)
00000001000414d3	leaq	0x2816(%rip), %rax
00000001000414da	movq	%rax, -0x20(%rbp)
00000001000414de	movq	$0x0, -0x18(%rbp)
00000001000414e6	leaq	0x74ab(%rip), %rsi
00000001000414ed	leaq	-0x30(%rbp), %rdi
00000001000414f1	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000414f6	nopw	%cs:(%rax,%rax)
__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$14write_all_cold17hc95933a537e440bdE:
0000000100041500	pushq	%rbp
0000000100041501	movq	%rsp, %rbp
0000000100041504	pushq	%r15
0000000100041506	pushq	%r14
0000000100041508	pushq	%r12
000000010004150a	pushq	%rbx
000000010004150b	movq	%rdx, %r14
000000010004150e	movq	%rsi, %r15
0000000100041511	movq	%rdi, %rbx
0000000100041514	movq	0x8(%rdi), %rax
0000000100041518	movq	%rax, %rcx
000000010004151b	subq	0x10(%rdi), %rcx
000000010004151f	cmpq	%rdx, %rcx
0000000100041522	jae	0x100041535
0000000100041524	movq	%rbx, %rdi
0000000100041527	callq	__ZN3std2io8buffered9bufwriter18BufWriter$LT$W$GT$9flush_buf17h427c3bc684e5dfc1E ## std::io::buffered::bufwriter::BufWriter$LT$W$GT$::flush_buf::h427c3bc684e5dfc1
000000010004152c	testq	%rax, %rax
000000010004152f	jne	0x10004156d
0000000100041531	movq	0x8(%rbx), %rax
0000000100041535	cmpq	%r14, %rax
0000000100041538	jbe	0x10004155a
000000010004153a	movq	0x10(%rbx), %r12
000000010004153e	movq	(%rbx), %rdi
0000000100041541	addq	%r12, %rdi
0000000100041544	movq	%r15, %rsi
0000000100041547	movq	%r14, %rdx
000000010004154a	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010004154f	addq	%r14, %r12
0000000100041552	movq	%r12, 0x10(%rbx)
0000000100041556	xorl	%eax, %eax
0000000100041558	jmp	0x10004156d
000000010004155a	movb	$0x1, 0x18(%rbx)
000000010004155e	movq	%r15, %rsi
0000000100041561	movq	%r14, %rdx
0000000100041564	callq	__ZN60_$LT$std..io..stdio..StdoutRaw$u20$as$u20$std..io..Write$GT$9write_all17h603b64199341aa00E ## _$LT$std..io..stdio..StdoutRaw$u20$as$u20$std..io..Write$GT$::write_all::h603b64199341aa00
0000000100041569	movb	$0x0, 0x18(%rbx)
000000010004156d	popq	%rbx
000000010004156e	popq	%r12
0000000100041570	popq	%r14
0000000100041572	popq	%r15
0000000100041574	popq	%rbp
0000000100041575	retq
0000000100041576	nopw	%cs:(%rax,%rax)
__ZN3std7process5abort17hf49bdb1ef04aeee2E:
0000000100041580	pushq	%rbp
0000000100041581	movq	%rsp, %rbp
0000000100041584	callq	__ZN3std3sys4unix14abort_internal17hf9660be784efdde8E ## std::sys::unix::abort_internal::hf9660be784efdde8
0000000100041589	nopl	(%rax)
__ZN3std4sync9once_lock17OnceLock$LT$T$GT$10initialize17h4c35b04ff102c93aE:
0000000100041590	pushq	%rbp
0000000100041591	movq	%rsp, %rbp
0000000100041594	subq	$0x20, %rsp
0000000100041598	movq	0xac19(%rip), %rax
000000010004159f	cmpq	$0x3, %rax
00000001000415a3	jne	0x1000415ab
00000001000415a5	addq	$0x20, %rsp
00000001000415a9	popq	%rbp
00000001000415aa	retq
00000001000415ab	leaq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rax ## std::io::stdio::STDOUT::hae8c83b8691d76e5
00000001000415b2	movq	%rax, -0x20(%rbp)
00000001000415b6	leaq	-0x8(%rbp), %rax
00000001000415ba	movq	%rax, -0x18(%rbp)
00000001000415be	leaq	-0x20(%rbp), %rax
00000001000415c2	movq	%rax, -0x10(%rbp)
00000001000415c6	leaq	0xabeb(%rip), %rdi
00000001000415cd	leaq	0x7834(%rip), %rcx
00000001000415d4	leaq	0x7855(%rip), %r8
00000001000415db	leaq	-0x10(%rbp), %rdx
00000001000415df	movl	$0x1, %esi
00000001000415e4	callq	__ZN3std10sys_common4once5queue4Once4call17hf241db9abbfabd67E ## std::sys_common::once::queue::Once::call::hf241db9abbfabd67
00000001000415e9	addq	$0x20, %rsp
00000001000415ed	popq	%rbp
00000001000415ee	retq
00000001000415ef	nop
__ZN3std4sync9once_lock17OnceLock$LT$T$GT$10initialize17hfe0a812946b5aa4cE:
00000001000415f0	pushq	%rbp
00000001000415f1	movq	%rsp, %rbp
00000001000415f4	subq	$0x30, %rsp
00000001000415f8	movq	0xabb9(%rip), %rax
00000001000415ff	cmpq	$0x3, %rax
0000000100041603	jne	0x10004160b
0000000100041605	addq	$0x30, %rsp
0000000100041609	popq	%rbp
000000010004160a	retq
000000010004160b	movq	%rdi, -0x28(%rbp)
000000010004160f	leaq	__ZN3std2io5stdio6STDOUT17hae8c83b8691d76e5E(%rip), %rax ## std::io::stdio::STDOUT::hae8c83b8691d76e5
0000000100041616	movq	%rax, -0x20(%rbp)
000000010004161a	leaq	-0x8(%rbp), %rax
000000010004161e	movq	%rax, -0x18(%rbp)
0000000100041622	leaq	-0x28(%rbp), %rax
0000000100041626	movq	%rax, -0x10(%rbp)
000000010004162a	leaq	0xab87(%rip), %rdi
0000000100041631	leaq	0x7810(%rip), %rcx
0000000100041638	leaq	0x77f1(%rip), %r8
000000010004163f	leaq	-0x10(%rbp), %rdx
0000000100041643	movl	$0x1, %esi
0000000100041648	callq	__ZN3std10sys_common4once5queue4Once4call17hf241db9abbfabd67E ## std::sys_common::once::queue::Once::call::hf241db9abbfabd67
000000010004164d	addq	$0x30, %rsp
0000000100041651	popq	%rbp
0000000100041652	retq
0000000100041653	nopw	%cs:(%rax,%rax)
000000010004165d	nopl	(%rax)
__ZN3std3sys6common14small_c_string24run_with_cstr_allocating17h1bea8d19210b405dE:
0000000100041660	pushq	%rbp
0000000100041661	movq	%rsp, %rbp
0000000100041664	pushq	%r14
0000000100041666	pushq	%rbx
0000000100041667	subq	$0x30, %rsp
000000010004166b	movq	%rsi, %rdx
000000010004166e	movq	%rdi, %rsi
0000000100041671	leaq	-0x40(%rbp), %rdi
0000000100041675	callq	__ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hef8c413dc80fb552E ## _$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$::spec_new_impl::hef8c413dc80fb552
000000010004167a	movq	-0x40(%rbp), %rdi
000000010004167e	testq	%rdi, %rdi
0000000100041681	je	0x100041692
0000000100041683	leaq	0x7816(%rip), %rbx
000000010004168a	movl	$0x1, %r14d
0000000100041690	jmp	0x10004170e
0000000100041692	movq	-0x38(%rbp), %rbx
0000000100041696	movq	-0x30(%rbp), %rax
000000010004169a	movq	%rbx, -0x20(%rbp)
000000010004169e	movq	%rax, -0x18(%rbp)
00000001000416a2	leaq	__ZN3std3sys4unix2os8ENV_LOCK17h4ba658aa49256137E(%rip), %rdi ## std::sys::unix::os::ENV_LOCK::h4ba658aa49256137
00000001000416a9	callq	__ZN3std3sys4unix5locks14pthread_rwlock6RwLock4read17hea9fe8563f9fb3c3E ## std::sys::unix::locks::pthread_rwlock::RwLock::read::hea9fe8563f9fb3c3
00000001000416ae	movzbl	0xab3b(%rip), %eax
00000001000416b5	movq	%rbx, %rdi
00000001000416b8	callq	0x1000427b4                     ## symbol stub for: _getenv
00000001000416bd	movq	%rax, %rbx
00000001000416c0	movq	__ZN3std3sys4unix2os8ENV_LOCK17h4ba658aa49256137E(%rip), %rdi ## std::sys::unix::os::ENV_LOCK::h4ba658aa49256137
00000001000416c7	testq	%rdi, %rdi
00000001000416ca	jne	0x1000416db
00000001000416cc	leaq	__ZN3std3sys4unix2os8ENV_LOCK17h4ba658aa49256137E(%rip), %rdi ## std::sys::unix::os::ENV_LOCK::h4ba658aa49256137
00000001000416d3	callq	__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h90e0eaa82f4e03f2E ## std::sys_common::lazy_box::LazyBox$LT$T$GT$::initialize::h90e0eaa82f4e03f2
00000001000416d8	movq	%rax, %rdi
00000001000416db	lock
00000001000416dc	decq	0xc8(%rdi)
00000001000416e3	callq	0x10004283e                     ## symbol stub for: _pthread_rwlock_unlock
00000001000416e8	movq	-0x20(%rbp), %rdi
00000001000416ec	movb	$0x0, (%rdi)
00000001000416ef	movq	-0x18(%rbp), %rsi
00000001000416f3	testq	%rsi, %rsi
00000001000416f6	je	0x100041702
00000001000416f8	movl	$0x1, %edx
00000001000416fd	callq	___rust_dealloc
0000000100041702	movq	-0x40(%rbp), %rdi
0000000100041706	xorl	%r14d, %r14d
0000000100041709	testq	%rdi, %rdi
000000010004170c	je	0x100041721
000000010004170e	movq	-0x38(%rbp), %rsi
0000000100041712	testq	%rsi, %rsi
0000000100041715	je	0x100041721
0000000100041717	movl	$0x1, %edx
000000010004171c	callq	___rust_dealloc
0000000100041721	movq	%r14, %rax
0000000100041724	movq	%rbx, %rdx
0000000100041727	addq	$0x30, %rsp
000000010004172b	popq	%rbx
000000010004172c	popq	%r14
000000010004172e	popq	%rbp
000000010004172f	retq
0000000100041730	movq	%rax, %rbx
0000000100041733	leaq	-0x20(%rbp), %rdi
0000000100041737	callq	__ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h2a334d9c2fc48269E ## core::ptr::drop_in_place$LT$alloc..ffi..c_str..CString$GT$::h2a334d9c2fc48269
000000010004173c	cmpq	$0x0, -0x40(%rbp)
0000000100041741	je	0x10004174c
0000000100041743	leaq	-0x40(%rbp), %rdi
0000000100041747	callq	__ZN4core3ptr105drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$17hb9a156d2c28948abE ## core::ptr::drop_in_place$LT$core..result..Result$LT$alloc..ffi..c_str..CString$C$alloc..ffi..c_str..NulError$GT$$GT$::hb9a156d2c28948ab
000000010004174c	movq	%rbx, %rdi
000000010004174f	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100041754	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100041759	nopl	(%rax)
__ZN3std3sys6common14small_c_string24run_with_cstr_allocating17h4c28969c340409b1E:
0000000100041760	pushq	%rbp
0000000100041761	movq	%rsp, %rbp
0000000100041764	pushq	%r15
0000000100041766	pushq	%r14
0000000100041768	pushq	%rbx
0000000100041769	subq	$0x28, %rsp
000000010004176d	movq	%rsi, %rdx
0000000100041770	movq	%rdi, %rsi
0000000100041773	leaq	-0x38(%rbp), %rdi
0000000100041777	callq	__ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hef8c413dc80fb552E ## _$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$::spec_new_impl::hef8c413dc80fb552
000000010004177c	movq	-0x38(%rbp), %rdi
0000000100041780	testq	%rdi, %rdi
0000000100041783	je	0x1000417a7
0000000100041785	movq	-0x30(%rbp), %rsi
0000000100041789	leaq	0x7710(%rip), %rbx
0000000100041790	movl	$0x1, %r14d
0000000100041796	testq	%rsi, %rsi
0000000100041799	je	0x1000417d6
000000010004179b	movl	$0x1, %edx
00000001000417a0	callq	___rust_dealloc
00000001000417a5	jmp	0x1000417d6
00000001000417a7	movq	-0x30(%rbp), %r14
00000001000417ab	movq	-0x28(%rbp), %r15
00000001000417af	movq	%r14, %rdi
00000001000417b2	callq	0x1000427ea                     ## symbol stub for: _opendir$INODE64
00000001000417b7	movq	%rax, %rbx
00000001000417ba	movb	$0x0, (%r14)
00000001000417be	testq	%r15, %r15
00000001000417c1	je	0x1000417d3
00000001000417c3	movl	$0x1, %edx
00000001000417c8	movq	%r14, %rdi
00000001000417cb	movq	%r15, %rsi
00000001000417ce	callq	___rust_dealloc
00000001000417d3	xorl	%r14d, %r14d
00000001000417d6	movq	%r14, %rax
00000001000417d9	movq	%rbx, %rdx
00000001000417dc	addq	$0x28, %rsp
00000001000417e0	popq	%rbx
00000001000417e1	popq	%r14
00000001000417e3	popq	%r15
00000001000417e5	popq	%rbp
00000001000417e6	retq
00000001000417e7	nopw	(%rax,%rax)
__ZN3std3sys6common14small_c_string24run_with_cstr_allocating17hf049530f66713f2bE:
00000001000417f0	pushq	%rbp
00000001000417f1	movq	%rsp, %rbp
00000001000417f4	pushq	%r15
00000001000417f6	pushq	%r14
00000001000417f8	pushq	%r12
00000001000417fa	pushq	%rbx
00000001000417fb	subq	$0x30, %rsp
00000001000417ff	movq	%rcx, %rbx
0000000100041802	movq	%rdi, %r12
0000000100041805	leaq	-0x50(%rbp), %rdi
0000000100041809	callq	__ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hef8c413dc80fb552E ## _$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$::spec_new_impl::hef8c413dc80fb552
000000010004180e	movq	-0x50(%rbp), %rdi
0000000100041812	testq	%rdi, %rdi
0000000100041815	je	0x10004184a
0000000100041817	leaq	0x7682(%rip), %rax
000000010004181e	movq	%rax, 0x8(%r12)
0000000100041823	movl	$0x1, (%r12)
000000010004182b	movq	-0x48(%rbp), %rsi
000000010004182f	testq	%rsi, %rsi
0000000100041832	je	0x100041881
0000000100041834	movl	$0x1, %edx
0000000100041839	addq	$0x30, %rsp
000000010004183d	popq	%rbx
000000010004183e	popq	%r12
0000000100041840	popq	%r14
0000000100041842	popq	%r15
0000000100041844	popq	%rbp
0000000100041845	jmp	___rust_dealloc
000000010004184a	movq	-0x48(%rbp), %r14
000000010004184e	movq	-0x40(%rbp), %r15
0000000100041852	movq	%r14, -0x30(%rbp)
0000000100041856	movq	%r15, -0x28(%rbp)
000000010004185a	movq	%r12, %rdi
000000010004185d	movq	%r14, %rsi
0000000100041860	movq	%rbx, %rdx
0000000100041863	callq	__ZN3std3sys4unix2fs4File6open_c17h432d442dbe199fc7E ## std::sys::unix::fs::File::open_c::h432d442dbe199fc7
0000000100041868	movb	$0x0, (%r14)
000000010004186c	testq	%r15, %r15
000000010004186f	je	0x100041881
0000000100041871	movl	$0x1, %edx
0000000100041876	movq	%r14, %rdi
0000000100041879	movq	%r15, %rsi
000000010004187c	callq	___rust_dealloc
0000000100041881	addq	$0x30, %rsp
0000000100041885	popq	%rbx
0000000100041886	popq	%r12
0000000100041888	popq	%r14
000000010004188a	popq	%r15
000000010004188c	popq	%rbp
000000010004188d	retq
000000010004188e	movq	%rax, %rbx
0000000100041891	leaq	-0x30(%rbp), %rdi
0000000100041895	callq	__ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h2a334d9c2fc48269E ## core::ptr::drop_in_place$LT$alloc..ffi..c_str..CString$GT$::h2a334d9c2fc48269
000000010004189a	movq	%rbx, %rdi
000000010004189d	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000418a2	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000418a7	nopw	(%rax,%rax)
__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h37ee5133a9f25da6E:
00000001000418b0	pushq	%rbp
00000001000418b1	movq	%rsp, %rbp
00000001000418b4	pushq	%r14
00000001000418b6	pushq	%rbx
00000001000418b7	movq	%rdi, %r14
00000001000418ba	callq	__ZN108_$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$u20$as$u20$std..sys_common..lazy_box..LazyInit$GT$4init17h910a66c68d8d4cb0E ## _$LT$std..sys..unix..locks..pthread_mutex..AllocatedMutex$u20$as$u20$std..sys_common..lazy_box..LazyInit$GT$::init::h910a66c68d8d4cb0
00000001000418bf	movq	%rax, %rbx
00000001000418c2	xorl	%eax, %eax
00000001000418c4	lock
00000001000418c5	cmpxchgq	%rbx, (%r14)
00000001000418c9	je	0x1000418eb
00000001000418cb	movq	%rax, %r14
00000001000418ce	movq	%rbx, %rdi
00000001000418d1	callq	0x100042802                     ## symbol stub for: _pthread_mutex_destroy
00000001000418d6	movl	$0x40, %esi
00000001000418db	movl	$0x8, %edx
00000001000418e0	movq	%rbx, %rdi
00000001000418e3	callq	___rust_dealloc
00000001000418e8	movq	%r14, %rbx
00000001000418eb	movq	%rbx, %rax
00000001000418ee	popq	%rbx
00000001000418ef	popq	%r14
00000001000418f1	popq	%rbp
00000001000418f2	retq
00000001000418f3	nopw	%cs:(%rax,%rax)
00000001000418fd	nopl	(%rax)
__ZN3std10sys_common8lazy_box16LazyBox$LT$T$GT$10initialize17h90e0eaa82f4e03f2E:
0000000100041900	pushq	%rbp
0000000100041901	movq	%rsp, %rbp
0000000100041904	pushq	%r14
0000000100041906	pushq	%rbx
0000000100041907	subq	$0xe0, %rsp
000000010004190e	movq	%rdi, %r14
0000000100041911	leaq	0x3ad8(%rip), %rsi
0000000100041918	leaq	-0xe8(%rbp), %rdi
000000010004191f	movl	$0xc8, %edx
0000000100041924	callq	0x1000427c6                     ## symbol stub for: _memcpy
0000000100041929	movb	$0x0, -0x18(%rbp)
000000010004192d	movq	$0x0, -0x20(%rbp)
0000000100041935	leaq	___rust_no_alloc_shim_is_unstable(%rip), %rax
000000010004193c	movzbl	(%rax), %eax
000000010004193f	movl	$0xd8, %edi
0000000100041944	movl	$0x8, %esi
0000000100041949	callq	___rust_alloc
000000010004194e	testq	%rax, %rax
0000000100041951	je	0x1000419a2
0000000100041953	movq	%rax, %rbx
0000000100041956	leaq	-0xe8(%rbp), %rsi
000000010004195d	movl	$0xd8, %edx
0000000100041962	movq	%rax, %rdi
0000000100041965	callq	0x1000427c6                     ## symbol stub for: _memcpy
000000010004196a	xorl	%eax, %eax
000000010004196c	lock
000000010004196d	cmpxchgq	%rbx, (%r14)
0000000100041971	je	0x100041993
0000000100041973	movq	%rax, %r14
0000000100041976	movq	%rbx, %rdi
0000000100041979	callq	0x100042832                     ## symbol stub for: _pthread_rwlock_destroy
000000010004197e	movl	$0xd8, %esi
0000000100041983	movl	$0x8, %edx
0000000100041988	movq	%rbx, %rdi
000000010004198b	callq	___rust_dealloc
0000000100041990	movq	%r14, %rbx
0000000100041993	movq	%rbx, %rax
0000000100041996	addq	$0xe0, %rsp
000000010004199d	popq	%rbx
000000010004199e	popq	%r14
00000001000419a0	popq	%rbp
00000001000419a1	retq
00000001000419a2	movl	$0x8, %edi
00000001000419a7	movl	$0xd8, %esi
00000001000419ac	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000419b1	ud2
00000001000419b3	movq	%rax, %rbx
00000001000419b6	leaq	-0xe8(%rbp), %rdi
00000001000419bd	callq	__ZN4core3ptr75drop_in_place$LT$std..sys..unix..locks..pthread_rwlock..AllocatedRwLock$GT$17h61b3f77fa84dc5cbE ## core::ptr::drop_in_place$LT$std..sys..unix..locks..pthread_rwlock..AllocatedRwLock$GT$::h61b3f77fa84dc5cb
00000001000419c2	movq	%rbx, %rdi
00000001000419c5	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
00000001000419ca	nopw	(%rax,%rax)
__ZN3std9panicking11panic_count17is_zero_slow_path17h23a1fee99298e5e2E:
00000001000419d0	pushq	%rbp
00000001000419d1	movq	%rsp, %rbp
00000001000419d4	leaq	__ZN3std9panicking11panic_count17LOCAL_PANIC_COUNT7__getit3VAL17h546408c9f6581a4eE.0(%rip), %rdi ## std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::VAL::h546408c9f6581a4e (.0)
00000001000419db	callq	*(%rdi)
00000001000419dd	cmpq	$0x0, (%rax)
00000001000419e1	sete	%al
00000001000419e4	popq	%rbp
00000001000419e5	retq
00000001000419e6	nopw	%cs:(%rax,%rax)
__ZN3std10sys_common4once5queue4Once4call17hf241db9abbfabd67E:
00000001000419f0	pushq	%rbp
00000001000419f1	movq	%rsp, %rbp
00000001000419f4	pushq	%r15
00000001000419f6	pushq	%r14
00000001000419f8	pushq	%r13
00000001000419fa	pushq	%r12
00000001000419fc	pushq	%rbx
00000001000419fd	subq	$0x68, %rsp
0000000100041a01	movq	%r8, -0x48(%rbp)
0000000100041a05	movq	%rcx, -0x88(%rbp)
0000000100041a0c	movq	%rdx, -0x80(%rbp)
0000000100041a10	movl	%esi, -0x2c(%rbp)
0000000100041a13	movq	%rdi, %r12
0000000100041a16	movq	(%rdi), %rax
0000000100041a19	leaq	-0x76(%rbp), %r15
0000000100041a1d	movl	$0x2, %ecx
0000000100041a22	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit7destroy17h7f1d3092d394857dE(%rip), %r13 ## std::sys_common::thread_info::THREAD_INFO::__getit::destroy::h7f1d3092d394857d
0000000100041a29	movq	%rax, %r14
0000000100041a2c	testq	%rax, %rax
0000000100041a2f	jne	0x100041a61
0000000100041a31	jmp	0x100041a4a
0000000100041a33	nopw	%cs:(%rax,%rax)
0000000100041a3d	nopl	(%rax)
0000000100041a40	cmpb	$0x0, -0x2c(%rbp)
0000000100041a44	je	0x100041e68
0000000100041a4a	movq	%r14, %rax
0000000100041a4d	lock
0000000100041a4e	cmpxchgq	%rcx, (%r12)
0000000100041a53	je	0x100041d9a
0000000100041a59	movq	%rax, %r14
0000000100041a5c	testq	%rax, %rax
0000000100041a5f	je	0x100041a4a
0000000100041a61	cmpq	$0x1, %r14
0000000100041a65	je	0x100041a40
0000000100041a67	cmpq	$0x3, %r14
0000000100041a6b	je	0x100041dd9
0000000100041a71	movl	%r14d, %eax
0000000100041a74	andl	$0x3, %eax
0000000100041a77	cmpl	$0x2, %eax
0000000100041a7a	je	0x100041a9f
0000000100041a7c	jmp	0x100041ea3
0000000100041a81	nopw	%cs:(%rax,%rax)
0000000100041a8b	nopl	(%rax,%rax)
0000000100041a90	movl	%r14d, %eax
0000000100041a93	andl	$0x3, %eax
0000000100041a96	cmpl	$0x2, %eax
0000000100041a99	jne	0x100041d80
0000000100041a9f	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100041aa6	callq	*(%rdi)
0000000100041aa8	movzbl	(%rax), %eax
0000000100041aab	cmpl	$0x1, %eax
0000000100041aae	je	0x100041b41
0000000100041ab4	testl	%eax, %eax
0000000100041ab6	jne	0x100041de8
0000000100041abc	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100041ac3	callq	*(%rdi)
0000000100041ac5	cmpb	$0x1, (%rax)
0000000100041ac8	je	0x100041ae4
0000000100041aca	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::run_dtors::h1b9508fcca531689
0000000100041ad1	xorl	%esi, %esi
0000000100041ad3	callq	0x10004276c                     ## symbol stub for: __tlv_atexit
0000000100041ad8	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100041adf	callq	*(%rdi)
0000000100041ae1	movb	$0x1, (%rax)
0000000100041ae4	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100041aeb	callq	*(%rdi)
0000000100041aed	movq	0x10(%rax), %rcx
0000000100041af1	cmpq	0x8(%rax), %rcx
0000000100041af5	jne	0x100041b0c
0000000100041af7	movq	%rcx, %rdi
0000000100041afa	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h7504180b2f81aa9c
0000000100041aff	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100041b06	callq	*(%rdi)
0000000100041b08	movq	0x10(%rax), %rcx
0000000100041b0c	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100041b13	callq	*(%rdi)
0000000100041b15	movq	%rax, %rdx
0000000100041b18	movq	(%rax), %rsi
0000000100041b1b	shlq	$0x4, %rcx
0000000100041b1f	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041b26	callq	*(%rdi)
0000000100041b28	movq	%rax, (%rsi,%rcx)
0000000100041b2c	movq	%r13, 0x8(%rsi,%rcx)
0000000100041b31	incq	0x10(%rdx)
0000000100041b35	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100041b3c	callq	*(%rdi)
0000000100041b3e	movb	$0x1, (%rax)
0000000100041b41	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041b48	callq	*(%rdi)
0000000100041b4a	cmpq	$0x0, (%rax)
0000000100041b4e	jne	0x100041e00
0000000100041b54	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041b5b	callq	*(%rdi)
0000000100041b5d	movq	$-0x1, (%rax)
0000000100041b64	cmpl	$0x2, 0x8(%rax)
0000000100041b68	jne	0x100041b90
0000000100041b6a	xorl	%edi, %edi
0000000100041b6c	callq	__ZN3std6thread6Thread3new17h0a35214ffb5d302cE ## std::thread::Thread::new::h0a35214ffb5d302c
0000000100041b71	movq	%rax, %rcx
0000000100041b74	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041b7b	callq	*(%rdi)
0000000100041b7d	movq	$0x0, 0x8(%rax)
0000000100041b85	movq	%rcx, 0x20(%rax)
0000000100041b89	jmp	0x100041b9d
0000000100041b8b	nopl	(%rax,%rax)
0000000100041b90	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041b97	callq	*(%rdi)
0000000100041b99	movq	0x20(%rax), %rcx
0000000100041b9d	lock
0000000100041b9e	incq	(%rcx)
0000000100041ba1	jle	0x100041f07
0000000100041ba7	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041bae	callq	*(%rdi)
0000000100041bb0	incq	(%rax)
0000000100041bb3	testq	%rcx, %rcx
0000000100041bb6	je	0x100041de8
0000000100041bbc	leaq	-0x2(%r14), %rax
0000000100041bc0	movq	%rcx, -0x78(%rbp)
0000000100041bc4	movb	$0x0, -0x68(%rbp)
0000000100041bc8	movq	%rax, -0x70(%rbp)
0000000100041bcc	movq	%r14, %rax
0000000100041bcf	lock
0000000100041bd0	cmpxchgq	%r15, (%r12)
0000000100041bd5	je	0x100041d57
0000000100041bdb	movq	%rax, %r14
0000000100041bde	movq	-0x78(%rbp), %rdi
0000000100041be2	testq	%rdi, %rdi
0000000100041be5	je	0x100041a90
0000000100041beb	lock
0000000100041bec	decq	(%rdi)
0000000100041bef	jne	0x100041a90
0000000100041bf5	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100041bfa	jmp	0x100041a90
0000000100041bff	nop
0000000100041c00	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100041c07	callq	*(%rdi)
0000000100041c09	movzbl	(%rax), %eax
0000000100041c0c	cmpl	$0x1, %eax
0000000100041c0f	je	0x100041ca2
0000000100041c15	testl	%eax, %eax
0000000100041c17	jne	0x100041e23
0000000100041c1d	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100041c24	callq	*(%rdi)
0000000100041c26	cmpb	$0x1, (%rax)
0000000100041c29	je	0x100041c45
0000000100041c2b	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor9run_dtors17h1b9508fcca531689E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::run_dtors::h1b9508fcca531689
0000000100041c32	xorl	%esi, %esi
0000000100041c34	callq	0x10004276c                     ## symbol stub for: __tlv_atexit
0000000100041c39	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor10REGISTERED17h5a8a1d319cc8edc5E.0(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::REGISTERED::h5a8a1d319cc8edc5 (.0)
0000000100041c40	callq	*(%rdi)
0000000100041c42	movb	$0x1, (%rax)
0000000100041c45	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100041c4c	callq	*(%rdi)
0000000100041c4e	movq	0x10(%rax), %rcx
0000000100041c52	cmpq	0x8(%rax), %rcx
0000000100041c56	jne	0x100041c6d
0000000100041c58	movq	%rcx, %rdi
0000000100041c5b	callq	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7504180b2f81aa9cE ## alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve_for_push::h7504180b2f81aa9c
0000000100041c60	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100041c67	callq	*(%rdi)
0000000100041c69	movq	0x10(%rax), %rcx
0000000100041c6d	leaq	__ZN3std3sys4unix17thread_local_dtor13register_dtor5DTORS17h2dedf5dd4f8b0c31E(%rip), %rdi ## std::sys::unix::thread_local_dtor::register_dtor::DTORS::h2dedf5dd4f8b0c31
0000000100041c74	callq	*(%rdi)
0000000100041c76	movq	%rax, %rdx
0000000100041c79	movq	(%rax), %rsi
0000000100041c7c	shlq	$0x4, %rcx
0000000100041c80	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041c87	callq	*(%rdi)
0000000100041c89	movq	%rax, (%rsi,%rcx)
0000000100041c8d	movq	%r13, 0x8(%rsi,%rcx)
0000000100041c92	incq	0x10(%rdx)
0000000100041c96	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit5STATE17h1aafd5c44579e227E.0(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::STATE::h1aafd5c44579e227 (.0)
0000000100041c9d	callq	*(%rdi)
0000000100041c9f	movb	$0x1, (%rax)
0000000100041ca2	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041ca9	callq	*(%rdi)
0000000100041cab	cmpq	$0x0, (%rax)
0000000100041caf	jne	0x100041e40
0000000100041cb5	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041cbc	callq	*(%rdi)
0000000100041cbe	movq	$-0x1, (%rax)
0000000100041cc5	cmpl	$0x2, 0x8(%rax)
0000000100041cc9	jne	0x100041cf0
0000000100041ccb	xorl	%edi, %edi
0000000100041ccd	callq	__ZN3std6thread6Thread3new17h0a35214ffb5d302cE ## std::thread::Thread::new::h0a35214ffb5d302c
0000000100041cd2	movq	%rax, %r14
0000000100041cd5	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041cdc	callq	*(%rdi)
0000000100041cde	movq	$0x0, 0x8(%rax)
0000000100041ce6	movq	%r14, 0x20(%rax)
0000000100041cea	jmp	0x100041cfd
0000000100041cec	nopl	(%rax)
0000000100041cf0	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041cf7	callq	*(%rdi)
0000000100041cf9	movq	0x20(%rax), %r14
0000000100041cfd	lock
0000000100041cfe	incq	(%r14)
0000000100041d01	jle	0x100041f07
0000000100041d07	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041d0e	callq	*(%rdi)
0000000100041d10	incq	(%rax)
0000000100041d13	testq	%r14, %r14
0000000100041d16	je	0x100041e23
0000000100041d1c	lock
0000000100041d1d	decb	0x30(%r14)
0000000100041d21	je	0x100041d49
0000000100041d23	leaq	0x30(%r14), %rbx
0000000100041d27	nopw	(%rax,%rax)
0000000100041d30	movq	0x28(%r14), %rdi
0000000100041d34	movq	$-0x1, %rsi
0000000100041d3b	callq	0x100042796                     ## symbol stub for: _dispatch_semaphore_wait
0000000100041d40	testq	%rax, %rax
0000000100041d43	jne	0x100041d30
0000000100041d45	xorl	%eax, %eax
0000000100041d47	xchgb	%al, (%rbx)
0000000100041d49	lock
0000000100041d4a	decq	(%r14)
0000000100041d4d	jne	0x100041d57
0000000100041d4f	movq	%r14, %rdi
0000000100041d52	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100041d57	movzbl	-0x68(%rbp), %eax
0000000100041d5b	testb	%al, %al
0000000100041d5d	je	0x100041c00
0000000100041d63	movq	-0x78(%rbp), %rdi
0000000100041d67	testq	%rdi, %rdi
0000000100041d6a	je	0x100041d80
0000000100041d6c	lock
0000000100041d6d	decq	(%rdi)
0000000100041d70	jne	0x100041d80
0000000100041d72	callq	__ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hc2cbb37386bf5816E ## alloc::sync::Arc$LT$T$GT$::drop_slow::hc2cbb37386bf5816
0000000100041d77	nopw	(%rax,%rax)
0000000100041d80	movq	(%r12), %rax
0000000100041d84	movl	$0x2, %ecx
0000000100041d89	movq	%rax, %r14
0000000100041d8c	testq	%rax, %rax
0000000100041d8f	jne	0x100041a61
0000000100041d95	jmp	0x100041a4a
0000000100041d9a	movq	%r12, -0x40(%rbp)
0000000100041d9e	movq	$0x1, -0x38(%rbp)
0000000100041da6	cmpq	$0x1, %r14
0000000100041daa	movq	$0x3, -0x78(%rbp)
0000000100041db2	sete	-0x70(%rbp)
0000000100041db6	leaq	-0x78(%rbp), %rsi
0000000100041dba	movq	-0x80(%rbp), %rdi
0000000100041dbe	movq	-0x88(%rbp), %rax
0000000100041dc5	callq	*0x20(%rax)
0000000100041dc8	movq	-0x78(%rbp), %rax
0000000100041dcc	movq	%rax, -0x38(%rbp)
0000000100041dd0	leaq	-0x40(%rbp), %rdi
0000000100041dd4	callq	__ZN83_$LT$std..sys_common..once..queue..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6e0e7f1101c340a0E ## _$LT$std..sys_common..once..queue..WaiterQueue$u20$as$u20$core..ops..drop..Drop$GT$::drop::h6e0e7f1101c340a0
0000000100041dd9	addq	$0x68, %rsp
0000000100041ddd	popq	%rbx
0000000100041dde	popq	%r12
0000000100041de0	popq	%r13
0000000100041de2	popq	%r14
0000000100041de4	popq	%r15
0000000100041de6	popq	%rbp
0000000100041de7	retq
0000000100041de8	leaq	0x277a(%rip), %rdi
0000000100041def	leaq	0x6b6a(%rip), %rdx
0000000100041df6	movl	$0x5e, %esi
0000000100041dfb	callq	__ZN4core6option13expect_failed17he6bc26adfac46087E ## core::option::expect_failed::he6bc26adfac46087
0000000100041e00	leaq	0x1ea9(%rip), %rdi
0000000100041e07	leaq	0x681a(%rip), %rcx
0000000100041e0e	leaq	0x710b(%rip), %r8
0000000100041e15	leaq	-0x40(%rbp), %rdx
0000000100041e19	movl	$0x10, %esi
0000000100041e1e	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100041e23	leaq	0x273f(%rip), %rdi
0000000100041e2a	leaq	0x6b2f(%rip), %rdx
0000000100041e31	movl	$0x5e, %esi
0000000100041e36	callq	__ZN4core6option13expect_failed17he6bc26adfac46087E ## core::option::expect_failed::he6bc26adfac46087
0000000100041e3b	jmp	0x100041f07
0000000100041e40	leaq	0x1e69(%rip), %rdi
0000000100041e47	leaq	0x67da(%rip), %rcx
0000000100041e4e	leaq	0x70cb(%rip), %r8
0000000100041e55	leaq	-0x40(%rbp), %rdx
0000000100041e59	movl	$0x10, %esi
0000000100041e5e	callq	__ZN4core6result13unwrap_failed17h3575be054108b8beE ## core::result::unwrap_failed::h3575be054108b8be
0000000100041e63	jmp	0x100041f07
0000000100041e68	leaq	0x7711(%rip), %rax
0000000100041e6f	movq	%rax, -0x78(%rbp)
0000000100041e73	movq	$0x1, -0x70(%rbp)
0000000100041e7b	movq	$0x0, -0x58(%rbp)
0000000100041e83	leaq	0x1e66(%rip), %rax
0000000100041e8a	movq	%rax, -0x68(%rbp)
0000000100041e8e	movq	$0x0, -0x60(%rbp)
0000000100041e96	leaq	-0x78(%rbp), %rdi
0000000100041e9a	movq	-0x48(%rbp), %rsi
0000000100041e9e	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100041ea3	leaq	0x3761(%rip), %rdi
0000000100041eaa	movl	$0x40, %esi
0000000100041eaf	movq	-0x48(%rbp), %rdx
0000000100041eb3	callq	__ZN4core9panicking5panic17h3fbf905727b973e3E ## core::panicking::panic::h3fbf905727b973e3
0000000100041eb8	movq	%rax, %rbx
0000000100041ebb	leaq	-0x40(%rbp), %rdi
0000000100041ebf	callq	__ZN4core3ptr62drop_in_place$LT$std..sys_common..once..queue..WaiterQueue$GT$17h7fdd495ccc3176caE ## core::ptr::drop_in_place$LT$std..sys_common..once..queue..WaiterQueue$GT$::h7fdd495ccc3176ca
0000000100041ec4	movq	%rbx, %rdi
0000000100041ec7	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100041ecc	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100041ed1	jmp	0x100041f02
0000000100041ed3	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041eda	callq	*(%rdi)
0000000100041edc	movq	%rax, %rdi
0000000100041edf	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
0000000100041ee4	jmp	0x100041f02
0000000100041ee6	movq	%rax, %rbx
0000000100041ee9	leaq	__ZN3std10sys_common11thread_info11THREAD_INFO7__getit3VAL17hb50c4f3b3ce57647E(%rip), %rdi ## std::sys_common::thread_info::THREAD_INFO::__getit::VAL::hb50c4f3b3ce57647
0000000100041ef0	callq	*(%rdi)
0000000100041ef2	movq	%rax, %rdi
0000000100041ef5	callq	__ZN4core3ptr115drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$17h744dc318ddc23301E ## core::ptr::drop_in_place$LT$core..cell..RefMut$LT$core..option..Option$LT$std..sys_common..thread_info..ThreadInfo$GT$$GT$$GT$::h744dc318ddc23301
0000000100041efa	movq	%rbx, %rdi
0000000100041efd	callq	0x100042736                     ## symbol stub for: __Unwind_Resume
0000000100041f02	callq	__ZN4core3ptr44drop_in_place$LT$std..thread..PanicGuard$GT$17he4ed8af8217f1c16E ## core::ptr::drop_in_place$LT$std..thread..PanicGuard$GT$::he4ed8af8217f1c16
0000000100041f07	ud2
0000000100041f09	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
0000000100041f0e	nop
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h58da627012337dfcE:
0000000100041f10	pushq	%rbp
0000000100041f11	movq	%rsp, %rbp
0000000100041f14	pushq	%r14
0000000100041f16	pushq	%rbx
0000000100041f17	subq	$0x30, %rsp
0000000100041f1b	addq	%rdx, %rsi
0000000100041f1e	jb	0x100041f9b
0000000100041f20	movq	%rdi, %rbx
0000000100041f23	movq	0x8(%rdi), %rax
0000000100041f27	leaq	(%rax,%rax), %rcx
0000000100041f2b	cmpq	%rsi, %rcx
0000000100041f2e	cmovaq	%rcx, %rsi
0000000100041f32	cmpq	$0x9, %rsi
0000000100041f36	movl	$0x8, %r14d
0000000100041f3c	cmovaeq	%rsi, %r14
0000000100041f40	movq	%r14, %rsi
0000000100041f43	notq	%rsi
0000000100041f46	shrq	$0x3f, %rsi
0000000100041f4a	testq	%rax, %rax
0000000100041f4d	je	0x100041f64
0000000100041f4f	movq	(%rbx), %rcx
0000000100041f52	movq	%rcx, -0x28(%rbp)
0000000100041f56	movq	$0x1, -0x20(%rbp)
0000000100041f5e	movq	%rax, -0x18(%rbp)
0000000100041f62	jmp	0x100041f6c
0000000100041f64	movq	$0x0, -0x20(%rbp)
0000000100041f6c	leaq	-0x40(%rbp), %rdi
0000000100041f70	leaq	-0x28(%rbp), %rcx
0000000100041f74	movq	%r14, %rdx
0000000100041f77	callq	__ZN5alloc7raw_vec11finish_grow17hc8b13f3aab245f51E ## alloc::raw_vec::finish_grow::hc8b13f3aab245f51
0000000100041f7c	cmpq	$0x0, -0x40(%rbp)
0000000100041f81	movq	-0x38(%rbp), %rdi
0000000100041f85	je	0x100041fa0
0000000100041f87	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
0000000100041f91	cmpq	%rax, %rdi
0000000100041f94	je	0x100041fa7
0000000100041f96	testq	%rdi, %rdi
0000000100041f99	jne	0x100041fb0
0000000100041f9b	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
0000000100041fa0	movq	%rdi, (%rbx)
0000000100041fa3	movq	%r14, 0x8(%rbx)
0000000100041fa7	addq	$0x30, %rsp
0000000100041fab	popq	%rbx
0000000100041fac	popq	%r14
0000000100041fae	popq	%rbp
0000000100041faf	retq
0000000100041fb0	movq	-0x30(%rbp), %rsi
0000000100041fb4	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
0000000100041fb9	nopl	(%rax)
__ZN4core9panicking13assert_failed17h439e734ffaec8714E:
0000000100041fc0	pushq	%rbp
0000000100041fc1	movq	%rsp, %rbp
0000000100041fc4	subq	$0x50, %rsp
0000000100041fc8	movq	%rdi, -0x8(%rbp)
0000000100041fcc	leaq	0x3afd(%rip), %rax
0000000100041fd3	movq	%rax, -0x10(%rbp)
0000000100041fd7	movq	0x28(%rsi), %rax
0000000100041fdb	movq	%rax, -0x18(%rbp)
0000000100041fdf	movq	0x20(%rsi), %rax
0000000100041fe3	movq	%rax, -0x20(%rbp)
0000000100041fe7	movq	0x18(%rsi), %rax
0000000100041feb	movq	%rax, -0x28(%rbp)
0000000100041fef	movq	0x10(%rsi), %rax
0000000100041ff3	movq	%rax, -0x30(%rbp)
0000000100041ff7	movq	(%rsi), %rax
0000000100041ffa	movq	0x8(%rsi), %rcx
0000000100041ffe	movq	%rcx, -0x38(%rbp)
0000000100042002	movq	%rax, -0x40(%rbp)
0000000100042006	leaq	0x7733(%rip), %rax
000000010004200d	movq	%rax, (%rsp)
0000000100042011	leaq	0x7690(%rip), %rdx
0000000100042018	leaq	-0x8(%rbp), %rsi
000000010004201c	leaq	-0x10(%rbp), %rcx
0000000100042020	leaq	-0x40(%rbp), %r9
0000000100042024	movl	$0x1, %edi
0000000100042029	movq	%rdx, %r8
000000010004202c	callq	__ZN4core9panicking19assert_failed_inner17h6064066c055fb1fdE ## core::panicking::assert_failed_inner::h6064066c055fb1fd
0000000100042031	nopw	%cs:(%rax,%rax)
000000010004203b	nopl	(%rax,%rax)
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3200a7c95c7f2d93E:
0000000100042040	pushq	%rbp
0000000100042041	movq	%rsp, %rbp
0000000100042044	pushq	%r14
0000000100042046	pushq	%rbx
0000000100042047	subq	$0x30, %rsp
000000010004204b	addq	%rdx, %rsi
000000010004204e	jb	0x1000420cb
0000000100042050	movq	%rdi, %rbx
0000000100042053	movq	0x8(%rdi), %rax
0000000100042057	leaq	(%rax,%rax), %rcx
000000010004205b	cmpq	%rsi, %rcx
000000010004205e	cmovaq	%rcx, %rsi
0000000100042062	cmpq	$0x9, %rsi
0000000100042066	movl	$0x8, %r14d
000000010004206c	cmovaeq	%rsi, %r14
0000000100042070	movq	%r14, %rsi
0000000100042073	notq	%rsi
0000000100042076	shrq	$0x3f, %rsi
000000010004207a	testq	%rax, %rax
000000010004207d	je	0x100042094
000000010004207f	movq	(%rbx), %rcx
0000000100042082	movq	%rcx, -0x28(%rbp)
0000000100042086	movq	$0x1, -0x20(%rbp)
000000010004208e	movq	%rax, -0x18(%rbp)
0000000100042092	jmp	0x10004209c
0000000100042094	movq	$0x0, -0x20(%rbp)
000000010004209c	leaq	-0x40(%rbp), %rdi
00000001000420a0	leaq	-0x28(%rbp), %rcx
00000001000420a4	movq	%r14, %rdx
00000001000420a7	callq	__ZN5alloc7raw_vec11finish_grow17h93eef04547315975E ## alloc::raw_vec::finish_grow::h93eef04547315975
00000001000420ac	cmpq	$0x0, -0x40(%rbp)
00000001000420b1	movq	-0x38(%rbp), %rdi
00000001000420b5	je	0x1000420d0
00000001000420b7	movabsq	$-0x7fffffffffffffff, %rax      ## imm = 0x8000000000000001
00000001000420c1	cmpq	%rax, %rdi
00000001000420c4	je	0x1000420d7
00000001000420c6	testq	%rdi, %rdi
00000001000420c9	jne	0x1000420e0
00000001000420cb	callq	__ZN5alloc7raw_vec17capacity_overflow17ha39548fa324f1efbE ## alloc::raw_vec::capacity_overflow::ha39548fa324f1efb
00000001000420d0	movq	%rdi, (%rbx)
00000001000420d3	movq	%r14, 0x8(%rbx)
00000001000420d7	addq	$0x30, %rsp
00000001000420db	popq	%rbx
00000001000420dc	popq	%r14
00000001000420de	popq	%rbp
00000001000420df	retq
00000001000420e0	movq	-0x30(%rbp), %rsi
00000001000420e4	callq	__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E ## alloc::alloc::handle_alloc_error::hc9597b717574d8e2
00000001000420e9	nopl	(%rax)
__ZN5alloc5alloc18handle_alloc_error17hc9597b717574d8e2E:
00000001000420f0	pushq	%rbp
00000001000420f1	movq	%rsp, %rbp
00000001000420f4	callq	__ZN5alloc5alloc18handle_alloc_error8rt_error17hf65a1a7a6a62f8c4E ## alloc::alloc::handle_alloc_error::rt_error::hf65a1a7a6a62f8c4
00000001000420f9	nopl	(%rax)
__ZN4core6option13expect_failed17he6bc26adfac46087E:
0000000100042100	pushq	%rbp
0000000100042101	movq	%rsp, %rbp
0000000100042104	subq	$0x50, %rsp
0000000100042108	movq	%rdi, -0x10(%rbp)
000000010004210c	movq	%rsi, -0x8(%rbp)
0000000100042110	leaq	-0x10(%rbp), %rax
0000000100042114	movq	%rax, -0x20(%rbp)
0000000100042118	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010004211f	movq	%rax, -0x18(%rbp)
0000000100042123	leaq	0x7df6(%rip), %rax
000000010004212a	movq	%rax, -0x50(%rbp)
000000010004212e	movq	$0x1, -0x48(%rbp)
0000000100042136	movq	$0x0, -0x30(%rbp)
000000010004213e	leaq	-0x20(%rbp), %rax
0000000100042142	movq	%rax, -0x40(%rbp)
0000000100042146	movq	$0x1, -0x38(%rbp)
000000010004214e	leaq	-0x50(%rbp), %rdi
0000000100042152	movq	%rdx, %rsi
0000000100042155	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
000000010004215a	nopw	(%rax,%rax)
__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E:
0000000100042160	pushq	%rbp
0000000100042161	movq	%rsp, %rbp
0000000100042164	subq	$0x30, %rsp
0000000100042168	leaq	0x4589(%rip), %rax
000000010004216f	movq	%rax, -0x28(%rbp)
0000000100042173	leaq	0x7e06(%rip), %rax
000000010004217a	movq	%rax, -0x20(%rbp)
000000010004217e	movq	%rdi, -0x10(%rbp)
0000000100042182	movq	%rsi, -0x18(%rbp)
0000000100042186	movb	$0x1, -0x8(%rbp)
000000010004218a	leaq	-0x28(%rbp), %rdi
000000010004218e	callq	_rust_begin_unwind
0000000100042193	nopw	%cs:(%rax,%rax)
000000010004219d	nopl	(%rax)
__ZN4core9panicking18panic_nounwind_fmt17hb33dd6e1aef65fc2E:
00000001000421a0	pushq	%rbp
00000001000421a1	movq	%rsp, %rbp
00000001000421a4	subq	$0x30, %rsp
00000001000421a8	leaq	0x4549(%rip), %rax
00000001000421af	movq	%rax, -0x28(%rbp)
00000001000421b3	leaq	0x7dc6(%rip), %rax
00000001000421ba	movq	%rax, -0x20(%rbp)
00000001000421be	movq	%rdi, -0x10(%rbp)
00000001000421c2	movq	%rsi, -0x18(%rbp)
00000001000421c6	movb	$0x0, -0x8(%rbp)
00000001000421ca	leaq	-0x28(%rbp), %rdi
00000001000421ce	callq	_rust_begin_unwind
00000001000421d3	ud2
00000001000421d5	callq	__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E ## core::panicking::panic_cannot_unwind::he4134bb334e58935
00000001000421da	nopw	(%rax,%rax)
__ZN4core9panicking5panic17h3fbf905727b973e3E:
00000001000421e0	pushq	%rbp
00000001000421e1	movq	%rsp, %rbp
00000001000421e4	subq	$0x40, %rsp
00000001000421e8	movq	%rdi, -0x10(%rbp)
00000001000421ec	movq	%rsi, -0x8(%rbp)
00000001000421f0	leaq	-0x10(%rbp), %rax
00000001000421f4	movq	%rax, -0x40(%rbp)
00000001000421f8	movq	$0x1, -0x38(%rbp)
0000000100042200	movq	$0x0, -0x20(%rbp)
0000000100042208	leaq	0x44e9(%rip), %rax
000000010004220f	movq	%rax, -0x30(%rbp)
0000000100042213	movq	$0x0, -0x28(%rbp)
000000010004221b	leaq	-0x40(%rbp), %rdi
000000010004221f	movq	%rdx, %rsi
0000000100042222	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100042227	nopw	(%rax,%rax)
__ZN4core9panicking14panic_nounwind17h8fbf6b247d11c061E:
0000000100042230	pushq	%rbp
0000000100042231	movq	%rsp, %rbp
0000000100042234	subq	$0x40, %rsp
0000000100042238	movq	%rdi, -0x10(%rbp)
000000010004223c	movq	%rsi, -0x8(%rbp)
0000000100042240	leaq	-0x10(%rbp), %rax
0000000100042244	movq	%rax, -0x40(%rbp)
0000000100042248	movq	$0x1, -0x38(%rbp)
0000000100042250	movq	$0x0, -0x20(%rbp)
0000000100042258	leaq	0x4499(%rip), %rax
000000010004225f	movq	%rax, -0x30(%rbp)
0000000100042263	movq	$0x0, -0x28(%rbp)
000000010004226b	leaq	0x7d2e(%rip), %rsi
0000000100042272	leaq	-0x40(%rbp), %rdi
0000000100042276	callq	__ZN4core9panicking18panic_nounwind_fmt17hb33dd6e1aef65fc2E ## core::panicking::panic_nounwind_fmt::hb33dd6e1aef65fc2
000000010004227b	nopl	(%rax,%rax)
__ZN4core9panicking18panic_bounds_check17h032ea9df84e9c180E:
0000000100042280	pushq	%rbp
0000000100042281	movq	%rsp, %rbp
0000000100042284	subq	$0x60, %rsp
0000000100042288	movq	%rdi, -0x8(%rbp)
000000010004228c	movq	%rsi, -0x10(%rbp)
0000000100042290	leaq	-0x10(%rbp), %rax
0000000100042294	movq	%rax, -0x30(%rbp)
0000000100042298	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010004229f	movq	%rax, -0x28(%rbp)
00000001000422a3	leaq	-0x8(%rbp), %rcx
00000001000422a7	movq	%rcx, -0x20(%rbp)
00000001000422ab	movq	%rax, -0x18(%rbp)
00000001000422af	leaq	0x7d02(%rip), %rax
00000001000422b6	movq	%rax, -0x60(%rbp)
00000001000422ba	movq	$0x2, -0x58(%rbp)
00000001000422c2	movq	$0x0, -0x40(%rbp)
00000001000422ca	leaq	-0x30(%rbp), %rax
00000001000422ce	movq	%rax, -0x50(%rbp)
00000001000422d2	movq	$0x2, -0x48(%rbp)
00000001000422da	leaq	-0x60(%rbp), %rdi
00000001000422de	movq	%rdx, %rsi
00000001000422e1	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000422e6	nopw	%cs:(%rax,%rax)
__ZN4core9panicking19panic_cannot_unwind17he4134bb334e58935E:
00000001000422f0	pushq	%rbp
00000001000422f1	movq	%rsp, %rbp
00000001000422f4	leaq	0x4562(%rip), %rdi
00000001000422fb	movl	$0x26, %esi
0000000100042300	callq	__ZN4core9panicking14panic_nounwind17h8fbf6b247d11c061E ## core::panicking::panic_nounwind::h8fbf6b247d11c061
0000000100042305	nopw	%cs:(%rax,%rax)
000000010004230f	nop
__ZN4core9panicking19assert_failed_inner17h6064066c055fb1fdE:
0000000100042310	pushq	%rbp
0000000100042311	movq	%rsp, %rbp
0000000100042314	subq	$0xd0, %rsp
000000010004231b	movq	%rsi, -0x20(%rbp)
000000010004231f	movq	%rdx, -0x18(%rbp)
0000000100042323	movq	%rcx, -0x30(%rbp)
0000000100042327	movq	%r8, -0x28(%rbp)
000000010004232b	testb	%dil, %dil
000000010004232e	je	0x100042346
0000000100042330	movzbl	%dil, %eax
0000000100042334	cmpl	$0x1, %eax
0000000100042337	jne	0x1000423dd
000000010004233d	leaq	0x4541(%rip), %rax
0000000100042344	jmp	0x10004234d
0000000100042346	leaq	0x4536(%rip), %rax
000000010004234d	movq	%rax, -0x10(%rbp)
0000000100042351	movl	$0x2, %eax
0000000100042356	movq	0x10(%rbp), %rsi
000000010004235a	movq	%rax, -0x8(%rbp)
000000010004235e	cmpq	$0x0, (%r9)
0000000100042362	jne	0x1000423ff
0000000100042368	leaq	-0x10(%rbp), %rax
000000010004236c	movq	%rax, -0x70(%rbp)
0000000100042370	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
0000000100042377	movq	%rax, -0x68(%rbp)
000000010004237b	leaq	-0x20(%rbp), %rax
000000010004237f	movq	%rax, -0x60(%rbp)
0000000100042383	leaq	__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17habaec484e23b8351E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$::fmt::habaec484e23b8351
000000010004238a	movq	%rax, -0x58(%rbp)
000000010004238e	leaq	-0x30(%rbp), %rcx
0000000100042392	movq	%rcx, -0x50(%rbp)
0000000100042396	movq	%rax, -0x48(%rbp)
000000010004239a	leaq	0x7c37(%rip), %rax
00000001000423a1	movq	%rax, -0xa0(%rbp)
00000001000423a8	movq	$0x4, -0x98(%rbp)
00000001000423b3	movq	$0x0, -0x80(%rbp)
00000001000423bb	leaq	-0x70(%rbp), %rax
00000001000423bf	movq	%rax, -0x90(%rbp)
00000001000423c6	movq	$0x3, -0x88(%rbp)
00000001000423d1	leaq	-0xa0(%rbp), %rdi
00000001000423d8	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000423dd	leaq	0x44a3(%rip), %rax
00000001000423e4	movq	%rax, -0x10(%rbp)
00000001000423e8	movl	$0x7, %eax
00000001000423ed	movq	0x10(%rbp), %rsi
00000001000423f1	movq	%rax, -0x8(%rbp)
00000001000423f5	cmpq	$0x0, (%r9)
00000001000423f9	je	0x100042368
00000001000423ff	movq	0x28(%r9), %rax
0000000100042403	movq	%rax, -0xa8(%rbp)
000000010004240a	movq	0x20(%r9), %rax
000000010004240e	movq	%rax, -0xb0(%rbp)
0000000100042415	movq	0x18(%r9), %rax
0000000100042419	movq	%rax, -0xb8(%rbp)
0000000100042420	movq	0x10(%r9), %rax
0000000100042424	movq	%rax, -0xc0(%rbp)
000000010004242b	movq	(%r9), %rax
000000010004242e	movq	0x8(%r9), %rcx
0000000100042432	movq	%rcx, -0xc8(%rbp)
0000000100042439	movq	%rax, -0xd0(%rbp)
0000000100042440	leaq	-0x10(%rbp), %rax
0000000100042444	movq	%rax, -0x70(%rbp)
0000000100042448	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
000000010004244f	movq	%rax, -0x68(%rbp)
0000000100042453	leaq	-0x20(%rbp), %rax
0000000100042457	movq	%rax, -0x60(%rbp)
000000010004245b	leaq	__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17habaec484e23b8351E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$::fmt::habaec484e23b8351
0000000100042462	movq	%rax, -0x58(%rbp)
0000000100042466	leaq	-0x30(%rbp), %rcx
000000010004246a	movq	%rcx, -0x50(%rbp)
000000010004246e	movq	%rax, -0x48(%rbp)
0000000100042472	leaq	-0xd0(%rbp), %rax
0000000100042479	movq	%rax, -0x40(%rbp)
000000010004247d	leaq	__ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17hbcb535daa51f7025E(%rip), %rax ## _$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$::fmt::hbcb535daa51f7025
0000000100042484	movq	%rax, -0x38(%rbp)
0000000100042488	leaq	0x7b89(%rip), %rax
000000010004248f	movq	%rax, -0xa0(%rbp)
0000000100042496	movq	$0x4, -0x98(%rbp)
00000001000424a1	movq	$0x0, -0x80(%rbp)
00000001000424a9	leaq	-0x70(%rbp), %rax
00000001000424ad	movq	%rax, -0x90(%rbp)
00000001000424b4	movq	$0x4, -0x88(%rbp)
00000001000424bf	leaq	-0xa0(%rbp), %rdi
00000001000424c6	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000424cb	nopl	(%rax,%rax)
__ZN4core6result13unwrap_failed17h3575be054108b8beE:
00000001000424d0	pushq	%rbp
00000001000424d1	movq	%rsp, %rbp
00000001000424d4	subq	$0x70, %rsp
00000001000424d8	movq	%rdi, -0x10(%rbp)
00000001000424dc	movq	%rsi, -0x8(%rbp)
00000001000424e0	movq	%rdx, -0x20(%rbp)
00000001000424e4	movq	%rcx, -0x18(%rbp)
00000001000424e8	leaq	-0x10(%rbp), %rax
00000001000424ec	movq	%rax, -0x40(%rbp)
00000001000424f0	leaq	__ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha965ae2c4f0f8f9cE(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$::fmt::ha965ae2c4f0f8f9c
00000001000424f7	movq	%rax, -0x38(%rbp)
00000001000424fb	leaq	-0x20(%rbp), %rax
00000001000424ff	movq	%rax, -0x30(%rbp)
0000000100042503	leaq	__ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17habaec484e23b8351E(%rip), %rax ## _$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$::fmt::habaec484e23b8351
000000010004250a	movq	%rax, -0x28(%rbp)
000000010004250e	leaq	0x7b43(%rip), %rax
0000000100042515	movq	%rax, -0x70(%rbp)
0000000100042519	movq	$0x2, -0x68(%rbp)
0000000100042521	movq	$0x0, -0x50(%rbp)
0000000100042529	leaq	-0x40(%rbp), %rax
000000010004252d	movq	%rax, -0x60(%rbp)
0000000100042531	movq	$0x2, -0x58(%rbp)
0000000100042539	leaq	-0x70(%rbp), %rdi
000000010004253d	movq	%r8, %rsi
0000000100042540	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100042545	nopw	%cs:(%rax,%rax)
000000010004254f	nop
__ZN4core5slice5index26slice_start_index_len_fail17h3a1d3f77836c25b1E:
0000000100042550	pushq	%rbp
0000000100042551	movq	%rsp, %rbp
0000000100042554	subq	$0x60, %rsp
0000000100042558	movq	%rdi, -0x8(%rbp)
000000010004255c	movq	%rsi, -0x10(%rbp)
0000000100042560	leaq	-0x8(%rbp), %rax
0000000100042564	movq	%rax, -0x30(%rbp)
0000000100042568	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010004256f	movq	%rax, -0x28(%rbp)
0000000100042573	leaq	-0x10(%rbp), %rcx
0000000100042577	movq	%rcx, -0x20(%rbp)
000000010004257b	movq	%rax, -0x18(%rbp)
000000010004257f	leaq	0x7bd2(%rip), %rax
0000000100042586	movq	%rax, -0x60(%rbp)
000000010004258a	movq	$0x2, -0x58(%rbp)
0000000100042592	movq	$0x0, -0x40(%rbp)
000000010004259a	leaq	-0x30(%rbp), %rax
000000010004259e	movq	%rax, -0x50(%rbp)
00000001000425a2	movq	$0x2, -0x48(%rbp)
00000001000425aa	leaq	-0x60(%rbp), %rdi
00000001000425ae	movq	%rdx, %rsi
00000001000425b1	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000425b6	nopw	%cs:(%rax,%rax)
__ZN4core5slice5index24slice_end_index_len_fail17h36a4aa94eb3902e5E:
00000001000425c0	pushq	%rbp
00000001000425c1	movq	%rsp, %rbp
00000001000425c4	subq	$0x60, %rsp
00000001000425c8	movq	%rdi, -0x8(%rbp)
00000001000425cc	movq	%rsi, -0x10(%rbp)
00000001000425d0	leaq	-0x8(%rbp), %rax
00000001000425d4	movq	%rax, -0x30(%rbp)
00000001000425d8	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
00000001000425df	movq	%rax, -0x28(%rbp)
00000001000425e3	leaq	-0x10(%rbp), %rcx
00000001000425e7	movq	%rcx, -0x20(%rbp)
00000001000425eb	movq	%rax, -0x18(%rbp)
00000001000425ef	leaq	0x7b82(%rip), %rax
00000001000425f6	movq	%rax, -0x60(%rbp)
00000001000425fa	movq	$0x2, -0x58(%rbp)
0000000100042602	movq	$0x0, -0x40(%rbp)
000000010004260a	leaq	-0x30(%rbp), %rax
000000010004260e	movq	%rax, -0x50(%rbp)
0000000100042612	movq	$0x2, -0x48(%rbp)
000000010004261a	leaq	-0x60(%rbp), %rdi
000000010004261e	movq	%rdx, %rsi
0000000100042621	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100042626	nopw	%cs:(%rax,%rax)
__ZN4core5slice5index22slice_index_order_fail17h4ae574740f24bf16E:
0000000100042630	pushq	%rbp
0000000100042631	movq	%rsp, %rbp
0000000100042634	subq	$0x60, %rsp
0000000100042638	movq	%rdi, -0x8(%rbp)
000000010004263c	movq	%rsi, -0x10(%rbp)
0000000100042640	leaq	-0x8(%rbp), %rax
0000000100042644	movq	%rax, -0x30(%rbp)
0000000100042648	leaq	__ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hb110321cbc8e4d3bE(%rip), %rax ## core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$::fmt::hb110321cbc8e4d3b
000000010004264f	movq	%rax, -0x28(%rbp)
0000000100042653	leaq	-0x10(%rbp), %rcx
0000000100042657	movq	%rcx, -0x20(%rbp)
000000010004265b	movq	%rax, -0x18(%rbp)
000000010004265f	leaq	0x7b32(%rip), %rax
0000000100042666	movq	%rax, -0x60(%rbp)
000000010004266a	movq	$0x2, -0x58(%rbp)
0000000100042672	movq	$0x0, -0x40(%rbp)
000000010004267a	leaq	-0x30(%rbp), %rax
000000010004267e	movq	%rax, -0x50(%rbp)
0000000100042682	movq	$0x2, -0x48(%rbp)
000000010004268a	leaq	-0x60(%rbp), %rdi
000000010004268e	movq	%rdx, %rsi
0000000100042691	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
0000000100042696	nopw	%cs:(%rax,%rax)
__ZN4core3str6traits23str_index_overflow_fail17h0ab2fb2261e54947E:
00000001000426a0	pushq	%rbp
00000001000426a1	movq	%rsp, %rbp
00000001000426a4	subq	$0x30, %rsp
00000001000426a8	movq	%rdi, %rsi
00000001000426ab	leaq	0x7b06(%rip), %rax
00000001000426b2	movq	%rax, -0x30(%rbp)
00000001000426b6	movq	$0x1, -0x28(%rbp)
00000001000426be	movq	$0x0, -0x10(%rbp)
00000001000426c6	leaq	0x402b(%rip), %rax
00000001000426cd	movq	%rax, -0x20(%rbp)
00000001000426d1	movq	$0x0, -0x18(%rbp)
00000001000426d9	leaq	-0x30(%rbp), %rdi
00000001000426dd	callq	__ZN4core9panicking9panic_fmt17h8b25e6b7bc9d8aa4E ## core::panicking::panic_fmt::h8b25e6b7bc9d8aa4
00000001000426e2	nopw	%cs:(%rax,%rax)
00000001000426ec	nopl	(%rax)
__ZN4core3str16slice_error_fail17hdd8c6cbe6663e024E:
00000001000426f0	pushq	%rbp
00000001000426f1	movq	%rsp, %rbp
00000001000426f4	callq	__ZN4core3str19slice_error_fail_rt17h379e777cbb9d27fdE ## core::str::slice_error_fail_rt::h379e777cbb9d27fd
00000001000426f9	nopl	(%rax)
